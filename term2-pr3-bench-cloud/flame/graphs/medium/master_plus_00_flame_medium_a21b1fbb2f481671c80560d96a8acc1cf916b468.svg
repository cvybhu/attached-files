<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>[libc-2.33.so] (35 samples, 0.24%)</title><rect x="766.6" y="389" width="2.8" height="15.0" fill="rgb(215,216,10)" rx="2" ry="2" />
<text  x="769.60" y="399.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (82 samples, 0.56%)</title><rect x="1180.2" y="309" width="6.6" height="15.0" fill="rgb(229,0,0)" rx="2" ry="2" />
<text  x="1183.18" y="319.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (103 samples, 0.71%)</title><rect x="1178.5" y="389" width="8.3" height="15.0" fill="rgb(211,102,31)" rx="2" ry="2" />
<text  x="1181.48" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15 samples, 0.10%)</title><rect x="1170.1" y="405" width="1.2" height="15.0" fill="rgb(230,10,7)" rx="2" ry="2" />
<text  x="1173.12" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="581" width="956.1" height="15.0" fill="rgb(205,32,17)" rx="2" ry="2" />
<text  x="223.44" y="591.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (96 samples, 0.66%)</title><rect x="1179.0" y="357" width="7.8" height="15.0" fill="rgb(220,105,36)" rx="2" ry="2" />
<text  x="1182.05" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (6 samples, 0.04%)</title><rect x="1174.7" y="517" width="0.5" height="15.0" fill="rgb(207,105,8)" rx="2" ry="2" />
<text  x="1177.67" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (15 samples, 0.10%)</title><rect x="1188.1" y="597" width="1.3" height="15.0" fill="rgb(247,193,17)" rx="2" ry="2" />
<text  x="1191.13" y="607.5" ></text>
</g>
<g >
<title>[[vdso]] (14 samples, 0.10%)</title><rect x="10.1" y="645" width="1.1" height="15.0" fill="rgb(222,74,47)" rx="2" ry="2" />
<text  x="13.08" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (8,570 samples, 58.92%)</title><rect x="478.6" y="453" width="695.3" height="15.0" fill="rgb(214,132,35)" rx="2" ry="2" />
<text  x="481.59" y="463.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[[vdso]] (2,540 samples, 17.46%)</title><rect x="14.4" y="629" width="206.0" height="15.0" fill="rgb(252,62,40)" rx="2" ry="2" />
<text  x="17.38" y="639.5" >[[vdso]]</text>
</g>
<g >
<title>[libc-2.33.so] (17 samples, 0.12%)</title><rect x="598.0" y="421" width="1.4" height="15.0" fill="rgb(235,125,47)" rx="2" ry="2" />
<text  x="601.01" y="431.5" ></text>
</g>
<g >
<title>[unknown] (165 samples, 1.13%)</title><rect x="1176.5" y="645" width="13.4" height="15.0" fill="rgb(251,160,7)" rx="2" ry="2" />
<text  x="1179.53" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (106 samples, 0.73%)</title><rect x="1178.2" y="405" width="8.6" height="15.0" fill="rgb(243,39,30)" rx="2" ry="2" />
<text  x="1181.24" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (3 samples, 0.02%)</title><rect x="1189.4" y="597" width="0.2" height="15.0" fill="rgb(234,113,28)" rx="2" ry="2" />
<text  x="1192.35" y="607.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (12 samples, 0.08%)</title><rect x="1009.0" y="325" width="1.0" height="15.0" fill="rgb(249,24,47)" rx="2" ry="2" />
<text  x="1012.00" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="549" width="956.1" height="15.0" fill="rgb(222,78,47)" rx="2" ry="2" />
<text  x="223.44" y="559.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (32 samples, 0.22%)</title><rect x="1187.2" y="629" width="2.6" height="15.0" fill="rgb(251,66,50)" rx="2" ry="2" />
<text  x="1190.24" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (9,254 samples, 63.62%)</title><rect x="423.3" y="469" width="750.8" height="15.0" fill="rgb(236,73,24)" rx="2" ry="2" />
<text  x="426.34" y="479.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (5,958 samples, 40.96%)</title><rect x="686.8" y="405" width="483.3" height="15.0" fill="rgb(239,57,24)" rx="2" ry="2" />
<text  x="689.77" y="415.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (86 samples, 0.59%)</title><rect x="1179.9" y="325" width="6.9" height="15.0" fill="rgb(245,62,40)" rx="2" ry="2" />
<text  x="1182.86" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (9 samples, 0.06%)</title><rect x="1186.1" y="117" width="0.7" height="15.0" fill="rgb(214,186,45)" rx="2" ry="2" />
<text  x="1189.11" y="127.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (101 samples, 0.69%)</title><rect x="1178.6" y="373" width="8.2" height="15.0" fill="rgb(230,142,45)" rx="2" ry="2" />
<text  x="1181.64" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (5 samples, 0.03%)</title><rect x="1166.6" y="213" width="0.4" height="15.0" fill="rgb(230,39,10)" rx="2" ry="2" />
<text  x="1169.64" y="223.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1177.0" y="629" width="0.2" height="15.0" fill="rgb(208,14,44)" rx="2" ry="2" />
<text  x="1180.02" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (35 samples, 0.24%)</title><rect x="1184.0" y="197" width="2.8" height="15.0" fill="rgb(247,43,43)" rx="2" ry="2" />
<text  x="1187.00" y="207.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (3,020 samples, 20.76%)</title><rect x="922.0" y="357" width="245.0" height="15.0" fill="rgb(234,210,44)" rx="2" ry="2" />
<text  x="925.04" y="367.5" >[perf_simple_query_flame_a21b1fb..</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (115 samples, 0.79%)</title><rect x="1177.6" y="501" width="9.3" height="15.0" fill="rgb(243,51,44)" rx="2" ry="2" />
<text  x="1180.59" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (92 samples, 0.63%)</title><rect x="1179.4" y="341" width="7.4" height="15.0" fill="rgb(232,168,52)" rx="2" ry="2" />
<text  x="1182.37" y="351.5" ></text>
</g>
<g >
<title>[unknown] (32 samples, 0.22%)</title><rect x="1187.2" y="613" width="2.6" height="15.0" fill="rgb(241,225,48)" rx="2" ry="2" />
<text  x="1190.24" y="623.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (4,937 samples, 33.94%)</title><rect x="769.5" y="389" width="400.5" height="15.0" fill="rgb(238,141,11)" rx="2" ry="2" />
<text  x="772.52" y="399.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8ac..</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (9 samples, 0.06%)</title><rect x="1169.3" y="373" width="0.7" height="15.0" fill="rgb(254,102,39)" rx="2" ry="2" />
<text  x="1172.31" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (6 samples, 0.04%)</title><rect x="1176.5" y="581" width="0.5" height="15.0" fill="rgb(212,124,7)" rx="2" ry="2" />
<text  x="1179.53" y="591.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (15 samples, 0.10%)</title><rect x="422.1" y="469" width="1.2" height="15.0" fill="rgb(227,205,40)" rx="2" ry="2" />
<text  x="425.13" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1176.9" y="517" width="0.1" height="15.0" fill="rgb(214,152,22)" rx="2" ry="2" />
<text  x="1179.86" y="527.5" ></text>
</g>
<g >
<title>perf_simple_que (14,544 samples, 99.99%)</title><rect x="10.0" y="661" width="1179.9" height="15.0" fill="rgb(206,29,29)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >perf_simple_que</text>
</g>
<g >
<title>[libc-2.33.so] (15 samples, 0.10%)</title><rect x="920.7" y="357" width="1.2" height="15.0" fill="rgb(217,96,6)" rx="2" ry="2" />
<text  x="923.66" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (110 samples, 0.76%)</title><rect x="1177.9" y="421" width="8.9" height="15.0" fill="rgb(226,42,15)" rx="2" ry="2" />
<text  x="1180.91" y="431.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (138 samples, 0.95%)</title><rect x="1107.4" y="277" width="11.2" height="15.0" fill="rgb(221,196,0)" rx="2" ry="2" />
<text  x="1110.41" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (88 samples, 0.61%)</title><rect x="1159.9" y="229" width="7.1" height="15.0" fill="rgb(242,141,18)" rx="2" ry="2" />
<text  x="1162.90" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (4 samples, 0.03%)</title><rect x="1186.5" y="69" width="0.3" height="15.0" fill="rgb(230,112,43)" rx="2" ry="2" />
<text  x="1189.51" y="79.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (6 samples, 0.04%)</title><rect x="1176.5" y="565" width="0.5" height="15.0" fill="rgb(254,76,34)" rx="2" ry="2" />
<text  x="1179.53" y="575.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.05%)</title><rect x="1168.7" y="357" width="0.6" height="15.0" fill="rgb(220,32,27)" rx="2" ry="2" />
<text  x="1171.74" y="367.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (6 samples, 0.04%)</title><rect x="478.1" y="453" width="0.5" height="15.0" fill="rgb(239,30,11)" rx="2" ry="2" />
<text  x="481.11" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (71 samples, 0.49%)</title><rect x="1181.1" y="293" width="5.7" height="15.0" fill="rgb(221,208,51)" rx="2" ry="2" />
<text  x="1184.08" y="303.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="565" width="9.7" height="15.0" fill="rgb(217,50,43)" rx="2" ry="2" />
<text  x="1180.18" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="533" width="9.7" height="15.0" fill="rgb(230,41,14)" rx="2" ry="2" />
<text  x="1180.18" y="543.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1176.4" y="517" width="0.1" height="15.0" fill="rgb(233,203,47)" rx="2" ry="2" />
<text  x="1179.37" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (5 samples, 0.03%)</title><rect x="1186.4" y="85" width="0.4" height="15.0" fill="rgb(231,156,9)" rx="2" ry="2" />
<text  x="1189.43" y="95.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (597 samples, 4.10%)</title><rect x="1118.6" y="277" width="48.4" height="15.0" fill="rgb(207,220,25)" rx="2" ry="2" />
<text  x="1121.61" y="287.5" >[per..</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,784 samples, 81.02%)</title><rect x="220.5" y="533" width="956.0" height="15.0" fill="rgb(234,85,46)" rx="2" ry="2" />
<text  x="223.53" y="543.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[libc-2.33.so] (14,363 samples, 98.75%)</title><rect x="11.3" y="645" width="1165.2" height="15.0" fill="rgb(231,210,54)" rx="2" ry="2" />
<text  x="14.30" y="655.5" >[libc-2.33.so]</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.03%)</title><rect x="1174.1" y="485" width="0.3" height="15.0" fill="rgb(235,19,24)" rx="2" ry="2" />
<text  x="1177.10" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (4 samples, 0.03%)</title><rect x="1176.7" y="533" width="0.3" height="15.0" fill="rgb(245,28,36)" rx="2" ry="2" />
<text  x="1179.70" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="565" width="956.1" height="15.0" fill="rgb(247,81,40)" rx="2" ry="2" />
<text  x="223.44" y="575.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[libc-2.33.so] (120 samples, 0.83%)</title><rect x="1177.2" y="613" width="9.7" height="15.0" fill="rgb(232,15,11)" rx="2" ry="2" />
<text  x="1180.18" y="623.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.01%)</title><rect x="921.9" y="357" width="0.1" height="15.0" fill="rgb(215,143,18)" rx="2" ry="2" />
<text  x="924.87" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (23 samples, 0.16%)</title><rect x="1185.0" y="149" width="1.8" height="15.0" fill="rgb(226,68,7)" rx="2" ry="2" />
<text  x="1187.97" y="159.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1,383 samples, 9.51%)</title><rect x="1054.8" y="309" width="112.2" height="15.0" fill="rgb(248,58,33)" rx="2" ry="2" />
<text  x="1057.84" y="319.5" >[perf_simple_..</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1176.9" y="485" width="0.1" height="15.0" fill="rgb(237,49,26)" rx="2" ry="2" />
<text  x="1179.86" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (111 samples, 0.76%)</title><rect x="1177.8" y="437" width="9.0" height="15.0" fill="rgb(220,20,5)" rx="2" ry="2" />
<text  x="1180.83" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.07%)</title><rect x="1172.3" y="437" width="0.8" height="15.0" fill="rgb(242,73,50)" rx="2" ry="2" />
<text  x="1175.31" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="517" width="9.7" height="15.0" fill="rgb(249,201,44)" rx="2" ry="2" />
<text  x="1180.18" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1176.9" y="501" width="0.1" height="15.0" fill="rgb(251,132,47)" rx="2" ry="2" />
<text  x="1179.86" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (5 samples, 0.03%)</title><rect x="1176.6" y="549" width="0.4" height="15.0" fill="rgb(213,4,39)" rx="2" ry="2" />
<text  x="1179.61" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (313 samples, 2.15%)</title><rect x="1141.6" y="261" width="25.4" height="15.0" fill="rgb(205,114,49)" rx="2" ry="2" />
<text  x="1144.65" y="271.5" >[..</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,603 samples, 79.77%)</title><rect x="233.3" y="517" width="941.4" height="15.0" fill="rgb(217,132,51)" rx="2" ry="2" />
<text  x="236.34" y="527.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (32 samples, 0.22%)</title><rect x="1184.2" y="181" width="2.6" height="15.0" fill="rgb(245,124,26)" rx="2" ry="2" />
<text  x="1187.24" y="191.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (9 samples, 0.06%)</title><rect x="686.0" y="405" width="0.8" height="15.0" fill="rgb(253,211,15)" rx="2" ry="2" />
<text  x="689.04" y="415.5" ></text>
</g>
<g >
<title>[unknown] (124 samples, 0.85%)</title><rect x="1177.2" y="629" width="10.0" height="15.0" fill="rgb(213,89,14)" rx="2" ry="2" />
<text  x="1180.18" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (112 samples, 0.77%)</title><rect x="1177.7" y="453" width="9.1" height="15.0" fill="rgb(211,183,21)" rx="2" ry="2" />
<text  x="1180.75" y="463.5" ></text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="1189.6" y="597" width="0.2" height="15.0" fill="rgb(224,165,2)" rx="2" ry="2" />
<text  x="1192.59" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (9,943 samples, 68.36%)</title><rect x="367.4" y="485" width="806.7" height="15.0" fill="rgb(221,94,26)" rx="2" ry="2" />
<text  x="370.45" y="495.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1166.9" y="197" width="0.1" height="15.0" fill="rgb(233,123,35)" rx="2" ry="2" />
<text  x="1169.88" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1174.4" y="485" width="0.2" height="15.0" fill="rgb(242,28,27)" rx="2" ry="2" />
<text  x="1177.42" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1,936 samples, 13.31%)</title><rect x="1010.0" y="325" width="157.0" height="15.0" fill="rgb(230,171,3)" rx="2" ry="2" />
<text  x="1012.98" y="335.5" >[perf_simple_query_f..</text>
</g>
<g >
<title>[libc-2.33.so] (14 samples, 0.10%)</title><rect x="232.2" y="517" width="1.1" height="15.0" fill="rgb(215,150,19)" rx="2" ry="2" />
<text  x="235.21" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (40 samples, 0.28%)</title><rect x="1183.6" y="213" width="3.2" height="15.0" fill="rgb(232,174,42)" rx="2" ry="2" />
<text  x="1186.59" y="223.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (8,016 samples, 55.11%)</title><rect x="522.0" y="437" width="650.3" height="15.0" fill="rgb(239,36,27)" rx="2" ry="2" />
<text  x="525.00" y="447.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (7,055 samples, 48.50%)</title><rect x="599.4" y="421" width="572.3" height="15.0" fill="rgb(222,163,9)" rx="2" ry="2" />
<text  x="602.39" y="431.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[libc-2.33.so] (10 samples, 0.07%)</title><rect x="521.2" y="437" width="0.8" height="15.0" fill="rgb(212,174,40)" rx="2" ry="2" />
<text  x="524.18" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="629" width="956.1" height="15.0" fill="rgb(210,205,47)" rx="2" ry="2" />
<text  x="223.44" y="639.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (56 samples, 0.39%)</title><rect x="1182.3" y="261" width="4.5" height="15.0" fill="rgb(246,146,17)" rx="2" ry="2" />
<text  x="1185.29" y="271.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (1,145 samples, 7.87%)</title><rect x="1074.1" y="293" width="92.9" height="15.0" fill="rgb(227,216,18)" rx="2" ry="2" />
<text  x="1077.15" y="303.5" >[perf_simpl..</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="597" width="9.7" height="15.0" fill="rgb(222,184,28)" rx="2" ry="2" />
<text  x="1180.18" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (28 samples, 0.19%)</title><rect x="1184.6" y="165" width="2.2" height="15.0" fill="rgb(225,139,47)" rx="2" ry="2" />
<text  x="1187.56" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (4 samples, 0.03%)</title><rect x="1171.3" y="405" width="0.4" height="15.0" fill="rgb(247,153,38)" rx="2" ry="2" />
<text  x="1174.34" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (15 samples, 0.10%)</title><rect x="1185.6" y="133" width="1.2" height="15.0" fill="rgb(211,171,11)" rx="2" ry="2" />
<text  x="1188.62" y="143.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (3,854 samples, 26.50%)</title><rect x="856.6" y="373" width="312.7" height="15.0" fill="rgb(242,21,22)" rx="2" ry="2" />
<text  x="859.65" y="383.5" >[perf_simple_query_flame_a21b1fbb2f481671c..</text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.14%)</title><rect x="1167.0" y="357" width="1.7" height="15.0" fill="rgb(222,93,51)" rx="2" ry="2" />
<text  x="1170.04" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (6 samples, 0.04%)</title><rect x="1176.5" y="597" width="0.5" height="15.0" fill="rgb(237,50,9)" rx="2" ry="2" />
<text  x="1179.53" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (44 samples, 0.30%)</title><rect x="1183.3" y="229" width="3.5" height="15.0" fill="rgb(253,10,10)" rx="2" ry="2" />
<text  x="1186.27" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (15 samples, 0.10%)</title><rect x="1175.2" y="517" width="1.2" height="15.0" fill="rgb(243,200,53)" rx="2" ry="2" />
<text  x="1178.15" y="527.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="856.4" y="373" width="0.2" height="15.0" fill="rgb(209,74,8)" rx="2" ry="2" />
<text  x="859.40" y="383.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (6 samples, 0.04%)</title><rect x="1176.5" y="629" width="0.5" height="15.0" fill="rgb(254,6,17)" rx="2" ry="2" />
<text  x="1179.53" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (6 samples, 0.04%)</title><rect x="1176.5" y="613" width="0.5" height="15.0" fill="rgb(223,43,48)" rx="2" ry="2" />
<text  x="1179.53" y="623.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (61 samples, 0.42%)</title><rect x="1181.9" y="277" width="4.9" height="15.0" fill="rgb(239,10,25)" rx="2" ry="2" />
<text  x="1184.89" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (8 samples, 0.06%)</title><rect x="1186.2" y="101" width="0.6" height="15.0" fill="rgb(207,136,44)" rx="2" ry="2" />
<text  x="1189.19" y="111.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (229 samples, 1.57%)</title><rect x="1148.5" y="245" width="18.5" height="15.0" fill="rgb(206,23,53)" rx="2" ry="2" />
<text  x="1151.46" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.06%)</title><rect x="1173.1" y="437" width="0.8" height="15.0" fill="rgb(208,151,6)" rx="2" ry="2" />
<text  x="1176.13" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1186.7" y="37" width="0.1" height="15.0" fill="rgb(211,73,18)" rx="2" ry="2" />
<text  x="1189.67" y="47.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2 samples, 0.01%)</title><rect x="1186.7" y="53" width="0.1" height="15.0" fill="rgb(245,13,18)" rx="2" ry="2" />
<text  x="1189.67" y="63.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="597" width="956.1" height="15.0" fill="rgb(235,88,16)" rx="2" ry="2" />
<text  x="223.44" y="607.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (50 samples, 0.34%)</title><rect x="1182.8" y="245" width="4.0" height="15.0" fill="rgb(209,133,46)" rx="2" ry="2" />
<text  x="1185.78" y="255.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (113 samples, 0.78%)</title><rect x="1177.7" y="469" width="9.1" height="15.0" fill="rgb(253,3,4)" rx="2" ry="2" />
<text  x="1180.67" y="479.5" ></text>
</g>
<g >
<title>all (14,545 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(240,167,32)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (2,478 samples, 17.04%)</title><rect x="966.0" y="341" width="201.0" height="15.0" fill="rgb(225,63,50)" rx="2" ry="2" />
<text  x="969.01" y="351.5" >[perf_simple_query_flame_a..</text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.05%)</title><rect x="1171.7" y="421" width="0.6" height="15.0" fill="rgb(240,113,25)" rx="2" ry="2" />
<text  x="1174.75" y="431.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (113 samples, 0.78%)</title><rect x="1177.7" y="485" width="9.1" height="15.0" fill="rgb(223,210,15)" rx="2" ry="2" />
<text  x="1180.67" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="549" width="9.7" height="15.0" fill="rgb(235,29,38)" rx="2" ry="2" />
<text  x="1180.18" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (10,883 samples, 74.82%)</title><rect x="291.7" y="501" width="882.9" height="15.0" fill="rgb(208,212,8)" rx="2" ry="2" />
<text  x="294.67" y="511.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (120 samples, 0.83%)</title><rect x="1177.2" y="581" width="9.7" height="15.0" fill="rgb(207,130,11)" rx="2" ry="2" />
<text  x="1180.18" y="591.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468] (11,785 samples, 81.02%)</title><rect x="220.4" y="613" width="956.1" height="15.0" fill="rgb(253,191,22)" rx="2" ry="2" />
<text  x="223.44" y="623.5" >[perf_simple_query_flame_a21b1fbb2f481671c80560d96a8acc1cf916b468]</text>
</g>
<g >
<title>[libc-2.33.so] (10 samples, 0.07%)</title><rect x="1187.2" y="597" width="0.9" height="15.0" fill="rgb(251,159,24)" rx="2" ry="2" />
<text  x="1190.24" y="607.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (3 samples, 0.02%)</title><rect x="1173.9" y="453" width="0.2" height="15.0" fill="rgb(245,192,21)" rx="2" ry="2" />
<text  x="1176.86" y="463.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (2 samples, 0.01%)</title><rect x="291.4" y="501" width="0.2" height="15.0" fill="rgb(236,165,16)" rx="2" ry="2" />
<text  x="294.43" y="511.5" ></text>
</g>
</g>
</svg>
