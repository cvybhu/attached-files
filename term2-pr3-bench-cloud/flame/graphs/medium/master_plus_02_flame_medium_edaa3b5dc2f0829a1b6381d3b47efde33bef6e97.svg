<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="726" onload="init(evt)" viewBox="0 0 1200 726" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="726.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="709" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="709" > </text>
<g id="frames">
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (1,197 samples, 8.10%)</title><rect x="1067.9" y="293" width="95.6" height="15.0" fill="rgb(206,114,33)" rx="2" ry="2" />
<text  x="1070.85" y="303.5" >[perf_simpl..</text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (27 samples, 0.18%)</title><rect x="1165.4" y="373" width="2.2" height="15.0" fill="rgb(249,181,46)" rx="2" ry="2" />
<text  x="1168.40" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (131 samples, 0.89%)</title><rect x="1174.3" y="517" width="10.4" height="15.0" fill="rgb(216,83,49)" rx="2" ry="2" />
<text  x="1177.26" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (3 samples, 0.02%)</title><rect x="1169.0" y="405" width="0.2" height="15.0" fill="rgb(214,92,45)" rx="2" ry="2" />
<text  x="1171.99" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (19 samples, 0.13%)</title><rect x="1186.7" y="597" width="1.5" height="15.0" fill="rgb(220,81,33)" rx="2" ry="2" />
<text  x="1189.72" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,739 samples, 79.47%)</title><rect x="234.7" y="517" width="937.8" height="15.0" fill="rgb(230,185,22)" rx="2" ry="2" />
<text  x="237.72" y="527.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[libc-2.33.so] (11 samples, 0.07%)</title><rect x="423.1" y="469" width="0.9" height="15.0" fill="rgb(250,31,49)" rx="2" ry="2" />
<text  x="426.09" y="479.5" ></text>
</g>
<g >
<title>[[vdso]] (10 samples, 0.07%)</title><rect x="10.0" y="645" width="0.8" height="15.0" fill="rgb(213,36,21)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (88 samples, 0.60%)</title><rect x="1156.4" y="229" width="7.1" height="15.0" fill="rgb(251,113,35)" rx="2" ry="2" />
<text  x="1159.45" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (1,471 samples, 9.96%)</title><rect x="1046.0" y="309" width="117.5" height="15.0" fill="rgb(219,44,8)" rx="2" ry="2" />
<text  x="1048.97" y="319.5" >[perf_simple_q..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (9 samples, 0.06%)</title><rect x="1172.5" y="517" width="0.7" height="15.0" fill="rgb(247,25,12)" rx="2" ry="2" />
<text  x="1175.50" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (8,724 samples, 59.06%)</title><rect x="475.0" y="453" width="696.9" height="15.0" fill="rgb(235,101,2)" rx="2" ry="2" />
<text  x="478.02" y="463.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (33 samples, 0.22%)</title><rect x="1181.9" y="213" width="2.7" height="15.0" fill="rgb(214,133,41)" rx="2" ry="2" />
<text  x="1184.93" y="223.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1172.3" y="501" width="0.2" height="15.0" fill="rgb(250,112,47)" rx="2" ry="2" />
<text  x="1175.35" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="549" width="951.1" height="15.0" fill="rgb(235,11,46)" rx="2" ry="2" />
<text  x="225.66" y="559.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (3,025 samples, 20.48%)</title><rect x="921.8" y="357" width="241.7" height="15.0" fill="rgb(247,57,32)" rx="2" ry="2" />
<text  x="924.82" y="367.5" >[perf_simple_query_flame_edaa3b5..</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (10,036 samples, 67.94%)</title><rect x="370.3" y="485" width="801.7" height="15.0" fill="rgb(230,133,24)" rx="2" ry="2" />
<text  x="373.29" y="495.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (36 samples, 0.24%)</title><rect x="1181.7" y="229" width="2.9" height="15.0" fill="rgb(232,104,11)" rx="2" ry="2" />
<text  x="1184.69" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (10 samples, 0.07%)</title><rect x="1183.8" y="117" width="0.8" height="15.0" fill="rgb(206,33,49)" rx="2" ry="2" />
<text  x="1186.77" y="127.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (133 samples, 0.90%)</title><rect x="1174.1" y="613" width="10.6" height="15.0" fill="rgb(248,129,4)" rx="2" ry="2" />
<text  x="1177.10" y="623.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (3,850 samples, 26.06%)</title><rect x="857.8" y="373" width="307.6" height="15.0" fill="rgb(223,100,45)" rx="2" ry="2" />
<text  x="860.83" y="383.5" >[perf_simple_query_flame_edaa3b5dc2f0829a..</text>
</g>
<g >
<title>std::_Hash_bytes (22 samples, 0.15%)</title><rect x="1163.5" y="357" width="1.7" height="15.0" fill="rgb(239,140,19)" rx="2" ry="2" />
<text  x="1166.48" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="597" width="951.1" height="15.0" fill="rgb(216,25,53)" rx="2" ry="2" />
<text  x="225.66" y="607.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[libc-2.33.so] (21 samples, 0.14%)</title><rect x="1003.1" y="325" width="1.6" height="15.0" fill="rgb(209,200,28)" rx="2" ry="2" />
<text  x="1006.07" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (18 samples, 0.12%)</title><rect x="1183.1" y="165" width="1.5" height="15.0" fill="rgb(222,73,6)" rx="2" ry="2" />
<text  x="1186.13" y="175.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (2 samples, 0.01%)</title><rect x="1173.9" y="597" width="0.2" height="15.0" fill="rgb(224,174,42)" rx="2" ry="2" />
<text  x="1176.94" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (4,958 samples, 33.57%)</title><rect x="771.5" y="389" width="396.1" height="15.0" fill="rgb(224,107,20)" rx="2" ry="2" />
<text  x="774.48" y="399.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47e..</text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.03%)</title><rect x="1189.0" y="597" width="0.3" height="15.0" fill="rgb(239,222,33)" rx="2" ry="2" />
<text  x="1191.96" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (104 samples, 0.70%)</title><rect x="1176.4" y="357" width="8.3" height="15.0" fill="rgb(244,130,6)" rx="2" ry="2" />
<text  x="1179.42" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (133 samples, 0.90%)</title><rect x="1174.1" y="597" width="10.6" height="15.0" fill="rgb(236,208,12)" rx="2" ry="2" />
<text  x="1177.10" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (124 samples, 0.84%)</title><rect x="1174.8" y="469" width="9.9" height="15.0" fill="rgb(232,129,6)" rx="2" ry="2" />
<text  x="1177.82" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (42 samples, 0.28%)</title><rect x="1181.2" y="261" width="3.4" height="15.0" fill="rgb(213,80,49)" rx="2" ry="2" />
<text  x="1184.21" y="271.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (109 samples, 0.74%)</title><rect x="1176.0" y="389" width="8.7" height="15.0" fill="rgb(223,166,19)" rx="2" ry="2" />
<text  x="1179.02" y="399.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (167 samples, 1.13%)</title><rect x="1102.3" y="277" width="13.3" height="15.0" fill="rgb(223,19,36)" rx="2" ry="2" />
<text  x="1105.28" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (5,978 samples, 40.47%)</title><rect x="690.0" y="405" width="477.6" height="15.0" fill="rgb(243,106,23)" rx="2" ry="2" />
<text  x="692.99" y="415.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[[vdso]] (2,630 samples, 17.81%)</title><rect x="12.6" y="629" width="210.1" height="15.0" fill="rgb(214,120,36)" rx="2" ry="2" />
<text  x="15.56" y="639.5" >[[vdso]]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (65 samples, 0.44%)</title><rect x="1179.4" y="293" width="5.2" height="15.0" fill="rgb(217,171,8)" rx="2" ry="2" />
<text  x="1182.38" y="303.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.01%)</title><rect x="921.7" y="357" width="0.1" height="15.0" fill="rgb(233,199,45)" rx="2" ry="2" />
<text  x="924.66" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (84 samples, 0.57%)</title><rect x="1177.9" y="325" width="6.7" height="15.0" fill="rgb(215,6,11)" rx="2" ry="2" />
<text  x="1180.86" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (124 samples, 0.84%)</title><rect x="1174.8" y="437" width="9.9" height="15.0" fill="rgb(208,201,52)" rx="2" ry="2" />
<text  x="1177.82" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (37 samples, 0.25%)</title><rect x="1181.6" y="245" width="3.0" height="15.0" fill="rgb(222,124,14)" rx="2" ry="2" />
<text  x="1184.61" y="255.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (3 samples, 0.02%)</title><rect x="1184.3" y="53" width="0.3" height="15.0" fill="rgb(208,27,17)" rx="2" ry="2" />
<text  x="1187.33" y="63.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (9 samples, 0.06%)</title><rect x="1183.8" y="101" width="0.8" height="15.0" fill="rgb(237,144,22)" rx="2" ry="2" />
<text  x="1186.85" y="111.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,904 samples, 80.59%)</title><rect x="222.8" y="533" width="951.0" height="15.0" fill="rgb(212,30,14)" rx="2" ry="2" />
<text  x="225.82" y="543.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="613" width="951.1" height="15.0" fill="rgb(248,139,27)" rx="2" ry="2" />
<text  x="225.66" y="623.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[libc-2.33.so] (7 samples, 0.05%)</title><rect x="289.2" y="501" width="0.6" height="15.0" fill="rgb(207,50,26)" rx="2" ry="2" />
<text  x="292.20" y="511.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (9 samples, 0.06%)</title><rect x="689.3" y="405" width="0.7" height="15.0" fill="rgb(226,170,32)" rx="2" ry="2" />
<text  x="692.27" y="415.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (28 samples, 0.19%)</title><rect x="769.2" y="389" width="2.3" height="15.0" fill="rgb(247,3,22)" rx="2" ry="2" />
<text  x="772.24" y="399.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (2 samples, 0.01%)</title><rect x="1176.9" y="341" width="0.2" height="15.0" fill="rgb(232,215,19)" rx="2" ry="2" />
<text  x="1179.90" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (121 samples, 0.82%)</title><rect x="1175.1" y="421" width="9.6" height="15.0" fill="rgb(213,117,50)" rx="2" ry="2" />
<text  x="1178.06" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.05%)</title><rect x="1170.4" y="437" width="0.7" height="15.0" fill="rgb(244,179,31)" rx="2" ry="2" />
<text  x="1173.43" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (15 samples, 0.10%)</title><rect x="1183.4" y="149" width="1.2" height="15.0" fill="rgb(246,199,46)" rx="2" ry="2" />
<text  x="1186.37" y="159.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (1,987 samples, 13.45%)</title><rect x="1004.7" y="325" width="158.8" height="15.0" fill="rgb(210,96,28)" rx="2" ry="2" />
<text  x="1007.74" y="335.5" >[perf_simple_query_f..</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (129 samples, 0.87%)</title><rect x="1174.4" y="501" width="10.3" height="15.0" fill="rgb(232,169,41)" rx="2" ry="2" />
<text  x="1177.42" y="511.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (2 samples, 0.01%)</title><rect x="960.8" y="341" width="0.2" height="15.0" fill="rgb(244,36,28)" rx="2" ry="2" />
<text  x="963.81" y="351.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (9 samples, 0.06%)</title><rect x="920.9" y="357" width="0.8" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="923.94" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (94 samples, 0.64%)</title><rect x="1177.1" y="341" width="7.5" height="15.0" fill="rgb(227,60,15)" rx="2" ry="2" />
<text  x="1180.06" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (133 samples, 0.90%)</title><rect x="1174.1" y="533" width="10.6" height="15.0" fill="rgb(238,17,27)" rx="2" ry="2" />
<text  x="1177.10" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (7 samples, 0.05%)</title><rect x="1184.0" y="85" width="0.6" height="15.0" fill="rgb(218,0,20)" rx="2" ry="2" />
<text  x="1187.01" y="95.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (124 samples, 0.84%)</title><rect x="1174.8" y="453" width="9.9" height="15.0" fill="rgb(238,103,44)" rx="2" ry="2" />
<text  x="1177.82" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (56 samples, 0.38%)</title><rect x="1184.8" y="629" width="4.5" height="15.0" fill="rgb(233,105,54)" rx="2" ry="2" />
<text  x="1187.81" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (7 samples, 0.05%)</title><rect x="1173.2" y="517" width="0.6" height="15.0" fill="rgb(251,222,7)" rx="2" ry="2" />
<text  x="1176.22" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (3 samples, 0.02%)</title><rect x="1184.3" y="37" width="0.3" height="15.0" fill="rgb(212,151,5)" rx="2" ry="2" />
<text  x="1187.33" y="47.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.09%)</title><rect x="1169.3" y="421" width="1.1" height="15.0" fill="rgb(224,190,17)" rx="2" ry="2" />
<text  x="1172.31" y="431.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="565" width="951.1" height="15.0" fill="rgb(240,73,0)" rx="2" ry="2" />
<text  x="225.66" y="575.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>__dynamic_cast (3 samples, 0.02%)</title><rect x="1172.0" y="485" width="0.3" height="15.0" fill="rgb(244,203,7)" rx="2" ry="2" />
<text  x="1175.03" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (78 samples, 0.53%)</title><rect x="1178.3" y="309" width="6.3" height="15.0" fill="rgb(223,213,8)" rx="2" ry="2" />
<text  x="1181.34" y="319.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (14,558 samples, 98.56%)</title><rect x="10.8" y="645" width="1163.0" height="15.0" fill="rgb(223,144,26)" rx="2" ry="2" />
<text  x="13.80" y="655.5" >[libc-2.33.so]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (2 samples, 0.01%)</title><rect x="1173.9" y="581" width="0.2" height="15.0" fill="rgb(224,187,0)" rx="2" ry="2" />
<text  x="1176.94" y="591.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (133 samples, 0.90%)</title><rect x="1174.1" y="581" width="10.6" height="15.0" fill="rgb(243,87,24)" rx="2" ry="2" />
<text  x="1177.10" y="591.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (117 samples, 0.79%)</title><rect x="1175.4" y="405" width="9.3" height="15.0" fill="rgb(212,222,24)" rx="2" ry="2" />
<text  x="1178.38" y="415.5" ></text>
</g>
<g >
<title>all (14,771 samples, 100%)</title><rect x="10.0" y="677" width="1180.0" height="15.0" fill="rgb(227,95,4)" rx="2" ry="2" />
<text  x="13.00" y="687.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="581" width="951.1" height="15.0" fill="rgb(246,137,21)" rx="2" ry="2" />
<text  x="225.66" y="591.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (2 samples, 0.01%)</title><rect x="1186.6" y="597" width="0.1" height="15.0" fill="rgb(232,152,9)" rx="2" ry="2" />
<text  x="1189.56" y="607.5" ></text>
</g>
<g >
<title>[unknown] (56 samples, 0.38%)</title><rect x="1184.8" y="613" width="4.5" height="15.0" fill="rgb(215,191,27)" rx="2" ry="2" />
<text  x="1187.81" y="623.5" ></text>
</g>
<g >
<title>perf_simple_que (14,770 samples, 99.99%)</title><rect x="10.0" y="661" width="1179.9" height="15.0" fill="rgb(228,33,28)" rx="2" ry="2" />
<text  x="13.00" y="671.5" >perf_simple_que</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (24 samples, 0.16%)</title><rect x="1182.7" y="197" width="1.9" height="15.0" fill="rgb(218,128,48)" rx="2" ry="2" />
<text  x="1185.65" y="207.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (9,363 samples, 63.39%)</title><rect x="424.0" y="469" width="747.9" height="15.0" fill="rgb(207,29,21)" rx="2" ry="2" />
<text  x="426.97" y="479.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (133 samples, 0.90%)</title><rect x="1174.1" y="549" width="10.6" height="15.0" fill="rgb(214,0,40)" rx="2" ry="2" />
<text  x="1177.10" y="559.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (18 samples, 0.12%)</title><rect x="594.0" y="421" width="1.5" height="15.0" fill="rgb(233,134,38)" rx="2" ry="2" />
<text  x="597.05" y="431.5" ></text>
</g>
<g >
<title>[unknown] (134 samples, 0.91%)</title><rect x="1174.1" y="629" width="10.7" height="15.0" fill="rgb(207,35,11)" rx="2" ry="2" />
<text  x="1177.10" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (54 samples, 0.37%)</title><rect x="1180.3" y="277" width="4.3" height="15.0" fill="rgb(237,104,23)" rx="2" ry="2" />
<text  x="1183.25" y="287.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="474.8" y="453" width="0.2" height="15.0" fill="rgb(240,83,36)" rx="2" ry="2" />
<text  x="477.78" y="463.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="1173.9" y="629" width="0.2" height="15.0" fill="rgb(254,194,27)" rx="2" ry="2" />
<text  x="1176.86" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,048 samples, 74.80%)</title><rect x="289.8" y="501" width="882.5" height="15.0" fill="rgb(214,181,1)" rx="2" ry="2" />
<text  x="292.76" y="511.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (8,111 samples, 54.91%)</title><rect x="522.5" y="437" width="647.9" height="15.0" fill="rgb(212,193,34)" rx="2" ry="2" />
<text  x="525.47" y="447.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (22 samples, 0.15%)</title><rect x="1182.8" y="181" width="1.8" height="15.0" fill="rgb(241,151,17)" rx="2" ry="2" />
<text  x="1185.81" y="191.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (22 samples, 0.15%)</title><rect x="1184.8" y="597" width="1.8" height="15.0" fill="rgb(254,195,35)" rx="2" ry="2" />
<text  x="1187.81" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (307 samples, 2.08%)</title><rect x="1139.0" y="261" width="24.5" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="1141.95" y="271.5" >[..</text>
</g>
<g >
<title>[libc-2.33.so] (20 samples, 0.14%)</title><rect x="233.0" y="517" width="1.6" height="15.0" fill="rgb(220,43,40)" rx="2" ry="2" />
<text  x="236.04" y="527.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (7 samples, 0.05%)</title><rect x="1189.3" y="629" width="0.5" height="15.0" fill="rgb(219,106,20)" rx="2" ry="2" />
<text  x="1192.28" y="639.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (125 samples, 0.85%)</title><rect x="1174.7" y="485" width="10.0" height="15.0" fill="rgb(247,24,10)" rx="2" ry="2" />
<text  x="1177.74" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (11,906 samples, 80.60%)</title><rect x="222.7" y="629" width="951.1" height="15.0" fill="rgb(222,149,22)" rx="2" ry="2" />
<text  x="225.66" y="639.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (133 samples, 0.90%)</title><rect x="1174.1" y="565" width="10.6" height="15.0" fill="rgb(248,148,49)" rx="2" ry="2" />
<text  x="1177.10" y="575.5" ></text>
</g>
<g >
<title>[unknown] (202 samples, 1.37%)</title><rect x="1173.8" y="645" width="16.1" height="15.0" fill="rgb(209,13,0)" rx="2" ry="2" />
<text  x="1176.78" y="655.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.07%)</title><rect x="1171.1" y="437" width="0.8" height="15.0" fill="rgb(253,53,27)" rx="2" ry="2" />
<text  x="1174.07" y="447.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (8 samples, 0.05%)</title><rect x="521.8" y="437" width="0.6" height="15.0" fill="rgb(226,33,23)" rx="2" ry="2" />
<text  x="524.75" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.12%)</title><rect x="1167.6" y="405" width="1.4" height="15.0" fill="rgb(227,114,36)" rx="2" ry="2" />
<text  x="1170.55" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (13 samples, 0.09%)</title><rect x="1183.5" y="133" width="1.1" height="15.0" fill="rgb(245,84,13)" rx="2" ry="2" />
<text  x="1186.53" y="143.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (8 samples, 0.05%)</title><rect x="369.6" y="485" width="0.7" height="15.0" fill="rgb(239,93,52)" rx="2" ry="2" />
<text  x="372.65" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (599 samples, 4.06%)</title><rect x="1115.6" y="277" width="47.9" height="15.0" fill="rgb(208,105,25)" rx="2" ry="2" />
<text  x="1118.63" y="287.5" >[per..</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (179 samples, 1.21%)</title><rect x="1149.2" y="245" width="14.3" height="15.0" fill="rgb(217,23,23)" rx="2" ry="2" />
<text  x="1152.18" y="255.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (3 samples, 0.02%)</title><rect x="1184.3" y="69" width="0.3" height="15.0" fill="rgb(244,133,4)" rx="2" ry="2" />
<text  x="1187.33" y="79.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (7,183 samples, 48.63%)</title><rect x="595.5" y="421" width="573.8" height="15.0" fill="rgb(222,192,47)" rx="2" ry="2" />
<text  x="598.49" y="431.5" >[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97]</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (9 samples, 0.06%)</title><rect x="1188.2" y="597" width="0.8" height="15.0" fill="rgb(234,220,10)" rx="2" ry="2" />
<text  x="1191.24" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (106 samples, 0.72%)</title><rect x="1176.3" y="373" width="8.4" height="15.0" fill="rgb(227,229,34)" rx="2" ry="2" />
<text  x="1179.26" y="383.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1165.2" y="357" width="0.2" height="15.0" fill="rgb(227,61,48)" rx="2" ry="2" />
<text  x="1168.24" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (2,535 samples, 17.16%)</title><rect x="961.0" y="341" width="202.5" height="15.0" fill="rgb(231,33,50)" rx="2" ry="2" />
<text  x="963.97" y="351.5" >[perf_simple_query_flame_e..</text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (2 samples, 0.01%)</title><rect x="1173.9" y="613" width="0.2" height="15.0" fill="rgb(250,11,33)" rx="2" ry="2" />
<text  x="1176.94" y="623.5" ></text>
</g>
</g>
</svg>
