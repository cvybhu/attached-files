<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="774" onload="init(evt)" viewBox="0 0 1200 774" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="774.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="757" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="757" > </text>
<g id="frames">
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (127 samples, 0.87%)</title><rect x="1173.5" y="485" width="10.2" height="15.0" fill="rgb(249,72,25)" rx="2" ry="2" />
<text  x="1176.52" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="613" width="0.2" height="15.0" fill="rgb(208,107,1)" rx="2" ry="2" />
<text  x="1175.80" y="623.5" ></text>
</g>
<g >
<title>[unknown] (137 samples, 0.93%)</title><rect x="1173.0" y="677" width="11.1" height="15.0" fill="rgb(233,24,41)" rx="2" ry="2" />
<text  x="1176.04" y="687.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.12%)</title><rect x="1166.9" y="453" width="1.4" height="15.0" fill="rgb(219,195,12)" rx="2" ry="2" />
<text  x="1169.93" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (122 samples, 0.83%)</title><rect x="1173.9" y="453" width="9.8" height="15.0" fill="rgb(232,84,35)" rx="2" ry="2" />
<text  x="1176.93" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (66 samples, 0.45%)</title><rect x="1184.1" y="677" width="5.3" height="15.0" fill="rgb(247,155,28)" rx="2" ry="2" />
<text  x="1187.05" y="687.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (126 samples, 0.86%)</title><rect x="1173.6" y="469" width="10.1" height="15.0" fill="rgb(212,12,27)" rx="2" ry="2" />
<text  x="1176.60" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (4,973 samples, 33.87%)</title><rect x="767.3" y="437" width="399.6" height="15.0" fill="rgb(218,137,27)" rx="2" ry="2" />
<text  x="770.25" y="447.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d003..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (134 samples, 0.91%)</title><rect x="1173.0" y="645" width="10.8" height="15.0" fill="rgb(220,152,39)" rx="2" ry="2" />
<text  x="1176.04" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="1183.6" y="53" width="0.1" height="15.0" fill="rgb(246,133,35)" rx="2" ry="2" />
<text  x="1186.57" y="63.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="1183.6" y="37" width="0.1" height="15.0" fill="rgb(220,19,48)" rx="2" ry="2" />
<text  x="1186.57" y="47.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (3 samples, 0.02%)</title><rect x="1171.4" y="565" width="0.3" height="15.0" fill="rgb(208,187,1)" rx="2" ry="2" />
<text  x="1174.43" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="590.1" y="405" width="0.2" height="15.0" fill="rgb(235,182,15)" rx="2" ry="2" />
<text  x="593.11" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="565" width="0.2" height="15.0" fill="rgb(206,45,6)" rx="2" ry="2" />
<text  x="1175.80" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (24 samples, 0.16%)</title><rect x="1181.8" y="213" width="1.9" height="15.0" fill="rgb(206,180,1)" rx="2" ry="2" />
<text  x="1184.80" y="223.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (15 samples, 0.10%)</title><rect x="420.8" y="517" width="1.2" height="15.0" fill="rgb(234,99,10)" rx="2" ry="2" />
<text  x="423.77" y="527.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (14 samples, 0.10%)</title><rect x="1182.6" y="197" width="1.1" height="15.0" fill="rgb(232,178,4)" rx="2" ry="2" />
<text  x="1185.61" y="207.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (6 samples, 0.04%)</title><rect x="1189.4" y="677" width="0.4" height="15.0" fill="rgb(222,67,52)" rx="2" ry="2" />
<text  x="1192.36" y="687.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="590.1" y="437" width="0.2" height="15.0" fill="rgb(222,47,46)" rx="2" ry="2" />
<text  x="593.11" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (37 samples, 0.25%)</title><rect x="1180.8" y="261" width="2.9" height="15.0" fill="rgb(248,140,43)" rx="2" ry="2" />
<text  x="1183.76" y="271.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1171.3" y="549" width="0.1" height="15.0" fill="rgb(212,11,4)" rx="2" ry="2" />
<text  x="1174.27" y="559.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="860.9" y="421" width="0.2" height="15.0" fill="rgb(248,101,46)" rx="2" ry="2" />
<text  x="863.88" y="431.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (7 samples, 0.05%)</title><rect x="682.7" y="453" width="0.6" height="15.0" fill="rgb(209,47,33)" rx="2" ry="2" />
<text  x="685.70" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (12 samples, 0.08%)</title><rect x="1171.7" y="565" width="0.9" height="15.0" fill="rgb(222,52,1)" rx="2" ry="2" />
<text  x="1174.68" y="575.5" ></text>
</g>
<g >
<title>[[vdso]] (2,567 samples, 17.48%)</title><rect x="14.5" y="677" width="206.3" height="15.0" fill="rgb(253,81,26)" rx="2" ry="2" />
<text  x="17.50" y="687.5" >[[vdso]]</text>
</g>
<g >
<title>[libc-2.33.so] (5 samples, 0.03%)</title><rect x="961.8" y="389" width="0.4" height="15.0" fill="rgb(245,74,9)" rx="2" ry="2" />
<text  x="964.83" y="399.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="661" width="0.2" height="15.0" fill="rgb(254,186,49)" rx="2" ry="2" />
<text  x="1175.80" y="671.5" ></text>
</g>
<g >
<title>all (14,682 samples, 100%)</title><rect x="10.0" y="725" width="1180.0" height="15.0" fill="rgb(213,173,54)" rx="2" ry="2" />
<text  x="13.00" y="735.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1,180 samples, 8.04%)</title><rect x="1069.2" y="341" width="94.8" height="15.0" fill="rgb(221,192,18)" rx="2" ry="2" />
<text  x="1072.20" y="351.5" >[perf_simpl..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1163.8" y="245" width="0.2" height="15.0" fill="rgb(229,142,30)" rx="2" ry="2" />
<text  x="1166.80" y="255.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="613" width="952.0" height="15.0" fill="rgb(226,169,47)" rx="2" ry="2" />
<text  x="223.81" y="623.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[libc-2.33.so] (37 samples, 0.25%)</title><rect x="764.3" y="437" width="3.0" height="15.0" fill="rgb(238,58,26)" rx="2" ry="2" />
<text  x="767.28" y="447.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (15 samples, 0.10%)</title><rect x="589.1" y="469" width="1.2" height="15.0" fill="rgb(205,199,22)" rx="2" ry="2" />
<text  x="592.07" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="645" width="952.0" height="15.0" fill="rgb(252,225,13)" rx="2" ry="2" />
<text  x="223.81" y="655.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="597" width="952.0" height="15.0" fill="rgb(220,226,22)" rx="2" ry="2" />
<text  x="223.81" y="607.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="590.1" y="421" width="0.2" height="15.0" fill="rgb(216,80,21)" rx="2" ry="2" />
<text  x="593.11" y="431.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (7 samples, 0.05%)</title><rect x="518.7" y="485" width="0.5" height="15.0" fill="rgb(242,5,49)" rx="2" ry="2" />
<text  x="521.67" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (6,018 samples, 40.99%)</title><rect x="683.3" y="453" width="483.6" height="15.0" fill="rgb(223,163,8)" rx="2" ry="2" />
<text  x="686.26" y="463.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1183.5" y="117" width="0.2" height="15.0" fill="rgb(244,97,46)" rx="2" ry="2" />
<text  x="1186.49" y="127.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (9,318 samples, 63.47%)</title><rect x="422.0" y="517" width="748.9" height="15.0" fill="rgb(248,15,30)" rx="2" ry="2" />
<text  x="424.98" y="527.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (9 samples, 0.06%)</title><rect x="1187.9" y="645" width="0.7" height="15.0" fill="rgb(248,79,31)" rx="2" ry="2" />
<text  x="1190.91" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (59 samples, 0.40%)</title><rect x="1179.0" y="309" width="4.7" height="15.0" fill="rgb(213,186,16)" rx="2" ry="2" />
<text  x="1181.99" y="319.5" ></text>
</g>
<g >
<title>perf_simple_que (14,681 samples, 99.99%)</title><rect x="10.0" y="709" width="1179.9" height="15.0" fill="rgb(246,139,34)" rx="2" ry="2" />
<text  x="13.00" y="719.5" >perf_simple_que</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="677" width="952.0" height="15.0" fill="rgb(205,60,22)" rx="2" ry="2" />
<text  x="223.81" y="687.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="1183.6" y="69" width="0.1" height="15.0" fill="rgb(251,7,50)" rx="2" ry="2" />
<text  x="1186.57" y="79.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (68 samples, 0.46%)</title><rect x="1178.3" y="325" width="5.4" height="15.0" fill="rgb(228,72,36)" rx="2" ry="2" />
<text  x="1181.27" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (10,022 samples, 68.26%)</title><rect x="365.4" y="533" width="805.5" height="15.0" fill="rgb(226,144,37)" rx="2" ry="2" />
<text  x="368.40" y="543.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (44 samples, 0.30%)</title><rect x="1180.2" y="277" width="3.5" height="15.0" fill="rgb(205,102,31)" rx="2" ry="2" />
<text  x="1183.19" y="287.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (11 samples, 0.07%)</title><rect x="921.6" y="405" width="0.9" height="15.0" fill="rgb(214,191,13)" rx="2" ry="2" />
<text  x="924.64" y="415.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (14 samples, 0.10%)</title><rect x="230.6" y="565" width="1.1" height="15.0" fill="rgb(244,199,49)" rx="2" ry="2" />
<text  x="233.62" y="575.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (2 samples, 0.01%)</title><rect x="1168.3" y="453" width="0.2" height="15.0" fill="rgb(243,36,49)" rx="2" ry="2" />
<text  x="1171.30" y="463.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (128 samples, 0.87%)</title><rect x="1173.4" y="501" width="10.3" height="15.0" fill="rgb(236,78,22)" rx="2" ry="2" />
<text  x="1176.44" y="511.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (138 samples, 0.94%)</title><rect x="1105.6" y="325" width="11.1" height="15.0" fill="rgb(239,117,16)" rx="2" ry="2" />
<text  x="1108.61" y="335.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (4 samples, 0.03%)</title><rect x="1183.4" y="149" width="0.3" height="15.0" fill="rgb(223,14,39)" rx="2" ry="2" />
<text  x="1186.41" y="159.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (8,086 samples, 55.07%)</title><rect x="519.2" y="485" width="649.9" height="15.0" fill="rgb(243,75,22)" rx="2" ry="2" />
<text  x="522.23" y="495.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="581" width="952.0" height="15.0" fill="rgb(231,57,32)" rx="2" ry="2" />
<text  x="223.81" y="591.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[libc-2.33.so] (21 samples, 0.14%)</title><rect x="1005.5" y="373" width="1.7" height="15.0" fill="rgb(222,46,36)" rx="2" ry="2" />
<text  x="1008.47" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (7 samples, 0.05%)</title><rect x="1183.2" y="165" width="0.5" height="15.0" fill="rgb(242,32,30)" rx="2" ry="2" />
<text  x="1186.17" y="175.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="661" width="952.0" height="15.0" fill="rgb(241,113,5)" rx="2" ry="2" />
<text  x="223.81" y="671.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (12 samples, 0.08%)</title><rect x="1182.8" y="181" width="0.9" height="15.0" fill="rgb(209,34,29)" rx="2" ry="2" />
<text  x="1185.77" y="191.5" ></text>
</g>
<g >
<title>[[vdso]] (14 samples, 0.10%)</title><rect x="10.0" y="693" width="1.1" height="15.0" fill="rgb(234,188,37)" rx="2" ry="2" />
<text  x="13.00" y="703.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (204 samples, 1.39%)</title><rect x="1147.6" y="293" width="16.4" height="15.0" fill="rgb(239,53,39)" rx="2" ry="2" />
<text  x="1150.64" y="303.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (107 samples, 0.73%)</title><rect x="1175.1" y="405" width="8.6" height="15.0" fill="rgb(210,186,51)" rx="2" ry="2" />
<text  x="1178.13" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (31 samples, 0.21%)</title><rect x="1181.2" y="229" width="2.5" height="15.0" fill="rgb(224,16,21)" rx="2" ry="2" />
<text  x="1184.24" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (134 samples, 0.91%)</title><rect x="1173.0" y="629" width="10.8" height="15.0" fill="rgb(208,152,46)" rx="2" ry="2" />
<text  x="1176.04" y="639.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (2 samples, 0.01%)</title><rect x="1170.7" y="501" width="0.2" height="15.0" fill="rgb(209,30,30)" rx="2" ry="2" />
<text  x="1173.71" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,845 samples, 80.68%)</title><rect x="220.8" y="629" width="952.0" height="15.0" fill="rgb(241,46,38)" rx="2" ry="2" />
<text  x="223.81" y="639.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[unknown] (213 samples, 1.45%)</title><rect x="1172.8" y="693" width="17.1" height="15.0" fill="rgb(231,213,8)" rx="2" ry="2" />
<text  x="1175.80" y="703.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (100 samples, 0.68%)</title><rect x="1175.7" y="389" width="8.0" height="15.0" fill="rgb(210,65,32)" rx="2" ry="2" />
<text  x="1178.69" y="399.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="645" width="0.2" height="15.0" fill="rgb(246,228,5)" rx="2" ry="2" />
<text  x="1175.80" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (10,989 samples, 74.85%)</title><rect x="288.1" y="549" width="883.2" height="15.0" fill="rgb(219,65,48)" rx="2" ry="2" />
<text  x="291.08" y="559.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (8,650 samples, 58.92%)</title><rect x="475.5" y="501" width="695.2" height="15.0" fill="rgb(246,67,47)" rx="2" ry="2" />
<text  x="478.51" y="511.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[libc-2.33.so] (5 samples, 0.03%)</title><rect x="364.9" y="533" width="0.4" height="15.0" fill="rgb(208,125,16)" rx="2" ry="2" />
<text  x="367.92" y="543.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.05%)</title><rect x="1168.5" y="469" width="0.6" height="15.0" fill="rgb(232,3,6)" rx="2" ry="2" />
<text  x="1171.54" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (66 samples, 0.45%)</title><rect x="1158.7" y="277" width="5.3" height="15.0" fill="rgb(206,13,38)" rx="2" ry="2" />
<text  x="1161.74" y="287.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="581" width="0.2" height="15.0" fill="rgb(223,84,50)" rx="2" ry="2" />
<text  x="1175.80" y="591.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.14%)</title><rect x="1164.0" y="405" width="1.7" height="15.0" fill="rgb(241,227,11)" rx="2" ry="2" />
<text  x="1167.04" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (4 samples, 0.03%)</title><rect x="1170.9" y="533" width="0.3" height="15.0" fill="rgb(209,129,50)" rx="2" ry="2" />
<text  x="1173.87" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (134 samples, 0.91%)</title><rect x="1173.0" y="597" width="10.8" height="15.0" fill="rgb(208,46,2)" rx="2" ry="2" />
<text  x="1176.04" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (113 samples, 0.77%)</title><rect x="1174.6" y="421" width="9.1" height="15.0" fill="rgb(219,182,44)" rx="2" ry="2" />
<text  x="1177.65" y="431.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="1183.6" y="101" width="0.1" height="15.0" fill="rgb(214,215,23)" rx="2" ry="2" />
<text  x="1186.57" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (8 samples, 0.05%)</title><rect x="1166.3" y="421" width="0.6" height="15.0" fill="rgb(236,61,41)" rx="2" ry="2" />
<text  x="1169.29" y="431.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (134 samples, 0.91%)</title><rect x="1173.0" y="661" width="10.8" height="15.0" fill="rgb(238,75,52)" rx="2" ry="2" />
<text  x="1176.04" y="671.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (134 samples, 0.91%)</title><rect x="1173.0" y="613" width="10.8" height="15.0" fill="rgb(240,175,17)" rx="2" ry="2" />
<text  x="1176.04" y="623.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (2 samples, 0.01%)</title><rect x="1172.6" y="565" width="0.2" height="15.0" fill="rgb(206,166,0)" rx="2" ry="2" />
<text  x="1175.64" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (11,691 samples, 79.63%)</title><rect x="231.8" y="565" width="939.6" height="15.0" fill="rgb(230,132,1)" rx="2" ry="2" />
<text  x="234.82" y="575.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3,005 samples, 20.47%)</title><rect x="922.5" y="405" width="241.5" height="15.0" fill="rgb(207,168,1)" rx="2" ry="2" />
<text  x="925.53" y="415.5" >[perf_simple_query_flame_a82351d..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (277 samples, 1.89%)</title><rect x="1141.8" y="309" width="22.2" height="15.0" fill="rgb(245,176,40)" rx="2" ry="2" />
<text  x="1144.78" y="319.5" >[..</text>
</g>
<g >
<title>[libc-2.33.so] (14,453 samples, 98.44%)</title><rect x="11.2" y="693" width="1161.6" height="15.0" fill="rgb(215,103,28)" rx="2" ry="2" />
<text  x="14.21" y="703.5" >[libc-2.33.so]</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (129 samples, 0.88%)</title><rect x="1173.4" y="549" width="10.3" height="15.0" fill="rgb(243,117,8)" rx="2" ry="2" />
<text  x="1176.36" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (77 samples, 0.52%)</title><rect x="1177.5" y="341" width="6.2" height="15.0" fill="rgb(249,118,4)" rx="2" ry="2" />
<text  x="1180.54" y="351.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (48 samples, 0.33%)</title><rect x="1179.9" y="293" width="3.8" height="15.0" fill="rgb(237,172,10)" rx="2" ry="2" />
<text  x="1182.87" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (12 samples, 0.08%)</title><rect x="1169.7" y="485" width="1.0" height="15.0" fill="rgb(218,34,29)" rx="2" ry="2" />
<text  x="1172.75" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (116 samples, 0.79%)</title><rect x="1174.4" y="437" width="9.3" height="15.0" fill="rgb(205,3,52)" rx="2" ry="2" />
<text  x="1177.41" y="447.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3,797 samples, 25.86%)</title><rect x="861.1" y="421" width="305.2" height="15.0" fill="rgb(228,0,8)" rx="2" ry="2" />
<text  x="864.12" y="431.5" >[perf_simple_query_flame_a82351dc79d5f64f..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="597" width="0.2" height="15.0" fill="rgb(213,134,17)" rx="2" ry="2" />
<text  x="1175.80" y="607.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="590.1" y="453" width="0.2" height="15.0" fill="rgb(236,189,18)" rx="2" ry="2" />
<text  x="593.11" y="463.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="287.8" y="549" width="0.2" height="15.0" fill="rgb(220,181,31)" rx="2" ry="2" />
<text  x="290.76" y="559.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (133 samples, 0.91%)</title><rect x="1173.0" y="581" width="10.7" height="15.0" fill="rgb(212,106,14)" rx="2" ry="2" />
<text  x="1176.04" y="591.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (5 samples, 0.03%)</title><rect x="1163.6" y="261" width="0.4" height="15.0" fill="rgb(228,100,31)" rx="2" ry="2" />
<text  x="1166.64" y="271.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.05%)</title><rect x="1165.7" y="405" width="0.6" height="15.0" fill="rgb(254,74,36)" rx="2" ry="2" />
<text  x="1168.73" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (87 samples, 0.59%)</title><rect x="1176.7" y="357" width="7.0" height="15.0" fill="rgb(227,54,50)" rx="2" ry="2" />
<text  x="1179.74" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.05%)</title><rect x="1169.1" y="485" width="0.6" height="15.0" fill="rgb(232,71,30)" rx="2" ry="2" />
<text  x="1172.10" y="495.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (7,195 samples, 49.01%)</title><rect x="590.3" y="469" width="578.2" height="15.0" fill="rgb(214,133,51)" rx="2" ry="2" />
<text  x="593.28" y="479.5" >[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0]</text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.06%)</title><rect x="1188.6" y="645" width="0.8" height="15.0" fill="rgb(221,49,24)" rx="2" ry="2" />
<text  x="1191.63" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (33 samples, 0.22%)</title><rect x="1181.1" y="245" width="2.6" height="15.0" fill="rgb(208,141,49)" rx="2" ry="2" />
<text  x="1184.08" y="255.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (92 samples, 0.63%)</title><rect x="1176.3" y="373" width="7.4" height="15.0" fill="rgb(217,80,50)" rx="2" ry="2" />
<text  x="1179.34" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1,952 samples, 13.30%)</title><rect x="1007.2" y="373" width="156.8" height="15.0" fill="rgb(237,2,31)" rx="2" ry="2" />
<text  x="1010.16" y="383.5" >[perf_simple_query_f..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2,511 samples, 17.10%)</title><rect x="962.2" y="389" width="201.8" height="15.0" fill="rgb(221,157,44)" rx="2" ry="2" />
<text  x="965.23" y="399.5" >[perf_simple_query_flame_a..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (2 samples, 0.01%)</title><rect x="1183.6" y="85" width="0.1" height="15.0" fill="rgb(254,190,25)" rx="2" ry="2" />
<text  x="1186.57" y="95.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (589 samples, 4.01%)</title><rect x="1116.7" y="325" width="47.3" height="15.0" fill="rgb(209,146,45)" rx="2" ry="2" />
<text  x="1119.70" y="335.5" >[per..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (129 samples, 0.88%)</title><rect x="1173.4" y="533" width="10.3" height="15.0" fill="rgb(241,147,30)" rx="2" ry="2" />
<text  x="1176.36" y="543.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (129 samples, 0.88%)</title><rect x="1173.4" y="517" width="10.3" height="15.0" fill="rgb(233,213,4)" rx="2" ry="2" />
<text  x="1176.36" y="527.5" ></text>
</g>
<g >
<title>[libc-2.33.so] (25 samples, 0.17%)</title><rect x="1184.1" y="645" width="2.0" height="15.0" fill="rgb(222,185,13)" rx="2" ry="2" />
<text  x="1187.05" y="655.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (1,443 samples, 9.83%)</title><rect x="1048.1" y="357" width="115.9" height="15.0" fill="rgb(217,81,54)" rx="2" ry="2" />
<text  x="1051.07" y="367.5" >[perf_simple_q..</text>
</g>
<g >
<title>[libc-2.33.so] (3 samples, 0.02%)</title><rect x="1172.8" y="677" width="0.2" height="15.0" fill="rgb(250,81,16)" rx="2" ry="2" />
<text  x="1175.80" y="687.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (4 samples, 0.03%)</title><rect x="1183.4" y="133" width="0.3" height="15.0" fill="rgb(213,40,40)" rx="2" ry="2" />
<text  x="1186.41" y="143.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (131 samples, 0.89%)</title><rect x="1173.2" y="565" width="10.5" height="15.0" fill="rgb(237,115,50)" rx="2" ry="2" />
<text  x="1176.20" y="575.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (3 samples, 0.02%)</title><rect x="1172.8" y="629" width="0.2" height="15.0" fill="rgb(254,79,4)" rx="2" ry="2" />
<text  x="1175.80" y="639.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (23 samples, 0.16%)</title><rect x="1186.1" y="645" width="1.8" height="15.0" fill="rgb(251,52,39)" rx="2" ry="2" />
<text  x="1189.06" y="655.5" ></text>
</g>
<g >
<title>[unknown] (66 samples, 0.45%)</title><rect x="1184.1" y="661" width="5.3" height="15.0" fill="rgb(214,183,3)" rx="2" ry="2" />
<text  x="1187.05" y="671.5" ></text>
</g>
</g>
</svg>
