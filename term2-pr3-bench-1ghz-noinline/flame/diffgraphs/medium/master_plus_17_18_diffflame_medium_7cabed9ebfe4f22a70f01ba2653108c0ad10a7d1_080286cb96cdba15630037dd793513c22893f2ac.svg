<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (12 samples, 0.03%; +0.01%)</title><rect x="211.1" y="149" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="214.08" y="159.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (11 samples, 0.02%; -0.01%)</title><rect x="1007.3" y="261" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1010.26" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (4 samples, 0.01%; +0.00%)</title><rect x="99.0" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="102.04" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (4 samples, 0.01%; +0.01%)</title><rect x="696.3" y="485" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="699.31" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (38 samples, 0.08%; -0.04%)</title><rect x="516.2" y="293" width="0.9" height="15.0" fill="rgb(131,131,255)" rx="2" ry="2" />
<text  x="519.20" y="303.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%; +0.03%)</title><rect x="416.5" y="373" width="1.1" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="419.54" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (29 samples, 0.06%; +0.00%)</title><rect x="1060.6" y="277" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1063.60" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (98 samples, 0.21%; +0.01%)</title><rect x="953.2" y="373" width="2.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="956.21" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (12 samples, 0.03%; -0.00%)</title><rect x="685.5" y="485" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="688.53" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (38 samples, 0.08%; -0.02%)</title><rect x="283.8" y="373" width="1.0" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="286.84" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="514.4" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="517.42" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; -0.01%)</title><rect x="1045.3" y="229" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1048.26" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.01%; -0.00%)</title><rect x="137.4" y="277" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="140.37" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (29 samples, 0.06%; -0.01%)</title><rect x="528.4" y="293" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="531.41" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="579.3" y="341" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="582.32" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.01%; +0.00%)</title><rect x="752.2" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="755.23" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (76 samples, 0.16%; -0.00%)</title><rect x="145.6" y="197" width="1.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="148.61" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (33 samples, 0.07%; +0.02%)</title><rect x="1121.2" y="405" width="0.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1124.20" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (4 samples, 0.01%; +0.00%)</title><rect x="45.3" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="48.33" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (11 samples, 0.02%; +0.00%)</title><rect x="257.8" y="309" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="260.82" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%; +0.01%)</title><rect x="705.5" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="708.47" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (45 samples, 0.10%; -0.01%)</title><rect x="1160.5" y="453" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1163.48" y="463.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (10 samples, 0.02%; +0.00%)</title><rect x="853.5" y="453" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="856.54" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%; +0.01%)</title><rect x="204.1" y="149" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="207.08" y="159.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; +0.01%)</title><rect x="460.1" y="325" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="463.05" y="335.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%; +0.00%)</title><rect x="232.1" y="213" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="235.10" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.01%)</title><rect x="596.3" y="357" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="599.31" y="367.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (6 samples, 0.01%; -0.00%)</title><rect x="1169.8" y="469" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1172.81" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%; +0.04%)</title><rect x="856.3" y="341" width="1.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="859.31" y="351.5" ></text>
</g>
<g >
<title>query_state::query_state (5 samples, 0.01%; +0.01%)</title><rect x="59.8" y="453" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="62.81" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="612.6" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="615.60" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (4 samples, 0.01%; +0.00%)</title><rect x="276.5" y="309" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="279.46" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.01%)</title><rect x="721.5" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="724.48" y="431.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%; -0.01%)</title><rect x="903.6" y="325" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="906.55" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="721.7" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="724.66" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="578.9" y="325" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="581.90" y="335.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.02%; 0.00%)</title><rect x="869.2" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.25" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (16 samples, 0.03%; -0.00%)</title><rect x="451.9" y="261" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="454.90" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; +0.01%)</title><rect x="133.9" y="213" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="136.92" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.02%; 0.00%)</title><rect x="1142.1" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.06" y="511.5" ></text>
</g>
<g >
<title>perf_simple_que (47,163 samples, 100.00%; 0.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (119 samples, 0.25%; -0.03%)</title><rect x="1127.3" y="405" width="2.9" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="1130.25" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (47 samples, 0.10%; +0.02%)</title><rect x="765.0" y="325" width="1.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="768.04" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (4 samples, 0.01%; +0.00%)</title><rect x="860.7" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="863.74" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="621.1" y="437" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="624.10" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (9 samples, 0.02%; +0.00%)</title><rect x="670.1" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="673.12" y="479.5" ></text>
</g>
<g >
<title>operator delete (62 samples, 0.13%; -0.01%)</title><rect x="931.4" y="405" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="934.37" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (8 samples, 0.02%; -0.01%)</title><rect x="1002.3" y="293" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1005.30" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%; -0.01%)</title><rect x="1100.7" y="357" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1103.68" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.02%; 0.00%)</title><rect x="143.5" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.53" y="255.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,690 samples, 9.94%; +0.02%)</title><rect x="421.0" y="421" width="117.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="424.00" y="431.5" >query::querier..</text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (10 samples, 0.02%; +0.01%)</title><rect x="239.6" y="229" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="242.55" y="239.5" ></text>
</g>
<g >
<title>database::find_schema (278 samples, 0.59%; +0.00%)</title><rect x="759.7" y="405" width="6.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="762.66" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (8 samples, 0.02%; +0.01%)</title><rect x="276.6" y="309" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="279.56" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10 samples, 0.02%; +0.01%)</title><rect x="617.4" y="421" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="620.40" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (104 samples, 0.22%; -0.00%)</title><rect x="855.6" y="389" width="2.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="858.61" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%; +0.02%)</title><rect x="1040.5" y="229" width="0.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1043.51" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%; +0.00%)</title><rect x="662.7" y="469" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="665.74" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (297 samples, 0.63%; +0.02%)</title><rect x="501.1" y="245" width="7.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="504.11" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (5 samples, 0.01%; +0.01%)</title><rect x="34.9" y="485" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="37.89" y="495.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; +0.01%)</title><rect x="1145.3" y="485" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1148.34" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="454.3" y="277" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="457.30" y="287.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%; -0.01%)</title><rect x="557.5" y="325" width="1.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="560.48" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%; +0.01%)</title><rect x="773.2" y="341" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="776.25" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="817.1" y="309" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="820.06" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (19 samples, 0.04%; -0.00%)</title><rect x="1171.2" y="453" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1174.19" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (12 samples, 0.03%; +0.01%)</title><rect x="258.4" y="325" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="261.44" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (44 samples, 0.09%; +0.00%)</title><rect x="897.3" y="277" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="900.35" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (50 samples, 0.11%; +0.02%)</title><rect x="729.1" y="341" width="1.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="732.11" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; +0.01%)</title><rect x="1173.4" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1176.44" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%; +0.01%)</title><rect x="322.4" y="181" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="325.39" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%; -0.00%)</title><rect x="1114.9" y="389" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1117.89" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="1035.1" y="229" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1038.13" y="239.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.01%; +0.00%)</title><rect x="1062.6" y="309" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1065.55" y="319.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.01%)</title><rect x="795.8" y="165" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="798.79" y="175.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; 0.00%)</title><rect x="91.6" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="94.56" y="447.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (8 samples, 0.02%; -0.00%)</title><rect x="905.3" y="389" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="908.33" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (285 samples, 0.60%; -0.00%)</title><rect x="479.8" y="229" width="7.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="482.82" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.8" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.83" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (93 samples, 0.20%; +0.00%)</title><rect x="822.1" y="389" width="2.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="825.11" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%; 0.00%)</title><rect x="999.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1002.18" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (81 samples, 0.17%; -0.01%)</title><rect x="953.6" y="357" width="2.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="956.61" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="412.3" y="245" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="415.27" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.07%; 0.00%)</title><rect x="686.5" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.51" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (77 samples, 0.16%; -0.01%)</title><rect x="508.7" y="245" width="1.9" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="511.69" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%; -0.02%)</title><rect x="1046.6" y="229" width="1.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1049.56" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.01%; +0.01%)</title><rect x="1038.2" y="245" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1041.21" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="661.5" y="485" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="664.54" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (5 samples, 0.01%; -0.09%)</title><rect x="532.1" y="293" width="0.1" height="15.0" fill="rgb(41,41,255)" rx="2" ry="2" />
<text  x="535.08" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (36 samples, 0.08%; -0.00%)</title><rect x="97.1" y="405" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="100.14" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (50 samples, 0.11%; +0.01%)</title><rect x="794.5" y="165" width="1.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="797.51" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (12 samples, 0.03%; 0.00%)</title><rect x="714.8" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.75" y="511.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; -0.00%)</title><rect x="149.6" y="197" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="152.58" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (14 samples, 0.03%; -0.00%)</title><rect x="648.8" y="389" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="651.80" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (11 samples, 0.02%; 0.00%)</title><rect x="223.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="226.37" y="223.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (534 samples, 1.13%; -0.01%)</title><rect x="226.7" y="261" width="13.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="229.69" y="271.5" ></text>
</g>
<g >
<title>make_combined_reader (816 samples, 1.73%; 0.00%)</title><rect x="435.5" y="325" width="20.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="438.51" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (6 samples, 0.01%; 0.00%)</title><rect x="24.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.16" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%; 0.00%)</title><rect x="394.2" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="397.15" y="239.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%; 0.00%)</title><rect x="972.9" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="975.88" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (10 samples, 0.02%; +0.00%)</title><rect x="1140.3" y="261" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1143.31" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (14 samples, 0.03%; -0.01%)</title><rect x="144.0" y="229" width="0.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="147.01" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (23 samples, 0.05%; -0.01%)</title><rect x="281.2" y="389" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="284.16" y="399.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (4 samples, 0.01%; -0.02%)</title><rect x="487.1" y="293" width="0.1" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="490.10" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; +0.02%)</title><rect x="455.0" y="277" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="458.05" y="287.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%; 0.00%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.03" y="623.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (26 samples, 0.06%; -0.01%)</title><rect x="1167.7" y="469" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1170.68" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (15 samples, 0.03%; +0.01%)</title><rect x="210.2" y="117" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="213.21" y="127.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (5 samples, 0.01%; +0.00%)</title><rect x="841.7" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="844.65" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%; -0.01%)</title><rect x="803.5" y="117" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="806.55" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (16 samples, 0.03%; -0.00%)</title><rect x="95.8" y="405" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="98.84" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%; -0.00%)</title><rect x="153.4" y="181" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="156.39" y="191.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%; 0.00%)</title><rect x="686.5" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.51" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (8 samples, 0.02%; +0.00%)</title><rect x="934.1" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="937.15" y="399.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; 0.00%)</title><rect x="622.2" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.23" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (108 samples, 0.23%; +0.01%)</title><rect x="588.4" y="405" width="2.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="591.38" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%; 0.00%)</title><rect x="568.5" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="571.51" y="303.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (10 samples, 0.02%; -0.02%)</title><rect x="1075.6" y="325" width="0.2" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1078.56" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%; -0.01%)</title><rect x="792.7" y="229" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="795.74" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; +0.01%)</title><rect x="1118.2" y="357" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1121.22" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%; -0.01%)</title><rect x="281.9" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="284.94" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.04%; +0.00%)</title><rect x="204.5" y="165" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="207.53" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (323 samples, 0.68%; -0.01%)</title><rect x="799.1" y="197" width="8.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="802.12" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="958.5" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="961.47" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (11 samples, 0.02%; 0.00%)</title><rect x="231.8" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="234.82" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="537.6" y="405" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="540.64" y="415.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; -0.01%)</title><rect x="633.2" y="469" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="636.21" y="479.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (4 samples, 0.01%; +0.00%)</title><rect x="952.3" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="955.34" y="415.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.19%; +0.01%)</title><rect x="955.9" y="405" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="958.92" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (4 samples, 0.01%; +0.00%)</title><rect x="389.9" y="229" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="392.90" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%; +0.01%)</title><rect x="1141.3" y="485" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1144.29" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (11 samples, 0.02%; 0.00%)</title><rect x="185.9" y="53" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="188.89" y="63.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%; +0.00%)</title><rect x="684.7" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="687.68" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (75 samples, 0.16%; -0.01%)</title><rect x="498.2" y="261" width="1.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="501.18" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (4 samples, 0.01%; +0.00%)</title><rect x="938.2" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="941.15" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (11 samples, 0.02%; 0.00%)</title><rect x="868.0" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.97" y="399.5" ></text>
</g>
<g >
<title>main (46,089 samples, 97.72%; 0.00%)</title><rect x="24.4" y="613" width="1153.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.44" y="623.5" >main</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (33 samples, 0.07%; -0.01%)</title><rect x="1168.3" y="469" width="0.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1171.33" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (60 samples, 0.13%; 0.00%)</title><rect x="17.8" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.78" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (23 samples, 0.05%; +0.01%)</title><rect x="706.7" y="421" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="709.75" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (339 samples, 0.72%; +0.01%)</title><rect x="35.0" y="485" width="8.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="38.02" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (4 samples, 0.01%; -0.00%)</title><rect x="723.5" y="453" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="726.53" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="758.6" y="405" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="761.61" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (30 samples, 0.06%; +0.00%)</title><rect x="636.4" y="485" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="639.39" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%; -0.00%)</title><rect x="808.2" y="245" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="811.18" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (12 samples, 0.03%; +0.01%)</title><rect x="628.4" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="631.38" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; -0.00%)</title><rect x="937.5" y="373" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="940.50" y="383.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%; +0.01%)</title><rect x="481.8" y="197" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="484.82" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; +0.01%)</title><rect x="516.4" y="261" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="519.42" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.03%; -0.01%)</title><rect x="480.3" y="213" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="483.32" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (4 samples, 0.01%; -0.03%)</title><rect x="978.8" y="357" width="0.1" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="981.76" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.01%; +0.00%)</title><rect x="143.7" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="146.73" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (19 samples, 0.04%; -0.01%)</title><rect x="231.6" y="213" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="234.62" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.01%; -0.01%)</title><rect x="632.0" y="485" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="634.99" y="495.5" ></text>
</g>
<g >
<title>tracing::add_table_name (11 samples, 0.02%; -0.00%)</title><rect x="1136.2" y="421" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1139.21" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (23 samples, 0.05%; +0.01%)</title><rect x="275.8" y="277" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="278.81" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (18 samples, 0.04%; +0.01%)</title><rect x="743.2" y="293" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="746.22" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (21 samples, 0.04%; -0.00%)</title><rect x="986.2" y="341" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="989.19" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; -0.01%)</title><rect x="520.6" y="325" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="523.63" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (6 samples, 0.01%; 0.00%)</title><rect x="1113.1" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1116.11" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (13 samples, 0.03%; -0.00%)</title><rect x="413.2" y="293" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="416.19" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (847 samples, 1.80%; +0.00%)</title><rect x="1075.4" y="341" width="21.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1078.36" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.01%; +0.00%)</title><rect x="1017.8" y="213" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1020.82" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%; +0.01%)</title><rect x="655.1" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="658.13" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%; +0.01%)</title><rect x="958.1" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="961.12" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (6 samples, 0.01%; -0.00%)</title><rect x="866.5" y="501" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="869.47" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (8 samples, 0.02%; +0.00%)</title><rect x="778.3" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="781.25" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="533.4" y="341" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="536.39" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (12 samples, 0.03%; +0.02%)</title><rect x="551.1" y="421" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="554.12" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (75 samples, 0.16%; +0.01%)</title><rect x="300.3" y="245" width="1.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="303.25" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="816.3" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="819.26" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="319.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.02%)</title><rect x="892.0" y="293" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="895.02" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (19 samples, 0.04%; +0.02%)</title><rect x="584.0" y="405" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="587.02" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (20 samples, 0.04%; +0.03%)</title><rect x="259.3" y="341" width="0.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="262.27" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.00%)</title><rect x="1123.4" y="405" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1126.45" y="415.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (36 samples, 0.08%; 0.00%)</title><rect x="803.4" y="149" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="806.42" y="159.5" ></text>
</g>
<g >
<title>operator delete (7 samples, 0.01%; +0.01%)</title><rect x="556.0" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="559.03" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (31 samples, 0.07%; -0.01%)</title><rect x="574.3" y="357" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="577.27" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (31 samples, 0.07%; -0.02%)</title><rect x="567.2" y="261" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="570.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (10 samples, 0.02%; +0.01%)</title><rect x="954.3" y="325" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="957.29" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%; -0.01%)</title><rect x="274.1" y="261" width="1.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="277.06" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; 0.00%)</title><rect x="1103.2" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.16" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%; -0.01%)</title><rect x="302.0" y="197" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="305.00" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="407.5" y="277" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="410.51" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (33 samples, 0.07%; +0.03%)</title><rect x="252.1" y="277" width="0.8" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="255.06" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (19 samples, 0.04%; +0.01%)</title><rect x="252.9" y="277" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="255.89" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,388 samples, 7.18%; -0.00%)</title><rect x="303.2" y="229" width="84.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="306.15" y="239.5" >compact_m..</text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (4 samples, 0.01%; 0.00%)</title><rect x="1094.7" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1097.70" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (12 samples, 0.03%; -0.03%)</title><rect x="1062.7" y="325" width="0.3" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1065.65" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (14 samples, 0.03%; +0.02%)</title><rect x="512.0" y="277" width="0.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="514.97" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (86 samples, 0.18%; 0.00%)</title><rect x="682.8" y="485" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="685.83" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.03%; +0.00%)</title><rect x="508.0" y="213" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="511.04" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (13 samples, 0.03%; -0.00%)</title><rect x="1147.5" y="469" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1150.54" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (37 samples, 0.08%; 0.00%)</title><rect x="646.5" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.47" y="415.5" ></text>
</g>
<g >
<title>row_cache::make_reader (436 samples, 0.92%; +0.01%)</title><rect x="521.8" y="341" width="10.9" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="524.78" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (23 samples, 0.05%; +0.01%)</title><rect x="887.6" y="373" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="890.56" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (434 samples, 0.92%; -0.02%)</title><rect x="890.3" y="357" width="10.9" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="893.34" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (40 samples, 0.08%; -0.00%)</title><rect x="93.3" y="421" width="1.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="96.34" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (156 samples, 0.33%; -0.01%)</title><rect x="240.1" y="261" width="3.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="243.06" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (17 samples, 0.04%; +0.01%)</title><rect x="1050.0" y="293" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1053.04" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (6 samples, 0.01%; +0.00%)</title><rect x="1044.5" y="277" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1047.46" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%; +0.01%)</title><rect x="712.8" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="715.80" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (10 samples, 0.02%; +0.01%)</title><rect x="1108.2" y="373" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1111.19" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (14 samples, 0.03%; +0.00%)</title><rect x="424.8" y="357" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="427.80" y="367.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.01%; +0.01%)</title><rect x="596.9" y="389" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="599.94" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (7 samples, 0.01%; +0.01%)</title><rect x="948.1" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="951.09" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (34 samples, 0.07%; +0.03%)</title><rect x="481.0" y="197" width="0.8" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="483.97" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.03%; +0.01%)</title><rect x="669.0" y="485" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="671.97" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (72 samples, 0.15%; +0.00%)</title><rect x="825.5" y="325" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="828.46" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (10 samples, 0.02%; -0.00%)</title><rect x="869.2" y="341" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="872.25" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; -0.01%)</title><rect x="928.9" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="931.87" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (102 samples, 0.22%; +0.03%)</title><rect x="679.2" y="453" width="2.6" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="682.25" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.01%)</title><rect x="507.3" y="181" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="510.31" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; -0.01%)</title><rect x="77.1" y="453" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="80.05" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (10 samples, 0.02%; +0.02%)</title><rect x="623.6" y="405" width="0.2" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="626.58" y="415.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (6 samples, 0.01%; 0.00%)</title><rect x="1140.6" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%; -0.00%)</title><rect x="414.0" y="357" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="416.99" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="437" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.19" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="292.4" y="261" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="295.42" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.01%; 0.00%)</title><rect x="420.6" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="423.60" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%; +0.01%)</title><rect x="24.7" y="517" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="27.69" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.01%)</title><rect x="1048.8" y="197" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1051.76" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%; -0.01%)</title><rect x="512.5" y="277" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="515.52" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (221 samples, 0.47%; -0.04%)</title><rect x="130.0" y="261" width="5.5" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="132.97" y="271.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="597" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (4 samples, 0.01%; +0.01%)</title><rect x="985.8" y="341" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="988.79" y="351.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (5 samples, 0.01%; +0.01%)</title><rect x="457.1" y="341" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="460.13" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="549" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="559.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%; +0.02%)</title><rect x="929.5" y="389" width="0.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="932.47" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (163 samples, 0.35%; 0.00%)</title><rect x="1019.0" y="229" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1021.97" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="192.2" y="117" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="195.24" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (35 samples, 0.07%; +0.01%)</title><rect x="938.7" y="341" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="941.65" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (18 samples, 0.04%; -0.01%)</title><rect x="75.8" y="453" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="78.83" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (9 samples, 0.02%; +0.00%)</title><rect x="922.9" y="389" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="925.87" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (9 samples, 0.02%; +0.00%)</title><rect x="418.9" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="421.92" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.01%)</title><rect x="491.1" y="277" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="494.05" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (11 samples, 0.02%; +0.01%)</title><rect x="595.0" y="405" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="598.03" y="415.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (23 samples, 0.05%; 0.00%)</title><rect x="180.9" y="53" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="183.93" y="63.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%; +0.01%)</title><rect x="849.9" y="405" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="852.88" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (130 samples, 0.28%; +0.00%)</title><rect x="1069.8" y="309" width="3.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1072.81" y="319.5" ></text>
</g>
<g >
<title>auth::resource::parent (88 samples, 0.19%; +0.02%)</title><rect x="782.0" y="325" width="2.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="785.03" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (33 samples, 0.07%; +0.01%)</title><rect x="844.6" y="373" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="847.60" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (19 samples, 0.04%; -0.04%)</title><rect x="763.6" y="325" width="0.5" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="766.59" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (110 samples, 0.23%; -0.00%)</title><rect x="818.9" y="341" width="2.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="821.86" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%; -0.03%)</title><rect x="239.9" y="245" width="0.2" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="242.88" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.01%)</title><rect x="904.9" y="373" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="907.88" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; +0.00%)</title><rect x="99.7" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="102.70" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (4 samples, 0.01%; 0.00%)</title><rect x="905.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="908.23" y="399.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%; 0.00%)</title><rect x="1153.9" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.95" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (13 samples, 0.03%; +0.01%)</title><rect x="1045.6" y="277" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1048.59" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (29 samples, 0.06%; +0.03%)</title><rect x="1095.3" y="309" width="0.7" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="1098.28" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (37 samples, 0.08%; -0.01%)</title><rect x="269.7" y="293" width="0.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="272.65" y="303.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; +0.00%)</title><rect x="443.5" y="277" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="446.54" y="287.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (35 samples, 0.07%; +0.00%)</title><rect x="751.0" y="261" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="753.98" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (35 samples, 0.07%; 0.00%)</title><rect x="686.5" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.46" y="495.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (137 samples, 0.29%; -0.03%)</title><rect x="12.3" y="581" width="3.4" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="15.28" y="591.5" ></text>
</g>
<g >
<title>auth::resource::resource (67 samples, 0.14%; 0.00%)</title><rect x="771.9" y="373" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="774.92" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (20 samples, 0.04%; -0.01%)</title><rect x="530.4" y="245" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="533.38" y="255.5" ></text>
</g>
<g >
<title>__libc_start_main (46,089 samples, 97.72%; 0.00%)</title><rect x="24.4" y="629" width="1153.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.44" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%; +0.00%)</title><rect x="926.0" y="325" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="929.02" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; -0.00%)</title><rect x="1032.5" y="197" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1035.53" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%; -0.00%)</title><rect x="1117.9" y="325" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1120.92" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.05%)</title><rect x="407.3" y="229" width="0.1" height="15.0" fill="rgb(119,119,255)" rx="2" ry="2" />
<text  x="410.29" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%; 0.00%)</title><rect x="1092.4" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1095.40" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.03%; -0.02%)</title><rect x="635.7" y="485" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="638.69" y="495.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%; +0.01%)</title><rect x="1063.2" y="325" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1066.20" y="335.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.00%)</title><rect x="456.2" y="325" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="459.20" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (8 samples, 0.02%; 0.00%)</title><rect x="24.2" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.16" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (22 samples, 0.05%; -0.01%)</title><rect x="234.1" y="181" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="237.10" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (188 samples, 0.40%; -0.01%)</title><rect x="1170.0" y="469" width="4.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1172.96" y="479.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (58 samples, 0.12%; +0.01%)</title><rect x="595.7" y="405" width="1.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="598.68" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.00%)</title><rect x="409.9" y="277" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="412.94" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="421" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.19" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%; -0.01%)</title><rect x="836.6" y="421" width="0.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="839.62" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (46 samples, 0.10%; +0.07%)</title><rect x="672.6" y="437" width="1.1" height="15.0" fill="rgb(255,65,65)" rx="2" ry="2" />
<text  x="675.57" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%; -0.01%)</title><rect x="764.1" y="325" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="767.12" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.03%; +0.03%)</title><rect x="678.5" y="485" width="0.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="681.52" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (4 samples, 0.01%; -0.01%)</title><rect x="254.2" y="277" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="257.19" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (13 samples, 0.03%; -0.01%)</title><rect x="659.8" y="485" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="662.78" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="40.0" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="43.00" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (122 samples, 0.26%; -0.01%)</title><rect x="1083.2" y="229" width="3.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1086.17" y="239.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (8 samples, 0.02%; +0.01%)</title><rect x="325.1" y="165" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="328.07" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (8 samples, 0.02%; +0.01%)</title><rect x="652.0" y="437" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="655.03" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%; -0.02%)</title><rect x="986.1" y="341" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="989.07" y="351.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (5 samples, 0.01%; 0.00%)</title><rect x="1139.3" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.34" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (63 samples, 0.13%; +0.02%)</title><rect x="72.3" y="373" width="1.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="75.30" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; -0.01%)</title><rect x="590.8" y="389" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="593.83" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,743 samples, 3.70%; -0.10%)</title><rect x="317.0" y="197" width="43.6" height="15.0" fill="rgb(24,24,255)" rx="2" ry="2" />
<text  x="320.04" y="207.5" >muta..</text>
</g>
<g >
<title>query_result_builder::consume_new_partition (365 samples, 0.77%; +0.01%)</title><rect x="306.4" y="197" width="9.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="309.38" y="207.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (21 samples, 0.04%; -0.03%)</title><rect x="329.0" y="181" width="0.5" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="331.98" y="191.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%; +0.00%)</title><rect x="900.0" y="309" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="903.05" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.00%)</title><rect x="631.6" y="485" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="634.64" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (273 samples, 0.58%; +0.08%)</title><rect x="394.9" y="213" width="6.8" height="15.0" fill="rgb(255,53,53)" rx="2" ry="2" />
<text  x="397.90" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (21 samples, 0.04%; +0.02%)</title><rect x="882.8" y="421" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="885.78" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="1133.7" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1136.68" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (5 samples, 0.01%; +0.00%)</title><rect x="600.9" y="421" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="603.94" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (32 samples, 0.07%; +0.04%)</title><rect x="217.7" y="165" width="0.8" height="15.0" fill="rgb(255,131,131)" rx="2" ry="2" />
<text  x="220.66" y="175.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%; -0.00%)</title><rect x="882.5" y="421" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="885.48" y="431.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (8 samples, 0.02%; 0.00%)</title><rect x="432.9" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.86" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,190 samples, 4.64%; -0.01%)</title><rect x="884.9" y="421" width="54.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="887.86" y="431.5" >cql3:..</text>
</g>
<g >
<title>seastar::memory::allocate (84 samples, 0.18%; -0.04%)</title><rect x="956.0" y="389" width="2.1" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="958.99" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; 0.00%)</title><rect x="1120.3" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.35" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,471 samples, 9.48%; -0.00%)</title><rect x="424.0" y="373" width="111.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="427.00" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>seastar::reactor::add_timer (32 samples, 0.07%; +0.01%)</title><rect x="992.5" y="277" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="995.50" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (87 samples, 0.18%; +0.01%)</title><rect x="145.4" y="213" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="148.43" y="223.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (343 samples, 0.73%; +0.02%)</title><rect x="1077.6" y="261" width="8.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1080.64" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.01%)</title><rect x="1042.1" y="261" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1045.06" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (42 samples, 0.09%; 0.00%)</title><rect x="148.4" y="197" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.38" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%; -0.02%)</title><rect x="417.6" y="357" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="420.64" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (83 samples, 0.18%; +0.03%)</title><rect x="625.2" y="485" width="2.1" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="628.21" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (7 samples, 0.01%; +0.00%)</title><rect x="570.3" y="341" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="573.29" y="351.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (10 samples, 0.02%; +0.00%)</title><rect x="460.6" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="463.55" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (52 samples, 0.11%; 0.00%)</title><rect x="760.6" y="357" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="763.61" y="367.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.00%)</title><rect x="892.0" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="894.97" y="319.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (64 samples, 0.14%; -0.01%)</title><rect x="348.5" y="165" width="1.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="351.54" y="175.5" ></text>
</g>
<g >
<title>schema::position (9 samples, 0.02%; -0.02%)</title><rect x="1124.4" y="421" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1127.42" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%; +0.00%)</title><rect x="844.9" y="357" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="847.93" y="367.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.19%; +0.01%)</title><rect x="1039.1" y="261" width="2.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1042.06" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (27 samples, 0.06%; -0.01%)</title><rect x="1129.0" y="373" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1131.95" y="383.5" ></text>
</g>
<g >
<title>tombstone::apply (4 samples, 0.01%; -0.00%)</title><rect x="387.8" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="390.82" y="223.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (41 samples, 0.09%; -0.01%)</title><rect x="530.1" y="261" width="1.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="533.13" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (118 samples, 0.25%; -0.01%)</title><rect x="60.3" y="453" width="2.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="63.26" y="463.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%; +0.00%)</title><rect x="544.7" y="341" width="2.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="547.69" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%; -0.00%)</title><rect x="121.2" y="293" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="124.24" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%; 0.00%)</title><rect x="19.9" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.86" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.01%)</title><rect x="967.8" y="373" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="970.75" y="383.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (23 samples, 0.05%; +0.00%)</title><rect x="188.9" y="101" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="191.92" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (14 samples, 0.03%; -0.01%)</title><rect x="1136.5" y="421" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1139.48" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (7 samples, 0.01%; +0.00%)</title><rect x="504.4" y="213" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="507.41" y="223.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (12 samples, 0.03%; -0.00%)</title><rect x="1118.9" y="405" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1121.89" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (9 samples, 0.02%; +0.01%)</title><rect x="1130.5" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1133.50" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (22 samples, 0.05%; -0.00%)</title><rect x="651.3" y="389" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="654.30" y="399.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (8 samples, 0.02%; +0.00%)</title><rect x="727.5" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="730.49" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (16 samples, 0.03%; +0.00%)</title><rect x="217.3" y="133" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="220.26" y="143.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,032 samples, 38.23%; -0.01%)</title><rect x="99.9" y="437" width="451.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="102.87" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (29 samples, 0.06%; -0.02%)</title><rect x="99.1" y="437" width="0.8" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="102.14" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (16 samples, 0.03%; +0.01%)</title><rect x="991.6" y="261" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="994.64" y="271.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (71 samples, 0.15%; +0.01%)</title><rect x="219.7" y="229" width="1.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="222.66" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (40 samples, 0.08%; -0.01%)</title><rect x="1102.2" y="373" width="1.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1105.16" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; -0.00%)</title><rect x="926.8" y="357" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="929.77" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%; +0.01%)</title><rect x="269.6" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="272.55" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (4 samples, 0.01%; -0.01%)</title><rect x="1143.3" y="501" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1146.34" y="511.5" ></text>
</g>
<g >
<title>query::result::result (12 samples, 0.03%; +0.01%)</title><rect x="606.8" y="421" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="609.84" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (145 samples, 0.31%; +0.00%)</title><rect x="718.4" y="469" width="3.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="721.43" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (23 samples, 0.05%; +0.02%)</title><rect x="619.1" y="421" width="0.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="622.10" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (27 samples, 0.06%; -0.01%)</title><rect x="604.0" y="437" width="0.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="606.99" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (15 samples, 0.03%; +0.00%)</title><rect x="568.0" y="293" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="570.96" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (85 samples, 0.18%; +0.00%)</title><rect x="650.3" y="453" width="2.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="653.30" y="463.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (4 samples, 0.01%; 0.00%)</title><rect x="431.6" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="434.61" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (128 samples, 0.27%; -0.04%)</title><rect x="1185.6" y="613" width="3.2" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="1188.57" y="623.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (9 samples, 0.02%; +0.00%)</title><rect x="37.8" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="40.77" y="431.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.10%; -0.00%)</title><rect x="276.9" y="293" width="1.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="279.91" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (19 samples, 0.04%; -0.01%)</title><rect x="673.8" y="453" width="0.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="676.77" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (35 samples, 0.07%; -0.01%)</title><rect x="609.7" y="437" width="0.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="612.75" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (8 samples, 0.02%; -0.01%)</title><rect x="609.4" y="437" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="612.42" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (51 samples, 0.11%; -0.01%)</title><rect x="1146.6" y="485" width="1.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1149.59" y="495.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; +0.01%)</title><rect x="664.3" y="421" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="667.26" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (38 samples, 0.08%; +0.00%)</title><rect x="808.4" y="245" width="1.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="811.43" y="255.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.03%; 0.00%)</title><rect x="417.6" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.64" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%; +0.03%)</title><rect x="415.3" y="325" width="0.8" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="418.32" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (67 samples, 0.14%; -0.00%)</title><rect x="861.3" y="453" width="1.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="864.27" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (22 samples, 0.05%; 0.00%)</title><rect x="1140.3" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.26" y="335.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%; 0.00%)</title><rect x="46.9" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.93" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; +0.01%)</title><rect x="787.5" y="245" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="790.51" y="255.5" ></text>
</g>
<g >
<title>dht::tri_compare (47 samples, 0.10%; -0.02%)</title><rect x="1078.2" y="245" width="1.2" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1081.19" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (10 samples, 0.02%; -0.00%)</title><rect x="1138.3" y="437" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1141.33" y="447.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%; +0.03%)</title><rect x="57.8" y="453" width="1.2" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="60.84" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (539 samples, 1.14%; -0.01%)</title><rect x="497.3" y="277" width="13.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="500.31" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (93 samples, 0.20%; -0.01%)</title><rect x="937.2" y="389" width="2.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="940.23" y="399.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; +0.02%)</title><rect x="411.6" y="261" width="0.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="414.59" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (19 samples, 0.04%; +0.02%)</title><rect x="314.0" y="181" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="316.96" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%; +0.01%)</title><rect x="408.7" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="411.74" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (276 samples, 0.59%; -0.00%)</title><rect x="986.7" y="341" width="6.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="989.72" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (30 samples, 0.06%; 0.00%)</title><rect x="686.5" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.53" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (745 samples, 1.58%; +0.01%)</title><rect x="552.0" y="389" width="18.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="555.05" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (607 samples, 1.29%; -0.00%)</title><rect x="1077.5" y="293" width="15.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1080.46" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (21 samples, 0.04%; 0.00%)</title><rect x="22.8" y="405" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.79" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.01%; 0.00%)</title><rect x="869.3" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.30" y="255.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (52 samples, 0.11%; +0.03%)</title><rect x="731.6" y="293" width="1.3" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="734.64" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.03%; +0.01%)</title><rect x="676.3" y="485" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="679.30" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,495 samples, 9.53%; -0.00%)</title><rect x="423.5" y="389" width="112.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="426.52" y="399.5" >std::function..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="586.8" y="389" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="589.83" y="399.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.01%; +0.01%)</title><rect x="525.1" y="293" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="528.05" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (17 samples, 0.04%; 0.00%)</title><rect x="1025.4" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1028.40" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (80 samples, 0.17%; +0.01%)</title><rect x="747.2" y="325" width="2.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="750.18" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (15 samples, 0.03%; +0.00%)</title><rect x="706.9" y="405" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="709.95" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (15 samples, 0.03%; +0.00%)</title><rect x="1001.5" y="293" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1004.53" y="303.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; +0.02%)</title><rect x="629.3" y="485" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="632.31" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (128 samples, 0.27%; -0.03%)</title><rect x="182.7" y="37" width="3.2" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="185.69" y="47.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (23 samples, 0.05%; -0.01%)</title><rect x="709.2" y="437" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="712.20" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.01%; -0.01%)</title><rect x="588.2" y="405" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="591.20" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; 0.00%)</title><rect x="23.8" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.79" y="287.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.12%; -0.04%)</title><rect x="577.7" y="341" width="1.4" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="580.67" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (11 samples, 0.02%; +0.00%)</title><rect x="18.5" y="261" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="21.53" y="271.5" ></text>
</g>
<g >
<title>__start_context (285 samples, 0.60%; 0.00%)</title><rect x="16.9" y="613" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.86" y="623.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (16 samples, 0.03%; +0.00%)</title><rect x="1118.3" y="357" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1121.34" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (89 samples, 0.19%; +0.00%)</title><rect x="544.5" y="357" width="2.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="547.54" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (25 samples, 0.05%; -0.01%)</title><rect x="928.2" y="389" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="931.17" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (775 samples, 1.64%; -0.02%)</title><rect x="366.9" y="197" width="19.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="369.85" y="207.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (27 samples, 0.06%; +0.00%)</title><rect x="686.6" y="309" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="689.56" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (31 samples, 0.07%; -0.00%)</title><rect x="868.9" y="421" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="871.90" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (43 samples, 0.09%; 0.00%)</title><rect x="1017.7" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1020.69" y="255.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (30 samples, 0.06%; -0.00%)</title><rect x="1139.3" y="277" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1142.29" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (9 samples, 0.02%; -0.02%)</title><rect x="993.3" y="277" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="996.30" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.04%; -0.03%)</title><rect x="1057.8" y="293" width="0.4" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="1060.77" y="303.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%; +0.00%)</title><rect x="623.1" y="389" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="626.13" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (6 samples, 0.01%; +0.01%)</title><rect x="1153.4" y="453" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1156.40" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (43 samples, 0.09%; 0.00%)</title><rect x="18.1" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.11" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="45.7" y="485" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="48.68" y="495.5" ></text>
</g>
<g >
<title>reader_permit::signal (6 samples, 0.01%; +0.01%)</title><rect x="270.8" y="309" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="273.75" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (430 samples, 0.91%; +0.01%)</title><rect x="227.2" y="229" width="10.8" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="230.25" y="239.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (13 samples, 0.03%; -0.01%)</title><rect x="1043.9" y="277" width="0.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1046.86" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (12 samples, 0.03%; +0.01%)</title><rect x="605.2" y="421" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="608.17" y="431.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.01%; -0.01%)</title><rect x="1092.2" y="245" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1095.20" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="784.1" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="787.13" y="303.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (123 samples, 0.26%; +0.01%)</title><rect x="355.0" y="165" width="3.0" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="357.97" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.01%)</title><rect x="68.1" y="389" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="71.12" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (392 samples, 0.83%; -0.01%)</title><rect x="393.5" y="261" width="9.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="396.50" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (43 samples, 0.09%; 0.00%)</title><rect x="20.4" y="325" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.36" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (4 samples, 0.01%; +0.01%)</title><rect x="896.9" y="293" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="899.95" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (15 samples, 0.03%; -0.01%)</title><rect x="439.3" y="261" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="442.26" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%; 0.00%)</title><rect x="634.6" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.64" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%; +0.00%)</title><rect x="417.9" y="373" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="420.94" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; -0.00%)</title><rect x="671.8" y="437" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="674.84" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (20 samples, 0.04%; +0.01%)</title><rect x="1097.7" y="341" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1100.65" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (8 samples, 0.02%; -0.00%)</title><rect x="868.0" y="373" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="871.05" y="383.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (220 samples, 0.47%; -0.03%)</title><rect x="914.5" y="373" width="5.5" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="917.48" y="383.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%; 0.00%)</title><rect x="19.9" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.86" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (8 samples, 0.02%; +0.00%)</title><rect x="43.2" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="46.23" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (17 samples, 0.04%; +0.01%)</title><rect x="308.5" y="165" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="311.46" y="175.5" ></text>
</g>
<g >
<title>reader_permit::signal (5 samples, 0.01%; +0.00%)</title><rect x="278.1" y="325" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="281.09" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%; 0.00%)</title><rect x="19.4" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.43" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (113 samples, 0.24%; 0.00%)</title><rect x="37.3" y="453" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.30" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%; -0.02%)</title><rect x="498.1" y="261" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="501.06" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%; +0.00%)</title><rect x="406.0" y="229" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="408.96" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (12 samples, 0.03%; +0.02%)</title><rect x="952.7" y="389" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="955.74" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (5 samples, 0.01%; -0.00%)</title><rect x="255.6" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="258.62" y="319.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (11 samples, 0.02%; +0.01%)</title><rect x="677.3" y="469" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="680.27" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.00%)</title><rect x="75.7" y="453" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="78.70" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,089 samples, 97.72%; 0.00%)</title><rect x="24.4" y="597" width="1153.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.44" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::reactor::add_timer (12 samples, 0.03%; -0.01%)</title><rect x="990.0" y="293" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="992.99" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,039 samples, 6.44%; +0.00%)</title><rect x="758.8" y="421" width="76.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="761.81" y="431.5" >cql3::st..</text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%; -0.01%)</title><rect x="235.7" y="213" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="238.65" y="223.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.01%)</title><rect x="47.1" y="501" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="50.08" y="511.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (18 samples, 0.04%; +0.01%)</title><rect x="1113.7" y="357" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1116.74" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (33 samples, 0.07%; +0.01%)</title><rect x="208.7" y="149" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="211.66" y="159.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%; 0.00%)</title><rect x="638.3" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="641.29" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (53 samples, 0.11%; 0.00%)</title><rect x="650.7" y="421" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="653.68" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (43 samples, 0.09%; +0.05%)</title><rect x="1136.9" y="421" width="1.1" height="15.0" fill="rgb(255,107,107)" rx="2" ry="2" />
<text  x="1139.88" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (10 samples, 0.02%; +0.01%)</title><rect x="218.9" y="181" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="221.86" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (464 samples, 0.98%; -0.01%)</title><rect x="687.6" y="501" width="11.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="690.58" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (11 samples, 0.02%; +0.00%)</title><rect x="364.8" y="149" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="367.75" y="159.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (34 samples, 0.07%; +0.01%)</title><rect x="323.9" y="181" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="326.87" y="191.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (9 samples, 0.02%; +0.01%)</title><rect x="734.5" y="421" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="737.47" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%; -0.01%)</title><rect x="1036.9" y="181" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1039.93" y="191.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (127 samples, 0.27%; -0.01%)</title><rect x="855.0" y="405" width="3.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="858.04" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (7 samples, 0.01%; +0.01%)</title><rect x="791.5" y="261" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="794.54" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (39 samples, 0.08%; +0.03%)</title><rect x="1158.5" y="405" width="1.0" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="1161.48" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (60 samples, 0.13%; -0.03%)</title><rect x="61.0" y="437" width="1.5" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="64.01" y="447.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (4 samples, 0.01%; -0.00%)</title><rect x="1141.9" y="501" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1144.86" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (169 samples, 0.36%; +0.00%)</title><rect x="645.6" y="453" width="4.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="648.60" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%; 0.00%)</title><rect x="965.2" y="357" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="968.20" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%; -0.02%)</title><rect x="1158.2" y="421" width="1.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1161.15" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.02%)</title><rect x="534.7" y="309" width="0.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="537.69" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (4 samples, 0.01%; -0.00%)</title><rect x="816.0" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="819.01" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (7 samples, 0.01%; +0.01%)</title><rect x="282.7" y="389" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="285.74" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (212 samples, 0.45%; 0.00%)</title><rect x="644.9" y="469" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="647.90" y="479.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (23 samples, 0.05%; 0.00%)</title><rect x="575.0" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="578.04" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (10 samples, 0.02%; +0.01%)</title><rect x="711.8" y="405" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="714.78" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (15 samples, 0.03%; +0.00%)</title><rect x="692.6" y="453" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="695.61" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="1148.3" y="485" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1151.27" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (22 samples, 0.05%; 0.00%)</title><rect x="1176.9" y="501" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.89" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.02%)</title><rect x="928.2" y="373" width="0.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="931.22" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="1161.6" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1164.60" y="463.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%; -0.01%)</title><rect x="670.5" y="469" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="673.52" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (28 samples, 0.06%; -0.01%)</title><rect x="683.8" y="453" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="686.80" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.02%)</title><rect x="564.3" y="277" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="567.33" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; -0.00%)</title><rect x="888.1" y="373" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="891.14" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (13 samples, 0.03%; +0.00%)</title><rect x="602.9" y="437" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="605.89" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (90 samples, 0.19%; +0.03%)</title><rect x="986.9" y="309" width="2.3" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="989.94" y="319.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (983 samples, 2.08%; -0.02%)</title><rect x="489.8" y="325" width="24.6" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="492.83" y="335.5" >m..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="1043.4" y="277" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1046.44" y="287.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (5 samples, 0.01%; -0.01%)</title><rect x="776.8" y="357" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="779.80" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="596.8" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="599.76" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (159 samples, 0.34%; +0.00%)</title><rect x="678.8" y="485" width="4.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="681.82" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (5 samples, 0.01%; -0.00%)</title><rect x="752.7" y="389" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="755.68" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%; +0.00%)</title><rect x="1166.9" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1169.88" y="495.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (17 samples, 0.04%; +0.03%)</title><rect x="598.7" y="421" width="0.5" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="601.74" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.02%; -0.00%)</title><rect x="416.2" y="357" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="419.17" y="367.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (4 samples, 0.01%; 0.00%)</title><rect x="74.5" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.48" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (4 samples, 0.01%; 0.00%)</title><rect x="460.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="463.80" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (19 samples, 0.04%; +0.02%)</title><rect x="446.5" y="293" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="449.54" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.00%)</title><rect x="794.7" y="149" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="797.69" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (41 samples, 0.09%; +0.01%)</title><rect x="211.5" y="181" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="214.48" y="191.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.01%; -0.00%)</title><rect x="1175.2" y="469" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1178.19" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="1065.4" y="341" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1068.35" y="351.5" ></text>
</g>
<g >
<title>compound_type&lt; (79 samples, 0.17%; 0.00%)</title><rect x="908.5" y="373" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.50" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (4 samples, 0.01%; +0.01%)</title><rect x="721.9" y="453" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="724.88" y="463.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="836.3" y="421" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="839.35" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; +0.01%)</title><rect x="1114.0" y="341" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1117.04" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (716 samples, 1.52%; -0.01%)</title><rect x="120.2" y="309" width="17.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="123.16" y="319.5" ></text>
</g>
<g >
<title>all (47,163 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%; -0.00%)</title><rect x="637.0" y="469" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="639.99" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (33 samples, 0.07%; +0.00%)</title><rect x="630.8" y="485" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="633.79" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (209 samples, 0.44%; -0.01%)</title><rect x="690.6" y="469" width="5.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="693.61" y="479.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (4 samples, 0.01%; +0.00%)</title><rect x="788.0" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="790.96" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (27 samples, 0.06%; +0.00%)</title><rect x="506.6" y="181" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="509.64" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.03%; -0.02%)</title><rect x="323.1" y="181" width="0.4" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="326.12" y="191.5" ></text>
</g>
<g >
<title>__tls_init (24 samples, 0.05%; +0.03%)</title><rect x="488.4" y="309" width="0.6" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="491.37" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.01%)</title><rect x="929.9" y="373" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="932.92" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (6 samples, 0.01%; +0.01%)</title><rect x="875.2" y="453" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="878.23" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%; -0.00%)</title><rect x="703.5" y="453" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="706.54" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (6 samples, 0.01%; +0.01%)</title><rect x="931.2" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="934.22" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.03%; 0.00%)</title><rect x="602.6" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="605.59" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (468 samples, 0.99%; +0.03%)</title><rect x="740.8" y="389" width="11.7" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="743.80" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (16 samples, 0.03%; -0.02%)</title><rect x="235.1" y="197" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="238.08" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.01%; +0.00%)</title><rect x="581.1" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="584.12" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (4 samples, 0.01%; -0.00%)</title><rect x="407.8" y="277" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="410.81" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (664 samples, 1.41%; -0.02%)</title><rect x="737.4" y="421" width="16.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="740.45" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (20 samples, 0.04%; +0.00%)</title><rect x="223.1" y="229" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="226.14" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (386 samples, 0.82%; +0.01%)</title><rect x="1065.6" y="341" width="9.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1068.60" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (5 samples, 0.01%; +0.01%)</title><rect x="103.6" y="421" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="106.62" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (32 samples, 0.07%; -0.00%)</title><rect x="608.6" y="437" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="611.62" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%; +0.01%)</title><rect x="385.4" y="165" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="388.42" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (60 samples, 0.13%; +0.05%)</title><rect x="584.5" y="421" width="1.5" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="587.50" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="136.4" y="261" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="139.45" y="271.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%; -0.01%)</title><rect x="1002.1" y="293" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1005.10" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (19 samples, 0.04%; +0.01%)</title><rect x="512.7" y="277" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="515.74" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="1034.0" y="213" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1036.98" y="223.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%; -0.00%)</title><rect x="738.8" y="389" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="741.85" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%; +0.01%)</title><rect x="486.3" y="213" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="489.30" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (8 samples, 0.02%; +0.00%)</title><rect x="365.1" y="213" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="368.13" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.01%; -0.01%)</title><rect x="637.1" y="485" width="0.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="640.14" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (6 samples, 0.01%; -0.02%)</title><rect x="77.8" y="453" width="0.2" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="80.80" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (112 samples, 0.24%; -0.01%)</title><rect x="850.3" y="389" width="2.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="853.26" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (7 samples, 0.01%; -0.02%)</title><rect x="202.9" y="117" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="205.88" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; +0.01%)</title><rect x="845.1" y="341" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="848.10" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (67 samples, 0.14%; -0.03%)</title><rect x="383.7" y="165" width="1.7" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="386.74" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (16 samples, 0.03%; 0.00%)</title><rect x="527.1" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="530.08" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (12 samples, 0.03%; +0.02%)</title><rect x="420.7" y="405" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="423.70" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (4 samples, 0.01%; +0.01%)</title><rect x="685.8" y="485" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="688.83" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%; +0.02%)</title><rect x="750.6" y="261" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="753.58" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (80 samples, 0.17%; +0.03%)</title><rect x="261.3" y="325" width="2.0" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="264.30" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (12 samples, 0.03%; 0.00%)</title><rect x="273.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="276.06" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; -0.01%)</title><rect x="518.5" y="309" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="521.50" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (7 samples, 0.01%; -0.02%)</title><rect x="1120.9" y="405" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1123.87" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (4 samples, 0.01%; 0.00%)</title><rect x="640.7" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.67" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,840 samples, 6.02%; +0.03%)</title><rect x="981.1" y="357" width="71.1" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="984.11" y="367.5" >service:..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%; -0.01%)</title><rect x="192.3" y="117" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="195.34" y="127.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.03%; 0.00%)</title><rect x="153.6" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.59" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%; +0.01%)</title><rect x="844.8" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="847.78" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (132 samples, 0.28%; 0.00%)</title><rect x="952.6" y="405" width="3.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="955.61" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (4 samples, 0.01%; -0.00%)</title><rect x="603.9" y="437" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="606.89" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; 0.00%)</title><rect x="148.3" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.26" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; -0.01%)</title><rect x="503.1" y="181" width="0.6" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="506.09" y="191.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (252 samples, 0.53%; -0.00%)</title><rect x="17.3" y="485" width="6.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="20.31" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (162 samples, 0.34%; -0.01%)</title><rect x="409.5" y="309" width="4.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="412.46" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,388 samples, 13.54%; +0.01%)</title><rect x="948.6" y="421" width="159.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="951.64" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (16 samples, 0.03%; +0.01%)</title><rect x="382.4" y="165" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="385.37" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%; +0.01%)</title><rect x="983.9" y="277" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="986.89" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.01%)</title><rect x="68.7" y="389" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="71.67" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,533 samples, 22.33%; -0.02%)</title><rect x="875.4" y="453" width="263.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="878.38" y="463.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (19 samples, 0.04%; -0.01%)</title><rect x="1030.3" y="133" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1033.32" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%; -0.00%)</title><rect x="1058.7" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1061.67" y="319.5" ></text>
</g>
<g >
<title>freeze (6 samples, 0.01%; 0.00%)</title><rect x="1140.6" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="207.5" ></text>
</g>
<g >
<title>make_random_seq (4 samples, 0.01%; +0.00%)</title><rect x="864.7" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="867.75" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (4 samples, 0.01%; 0.00%)</title><rect x="20.8" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.83" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (296 samples, 0.63%; +0.01%)</title><rect x="540.0" y="405" width="7.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="542.97" y="415.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; -0.01%)</title><rect x="675.5" y="485" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="678.47" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%; 0.00%)</title><rect x="770.4" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="773.40" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (693 samples, 1.47%; -0.03%)</title><rect x="553.2" y="357" width="17.4" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="556.23" y="367.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.06%; +0.01%)</title><rect x="815.4" y="309" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="818.36" y="319.5" ></text>
</g>
<g >
<title>dht::shard_of (10 samples, 0.02%; -0.00%)</title><rect x="1000.7" y="293" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1003.65" y="303.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; 0.00%)</title><rect x="769.4" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="772.42" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.01%)</title><rect x="550.9" y="421" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="553.90" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (40 samples, 0.08%; 0.00%)</title><rect x="566.9" y="277" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="569.94" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (10 samples, 0.02%; +0.00%)</title><rect x="24.8" y="517" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="27.84" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.01%)</title><rect x="945.9" y="357" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="948.93" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (255 samples, 0.54%; -0.00%)</title><rect x="941.0" y="405" width="6.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="944.03" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (112 samples, 0.24%; -0.00%)</title><rect x="679.0" y="469" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="682.00" y="479.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; -0.00%)</title><rect x="415.3" y="341" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="418.32" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (8 samples, 0.02%; +0.00%)</title><rect x="520.4" y="325" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="523.43" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; 0.00%)</title><rect x="867.7" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.67" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; +0.00%)</title><rect x="705.4" y="421" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="708.37" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="1129.9" y="389" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1132.90" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (225 samples, 0.48%; -0.01%)</title><rect x="746.8" y="357" width="5.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="749.75" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.01%)</title><rect x="721.0" y="389" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="723.98" y="399.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (6 samples, 0.01%; +0.00%)</title><rect x="677.4" y="453" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="680.40" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (10 samples, 0.02%; -0.00%)</title><rect x="852.8" y="341" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="855.76" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="922.6" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="925.64" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.01%)</title><rect x="505.8" y="181" width="0.7" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="508.79" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (6 samples, 0.01%; 0.00%)</title><rect x="266.5" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.50" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (18 samples, 0.04%; -0.01%)</title><rect x="698.2" y="469" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="701.21" y="479.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (10 samples, 0.02%; +0.01%)</title><rect x="77.4" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="80.38" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.04%; -0.01%)</title><rect x="830.5" y="293" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="833.54" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; +0.01%)</title><rect x="873.8" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="876.80" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (190 samples, 0.40%; 0.00%)</title><rect x="754.1" y="421" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="757.06" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.01%)</title><rect x="920.2" y="389" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="923.21" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (84 samples, 0.18%; -0.01%)</title><rect x="476.6" y="261" width="2.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="479.59" y="271.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (8 samples, 0.02%; +0.01%)</title><rect x="708.9" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="711.95" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; +0.00%)</title><rect x="926.5" y="309" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="929.47" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (25 samples, 0.05%; -0.00%)</title><rect x="322.5" y="181" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="325.49" y="191.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%; +0.00%)</title><rect x="1125.4" y="405" width="1.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1128.42" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (24 samples, 0.05%; +0.00%)</title><rect x="1073.2" y="309" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1076.18" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (82 samples, 0.17%; -0.00%)</title><rect x="236.0" y="213" width="2.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="238.95" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (22 samples, 0.05%; -0.00%)</title><rect x="800.1" y="149" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="803.14" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (64 samples, 0.14%; +0.00%)</title><rect x="953.8" y="341" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="956.81" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (9 samples, 0.02%; 0.00%)</title><rect x="163.6" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="166.62" y="159.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.08%; -0.00%)</title><rect x="742.7" y="309" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="745.67" y="319.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; +0.00%)</title><rect x="36.8" y="453" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="39.80" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (7 samples, 0.01%; +0.00%)</title><rect x="76.3" y="453" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="79.33" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%; 0.00%)</title><rect x="1100.4" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.35" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (65 samples, 0.14%; -0.01%)</title><rect x="615.2" y="389" width="1.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="618.20" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (15 samples, 0.03%; 0.00%)</title><rect x="776.9" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="779.93" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (5 samples, 0.01%; +0.00%)</title><rect x="967.1" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="970.08" y="383.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (21 samples, 0.04%; +0.01%)</title><rect x="37.5" y="437" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="40.47" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (4 samples, 0.01%; -0.00%)</title><rect x="865.4" y="469" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="868.42" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.01%; -0.00%)</title><rect x="685.0" y="485" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="687.98" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (4 samples, 0.01%; +0.00%)</title><rect x="498.0" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="500.96" y="271.5" ></text>
</g>
<g >
<title>sstring_hash::operator (32 samples, 0.07%; 0.00%)</title><rect x="1061.5" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1064.55" y="303.5" ></text>
</g>
<g >
<title>db::validate_for_read (4 samples, 0.01%; +0.01%)</title><rect x="1138.2" y="437" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1141.21" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%; -0.00%)</title><rect x="308.2" y="165" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="311.21" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (31 samples, 0.07%; -0.00%)</title><rect x="206.6" y="165" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="209.63" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (12 samples, 0.03%; +0.02%)</title><rect x="362.7" y="197" width="0.3" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="365.68" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (5 samples, 0.01%; 0.00%)</title><rect x="640.7" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.67" y="495.5" ></text>
</g>
<g >
<title>operator delete (54 samples, 0.11%; +0.00%)</title><rect x="615.4" y="373" width="1.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="618.42" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (25 samples, 0.05%; 0.00%)</title><rect x="823.8" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.79" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; -0.01%)</title><rect x="263.3" y="325" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="266.30" y="335.5" ></text>
</g>
<g >
<title>mutation::set_clustered_cell (5 samples, 0.01%; 0.00%)</title><rect x="869.3" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.30" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (96 samples, 0.20%; +0.01%)</title><rect x="719.2" y="437" width="2.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="722.18" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (18 samples, 0.04%; +0.02%)</title><rect x="914.0" y="373" width="0.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="916.96" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="518.3" y="309" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="521.30" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (28 samples, 0.06%; -0.01%)</title><rect x="412.5" y="261" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="415.49" y="271.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.01%; 0.00%)</title><rect x="1177.8" y="629" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.77" y="639.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (34 samples, 0.07%; +0.01%)</title><rect x="851.7" y="357" width="0.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="854.71" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%; -0.00%)</title><rect x="447.1" y="277" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="450.07" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (50 samples, 0.11%; -0.01%)</title><rect x="10.3" y="581" width="1.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="13.28" y="591.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.14%; +0.01%)</title><rect x="719.7" y="421" width="1.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="722.71" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (6 samples, 0.01%; -0.00%)</title><rect x="226.4" y="261" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="229.42" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%; +0.01%)</title><rect x="1061.3" y="293" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1064.32" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (16 samples, 0.03%; +0.02%)</title><rect x="537.2" y="389" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="540.19" y="399.5" ></text>
</g>
<g >
<title>partition_entry::read (18 samples, 0.04%; 0.00%)</title><rect x="519.1" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="522.15" y="335.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (42 samples, 0.09%; -0.02%)</title><rect x="233.0" y="181" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="236.05" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%; 0.00%)</title><rect x="868.0" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.05" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="406.5" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="409.46" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.01%; 0.00%)</title><rect x="1143.6" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1146.56" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (138 samples, 0.29%; +0.01%)</title><rect x="504.6" y="213" width="3.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="507.59" y="223.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (4 samples, 0.01%; 0.00%)</title><rect x="1140.0" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.04" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%; -0.00%)</title><rect x="487.4" y="325" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="490.40" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (5 samples, 0.01%; -0.02%)</title><rect x="388.7" y="229" width="0.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="391.72" y="239.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (7 samples, 0.01%; +0.01%)</title><rect x="386.2" y="213" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="389.24" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="449.9" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="452.94" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (16 samples, 0.03%; -0.02%)</title><rect x="69.4" y="373" width="0.4" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="72.37" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (148 samples, 0.31%; +0.02%)</title><rect x="799.5" y="165" width="3.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="802.47" y="175.5" ></text>
</g>
<g >
<title>free (131 samples, 0.28%; +0.05%)</title><rect x="397.5" y="181" width="3.3" height="15.0" fill="rgb(255,107,107)" rx="2" ry="2" />
<text  x="400.50" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.03%; -0.03%)</title><rect x="795.4" y="133" width="0.4" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="798.42" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="901.4" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="904.40" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (38 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="357" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.21" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (213 samples, 0.45%; +0.01%)</title><rect x="145.0" y="229" width="5.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="148.01" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; -0.01%)</title><rect x="36.0" y="453" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="39.05" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (64 samples, 0.14%; +0.01%)</title><rect x="140.5" y="261" width="1.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="143.50" y="271.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.01%; -0.01%)</title><rect x="181.7" y="69" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="184.68" y="79.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%; 0.00%)</title><rect x="19.4" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.43" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (7 samples, 0.01%; +0.00%)</title><rect x="1001.1" y="293" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1004.10" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.01%; 0.00%)</title><rect x="1140.4" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.41" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%; 0.00%)</title><rect x="1026.6" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1029.57" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%; 0.00%)</title><rect x="670.9" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="673.89" y="479.5" ></text>
</g>
<g >
<title>memtable::apply (28 samples, 0.06%; 0.00%)</title><rect x="1139.3" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (39 samples, 0.08%; +0.00%)</title><rect x="22.4" y="437" width="1.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="25.43" y="447.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,089 samples, 97.72%; 0.00%)</title><rect x="24.4" y="581" width="1153.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.44" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (30 samples, 0.06%; -0.03%)</title><rect x="216.9" y="149" width="0.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="219.91" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (30 samples, 0.06%; +0.01%)</title><rect x="658.8" y="485" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="661.81" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (5 samples, 0.01%; 0.00%)</title><rect x="713.6" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="716.63" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%; +0.00%)</title><rect x="1030.8" y="165" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1033.80" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (7 samples, 0.01%; +0.00%)</title><rect x="19.6" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="22.58" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::build (58 samples, 0.12%; -0.01%)</title><rect x="591.1" y="437" width="1.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="594.08" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (395 samples, 0.84%; -0.05%)</title><rect x="268.2" y="325" width="9.8" height="15.0" fill="rgb(111,111,255)" rx="2" ry="2" />
<text  x="271.15" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (4 samples, 0.01%; +0.01%)</title><rect x="715.1" y="501" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="718.13" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (5 samples, 0.01%; +0.01%)</title><rect x="592.8" y="437" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="595.78" y="447.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="503.0" y="197" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="506.04" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (27 samples, 0.06%; 0.00%)</title><rect x="601.6" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.61" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (12 samples, 0.03%; +0.01%)</title><rect x="1122.4" y="421" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1125.40" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (14 samples, 0.03%; +0.00%)</title><rect x="762.4" y="357" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="765.44" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.01%; 0.00%)</title><rect x="214.2" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.21" y="207.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (6 samples, 0.01%; -0.00%)</title><rect x="209.6" y="133" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="212.61" y="143.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; +0.01%)</title><rect x="636.8" y="469" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="639.79" y="479.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (78 samples, 0.17%; +0.00%)</title><rect x="1162.2" y="469" width="2.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1165.23" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; 0.00%)</title><rect x="691.8" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.83" y="463.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,257 samples, 9.03%; -0.02%)</title><rect x="138.7" y="293" width="106.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="141.73" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%; -0.00%)</title><rect x="20.2" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="23.18" y="335.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.02%; -0.00%)</title><rect x="920.0" y="389" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="922.99" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="530.7" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="533.73" y="239.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%; -0.00%)</title><rect x="531.2" y="261" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="534.18" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (8 samples, 0.02%; +0.00%)</title><rect x="1034.7" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1037.73" y="239.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%; -0.00%)</title><rect x="536.0" y="405" width="1.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="538.99" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (6 samples, 0.01%; -0.01%)</title><rect x="1098.2" y="357" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1101.15" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (103 samples, 0.22%; +0.01%)</title><rect x="730.8" y="309" width="2.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="733.82" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%; 0.00%)</title><rect x="851.9" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="854.88" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (10 samples, 0.02%; +0.00%)</title><rect x="20.5" y="309" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="23.48" y="319.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (77 samples, 0.16%; +0.01%)</title><rect x="525.2" y="293" width="1.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="528.15" y="303.5" ></text>
</g>
<g >
<title>create_partitions (273 samples, 0.58%; -0.00%)</title><rect x="17.1" y="533" width="6.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="20.13" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (37 samples, 0.08%; +0.01%)</title><rect x="977.2" y="309" width="0.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="980.16" y="319.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%; -0.00%)</title><rect x="1173.5" y="421" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1176.54" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="565" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="575.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (14 samples, 0.03%; +0.01%)</title><rect x="329.5" y="181" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="332.50" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%; -0.00%)</title><rect x="62.3" y="405" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="65.29" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (45 samples, 0.10%; +0.00%)</title><rect x="1060.2" y="293" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1063.20" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (4 samples, 0.01%; +0.00%)</title><rect x="553.0" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="555.95" y="367.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (330 samples, 0.70%; -0.01%)</title><rect x="478.7" y="261" width="8.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="481.69" y="271.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%; +0.01%)</title><rect x="676.9" y="469" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="679.87" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="255.5" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="258.49" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (5 samples, 0.01%; +0.00%)</title><rect x="403.6" y="261" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="406.61" y="271.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.01%; -0.00%)</title><rect x="210.8" y="149" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="213.81" y="159.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (28 samples, 0.06%; +0.00%)</title><rect x="133.5" y="229" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="136.47" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (74 samples, 0.16%; -0.03%)</title><rect x="676.6" y="485" width="1.9" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="679.62" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (71 samples, 0.15%; 0.00%)</title><rect x="944.2" y="357" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="947.16" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (8 samples, 0.02%; +0.00%)</title><rect x="1114.2" y="373" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1117.19" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (5 samples, 0.01%; +0.00%)</title><rect x="226.6" y="261" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="229.57" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (22 samples, 0.05%; 0.00%)</title><rect x="862.4" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.39" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (139 samples, 0.29%; -0.00%)</title><rect x="240.5" y="245" width="3.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="243.46" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (9 samples, 0.02%; -0.00%)</title><rect x="695.6" y="453" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="698.61" y="463.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cell (4 samples, 0.01%; 0.00%)</title><rect x="24.2" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.21" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (48 samples, 0.10%; 0.00%)</title><rect x="820.4" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="823.36" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (15 samples, 0.03%; +0.00%)</title><rect x="313.2" y="181" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="316.24" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (17 samples, 0.04%; +0.00%)</title><rect x="1149.2" y="453" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1152.17" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (16 samples, 0.03%; +0.02%)</title><rect x="365.7" y="197" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="368.65" y="207.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (18 samples, 0.04%; +0.00%)</title><rect x="1038.5" y="245" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1041.51" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; +0.01%)</title><rect x="627.3" y="485" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="630.31" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.00%)</title><rect x="823.6" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="826.56" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (4 samples, 0.01%; -0.00%)</title><rect x="586.0" y="421" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="589.03" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%; +0.01%)</title><rect x="292.0" y="229" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="295.05" y="239.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (42 samples, 0.09%; -0.01%)</title><rect x="209.8" y="149" width="1.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="212.76" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (8 samples, 0.02%; -0.01%)</title><rect x="26.0" y="517" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="29.01" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="520.3" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="523.28" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; 0.00%)</title><rect x="867.7" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.67" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (6 samples, 0.01%; 0.00%)</title><rect x="203.2" y="133" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.20" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (18 samples, 0.04%; -0.00%)</title><rect x="136.0" y="261" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="139.00" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%; 0.00%)</title><rect x="60.9" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.91" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (33 samples, 0.07%; +0.01%)</title><rect x="1153.5" y="453" width="0.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1156.55" y="463.5" ></text>
</g>
<g >
<title>free (19 samples, 0.04%; +0.01%)</title><rect x="38.1" y="421" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="41.07" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (8 samples, 0.02%; +0.00%)</title><rect x="948.4" y="421" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="951.44" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (4 samples, 0.01%; -0.02%)</title><rect x="1096.8" y="341" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1099.80" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (48 samples, 0.10%; +0.02%)</title><rect x="726.3" y="389" width="1.2" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="729.29" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%; +0.01%)</title><rect x="316.8" y="197" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="319.84" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (24 samples, 0.05%; +0.02%)</title><rect x="363.1" y="181" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="366.10" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (18 samples, 0.04%; +0.01%)</title><rect x="538.4" y="421" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="541.39" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (43 samples, 0.09%; -0.00%)</title><rect x="314.4" y="181" width="1.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="317.44" y="191.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (4 samples, 0.01%; +0.01%)</title><rect x="498.9" y="245" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="501.86" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.02%)</title><rect x="974.4" y="325" width="0.3" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="977.41" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.01%; -0.00%)</title><rect x="1120.8" y="405" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1123.77" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (10 samples, 0.02%; -0.02%)</title><rect x="311.1" y="165" width="0.3" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="314.14" y="175.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (504 samples, 1.07%; -0.00%)</title><rect x="474.6" y="309" width="12.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="477.59" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; +0.00%)</title><rect x="1141.7" y="501" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1144.71" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="609.6" y="437" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="612.62" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (49 samples, 0.10%; +0.00%)</title><rect x="264.3" y="357" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="267.27" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.04%; 0.00%)</title><rect x="289.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="292.69" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.00%)</title><rect x="791.2" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="794.19" y="255.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (67 samples, 0.14%; -0.00%)</title><rect x="541.1" y="373" width="1.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="544.07" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%; +0.01%)</title><rect x="639.0" y="485" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="641.99" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="1129.7" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1132.65" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (59 samples, 0.13%; -0.01%)</title><rect x="414.7" y="357" width="1.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="417.69" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%; -0.01%)</title><rect x="1124.6" y="421" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1127.65" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (45 samples, 0.10%; +0.04%)</title><rect x="525.8" y="261" width="1.1" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="528.78" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (420 samples, 0.89%; -0.06%)</title><rect x="1023.6" y="229" width="10.6" height="15.0" fill="rgb(102,102,255)" rx="2" ry="2" />
<text  x="1026.64" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%; +0.00%)</title><rect x="254.5" y="293" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="257.54" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (4 samples, 0.01%; +0.00%)</title><rect x="1146.5" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1149.49" y="479.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (12 samples, 0.03%; -0.03%)</title><rect x="307.3" y="165" width="0.3" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="310.31" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (13 samples, 0.03%; 0.00%)</title><rect x="862.5" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.54" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (6 samples, 0.01%; 0.00%)</title><rect x="1140.4" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.36" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; -0.00%)</title><rect x="967.3" y="373" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="970.33" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (69 samples, 0.15%; +0.01%)</title><rect x="825.5" y="309" width="1.8" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="828.54" y="319.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%; -0.00%)</title><rect x="1050.3" y="277" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1053.34" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (11 samples, 0.02%; +0.01%)</title><rect x="695.8" y="469" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="698.84" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.00%)</title><rect x="520.0" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="522.97" y="335.5" ></text>
</g>
<g >
<title>database::find_uuid (160 samples, 0.34%; +0.00%)</title><rect x="827.3" y="357" width="4.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="830.32" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%; +0.00%)</title><rect x="1155.6" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1158.65" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="40.1" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="43.15" y="463.5" ></text>
</g>
<g >
<title>database::find_schema (251 samples, 0.53%; -0.01%)</title><rect x="825.0" y="373" width="6.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="828.04" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (8 samples, 0.02%; +0.01%)</title><rect x="618.5" y="437" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="621.53" y="447.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; +0.00%)</title><rect x="441.1" y="245" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="444.06" y="255.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%; +0.00%)</title><rect x="599.6" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="602.56" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (87 samples, 0.18%; +0.03%)</title><rect x="920.7" y="389" width="2.2" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="923.69" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (4 samples, 0.01%; 0.00%)</title><rect x="961.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.05" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (66 samples, 0.14%; -0.01%)</title><rect x="256.4" y="325" width="1.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="259.44" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (351 samples, 0.74%; -0.03%)</title><rect x="1024.3" y="213" width="8.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1027.32" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%; +0.00%)</title><rect x="1047.7" y="213" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1050.69" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%; +0.00%)</title><rect x="387.9" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="390.92" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (15 samples, 0.03%; +0.02%)</title><rect x="549.0" y="421" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="552.00" y="431.5" ></text>
</g>
<g >
<title>seastar::schedule (9 samples, 0.02%; -0.01%)</title><rect x="1142.3" y="501" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1145.29" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (627 samples, 1.33%; +0.02%)</title><rect x="889.2" y="373" width="15.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="892.16" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%; +0.01%)</title><rect x="646.9" y="373" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="649.95" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (17 samples, 0.04%; +0.01%)</title><rect x="577.2" y="341" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="580.24" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (20 samples, 0.04%; -0.03%)</title><rect x="489.1" y="309" width="0.5" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="492.05" y="319.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (80 samples, 0.17%; -0.00%)</title><rect x="71.9" y="405" width="2.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="74.87" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (26 samples, 0.06%; +0.00%)</title><rect x="509.3" y="229" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="512.29" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,799 samples, 10.18%; +0.00%)</title><rect x="289.1" y="309" width="120.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="292.14" y="319.5" >std::__invoke_..</text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (25 samples, 0.05%; +0.04%)</title><rect x="1134.0" y="421" width="0.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1137.01" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (16 samples, 0.03%; -0.00%)</title><rect x="566.5" y="277" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="569.46" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%; -0.03%)</title><rect x="536.1" y="389" width="1.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="539.06" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (15 samples, 0.03%; +0.00%)</title><rect x="590.5" y="389" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="593.46" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="661.3" y="485" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="664.34" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (4 samples, 0.01%; +0.01%)</title><rect x="947.2" y="389" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="950.18" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (214 samples, 0.45%; +0.02%)</title><rect x="206.1" y="181" width="5.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="209.13" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (5 samples, 0.01%; +0.01%)</title><rect x="620.7" y="405" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="623.68" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (67 samples, 0.14%; +0.01%)</title><rect x="815.2" y="325" width="1.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="818.16" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (4 samples, 0.01%; +0.01%)</title><rect x="1104.1" y="389" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1107.11" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (11 samples, 0.02%; -0.00%)</title><rect x="255.3" y="309" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="258.34" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (4 samples, 0.01%; 0.00%)</title><rect x="1106.5" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.46" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (6 samples, 0.01%; +0.01%)</title><rect x="893.4" y="293" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="896.42" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (26 samples, 0.06%; +0.05%)</title><rect x="582.5" y="405" width="0.7" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="585.55" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; -0.00%)</title><rect x="491.9" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="494.88" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (9 samples, 0.02%; +0.00%)</title><rect x="651.4" y="373" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="654.38" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%; 0.00%)</title><rect x="393.3" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="396.28" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%; +0.00%)</title><rect x="731.3" y="293" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="734.27" y="303.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (34 samples, 0.07%; +0.00%)</title><rect x="686.5" y="469" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="689.46" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.02%)</title><rect x="1130.2" y="421" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1133.23" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%; -0.01%)</title><rect x="784.0" y="309" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="787.03" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%; +0.00%)</title><rect x="761.5" y="325" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="764.54" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="1115.7" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1118.69" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (43 samples, 0.09%; +0.06%)</title><rect x="194.5" y="117" width="1.0" height="15.0" fill="rgb(255,102,102)" rx="2" ry="2" />
<text  x="197.47" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (157 samples, 0.33%; -0.01%)</title><rect x="207.5" y="165" width="3.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="210.45" y="175.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,157 samples, 2.45%; +0.01%)</title><rect x="785.5" y="309" width="29.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="788.53" y="319.5" >au..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%; +0.01%)</title><rect x="659.3" y="453" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="662.26" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (659 samples, 1.40%; -0.03%)</title><rect x="369.2" y="181" width="16.4" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="372.16" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1140.3" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%; +0.00%)</title><rect x="221.1" y="181" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="224.12" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (5 samples, 0.01%; +0.00%)</title><rect x="564.5" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="567.51" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (6 samples, 0.01%; -0.00%)</title><rect x="698.5" y="453" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="701.51" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (93 samples, 0.20%; -0.01%)</title><rect x="150.7" y="197" width="2.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="153.74" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%; +0.00%)</title><rect x="410.7" y="277" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="413.66" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,086 samples, 4.42%; -0.01%)</title><rect x="999.5" y="309" width="52.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1002.48" y="319.5" >servi..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (20 samples, 0.04%; -0.02%)</title><rect x="798.0" y="165" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="801.04" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (4 samples, 0.01%; +0.00%)</title><rect x="644.4" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="647.40" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (59 samples, 0.13%; -0.01%)</title><rect x="1151.7" y="437" width="1.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1154.75" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (4 samples, 0.01%; +0.01%)</title><rect x="756.8" y="357" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="759.76" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.02%; +0.00%)</title><rect x="17.8" y="277" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="20.81" y="287.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.00%)</title><rect x="139.9" y="261" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="142.93" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%; 0.00%)</title><rect x="868.0" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.05" y="335.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (22 samples, 0.05%; +0.03%)</title><rect x="1152.5" y="405" width="0.5" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="1155.50" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (13 samples, 0.03%; -0.00%)</title><rect x="833.4" y="277" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="836.40" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="980.9" y="357" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="983.89" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (25 samples, 0.05%; +0.00%)</title><rect x="1044.7" y="277" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1047.74" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.01%; -0.01%)</title><rect x="852.9" y="325" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="855.89" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%; +0.00%)</title><rect x="859.8" y="405" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="862.77" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.02%; -0.00%)</title><rect x="418.4" y="373" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="421.42" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (8 samples, 0.02%; -0.01%)</title><rect x="942.3" y="341" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="945.31" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (28 samples, 0.06%; +0.02%)</title><rect x="62.5" y="437" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="65.52" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (158 samples, 0.34%; +0.01%)</title><rect x="36.3" y="469" width="4.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="39.32" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%; -0.01%)</title><rect x="898.2" y="261" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="901.17" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (6 samples, 0.01%; 0.00%)</title><rect x="811.7" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="814.68" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (11 samples, 0.02%; +0.01%)</title><rect x="1101.2" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1104.18" y="367.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (15 samples, 0.03%; +0.00%)</title><rect x="1086.5" y="277" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1089.52" y="287.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%; +0.00%)</title><rect x="973.2" y="357" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="976.21" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (25 samples, 0.05%; 0.00%)</title><rect x="1107.8" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.81" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,754 samples, 12.20%; +0.04%)</title><rect x="114.9" y="341" width="144.0" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="117.91" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1115.0" y="389" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1118.04" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%; +0.01%)</title><rect x="385.1" y="149" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="388.07" y="159.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (90 samples, 0.19%; +0.01%)</title><rect x="1131.2" y="405" width="2.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1134.15" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (27 samples, 0.06%; 0.00%)</title><rect x="867.8" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.82" y="495.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (7 samples, 0.01%; -0.02%)</title><rect x="1049.5" y="277" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1052.46" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="37.1" y="437" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="40.15" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; 0.00%)</title><rect x="41.4" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="44.37" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (9 samples, 0.02%; +0.01%)</title><rect x="290.1" y="293" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="293.14" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,798 samples, 8.05%; +0.02%)</title><rect x="298.5" y="261" width="95.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="301.48" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>query::result_memory_accounter::check (9 samples, 0.02%; +0.00%)</title><rect x="301.9" y="213" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="304.90" y="223.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; -0.02%)</title><rect x="822.5" y="373" width="0.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="825.49" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (9 samples, 0.02%; +0.01%)</title><rect x="119.2" y="293" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="122.19" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="431.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; 0.00%)</title><rect x="45.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.95" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (22 samples, 0.05%; -0.00%)</title><rect x="22.8" y="421" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="25.79" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (15 samples, 0.03%; -0.01%)</title><rect x="766.7" y="405" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="769.69" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (87 samples, 0.18%; +0.04%)</title><rect x="186.3" y="117" width="2.2" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="189.29" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.01%; +0.00%)</title><rect x="943.2" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="946.23" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (857 samples, 1.82%; -0.02%)</title><rect x="492.6" y="309" width="21.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="495.58" y="319.5" >s..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (151 samples, 0.32%; +0.00%)</title><rect x="587.3" y="421" width="3.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="590.30" y="431.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; 0.00%)</title><rect x="491.0" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="494.03" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; -0.02%)</title><rect x="937.5" y="357" width="0.7" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="940.50" y="367.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (5 samples, 0.01%; +0.01%)</title><rect x="771.6" y="373" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="774.65" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (17 samples, 0.04%; +0.00%)</title><rect x="745.7" y="357" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="748.65" y="367.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%; +0.01%)</title><rect x="234.5" y="165" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="237.50" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.01%; 0.00%)</title><rect x="869.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.00" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,524 samples, 11.71%; -0.01%)</title><rect x="722.3" y="469" width="138.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="725.31" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (7 samples, 0.01%; -0.00%)</title><rect x="865.3" y="485" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="868.35" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; 0.00%)</title><rect x="23.8" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.76" y="303.5" ></text>
</g>
<g >
<title>database::find_uuid (185 samples, 0.39%; -0.01%)</title><rect x="762.0" y="389" width="4.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="764.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (4 samples, 0.01%; -0.03%)</title><rect x="849.1" y="373" width="0.1" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="852.11" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (14 samples, 0.03%; -0.01%)</title><rect x="634.5" y="469" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="637.54" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (84 samples, 0.18%; +0.02%)</title><rect x="377.2" y="149" width="2.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="380.24" y="159.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (37 samples, 0.08%; +0.01%)</title><rect x="733.5" y="405" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="736.47" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (57 samples, 0.12%; +0.01%)</title><rect x="269.3" y="309" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="272.33" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.03%; +0.01%)</title><rect x="189.5" y="101" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="192.49" y="111.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%; +0.00%)</title><rect x="514.8" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="517.80" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (4 samples, 0.01%; 0.00%)</title><rect x="1169.7" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1172.66" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (40 samples, 0.08%; +0.04%)</title><rect x="66.5" y="405" width="1.0" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="69.54" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (191 samples, 0.40%; +0.01%)</title><rect x="728.7" y="373" width="4.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="731.69" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (40 samples, 0.08%; +0.00%)</title><rect x="68.8" y="389" width="1.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="71.77" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.01%; +0.00%)</title><rect x="989.9" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="992.89" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (16 samples, 0.03%; +0.01%)</title><rect x="1061.8" y="261" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1064.85" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%; +0.03%)</title><rect x="544.7" y="325" width="2.0" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="547.74" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (6 samples, 0.01%; +0.01%)</title><rect x="505.4" y="197" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="508.41" y="207.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (8 samples, 0.02%; +0.02%)</title><rect x="431.4" y="341" width="0.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="434.41" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (110 samples, 0.23%; +0.01%)</title><rect x="837.9" y="437" width="2.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="840.92" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (7 samples, 0.01%; -0.01%)</title><rect x="1029.1" y="149" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1032.15" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (10 samples, 0.02%; +0.01%)</title><rect x="884.2" y="421" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="887.19" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (170 samples, 0.36%; 0.00%)</title><rect x="1058.4" y="325" width="4.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1061.40" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (49 samples, 0.10%; +0.01%)</title><rect x="1128.4" y="389" width="1.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1131.40" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (44 samples, 0.09%; -0.02%)</title><rect x="619.7" y="421" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="622.70" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (9 samples, 0.02%; +0.02%)</title><rect x="840.9" y="437" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="843.93" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (65 samples, 0.14%; +0.03%)</title><rect x="380.7" y="133" width="1.7" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="383.74" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (65 samples, 0.14%; 0.00%)</title><rect x="1056.6" y="325" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.57" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%; -0.01%)</title><rect x="836.5" y="421" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="839.50" y="431.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%; +0.00%)</title><rect x="328.7" y="181" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="331.67" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (127 samples, 0.27%; +0.06%)</title><rect x="171.3" y="101" width="3.2" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="174.33" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.01%)</title><rect x="219.5" y="197" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="222.46" y="207.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (11 samples, 0.02%; +0.01%)</title><rect x="1138.9" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1141.91" y="479.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; +0.01%)</title><rect x="489.6" y="325" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="492.55" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; 0.00%)</title><rect x="23.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.74" y="319.5" ></text>
</g>
<g >
<title>validation::validate_column_family (13 samples, 0.03%; +0.01%)</title><rect x="834.5" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="837.52" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (22 samples, 0.05%; 0.00%)</title><rect x="204.0" y="165" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.98" y="175.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (81 samples, 0.17%; +0.02%)</title><rect x="785.9" y="293" width="2.1" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="788.93" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (687 samples, 1.46%; -0.02%)</title><rect x="888.3" y="405" width="17.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="891.34" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (5 samples, 0.01%; +0.00%)</title><rect x="454.7" y="277" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="457.67" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; +0.02%)</title><rect x="522.8" y="325" width="0.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="525.75" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (31 samples, 0.07%; +0.01%)</title><rect x="364.3" y="165" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="367.25" y="175.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (7 samples, 0.01%; -0.02%)</title><rect x="1031.7" y="165" width="0.2" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1034.70" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (7 samples, 0.01%; +0.00%)</title><rect x="838.8" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="841.80" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (270 samples, 0.57%; -0.00%)</title><rect x="689.4" y="485" width="6.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="692.41" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%; -0.00%)</title><rect x="713.2" y="485" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="716.20" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="453" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.19" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (157 samples, 0.33%; +0.00%)</title><rect x="803.2" y="165" width="3.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="806.22" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (158 samples, 0.34%; -0.01%)</title><rect x="542.8" y="389" width="4.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="545.82" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (9 samples, 0.02%; 0.00%)</title><rect x="1120.5" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1123.55" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,475 samples, 7.37%; +0.02%)</title><rect x="302.1" y="245" width="87.0" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="305.13" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="212.7" y="197" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="215.68" y="207.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (362 samples, 0.77%; -0.06%)</title><rect x="523.4" y="325" width="9.0" height="15.0" fill="rgb(102,102,255)" rx="2" ry="2" />
<text  x="526.35" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (9 samples, 0.02%; 0.00%)</title><rect x="1175.4" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.39" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (64 samples, 0.14%; +0.01%)</title><rect x="812.9" y="293" width="1.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="815.88" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (44 samples, 0.09%; +0.03%)</title><rect x="607.3" y="437" width="1.1" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="610.27" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (100 samples, 0.21%; +0.02%)</title><rect x="1172.0" y="437" width="2.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1174.96" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (432 samples, 0.92%; +0.03%)</title><rect x="701.8" y="469" width="10.8" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="704.77" y="479.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (15 samples, 0.03%; +0.02%)</title><rect x="1096.0" y="309" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1099.00" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (67 samples, 0.14%; +0.01%)</title><rect x="770.0" y="373" width="1.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="772.97" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,271 samples, 4.82%; +0.00%)</title><rect x="994.9" y="325" width="56.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="997.92" y="335.5" >servic..</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (5 samples, 0.01%; -0.01%)</title><rect x="311.4" y="165" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="314.39" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (285 samples, 0.60%; +0.00%)</title><rect x="16.9" y="581" width="7.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="19.86" y="591.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (5 samples, 0.01%; 0.00%)</title><rect x="718.2" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="721.23" y="479.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (24 samples, 0.05%; +0.00%)</title><rect x="820.5" y="293" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="823.49" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (21 samples, 0.04%; +0.01%)</title><rect x="200.5" y="101" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="203.50" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; -0.01%)</title><rect x="1121.0" y="405" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1124.05" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (16 samples, 0.03%; +0.02%)</title><rect x="11.9" y="581" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="14.88" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (30 samples, 0.06%; +0.01%)</title><rect x="579.4" y="357" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="582.45" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (12 samples, 0.03%; +0.00%)</title><rect x="242.3" y="197" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="245.31" y="207.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%; +0.01%)</title><rect x="943.4" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="946.36" y="367.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%; -0.00%)</title><rect x="744.3" y="373" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="747.28" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (172 samples, 0.36%; -0.01%)</title><rect x="989.2" y="325" width="4.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="992.22" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (4 samples, 0.01%; +0.00%)</title><rect x="42.4" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="45.35" y="479.5" ></text>
</g>
<g >
<title>operator new (144 samples, 0.31%; -0.00%)</title><rect x="1007.5" y="277" width="3.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1010.53" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%; +0.00%)</title><rect x="758.5" y="405" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="761.46" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="904.5" y="293" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="907.48" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (26 samples, 0.06%; +0.00%)</title><rect x="549.7" y="405" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="552.67" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (20 samples, 0.04%; +0.02%)</title><rect x="50.2" y="485" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="53.16" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,579 samples, 22.43%; -0.04%)</title><rect x="874.2" y="469" width="264.7" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="877.23" y="479.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (257 samples, 0.54%; -0.02%)</title><rect x="746.1" y="373" width="6.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="749.08" y="383.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.01%)</title><rect x="796.4" y="213" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="799.42" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (24 samples, 0.05%; -0.03%)</title><rect x="1071.9" y="293" width="0.6" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1074.93" y="303.5" ></text>
</g>
<g >
<title>__tls_init (15 samples, 0.03%; -0.01%)</title><rect x="140.8" y="245" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="143.80" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%; +0.01%)</title><rect x="792.3" y="229" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="795.29" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (52 samples, 0.11%; -0.01%)</title><rect x="1164.2" y="469" width="1.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1167.20" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (26 samples, 0.06%; -0.01%)</title><rect x="816.1" y="309" width="0.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="819.11" y="319.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (4 samples, 0.01%; +0.00%)</title><rect x="600.5" y="389" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="603.46" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (17 samples, 0.04%; +0.02%)</title><rect x="442.7" y="261" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="445.74" y="271.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,583 samples, 26.68%; -0.03%)</title><rect x="104.4" y="421" width="314.9" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="107.45" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (336 samples, 0.71%; 0.00%)</title><rect x="539.7" y="421" width="8.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="542.69" y="431.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.01%)</title><rect x="534.7" y="325" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="537.66" y="335.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (4 samples, 0.01%; +0.01%)</title><rect x="843.2" y="437" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="846.18" y="447.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (917 samples, 1.94%; -0.02%)</title><rect x="788.6" y="277" width="23.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="791.61" y="287.5" >a..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%; 0.00%)</title><rect x="868.9" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.90" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="531.0" y="245" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="534.03" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (393 samples, 0.83%; -0.01%)</title><rect x="665.2" y="501" width="9.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="668.16" y="511.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (173 samples, 0.37%; +0.03%)</title><rect x="340.8" y="165" width="4.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="343.76" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (11 samples, 0.02%; +0.01%)</title><rect x="98.0" y="421" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="101.04" y="431.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.02%)</title><rect x="587.6" y="405" width="0.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="590.58" y="415.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (6 samples, 0.01%; 0.00%)</title><rect x="743.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.78" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (6 samples, 0.01%; +0.01%)</title><rect x="1062.4" y="309" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1065.37" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (4 samples, 0.01%; -0.00%)</title><rect x="32.1" y="485" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="35.07" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="164.1" y="133" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="167.10" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%; +0.01%)</title><rect x="148.1" y="197" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="151.11" y="207.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (44 samples, 0.09%; -0.00%)</title><rect x="755.8" y="373" width="1.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="758.81" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (93 samples, 0.20%; +0.01%)</title><rect x="983.3" y="309" width="2.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="986.34" y="319.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (24 samples, 0.05%; -0.00%)</title><rect x="805.8" y="101" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="808.80" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (18 samples, 0.04%; -0.05%)</title><rect x="1134.6" y="421" width="0.5" height="15.0" fill="rgb(107,107,255)" rx="2" ry="2" />
<text  x="1137.63" y="431.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (79 samples, 0.17%; +0.00%)</title><rect x="132.9" y="245" width="2.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="135.95" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%; -0.00%)</title><rect x="667.0" y="469" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="669.99" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (16 samples, 0.03%; +0.00%)</title><rect x="807.3" y="213" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="810.33" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; -0.00%)</title><rect x="217.4" y="117" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="220.44" y="127.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (10 samples, 0.02%; +0.01%)</title><rect x="222.2" y="197" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="225.19" y="207.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (29 samples, 0.06%; +0.02%)</title><rect x="92.2" y="437" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="95.21" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (33 samples, 0.07%; +0.01%)</title><rect x="407.9" y="277" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="410.91" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (7 samples, 0.01%; -0.00%)</title><rect x="703.8" y="453" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="706.82" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (119 samples, 0.25%; +0.01%)</title><rect x="410.2" y="293" width="3.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="413.21" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (37 samples, 0.08%; -0.00%)</title><rect x="763.5" y="341" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="766.52" y="351.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (6 samples, 0.01%; 0.00%)</title><rect x="1114.7" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.74" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%; -0.01%)</title><rect x="858.8" y="421" width="1.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="861.79" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (10 samples, 0.02%; +0.00%)</title><rect x="630.5" y="485" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="633.49" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (16 samples, 0.03%; 0.00%)</title><rect x="21.5" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.46" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (9 samples, 0.02%; 0.00%)</title><rect x="1175.4" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.39" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.01%; +0.01%)</title><rect x="651.6" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="654.60" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; +0.01%)</title><rect x="692.4" y="437" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="695.41" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (972 samples, 2.06%; +0.02%)</title><rect x="640.8" y="501" width="24.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="643.79" y="511.5" >s..</text>
</g>
<g >
<title>utils::phased_barrier::start (5 samples, 0.01%; -0.00%)</title><rect x="1043.3" y="261" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1046.31" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (5 samples, 0.01%; 0.00%)</title><rect x="803.0" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="806.05" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (40 samples, 0.08%; 0.00%)</title><rect x="739.5" y="373" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="742.50" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (27 samples, 0.06%; +0.03%)</title><rect x="40.7" y="437" width="0.7" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="43.70" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (4 samples, 0.01%; +0.00%)</title><rect x="1174.6" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1177.56" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%; +0.01%)</title><rect x="507.6" y="181" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="510.57" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (169 samples, 0.36%; -0.01%)</title><rect x="762.3" y="373" width="4.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="765.29" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (27 samples, 0.06%; -0.00%)</title><rect x="132.3" y="245" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="135.27" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (5 samples, 0.01%; +0.01%)</title><rect x="767.1" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="770.07" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.00%)</title><rect x="254.4" y="293" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="257.37" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%; 0.00%)</title><rect x="272.8" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="275.78" y="303.5" ></text>
</g>
<g >
<title>table::make_reader (4,383 samples, 9.29%; +0.04%)</title><rect x="426.2" y="357" width="109.7" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="429.20" y="367.5" >table::make_r..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.01%; -0.01%)</title><rect x="273.9" y="277" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="276.93" y="287.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (362 samples, 0.77%; -0.00%)</title><rect x="725.6" y="437" width="9.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="728.64" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (44 samples, 0.09%; +0.06%)</title><rect x="15.7" y="613" width="1.1" height="15.0" fill="rgb(255,86,86)" rx="2" ry="2" />
<text  x="18.70" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%; +0.00%)</title><rect x="660.1" y="485" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="663.13" y="495.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (5 samples, 0.01%; -0.01%)</title><rect x="575.2" y="341" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="578.24" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (5 samples, 0.01%; -0.01%)</title><rect x="752.4" y="357" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="755.38" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (86 samples, 0.18%; -0.01%)</title><rect x="666.2" y="485" width="2.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="669.24" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%; +0.00%)</title><rect x="1064.8" y="341" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1067.83" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.01%)</title><rect x="789.6" y="229" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="792.56" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="103.8" y="421" width="0.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="106.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (111 samples, 0.24%; -0.00%)</title><rect x="936.8" y="405" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="939.78" y="415.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (12 samples, 0.03%; +0.00%)</title><rect x="708.6" y="421" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="711.65" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; +0.00%)</title><rect x="281.7" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="284.74" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%; 0.00%)</title><rect x="195.5" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="198.55" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (7 samples, 0.01%; -0.01%)</title><rect x="1011.2" y="277" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1014.23" y="287.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (4 samples, 0.01%; +0.01%)</title><rect x="1101.5" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1104.46" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (16 samples, 0.03%; +0.00%)</title><rect x="873.2" y="453" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="876.15" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="58.8" y="437" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="61.79" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%; +0.00%)</title><rect x="696.4" y="485" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="699.44" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (41 samples, 0.09%; +0.01%)</title><rect x="18.1" y="277" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="21.13" y="287.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (89 samples, 0.19%; -0.01%)</title><rect x="800.8" y="149" width="2.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="803.77" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (112 samples, 0.24%; +0.00%)</title><rect x="982.9" y="341" width="2.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="985.94" y="351.5" ></text>
</g>
<g >
<title>database::find_schema (80 samples, 0.17%; +0.01%)</title><rect x="760.0" y="389" width="2.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="762.99" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (70 samples, 0.15%; +0.01%)</title><rect x="192.7" y="117" width="1.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="195.72" y="127.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (7 samples, 0.01%; -0.00%)</title><rect x="763.9" y="309" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="766.89" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (7 samples, 0.01%; +0.01%)</title><rect x="800.5" y="117" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="803.49" y="127.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%; +0.01%)</title><rect x="141.9" y="229" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="144.85" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (57 samples, 0.12%; +0.01%)</title><rect x="363.7" y="181" width="1.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="366.70" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (4 samples, 0.01%; -0.00%)</title><rect x="817.7" y="341" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="820.66" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (5 samples, 0.01%; +0.01%)</title><rect x="243.7" y="229" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="246.66" y="239.5" ></text>
</g>
<g >
<title>auth::resource::resource (4 samples, 0.01%; +0.01%)</title><rect x="759.6" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="762.56" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (14 samples, 0.03%; +0.01%)</title><rect x="1169.2" y="469" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1172.16" y="479.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%; +0.02%)</title><rect x="499.8" y="229" width="0.3" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="502.76" y="239.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (574 samples, 1.22%; +0.01%)</title><rect x="738.1" y="405" width="14.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="741.15" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; 0.00%)</title><rect x="635.5" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.54" y="479.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%; -0.00%)</title><rect x="1037.7" y="181" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1040.73" y="191.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (13 samples, 0.03%; -0.00%)</title><rect x="1093.9" y="261" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1096.92" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%; +0.01%)</title><rect x="514.0" y="309" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="517.02" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (95 samples, 0.20%; -0.00%)</title><rect x="831.5" y="357" width="2.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="834.54" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (39 samples, 0.08%; -0.01%)</title><rect x="230.6" y="165" width="1.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="233.65" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (32 samples, 0.07%; -0.00%)</title><rect x="118.7" y="309" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="121.69" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%; +0.00%)</title><rect x="488.0" y="325" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="491.00" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (192 samples, 0.41%; 0.00%)</title><rect x="17.6" y="405" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (248 samples, 0.53%; -0.02%)</title><rect x="92.9" y="437" width="6.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="95.94" y="447.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (30 samples, 0.06%; +0.01%)</title><rect x="802.2" y="117" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="805.17" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (254 samples, 0.54%; +0.00%)</title><rect x="213.3" y="229" width="6.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="216.31" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (6 samples, 0.01%; +0.00%)</title><rect x="539.2" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="542.21" y="415.5" ></text>
</g>
<g >
<title>seastar::io_queue::poll_io_queue (4 samples, 0.01%; -0.00%)</title><rect x="1176.6" y="485" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1179.64" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (4 samples, 0.01%; +0.00%)</title><rect x="853.4" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="856.39" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (281 samples, 0.60%; -0.08%)</title><rect x="179.1" y="85" width="7.1" height="15.0" fill="rgb(53,53,255)" rx="2" ry="2" />
<text  x="182.13" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%; 0.00%)</title><rect x="655.6" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.58" y="463.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (31 samples, 0.07%; +0.00%)</title><rect x="327.3" y="181" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="330.30" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (11 samples, 0.02%; +0.01%)</title><rect x="823.9" y="341" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="826.89" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (55 samples, 0.12%; +0.02%)</title><rect x="1165.5" y="485" width="1.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1168.51" y="495.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (4 samples, 0.01%; +0.00%)</title><rect x="877.7" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="880.68" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (119 samples, 0.25%; -0.01%)</title><rect x="1027.8" y="165" width="3.0" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1030.82" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.04%; +0.00%)</title><rect x="1049.0" y="277" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1052.04" y="287.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (18 samples, 0.04%; +0.00%)</title><rect x="732.9" y="293" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="735.94" y="303.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; 0.00%)</title><rect x="654.1" y="453" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.10" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,087 samples, 97.72%; 0.00%)</title><rect x="24.5" y="533" width="1153.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.46" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (70 samples, 0.15%; 0.00%)</title><rect x="902.9" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="905.90" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (34 samples, 0.07%; -0.00%)</title><rect x="781.1" y="293" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="784.08" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="1011.4" y="277" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1014.41" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (19 samples, 0.04%; -0.02%)</title><rect x="52.1" y="469" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="55.08" y="479.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (159 samples, 0.34%; -0.01%)</title><rect x="923.1" y="389" width="4.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="926.09" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (11 samples, 0.02%; 0.00%)</title><rect x="19.8" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.83" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (116 samples, 0.25%; -0.01%)</title><rect x="273.6" y="293" width="2.9" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="276.56" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (10 samples, 0.02%; +0.00%)</title><rect x="580.2" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="583.20" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (4 samples, 0.01%; -0.05%)</title><rect x="1077.0" y="309" width="0.1" height="15.0" fill="rgb(119,119,255)" rx="2" ry="2" />
<text  x="1079.99" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.01%; -0.00%)</title><rect x="488.1" y="325" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="491.12" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (6 samples, 0.01%; +0.01%)</title><rect x="1148.1" y="469" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1151.12" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%; -0.02%)</title><rect x="441.2" y="229" width="1.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="444.16" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%; +0.01%)</title><rect x="316.7" y="197" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="319.67" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (29 samples, 0.06%; -0.01%)</title><rect x="674.2" y="453" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="677.25" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%; +0.01%)</title><rect x="1170.6" y="453" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1173.56" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (51 samples, 0.11%; +0.01%)</title><rect x="823.1" y="373" width="1.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="826.14" y="383.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (4 samples, 0.01%; -0.00%)</title><rect x="815.0" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="817.98" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%; +0.01%)</title><rect x="816.9" y="325" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="819.91" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (80 samples, 0.17%; +0.02%)</title><rect x="941.5" y="389" width="2.0" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="944.48" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (12 samples, 0.03%; +0.00%)</title><rect x="852.7" y="357" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="855.74" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (39 samples, 0.08%; +0.00%)</title><rect x="1139.2" y="405" width="1.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1142.19" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (11 samples, 0.02%; +0.00%)</title><rect x="651.0" y="389" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="654.03" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (8 samples, 0.02%; 0.00%)</title><rect x="21.6" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.63" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (12 samples, 0.03%; +0.01%)</title><rect x="797.1" y="181" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="800.14" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (18 samples, 0.04%; +0.01%)</title><rect x="865.9" y="501" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="868.87" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%; 0.00%)</title><rect x="1135.1" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1138.11" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,237 samples, 2.62%; -0.01%)</title><rect x="1143.7" y="501" width="31.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1146.71" y="511.5" >se..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; -0.00%)</title><rect x="220.1" y="213" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="223.06" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; -0.00%)</title><rect x="1139.0" y="453" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1142.01" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (19 samples, 0.04%; +0.00%)</title><rect x="135.0" y="245" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="138.02" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%; -0.01%)</title><rect x="829.9" y="293" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="832.87" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (25 samples, 0.05%; +0.00%)</title><rect x="867.8" y="469" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="870.82" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%; +0.01%)</title><rect x="497.2" y="277" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="500.16" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (44 samples, 0.09%; +0.01%)</title><rect x="301.0" y="229" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="304.03" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (15 samples, 0.03%; -0.01%)</title><rect x="71.4" y="405" width="0.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="74.45" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; +0.01%)</title><rect x="208.5" y="149" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="211.51" y="159.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (4 samples, 0.01%; +0.00%)</title><rect x="968.4" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="971.35" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (16 samples, 0.03%; +0.03%)</title><rect x="218.5" y="181" width="0.4" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="221.46" y="191.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; 0.00%)</title><rect x="148.6" y="181" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="151.58" y="191.5" ></text>
</g>
<g >
<title>operator new (63 samples, 0.13%; +0.00%)</title><rect x="983.8" y="293" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="986.81" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (33 samples, 0.07%; -0.02%)</title><rect x="287.4" y="293" width="0.8" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="290.39" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (55 samples, 0.12%; -0.02%)</title><rect x="903.3" y="341" width="1.4" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="906.28" y="351.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%; +0.00%)</title><rect x="846.5" y="421" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="849.53" y="431.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; +0.01%)</title><rect x="699.5" y="485" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="702.47" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,900 samples, 4.03%; +0.03%)</title><rect x="1002.5" y="293" width="47.5" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="1005.50" y="303.5" >serv..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; -0.00%)</title><rect x="603.7" y="421" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="606.72" y="431.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (7 samples, 0.01%; +0.01%)</title><rect x="599.7" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="602.69" y="415.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (35 samples, 0.07%; +0.01%)</title><rect x="927.1" y="389" width="0.8" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="930.07" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (10 samples, 0.02%; +0.01%)</title><rect x="627.6" y="485" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="630.63" y="495.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%; +0.01%)</title><rect x="215.3" y="181" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="218.31" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%; -0.02%)</title><rect x="240.3" y="245" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="243.28" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (27 samples, 0.06%; +0.02%)</title><rect x="1093.6" y="277" width="0.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1096.65" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (49 samples, 0.10%; +0.02%)</title><rect x="780.8" y="309" width="1.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="783.75" y="319.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (54 samples, 0.11%; +0.00%)</title><rect x="480.7" y="213" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="483.67" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (11 samples, 0.02%; -0.01%)</title><rect x="1048.7" y="213" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1051.74" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (4 samples, 0.01%; +0.01%)</title><rect x="810.7" y="229" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="813.70" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%; -0.01%)</title><rect x="445.2" y="261" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="448.22" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.01%; +0.00%)</title><rect x="899.4" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="902.45" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; +0.01%)</title><rect x="769.4" y="357" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="772.42" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%; -0.01%)</title><rect x="932.6" y="389" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="935.62" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (48 samples, 0.10%; -0.01%)</title><rect x="291.2" y="261" width="1.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="294.22" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%; -0.00%)</title><rect x="852.4" y="325" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="855.36" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.01%)</title><rect x="70.5" y="405" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="73.50" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; -0.03%)</title><rect x="544.0" y="341" width="0.5" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="546.97" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (30 samples, 0.06%; +0.03%)</title><rect x="244.5" y="277" width="0.7" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="247.48" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (6 samples, 0.01%; -0.00%)</title><rect x="960.8" y="389" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="963.85" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="1113.3" y="357" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1116.26" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (30 samples, 0.06%; +0.01%)</title><rect x="694.2" y="453" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="697.19" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (4 samples, 0.01%; +0.01%)</title><rect x="306.2" y="181" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="309.21" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (13 samples, 0.03%; +0.01%)</title><rect x="640.1" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="643.14" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%; +0.01%)</title><rect x="748.5" y="277" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="751.53" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,714 samples, 12.12%; +0.06%)</title><rect x="961.1" y="389" width="143.0" height="15.0" fill="rgb(255,98,98)" rx="2" ry="2" />
<text  x="964.15" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (118 samples, 0.25%; -0.00%)</title><rect x="1171.7" y="453" width="3.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1174.71" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (296 samples, 0.63%; +0.00%)</title><rect x="1154.4" y="469" width="7.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1157.37" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; +0.00%)</title><rect x="455.0" y="293" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="458.02" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (30 samples, 0.06%; -0.03%)</title><rect x="33.4" y="485" width="0.8" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="36.42" y="495.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (110 samples, 0.23%; +0.01%)</title><rect x="515.0" y="325" width="2.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="518.05" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (80 samples, 0.17%; +0.02%)</title><rect x="796.6" y="213" width="2.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="799.57" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.01%)</title><rect x="252.7" y="261" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="255.72" y="271.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,336 samples, 4.95%; +0.01%)</title><rect x="993.7" y="341" width="58.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="996.72" y="351.5" >servic..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (17 samples, 0.04%; +0.02%)</title><rect x="1030.4" y="117" width="0.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1033.37" y="127.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="210.9" y="149" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="213.91" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (4 samples, 0.01%; +0.00%)</title><rect x="222.6" y="229" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="225.59" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (51 samples, 0.11%; +0.00%)</title><rect x="829.0" y="309" width="1.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="831.97" y="319.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (59 samples, 0.13%; +0.00%)</title><rect x="921.3" y="373" width="1.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="924.34" y="383.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (46 samples, 0.10%; +0.03%)</title><rect x="221.4" y="229" width="1.2" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="224.44" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.00%)</title><rect x="690.0" y="453" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="692.98" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (30 samples, 0.06%; -0.00%)</title><rect x="1030.0" y="149" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1033.05" y="159.5" ></text>
</g>
<g >
<title>seastar::gate::enter (10 samples, 0.02%; -0.01%)</title><rect x="1038.7" y="229" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1041.71" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%; +0.01%)</title><rect x="624.9" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="627.88" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (8 samples, 0.02%; +0.01%)</title><rect x="487.2" y="325" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="490.20" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (16 samples, 0.03%; -0.00%)</title><rect x="537.8" y="405" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="540.81" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="565.8" y="261" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="568.81" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (15 samples, 0.03%; -0.00%)</title><rect x="800.3" y="133" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="803.29" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.01%)</title><rect x="610.0" y="405" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="613.05" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.03%; -0.00%)</title><rect x="569.1" y="293" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="572.06" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (14 samples, 0.03%; -0.02%)</title><rect x="53.1" y="469" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="56.11" y="479.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; 0.00%)</title><rect x="1066.9" y="325" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1069.85" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (12 samples, 0.03%; +0.00%)</title><rect x="620.8" y="437" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="623.80" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (14 samples, 0.03%; +0.00%)</title><rect x="816.4" y="293" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="819.41" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%; -0.01%)</title><rect x="850.3" y="373" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="853.31" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; -0.01%)</title><rect x="853.1" y="405" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="856.14" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (61 samples, 0.13%; 0.00%)</title><rect x="1056.7" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.67" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%; +0.01%)</title><rect x="1038.0" y="245" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1041.03" y="255.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (211 samples, 0.45%; -0.03%)</title><rect x="704.5" y="453" width="5.3" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="707.49" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (4 samples, 0.01%; +0.00%)</title><rect x="900.7" y="325" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="903.75" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (11 samples, 0.02%; -0.00%)</title><rect x="202.6" y="85" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="205.60" y="95.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (278 samples, 0.59%; -0.01%)</title><rect x="196.4" y="165" width="7.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="199.40" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (18 samples, 0.04%; +0.03%)</title><rect x="902.1" y="357" width="0.4" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="905.10" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (15 samples, 0.03%; +0.00%)</title><rect x="443.2" y="261" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="446.16" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (7 samples, 0.01%; +0.00%)</title><rect x="814.7" y="309" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="817.68" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (17 samples, 0.04%; +0.00%)</title><rect x="485.2" y="181" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="488.22" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (23 samples, 0.05%; -0.00%)</title><rect x="1119.7" y="389" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1122.72" y="399.5" ></text>
</g>
<g >
<title>schema::get_partitioner (10 samples, 0.02%; +0.01%)</title><rect x="933.0" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="935.97" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (72 samples, 0.15%; +0.01%)</title><rect x="794.1" y="181" width="1.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="797.14" y="191.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,089 samples, 97.72%; 0.00%)</title><rect x="24.4" y="565" width="1153.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.44" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>locator::token_metadata::first_token (361 samples, 0.77%; -0.01%)</title><rect x="1077.5" y="277" width="9.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1080.49" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="150.1" y="181" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="153.13" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (314 samples, 0.67%; -0.02%)</title><rect x="799.3" y="181" width="7.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="802.29" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (18 samples, 0.04%; +0.01%)</title><rect x="698.7" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="701.66" y="479.5" ></text>
</g>
<g >
<title>database::do_apply (37 samples, 0.08%; +0.00%)</title><rect x="1139.2" y="341" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1142.21" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (46 samples, 0.10%; +0.03%)</title><rect x="190.2" y="69" width="1.1" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="193.17" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%; +0.00%)</title><rect x="974.6" y="309" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="977.61" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (182 samples, 0.39%; -0.00%)</title><rect x="728.8" y="357" width="4.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="731.84" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; -0.01%)</title><rect x="697.8" y="469" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="700.81" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (387 samples, 0.82%; -0.01%)</title><rect x="245.3" y="309" width="9.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="248.31" y="319.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (8 samples, 0.02%; +0.01%)</title><rect x="1000.9" y="293" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1003.90" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (22 samples, 0.05%; +0.01%)</title><rect x="796.9" y="197" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="799.89" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (266 samples, 0.56%; -0.02%)</title><rect x="611.1" y="437" width="6.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="614.15" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="213.2" y="213" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="216.21" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,100 samples, 10.81%; -0.01%)</title><rect x="285.9" y="325" width="127.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="288.92" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>query::querier_base::querier_base (32 samples, 0.07%; +0.00%)</title><rect x="619.8" y="405" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="622.83" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (266 samples, 0.56%; +0.00%)</title><rect x="17.3" y="501" width="6.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="20.28" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (68 samples, 0.14%; +0.02%)</title><rect x="697.4" y="485" width="1.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="700.41" y="495.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%; -0.00%)</title><rect x="1094.9" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1097.85" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="1122.7" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1125.70" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%; 0.00%)</title><rect x="901.9" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="904.95" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (31 samples, 0.07%; -0.01%)</title><rect x="506.6" y="197" width="0.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="509.64" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60 samples, 0.13%; 0.00%)</title><rect x="1156.4" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.45" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (61 samples, 0.13%; 0.00%)</title><rect x="17.8" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.76" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.02%; +0.00%)</title><rect x="1098.3" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1101.30" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (46 samples, 0.10%; 0.00%)</title><rect x="22.4" y="469" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.43" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (21 samples, 0.04%; 0.00%)</title><rect x="209.0" y="133" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="211.96" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (4 samples, 0.01%; +0.01%)</title><rect x="570.5" y="341" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="573.46" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%; 0.00%)</title><rect x="749.5" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.45" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (6 samples, 0.01%; -0.00%)</title><rect x="125.9" y="261" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="128.94" y="271.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (9 samples, 0.02%; -0.00%)</title><rect x="510.4" y="229" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="513.39" y="239.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (266 samples, 0.56%; -0.00%)</title><rect x="17.3" y="517" width="6.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="20.28" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (90 samples, 0.19%; -0.01%)</title><rect x="831.6" y="341" width="2.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="834.57" y="351.5" ></text>
</g>
<g >
<title>query_result_builder::consume (13 samples, 0.03%; 0.00%)</title><rect x="686.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.71" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%; -0.00%)</title><rect x="650.0" y="453" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="652.98" y="463.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (4 samples, 0.01%; -0.01%)</title><rect x="234.9" y="165" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="237.90" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%; 0.00%)</title><rect x="868.9" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.90" y="463.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%; +0.01%)</title><rect x="528.1" y="293" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="531.11" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (27 samples, 0.06%; -0.00%)</title><rect x="1037.2" y="213" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1040.23" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (31 samples, 0.07%; +0.00%)</title><rect x="797.8" y="181" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="800.77" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; -0.01%)</title><rect x="757.8" y="373" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="760.79" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; +0.00%)</title><rect x="1031.0" y="165" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1034.00" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (8 samples, 0.02%; +0.01%)</title><rect x="884.7" y="421" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="887.66" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,140 samples, 10.90%; -0.00%)</title><rect x="285.3" y="357" width="128.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="288.32" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%; +0.00%)</title><rect x="486.1" y="197" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="489.15" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.01%; +0.01%)</title><rect x="25.4" y="517" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="28.44" y="527.5" ></text>
</g>
<g >
<title>dht::shard_of (26 samples, 0.06%; +0.00%)</title><rect x="1005.8" y="277" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1008.83" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (18 samples, 0.04%; +0.00%)</title><rect x="616.8" y="389" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="619.83" y="399.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (11 samples, 0.02%; +0.00%)</title><rect x="22.5" y="421" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="25.48" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (53 samples, 0.11%; -0.01%)</title><rect x="559.7" y="309" width="1.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="562.66" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%; 0.00%)</title><rect x="715.6" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="718.60" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (4 samples, 0.01%; +0.01%)</title><rect x="447.2" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="450.22" y="303.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (6 samples, 0.01%; +0.00%)</title><rect x="520.8" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="523.83" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1032.2" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1035.15" y="191.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.00%)</title><rect x="517.8" y="325" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="520.80" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (18 samples, 0.04%; +0.01%)</title><rect x="942.6" y="325" width="0.5" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="945.61" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="810.1" y="229" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="813.13" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;sstables::mc::writer::write_cells (4 samples, 0.01%; 0.00%)</title><rect x="24.2" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.21" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (74 samples, 0.16%; -0.02%)</title><rect x="976.2" y="325" width="1.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="979.23" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (4 samples, 0.01%; +0.00%)</title><rect x="70.3" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="73.35" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (40 samples, 0.08%; -0.01%)</title><rect x="1148.6" y="485" width="1.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1151.62" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (27 samples, 0.06%; +0.02%)</title><rect x="808.7" y="229" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="811.65" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (98 samples, 0.21%; -0.00%)</title><rect x="445.8" y="309" width="2.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="448.77" y="319.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (35 samples, 0.07%; +0.00%)</title><rect x="677.6" y="469" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="680.60" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (381 samples, 0.81%; +0.07%)</title><rect x="436.2" y="309" width="9.6" height="15.0" fill="rgb(255,78,78)" rx="2" ry="2" />
<text  x="439.23" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (274 samples, 0.58%; 0.00%)</title><rect x="17.1" y="565" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.13" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%; -0.01%)</title><rect x="1149.7" y="485" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1152.72" y="495.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.00%)</title><rect x="663.4" y="437" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="666.44" y="447.5" ></text>
</g>
<g >
<title>db::filter_for_query (38 samples, 0.08%; -0.03%)</title><rect x="1063.5" y="341" width="0.9" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1066.48" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (4 samples, 0.01%; -0.00%)</title><rect x="840.6" y="421" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="843.58" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (4 samples, 0.01%; +0.00%)</title><rect x="131.8" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="134.80" y="255.5" ></text>
</g>
<g >
<title>malloc (14 samples, 0.03%; 0.00%)</title><rect x="596.3" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="599.31" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (276 samples, 0.59%; -0.00%)</title><rect x="438.6" y="293" width="6.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="441.56" y="303.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (4 samples, 0.01%; +0.00%)</title><rect x="939.6" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="942.55" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%; +0.02%)</title><rect x="46.1" y="485" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="49.08" y="495.5" ></text>
</g>
<g >
<title>query::digester::digester (17 samples, 0.04%; +0.00%)</title><rect x="594.6" y="405" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="597.61" y="415.5" ></text>
</g>
<g >
<title>row::row (20 samples, 0.04%; -0.01%)</title><rect x="242.8" y="197" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="245.83" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (10 samples, 0.02%; +0.00%)</title><rect x="620.0" y="389" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="623.00" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (37 samples, 0.08%; +0.01%)</title><rect x="1104.6" y="389" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1107.56" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%; -0.00%)</title><rect x="70.1" y="373" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="73.07" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (31 samples, 0.07%; -0.02%)</title><rect x="872.8" y="469" width="0.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="875.78" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%; +0.01%)</title><rect x="556.2" y="309" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="559.20" y="319.5" ></text>
</g>
<g >
<title>__dynamic_cast (23 samples, 0.05%; +0.02%)</title><rect x="643.7" y="469" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="646.75" y="479.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; +0.02%)</title><rect x="35.3" y="469" width="0.9" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="38.29" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (34 samples, 0.07%; +0.01%)</title><rect x="1017.9" y="213" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1020.92" y="223.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (59 samples, 0.13%; -0.04%)</title><rect x="863.3" y="453" width="1.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="866.27" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (4 samples, 0.01%; +0.00%)</title><rect x="568.4" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="571.36" y="303.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (122 samples, 0.26%; -0.02%)</title><rect x="975.0" y="341" width="3.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="978.03" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (31 samples, 0.07%; -0.00%)</title><rect x="121.9" y="277" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="124.89" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.00%)</title><rect x="461.9" y="293" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="464.90" y="303.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,539 samples, 5.38%; +0.04%)</title><rect x="457.3" y="341" width="63.5" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="460.30" y="351.5" >memtab..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (28 samples, 0.06%; 0.00%)</title><rect x="693.5" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.49" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (28 samples, 0.06%; 0.00%)</title><rect x="868.9" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.95" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (22 samples, 0.05%; +0.02%)</title><rect x="946.6" y="389" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="949.58" y="399.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (165 samples, 0.35%; 0.00%)</title><rect x="849.3" y="421" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.26" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (403 samples, 0.85%; +0.00%)</title><rect x="64.1" y="437" width="10.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="67.12" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (11 samples, 0.02%; -0.01%)</title><rect x="447.8" y="277" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="450.79" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (15 samples, 0.03%; +0.01%)</title><rect x="595.3" y="405" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="598.31" y="415.5" ></text>
</g>
<g >
<title>backlog_controller::adjust (4 samples, 0.01%; 0.00%)</title><rect x="1177.1" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.06" y="447.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%; +0.00%)</title><rect x="217.5" y="101" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="220.46" y="111.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%; -0.01%)</title><rect x="1044.9" y="261" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1047.86" y="271.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (219 samples, 0.46%; 0.00%)</title><rect x="10.2" y="613" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.23" y="623.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (471 samples, 1.00%; +0.01%)</title><rect x="908.2" y="389" width="11.8" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="911.20" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (144 samples, 0.31%; -0.00%)</title><rect x="150.3" y="229" width="3.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="153.34" y="239.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.02%; 0.00%)</title><rect x="869.2" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.25" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%; -0.01%)</title><rect x="394.5" y="229" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="397.48" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%; -0.02%)</title><rect x="76.9" y="453" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="79.88" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%; +0.00%)</title><rect x="1034.9" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1037.93" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (83 samples, 0.18%; -0.01%)</title><rect x="38.0" y="437" width="2.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="41.05" y="447.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%; -0.00%)</title><rect x="236.8" y="181" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="239.75" y="191.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (7 samples, 0.01%; +0.00%)</title><rect x="181.5" y="69" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="184.51" y="79.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (24 samples, 0.05%; 0.00%)</title><rect x="623.0" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.98" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (65 samples, 0.14%; 0.00%)</title><rect x="764.7" y="341" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="767.69" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%; -0.02%)</title><rect x="1126.7" y="373" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1129.65" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="935.0" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="937.95" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (86 samples, 0.18%; +0.01%)</title><rect x="363.0" y="197" width="2.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="365.98" y="207.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%; 0.00%)</title><rect x="46.9" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.93" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%; +0.01%)</title><rect x="741.8" y="373" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="744.82" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (115 samples, 0.24%; +0.01%)</title><rect x="953.0" y="389" width="2.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="956.04" y="399.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (99 samples, 0.21%; -0.01%)</title><rect x="769.3" y="389" width="2.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="772.30" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (15 samples, 0.03%; +0.01%)</title><rect x="326.3" y="165" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="329.32" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (44 samples, 0.09%; +0.05%)</title><rect x="452.3" y="261" width="1.1" height="15.0" fill="rgb(255,107,107)" rx="2" ry="2" />
<text  x="455.30" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%; +0.00%)</title><rect x="556.5" y="309" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="559.53" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (61 samples, 0.13%; +0.01%)</title><rect x="1009.6" y="245" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1012.61" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (95 samples, 0.20%; +0.00%)</title><rect x="749.8" y="309" width="2.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="752.83" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%; +0.02%)</title><rect x="637.3" y="485" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="640.29" y="495.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (31 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.26" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (75 samples, 0.16%; +0.01%)</title><rect x="411.3" y="277" width="1.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="414.31" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (397 samples, 0.84%; +0.01%)</title><rect x="305.8" y="213" width="9.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="308.76" y="223.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%; +0.00%)</title><rect x="842.3" y="437" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="845.33" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%; +0.01%)</title><rect x="236.8" y="165" width="0.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="239.78" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.02%)</title><rect x="813.6" y="261" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="816.58" y="271.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%; -0.01%)</title><rect x="154.0" y="229" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="156.96" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (8 samples, 0.02%; +0.02%)</title><rect x="900.9" y="325" width="0.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="903.92" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (17 samples, 0.04%; -0.01%)</title><rect x="806.4" y="101" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="809.40" y="111.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (15 samples, 0.03%; +0.00%)</title><rect x="134.2" y="229" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="137.17" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (70 samples, 0.15%; +0.00%)</title><rect x="647.6" y="437" width="1.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="650.62" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (46 samples, 0.10%; +0.02%)</title><rect x="419.3" y="421" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="422.27" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (64 samples, 0.14%; -0.00%)</title><rect x="650.4" y="437" width="1.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="653.43" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (7 samples, 0.01%; -0.01%)</title><rect x="848.1" y="421" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="851.08" y="431.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%; -0.00%)</title><rect x="1173.8" y="405" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1176.81" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (12 samples, 0.03%; -0.01%)</title><rect x="978.5" y="357" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="981.46" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%; +0.01%)</title><rect x="229.3" y="213" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="232.35" y="223.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%; +0.02%)</title><rect x="614.4" y="389" width="0.7" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="617.45" y="399.5" ></text>
</g>
<g >
<title>posix_memalign (54 samples, 0.11%; +0.01%)</title><rect x="190.0" y="85" width="1.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="192.97" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="656.7" y="437" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="659.68" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (23 samples, 0.05%; +0.00%)</title><rect x="420.4" y="421" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="423.42" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="532.5" y="325" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="535.51" y="335.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (11 samples, 0.02%; +0.01%)</title><rect x="553.9" y="341" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="556.88" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%; -0.02%)</title><rect x="846.7" y="405" width="1.0" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="849.71" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (12 samples, 0.03%; +0.01%)</title><rect x="692.0" y="453" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="694.96" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,822 samples, 14.46%; +0.03%)</title><rect x="110.5" y="373" width="170.6" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="113.45" y="383.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (25 samples, 0.05%; -0.02%)</title><rect x="301.3" y="213" width="0.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="304.28" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (11 samples, 0.02%; +0.00%)</title><rect x="1033.2" y="213" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1036.15" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (4 samples, 0.01%; +0.01%)</title><rect x="205.9" y="181" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="208.90" y="191.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.01%; 0.00%)</title><rect x="526.9" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="529.91" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; -0.00%)</title><rect x="425.6" y="357" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="428.55" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (19 samples, 0.04%; +0.02%)</title><rect x="582.1" y="405" width="0.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="585.07" y="415.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (6 samples, 0.01%; +0.00%)</title><rect x="222.4" y="213" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="225.44" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.03%; -0.02%)</title><rect x="519.6" y="325" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="522.60" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (8 samples, 0.02%; -0.00%)</title><rect x="45.9" y="485" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="48.88" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (7 samples, 0.01%; -0.00%)</title><rect x="1031.3" y="165" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1034.33" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (7 samples, 0.01%; +0.01%)</title><rect x="73.9" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="76.90" y="431.5" ></text>
</g>
<g >
<title>query::result::result (28 samples, 0.06%; -0.01%)</title><rect x="591.8" y="421" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="594.76" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,187 samples, 2.52%; -0.10%)</title><rect x="165.8" y="133" width="29.7" height="15.0" fill="rgb(24,24,255)" rx="2" ry="2" />
<text  x="168.85" y="143.5" >co..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.02%; 0.00%)</title><rect x="992.3" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="995.27" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.01%)</title><rect x="860.9" y="469" width="0.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="863.92" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%; 0.00%)</title><rect x="869.3" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.30" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (5 samples, 0.01%; -0.00%)</title><rect x="74.4" y="453" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="77.35" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (8 samples, 0.02%; -0.00%)</title><rect x="1175.4" y="373" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1178.41" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%; -0.01%)</title><rect x="830.0" y="277" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="833.04" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (14 samples, 0.03%; -0.00%)</title><rect x="840.1" y="373" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="843.10" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; +0.00%)</title><rect x="502.2" y="229" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="505.16" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (28 samples, 0.06%; +0.01%)</title><rect x="419.7" y="405" width="0.7" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="422.72" y="415.5" ></text>
</g>
<g >
<title>[unknown] (576 samples, 1.22%; 0.00%)</title><rect x="10.0" y="629" width="14.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.03" y="639.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%; 0.00%)</title><rect x="935.3" y="373" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="938.28" y="383.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (12 samples, 0.03%; +0.00%)</title><rect x="199.0" y="117" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="202.02" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; +0.01%)</title><rect x="1174.1" y="421" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1177.06" y="431.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (29 samples, 0.06%; -0.01%)</title><rect x="491.0" y="309" width="0.8" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="494.03" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%; +0.02%)</title><rect x="935.3" y="357" width="0.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="938.30" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (58 samples, 0.12%; +0.01%)</title><rect x="807.9" y="261" width="1.5" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="810.93" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (8 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%; 0.00%)</title><rect x="17.8" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.81" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; +0.01%)</title><rect x="753.9" y="389" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="756.86" y="399.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%; +0.00%)</title><rect x="40.3" y="453" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="43.35" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%; -0.01%)</title><rect x="226.1" y="245" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="229.14" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (13 samples, 0.03%; +0.02%)</title><rect x="1056.0" y="341" width="0.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1059.04" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (9 samples, 0.02%; -0.01%)</title><rect x="225.2" y="245" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="228.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (5 samples, 0.01%; +0.00%)</title><rect x="426.1" y="357" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="429.08" y="367.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; -0.01%)</title><rect x="274.0" y="277" width="1.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="277.03" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (12 samples, 0.03%; +0.00%)</title><rect x="229.7" y="197" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="232.75" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (7 samples, 0.01%; 0.00%)</title><rect x="1176.6" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.61" y="511.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,000 samples, 2.12%; -0.00%)</title><rect x="462.2" y="325" width="25.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="465.18" y="335.5" >d..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.02%; -0.00%)</title><rect x="666.4" y="469" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="669.44" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%; +0.01%)</title><rect x="1018.4" y="197" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1021.44" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%; +0.00%)</title><rect x="862.1" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="865.14" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (9 samples, 0.02%; 0.00%)</title><rect x="855.3" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.29" y="399.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (187 samples, 0.40%; -0.01%)</title><rect x="468.7" y="277" width="4.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="471.66" y="287.5" ></text>
</g>
<g >
<title>[unknown] (219 samples, 0.46%; 0.00%)</title><rect x="10.2" y="597" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.23" y="607.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (21 samples, 0.04%; +0.01%)</title><rect x="711.5" y="421" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="714.50" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (5 samples, 0.01%; +0.01%)</title><rect x="812.0" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="814.98" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.01%)</title><rect x="158.3" y="213" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="161.32" y="223.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (6 samples, 0.01%; +0.01%)</title><rect x="1043.2" y="261" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1046.16" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (109 samples, 0.23%; -0.00%)</title><rect x="390.7" y="229" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="393.72" y="239.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (11 samples, 0.02%; +0.01%)</title><rect x="1042.9" y="261" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1045.88" y="271.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.10%; +0.01%)</title><rect x="575.6" y="357" width="1.1" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="578.62" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%; -0.00%)</title><rect x="149.3" y="181" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="152.26" y="191.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (121 samples, 0.26%; +0.00%)</title><rect x="529.2" y="309" width="3.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="532.21" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (68 samples, 0.14%; -0.01%)</title><rect x="1151.6" y="453" width="1.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1154.59" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (11 samples, 0.02%; 0.00%)</title><rect x="26.4" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.41" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%; +0.01%)</title><rect x="413.7" y="341" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="416.72" y="351.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%; +0.00%)</title><rect x="1051.5" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1054.47" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%; +0.00%)</title><rect x="503.7" y="197" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="506.74" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%; -0.00%)</title><rect x="439.5" y="245" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="442.51" y="255.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (5 samples, 0.01%; 0.00%)</title><rect x="778.1" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="781.08" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (46 samples, 0.10%; -0.01%)</title><rect x="1156.8" y="405" width="1.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1159.80" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%; -0.02%)</title><rect x="387.4" y="197" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="390.40" y="207.5" ></text>
</g>
<g >
<title>make_combined_reader (923 samples, 1.96%; -0.02%)</title><rect x="434.0" y="341" width="23.1" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="437.03" y="351.5" >m..</text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (16 samples, 0.03%; 0.00%)</title><rect x="60.5" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.51" y="447.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; +0.00%)</title><rect x="518.5" y="325" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="521.47" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (19 samples, 0.04%; -0.03%)</title><rect x="164.6" y="133" width="0.5" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="167.65" y="143.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (87 samples, 0.18%; +0.00%)</title><rect x="598.4" y="437" width="2.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="601.39" y="447.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (107 samples, 0.23%; -0.02%)</title><rect x="308.9" y="181" width="2.7" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="311.93" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (53 samples, 0.11%; -0.04%)</title><rect x="488.2" y="325" width="1.4" height="15.0" fill="rgb(131,131,255)" rx="2" ry="2" />
<text  x="491.22" y="335.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (24 samples, 0.05%; +0.02%)</title><rect x="328.1" y="181" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="331.07" y="191.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (212 samples, 0.45%; -0.03%)</title><rect x="1068.8" y="325" width="5.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1071.83" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (4 samples, 0.01%; 0.00%)</title><rect x="1177.1" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.06" y="431.5" ></text>
</g>
<g >
<title>table::as_mutation_source (97 samples, 0.21%; +0.01%)</title><rect x="621.6" y="437" width="2.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="624.58" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (73 samples, 0.15%; -0.01%)</title><rect x="663.2" y="453" width="1.8" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="666.16" y="463.5" ></text>
</g>
<g >
<title>operator delete (60 samples, 0.13%; +0.03%)</title><rect x="563.0" y="293" width="1.5" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="566.01" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (47 samples, 0.10%; -0.00%)</title><rect x="586.1" y="421" width="1.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="589.13" y="431.5" ></text>
</g>
<g >
<title>partition_entry::read (65 samples, 0.14%; +0.01%)</title><rect x="515.5" y="309" width="1.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="518.52" y="319.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (4 samples, 0.01%; -0.01%)</title><rect x="1138.1" y="437" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1141.11" y="447.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (5 samples, 0.01%; +0.00%)</title><rect x="157.5" y="229" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="160.47" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; -0.03%)</title><rect x="793.1" y="229" width="0.1" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="796.09" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (7 samples, 0.01%; +0.01%)</title><rect x="1141.5" y="485" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1144.51" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (16 samples, 0.03%; +0.01%)</title><rect x="1147.9" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1150.87" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (9 samples, 0.02%; +0.01%)</title><rect x="740.6" y="389" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="743.57" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (8 samples, 0.02%; +0.00%)</title><rect x="258.9" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="261.87" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%; +0.00%)</title><rect x="672.3" y="437" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="675.27" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (11 samples, 0.02%; +0.01%)</title><rect x="774.2" y="357" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="777.17" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (41 samples, 0.09%; 0.00%)</title><rect x="22.4" y="453" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.43" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (83 samples, 0.18%; +0.01%)</title><rect x="306.8" y="181" width="2.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="309.81" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%; +0.01%)</title><rect x="706.3" y="421" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="709.35" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (22 samples, 0.05%; +0.00%)</title><rect x="1176.9" y="485" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1179.89" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (23 samples, 0.05%; +0.02%)</title><rect x="532.8" y="341" width="0.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="535.81" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (15 samples, 0.03%; +0.02%)</title><rect x="979.1" y="357" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="982.06" y="367.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (4 samples, 0.01%; -0.00%)</title><rect x="723.3" y="453" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="726.26" y="463.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%; +0.01%)</title><rect x="1174.2" y="421" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1177.24" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (8 samples, 0.02%; +0.02%)</title><rect x="191.3" y="85" width="0.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="194.32" y="95.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (12 samples, 0.03%; -0.01%)</title><rect x="411.0" y="277" width="0.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="414.01" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (43 samples, 0.09%; -0.04%)</title><rect x="918.7" y="325" width="1.1" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="921.69" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (99 samples, 0.21%; +0.01%)</title><rect x="1167.0" y="485" width="2.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1170.03" y="495.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (34 samples, 0.07%; +0.00%)</title><rect x="572.9" y="373" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="575.92" y="383.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (14 samples, 0.03%; -0.02%)</title><rect x="1063.0" y="341" width="0.3" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1065.98" y="351.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%; -0.00%)</title><rect x="203.5" y="165" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="206.50" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (20 samples, 0.04%; -0.01%)</title><rect x="537.1" y="405" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="540.09" y="415.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (163 samples, 0.35%; -0.00%)</title><rect x="915.9" y="357" width="4.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="918.91" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (39 samples, 0.08%; +0.02%)</title><rect x="1159.5" y="453" width="1.0" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1162.50" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (5 samples, 0.01%; -0.01%)</title><rect x="697.3" y="485" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="700.29" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,286 samples, 2.73%; -0.03%)</title><rect x="551.0" y="437" width="32.2" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="554.02" y="447.5" >qu..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%; -0.02%)</title><rect x="753.0" y="389" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="755.98" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (14 samples, 0.03%; 0.00%)</title><rect x="1150.4" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.37" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.01%; -0.00%)</title><rect x="599.4" y="405" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="602.44" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (6 samples, 0.01%; +0.01%)</title><rect x="495.0" y="293" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="498.03" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (4 samples, 0.01%; 0.00%)</title><rect x="579.1" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="582.12" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (6 samples, 0.01%; +0.00%)</title><rect x="1153.0" y="421" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1156.05" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (34 samples, 0.07%; -0.01%)</title><rect x="157.7" y="229" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="160.67" y="239.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (11 samples, 0.02%; -0.01%)</title><rect x="1130.8" y="421" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1133.75" y="431.5" ></text>
</g>
<g >
<title>database::query (124 samples, 0.26%; -0.03%)</title><rect x="43.7" y="501" width="3.1" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="46.65" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (38 samples, 0.08%; +0.01%)</title><rect x="314.5" y="165" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="317.49" y="175.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (21 samples, 0.04%; -0.04%)</title><rect x="1042.3" y="261" width="0.6" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="1045.33" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%; -0.01%)</title><rect x="485.8" y="181" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="488.82" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%; +0.01%)</title><rect x="946.3" y="389" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="949.28" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (9 samples, 0.02%; 0.00%)</title><rect x="858.0" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.99" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.01%)</title><rect x="955.0" y="309" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="958.04" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (5 samples, 0.01%; +0.00%)</title><rect x="605.5" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="608.47" y="447.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (5 samples, 0.01%; -0.01%)</title><rect x="1096.4" y="325" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1099.38" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="899.1" y="309" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="902.15" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (79 samples, 0.17%; -0.01%)</title><rect x="440.8" y="261" width="1.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="443.76" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (22 samples, 0.05%; +0.01%)</title><rect x="646.8" y="389" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="649.82" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (5 samples, 0.01%; +0.00%)</title><rect x="510.6" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="513.62" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (215 samples, 0.46%; -0.00%)</title><rect x="747.0" y="341" width="5.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="749.98" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (11 samples, 0.02%; 0.00%)</title><rect x="748.1" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="751.08" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (43 samples, 0.09%; -0.00%)</title><rect x="18.1" y="293" width="1.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="21.11" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (20 samples, 0.04%; -0.01%)</title><rect x="600.6" y="437" width="0.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="603.56" y="447.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (60 samples, 0.13%; +0.03%)</title><rect x="353.5" y="149" width="1.5" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="356.47" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%; -0.00%)</title><rect x="163.8" y="149" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="166.85" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (31 samples, 0.07%; -0.00%)</title><rect x="1048.3" y="245" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1051.26" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="550.5" y="421" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="553.50" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,110 samples, 8.71%; -0.01%)</title><rect x="734.8" y="437" width="102.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="737.82" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>operator new (40 samples, 0.08%; 0.00%)</title><rect x="1156.9" y="389" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1159.95" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (8 samples, 0.02%; 0.00%)</title><rect x="23.7" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%; +0.00%)</title><rect x="407.6" y="277" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="410.61" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%; +0.01%)</title><rect x="831.6" y="325" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="834.62" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%; +0.01%)</title><rect x="425.2" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="428.20" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (163 samples, 0.35%; +0.00%)</title><rect x="613.2" y="421" width="4.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="616.25" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (27 samples, 0.06%; -0.00%)</title><rect x="211.8" y="165" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="214.83" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (7 samples, 0.01%; +0.01%)</title><rect x="933.9" y="405" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="936.90" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (41 samples, 0.09%; +0.03%)</title><rect x="279.0" y="357" width="1.0" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="282.01" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (119 samples, 0.25%; +0.00%)</title><rect x="730.4" y="341" width="3.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="733.41" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (222 samples, 0.47%; -0.00%)</title><rect x="214.0" y="213" width="5.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="217.03" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%; +0.01%)</title><rect x="1157.3" y="357" width="0.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1160.32" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (4 samples, 0.01%; +0.00%)</title><rect x="712.0" y="421" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="715.03" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%; +0.01%)</title><rect x="840.2" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="843.20" y="367.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.01%)</title><rect x="529.0" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="531.96" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="387.7" y="181" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="390.70" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (9 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.59" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (76 samples, 0.16%; -0.02%)</title><rect x="809.4" y="261" width="1.9" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="812.38" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (166 samples, 0.35%; +0.04%)</title><rect x="259.8" y="341" width="4.1" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="262.77" y="351.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (112 samples, 0.24%; +0.01%)</title><rect x="529.3" y="293" width="2.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="532.28" y="303.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,900 samples, 12.51%; +0.01%)</title><rect x="717.1" y="485" width="147.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="720.13" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (98 samples, 0.21%; -0.00%)</title><rect x="1131.0" y="421" width="2.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1134.03" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="402.6" y="181" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="405.56" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,883 samples, 3.99%; -0.01%)</title><rect x="774.6" y="389" width="47.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="777.60" y="399.5" >std:..</text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (265 samples, 0.56%; +0.01%)</title><rect x="727.8" y="421" width="6.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="730.81" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.01%)</title><rect x="919.8" y="341" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="922.76" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="423.8" y="373" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="426.85" y="383.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (101 samples, 0.21%; -0.01%)</title><rect x="831.4" y="373" width="2.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="834.39" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%; 0.00%)</title><rect x="38.6" y="421" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.57" y="431.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.2" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.18" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (35 samples, 0.07%; -0.01%)</title><rect x="654.0" y="469" width="0.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="656.98" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; 0.00%)</title><rect x="822.9" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.89" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; -0.00%)</title><rect x="782.5" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="785.46" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (10 samples, 0.02%; -0.00%)</title><rect x="137.5" y="277" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="140.52" y="287.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (610 samples, 1.29%; +0.07%)</title><rect x="122.8" y="293" width="15.3" height="15.0" fill="rgb(255,82,82)" rx="2" ry="2" />
<text  x="125.81" y="303.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (93 samples, 0.20%; +0.00%)</title><rect x="524.8" y="309" width="2.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="527.75" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (8 samples, 0.02%; +0.01%)</title><rect x="238.6" y="229" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="241.60" y="239.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (63 samples, 0.13%; -0.02%)</title><rect x="230.0" y="197" width="1.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="233.05" y="207.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (164 samples, 0.35%; -0.01%)</title><rect x="989.4" y="309" width="4.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="992.42" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (4 samples, 0.01%; 0.00%)</title><rect x="790.3" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.29" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (28 samples, 0.06%; -0.03%)</title><rect x="548.1" y="421" width="0.7" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="551.10" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; +0.00%)</title><rect x="514.6" y="325" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="517.57" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%; +0.00%)</title><rect x="689.1" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="692.13" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (114 samples, 0.24%; +0.03%)</title><rect x="215.6" y="181" width="2.9" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="218.61" y="191.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (56 samples, 0.12%; -0.03%)</title><rect x="230.2" y="181" width="1.4" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="233.22" y="191.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%; +0.02%)</title><rect x="695.3" y="437" width="0.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="698.29" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%; +0.00%)</title><rect x="1002.0" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1004.95" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (8 samples, 0.02%; +0.01%)</title><rect x="1041.3" y="261" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1044.31" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="129.8" y="245" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="132.84" y="255.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (223 samples, 0.47%; -0.00%)</title><rect x="1026.7" y="197" width="5.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1029.75" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (54 samples, 0.11%; +0.02%)</title><rect x="892.2" y="309" width="1.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="895.22" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%; +0.00%)</title><rect x="630.3" y="485" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="633.31" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (44 samples, 0.09%; 0.00%)</title><rect x="790.1" y="245" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.09" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.01%; +0.00%)</title><rect x="978.3" y="341" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="981.28" y="351.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,328 samples, 2.82%; +0.02%)</title><rect x="163.2" y="165" width="33.2" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="166.17" y="175.5" >cl..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="967.9" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="970.85" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (4 samples, 0.01%; +0.01%)</title><rect x="365.0" y="165" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="368.03" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (17 samples, 0.04%; -0.00%)</title><rect x="579.8" y="341" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="582.77" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%; -0.00%)</title><rect x="809.0" y="213" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="812.00" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (8 samples, 0.02%; 0.00%)</title><rect x="24.2" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.16" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (10 samples, 0.02%; +0.00%)</title><rect x="806.9" y="149" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="809.90" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (636 samples, 1.35%; +0.00%)</title><rect x="554.4" y="341" width="15.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="557.35" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%; +0.00%)</title><rect x="270.6" y="293" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="273.58" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (104 samples, 0.22%; +0.01%)</title><rect x="662.5" y="485" width="2.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="665.49" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,874 samples, 12.45%; +0.06%)</title><rect x="958.8" y="405" width="146.9" height="15.0" fill="rgb(255,94,94)" rx="2" ry="2" />
<text  x="961.77" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; 0.00%)</title><rect x="508.4" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="511.39" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (39 samples, 0.08%; -0.00%)</title><rect x="938.6" y="357" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="941.55" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.01%)</title><rect x="721.3" y="421" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="724.31" y="431.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.01%)</title><rect x="1122.8" y="421" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1125.80" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%; +0.00%)</title><rect x="911.9" y="341" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="914.93" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%; +0.00%)</title><rect x="764.5" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="767.54" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (589 samples, 1.25%; -0.04%)</title><rect x="642.2" y="485" width="14.8" height="15.0" fill="rgb(127,127,255)" rx="2" ry="2" />
<text  x="645.25" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (8 samples, 0.02%; -0.01%)</title><rect x="222.9" y="229" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="225.94" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.01%)</title><rect x="531.8" y="277" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="534.81" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (32 samples, 0.07%; +0.01%)</title><rect x="220.6" y="197" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="223.64" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; -0.00%)</title><rect x="622.3" y="373" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="625.25" y="383.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.01%; -0.00%)</title><rect x="972.8" y="357" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="975.75" y="367.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (392 samples, 0.83%; +0.02%)</title><rect x="464.7" y="293" width="9.8" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="467.71" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="315.8" y="213" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="318.81" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (20 samples, 0.04%; 0.00%)</title><rect x="559.8" y="277" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="562.83" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (18 samples, 0.04%; +0.00%)</title><rect x="833.3" y="293" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="836.27" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%; 0.00%)</title><rect x="686.6" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.56" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; +0.00%)</title><rect x="638.9" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="641.89" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (313 samples, 0.66%; +0.08%)</title><rect x="246.5" y="293" width="7.8" height="15.0" fill="rgb(255,61,61)" rx="2" ry="2" />
<text  x="249.46" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.07%; 0.00%)</title><rect x="686.5" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.51" y="447.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (71 samples, 0.15%; -0.01%)</title><rect x="897.0" y="293" width="1.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="900.05" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%; +0.00%)</title><rect x="129.6" y="229" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="132.62" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%; +0.00%)</title><rect x="266.7" y="341" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="269.65" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (19 samples, 0.04%; +0.01%)</title><rect x="1074.4" y="325" width="0.5" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1077.38" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="1174.0" y="421" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1176.96" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (192 samples, 0.41%; 0.00%)</title><rect x="17.6" y="421" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="431.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%; +0.02%)</title><rect x="687.8" y="485" width="1.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="690.81" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.01%; +0.01%)</title><rect x="649.1" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="652.05" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.01%; +0.01%)</title><rect x="1031.2" y="165" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1034.18" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (4 samples, 0.01%; +0.01%)</title><rect x="1052.2" y="357" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1055.24" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (4 samples, 0.01%; +0.00%)</title><rect x="631.5" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="634.51" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%; 0.00%)</title><rect x="253.4" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.37" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (22 samples, 0.05%; 0.00%)</title><rect x="667.2" y="469" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="670.17" y="479.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%; +0.00%)</title><rect x="675.4" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="678.37" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (17 samples, 0.04%; +0.02%)</title><rect x="1029.6" y="133" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1032.62" y="143.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (54 samples, 0.11%; +0.01%)</title><rect x="121.4" y="293" width="1.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="124.39" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (241 samples, 0.51%; +0.00%)</title><rect x="628.9" y="501" width="6.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="631.89" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%; -0.00%)</title><rect x="255.0" y="309" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="257.99" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (104 samples, 0.22%; +0.00%)</title><rect x="983.1" y="325" width="2.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="986.09" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (342 samples, 0.73%; +0.00%)</title><rect x="394.6" y="229" width="8.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="397.63" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%; +0.02%)</title><rect x="938.8" y="325" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="941.80" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (4 samples, 0.01%; +0.00%)</title><rect x="324.9" y="181" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="327.90" y="191.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (7 samples, 0.01%; +0.01%)</title><rect x="324.7" y="181" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="327.72" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (97 samples, 0.21%; -0.05%)</title><rect x="855.8" y="373" width="2.4" height="15.0" fill="rgb(115,115,255)" rx="2" ry="2" />
<text  x="858.79" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (19 samples, 0.04%; -0.01%)</title><rect x="324.2" y="165" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="327.25" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (117 samples, 0.25%; -0.02%)</title><rect x="634.9" y="501" width="2.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="637.91" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; -0.00%)</title><rect x="423.7" y="373" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="426.75" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%; +0.01%)</title><rect x="860.5" y="469" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="863.52" y="479.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (20 samples, 0.04%; +0.03%)</title><rect x="312.3" y="181" width="0.5" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="315.29" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (59 samples, 0.13%; -0.00%)</title><rect x="1158.0" y="453" width="1.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1161.02" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.03%; +0.01%)</title><rect x="814.2" y="277" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="817.18" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.01%; 0.00%)</title><rect x="621.5" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="624.48" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (27 samples, 0.06%; +0.00%)</title><rect x="1140.2" y="485" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1143.16" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (68 samples, 0.14%; -0.01%)</title><rect x="742.2" y="341" width="1.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="745.22" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (9 samples, 0.02%; +0.01%)</title><rect x="280.5" y="357" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="283.51" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (64 samples, 0.14%; +0.02%)</title><rect x="605.6" y="437" width="1.6" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="608.59" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (4 samples, 0.01%; -0.01%)</title><rect x="110.4" y="373" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="113.35" y="383.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (10 samples, 0.02%; +0.01%)</title><rect x="748.8" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="751.78" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (16 samples, 0.03%; +0.01%)</title><rect x="716.7" y="485" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="719.73" y="495.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (5 samples, 0.01%; +0.01%)</title><rect x="89.2" y="437" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="92.21" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (6 samples, 0.01%; 0.00%)</title><rect x="992.3" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="995.35" y="255.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; -0.00%)</title><rect x="104.3" y="421" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="107.27" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%; 0.00%)</title><rect x="686.6" y="325" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.56" y="335.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (5 samples, 0.01%; 0.00%)</title><rect x="1139.3" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.34" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (39 samples, 0.08%; +0.01%)</title><rect x="770.5" y="341" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="773.55" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.04%; -0.01%)</title><rect x="352.5" y="149" width="0.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="355.52" y="159.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (256 samples, 0.54%; 0.00%)</title><rect x="853.8" y="453" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="856.79" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.01%; +0.01%)</title><rect x="726.0" y="405" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="728.99" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="264.1" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="267.12" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.02%; +0.00%)</title><rect x="1105.2" y="373" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1108.23" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (8 samples, 0.02%; -0.00%)</title><rect x="623.4" y="389" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="626.38" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.03%; +0.00%)</title><rect x="439.6" y="261" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="442.64" y="271.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (39 samples, 0.08%; +0.00%)</title><rect x="382.8" y="165" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="385.77" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="20.6" y="277" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="23.56" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (37 samples, 0.08%; +0.01%)</title><rect x="555.3" y="309" width="0.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="558.28" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (32 samples, 0.07%; -0.02%)</title><rect x="954.5" y="325" width="0.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="957.54" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (4 samples, 0.01%; 0.00%)</title><rect x="237.9" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="240.90" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; -0.02%)</title><rect x="807.2" y="197" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="810.20" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (4 samples, 0.01%; +0.01%)</title><rect x="19.0" y="261" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="22.03" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (33 samples, 0.07%; +0.00%)</title><rect x="583.7" y="421" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="586.67" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (9 samples, 0.02%; 0.00%)</title><rect x="820.0" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="822.98" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (13 samples, 0.03%; +0.01%)</title><rect x="1101.6" y="357" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1104.61" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (7 samples, 0.01%; +0.01%)</title><rect x="955.2" y="309" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="958.17" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (33 samples, 0.07%; 0.00%)</title><rect x="868.9" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.90" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (12 samples, 0.03%; -0.00%)</title><rect x="954.0" y="325" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="956.99" y="335.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; -0.01%)</title><rect x="606.0" y="421" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="609.04" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (9 samples, 0.02%; -0.01%)</title><rect x="1034.2" y="229" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1037.15" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (4 samples, 0.01%; 0.00%)</title><rect x="1153.1" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.10" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%; 0.00%)</title><rect x="1033.7" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1036.73" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.02%; +0.01%)</title><rect x="821.3" y="261" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="824.31" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; -0.00%)</title><rect x="610.6" y="437" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="613.62" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (29 samples, 0.06%; +0.02%)</title><rect x="1105.7" y="405" width="0.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1108.73" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.01%)</title><rect x="345.1" y="165" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="348.09" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (402 samples, 0.85%; -0.03%)</title><rect x="144.5" y="245" width="10.1" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="147.51" y="255.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (27 samples, 0.06%; 0.00%)</title><rect x="464.0" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="467.03" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.01%)</title><rect x="629.7" y="469" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="632.71" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="225.0" y="245" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="228.04" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (25 samples, 0.05%; +0.03%)</title><rect x="617.9" y="437" width="0.6" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="620.90" y="447.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (12 samples, 0.03%; -0.01%)</title><rect x="1086.2" y="261" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1089.22" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (61 samples, 0.13%; +0.02%)</title><rect x="786.3" y="261" width="1.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="789.31" y="271.5" ></text>
</g>
<g >
<title>free (24 samples, 0.05%; -0.01%)</title><rect x="402.1" y="197" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="405.08" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (78 samples, 0.17%; +0.01%)</title><rect x="571.0" y="373" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="573.96" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (19 samples, 0.04%; 0.00%)</title><rect x="867.9" y="421" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.92" y="431.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%; 0.00%)</title><rect x="655.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.06" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.00%)</title><rect x="273.4" y="293" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="276.36" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (38 samples, 0.08%; +0.01%)</title><rect x="693.2" y="453" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="696.24" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.01%; -0.03%)</title><rect x="623.2" y="373" width="0.2" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="626.18" y="383.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%; +0.01%)</title><rect x="498.5" y="245" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="501.51" y="255.5" ></text>
</g>
<g >
<title>table::query (21,816 samples, 46.26%; -0.08%)</title><rect x="78.6" y="453" width="545.9" height="15.0" fill="rgb(53,53,255)" rx="2" ry="2" />
<text  x="81.63" y="463.5" >table::query</text>
</g>
<g >
<title>compound_type&lt; (93 samples, 0.20%; +0.03%)</title><rect x="911.1" y="357" width="2.3" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="914.11" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.07%; +0.00%)</title><rect x="686.5" y="389" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="689.51" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="43.1" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="46.13" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (8 samples, 0.02%; 0.00%)</title><rect x="1175.4" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.41" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (13 samples, 0.03%; +0.01%)</title><rect x="1114.4" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1117.39" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (47 samples, 0.10%; -0.01%)</title><rect x="929.1" y="405" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="932.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (40 samples, 0.08%; +0.01%)</title><rect x="1156.9" y="373" width="1.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1159.95" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%; 0.00%)</title><rect x="1094.0" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1097.05" y="255.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.81" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (426 samples, 0.90%; +0.01%)</title><rect x="500.1" y="261" width="10.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="503.11" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="255.2" y="309" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="258.22" y="319.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (8 samples, 0.02%; +0.01%)</title><rect x="1064.6" y="341" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1067.55" y="351.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (4 samples, 0.01%; -0.00%)</title><rect x="17.2" y="501" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="20.18" y="511.5" ></text>
</g>
<g >
<title>row::compact_and_expire (4 samples, 0.01%; +0.00%)</title><rect x="687.1" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="690.13" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="135.4" y="229" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="138.37" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%; +0.03%)</title><rect x="719.8" y="405" width="1.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="722.81" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (124 samples, 0.26%; 0.00%)</title><rect x="1045.9" y="277" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.94" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (33 samples, 0.07%; -0.00%)</title><rect x="772.2" y="341" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="775.25" y="351.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (30 samples, 0.06%; -0.00%)</title><rect x="686.5" y="373" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="689.53" y="383.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (30 samples, 0.06%; -0.03%)</title><rect x="677.7" y="453" width="0.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="680.72" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="558.5" y="309" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="561.45" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="548.9" y="421" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="551.87" y="431.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (28 samples, 0.06%; +0.01%)</title><rect x="599.9" y="405" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="602.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%; 0.00%)</title><rect x="860.1" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.07" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (31 samples, 0.07%; +0.01%)</title><rect x="773.7" y="373" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="776.67" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (16 samples, 0.03%; +0.01%)</title><rect x="1041.7" y="261" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1044.66" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (12 samples, 0.03%; +0.00%)</title><rect x="603.6" y="437" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="606.59" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (18 samples, 0.04%; +0.00%)</title><rect x="1102.3" y="357" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1105.28" y="367.5" ></text>
</g>
<g >
<title>operator new (67 samples, 0.14%; -0.01%)</title><rect x="996.9" y="261" width="1.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="999.90" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (27 samples, 0.06%; -0.01%)</title><rect x="881.8" y="421" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="884.81" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (62 samples, 0.13%; +0.00%)</title><rect x="672.2" y="453" width="1.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="675.17" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (7 samples, 0.01%; -0.01%)</title><rect x="207.2" y="149" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="210.23" y="159.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,836 samples, 3.89%; 0.00%)</title><rect x="316.2" y="213" width="46.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="319.22" y="223.5" >quer..</text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%; +0.02%)</title><rect x="1116.2" y="341" width="1.9" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1119.17" y="351.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (20 samples, 0.04%; -0.02%)</title><rect x="900.1" y="309" width="0.5" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="903.15" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%; -0.01%)</title><rect x="998.8" y="245" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1001.75" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%; -0.00%)</title><rect x="1105.0" y="373" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1107.98" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (37 samples, 0.08%; +0.05%)</title><rect x="264.6" y="341" width="0.9" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="267.57" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (65 samples, 0.14%; +0.00%)</title><rect x="189.9" y="101" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="192.89" y="111.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (139 samples, 0.29%; 0.00%)</title><rect x="995.6" y="309" width="3.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.65" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (25 samples, 0.05%; -0.04%)</title><rect x="683.9" y="437" width="0.6" height="15.0" fill="rgb(127,127,255)" rx="2" ry="2" />
<text  x="686.88" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.01%; +0.01%)</title><rect x="562.7" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="565.68" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%; +0.01%)</title><rect x="606.0" y="405" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="609.04" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (576 samples, 1.22%; +0.00%)</title><rect x="699.2" y="501" width="14.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="702.19" y="511.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%; +0.00%)</title><rect x="96.3" y="389" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="99.34" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (6 samples, 0.01%; -0.00%)</title><rect x="648.9" y="373" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="651.90" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (27 samples, 0.06%; -0.01%)</title><rect x="225.5" y="245" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="228.47" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (65 samples, 0.14%; -0.01%)</title><rect x="941.9" y="373" width="1.6" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="944.86" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (57 samples, 0.12%; +0.01%)</title><rect x="325.3" y="181" width="1.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="328.27" y="191.5" ></text>
</g>
<g >
<title>schema::column_at (24 samples, 0.05%; +0.02%)</title><rect x="385.6" y="181" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="388.64" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (9 samples, 0.02%; 0.00%)</title><rect x="33.1" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.12" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; -0.01%)</title><rect x="928.7" y="357" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="931.70" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (733 samples, 1.55%; +0.01%)</title><rect x="552.2" y="373" width="18.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="555.23" y="383.5" ></text>
</g>
<g >
<title>operator delete (89 samples, 0.19%; -0.01%)</title><rect x="89.3" y="437" width="2.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="92.34" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (4 samples, 0.01%; +0.00%)</title><rect x="1156.3" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1159.35" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (116 samples, 0.25%; -0.01%)</title><rect x="1115.8" y="373" width="2.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1118.84" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (5 samples, 0.01%; -0.01%)</title><rect x="25.8" y="517" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="28.84" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%; +0.01%)</title><rect x="1039.3" y="245" width="2.0" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1042.26" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (4 samples, 0.01%; +0.01%)</title><rect x="149.4" y="213" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="152.43" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (19 samples, 0.04%; -0.00%)</title><rect x="433.3" y="341" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="436.26" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (13 samples, 0.03%; -0.02%)</title><rect x="915.6" y="357" width="0.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="918.58" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,364 samples, 7.13%; +0.01%)</title><rect x="142.3" y="261" width="84.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="145.25" y="271.5" >partition..</text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (349 samples, 0.74%; -0.01%)</title><rect x="798.6" y="213" width="8.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="801.57" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%; -0.01%)</title><rect x="527.5" y="309" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="530.48" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (11 samples, 0.02%; +0.01%)</title><rect x="617.0" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="620.00" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (479 samples, 1.02%; +0.01%)</title><rect x="266.8" y="341" width="12.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="269.78" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (18 samples, 0.04%; 0.00%)</title><rect x="1072.6" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1075.61" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (19 samples, 0.04%; +0.00%)</title><rect x="695.1" y="453" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="698.14" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (367 samples, 0.78%; +0.01%)</title><rect x="824.7" y="389" width="9.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="827.74" y="399.5" ></text>
</g>
<g >
<title>query_state::query_state (179 samples, 0.38%; -0.01%)</title><rect x="593.0" y="437" width="4.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="595.96" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (623 samples, 1.32%; -0.01%)</title><rect x="792.1" y="245" width="15.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="795.14" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (38 samples, 0.08%; +0.01%)</title><rect x="681.9" y="469" width="0.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="684.85" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (6 samples, 0.01%; 0.00%)</title><rect x="869.0" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.00" y="383.5" ></text>
</g>
<g >
<title>row::row (1,285 samples, 2.72%; -0.01%)</title><rect x="164.2" y="149" width="32.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="167.25" y="159.5" >ro..</text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.00%)</title><rect x="547.5" y="405" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="550.47" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; +0.00%)</title><rect x="829.6" y="261" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="832.57" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; -0.00%)</title><rect x="707.3" y="421" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="710.32" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (9 samples, 0.02%; -0.02%)</title><rect x="884.4" y="421" width="0.3" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="887.44" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (6 samples, 0.01%; +0.00%)</title><rect x="26.2" y="517" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="29.21" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (37 samples, 0.08%; 0.00%)</title><rect x="39.2" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="42.20" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (35 samples, 0.07%; -0.03%)</title><rect x="141.2" y="245" width="0.9" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="144.23" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (36 samples, 0.08%; +0.03%)</title><rect x="895.9" y="293" width="0.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="898.92" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (34 samples, 0.07%; +0.02%)</title><rect x="1152.2" y="421" width="0.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1155.20" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%; +0.00%)</title><rect x="1174.3" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1177.34" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (4 samples, 0.01%; -0.00%)</title><rect x="418.3" y="373" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="421.32" y="383.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (15 samples, 0.03%; +0.01%)</title><rect x="898.4" y="277" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="901.45" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5,978 samples, 12.68%; -0.03%)</title><rect x="716.2" y="501" width="149.5" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="719.15" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (13 samples, 0.03%; 0.00%)</title><rect x="23.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.61" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%; +0.01%)</title><rect x="521.3" y="341" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="524.30" y="351.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (121 samples, 0.26%; 0.00%)</title><rect x="749.2" y="325" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.18" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (17 samples, 0.04%; -0.01%)</title><rect x="1146.2" y="485" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1149.17" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%; -0.00%)</title><rect x="659.5" y="437" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="662.46" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="494.5" y="277" width="0.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="497.48" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.01%; +0.00%)</title><rect x="1032.9" y="197" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1035.90" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%; +0.03%)</title><rect x="401.0" y="197" width="0.4" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="403.96" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (7 samples, 0.01%; +0.01%)</title><rect x="913.2" y="341" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="916.16" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="324.0" y="165" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="327.05" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (71 samples, 0.15%; -0.00%)</title><rect x="861.2" y="469" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="864.17" y="479.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (6 samples, 0.01%; -0.01%)</title><rect x="624.0" y="437" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="627.03" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%; -0.01%)</title><rect x="1154.0" y="421" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1156.97" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%; +0.00%)</title><rect x="1043.6" y="277" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1046.56" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="20.6" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.56" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (139 samples, 0.29%; -0.02%)</title><rect x="1058.9" y="309" width="3.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1061.90" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%; -0.03%)</title><rect x="992.0" y="261" width="0.3" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="995.04" y="271.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (15 samples, 0.03%; +0.01%)</title><rect x="160.0" y="197" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="162.97" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%; -0.00%)</title><rect x="1032.7" y="197" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1035.68" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (24 samples, 0.05%; +0.01%)</title><rect x="136.7" y="261" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="139.67" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%; -0.00%)</title><rect x="1030.2" y="133" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1033.20" y="143.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (26 samples, 0.06%; +0.00%)</title><rect x="311.6" y="181" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="314.61" y="191.5" ></text>
</g>
<g >
<title>schema::position (10 samples, 0.02%; +0.00%)</title><rect x="933.3" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="936.27" y="415.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (199 samples, 0.42%; -0.02%)</title><rect x="1026.9" y="181" width="5.0" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1029.90" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,210 samples, 2.57%; -0.00%)</title><rect x="784.7" y="325" width="30.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="787.66" y="335.5" >st..</text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.07%; 0.00%)</title><rect x="810.5" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="813.45" y="255.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="322.3" y="181" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="325.27" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%; -0.00%)</title><rect x="766.2" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="769.22" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%; -0.01%)</title><rect x="559.5" y="309" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="562.51" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (12 samples, 0.03%; +0.01%)</title><rect x="313.7" y="181" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="316.66" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (4 samples, 0.01%; 0.00%)</title><rect x="955.5" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="958.54" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%; -0.02%)</title><rect x="1028.0" y="149" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1031.05" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%; +0.01%)</title><rect x="771.5" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="774.52" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.01%; +0.01%)</title><rect x="772.1" y="341" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="775.15" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (13 samples, 0.03%; -0.00%)</title><rect x="1095.0" y="309" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1097.95" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (9 samples, 0.02%; -0.02%)</title><rect x="388.8" y="229" width="0.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="391.85" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="771.4" y="325" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="774.40" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (12 samples, 0.03%; +0.01%)</title><rect x="788.1" y="293" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="791.06" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,831 samples, 3.88%; +0.06%)</title><rect x="1052.3" y="357" width="45.9" height="15.0" fill="rgb(255,102,102)" rx="2" ry="2" />
<text  x="1055.34" y="367.5" >serv..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (15 samples, 0.03%; +0.01%)</title><rect x="487.6" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="490.62" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (14 samples, 0.03%; -0.02%)</title><rect x="258.1" y="325" width="0.3" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="261.09" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%; +0.02%)</title><rect x="251.6" y="277" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="254.59" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (30 samples, 0.06%; +0.01%)</title><rect x="447.3" y="293" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="450.32" y="303.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (34 samples, 0.07%; +0.00%)</title><rect x="794.9" y="149" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="797.92" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.46" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (18 samples, 0.04%; +0.01%)</title><rect x="95.4" y="405" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="98.37" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (24 samples, 0.05%; 0.00%)</title><rect x="867.8" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.85" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; -0.01%)</title><rect x="649.5" y="437" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="652.53" y="447.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (36 samples, 0.08%; +0.00%)</title><rect x="1139.2" y="325" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1142.24" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; -0.00%)</title><rect x="186.2" y="101" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="189.19" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%; -0.00%)</title><rect x="807.5" y="197" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="810.45" y="207.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (128 samples, 0.27%; -0.03%)</title><rect x="916.6" y="341" width="3.2" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="919.56" y="351.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; -0.00%)</title><rect x="665.3" y="485" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="668.31" y="495.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (4 samples, 0.01%; +0.00%)</title><rect x="1061.4" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1064.45" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%; -0.00%)</title><rect x="1139.2" y="389" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1142.21" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.01%; +0.00%)</title><rect x="209.4" y="101" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="212.38" y="111.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.01%; -0.00%)</title><rect x="24.1" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="27.06" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="810.6" y="229" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="813.55" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (4 samples, 0.01%; +0.01%)</title><rect x="647.5" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="650.47" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (8 samples, 0.02%; -0.09%)</title><rect x="254.8" y="293" width="0.2" height="15.0" fill="rgb(41,41,255)" rx="2" ry="2" />
<text  x="257.79" y="303.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (128 samples, 0.27%; 0.00%)</title><rect x="1151.2" y="469" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1154.17" y="479.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (274 samples, 0.58%; +0.04%)</title><rect x="1079.4" y="245" width="6.8" height="15.0" fill="rgb(255,131,131)" rx="2" ry="2" />
<text  x="1082.36" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="550.6" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="553.62" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (19 samples, 0.04%; +0.00%)</title><rect x="833.2" y="309" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="836.25" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%; +0.01%)</title><rect x="223.6" y="229" width="0.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="226.64" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%; +0.00%)</title><rect x="402.7" y="213" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="405.71" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (27 samples, 0.06%; -0.01%)</title><rect x="129.0" y="245" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="132.04" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%; 0.00%)</title><rect x="447.0" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="450.04" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (37 samples, 0.08%; +0.00%)</title><rect x="686.4" y="501" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="689.41" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%; -0.03%)</title><rect x="973.2" y="341" width="1.5" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="976.23" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (89 samples, 0.19%; -0.01%)</title><rect x="650.2" y="469" width="2.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="653.20" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%; +0.02%)</title><rect x="688.8" y="469" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="691.76" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (9 samples, 0.02%; +0.01%)</title><rect x="60.0" y="453" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="63.04" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (631 samples, 1.34%; -0.00%)</title><rect x="791.9" y="261" width="15.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="794.94" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%; +0.00%)</title><rect x="960.7" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="963.67" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (6 samples, 0.01%; -0.01%)</title><rect x="902.5" y="357" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="905.55" y="367.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (121 samples, 0.26%; -0.01%)</title><rect x="379.3" y="149" width="3.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="382.34" y="159.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; 0.00%)</title><rect x="796.2" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="799.19" y="223.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (185 samples, 0.39%; 0.00%)</title><rect x="854.1" y="437" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.14" y="447.5" ></text>
</g>
<g >
<title>db::validate_for_read (4 samples, 0.01%; 0.00%)</title><rect x="1122.3" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1125.30" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%; -0.01%)</title><rect x="535.5" y="341" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="538.51" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (4 samples, 0.01%; +0.00%)</title><rect x="1153.3" y="453" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1156.30" y="463.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (9 samples, 0.02%; +0.01%)</title><rect x="1049.8" y="261" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1052.82" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.01%)</title><rect x="1124.2" y="405" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1127.22" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (76 samples, 0.16%; +0.03%)</title><rect x="1106.6" y="405" width="1.9" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="1109.56" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (724 samples, 1.54%; +0.01%)</title><rect x="495.2" y="293" width="18.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="498.18" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (8 samples, 0.02%; 0.00%)</title><rect x="23.7" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (126 samples, 0.27%; -0.01%)</title><rect x="910.5" y="373" width="3.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="913.48" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%; -0.02%)</title><rect x="1064.3" y="325" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1067.25" y="335.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (20 samples, 0.04%; +0.01%)</title><rect x="326.8" y="181" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="329.80" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="576.6" y="341" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="579.62" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%; 0.00%)</title><rect x="42.5" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.50" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (83 samples, 0.18%; 0.00%)</title><rect x="40.3" y="469" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.27" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; -0.01%)</title><rect x="800.3" y="117" width="0.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="803.32" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; 0.00%)</title><rect x="589.5" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="592.48" y="383.5" ></text>
</g>
<g >
<title>local_schema_registry (7 samples, 0.01%; -0.01%)</title><rect x="973.0" y="357" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="976.00" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (26 samples, 0.06%; +0.02%)</title><rect x="517.1" y="309" width="0.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="520.15" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.01%; +0.01%)</title><rect x="652.2" y="437" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="655.23" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (37 samples, 0.08%; +0.00%)</title><rect x="572.0" y="357" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="574.99" y="367.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%; -0.01%)</title><rect x="1063.3" y="341" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1066.33" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (209 samples, 0.44%; +0.01%)</title><rect x="1125.0" y="421" width="5.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1128.00" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (417 samples, 0.88%; +0.01%)</title><rect x="570.7" y="389" width="10.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="573.69" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (27 samples, 0.06%; +0.06%)</title><rect x="361.2" y="197" width="0.6" height="15.0" fill="rgb(255,102,102)" rx="2" ry="2" />
<text  x="364.15" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%; -0.08%)</title><rect x="722.1" y="469" width="0.2" height="15.0" fill="rgb(57,57,255)" rx="2" ry="2" />
<text  x="725.13" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%; 0.00%)</title><rect x="280.8" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="283.84" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61 samples, 0.13%; -0.02%)</title><rect x="894.2" y="293" width="1.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="897.22" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (21 samples, 0.04%; +0.01%)</title><rect x="783.5" y="277" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="786.51" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="421" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="431.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="362.0" y="197" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="364.95" y="207.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (78 samples, 0.17%; +0.00%)</title><rect x="794.0" y="197" width="1.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="796.99" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (7 samples, 0.01%; -0.04%)</title><rect x="934.3" y="405" width="0.2" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="937.35" y="415.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (7 samples, 0.01%; 0.00%)</title><rect x="23.7" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (61 samples, 0.13%; 0.00%)</title><rect x="17.8" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.76" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (24 samples, 0.05%; +0.02%)</title><rect x="597.4" y="437" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="600.44" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (14 samples, 0.03%; -0.01%)</title><rect x="598.0" y="437" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="601.04" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; 0.00%)</title><rect x="698.0" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.01" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (454 samples, 0.96%; -0.00%)</title><rect x="675.0" y="501" width="11.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="678.00" y="511.5" ></text>
</g>
<g >
<title>row::external_memory_usage (29 samples, 0.06%; +0.05%)</title><rect x="205.1" y="165" width="0.7" height="15.0" fill="rgb(255,107,107)" rx="2" ry="2" />
<text  x="208.05" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (19 samples, 0.04%; -0.01%)</title><rect x="845.8" y="341" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="848.76" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.01%; +0.01%)</title><rect x="1032.0" y="181" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1035.03" y="191.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (26 samples, 0.06%; -0.00%)</title><rect x="904.0" y="325" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="907.00" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (30 samples, 0.06%; +0.01%)</title><rect x="639.1" y="485" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="642.12" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%; +0.00%)</title><rect x="723.7" y="453" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="726.68" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; +0.00%)</title><rect x="96.4" y="373" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="99.37" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%; -0.00%)</title><rect x="20.2" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="23.18" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (30 samples, 0.06%; +0.00%)</title><rect x="1025.8" y="197" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1028.82" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (112 samples, 0.24%; -0.00%)</title><rect x="843.6" y="405" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="846.63" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (436 samples, 0.92%; -0.05%)</title><rect x="1177.9" y="629" width="10.9" height="15.0" fill="rgb(111,111,255)" rx="2" ry="2" />
<text  x="1180.87" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%; -0.02%)</title><rect x="646.6" y="389" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="649.62" y="399.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (188 samples, 0.40%; +0.02%)</title><rect x="350.3" y="165" width="4.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="353.27" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (333 samples, 0.71%; +0.01%)</title><rect x="561.0" y="309" width="8.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="564.03" y="319.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%; +0.01%)</title><rect x="403.3" y="261" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="406.31" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (13 samples, 0.03%; +0.00%)</title><rect x="362.2" y="213" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="365.15" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (10 samples, 0.02%; -0.00%)</title><rect x="547.1" y="389" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="550.10" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (144 samples, 0.31%; +0.01%)</title><rect x="543.2" y="373" width="3.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="546.17" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%; +0.01%)</title><rect x="701.0" y="469" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="704.02" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%; +0.01%)</title><rect x="629.9" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="632.89" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,420 samples, 11.49%; -0.03%)</title><rect x="283.1" y="389" width="135.6" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="286.06" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="861.6" y="437" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="864.64" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%; -0.00%)</title><rect x="683.5" y="469" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="686.53" y="479.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,843 samples, 3.91%; -0.03%)</title><rect x="775.5" y="373" width="46.1" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="778.53" y="383.5" >serv..</text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (15 samples, 0.03%; -0.00%)</title><rect x="78.1" y="453" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="81.13" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%; +0.00%)</title><rect x="762.1" y="373" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="765.09" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (403 samples, 0.85%; 0.00%)</title><rect x="843.3" y="437" width="10.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.30" y="447.5" ></text>
</g>
<g >
<title>local_schema_registry (8 samples, 0.02%; +0.00%)</title><rect x="964.9" y="373" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="967.90" y="383.5" ></text>
</g>
<g >
<title>table::make_reader (5 samples, 0.01%; +0.00%)</title><rect x="535.9" y="373" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="538.86" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (12 samples, 0.03%; -0.00%)</title><rect x="61.7" y="421" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="64.67" y="431.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (17 samples, 0.04%; +0.02%)</title><rect x="1142.5" y="501" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1145.51" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (5 samples, 0.01%; 0.00%)</title><rect x="143.9" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.85" y="255.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (77 samples, 0.16%; 0.00%)</title><rect x="540.9" y="389" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="543.89" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (10 samples, 0.02%; -0.01%)</title><rect x="653.5" y="469" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="656.50" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; -0.01%)</title><rect x="920.5" y="389" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="923.46" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, false&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%; +0.00%)</title><rect x="673.6" y="421" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="676.62" y="431.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (9 samples, 0.02%; +0.01%)</title><rect x="756.5" y="357" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="759.54" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (24 samples, 0.05%; +0.02%)</title><rect x="667.7" y="469" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="670.72" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (288 samples, 0.61%; -0.01%)</title><rect x="448.6" y="309" width="7.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="451.57" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,116 samples, 10.85%; +0.01%)</title><rect x="285.6" y="341" width="128.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="288.64" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (4 samples, 0.01%; 0.00%)</title><rect x="981.0" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="984.01" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (20 samples, 0.04%; 0.00%)</title><rect x="20.7" y="309" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.73" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,945 samples, 48.65%; -0.02%)</title><rect x="50.7" y="485" width="574.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="53.66" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>range_tombstone_accumulator::clear (6 samples, 0.01%; +0.00%)</title><rect x="388.3" y="229" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="391.27" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (21 samples, 0.04%; +0.01%)</title><rect x="69.8" y="389" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="72.77" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%; +0.01%)</title><rect x="1060.8" y="261" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1063.82" y="271.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (89 samples, 0.19%; +0.01%)</title><rect x="414.2" y="373" width="2.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="417.22" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="824.2" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="827.16" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (13 samples, 0.03%; -0.02%)</title><rect x="131.9" y="245" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="134.95" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (40 samples, 0.08%; +0.01%)</title><rect x="622.0" y="405" width="1.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="624.98" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (11 samples, 0.02%; +0.00%)</title><rect x="109.3" y="373" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="112.28" y="383.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%; 0.00%)</title><rect x="24.0" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (45,931 samples, 97.39%; -0.11%)</title><rect x="26.9" y="517" width="1149.2" height="15.0" fill="rgb(0,0,255)" rx="2" ry="2" />
<text  x="29.91" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%; +0.01%)</title><rect x="329.9" y="181" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="332.85" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (84 samples, 0.18%; +0.02%)</title><rect x="1098.5" y="357" width="2.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1101.50" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%; 0.00%)</title><rect x="530.9" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="533.88" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (19 samples, 0.04%; +0.02%)</title><rect x="280.0" y="357" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="283.04" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%; +0.01%)</title><rect x="506.5" y="197" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="509.51" y="207.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (13 samples, 0.03%; +0.00%)</title><rect x="23.6" y="469" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="26.61" y="479.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%; -0.00%)</title><rect x="521.0" y="341" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="523.98" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.01%; -0.02%)</title><rect x="311.5" y="165" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="314.51" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%; -0.01%)</title><rect x="668.4" y="485" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="671.44" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (58 samples, 0.12%; -0.00%)</title><rect x="1156.5" y="421" width="1.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1159.50" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (4 samples, 0.01%; +0.01%)</title><rect x="59.5" y="453" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.54" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (68 samples, 0.14%; 0.00%)</title><rect x="19.8" y="357" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.76" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; +0.01%)</title><rect x="852.1" y="325" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="855.14" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (47 samples, 0.10%; -0.01%)</title><rect x="748.0" y="309" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="750.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (10 samples, 0.02%; +0.00%)</title><rect x="539.4" y="405" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="542.36" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (11 samples, 0.02%; +0.00%)</title><rect x="684.6" y="453" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="687.60" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (155 samples, 0.33%; +0.00%)</title><rect x="671.1" y="469" width="3.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="674.09" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (5 samples, 0.01%; +0.00%)</title><rect x="882.6" y="421" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="885.61" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="700.3" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="703.32" y="495.5" ></text>
</g>
<g >
<title>tombstone::apply (17 samples, 0.04%; +0.01%)</title><rect x="386.5" y="197" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="389.55" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (14 samples, 0.03%; 0.00%)</title><rect x="21.5" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.51" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (27 samples, 0.06%; +0.01%)</title><rect x="444.8" y="277" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="447.79" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.00%)</title><rect x="814.3" y="261" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="817.33" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (268 samples, 0.57%; +0.00%)</title><rect x="1112.0" y="405" width="6.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1115.04" y="415.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (4 samples, 0.01%; -0.00%)</title><rect x="326.7" y="181" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="329.70" y="191.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (5 samples, 0.01%; -0.00%)</title><rect x="555.0" y="325" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="558.03" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.01%; -0.01%)</title><rect x="413.5" y="325" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="416.54" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20 samples, 0.04%; -0.00%)</title><rect x="801.7" y="117" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="804.67" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (6 samples, 0.01%; -0.01%)</title><rect x="602.3" y="437" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="605.29" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (66 samples, 0.14%; -0.00%)</title><rect x="1125.5" y="389" width="1.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1128.47" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (31 samples, 0.07%; -0.01%)</title><rect x="149.6" y="213" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="152.56" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (36 samples, 0.08%; +0.02%)</title><rect x="652.6" y="469" width="0.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="655.55" y="479.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (5 samples, 0.01%; -0.00%)</title><rect x="361.8" y="197" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="364.83" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; +0.01%)</title><rect x="1044.9" y="245" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1047.91" y="255.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (10 samples, 0.02%; +0.01%)</title><rect x="750.1" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="753.08" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="533" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="543.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (11 samples, 0.02%; +0.00%)</title><rect x="407.0" y="229" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="410.01" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="1145.9" y="469" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1148.92" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (8 samples, 0.02%; +0.00%)</title><rect x="610.8" y="437" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="613.82" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (4 samples, 0.01%; +0.01%)</title><rect x="1045.5" y="277" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1048.46" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.01%; 0.00%)</title><rect x="580.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="583.92" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (7 samples, 0.01%; -0.00%)</title><rect x="902.7" y="357" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="905.72" y="367.5" ></text>
</g>
<g >
<title>row::row (4 samples, 0.01%; -0.01%)</title><rect x="243.4" y="213" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="246.43" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (32 samples, 0.07%; +0.03%)</title><rect x="109.6" y="373" width="0.8" height="15.0" fill="rgb(255,148,148)" rx="2" ry="2" />
<text  x="112.55" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%; +0.00%)</title><rect x="448.4" y="309" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="451.39" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (46 samples, 0.10%; +0.01%)</title><rect x="220.3" y="213" width="1.1" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="223.29" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; -0.01%)</title><rect x="1068.0" y="293" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1071.03" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (202 samples, 0.43%; +0.01%)</title><rect x="728.4" y="389" width="5.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="731.41" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (5 samples, 0.01%; +0.01%)</title><rect x="744.2" y="373" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="747.15" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (4 samples, 0.01%; +0.01%)</title><rect x="1068.7" y="325" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1071.73" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (18 samples, 0.04%; +0.02%)</title><rect x="91.1" y="421" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="94.11" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%; -0.01%)</title><rect x="353.0" y="149" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="355.97" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="773.4" y="341" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="776.45" y="351.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%; -0.00%)</title><rect x="235.5" y="213" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="238.48" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (130 samples, 0.28%; -0.00%)</title><rect x="995.8" y="293" width="3.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="998.80" y="303.5" ></text>
</g>
<g >
<title>database::has_keyspace (120 samples, 0.25%; -0.00%)</title><rect x="843.5" y="421" width="3.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="846.53" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (7 samples, 0.01%; -0.00%)</title><rect x="805.5" y="117" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="808.50" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (28 samples, 0.06%; -0.01%)</title><rect x="250.8" y="277" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="253.84" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (51 samples, 0.11%; -0.02%)</title><rect x="276.8" y="309" width="1.2" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="279.76" y="319.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (13 samples, 0.03%; +0.01%)</title><rect x="415.0" y="341" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="417.99" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.07%; 0.00%)</title><rect x="686.5" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.51" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (106 samples, 0.22%; +0.01%)</title><rect x="362.5" y="213" width="2.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="365.48" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; +0.01%)</title><rect x="409.0" y="277" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="411.99" y="287.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%; +0.02%)</title><rect x="564.9" y="277" width="1.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="567.86" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%; -0.00%)</title><rect x="569.5" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="572.51" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,284 samples, 9.08%; -0.01%)</title><rect x="138.1" y="309" width="107.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="141.08" y="319.5" >partition_sna..</text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (72 samples, 0.15%; +0.00%)</title><rect x="236.2" y="197" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="239.20" y="207.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (8 samples, 0.02%; -0.02%)</title><rect x="554.2" y="341" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="557.15" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; -0.01%)</title><rect x="531.2" y="245" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="534.18" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (8 samples, 0.02%; 0.00%)</title><rect x="980.3" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.29" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (13 samples, 0.03%; -0.00%)</title><rect x="42.0" y="437" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="44.98" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (10 samples, 0.02%; -0.01%)</title><rect x="752.6" y="405" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="755.56" y="415.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%; +0.01%)</title><rect x="1051.9" y="325" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1054.92" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (19 samples, 0.04%; -0.01%)</title><rect x="659.1" y="469" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="662.08" y="479.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,225 samples, 2.60%; +0.03%)</title><rect x="330.0" y="181" width="30.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="333.00" y="191.5" >wr..</text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%; -0.01%)</title><rect x="1066.9" y="309" width="1.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1069.85" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%; +0.00%)</title><rect x="575.4" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="578.37" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%; -0.01%)</title><rect x="1050.8" y="293" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1053.77" y="303.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (10 samples, 0.02%; +0.00%)</title><rect x="306.1" y="197" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="309.06" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%; -0.00%)</title><rect x="991.1" y="277" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="994.07" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (62 samples, 0.13%; +0.03%)</title><rect x="1131.9" y="389" width="1.5" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="1134.85" y="399.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%; +0.01%)</title><rect x="288.6" y="309" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="291.59" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4 samples, 0.01%; 0.00%)</title><rect x="423.4" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="426.42" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (27 samples, 0.06%; +0.01%)</title><rect x="748.4" y="293" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="751.35" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (182 samples, 0.39%; 0.00%)</title><rect x="670.4" y="485" width="4.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="673.44" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (32 samples, 0.07%; -0.01%)</title><rect x="292.6" y="293" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="295.60" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (11 samples, 0.02%; -0.01%)</title><rect x="860.2" y="453" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="863.19" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (7 samples, 0.01%; 0.00%)</title><rect x="46.4" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.40" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.03%; -0.01%)</title><rect x="1107.5" y="389" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1110.46" y="399.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (26 samples, 0.06%; -0.02%)</title><rect x="1096.9" y="341" width="0.7" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1099.90" y="351.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (9 samples, 0.02%; +0.01%)</title><rect x="686.1" y="485" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="689.08" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (9 samples, 0.02%; -0.01%)</title><rect x="753.8" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="756.81" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (18 samples, 0.04%; -0.02%)</title><rect x="1140.8" y="485" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1143.84" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (24 samples, 0.05%; -0.02%)</title><rect x="1103.3" y="373" width="0.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1106.31" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (196 samples, 0.42%; -0.00%)</title><rect x="1169.8" y="485" width="4.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1172.76" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="656.9" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="659.86" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (7 samples, 0.01%; +0.00%)</title><rect x="766.3" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="769.32" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (88 samples, 0.19%; +0.01%)</title><rect x="1155.8" y="453" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1158.82" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (233 samples, 0.49%; +0.00%)</title><rect x="449.0" y="293" width="5.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="452.04" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%; -0.00%)</title><rect x="316.0" y="213" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="319.04" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,007 samples, 14.86%; +0.04%)</title><rect x="106.6" y="405" width="175.3" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="109.63" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%; +0.01%)</title><rect x="237.7" y="181" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="240.73" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.01%; -0.01%)</title><rect x="1102.0" y="373" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1104.96" y="383.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.14%; -0.00%)</title><rect x="856.3" y="357" width="1.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="859.29" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.01%; +0.01%)</title><rect x="684.9" y="469" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="687.88" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (145 samples, 0.31%; +0.02%)</title><rect x="94.4" y="421" width="3.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="97.42" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (13 samples, 0.03%; +0.00%)</title><rect x="555.9" y="293" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="558.88" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.01%; -0.00%)</title><rect x="407.4" y="277" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="410.41" y="287.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (5 samples, 0.01%; 0.00%)</title><rect x="1139.3" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.34" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (68 samples, 0.14%; 0.00%)</title><rect x="555.2" y="325" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.15" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (4 samples, 0.01%; 0.00%)</title><rect x="147.5" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.51" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (4 samples, 0.01%; +0.00%)</title><rect x="1138.0" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1141.01" y="447.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,617 samples, 3.43%; -0.02%)</title><rect x="777.3" y="357" width="40.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="780.33" y="367.5" >ser..</text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (11 samples, 0.02%; +0.01%)</title><rect x="455.9" y="325" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="458.92" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%; +0.01%)</title><rect x="925.4" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="928.37" y="351.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (11 samples, 0.02%; +0.01%)</title><rect x="445.5" y="293" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="448.47" y="303.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (55 samples, 0.12%; -0.00%)</title><rect x="599.2" y="421" width="1.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="602.19" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (15 samples, 0.03%; -0.01%)</title><rect x="712.2" y="453" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="715.18" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%; +0.01%)</title><rect x="682.4" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="685.43" y="463.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (9 samples, 0.02%; 0.00%)</title><rect x="23.7" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="431.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; -0.00%)</title><rect x="505.7" y="197" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="508.74" y="207.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (10 samples, 0.02%; -0.00%)</title><rect x="386.7" y="181" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="389.72" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%; -0.00%)</title><rect x="997.9" y="229" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1000.90" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (205 samples, 0.43%; 0.00%)</title><rect x="17.3" y="469" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.31" y="479.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%; +0.01%)</title><rect x="140.4" y="245" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="143.38" y="255.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (71 samples, 0.15%; -0.03%)</title><rect x="147.7" y="213" width="1.7" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="150.66" y="223.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (12 samples, 0.03%; +0.01%)</title><rect x="444.1" y="277" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="447.14" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%; +0.00%)</title><rect x="389.2" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="392.25" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%; +0.00%)</title><rect x="344.4" y="149" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="347.41" y="159.5" ></text>
</g>
<g >
<title>query::result::builder::builder (122 samples, 0.26%; +0.01%)</title><rect x="594.2" y="421" width="3.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="597.16" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="388.6" y="229" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="391.57" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%; -0.01%)</title><rect x="820.6" y="277" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="823.56" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (48 samples, 0.10%; -0.00%)</title><rect x="534.3" y="341" width="1.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="537.31" y="351.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (7 samples, 0.01%; -0.01%)</title><rect x="592.2" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="595.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="547.5" y="389" width="0.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="550.47" y="399.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%; +0.00%)</title><rect x="839.7" y="373" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="842.70" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="417.5" y="357" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="420.49" y="367.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.19%; -0.00%)</title><rect x="986.9" y="325" width="2.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="989.94" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="517" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%; +0.01%)</title><rect x="925.6" y="341" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="928.57" y="351.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%; -0.00%)</title><rect x="704.3" y="437" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="707.34" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (15 samples, 0.03%; +0.01%)</title><rect x="620.3" y="389" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="623.25" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (6 samples, 0.01%; -0.01%)</title><rect x="866.3" y="501" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="869.32" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (10 samples, 0.02%; +0.01%)</title><rect x="979.9" y="357" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="982.91" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt (17 samples, 0.04%; +0.00%)</title><rect x="473.3" y="277" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="476.34" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%; +0.01%)</title><rect x="818.5" y="341" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="821.51" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (4 samples, 0.01%; -0.00%)</title><rect x="603.2" y="437" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="606.24" y="447.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; +0.01%)</title><rect x="809.5" y="245" width="0.8" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="812.45" y="255.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (75 samples, 0.16%; -0.01%)</title><rect x="502.3" y="229" width="1.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="505.26" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (43 samples, 0.09%; +0.00%)</title><rect x="935.1" y="389" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="938.13" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (118 samples, 0.25%; +0.01%)</title><rect x="67.5" y="405" width="3.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="70.55" y="415.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; -0.01%)</title><rect x="572.1" y="341" width="0.8" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="575.14" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (5 samples, 0.01%; 0.00%)</title><rect x="714.5" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="717.48" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%; -0.01%)</title><rect x="590.1" y="373" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="593.05" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (427 samples, 0.91%; -0.00%)</title><rect x="890.5" y="341" width="10.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="893.52" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.01%; 0.00%)</title><rect x="884.1" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.06" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="531.7" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="534.68" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.00%)</title><rect x="845.3" y="341" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="848.30" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="958.3" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="961.32" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%; +0.00%)</title><rect x="624.7" y="485" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="627.73" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (4 samples, 0.01%; 0.00%)</title><rect x="644.7" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="647.75" y="479.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (54 samples, 0.11%; -0.01%)</title><rect x="502.8" y="213" width="1.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="505.79" y="223.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (4 samples, 0.01%; +0.00%)</title><rect x="208.4" y="149" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="211.41" y="159.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.03%; 0.00%)</title><rect x="24.0" y="613" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (111 samples, 0.24%; +0.01%)</title><rect x="1046.3" y="261" width="2.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1049.26" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (18 samples, 0.04%; -0.00%)</title><rect x="749.3" y="293" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="752.33" y="303.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%; -0.00%)</title><rect x="241.5" y="213" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="244.53" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (71 samples, 0.15%; -0.07%)</title><rect x="886.6" y="405" width="1.7" height="15.0" fill="rgb(65,65,255)" rx="2" ry="2" />
<text  x="889.56" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (467 samples, 0.99%; -0.05%)</title><rect x="174.5" y="101" width="11.7" height="15.0" fill="rgb(107,107,255)" rx="2" ry="2" />
<text  x="177.50" y="111.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (6 samples, 0.01%; +0.00%)</title><rect x="1018.8" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1021.77" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (139 samples, 0.29%; -0.00%)</title><rect x="1007.7" y="261" width="3.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1010.66" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%; -0.01%)</title><rect x="263.9" y="341" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="266.92" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (476 samples, 1.01%; +0.01%)</title><rect x="462.6" y="309" width="11.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="465.63" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (8 samples, 0.02%; +0.00%)</title><rect x="70.3" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="73.30" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (4 samples, 0.01%; -0.01%)</title><rect x="1100.3" y="341" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1103.25" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (33 samples, 0.07%; -0.01%)</title><rect x="803.5" y="133" width="0.8" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="806.47" y="143.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%; -0.01%)</title><rect x="1065.0" y="341" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1068.03" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="45.5" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="48.50" y="495.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%; +0.00%)</title><rect x="757.0" y="405" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="760.01" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (8 samples, 0.02%; 0.00%)</title><rect x="1175.4" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.41" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (8 samples, 0.02%; +0.00%)</title><rect x="433.1" y="341" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="436.06" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%; 0.00%)</title><rect x="24.2" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.21" y="383.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; -0.00%)</title><rect x="494.4" y="293" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="497.43" y="303.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,629 samples, 9.81%; +0.09%)</title><rect x="293.4" y="293" width="115.8" height="15.0" fill="rgb(255,41,41)" rx="2" ry="2" />
<text  x="296.40" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (30 samples, 0.06%; +0.02%)</title><rect x="883.3" y="421" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="886.31" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (8 samples, 0.02%; -0.01%)</title><rect x="887.2" y="389" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="890.21" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (4 samples, 0.01%; -0.01%)</title><rect x="280.7" y="357" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="283.74" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (4 samples, 0.01%; +0.00%)</title><rect x="687.3" y="501" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="690.33" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (16 samples, 0.03%; +0.01%)</title><rect x="1048.6" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1051.61" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (4 samples, 0.01%; 0.00%)</title><rect x="974.6" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="977.63" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (11 samples, 0.02%; 0.00%)</title><rect x="1129.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1132.63" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (80 samples, 0.17%; +0.01%)</title><rect x="654.9" y="469" width="2.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="657.86" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (38 samples, 0.08%; +0.04%)</title><rect x="930.3" y="405" width="0.9" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="933.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="400.8" y="181" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="403.78" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.04%; -0.01%)</title><rect x="68.2" y="389" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="71.22" y="399.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.01%)</title><rect x="581.3" y="389" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="584.32" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (10 samples, 0.02%; +0.00%)</title><rect x="76.5" y="453" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="79.50" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.05%; +0.03%)</title><rect x="826.7" y="293" width="0.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="829.72" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (37 samples, 0.08%; -0.00%)</title><rect x="40.6" y="453" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="43.62" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (117 samples, 0.25%; +0.00%)</title><rect x="637.9" y="501" width="2.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="640.87" y="511.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (33 samples, 0.07%; 0.00%)</title><rect x="868.9" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.90" y="495.5" ></text>
</g>
<g >
<title>mutation_partition::clustered_row (5 samples, 0.01%; 0.00%)</title><rect x="869.3" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.30" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (20 samples, 0.04%; -0.01%)</title><rect x="936.2" y="405" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="939.20" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (11 samples, 0.02%; -0.01%)</title><rect x="934.1" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="937.07" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="700.0" y="469" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="703.04" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%; -0.01%)</title><rect x="764.3" y="309" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="767.34" y="319.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (5 samples, 0.01%; -0.00%)</title><rect x="350.1" y="165" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="353.14" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (93 samples, 0.20%; -0.02%)</title><rect x="483.3" y="197" width="2.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="486.32" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%; +0.01%)</title><rect x="53.5" y="469" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="56.53" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (164 samples, 0.35%; +0.01%)</title><rect x="389.3" y="245" width="4.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="392.35" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%; +0.01%)</title><rect x="644.6" y="469" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="647.57" y="479.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_row_body (4 samples, 0.01%; 0.00%)</title><rect x="24.2" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.21" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (471 samples, 1.00%; +0.02%)</title><rect x="31.7" y="501" width="11.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="34.74" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (4 samples, 0.01%; +0.00%)</title><rect x="108.4" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="111.35" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.02%; 0.00%)</title><rect x="833.9" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.92" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%; -0.00%)</title><rect x="270.5" y="277" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="273.48" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (171 samples, 0.36%; +0.00%)</title><rect x="482.0" y="213" width="4.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="485.02" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (15 samples, 0.03%; -0.03%)</title><rect x="143.1" y="245" width="0.4" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="146.10" y="255.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%; -0.00%)</title><rect x="497.6" y="261" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="500.61" y="271.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (175 samples, 0.37%; +0.01%)</title><rect x="181.8" y="69" width="4.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="184.78" y="79.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (4 samples, 0.01%; -0.00%)</title><rect x="1039.0" y="261" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1041.96" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (29 samples, 0.06%; -0.03%)</title><rect x="191.5" y="117" width="0.7" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="194.52" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (6 samples, 0.01%; -0.00%)</title><rect x="454.5" y="277" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="457.50" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (15 samples, 0.03%; 0.00%)</title><rect x="869.2" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.20" y="383.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; +0.01%)</title><rect x="623.9" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="626.88" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%; -0.00%)</title><rect x="360.7" y="197" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="363.75" y="207.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (30 samples, 0.06%; +0.02%)</title><rect x="473.8" y="277" width="0.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="476.76" y="287.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (14 samples, 0.03%; -0.01%)</title><rect x="103.9" y="421" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="106.92" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (7 samples, 0.01%; 0.00%)</title><rect x="23.7" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="367.5" ></text>
</g>
<g >
<title>schema_registry::get (148 samples, 0.31%; -0.01%)</title><rect x="974.8" y="357" width="3.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="977.76" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (34 samples, 0.07%; +0.00%)</title><rect x="744.3" y="357" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="747.28" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (107 samples, 0.23%; 0.00%)</title><rect x="19.4" y="373" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.36" y="383.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (52 samples, 0.11%; +0.00%)</title><rect x="770.2" y="357" width="1.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="773.22" y="367.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (40 samples, 0.08%; -0.01%)</title><rect x="1006.5" y="277" width="1.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1009.53" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="553.1" y="357" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="556.05" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="824.6" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="827.59" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (178 samples, 0.38%; +0.04%)</title><rect x="396.5" y="197" width="4.5" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="399.50" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (22 samples, 0.05%; -0.02%)</title><rect x="238.0" y="229" width="0.6" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="241.00" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (33 samples, 0.07%; -0.01%)</title><rect x="887.5" y="389" width="0.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="890.46" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (955 samples, 2.02%; +0.01%)</title><rect x="788.4" y="293" width="23.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="791.39" y="303.5" >s..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="463.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (442 samples, 0.94%; -0.03%)</title><rect x="476.0" y="277" width="11.0" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="478.99" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%; -0.01%)</title><rect x="203.4" y="165" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="206.38" y="175.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%; 0.00%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.82" y="639.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (4 samples, 0.01%; +0.01%)</title><rect x="993.5" y="325" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="996.52" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%; +0.01%)</title><rect x="1061.1" y="261" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1064.10" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (4 samples, 0.01%; 0.00%)</title><rect x="20.8" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.83" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%; -0.01%)</title><rect x="251.3" y="261" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="254.34" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="148.6" y="165" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="151.58" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (94 samples, 0.20%; +0.01%)</title><rect x="576.8" y="357" width="2.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="579.77" y="367.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (86 samples, 0.18%; +0.01%)</title><rect x="779.8" y="325" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="782.83" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (13 samples, 0.03%; -0.00%)</title><rect x="204.2" y="149" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="207.18" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (5 samples, 0.01%; 0.00%)</title><rect x="78.0" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.00" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%; 0.00%)</title><rect x="624.5" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="627.51" y="479.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (4 samples, 0.01%; 0.00%)</title><rect x="229.4" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="232.45" y="207.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (16 samples, 0.03%; -0.01%)</title><rect x="1049.6" y="277" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1052.64" y="287.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.01%)</title><rect x="1170.0" y="453" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1173.03" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%; -0.01%)</title><rect x="559.8" y="293" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="562.81" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (75 samples, 0.16%; +0.01%)</title><rect x="750.3" y="277" width="1.9" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="753.33" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (83 samples, 0.18%; +0.01%)</title><rect x="229.5" y="213" width="2.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="232.55" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (47 samples, 0.10%; -0.01%)</title><rect x="669.3" y="485" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="672.27" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (53 samples, 0.11%; 0.00%)</title><rect x="646.3" y="421" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.30" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (36 samples, 0.08%; -0.01%)</title><rect x="96.2" y="405" width="0.9" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="99.24" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,199 samples, 8.90%; +0.01%)</title><rect x="139.4" y="277" width="105.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="142.38" y="287.5" >logalloc::al..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="76.8" y="453" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="79.75" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (78 samples, 0.17%; -0.00%)</title><rect x="789.4" y="261" width="1.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="792.36" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (56 samples, 0.12%; +0.01%)</title><rect x="541.1" y="357" width="1.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="544.14" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,482 samples, 9.50%; +0.04%)</title><rect x="295.3" y="277" width="112.1" height="15.0" fill="rgb(255,123,123)" rx="2" ry="2" />
<text  x="298.27" y="287.5" >flat_mutation..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="1074.9" y="325" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1077.86" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (6 samples, 0.01%; +0.01%)</title><rect x="454.9" y="293" width="0.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="457.87" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; +0.00%)</title><rect x="23.8" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="26.79" y="255.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (17 samples, 0.04%; -0.01%)</title><rect x="284.8" y="373" width="0.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="287.79" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (7 samples, 0.01%; +0.01%)</title><rect x="846.2" y="357" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="849.23" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.01%; 0.00%)</title><rect x="1143.4" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1146.44" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%; +0.02%)</title><rect x="562.3" y="293" width="0.5" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="565.28" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,188 samples, 4.64%; -0.01%)</title><rect x="158.6" y="229" width="54.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="161.57" y="239.5" >parti..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%; +0.01%)</title><rect x="41.6" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="44.60" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; 0.00%)</title><rect x="74.3" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.25" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="277.9" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="280.86" y="287.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (4 samples, 0.01%; -0.00%)</title><rect x="904.8" y="357" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="907.75" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (39 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="485" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.19" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%; -0.00%)</title><rect x="1032.3" y="197" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1035.33" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (70 samples, 0.15%; -0.01%)</title><rect x="755.3" y="405" width="1.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="758.26" y="415.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (19 samples, 0.04%; -0.00%)</title><rect x="749.3" y="309" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="752.30" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (6 samples, 0.01%; +0.01%)</title><rect x="1104.0" y="373" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1106.96" y="383.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%; 0.00%)</title><rect x="46.9" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.93" y="511.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (11 samples, 0.02%; -0.01%)</title><rect x="821.3" y="277" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="824.26" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%; +0.01%)</title><rect x="139.2" y="277" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="142.20" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.01%; +0.00%)</title><rect x="520.2" y="325" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="523.17" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (44 samples, 0.09%; +0.01%)</title><rect x="499.0" y="245" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="501.96" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%; -0.00%)</title><rect x="134.9" y="245" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="137.92" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%; -0.01%)</title><rect x="42.0" y="453" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="44.95" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%; 0.00%)</title><rect x="388.1" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="391.12" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (19 samples, 0.04%; 0.00%)</title><rect x="867.9" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.92" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="811.0" y="213" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="814.03" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (4 samples, 0.01%; +0.00%)</title><rect x="39.1" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="42.10" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (4 samples, 0.01%; -0.01%)</title><rect x="904.7" y="357" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="907.65" y="367.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%; +0.00%)</title><rect x="786.2" y="277" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="789.21" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%; -0.00%)</title><rect x="1074.1" y="325" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1077.13" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (48 samples, 0.10%; +0.01%)</title><rect x="648.0" y="405" width="1.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="651.03" y="415.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (10 samples, 0.02%; +0.01%)</title><rect x="189.2" y="85" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="192.24" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%; -0.01%)</title><rect x="194.2" y="101" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="197.22" y="111.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,546 samples, 9.64%; +0.02%)</title><rect x="422.2" y="405" width="113.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="425.25" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (4 samples, 0.01%; +0.01%)</title><rect x="946.1" y="373" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="949.13" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (94 samples, 0.20%; +0.01%)</title><rect x="804.5" y="133" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="807.47" y="143.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (62 samples, 0.13%; +0.03%)</title><rect x="1162.6" y="453" width="1.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1165.60" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (375 samples, 0.80%; +0.01%)</title><rect x="373.0" y="165" width="9.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="375.98" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="939.3" y="309" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="942.33" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="1143.2" y="501" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1146.16" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (18 samples, 0.04%; +0.00%)</title><rect x="705.1" y="437" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="708.14" y="447.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.02%)</title><rect x="409.6" y="293" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="412.56" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (94 samples, 0.20%; +0.02%)</title><rect x="793.7" y="213" width="2.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="796.66" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%; -0.01%)</title><rect x="263.4" y="325" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="266.40" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.01%; 0.00%)</title><rect x="833.8" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.82" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (31 samples, 0.07%; +0.01%)</title><rect x="538.8" y="421" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="541.84" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (40 samples, 0.08%; 0.00%)</title><rect x="595.9" y="389" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="598.93" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (6 samples, 0.01%; 0.00%)</title><rect x="23.7" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.74" y="335.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (12 samples, 0.03%; -0.01%)</title><rect x="460.3" y="325" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="463.25" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (20 samples, 0.04%; +0.00%)</title><rect x="62.0" y="421" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="65.02" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (17 samples, 0.04%; +0.00%)</title><rect x="685.1" y="485" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="688.10" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (375 samples, 0.80%; -0.02%)</title><rect x="64.5" y="421" width="9.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="67.52" y="431.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; -0.00%)</title><rect x="543.9" y="357" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="546.89" y="367.5" ></text>
</g>
<g >
<title>database::find_column_family (74 samples, 0.16%; -0.00%)</title><rect x="825.4" y="341" width="1.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="828.41" y="351.5" ></text>
</g>
<g >
<title>operator new (93 samples, 0.20%; -0.00%)</title><rect x="150.7" y="213" width="2.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="153.74" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (76 samples, 0.16%; +0.00%)</title><rect x="725.8" y="421" width="1.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="728.79" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (4 samples, 0.01%; +0.01%)</title><rect x="979.5" y="357" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="982.54" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (24 samples, 0.05%; +0.01%)</title><rect x="119.5" y="309" width="0.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="122.49" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.01%)</title><rect x="700.9" y="469" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="703.87" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (10 samples, 0.02%; -0.06%)</title><rect x="944.7" y="341" width="0.3" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="947.71" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume (29 samples, 0.06%; +0.03%)</title><rect x="390.0" y="229" width="0.7" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="393.00" y="239.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; 0.00%)</title><rect x="1046.5" y="245" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1049.54" y="255.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (5 samples, 0.01%; +0.00%)</title><rect x="1031.9" y="181" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1034.88" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="640.5" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="643.49" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (32 samples, 0.07%; +0.02%)</title><rect x="836.7" y="405" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="839.70" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%; +0.00%)</title><rect x="235.8" y="213" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="238.78" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (5 samples, 0.01%; +0.01%)</title><rect x="215.5" y="181" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="218.49" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (232 samples, 0.49%; +0.05%)</title><rect x="197.2" y="133" width="5.9" height="15.0" fill="rgb(255,107,107)" rx="2" ry="2" />
<text  x="200.25" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%; -0.01%)</title><rect x="1075.1" y="325" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1078.06" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (43 samples, 0.09%; -0.01%)</title><rect x="805.7" y="117" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="808.75" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,049 samples, 12.83%; +0.02%)</title><rect x="112.9" y="357" width="151.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="115.93" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (13 samples, 0.03%; -0.01%)</title><rect x="806.5" y="85" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="809.47" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%; +0.00%)</title><rect x="665.8" y="469" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="668.81" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (5 samples, 0.01%; +0.00%)</title><rect x="621.4" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="624.35" y="447.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; 0.00%)</title><rect x="848.5" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="851.48" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; -0.00%)</title><rect x="286.6" y="277" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="289.64" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; 0.00%)</title><rect x="23.8" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.79" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; -0.01%)</title><rect x="840.8" y="437" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="843.80" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,273 samples, 2.70%; +0.02%)</title><rect x="1011.6" y="277" width="31.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1014.59" y="287.5" >se..</text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (10 samples, 0.02%; 0.00%)</title><rect x="23.7" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.69" y="463.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (14 samples, 0.03%; -0.01%)</title><rect x="751.9" y="261" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="754.86" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.01%)</title><rect x="542.5" y="357" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="545.54" y="367.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (4 samples, 0.01%; +0.00%)</title><rect x="955.8" y="373" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="958.82" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (101 samples, 0.21%; +0.04%)</title><rect x="819.0" y="325" width="2.6" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="822.03" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; -0.00%)</title><rect x="996.9" y="245" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="999.90" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; -0.00%)</title><rect x="796.0" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="799.02" y="223.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (46 samples, 0.10%; +0.06%)</title><rect x="431.7" y="341" width="1.2" height="15.0" fill="rgb(255,94,94)" rx="2" ry="2" />
<text  x="434.71" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%; +0.00%)</title><rect x="689.2" y="485" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="692.23" y="495.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (28 samples, 0.06%; +0.00%)</title><rect x="1061.5" y="277" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1064.55" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (20 samples, 0.04%; +0.01%)</title><rect x="1148.6" y="469" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1151.62" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%; 0.00%)</title><rect x="928.0" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="931.02" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%; -0.02%)</title><rect x="323.5" y="181" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="326.52" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%; 0.00%)</title><rect x="583.4" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="586.45" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (9 samples, 0.02%; 0.00%)</title><rect x="316.4" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="319.44" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (930 samples, 1.97%; +0.02%)</title><rect x="905.5" y="405" width="23.3" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="908.53" y="415.5" >c..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="633.6" y="453" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="636.61" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (6 samples, 0.01%; -0.00%)</title><rect x="952.5" y="405" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="955.46" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (51 samples, 0.11%; +0.02%)</title><rect x="1021.8" y="213" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1024.77" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.01%; +0.01%)</title><rect x="715.8" y="501" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="718.80" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%; +0.00%)</title><rect x="1133.6" y="421" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1136.56" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%; 0.00%)</title><rect x="1175.6" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.61" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="936.6" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="939.55" y="399.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="469" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.19" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%; +0.01%)</title><rect x="1102.7" y="357" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1105.73" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (25 samples, 0.05%; +0.01%)</title><rect x="1025.9" y="181" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1028.95" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (91 samples, 0.19%; +0.00%)</title><rect x="749.9" y="293" width="2.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="752.93" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (738 samples, 1.56%; -0.01%)</title><rect x="1075.9" y="325" width="18.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1078.86" y="335.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (11 samples, 0.02%; +0.01%)</title><rect x="546.8" y="389" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="549.77" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (10 samples, 0.02%; +0.01%)</title><rect x="1028.1" y="149" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1031.15" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%; +0.00%)</title><rect x="808.6" y="229" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="811.55" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%; -0.01%)</title><rect x="165.3" y="133" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="168.35" y="143.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (489 samples, 1.04%; +0.01%)</title><rect x="700.4" y="485" width="12.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="703.44" y="495.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%; -0.00%)</title><rect x="1158.2" y="437" width="1.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1161.15" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="21.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.23" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,463 samples, 11.58%; -0.01%)</title><rect x="282.2" y="405" width="136.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="285.19" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>[perf_simple_query_flame_080286cb96cdba15630037dd793513c22893f2ac] (4 samples, 0.01%; +0.01%)</title><rect x="1167.6" y="469" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1170.58" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%; -0.01%)</title><rect x="813.9" y="277" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="816.86" y="287.5" ></text>
</g>
<g >
<title>database::find_keyspace (191 samples, 0.40%; +0.01%)</title><rect x="1058.2" y="341" width="4.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1061.20" y="351.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (13 samples, 0.03%; +0.01%)</title><rect x="812.4" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="815.43" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.03%; +0.01%)</title><rect x="1104.2" y="389" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1107.21" y="399.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (31 samples, 0.07%; +0.00%)</title><rect x="627.9" y="485" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="630.91" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (6 samples, 0.01%; +0.00%)</title><rect x="990.3" y="293" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="993.29" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%; -0.00%)</title><rect x="774.0" y="357" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="777.02" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (20 samples, 0.04%; +0.01%)</title><rect x="253.7" y="277" width="0.5" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="256.69" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="51.9" y="453" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="54.93" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (182 samples, 0.39%; +0.01%)</title><rect x="1087.8" y="261" width="4.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1090.82" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%; -0.00%)</title><rect x="393.1" y="197" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="396.13" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (6 samples, 0.01%; 0.00%)</title><rect x="203.1" y="133" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.05" y="143.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (4 samples, 0.01%; -0.01%)</title><rect x="692.5" y="437" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="695.51" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (5 samples, 0.01%; +0.01%)</title><rect x="866.6" y="501" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="869.62" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="901.7" y="357" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="904.75" y="367.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (91 samples, 0.19%; +0.02%)</title><rect x="286.3" y="309" width="2.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="289.32" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (5 samples, 0.01%; -0.00%)</title><rect x="899.4" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="902.42" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (442 samples, 0.94%; -0.03%)</title><rect x="126.3" y="277" width="11.0" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="129.27" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (16 samples, 0.03%; 0.00%)</title><rect x="708.0" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="711.05" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; +0.00%)</title><rect x="481.7" y="181" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="484.69" y="191.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (5 samples, 0.01%; -0.00%)</title><rect x="224.8" y="245" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="227.82" y="255.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (7 samples, 0.01%; +0.00%)</title><rect x="1140.3" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1143.34" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="219.4" y="197" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="222.36" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (4 samples, 0.01%; +0.00%)</title><rect x="46.0" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="48.98" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (144 samples, 0.31%; +0.03%)</title><rect x="439.9" y="277" width="3.6" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="442.94" y="287.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (9 samples, 0.02%; 0.00%)</title><rect x="23.7" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.71" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,718 samples, 3.64%; -0.00%)</title><rect x="162.9" y="181" width="43.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="165.92" y="191.5" >muta..</text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (19 samples, 0.04%; -0.00%)</title><rect x="1149.1" y="469" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1152.12" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.03%; -0.02%)</title><rect x="70.6" y="405" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="73.65" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (12 samples, 0.03%; 0.00%)</title><rect x="666.7" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="669.69" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (4 samples, 0.01%; 0.00%)</title><rect x="23.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.01" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; -0.03%)</title><rect x="910.3" y="341" width="0.2" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="913.28" y="351.5" ></text>
</g>
<g >
<title>posix_memalign (144 samples, 0.31%; 0.00%)</title><rect x="182.3" y="53" width="3.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="185.29" y="63.5" ></text>
</g>
<g >
<title>database::find_column_family (73 samples, 0.15%; -0.01%)</title><rect x="1056.4" y="341" width="1.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1059.37" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (25 samples, 0.05%; +0.01%)</title><rect x="660.7" y="485" width="0.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="663.71" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (6 samples, 0.01%; 0.00%)</title><rect x="868.1" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.07" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (20 samples, 0.04%; -0.00%)</title><rect x="885.9" y="405" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="888.91" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="1148.4" y="485" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1151.42" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%; +0.01%)</title><rect x="832.9" y="277" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="835.90" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%; +0.01%)</title><rect x="791.4" y="261" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="794.36" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (14 samples, 0.03%; 0.00%)</title><rect x="1073.8" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.78" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (18 samples, 0.04%; +0.03%)</title><rect x="509.9" y="229" width="0.5" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="512.94" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (10 samples, 0.02%; -0.02%)</title><rect x="1060.3" y="277" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1063.32" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="783.2" y="293" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="786.21" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (8 samples, 0.02%; +0.00%)</title><rect x="259.1" y="341" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="262.07" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.00%)</title><rect x="154.3" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="157.34" y="239.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; -0.00%)</title><rect x="516.4" y="277" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="519.42" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (14 samples, 0.03%; +0.01%)</title><rect x="513.3" y="293" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="516.29" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (7 samples, 0.01%; 0.00%)</title><rect x="842.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="845.15" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; -0.00%)</title><rect x="1118.6" y="341" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1121.59" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.01%; -0.00%)</title><rect x="17.8" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="20.83" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (24 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="341" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="351.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.01%)</title><rect x="527.3" y="293" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="530.31" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (18 samples, 0.04%; +0.01%)</title><rect x="438.1" y="293" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="441.09" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; 0.00%)</title><rect x="630.2" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="633.16" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (545 samples, 1.16%; -0.02%)</title><rect x="1108.5" y="421" width="13.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1111.49" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="895.8" y="293" width="0.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="898.77" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; -0.00%)</title><rect x="416.4" y="373" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="419.44" y="383.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (39 samples, 0.08%; +0.01%)</title><rect x="439.0" y="277" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="441.96" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (15 samples, 0.03%; +0.00%)</title><rect x="1175.4" y="453" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1178.36" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; -0.00%)</title><rect x="656.5" y="437" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="659.51" y="447.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,665 samples, 5.65%; -0.00%)</title><rect x="767.2" y="405" width="66.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="770.24" y="415.5" >service..</text>
</g>
<g >
<title>database::has_keyspace (123 samples, 0.26%; -0.00%)</title><rect x="850.1" y="405" width="3.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="853.06" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,770 samples, 22.84%; -0.07%)</title><rect x="869.7" y="485" width="269.5" height="15.0" fill="rgb(74,74,255)" rx="2" ry="2" />
<text  x="872.72" y="495.5" >seastar::concrete_execution_stage&lt;se..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (516 samples, 1.09%; +0.00%)</title><rect x="227.0" y="245" width="12.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="229.97" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (4 samples, 0.01%; -0.02%)</title><rect x="594.9" y="389" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="597.93" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%; -0.00%)</title><rect x="901.2" y="357" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="904.20" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (10 samples, 0.02%; +0.00%)</title><rect x="1135.4" y="421" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1138.38" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (4 samples, 0.01%; +0.01%)</title><rect x="59.9" y="453" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.94" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (9 samples, 0.02%; -0.01%)</title><rect x="622.8" y="389" width="0.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="625.76" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (63 samples, 0.13%; -0.01%)</title><rect x="339.2" y="165" width="1.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="342.18" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="901.6" y="357" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="904.60" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%; -0.01%)</title><rect x="1031.4" y="149" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="1034.40" y="159.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (4 samples, 0.01%; +0.01%)</title><rect x="1162.1" y="469" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1165.13" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,085 samples, 4.42%; +0.07%)</title><rect x="160.5" y="197" width="52.2" height="15.0" fill="rgb(255,70,70)" rx="2" ry="2" />
<text  x="163.49" y="207.5" >parti..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (4 samples, 0.01%; +0.00%)</title><rect x="700.8" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="703.77" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="253.5" y="261" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="256.49" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (29 samples, 0.06%; +0.01%)</title><rect x="496.4" y="277" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="499.41" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%; -0.00%)</title><rect x="1120.0" y="373" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1123.02" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (22 samples, 0.05%; +0.02%)</title><rect x="947.5" y="405" width="0.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="950.53" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (97 samples, 0.21%; +0.04%)</title><rect x="850.6" y="373" width="2.4" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="853.61" y="383.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_080286cb96cdba15630037dd793513c22893f2ac] (4 samples, 0.01%; +0.01%)</title><rect x="1060.7" y="261" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1063.72" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (25 samples, 0.05%; 0.00%)</title><rect x="942.5" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="945.53" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%; -0.01%)</title><rect x="659.1" y="453" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="662.13" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; +0.00%)</title><rect x="748.2" y="277" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="751.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%; -0.01%)</title><rect x="457.0" y="325" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="459.95" y="335.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.03%)</title><rect x="32.2" y="485" width="0.6" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="35.17" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.06%; -0.00%)</title><rect x="966.1" y="341" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="969.15" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (595 samples, 1.26%; +0.01%)</title><rect x="1023.1" y="245" width="14.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1026.07" y="255.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (54 samples, 0.11%; -0.00%)</title><rect x="1093.0" y="309" width="1.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1095.97" y="319.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (5 samples, 0.01%; +0.00%)</title><rect x="1075.4" y="325" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1078.44" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,165 samples, 4.59%; -0.01%)</title><rect x="158.8" y="213" width="54.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="161.77" y="223.5" >logal..</text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%; +0.01%)</title><rect x="1002.4" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1005.40" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.01%)</title><rect x="32.5" y="469" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="35.54" y="479.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (131 samples, 0.28%; +0.01%)</title><rect x="345.3" y="165" width="3.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="348.26" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,800 samples, 48.34%; +0.04%)</title><rect x="54.1" y="469" width="570.4" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="57.06" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (44 samples, 0.09%; +0.01%)</title><rect x="1093.2" y="293" width="1.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1096.22" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (15 samples, 0.03%; +0.02%)</title><rect x="648.4" y="389" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="651.38" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%; -0.04%)</title><rect x="903.6" y="309" width="0.4" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="906.55" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (13 samples, 0.03%; -0.00%)</title><rect x="1168.8" y="453" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1171.83" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (653 samples, 1.38%; -0.01%)</title><rect x="888.9" y="389" width="16.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="891.89" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (11 samples, 0.02%; +0.01%)</title><rect x="444.5" y="277" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="447.52" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (4 samples, 0.01%; -0.01%)</title><rect x="546.6" y="277" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="549.60" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (17 samples, 0.04%; +0.01%)</title><rect x="451.5" y="261" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="454.47" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (114 samples, 0.24%; +0.01%)</title><rect x="730.5" y="325" width="2.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="733.54" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (20 samples, 0.04%; +0.00%)</title><rect x="34.2" y="485" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="37.17" y="495.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (9 samples, 0.02%; +0.01%)</title><rect x="821.8" y="389" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="824.79" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (20 samples, 0.04%; -0.01%)</title><rect x="560.5" y="293" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="563.48" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%; +0.01%)</title><rect x="806.5" y="69" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="809.50" y="79.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (38 samples, 0.08%; 0.00%)</title><rect x="1139.2" y="373" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.21" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%; -0.01%)</title><rect x="409.2" y="309" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="412.21" y="319.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (19 samples, 0.04%; 0.00%)</title><rect x="561.8" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="564.81" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (94 samples, 0.20%; +0.01%)</title><rect x="232.6" y="197" width="2.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="235.65" y="207.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (7 samples, 0.01%; +0.00%)</title><rect x="608.4" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="611.37" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (51 samples, 0.11%; -0.01%)</title><rect x="460.9" y="325" width="1.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="463.90" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="497.0" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="499.96" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (16 samples, 0.03%; +0.01%)</title><rect x="153.1" y="197" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="156.14" y="207.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (69 samples, 0.15%; -0.00%)</title><rect x="863.0" y="469" width="1.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="866.02" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; +0.01%)</title><rect x="570.6" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="573.56" y="383.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (4 samples, 0.01%; -0.00%)</title><rect x="282.1" y="405" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="285.09" y="415.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (18 samples, 0.04%; 0.00%)</title><rect x="1176.9" y="469" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.94" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (39 samples, 0.08%; -0.00%)</title><rect x="772.1" y="357" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="775.10" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; -0.00%)</title><rect x="635.9" y="469" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="638.89" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,782 samples, 5.90%; +0.00%)</title><rect x="154.6" y="245" width="69.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="157.56" y="255.5" >partiti..</text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (18 samples, 0.04%; +0.00%)</title><rect x="63.7" y="437" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="66.67" y="447.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; -0.01%)</title><rect x="51.5" y="469" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="54.53" y="479.5" ></text>
</g>
<g >
<title>db::block_for (8 samples, 0.02%; +0.00%)</title><rect x="1064.1" y="325" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1067.05" y="335.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (30 samples, 0.06%; -0.03%)</title><rect x="368.4" y="181" width="0.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="371.41" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%; +0.01%)</title><rect x="278.4" y="325" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="281.39" y="335.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (24 samples, 0.05%; -0.00%)</title><rect x="307.6" y="165" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="310.61" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 0.02%; +0.00%)</title><rect x="998.6" y="261" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1001.57" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (110 samples, 0.23%; -0.02%)</title><rect x="632.1" y="485" width="2.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="635.14" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (40 samples, 0.08%; +0.01%)</title><rect x="848.3" y="421" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="851.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.00%)</title><rect x="955.4" y="341" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="958.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%; +0.00%)</title><rect x="665.0" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="667.99" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (10 samples, 0.02%; +0.01%)</title><rect x="229.0" y="213" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="232.05" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%; 0.00%)</title><rect x="215.2" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="218.19" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (29 samples, 0.06%; +0.02%)</title><rect x="453.4" y="261" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="456.40" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.02%; +0.00%)</title><rect x="17.8" y="309" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="20.78" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (373 samples, 0.79%; -0.00%)</title><rect x="393.9" y="245" width="9.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="396.93" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (14 samples, 0.03%; +0.01%)</title><rect x="401.4" y="197" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="404.38" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (8 samples, 0.02%; +0.01%)</title><rect x="366.7" y="197" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="369.65" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (45 samples, 0.10%; +0.01%)</title><rect x="650.8" y="405" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="653.75" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (6 samples, 0.01%; +0.01%)</title><rect x="413.0" y="245" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="416.04" y="255.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%; +0.01%)</title><rect x="890.6" y="325" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="893.57" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%; 0.00%)</title><rect x="1073.6" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1076.58" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (22 samples, 0.05%; +0.02%)</title><rect x="805.8" y="85" width="0.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="808.85" y="95.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (24 samples, 0.05%; -0.01%)</title><rect x="1123.7" y="421" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1126.75" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%; -0.00%)</title><rect x="296.5" y="261" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="299.52" y="271.5" ></text>
</g>
<g >
<title>database::find_column_family (61 samples, 0.13%; +0.00%)</title><rect x="760.4" y="373" width="1.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="763.39" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (4 samples, 0.01%; +0.01%)</title><rect x="793.0" y="229" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="795.99" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (4 samples, 0.01%; 0.00%)</title><rect x="998.9" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1001.90" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (32 samples, 0.07%; +0.03%)</title><rect x="604.7" y="437" width="0.8" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="607.67" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (34 samples, 0.07%; +0.00%)</title><rect x="125.2" y="277" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="128.24" y="287.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (94 samples, 0.20%; +0.01%)</title><rect x="1112.4" y="389" width="2.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1115.39" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%; -0.01%)</title><rect x="600.7" y="421" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="603.69" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (43 samples, 0.09%; 0.00%)</title><rect x="921.7" y="357" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="924.74" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="615.0" y="373" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="618.05" y="383.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (59 samples, 0.13%; -0.01%)</title><rect x="1112.7" y="373" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1115.71" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (110 samples, 0.23%; -0.00%)</title><rect x="943.5" y="389" width="2.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="946.48" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,399 samples, 22.05%; +0.08%)</title><rect x="877.8" y="437" width="260.2" height="15.0" fill="rgb(255,53,53)" rx="2" ry="2" />
<text  x="880.78" y="447.5" >cql3::statements::select_statement..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (16 samples, 0.03%; +0.01%)</title><rect x="32.9" y="485" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="35.94" y="495.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (11 samples, 0.02%; 0.00%)</title><rect x="656.2" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.16" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (87 samples, 0.18%; -0.01%)</title><rect x="944.0" y="373" width="2.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="946.96" y="383.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; -0.02%)</title><rect x="671.5" y="453" width="0.6" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="674.47" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%; -0.02%)</title><rect x="957.3" y="373" width="0.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="960.29" y="383.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (6 samples, 0.01%; +0.01%)</title><rect x="1122.1" y="421" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1125.12" y="431.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (131 samples, 0.28%; 0.00%)</title><rect x="705.9" y="437" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="708.87" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.00%)</title><rect x="967.6" y="373" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="970.58" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.04%)</title><rect x="873.1" y="453" width="0.1" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="876.05" y="463.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%; -0.00%)</title><rect x="1035.5" y="213" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1038.48" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%; -0.00%)</title><rect x="839.8" y="357" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="842.78" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%; +0.00%)</title><rect x="129.7" y="245" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="132.72" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%; -0.00%)</title><rect x="454.1" y="277" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="457.12" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%; 0.00%)</title><rect x="811.3" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="814.33" y="271.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (177 samples, 0.38%; +0.05%)</title><rect x="468.9" y="261" width="4.4" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="471.91" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (10 samples, 0.02%; +0.01%)</title><rect x="1113.5" y="357" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1116.49" y="367.5" ></text>
</g>
<g >
<title>auth::resource::resource (107 samples, 0.23%; -0.01%)</title><rect x="771.8" y="389" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="774.77" y="399.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.17%; 0.00%)</title><rect x="1116.2" y="357" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1119.17" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (74 samples, 0.16%; -0.01%)</title><rect x="201.0" y="101" width="1.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="204.02" y="111.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%; 0.00%)</title><rect x="140.3" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="143.28" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (8 samples, 0.02%; -0.01%)</title><rect x="913.0" y="325" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="915.96" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; -0.01%)</title><rect x="829.5" y="277" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="832.52" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%; -0.00%)</title><rect x="1034.5" y="229" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1037.50" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%; -0.00%)</title><rect x="745.5" y="357" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="748.45" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (16 samples, 0.03%; +0.00%)</title><rect x="281.3" y="373" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="284.31" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (11 samples, 0.02%; -0.00%)</title><rect x="1044.2" y="277" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1047.19" y="287.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,546 samples, 3.28%; -0.03%)</title><rect x="778.6" y="341" width="38.6" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="781.55" y="351.5" >ser..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.07%; +0.03%)</title><rect x="152.3" y="181" width="0.8" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="155.29" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (23 samples, 0.05%; +0.00%)</title><rect x="449.5" y="277" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="452.47" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (76 samples, 0.16%; +0.02%)</title><rect x="710.2" y="437" width="2.0" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="713.25" y="447.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (4 samples, 0.01%; 0.00%)</title><rect x="219.2" y="197" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.19" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (9 samples, 0.02%; -0.01%)</title><rect x="708.2" y="405" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="711.22" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%; +0.01%)</title><rect x="689.7" y="469" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="692.66" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%; 0.00%)</title><rect x="204.7" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.70" y="159.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%; -0.01%)</title><rect x="832.8" y="293" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="835.79" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,153 samples, 10.93%; -0.01%)</title><rect x="285.2" y="373" width="128.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="288.22" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="142.1" y="261" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="145.13" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (26 samples, 0.06%; +0.03%)</title><rect x="1028.5" y="149" width="0.6" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="1031.50" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (15 samples, 0.03%; -0.01%)</title><rect x="144.0" y="245" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="146.98" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%; -0.06%)</title><rect x="844.0" y="389" width="2.4" height="15.0" fill="rgb(90,90,255)" rx="2" ry="2" />
<text  x="847.00" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (39 samples, 0.08%; 0.00%)</title><rect x="401.7" y="213" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="404.73" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%; 0.00%)</title><rect x="868.0" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.05" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,217 samples, 2.58%; -0.01%)</title><rect x="551.6" y="405" width="30.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="554.62" y="415.5" >fl..</text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (635 samples, 1.35%; +0.01%)</title><rect x="1077.1" y="309" width="15.9" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1080.09" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%; -0.01%)</title><rect x="910.0" y="341" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="913.03" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (50 samples, 0.11%; +0.00%)</title><rect x="1176.2" y="517" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1179.21" y="527.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (68 samples, 0.14%; +0.01%)</title><rect x="645.9" y="437" width="1.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="648.92" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (18 samples, 0.04%; -0.01%)</title><rect x="821.1" y="293" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="824.11" y="303.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.03%)</title><rect x="896.8" y="293" width="0.1" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="899.82" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (71 samples, 0.15%; 0.00%)</title><rect x="832.0" y="325" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="834.99" y="335.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%; +0.00%)</title><rect x="560.6" y="277" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="563.56" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (135 samples, 0.29%; +0.03%)</title><rect x="613.9" y="405" width="3.4" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="616.95" y="415.5" ></text>
</g>
<g >
<title>query::querier&lt; (16 samples, 0.03%; +0.01%)</title><rect x="59.1" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="62.06" y="463.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (6 samples, 0.01%; 0.00%)</title><rect x="1140.4" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.36" y="239.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (314 samples, 0.67%; -0.01%)</title><rect x="583.2" y="437" width="7.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="586.22" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%; -0.01%)</title><rect x="538.0" y="389" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="541.01" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,270 samples, 2.69%; +0.01%)</title><rect x="551.4" y="421" width="31.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="554.42" y="431.5" >st..</text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (149 samples, 0.32%; -0.04%)</title><rect x="817.9" y="357" width="3.7" height="15.0" fill="rgb(131,131,255)" rx="2" ry="2" />
<text  x="820.88" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="697.2" y="485" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="700.16" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; +0.01%)</title><rect x="49.8" y="485" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="52.83" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%; +0.00%)</title><rect x="638.7" y="485" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="641.69" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%; +0.01%)</title><rect x="1105.5" y="389" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="1108.48" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (15 samples, 0.03%; +0.01%)</title><rect x="841.8" y="437" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="844.78" y="447.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.01%)</title><rect x="669.6" y="469" width="0.5" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="672.64" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (7 samples, 0.01%; +0.01%)</title><rect x="222.7" y="229" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="225.69" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (4 samples, 0.01%; +0.00%)</title><rect x="852.6" y="357" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="855.59" y="367.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (204 samples, 0.43%; 0.00%)</title><rect x="17.3" y="437" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.31" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (351 samples, 0.74%; +0.01%)</title><rect x="939.7" y="421" width="8.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="942.65" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.06%; -0.01%)</title><rect x="610.0" y="421" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="612.97" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (4 samples, 0.01%; -0.01%)</title><rect x="316.9" y="197" width="0.1" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="319.94" y="207.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; -0.01%)</title><rect x="965.1" y="373" width="1.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="968.15" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="504.1" y="229" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="507.14" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%; -0.01%)</title><rect x="1072.4" y="277" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1075.43" y="287.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%; -0.02%)</title><rect x="978.1" y="341" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="981.08" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%; +0.00%)</title><rect x="706.6" y="421" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="709.62" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (47 samples, 0.10%; +0.00%)</title><rect x="683.7" y="469" width="1.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="686.70" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (34 samples, 0.07%; +0.00%)</title><rect x="867.8" y="501" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="870.80" y="511.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (12 samples, 0.03%; -0.00%)</title><rect x="805.2" y="117" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="808.20" y="127.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%; -0.01%)</title><rect x="635.3" y="485" width="0.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="638.34" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (4 samples, 0.01%; +0.01%)</title><rect x="49.7" y="485" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="52.68" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%; +0.01%)</title><rect x="745.8" y="341" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="748.83" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (33 samples, 0.07%; -0.01%)</title><rect x="1071.0" y="293" width="0.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1074.03" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (7 samples, 0.01%; -0.00%)</title><rect x="587.1" y="405" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="590.13" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (5 samples, 0.01%; -0.01%)</title><rect x="315.3" y="149" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="318.29" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (30 samples, 0.06%; -0.03%)</title><rect x="866.8" y="501" width="0.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="869.85" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (14 samples, 0.03%; 0.00%)</title><rect x="11.5" y="581" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.53" y="591.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (11 samples, 0.02%; 0.00%)</title><rect x="1140.3" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (14 samples, 0.03%; +0.02%)</title><rect x="425.7" y="357" width="0.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="428.73" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,330 samples, 11.30%; +0.05%)</title><rect x="968.6" y="373" width="133.4" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="971.60" y="383.5" >service::storage..</text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (11 samples, 0.02%; -0.01%)</title><rect x="325.0" y="181" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="328.00" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (30 samples, 0.06%; -0.01%)</title><rect x="589.6" y="389" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="592.63" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (18 samples, 0.04%; -0.02%)</title><rect x="153.1" y="213" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="156.11" y="223.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (13 samples, 0.03%; -0.00%)</title><rect x="435.2" y="325" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="438.18" y="335.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (433 samples, 0.92%; +0.01%)</title><rect x="63.4" y="453" width="10.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="66.42" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (121 samples, 0.26%; -0.00%)</title><rect x="240.6" y="229" width="3.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="243.58" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (17 samples, 0.04%; 0.00%)</title><rect x="20.8" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.78" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (133 samples, 0.28%; -0.01%)</title><rect x="564.6" y="293" width="3.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="567.63" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,226 samples, 49.25%; -0.02%)</title><rect x="47.6" y="501" width="581.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="50.58" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%; +0.00%)</title><rect x="904.1" y="309" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="907.10" y="319.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,913 samples, 23.14%; +0.01%)</title><rect x="868.7" y="501" width="273.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="871.67" y="511.5" >seastar::lambda_task&lt;seastar::execut..</text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.01%; -0.00%)</title><rect x="1139.3" y="197" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1142.34" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (398 samples, 0.84%; -0.01%)</title><rect x="890.7" y="325" width="9.9" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="893.69" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (50 samples, 0.11%; +0.01%)</title><rect x="760.7" y="341" width="1.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="763.66" y="351.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (167 samples, 0.35%; 0.00%)</title><rect x="504.3" y="229" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="507.31" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (54 samples, 0.11%; -0.02%)</title><rect x="527.8" y="309" width="1.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="530.78" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,569 samples, 11.81%; -0.03%)</title><rect x="116.5" y="325" width="139.4" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="119.53" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (304 samples, 0.64%; 0.00%)</title><rect x="479.3" y="245" width="7.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="482.34" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (19 samples, 0.04%; +0.00%)</title><rect x="810.8" y="229" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="813.80" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.01%; -0.01%)</title><rect x="846.4" y="405" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="849.43" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; +0.01%)</title><rect x="624.2" y="437" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="627.23" y="447.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (46 samples, 0.10%; -0.01%)</title><rect x="942.1" y="357" width="1.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="945.08" y="367.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (6 samples, 0.01%; 0.00%)</title><rect x="24.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.16" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (26 samples, 0.06%; +0.01%)</title><rect x="945.2" y="341" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="948.21" y="351.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (28 samples, 0.06%; +0.04%)</title><rect x="310.4" y="165" width="0.7" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="313.44" y="175.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (4 samples, 0.01%; 0.00%)</title><rect x="1140.6" y="165" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.64" y="175.5" ></text>
</g>
<g >
<title>row_tombstone::apply (24 samples, 0.05%; -0.01%)</title><rect x="386.4" y="213" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="389.42" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (29 samples, 0.06%; +0.00%)</title><rect x="729.6" y="325" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="732.61" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (123 samples, 0.26%; -0.01%)</title><rect x="828.0" y="325" width="3.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="831.02" y="335.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (34 samples, 0.07%; +0.00%)</title><rect x="39.3" y="405" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="42.27" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%; -0.00%)</title><rect x="579.2" y="357" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="582.25" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (34 samples, 0.07%; +0.02%)</title><rect x="406.6" y="245" width="0.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="409.56" y="255.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (17 samples, 0.04%; -0.00%)</title><rect x="1139.5" y="245" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1142.46" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4 samples, 0.01%; +0.00%)</title><rect x="613.7" y="405" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="616.72" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (38 samples, 0.08%; +0.00%)</title><rect x="549.4" y="421" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="552.37" y="431.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (59 samples, 0.13%; +0.01%)</title><rect x="755.5" y="389" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="758.53" y="399.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (38 samples, 0.08%; +0.00%)</title><rect x="463.8" y="293" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="466.76" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%; +0.00%)</title><rect x="571.3" y="357" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="574.29" y="367.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (14 samples, 0.03%; +0.03%)</title><rect x="523.0" y="325" width="0.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="525.95" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (69 samples, 0.15%; 0.00%)</title><rect x="241.7" y="213" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="244.68" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (37 samples, 0.08%; 0.00%)</title><rect x="835.2" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.20" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (186 samples, 0.39%; 0.00%)</title><rect x="17.7" y="389" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.71" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1038.3" y="245" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1041.31" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (20 samples, 0.04%; +0.02%)</title><rect x="707.4" y="421" width="0.5" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="710.45" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (11 samples, 0.02%; +0.00%)</title><rect x="945.4" y="325" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="948.43" y="335.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (4 samples, 0.01%; -0.00%)</title><rect x="807.8" y="261" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="810.75" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (142 samples, 0.30%; +0.01%)</title><rect x="199.3" y="117" width="3.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="202.32" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="811.4" y="245" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="814.35" y="255.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (21 samples, 0.04%; -0.01%)</title><rect x="507.5" y="197" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="510.46" y="207.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (13 samples, 0.03%; -0.02%)</title><rect x="122.3" y="261" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="125.34" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%; -0.00%)</title><rect x="402.9" y="213" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="405.91" y="223.5" ></text>
</g>
<g >
<title>mutation_querier::consume (12 samples, 0.03%; +0.00%)</title><rect x="686.7" y="277" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="689.71" y="287.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%; +0.00%)</title><rect x="1071.6" y="277" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1074.61" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (19 samples, 0.04%; +0.00%)</title><rect x="601.1" y="437" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="604.14" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (14 samples, 0.03%; +0.00%)</title><rect x="841.2" y="437" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="844.23" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; +0.00%)</title><rect x="861.7" y="421" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="864.69" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (34 samples, 0.07%; -0.00%)</title><rect x="745.2" y="373" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="748.23" y="383.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (38 samples, 0.08%; 0.00%)</title><rect x="925.8" y="341" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="928.82" y="351.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%; -0.01%)</title><rect x="486.6" y="213" width="0.3" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="489.62" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="572.8" y="325" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="575.79" y="335.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (12 samples, 0.03%; -0.02%)</title><rect x="913.7" y="373" width="0.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="916.66" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (212 samples, 0.45%; -0.00%)</title><rect x="728.2" y="405" width="5.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="731.16" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%; +0.00%)</title><rect x="827.7" y="325" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="830.72" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%; +0.00%)</title><rect x="389.1" y="245" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="392.12" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (16 samples, 0.03%; +0.01%)</title><rect x="492.1" y="309" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="495.10" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (5 samples, 0.01%; +0.01%)</title><rect x="1092.8" y="293" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1095.77" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (10 samples, 0.02%; -0.01%)</title><rect x="159.7" y="197" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="162.72" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (14 samples, 0.03%; -0.03%)</title><rect x="580.6" y="373" width="0.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="583.57" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.03%; +0.00%)</title><rect x="507.0" y="165" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="509.96" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="713.4" y="485" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="716.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%; -0.01%)</title><rect x="673.9" y="437" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="676.92" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (63 samples, 0.13%; +0.00%)</title><rect x="647.8" y="421" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="650.77" y="431.5" ></text>
</g>
<g >
<title>do_cql_test (274 samples, 0.58%; 0.00%)</title><rect x="17.1" y="549" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.13" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (30 samples, 0.06%; +0.02%)</title><rect x="533.6" y="341" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="536.56" y="351.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.01%; 0.00%)</title><rect x="1176.9" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.94" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (8 samples, 0.02%; -0.08%)</title><rect x="1177.6" y="629" width="0.2" height="15.0" fill="rgb(49,49,255)" rx="2" ry="2" />
<text  x="1180.57" y="639.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (13 samples, 0.03%; -0.00%)</title><rect x="1177.1" y="453" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1180.06" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (20 samples, 0.04%; -0.01%)</title><rect x="729.8" y="309" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="732.81" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (16 samples, 0.03%; -0.01%)</title><rect x="1026.2" y="165" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1029.17" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%; +0.00%)</title><rect x="89.0" y="437" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="91.96" y="447.5" ></text>
</g>
<g >
<title>operator delete (90 samples, 0.19%; +0.02%)</title><rect x="404.1" y="245" width="2.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="407.06" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%; -0.01%)</title><rect x="713.8" y="501" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="716.80" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.00%)</title><rect x="829.7" y="261" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="832.74" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (129 samples, 0.27%; -0.00%)</title><rect x="232.2" y="213" width="3.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="235.25" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="913.4" y="357" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="916.43" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (25 samples, 0.05%; +0.03%)</title><rect x="556.9" y="325" width="0.6" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="559.85" y="335.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (5 samples, 0.01%; -0.00%)</title><rect x="46.6" y="485" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="49.63" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::read_next (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="367.5" ></text>
</g>
<g >
<title>database::query (1,028 samples, 2.18%; -0.03%)</title><rect x="1013.2" y="261" width="25.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1016.24" y="271.5" >d..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%; +0.01%)</title><rect x="862.7" y="405" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="865.69" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (39 samples, 0.08%; -0.00%)</title><rect x="1017.8" y="229" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1020.79" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (141 samples, 0.30%; +0.02%)</title><rect x="1115.2" y="389" width="3.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="1118.22" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (7 samples, 0.01%; -0.01%)</title><rect x="25.6" y="517" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="28.61" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%; +0.00%)</title><rect x="589.8" y="373" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="592.83" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%; 0.00%)</title><rect x="816.6" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.63" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5 samples, 0.01%; -0.00%)</title><rect x="865.5" y="485" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="868.55" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%; 0.00%)</title><rect x="286.6" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="289.64" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::close (16 samples, 0.03%; 0.00%)</title><rect x="1175.4" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.36" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.00%)</title><rect x="812.1" y="277" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="815.10" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (4 samples, 0.01%; +0.00%)</title><rect x="1175.8" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1178.76" y="495.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%; +0.00%)</title><rect x="847.9" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="850.88" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (4 samples, 0.01%; 0.00%)</title><rect x="23.5" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.49" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (31 samples, 0.07%; -0.01%)</title><rect x="664.2" y="437" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="667.21" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (8 samples, 0.02%; +0.01%)</title><rect x="858.5" y="421" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="861.47" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (4 samples, 0.01%; +0.01%)</title><rect x="945.7" y="325" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="948.71" y="335.5" ></text>
</g>
<g >
<title>row::compact_and_expire (807 samples, 1.71%; 0.00%)</title><rect x="366.1" y="213" width="20.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="369.05" y="223.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (28 samples, 0.06%; +0.01%)</title><rect x="845.5" y="357" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="848.53" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (107 samples, 0.23%; -0.00%)</title><rect x="996.2" y="277" width="2.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="999.22" y="287.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_cells (4 samples, 0.01%; 0.00%)</title><rect x="24.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.21" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%; +0.00%)</title><rect x="571.4" y="341" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="574.39" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="569.6" y="309" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="572.64" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.00%)</title><rect x="696.2" y="485" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="699.16" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%; +0.02%)</title><rect x="461.4" y="309" width="0.7" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="464.43" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%; +0.00%)</title><rect x="682.2" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="685.15" y="463.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%; -0.01%)</title><rect x="704.0" y="453" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="707.04" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (14 samples, 0.03%; +0.00%)</title><rect x="692.3" y="453" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="695.26" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (4 samples, 0.01%; -0.00%)</title><rect x="899.5" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="902.55" y="319.5" ></text>
</g>
<g >
<title>operator new (165 samples, 0.35%; 0.00%)</title><rect x="1018.9" y="245" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1021.92" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (40 samples, 0.08%; -0.01%)</title><rect x="65.5" y="405" width="1.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="68.54" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.00%)</title><rect x="1123.9" y="405" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1126.95" y="415.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; +0.00%)</title><rect x="789.5" y="245" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="792.51" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (15 samples, 0.03%; +0.02%)</title><rect x="968.0" y="373" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="970.98" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (15 samples, 0.03%; +0.01%)</title><rect x="835.7" y="405" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="838.75" y="415.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.01%; -0.00%)</title><rect x="817.2" y="341" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="820.23" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (125 samples, 0.27%; +0.01%)</title><rect x="718.8" y="453" width="3.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="721.76" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (210 samples, 0.45%; -0.02%)</title><rect x="893.6" y="309" width="5.2" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="896.57" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (4 samples, 0.01%; +0.01%)</title><rect x="1062.2" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1065.25" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (80 samples, 0.17%; 0.00%)</title><rect x="663.0" y="469" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.99" y="479.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.01%; -0.00%)</title><rect x="479.7" y="229" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="482.69" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (4 samples, 0.01%; +0.01%)</title><rect x="571.8" y="341" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="574.77" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; +0.02%)</title><rect x="91.7" y="421" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="94.66" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (23 samples, 0.05%; 0.00%)</title><rect x="195.8" y="133" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="198.82" y="143.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (29 samples, 0.06%; +0.02%)</title><rect x="365.3" y="213" width="0.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="368.33" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (12 samples, 0.03%; +0.00%)</title><rect x="1140.3" y="309" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1143.26" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (44 samples, 0.09%; -0.02%)</title><rect x="216.6" y="165" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="219.56" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; 0.00%)</title><rect x="628.2" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="631.23" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.03%; -0.01%)</title><rect x="734.1" y="389" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="737.07" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (29 samples, 0.06%; +0.03%)</title><rect x="781.2" y="277" width="0.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="784.20" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%; +0.00%)</title><rect x="663.9" y="437" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="666.94" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; 0.00%)</title><rect x="213.1" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.11" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.01%)</title><rect x="659.6" y="485" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="662.61" y="495.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%; 0.00%)</title><rect x="24.0" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.01" y="479.5" ></text>
</g>
<g >
<title>query::querier&lt; (7 samples, 0.01%; 0.00%)</title><rect x="1175.2" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.19" y="495.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (6 samples, 0.01%; 0.00%)</title><rect x="24.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.16" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; -0.00%)</title><rect x="97.9" y="389" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="100.89" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (14 samples, 0.03%; +0.01%)</title><rect x="288.2" y="293" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="291.24" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (56 samples, 0.12%; -0.01%)</title><rect x="782.6" y="309" width="1.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="785.63" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%; -0.01%)</title><rect x="829.9" y="277" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="832.94" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (48 samples, 0.10%; -0.01%)</title><rect x="180.3" y="69" width="1.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="183.31" y="79.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (81 samples, 0.17%; -0.00%)</title><rect x="621.8" y="421" width="2.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="624.80" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (8 samples, 0.02%; +0.01%)</title><rect x="512.3" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="515.32" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="664.8" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="667.76" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (18 samples, 0.04%; +0.00%)</title><rect x="832.7" y="309" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="835.67" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (6 samples, 0.01%; 0.00%)</title><rect x="22.6" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.56" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="834.3" y="405" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="837.32" y="415.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (20 samples, 0.04%; -0.01%)</title><rect x="485.6" y="197" width="0.5" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="488.65" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (109 samples, 0.23%; -0.00%)</title><rect x="1035.2" y="229" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1038.23" y="239.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (486 samples, 1.03%; +0.00%)</title><rect x="474.9" y="293" width="12.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="477.94" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (16 samples, 0.03%; 0.00%)</title><rect x="1175.4" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.36" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (30 samples, 0.06%; +0.00%)</title><rect x="909.4" y="357" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="912.43" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (5 samples, 0.01%; +0.01%)</title><rect x="244.0" y="261" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="246.96" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (4 samples, 0.01%; 0.00%)</title><rect x="18.9" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.93" y="271.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (4 samples, 0.01%; 0.00%)</title><rect x="1140.0" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.04" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (5 samples, 0.01%; +0.01%)</title><rect x="947.4" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="950.41" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (27 samples, 0.06%; -0.01%)</title><rect x="783.4" y="293" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="786.36" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; +0.02%)</title><rect x="780.0" y="293" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="783.00" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.00%)</title><rect x="298.3" y="245" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="301.25" y="255.5" ></text>
</g>
<g >
<title>database::find_schema (81 samples, 0.17%; -0.00%)</title><rect x="825.3" y="357" width="2.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="828.29" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%; +0.00%)</title><rect x="165.1" y="133" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="168.12" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (4 samples, 0.01%; 0.00%)</title><rect x="19.6" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.63" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%; +0.01%)</title><rect x="988.4" y="293" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="991.39" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (4 samples, 0.01%; -0.00%)</title><rect x="406.3" y="245" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="409.31" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%; +0.00%)</title><rect x="209.5" y="149" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="212.48" y="159.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="651.7" y="373" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="654.73" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (4 samples, 0.01%; -0.01%)</title><rect x="836.1" y="421" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="839.12" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (55 samples, 0.12%; +0.01%)</title><rect x="726.1" y="405" width="1.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="729.11" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (9 samples, 0.02%; +0.00%)</title><rect x="940.8" y="405" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="943.78" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (5 samples, 0.01%; 0.00%)</title><rect x="597.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="600.21" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (14 samples, 0.03%; -0.02%)</title><rect x="234.7" y="181" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="237.65" y="191.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (577 samples, 1.22%; -0.01%)</title><rect x="793.3" y="229" width="14.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="796.29" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.02%; -0.01%)</title><rect x="568.1" y="277" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="571.06" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%; -0.01%)</title><rect x="212.3" y="149" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="215.31" y="159.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (9 samples, 0.02%; +0.01%)</title><rect x="730.1" y="293" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="733.09" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; 0.00%)</title><rect x="729.9" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.91" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (20 samples, 0.04%; +0.03%)</title><rect x="70.9" y="405" width="0.5" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="73.95" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (219 samples, 0.46%; -0.08%)</title><rect x="1086.9" y="277" width="5.5" height="15.0" fill="rgb(53,53,255)" rx="2" ry="2" />
<text  x="1089.89" y="287.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (8 samples, 0.02%; -0.00%)</title><rect x="686.8" y="261" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="689.81" y="271.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; -0.02%)</title><rect x="813.1" y="277" width="0.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="816.05" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (7 samples, 0.01%; +0.00%)</title><rect x="505.6" y="197" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="508.56" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%; +0.01%)</title><rect x="137.8" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="140.78" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (9 samples, 0.02%; +0.01%)</title><rect x="255.9" y="325" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="258.87" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,171 samples, 10.96%; -0.03%)</title><rect x="724.2" y="453" width="129.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="727.16" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (30 samples, 0.06%; -0.02%)</title><rect x="829.1" y="293" width="0.8" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="832.12" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (89 samples, 0.19%; -0.00%)</title><rect x="838.3" y="421" width="2.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="841.30" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="570.1" y="325" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="573.11" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (23 samples, 0.05%; -0.01%)</title><rect x="1135.6" y="421" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1138.63" y="431.5" ></text>
</g>
<g >
<title>row::external_memory_usage (267 samples, 0.57%; +0.04%)</title><rect x="196.7" y="149" width="6.7" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="199.67" y="159.5" ></text>
</g>
<g >
<title>database::apply_in_memory (31 samples, 0.07%; +0.00%)</title><rect x="1139.3" y="293" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1142.26" y="303.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (637 samples, 1.35%; +0.00%)</title><rect x="170.4" y="117" width="15.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="173.35" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (150 samples, 0.32%; -0.01%)</title><rect x="827.5" y="341" width="3.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="830.52" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (8 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (104 samples, 0.22%; -0.00%)</title><rect x="358.0" y="165" width="2.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="361.05" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (7 samples, 0.01%; -0.01%)</title><rect x="1150.2" y="485" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1153.19" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%; 0.00%)</title><rect x="491.8" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="494.75" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (24 samples, 0.05%; +0.01%)</title><rect x="400.2" y="165" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="403.18" y="175.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (17 samples, 0.04%; -0.01%)</title><rect x="222.0" y="213" width="0.4" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="225.02" y="223.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (26 samples, 0.06%; +0.01%)</title><rect x="224.2" y="245" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="227.17" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (7 samples, 0.01%; 0.00%)</title><rect x="22.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.53" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.01%; -0.00%)</title><rect x="858.7" y="421" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="861.67" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (4 samples, 0.01%; +0.00%)</title><rect x="701.6" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="704.64" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (4 samples, 0.01%; +0.01%)</title><rect x="979.4" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="982.43" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%; -0.00%)</title><rect x="291.7" y="245" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="294.72" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="588.1" y="389" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="591.05" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; -0.00%)</title><rect x="513.8" y="293" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="516.82" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (10 samples, 0.02%; -0.00%)</title><rect x="709.8" y="453" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="712.80" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="723.9" y="453" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="726.93" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (51 samples, 0.11%; +0.01%)</title><rect x="742.4" y="325" width="1.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="745.42" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.03%)</title><rect x="848.5" y="389" width="0.7" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="851.48" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (9 samples, 0.02%; +0.01%)</title><rect x="654.6" y="453" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="657.63" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (195 samples, 0.41%; +0.01%)</title><rect x="214.3" y="197" width="4.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="217.31" y="207.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (13 samples, 0.03%; +0.00%)</title><rect x="209.2" y="117" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="212.16" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; +0.00%)</title><rect x="410.0" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="413.04" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1046.1" y="261" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1049.14" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%; -0.01%)</title><rect x="955.7" y="373" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="958.67" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (43 samples, 0.09%; +0.00%)</title><rect x="655.7" y="453" width="1.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="658.73" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (79 samples, 0.17%; +0.01%)</title><rect x="618.8" y="437" width="2.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="621.83" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; 0.00%)</title><rect x="616.7" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="619.68" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (88 samples, 0.19%; +0.04%)</title><rect x="391.1" y="213" width="2.2" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="394.07" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (18 samples, 0.04%; 0.00%)</title><rect x="602.4" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="605.44" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%; -0.01%)</title><rect x="278.8" y="357" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="281.84" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (5 samples, 0.01%; +0.00%)</title><rect x="21.0" y="277" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="24.01" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (590 samples, 1.25%; -0.01%)</title><rect x="1150.7" y="485" width="14.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1153.74" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (76 samples, 0.16%; -0.02%)</title><rect x="838.6" y="405" width="1.9" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="841.60" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (15 samples, 0.03%; +0.01%)</title><rect x="312.8" y="181" width="0.4" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="315.84" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; -0.01%)</title><rect x="1146.1" y="485" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1149.07" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (4 samples, 0.01%; +0.00%)</title><rect x="550.3" y="421" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="553.32" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (11 samples, 0.02%; +0.02%)</title><rect x="25.1" y="517" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="28.11" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (140 samples, 0.30%; -0.02%)</title><rect x="762.8" y="357" width="3.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="765.82" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.8" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.83" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.01%)</title><rect x="857.9" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="860.89" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (285 samples, 0.60%; 0.00%)</title><rect x="16.9" y="597" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.86" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%; +0.01%)</title><rect x="658.1" y="485" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="661.11" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.01%)</title><rect x="263.1" y="309" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="266.07" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%; 0.00%)</title><rect x="790.4" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.39" y="239.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (68 samples, 0.14%; +0.01%)</title><rect x="290.8" y="277" width="1.7" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="293.82" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::do_fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="24.1" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.06" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (10 samples, 0.02%; +0.01%)</title><rect x="945.0" y="341" width="0.2" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="947.96" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="448.1" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="451.07" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (4 samples, 0.01%; 0.00%)</title><rect x="986.0" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.97" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.00%)</title><rect x="638.5" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="641.52" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="610.4" y="389" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="613.45" y="399.5" ></text>
</g>
<g >
<title>reader_permit::max_result_size (4 samples, 0.01%; +0.01%)</title><rect x="63.3" y="453" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="66.29" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (33 samples, 0.07%; 0.00%)</title><rect x="98.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="101.32" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.10%; +0.00%)</title><rect x="739.4" y="389" width="1.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="742.37" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (27 samples, 0.06%; -0.03%)</title><rect x="661.8" y="485" width="0.7" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="664.81" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (205 samples, 0.43%; -0.00%)</title><rect x="17.3" y="453" width="5.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="20.31" y="463.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.81" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; 0.00%)</title><rect x="867.7" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.67" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="980.5" y="357" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="983.54" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.00%)</title><rect x="784.4" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="787.38" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%; -0.00%)</title><rect x="852.1" y="341" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="855.06" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (70 samples, 0.15%; +0.00%)</title><rect x="72.1" y="389" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="75.12" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (5 samples, 0.01%; +0.01%)</title><rect x="521.1" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="524.13" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (79 samples, 0.17%; -0.00%)</title><rect x="742.0" y="373" width="2.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="745.00" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (7 samples, 0.01%; +0.01%)</title><rect x="1138.7" y="437" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1141.73" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (20 samples, 0.04%; +0.04%)</title><rect x="1051.0" y="293" width="0.5" height="15.0" fill="rgb(255,135,135)" rx="2" ry="2" />
<text  x="1053.97" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (89 samples, 0.19%; -0.01%)</title><rect x="290.4" y="293" width="2.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="293.37" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (5 samples, 0.01%; -0.01%)</title><rect x="255.7" y="309" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="258.74" y="319.5" ></text>
</g>
<g >
<title>table::set_hit_rate (81 samples, 0.17%; 0.00%)</title><rect x="710.1" y="453" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.12" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; 0.00%)</title><rect x="810.9" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="813.88" y="223.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%; +0.02%)</title><rect x="588.7" y="389" width="0.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="591.65" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_access (10 samples, 0.02%; 0.00%)</title><rect x="23.7" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.69" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (20 samples, 0.04%; -0.05%)</title><rect x="135.5" y="261" width="0.5" height="15.0" fill="rgb(115,115,255)" rx="2" ry="2" />
<text  x="138.50" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (20 samples, 0.04%; +0.02%)</title><rect x="408.2" y="261" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="411.24" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,903 samples, 14.64%; -0.00%)</title><rect x="108.5" y="389" width="172.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="111.45" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (61 samples, 0.13%; 0.00%)</title><rect x="17.8" y="357" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.76" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (26 samples, 0.06%; -0.00%)</title><rect x="842.5" y="421" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="845.53" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.8" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.83" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.01%; +0.00%)</title><rect x="1127.1" y="405" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1130.13" y="415.5" ></text>
</g>
<g >
<title>database::find_keyspace (5 samples, 0.01%; +0.00%)</title><rect x="972.6" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="975.63" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (9 samples, 0.02%; +0.01%)</title><rect x="509.1" y="229" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="512.07" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (103 samples, 0.22%; +0.00%)</title><rect x="804.3" y="149" width="2.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="807.32" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.01%; +0.00%)</title><rect x="569.4" y="309" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="572.36" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.01%)</title><rect x="657.8" y="469" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="660.78" y="479.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%; +0.00%)</title><rect x="858.8" y="437" width="1.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="861.77" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (8 samples, 0.02%; -0.00%)</title><rect x="708.4" y="421" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="711.45" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%; +0.00%)</title><rect x="546.6" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="549.57" y="303.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; -0.01%)</title><rect x="612.7" y="421" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="615.70" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%; +0.04%)</title><rect x="1035.5" y="197" width="1.7" height="15.0" fill="rgb(255,123,123)" rx="2" ry="2" />
<text  x="1038.48" y="207.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (28 samples, 0.06%; +0.05%)</title><rect x="238.9" y="229" width="0.7" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="241.85" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (5 samples, 0.01%; 0.00%)</title><rect x="640.7" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.67" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%; -0.04%)</title><rect x="757.1" y="389" width="1.1" height="15.0" fill="rgb(135,135,255)" rx="2" ry="2" />
<text  x="760.09" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; -0.01%)</title><rect x="985.0" y="261" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="987.99" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (14 samples, 0.03%; +0.00%)</title><rect x="52.7" y="469" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="55.68" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%; +0.00%)</title><rect x="134.5" y="229" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="137.55" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (21 samples, 0.04%; -0.01%)</title><rect x="565.9" y="277" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="568.94" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (63 samples, 0.13%; -0.01%)</title><rect x="1119.2" y="405" width="1.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1122.19" y="415.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%; 0.00%)</title><rect x="910.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="913.18" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (10 samples, 0.02%; -0.01%)</title><rect x="873.6" y="469" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="876.55" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%; +0.01%)</title><rect x="790.2" y="229" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="793.19" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (163 samples, 0.35%; +0.05%)</title><rect x="450.0" y="277" width="4.1" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="453.04" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (33 samples, 0.07%; -0.00%)</title><rect x="907.4" y="389" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="910.38" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (47 samples, 0.10%; +0.02%)</title><rect x="510.8" y="277" width="1.2" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="513.79" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%; -0.01%)</title><rect x="772.7" y="325" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="775.72" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (267 samples, 0.57%; +0.01%)</title><rect x="573.8" y="373" width="6.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="576.77" y="383.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%; +0.00%)</title><rect x="524.6" y="309" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="527.58" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (8 samples, 0.02%; +0.00%)</title><rect x="979.7" y="357" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="982.71" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%; +0.00%)</title><rect x="654.2" y="437" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="657.18" y="447.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (8 samples, 0.02%; +0.01%)</title><rect x="242.6" y="197" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="245.63" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (66 samples, 0.14%; +0.04%)</title><rect x="296.8" y="261" width="1.6" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="299.77" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (150 samples, 0.32%; -0.00%)</title><rect x="923.2" y="373" width="3.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="926.22" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (5 samples, 0.01%; -0.01%)</title><rect x="165.2" y="133" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="168.22" y="143.5" ></text>
</g>
<g >
<title>__strlen_avx2 (110 samples, 0.23%; +0.01%)</title><rect x="1014.9" y="245" width="2.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1017.94" y="255.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; +0.01%)</title><rect x="586.4" y="405" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="589.43" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="568.8" y="293" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="571.79" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (8 samples, 0.02%; +0.00%)</title><rect x="210.6" y="117" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="213.58" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (21 samples, 0.04%; 0.00%)</title><rect x="773.1" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="776.07" y="367.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (6 samples, 0.01%; 0.00%)</title><rect x="1140.6" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.61" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (11 samples, 0.02%; 0.00%)</title><rect x="1037.6" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1040.58" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (4 samples, 0.01%; +0.01%)</title><rect x="913.3" y="341" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="916.33" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,088 samples, 97.72%; 0.00%)</title><rect x="24.5" y="549" width="1153.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.46" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (7 samples, 0.01%; -0.03%)</title><rect x="126.1" y="277" width="0.2" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="129.09" y="287.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (5 samples, 0.01%; 0.00%)</title><rect x="858.2" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="861.21" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%; +0.00%)</title><rect x="1175.4" y="357" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1178.44" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (450 samples, 0.95%; +0.06%)</title><rect x="558.7" y="325" width="11.3" height="15.0" fill="rgb(255,102,102)" rx="2" ry="2" />
<text  x="561.71" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%; -0.00%)</title><rect x="1051.7" y="325" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1054.74" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%; +0.00%)</title><rect x="874.1" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="877.13" y="479.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (222 samples, 0.47%; +0.01%)</title><rect x="270.9" y="309" width="5.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="273.90" y="319.5" ></text>
</g>
<g >
<title>[[vdso]] (277 samples, 0.59%; +0.08%)</title><rect x="1178.6" y="613" width="7.0" height="15.0" fill="rgb(255,53,53)" rx="2" ry="2" />
<text  x="1181.64" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (4 samples, 0.01%; 0.00%)</title><rect x="497.9" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="500.86" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (42 samples, 0.09%; +0.01%)</title><rect x="797.5" y="197" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="800.52" y="207.5" ></text>
</g>
<g >
<title>table::query (35 samples, 0.07%; +0.00%)</title><rect x="1175.1" y="501" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1178.06" y="511.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (29 samples, 0.06%; -0.01%)</title><rect x="1029.3" y="149" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1032.32" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%; +0.00%)</title><rect x="1156.6" y="405" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1159.65" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.05%)</title><rect x="203.6" y="149" width="0.3" height="15.0" fill="rgb(115,115,255)" rx="2" ry="2" />
<text  x="206.55" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="690.4" y="469" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="693.38" y="479.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%; +0.00%)</title><rect x="752.9" y="405" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="755.88" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 0.02%; 0.00%)</title><rect x="21.6" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.63" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; +0.01%)</title><rect x="256.1" y="325" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="259.09" y="335.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (13 samples, 0.03%; +0.01%)</title><rect x="898.8" y="309" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="901.82" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (35 samples, 0.07%; +0.00%)</title><rect x="209.9" y="133" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="212.91" y="143.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (156 samples, 0.33%; -0.01%)</title><rect x="854.6" y="421" width="3.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="857.56" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (36 samples, 0.08%; -0.00%)</title><rect x="845.5" y="373" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="848.50" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (6 samples, 0.01%; +0.01%)</title><rect x="1118.7" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1121.74" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (8 samples, 0.02%; -0.01%)</title><rect x="994.7" y="325" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="997.70" y="335.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.01%; +0.00%)</title><rect x="278.2" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="281.21" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.02%; 0.00%)</title><rect x="985.4" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.39" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.01%; -0.00%)</title><rect x="1130.1" y="389" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1133.10" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (17 samples, 0.04%; -0.03%)</title><rect x="954.6" y="309" width="0.4" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="957.62" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%; +0.01%)</title><rect x="899.6" y="309" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="902.65" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (53 samples, 0.11%; +0.01%)</title><rect x="991.2" y="277" width="1.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="994.17" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; -0.00%)</title><rect x="546.1" y="309" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="549.12" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (83 samples, 0.18%; -0.01%)</title><rect x="529.7" y="277" width="2.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="532.73" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (32 samples, 0.07%; +0.00%)</title><rect x="830.3" y="309" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="833.29" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%; 0.00%)</title><rect x="527.7" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="530.66" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="109.1" y="373" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="112.10" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (53 samples, 0.11%; 0.00%)</title><rect x="20.1" y="341" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.11" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (533 samples, 1.13%; +0.02%)</title><rect x="265.5" y="357" width="13.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="268.50" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (11 samples, 0.02%; +0.01%)</title><rect x="535.2" y="325" width="0.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="538.24" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%; -0.00%)</title><rect x="653.2" y="453" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="656.23" y="463.5" ></text>
</g>
<g >
<title>query::result::result (6 samples, 0.01%; +0.00%)</title><rect x="592.6" y="437" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="595.56" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (13 samples, 0.03%; -0.01%)</title><rect x="74.7" y="453" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="77.73" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%; 0.00%)</title><rect x="17.9" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.93" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (17 samples, 0.04%; 0.00%)</title><rect x="869.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.20" y="399.5" ></text>
</g>
<g >
<title>operator delete (42 samples, 0.09%; +0.02%)</title><rect x="657.0" y="485" width="1.0" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="659.98" y="495.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%; +0.01%)</title><rect x="479.6" y="229" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="482.59" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (19 samples, 0.04%; -0.00%)</title><rect x="867.9" y="405" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="870.92" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (19 samples, 0.04%; +0.02%)</title><rect x="864.9" y="485" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="867.87" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%; -0.00%)</title><rect x="780.0" y="309" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="783.00" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="933.6" y="405" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="936.65" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (82 samples, 0.17%; 0.00%)</title><rect x="1094.3" y="325" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1097.33" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (64 samples, 0.14%; +0.01%)</title><rect x="934.6" y="405" width="1.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="937.60" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.02%; +0.01%)</title><rect x="542.2" y="341" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="545.22" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (147 samples, 0.31%; -0.01%)</title><rect x="403.7" y="261" width="3.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="406.73" y="271.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (6 samples, 0.01%; 0.00%)</title><rect x="670.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="673.19" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%; -0.01%)</title><rect x="843.8" y="389" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="846.83" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (8 samples, 0.02%; +0.00%)</title><rect x="994.4" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="997.40" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (10 samples, 0.02%; 0.00%)</title><rect x="298.0" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="301.00" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (74 samples, 0.16%; +0.01%)</title><rect x="801.1" y="133" width="1.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="804.07" y="143.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%; +0.00%)</title><rect x="734.7" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="737.69" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (71 samples, 0.15%; -0.00%)</title><rect x="742.1" y="357" width="1.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="745.15" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (56 samples, 0.12%; -0.02%)</title><rect x="128.6" y="261" width="1.4" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="131.57" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (98 samples, 0.21%; +0.02%)</title><rect x="924.3" y="357" width="2.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="927.32" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%; -0.00%)</title><rect x="1101.0" y="341" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1104.01" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.21" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.02%; 0.00%)</title><rect x="869.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.22" y="367.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (48 samples, 0.10%; +0.00%)</title><rect x="525.7" y="277" width="1.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="528.70" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (123 samples, 0.26%; +0.00%)</title><rect x="990.4" y="293" width="3.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="993.44" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (20 samples, 0.04%; +0.02%)</title><rect x="75.1" y="453" width="0.5" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="78.10" y="463.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (4 samples, 0.01%; +0.01%)</title><rect x="486.9" y="261" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="489.95" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (122 samples, 0.26%; +0.00%)</title><rect x="188.5" y="117" width="3.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="191.46" y="127.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (4 samples, 0.01%; -0.00%)</title><rect x="212.9" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="215.93" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%; +0.01%)</title><rect x="204.3" y="133" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="207.33" y="143.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (51 samples, 0.11%; -0.00%)</title><rect x="938.3" y="373" width="1.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="941.28" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%; +0.01%)</title><rect x="562.8" y="293" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="565.83" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (30 samples, 0.06%; -0.00%)</title><rect x="387.1" y="213" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="390.07" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%; +0.01%)</title><rect x="633.8" y="469" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="636.79" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; 0.00%)</title><rect x="456.2" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="459.20" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%; +0.01%)</title><rect x="639.9" y="485" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="642.87" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (59 samples, 0.13%; +0.04%)</title><rect x="839.0" y="389" width="1.5" height="15.0" fill="rgb(255,127,127)" rx="2" ry="2" />
<text  x="841.97" y="399.5" ></text>
</g>
</g>
</svg>
