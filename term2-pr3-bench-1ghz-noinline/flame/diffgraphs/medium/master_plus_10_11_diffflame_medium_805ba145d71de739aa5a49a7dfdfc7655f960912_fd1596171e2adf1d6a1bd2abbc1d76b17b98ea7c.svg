<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1878" onload="init(evt)" viewBox="0 0 1200 1878" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="1878.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="1861" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="1861" > </text>
<g id="frames">
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; 0.00%)</title><rect x="162.6" y="1381" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="165.59" y="1391.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (8 samples, 0.02%; -0.01%)</title><rect x="390.0" y="1397" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="393.02" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; +0.02%)</title><rect x="600.0" y="1525" width="0.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="603.02" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.00%)</title><rect x="38.8" y="1605" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="41.79" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (16 samples, 0.03%; +0.01%)</title><rect x="520.3" y="1493" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="523.33" y="1503.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (10 samples, 0.02%; +0.02%)</title><rect x="588.4" y="1589" width="0.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="591.40" y="1599.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (8 samples, 0.02%; +0.01%)</title><rect x="603.2" y="1573" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="606.17" y="1583.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (7 samples, 0.01%; 0.00%)</title><rect x="15.2" y="1589" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.20" y="1599.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (64 samples, 0.13%; -0.03%)</title><rect x="527.4" y="1477" width="1.6" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="530.45" y="1487.5" ></text>
</g>
<g >
<title>row::row (12 samples, 0.03%; +0.03%)</title><rect x="250.6" y="1381" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="253.61" y="1391.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (89 samples, 0.19%; +0.03%)</title><rect x="598.9" y="1573" width="2.2" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="601.91" y="1583.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%; -0.00%)</title><rect x="156.0" y="1381" width="2.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="159.00" y="1391.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (15 samples, 0.03%; -0.01%)</title><rect x="770.9" y="1525" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="773.85" y="1535.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (5 samples, 0.01%; -0.00%)</title><rect x="74.3" y="1589" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="77.28" y="1599.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.00%)</title><rect x="1155.4" y="1605" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1158.36" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.02%)</title><rect x="651.0" y="1605" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="654.02" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4,902 samples, 10.29%; +0.00%)</title><rect x="291.4" y="1509" width="121.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="294.45" y="1519.5" >seastar::futuri..</text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%; +0.01%)</title><rect x="387.7" y="1333" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="390.71" y="1343.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.02%; 0.00%)</title><rect x="17.4" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.41" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (33 samples, 0.07%; -0.03%)</title><rect x="556.7" y="1477" width="0.8" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="559.66" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (10 samples, 0.02%; -0.01%)</title><rect x="265.6" y="1509" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="268.55" y="1519.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%; -0.02%)</title><rect x="585.4" y="1557" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="588.43" y="1567.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; -0.00%)</title><rect x="668.5" y="1637" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="671.54" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; 0.00%)</title><rect x="1034.7" y="1381" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1037.71" y="1391.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (54 samples, 0.11%; +0.00%)</title><rect x="724.8" y="1589" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="727.81" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%; -0.00%)</title><rect x="864.5" y="1669" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="867.52" y="1679.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (117 samples, 0.25%; +0.04%)</title><rect x="632.5" y="1653" width="2.9" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="635.51" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (16 samples, 0.03%; -0.00%)</title><rect x="570.9" y="1477" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="573.88" y="1487.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (338 samples, 0.71%; +0.03%)</title><rect x="376.8" y="1333" width="8.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="379.79" y="1343.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%; -0.00%)</title><rect x="494.3" y="1461" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="497.32" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="831.4" y="1573" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="834.42" y="1583.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (12 samples, 0.03%; +0.01%)</title><rect x="774.9" y="1525" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="777.94" y="1535.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (51 samples, 0.11%; +0.01%)</title><rect x="793.9" y="1381" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="796.95" y="1391.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.03%; +0.00%)</title><rect x="688.4" y="1637" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="691.41" y="1647.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,347 samples, 2.83%; -0.00%)</title><rect x="552.6" y="1605" width="33.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="555.65" y="1615.5" >qu..</text>
</g>
<g >
<title>seastar::memory::allocate (48 samples, 0.10%; -0.01%)</title><rect x="538.1" y="1557" width="1.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="541.13" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.02%)</title><rect x="284.0" y="1493" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="287.04" y="1503.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (13 samples, 0.03%; +0.02%)</title><rect x="239.9" y="1333" width="0.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="242.85" y="1343.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (34 samples, 0.07%; +0.05%)</title><rect x="1124.4" y="1589" width="0.8" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="1127.38" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (9 samples, 0.02%; +0.01%)</title><rect x="809.0" y="1445" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="811.97" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (334 samples, 0.70%; -0.02%)</title><rect x="1112.5" y="1573" width="8.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1115.54" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (72 samples, 0.15%; -0.01%)</title><rect x="651.8" y="1637" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="654.76" y="1647.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (11 samples, 0.02%; +0.01%)</title><rect x="762.9" y="1461" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="765.90" y="1471.5" ></text>
</g>
<g >
<title>operator delete (63 samples, 0.13%; +0.01%)</title><rect x="940.1" y="1573" width="1.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="943.07" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%; +0.01%)</title><rect x="932.2" y="1541" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="935.19" y="1551.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (11 samples, 0.02%; +0.00%)</title><rect x="1140.6" y="1413" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.59" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (7 samples, 0.01%; +0.00%)</title><rect x="961.8" y="1573" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="964.81" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (33 samples, 0.07%; +0.00%)</title><rect x="648.4" y="1637" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="651.39" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (35 samples, 0.07%; 0.00%)</title><rect x="20.3" y="1621" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.26" y="1631.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (12 samples, 0.03%; +0.02%)</title><rect x="213.7" y="1285" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="216.74" y="1295.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%; -0.01%)</title><rect x="144.4" y="1413" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="147.35" y="1423.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (7 samples, 0.01%; -0.01%)</title><rect x="148.1" y="1413" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="151.15" y="1423.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.02%; -0.01%)</title><rect x="364.4" y="1365" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="367.37" y="1375.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (416 samples, 0.87%; +0.01%)</title><rect x="1178.3" y="1797" width="10.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1181.25" y="1807.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (8 samples, 0.02%; 0.00%)</title><rect x="850.3" y="1621" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="853.35" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (108 samples, 0.23%; +0.00%)</title><rect x="852.5" y="1557" width="2.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="855.50" y="1567.5" ></text>
</g>
<g >
<title>database::find_schema (312 samples, 0.66%; -0.00%)</title><rect x="757.8" y="1573" width="7.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="760.80" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="780.1" y="1477" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="783.10" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="666.0" y="1637" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="669.01" y="1647.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; -0.00%)</title><rect x="796.9" y="1285" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="799.90" y="1295.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (46 samples, 0.10%; -0.00%)</title><rect x="329.1" y="1349" width="1.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="332.14" y="1359.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%; 0.00%)</title><rect x="214.2" y="1317" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="217.23" y="1327.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (14 samples, 0.03%; -0.01%)</title><rect x="803.3" y="1253" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="806.27" y="1263.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (15 samples, 0.03%; +0.00%)</title><rect x="1030.3" y="1301" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1033.32" y="1311.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.01%; +0.00%)</title><rect x="17.5" y="1461" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="20.48" y="1471.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%; +0.01%)</title><rect x="919.0" y="1509" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="921.96" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="491.5" y="1477" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="494.52" y="1487.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (8 samples, 0.02%; +0.01%)</title><rect x="390.6" y="1397" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="393.56" y="1407.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; 0.00%)</title><rect x="552.5" y="1589" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="555.52" y="1599.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (52 samples, 0.11%; -0.00%)</title><rect x="15.5" y="1493" width="1.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="18.53" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (5 samples, 0.01%; -0.01%)</title><rect x="889.3" y="1525" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="892.30" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%; +0.00%)</title><rect x="228.7" y="1413" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="231.73" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; +0.01%)</title><rect x="718.6" y="1557" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="721.62" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (30 samples, 0.06%; +0.05%)</title><rect x="902.4" y="1445" width="0.7" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="905.38" y="1455.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (71 samples, 0.15%; +0.00%)</title><rect x="292.1" y="1477" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="295.11" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (10 samples, 0.02%; -0.00%)</title><rect x="832.5" y="1573" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="835.48" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%; -0.02%)</title><rect x="1049.2" y="1381" width="0.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1052.15" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (12 samples, 0.03%; +0.01%)</title><rect x="262.4" y="1493" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="265.35" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1413" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1423.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (19 samples, 0.04%; +0.01%)</title><rect x="164.6" y="1365" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="167.65" y="1375.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (32 samples, 0.07%; 0.00%)</title><rect x="732.1" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.10" y="1583.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (21 samples, 0.04%; +0.01%)</title><rect x="1064.1" y="1509" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1067.07" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="668.9" y="1621" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="671.89" y="1631.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%; -0.02%)</title><rect x="76.8" y="1621" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="79.83" y="1631.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.03%; -0.00%)</title><rect x="1063.4" y="1445" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1066.35" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%; +0.02%)</title><rect x="891.0" y="1461" width="1.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="893.96" y="1471.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (8 samples, 0.02%; -0.01%)</title><rect x="482.3" y="1349" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="485.30" y="1359.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (36 samples, 0.08%; -0.01%)</title><rect x="213.1" y="1301" width="0.9" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="216.14" y="1311.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%; +0.00%)</title><rect x="451.3" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="454.30" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (14 samples, 0.03%; -0.01%)</title><rect x="514.6" y="1445" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="517.61" y="1455.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="901.0" y="1397" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="904.05" y="1407.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%; +0.00%)</title><rect x="1038.1" y="1349" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1041.10" y="1359.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (8 samples, 0.02%; 0.00%)</title><rect x="867.1" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.12" y="1567.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (41 samples, 0.09%; +0.02%)</title><rect x="224.4" y="1397" width="1.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="227.42" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (14 samples, 0.03%; +0.02%)</title><rect x="1142.3" y="1653" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1145.32" y="1663.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%; -0.02%)</title><rect x="321.0" y="1365" width="0.1" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="323.96" y="1375.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (27 samples, 0.06%; -0.00%)</title><rect x="193.1" y="1269" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="196.10" y="1279.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (101 samples, 0.21%; +0.03%)</title><rect x="966.9" y="1525" width="2.5" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="969.86" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (18 samples, 0.04%; +0.01%)</title><rect x="1126.8" y="1573" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1129.76" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (71 samples, 0.15%; +0.00%)</title><rect x="242.9" y="1365" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="245.90" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (21 samples, 0.04%; -0.01%)</title><rect x="1049.9" y="1397" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1052.92" y="1407.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (33 samples, 0.07%; -0.04%)</title><rect x="286.6" y="1557" width="0.8" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="289.56" y="1567.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (370 samples, 0.78%; +0.07%)</title><rect x="461.7" y="1461" width="9.1" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="464.66" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,712 samples, 3.60%; -0.03%)</title><rect x="167.3" y="1349" width="42.5" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="170.35" y="1359.5" >mut..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (919 samples, 1.93%; -0.01%)</title><rect x="915.3" y="1573" width="22.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="918.34" y="1583.5" >c..</text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (39 samples, 0.08%; +0.02%)</title><rect x="575.6" y="1541" width="1.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="578.59" y="1551.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (58 samples, 0.12%; 0.00%)</title><rect x="153.5" y="1365" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="156.55" y="1375.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (12 samples, 0.03%; +0.00%)</title><rect x="259.7" y="1445" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="262.65" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (22 samples, 0.05%; +0.03%)</title><rect x="824.7" y="1493" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="827.73" y="1503.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (10 samples, 0.02%; +0.00%)</title><rect x="305.2" y="1381" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="308.20" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1413" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%; +0.00%)</title><rect x="389.4" y="1365" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="392.37" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%; -0.00%)</title><rect x="358.0" y="1317" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="360.98" y="1327.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (177 samples, 0.37%; +0.00%)</title><rect x="589.8" y="1589" width="4.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="592.84" y="1599.5" ></text>
</g>
<g >
<title>[unknown] (166 samples, 0.35%; 0.00%)</title><rect x="10.3" y="1765" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.27" y="1775.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; 0.00%)</title><rect x="485.3" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="488.35" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (14 samples, 0.03%; +0.01%)</title><rect x="875.1" y="1605" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="878.08" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (7 samples, 0.01%; +0.00%)</title><rect x="74.8" y="1621" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="77.80" y="1631.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; +0.00%)</title><rect x="143.8" y="1413" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="146.81" y="1423.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (9 samples, 0.02%; -0.01%)</title><rect x="707.1" y="1621" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="710.07" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (11 samples, 0.02%; -0.00%)</title><rect x="1038.0" y="1365" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1040.95" y="1375.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="943.9" y="1573" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="946.91" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (507 samples, 1.06%; +0.05%)</title><rect x="232.1" y="1397" width="12.6" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="235.10" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; 0.00%)</title><rect x="1076.2" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1079.19" y="1503.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (5 samples, 0.01%; +0.00%)</title><rect x="831.2" y="1573" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="834.17" y="1583.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.01%)</title><rect x="662.7" y="1653" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="665.67" y="1663.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%; -0.00%)</title><rect x="683.3" y="1605" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="686.31" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (29 samples, 0.06%; -0.01%)</title><rect x="949.2" y="1525" width="0.7" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="952.22" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (269 samples, 0.56%; -0.01%)</title><rect x="397.7" y="1397" width="6.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="400.68" y="1407.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (10 samples, 0.02%; +0.01%)</title><rect x="424.7" y="1525" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="427.66" y="1535.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (206 samples, 0.43%; 0.00%)</title><rect x="15.1" y="1621" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.13" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%; 0.00%)</title><rect x="646.3" y="1605" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.26" y="1615.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (57 samples, 0.12%; -0.01%)</title><rect x="675.7" y="1637" width="1.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="678.73" y="1647.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.05%; +0.01%)</title><rect x="949.3" y="1509" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="952.29" y="1519.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%; +0.00%)</title><rect x="1159.7" y="1605" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1162.67" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.01%)</title><rect x="631.5" y="1637" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="634.54" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; +0.00%)</title><rect x="788.9" y="1381" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="791.87" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1397" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="519.6" y="1477" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="522.59" y="1487.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (9 samples, 0.02%; +0.01%)</title><rect x="921.8" y="1493" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="924.81" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (33 samples, 0.07%; -0.00%)</title><rect x="1019.5" y="1381" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1022.49" y="1391.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (5 samples, 0.01%; -0.01%)</title><rect x="35.1" y="1589" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="38.10" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; -0.01%)</title><rect x="92.7" y="1589" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="95.71" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (569 samples, 1.19%; -0.06%)</title><rect x="1110.0" y="1589" width="14.1" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="1113.01" y="1599.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%; -0.01%)</title><rect x="715.3" y="1653" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="718.35" y="1663.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (182 samples, 0.38%; -0.01%)</title><rect x="933.0" y="1557" width="4.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="935.96" y="1567.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (36 samples, 0.08%; 0.00%)</title><rect x="20.3" y="1637" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.26" y="1647.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; -0.01%)</title><rect x="145.5" y="1397" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="148.47" y="1407.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (28 samples, 0.06%; +0.02%)</title><rect x="1148.4" y="1653" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1151.40" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (11 samples, 0.02%; +0.00%)</title><rect x="134.1" y="1413" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="137.12" y="1423.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (270 samples, 0.57%; +0.01%)</title><rect x="726.3" y="1589" width="6.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="729.25" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::free_span (6 samples, 0.01%; +0.01%)</title><rect x="36.8" y="1573" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="39.84" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (15 samples, 0.03%; -0.00%)</title><rect x="990.0" y="1509" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="993.00" y="1519.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%; +0.01%)</title><rect x="29.6" y="1653" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="32.58" y="1663.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (11 samples, 0.02%; -0.01%)</title><rect x="736.9" y="1557" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="739.91" y="1567.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.02%; -0.03%)</title><rect x="609.0" y="1589" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="611.97" y="1599.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (10 samples, 0.02%; +0.01%)</title><rect x="983.2" y="1525" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="986.24" y="1535.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%; +0.00%)</title><rect x="1149.6" y="1637" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1152.63" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (415 samples, 0.87%; -0.07%)</title><rect x="179.7" y="1269" width="10.2" height="15.0" fill="rgb(117,117,255)" rx="2" ry="2" />
<text  x="182.67" y="1279.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%; -0.01%)</title><rect x="1000.7" y="1429" width="1.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1003.71" y="1439.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (217 samples, 0.46%; +0.00%)</title><rect x="751.4" y="1589" width="5.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="754.38" y="1599.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (18 samples, 0.04%; +0.00%)</title><rect x="1115.1" y="1525" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1118.12" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,890 samples, 3.97%; -0.06%)</title><rect x="1054.0" y="1525" width="46.9" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1057.03" y="1535.5" >serv..</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (61 samples, 0.13%; +0.00%)</title><rect x="744.8" y="1493" width="1.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="747.76" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (455 samples, 0.96%; -0.01%)</title><rect x="893.5" y="1493" width="11.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="896.49" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%; +0.01%)</title><rect x="1094.5" y="1445" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1097.52" y="1455.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (18 samples, 0.04%; +0.00%)</title><rect x="315.8" y="1349" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="318.75" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (7 samples, 0.01%; 0.00%)</title><rect x="1189.8" y="37" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.78" y="47.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%; -0.00%)</title><rect x="821.9" y="1557" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="824.88" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; -0.00%)</title><rect x="514.3" y="1445" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="517.34" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (6 samples, 0.01%; -0.01%)</title><rect x="158.4" y="1381" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="161.35" y="1391.5" ></text>
</g>
<g >
<title>seastar::gate::enter (6 samples, 0.01%; -0.01%)</title><rect x="1038.8" y="1397" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1041.80" y="1407.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; -0.00%)</title><rect x="655.1" y="1637" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="658.06" y="1647.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%; +0.00%)</title><rect x="403.5" y="1381" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="406.47" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (336 samples, 0.71%; -0.00%)</title><rect x="562.0" y="1477" width="8.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="564.96" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (22 samples, 0.05%; +0.03%)</title><rect x="624.9" y="1637" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="627.90" y="1647.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (54 samples, 0.11%; -0.01%)</title><rect x="477.6" y="1381" width="1.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="480.61" y="1391.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (72 samples, 0.15%; -0.00%)</title><rect x="1133.9" y="1589" width="1.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1136.87" y="1599.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (7 samples, 0.01%; +0.01%)</title><rect x="722.8" y="1621" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="725.76" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (15 samples, 0.03%; 0.00%)</title><rect x="19.3" y="1525" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.32" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (92 samples, 0.19%; -0.02%)</title><rect x="1010.9" y="1429" width="2.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1013.89" y="1439.5" ></text>
</g>
<g >
<title>operator new (61 samples, 0.13%; +0.01%)</title><rect x="853.3" y="1525" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="856.35" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; 0.00%)</title><rect x="1137.6" y="1589" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1140.62" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="929.6" y="1541" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="932.59" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.12%; -0.01%)</title><rect x="1036.3" y="1365" width="1.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1039.29" y="1375.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (12 samples, 0.03%; -0.02%)</title><rect x="1047.0" y="1445" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1050.05" y="1455.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (22 samples, 0.05%; 0.00%)</title><rect x="1177.3" y="1637" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.26" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (58 samples, 0.12%; +0.02%)</title><rect x="122.7" y="1461" width="1.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="125.72" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (26 samples, 0.05%; +0.00%)</title><rect x="671.1" y="1621" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="674.14" y="1631.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (94 samples, 0.20%; +0.01%)</title><rect x="907.1" y="1509" width="2.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="910.12" y="1519.5" ></text>
</g>
<g >
<title>dht::shard_of (8 samples, 0.02%; +0.00%)</title><rect x="1004.4" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1007.43" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="741" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="751.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.00%)</title><rect x="296.0" y="1413" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="299.01" y="1423.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (155 samples, 0.33%; -0.01%)</title><rect x="66.0" y="1573" width="3.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="68.95" y="1583.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (13 samples, 0.03%; +0.01%)</title><rect x="605.3" y="1605" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="608.28" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (22 samples, 0.05%; -0.01%)</title><rect x="821.2" y="1525" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="824.23" y="1535.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (22 samples, 0.05%; -0.01%)</title><rect x="93.5" y="1605" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="96.53" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (67 samples, 0.14%; +0.00%)</title><rect x="845.0" y="1589" width="1.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="848.04" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="757" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="767.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (150 samples, 0.31%; +0.02%)</title><rect x="993.8" y="1477" width="3.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="996.80" y="1487.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,632 samples, 22.33%; -0.03%)</title><rect x="875.6" y="1605" width="263.5" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="878.60" y="1615.5" >cql3::statements::select_statement:..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%; +0.00%)</title><rect x="38.9" y="1605" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="41.94" y="1615.5" ></text>
</g>
<g >
<title>compound_type&lt; (108 samples, 0.23%; +0.01%)</title><rect x="934.4" y="1525" width="2.7" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="937.40" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="922.3" y="1541" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="925.28" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%; +0.00%)</title><rect x="321.1" y="1365" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="324.11" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (92 samples, 0.19%; +0.01%)</title><rect x="393.1" y="1397" width="2.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="396.09" y="1407.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (26 samples, 0.05%; 0.00%)</title><rect x="684.9" y="1525" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.92" y="1535.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (7 samples, 0.01%; +0.00%)</title><rect x="249.3" y="1365" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="252.35" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="773" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="783.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (15 samples, 0.03%; +0.02%)</title><rect x="650.2" y="1637" width="0.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="653.15" y="1647.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (7 samples, 0.01%; -0.01%)</title><rect x="605.7" y="1589" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="608.70" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (18 samples, 0.04%; +0.02%)</title><rect x="944.5" y="1573" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="947.51" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (110 samples, 0.23%; -0.01%)</title><rect x="1047.8" y="1429" width="2.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1050.77" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (9 samples, 0.02%; -0.03%)</title><rect x="445.0" y="1445" width="0.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="447.95" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (14 samples, 0.03%; -0.00%)</title><rect x="75.0" y="1621" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="78.00" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; +0.01%)</title><rect x="424.3" y="1525" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="427.26" y="1535.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%; +0.01%)</title><rect x="497.2" y="1445" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="500.19" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%; 0.00%)</title><rect x="1020.0" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.99" y="1375.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%; 0.00%)</title><rect x="17.7" y="1477" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.66" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (55 samples, 0.12%; +0.01%)</title><rect x="1159.5" y="1621" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1162.47" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (54 samples, 0.11%; 0.00%)</title><rect x="768.4" y="1541" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.40" y="1551.5" ></text>
</g>
<g >
<title>compound_type&lt; (60 samples, 0.13%; +0.02%)</title><rect x="543.6" y="1525" width="1.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="546.60" y="1535.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,903 samples, 4.00%; -0.04%)</title><rect x="772.2" y="1557" width="47.2" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="775.22" y="1567.5" >std:..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (6 samples, 0.01%; +0.01%)</title><rect x="251.8" y="1445" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="254.85" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (185 samples, 0.39%; -0.01%)</title><rect x="218.1" y="1365" width="4.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="221.07" y="1375.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%; +0.00%)</title><rect x="847.3" y="1573" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="850.35" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (24 samples, 0.05%; -0.01%)</title><rect x="136.5" y="1397" width="0.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="139.52" y="1407.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (22 samples, 0.05%; -0.00%)</title><rect x="728.0" y="1477" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="731.04" y="1487.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%; +0.00%)</title><rect x="655.5" y="1621" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="658.51" y="1631.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (69 samples, 0.14%; +0.01%)</title><rect x="150.8" y="1365" width="1.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="153.80" y="1375.5" ></text>
</g>
<g >
<title>__libc_start_main (46,659 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1797" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1807.5" >__libc_start_main</text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (13 samples, 0.03%; +0.01%)</title><rect x="315.1" y="1333" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="318.09" y="1343.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (6 samples, 0.01%; -0.01%)</title><rect x="696.1" y="1637" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="699.12" y="1647.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (6 samples, 0.01%; -0.01%)</title><rect x="570.3" y="1477" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="573.29" y="1487.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; 0.00%)</title><rect x="695.9" y="1637" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="698.92" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (18 samples, 0.04%; +0.02%)</title><rect x="821.3" y="1509" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="824.33" y="1519.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (7 samples, 0.01%; -0.00%)</title><rect x="774.8" y="1525" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="777.77" y="1535.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.05%; +0.01%)</title><rect x="1131.8" y="1541" width="0.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1134.77" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (450 samples, 0.94%; +0.01%)</title><rect x="893.6" y="1477" width="11.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="896.61" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (26 samples, 0.05%; 0.00%)</title><rect x="138.8" y="1429" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="141.78" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; -0.02%)</title><rect x="533.3" y="1413" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="536.32" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (290 samples, 0.61%; -0.00%)</title><rect x="990.4" y="1509" width="7.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="993.38" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (8 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.88" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="901" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="911.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; -0.01%)</title><rect x="836.1" y="1541" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="839.15" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (28 samples, 0.06%; +0.00%)</title><rect x="496.5" y="1445" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="499.47" y="1455.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (11 samples, 0.02%; 0.00%)</title><rect x="830.6" y="1461" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="833.57" y="1471.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (8 samples, 0.02%; +0.01%)</title><rect x="69.9" y="1573" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="72.87" y="1583.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (5 samples, 0.01%; -0.01%)</title><rect x="833.1" y="1589" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="836.13" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (15 samples, 0.03%; 0.00%)</title><rect x="1175.9" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.85" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1093" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1103.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (97 samples, 0.20%; 0.00%)</title><rect x="442.9" y="1477" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.92" y="1487.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%; +0.01%)</title><rect x="729.7" y="1461" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="732.67" y="1471.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (5 samples, 0.01%; +0.01%)</title><rect x="594.5" y="1589" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="597.50" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (5 samples, 0.01%; 0.00%)</title><rect x="20.7" y="1525" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.70" y="1535.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (6 samples, 0.01%; -0.00%)</title><rect x="364.7" y="1365" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="367.74" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="559.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (39 samples, 0.08%; +0.02%)</title><rect x="907.6" y="1477" width="1.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="910.61" y="1487.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (15 samples, 0.03%; -0.01%)</title><rect x="586.8" y="1573" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="589.84" y="1583.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%; 0.00%)</title><rect x="639.0" y="1653" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="642.00" y="1663.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.02%; 0.00%)</title><rect x="22.9" y="1685" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.91" y="1695.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (7 samples, 0.01%; +0.00%)</title><rect x="954.2" y="1589" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="957.20" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (6 samples, 0.01%; -0.02%)</title><rect x="207.1" y="1301" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="210.12" y="1311.5" ></text>
</g>
<g >
<title>sstring_hash::operator (37 samples, 0.08%; 0.00%)</title><rect x="1062.7" y="1461" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1065.73" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="260.5" y="1461" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="263.50" y="1471.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; -0.01%)</title><rect x="661.6" y="1589" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="664.55" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (55 samples, 0.12%; 0.00%)</title><rect x="275.0" y="1477" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="278.04" y="1487.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (63 samples, 0.13%; +0.02%)</title><rect x="829.3" y="1493" width="1.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="832.33" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%; +0.01%)</title><rect x="611.3" y="1573" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="614.30" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="168.4" y="1301" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="171.42" y="1311.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (21 samples, 0.04%; +0.04%)</title><rect x="415.5" y="1525" width="0.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="418.54" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (15 samples, 0.03%; +0.01%)</title><rect x="1142.0" y="1653" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1144.95" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.01%)</title><rect x="804.7" y="1397" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="807.65" y="1407.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%; -0.01%)</title><rect x="533.2" y="1413" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="536.19" y="1423.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (7 samples, 0.01%; 0.00%)</title><rect x="16.5" y="1429" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.49" y="1439.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; 0.00%)</title><rect x="500.1" y="1397" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="503.14" y="1407.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (8 samples, 0.02%; 0.00%)</title><rect x="849.6" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.63" y="1503.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,800 samples, 3.78%; +0.01%)</title><rect x="320.5" y="1381" width="44.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="323.49" y="1391.5" >quer..</text>
</g>
<g >
<title>partition_snapshot::versions (9 samples, 0.02%; +0.01%)</title><rect x="234.6" y="1381" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="237.58" y="1391.5" ></text>
</g>
<g >
<title>validation::validate_column_family (364 samples, 0.76%; +0.01%)</title><rect x="822.0" y="1557" width="9.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="825.05" y="1567.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (20 samples, 0.04%; +0.01%)</title><rect x="512.6" y="1413" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="515.63" y="1423.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,949 samples, 10.39%; -0.01%)</title><rect x="291.0" y="1541" width="122.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="294.02" y="1551.5" >flat_mutation_r..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (16 samples, 0.03%; +0.01%)</title><rect x="680.2" y="1621" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="683.21" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (252 samples, 0.53%; -0.03%)</title><rect x="183.6" y="1253" width="6.3" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="186.63" y="1263.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (40 samples, 0.08%; +0.00%)</title><rect x="1158.4" y="1573" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1161.41" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (6 samples, 0.01%; +0.01%)</title><rect x="251.7" y="1445" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="254.70" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (7 samples, 0.01%; 0.00%)</title><rect x="1189.8" y="69" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.78" y="79.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%; +0.01%)</title><rect x="742.4" y="1525" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="745.43" y="1535.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%; +0.01%)</title><rect x="783.9" y="1445" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="786.94" y="1455.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (50 samples, 0.10%; -0.06%)</title><rect x="1134.0" y="1573" width="1.3" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1137.02" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%; 0.00%)</title><rect x="1127.2" y="1573" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1130.21" y="1583.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (147 samples, 0.31%; -0.02%)</title><rect x="186.2" y="1237" width="3.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="189.23" y="1247.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (57 samples, 0.12%; +0.00%)</title><rect x="817.9" y="1477" width="1.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="820.89" y="1487.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="298.5" y="1429" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="301.51" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%; +0.00%)</title><rect x="1169.4" y="1621" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1172.43" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (33 samples, 0.07%; -0.01%)</title><rect x="658.7" y="1653" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="661.68" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="725" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="735.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (14 samples, 0.03%; -0.01%)</title><rect x="1121.8" y="1557" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1124.81" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (21 samples, 0.04%; +0.01%)</title><rect x="859.6" y="1589" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="862.61" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (27 samples, 0.06%; -0.02%)</title><rect x="769.0" y="1509" width="0.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="772.02" y="1519.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (15 samples, 0.03%; +0.00%)</title><rect x="652.9" y="1605" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="655.93" y="1615.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%; +0.00%)</title><rect x="1163.6" y="1637" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1166.56" y="1647.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (6 samples, 0.01%; 0.00%)</title><rect x="21.3" y="1653" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.27" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (36 samples, 0.08%; +0.03%)</title><rect x="671.8" y="1621" width="0.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="674.79" y="1631.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; +0.01%)</title><rect x="633.7" y="1637" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="636.72" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (11 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="1589" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.85" y="1599.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%; -0.00%)</title><rect x="951.7" y="1541" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="954.72" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (7 samples, 0.01%; 0.00%)</title><rect x="866.8" y="1525" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.83" y="1535.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.12%; -0.00%)</title><rect x="1047.9" y="1413" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1050.91" y="1423.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (15 samples, 0.03%; 0.00%)</title><rect x="1175.9" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.85" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (45 samples, 0.09%; +0.00%)</title><rect x="1121.2" y="1573" width="1.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1124.21" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="932.1" y="1509" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="935.07" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (398 samples, 0.84%; +0.00%)</title><rect x="273.8" y="1493" width="9.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="276.75" y="1503.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (26 samples, 0.05%; -0.02%)</title><rect x="649.5" y="1637" width="0.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="652.51" y="1647.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%; +0.01%)</title><rect x="313.9" y="1333" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="316.90" y="1343.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (16 samples, 0.03%; +0.01%)</title><rect x="193.4" y="1253" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="196.37" y="1263.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%; +0.01%)</title><rect x="196.7" y="1285" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="199.66" y="1295.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (704 samples, 1.48%; -0.02%)</title><rect x="554.6" y="1525" width="17.5" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="557.63" y="1535.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.13%; -0.01%)</title><rect x="890.9" y="1477" width="1.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="893.94" y="1487.5" ></text>
</g>
<g >
<title>table::query (8 samples, 0.02%; +0.02%)</title><rect x="624.4" y="1637" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="627.43" y="1647.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.01%; 0.00%)</title><rect x="741.9" y="1525" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.94" y="1535.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1493" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1503.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (6 samples, 0.01%; -0.05%)</title><rect x="875.4" y="1605" width="0.2" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="878.45" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; +0.04%)</title><rect x="784.0" y="1429" width="1.7" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="787.01" y="1439.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (9 samples, 0.02%; -0.00%)</title><rect x="1143.3" y="1669" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1146.32" y="1679.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%; -0.00%)</title><rect x="951.8" y="1525" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="954.84" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1133.4" y="1589" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1136.35" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="568.6" y="1445" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="571.55" y="1455.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,254 samples, 4.73%; -0.02%)</title><rect x="997.7" y="1509" width="55.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1000.66" y="1519.5" >servi..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="663.9" y="1621" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="666.91" y="1631.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.01%)</title><rect x="296.5" y="1397" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="299.45" y="1407.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,795 samples, 5.87%; -0.04%)</title><rect x="984.3" y="1525" width="69.2" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="987.26" y="1535.5" >service..</text>
</g>
<g >
<title>schema_registry::get (183 samples, 0.38%; +0.00%)</title><rect x="976.7" y="1525" width="4.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="979.70" y="1535.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (293 samples, 0.62%; 0.00%)</title><rect x="476.6" y="1397" width="7.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="479.60" y="1407.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.01%; -0.02%)</title><rect x="1143.7" y="1669" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1146.69" y="1679.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (6 samples, 0.01%; -0.02%)</title><rect x="523.4" y="1509" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="526.41" y="1519.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (29 samples, 0.06%; -0.03%)</title><rect x="725.1" y="1557" width="0.7" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="728.11" y="1567.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (41 samples, 0.09%; +0.04%)</title><rect x="240.2" y="1349" width="1.0" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="243.18" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (16 samples, 0.03%; +0.00%)</title><rect x="44.5" y="1653" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="47.52" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="607.5" ></text>
</g>
<g >
<title>operator delete (73 samples, 0.15%; -0.01%)</title><rect x="580.8" y="1509" width="1.8" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="583.77" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (15 samples, 0.03%; 0.00%)</title><rect x="212.3" y="1317" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.32" y="1327.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%; 0.00%)</title><rect x="649.9" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="652.93" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="1044.5" y="1429" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1047.54" y="1439.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (16 samples, 0.03%; -0.03%)</title><rect x="798.3" y="1285" width="0.4" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="801.34" y="1295.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (80 samples, 0.17%; +0.00%)</title><rect x="858.2" y="1621" width="2.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="861.23" y="1631.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; +0.00%)</title><rect x="364.9" y="1365" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="367.92" y="1375.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,165 samples, 23.45%; -0.00%)</title><rect x="866.3" y="1669" width="276.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="869.31" y="1679.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>sstring_hash::operator (16 samples, 0.03%; -0.00%)</title><rect x="849.5" y="1525" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="852.48" y="1535.5" ></text>
</g>
<g >
<title>operator new (97 samples, 0.20%; -0.00%)</title><rect x="1020.4" y="1413" width="2.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1023.43" y="1423.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.01%)</title><rect x="782.3" y="1493" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="785.33" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="246.6" y="1413" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="249.64" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; +0.00%)</title><rect x="168.1" y="1317" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="171.09" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; -0.00%)</title><rect x="539.9" y="1573" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="542.91" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; -0.01%)</title><rect x="551.5" y="1589" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="554.48" y="1599.5" ></text>
</g>
<g >
<title>dht::tri_compare (68 samples, 0.14%; +0.04%)</title><rect x="1080.7" y="1413" width="1.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1083.72" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (85 samples, 0.18%; +0.04%)</title><rect x="279.5" y="1429" width="2.1" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="282.45" y="1439.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (25 samples, 0.05%; +0.00%)</title><rect x="1062.7" y="1445" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1065.73" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (78 samples, 0.16%; -0.00%)</title><rect x="150.7" y="1381" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="153.70" y="1391.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (6 samples, 0.01%; 0.00%)</title><rect x="685.8" y="1669" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.79" y="1679.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6,018 samples, 12.64%; +0.04%)</title><rect x="116.1" y="1509" width="149.1" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="119.11" y="1519.5" >mutation_fragment_m..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="639.7" y="1653" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="642.70" y="1663.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; 0.00%)</title><rect x="506.5" y="1365" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="509.48" y="1375.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (323 samples, 0.68%; -0.01%)</title><rect x="501.1" y="1413" width="8.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="504.13" y="1423.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (28 samples, 0.06%; 0.00%)</title><rect x="866.6" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.63" y="1583.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%; +0.00%)</title><rect x="607.0" y="1589" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="609.96" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (19 samples, 0.04%; -0.01%)</title><rect x="1109.5" y="1557" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1112.47" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (20 samples, 0.04%; -0.01%)</title><rect x="1074.5" y="1461" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1077.50" y="1471.5" ></text>
</g>
<g >
<title>schema::column_at (81 samples, 0.17%; -0.08%)</title><rect x="197.1" y="1285" width="2.0" height="15.0" fill="rgb(103,103,255)" rx="2" ry="2" />
<text  x="200.06" y="1295.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (689 samples, 1.45%; +0.00%)</title><rect x="890.0" y="1509" width="17.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="893.04" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (22 samples, 0.05%; -0.00%)</title><rect x="1151.0" y="1637" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1153.97" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (8 samples, 0.02%; 0.00%)</title><rect x="23.7" y="1685" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.70" y="1695.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (18 samples, 0.04%; +0.01%)</title><rect x="1095.0" y="1461" width="0.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1098.02" y="1471.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (95 samples, 0.20%; -0.01%)</title><rect x="816.9" y="1493" width="2.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="819.94" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (9 samples, 0.02%; -0.00%)</title><rect x="1152.3" y="1653" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1155.26" y="1663.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (6 samples, 0.01%; +0.01%)</title><rect x="1024.1" y="1381" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1027.05" y="1391.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%; +0.00%)</title><rect x="122.5" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="125.55" y="1471.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (632 samples, 1.33%; -0.00%)</title><rect x="735.7" y="1589" width="15.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="738.72" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%; +0.01%)</title><rect x="1119.9" y="1493" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1122.90" y="1503.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (34 samples, 0.07%; +0.01%)</title><rect x="622.5" y="1573" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="625.48" y="1583.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (35 samples, 0.07%; -0.02%)</title><rect x="333.9" y="1349" width="0.9" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="336.94" y="1359.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (11 samples, 0.02%; +0.02%)</title><rect x="1117.5" y="1557" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1120.52" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (187 samples, 0.39%; -0.01%)</title><rect x="1170.2" y="1637" width="4.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1173.23" y="1647.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; 0.00%)</title><rect x="97.1" y="1573" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="100.08" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; -0.01%)</title><rect x="99.7" y="1557" width="0.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="102.73" y="1567.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (21 samples, 0.04%; +0.01%)</title><rect x="981.2" y="1525" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="984.23" y="1535.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (28 samples, 0.06%; +0.01%)</title><rect x="367.7" y="1381" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="370.69" y="1391.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (10 samples, 0.02%; 0.00%)</title><rect x="1141.5" y="1381" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (22 samples, 0.05%; +0.03%)</title><rect x="406.6" y="1397" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="409.57" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="901.8" y="1445" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="904.84" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,657 samples, 97.98%; -0.00%)</title><rect x="21.8" y="1701" width="1156.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="24.82" y="1711.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1429" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1439.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.01%)</title><rect x="762.8" y="1461" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="765.78" y="1471.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (43 samples, 0.09%; 0.00%)</title><rect x="223.4" y="1381" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="226.35" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1397" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (108 samples, 0.23%; +0.05%)</title><rect x="990.7" y="1477" width="2.7" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="993.72" y="1487.5" ></text>
</g>
<g >
<title>dht::shard_of (36 samples, 0.08%; -0.01%)</title><rect x="1008.7" y="1445" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1011.69" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%; -0.01%)</title><rect x="804.1" y="1381" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="807.13" y="1391.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%; -0.00%)</title><rect x="1097.6" y="1461" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1100.57" y="1471.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (33 samples, 0.07%; +0.01%)</title><rect x="859.4" y="1605" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="862.39" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (301 samples, 0.63%; +0.02%)</title><rect x="576.6" y="1541" width="7.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="579.56" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (7 samples, 0.01%; -0.00%)</title><rect x="1127.6" y="1589" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1130.58" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="814.3" y="1445" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="817.32" y="1455.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%; -0.01%)</title><rect x="395.0" y="1365" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="398.05" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (19 samples, 0.04%; +0.01%)</title><rect x="491.6" y="1477" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="494.64" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (87 samples, 0.18%; -0.00%)</title><rect x="1057.7" y="1493" width="2.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1060.68" y="1503.5" ></text>
</g>
<g >
<title>std::type_info::operator== (11 samples, 0.02%; -0.01%)</title><rect x="1074.2" y="1445" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1077.23" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (9 samples, 0.02%; -0.01%)</title><rect x="74.6" y="1621" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="77.58" y="1631.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%; 0.00%)</title><rect x="536.8" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="539.76" y="1503.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (10 samples, 0.02%; +0.00%)</title><rect x="1116.1" y="1541" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1119.13" y="1551.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%; -0.04%)</title><rect x="282.6" y="1461" width="1.0" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="285.60" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (41 samples, 0.09%; -0.01%)</title><rect x="667.3" y="1653" width="1.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="670.30" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%; 0.00%)</title><rect x="790.4" y="1397" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="793.36" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%; -0.02%)</title><rect x="666.4" y="1653" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="669.38" y="1663.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (11 samples, 0.02%; +0.00%)</title><rect x="240.9" y="1333" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="243.92" y="1343.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (6 samples, 0.01%; -0.01%)</title><rect x="260.6" y="1461" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="263.64" y="1471.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%; -0.00%)</title><rect x="571.4" y="1493" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="574.40" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="639.4" y="1637" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="642.45" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.01%)</title><rect x="696.0" y="1621" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="699.00" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%; +0.01%)</title><rect x="885.0" y="1573" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="888.04" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="515.4" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="518.43" y="1471.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (12 samples, 0.03%; +0.02%)</title><rect x="809.3" y="1445" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="812.29" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (6 samples, 0.01%; -0.00%)</title><rect x="1120.8" y="1573" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1123.82" y="1583.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%; 0.00%)</title><rect x="1105.8" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.77" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.16%; -0.03%)</title><rect x="959.9" y="1557" width="1.9" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="962.92" y="1567.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (8 samples, 0.02%; +0.01%)</title><rect x="945.2" y="1557" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="948.18" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (19 samples, 0.04%; +0.03%)</title><rect x="39.8" y="1621" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="42.78" y="1631.5" ></text>
</g>
<g >
<title>compound_type&lt; (171 samples, 0.36%; 0.00%)</title><rect x="933.2" y="1541" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="936.16" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="1136.0" y="1589" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1139.01" y="1599.5" ></text>
</g>
<g >
<title>db::validate_for_read (7 samples, 0.01%; +0.01%)</title><rect x="1124.2" y="1589" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1127.21" y="1599.5" ></text>
</g>
<g >
<title>database::has_keyspace (102 samples, 0.21%; +0.00%)</title><rect x="847.5" y="1573" width="2.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="850.47" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (16 samples, 0.03%; -0.01%)</title><rect x="912.7" y="1493" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="915.67" y="1503.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (119 samples, 0.25%; -0.01%)</title><rect x="1153.0" y="1637" width="2.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1155.95" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%; +0.01%)</title><rect x="43.4" y="1653" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="46.40" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="949" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="959.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; +0.00%)</title><rect x="1158.2" y="1573" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1161.18" y="1583.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.27" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (27 samples, 0.06%; +0.01%)</title><rect x="311.9" y="1333" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="314.86" y="1343.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (465 samples, 0.98%; -0.00%)</title><rect x="917.3" y="1557" width="11.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="920.33" y="1567.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (5 samples, 0.01%; -0.01%)</title><rect x="549.4" y="1557" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="552.40" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (88 samples, 0.18%; +0.01%)</title><rect x="365.4" y="1381" width="2.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="368.36" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (213 samples, 0.45%; -0.01%)</title><rect x="1089.2" y="1445" width="5.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1092.20" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::stats (35 samples, 0.07%; +0.01%)</title><rect x="530.4" y="1461" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="533.37" y="1471.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (73 samples, 0.15%; +0.01%)</title><rect x="556.5" y="1493" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="559.49" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::consume (24 samples, 0.05%; -0.00%)</title><rect x="281.6" y="1445" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="284.56" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (6 samples, 0.01%; -0.00%)</title><rect x="862.8" y="1653" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="865.76" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="1125.2" y="1589" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1128.23" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1733" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1743.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (19 samples, 0.04%; +0.02%)</title><rect x="664.3" y="1637" width="0.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="667.28" y="1647.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (60 samples, 0.13%; +0.03%)</title><rect x="599.4" y="1557" width="1.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="602.36" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (17 samples, 0.04%; -0.00%)</title><rect x="69.2" y="1557" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="72.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="570.5" y="1477" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="573.49" y="1487.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (5 samples, 0.01%; +0.00%)</title><rect x="947.4" y="1557" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="950.43" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (19 samples, 0.04%; -0.01%)</title><rect x="327.6" y="1349" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="330.62" y="1359.5" ></text>
</g>
<g >
<title>compound_type&lt; (177 samples, 0.37%; -0.02%)</title><rect x="479.0" y="1381" width="4.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="481.95" y="1391.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (63 samples, 0.13%; -0.00%)</title><rect x="560.4" y="1477" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="563.38" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="694.6" y="1653" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="697.61" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%; +0.02%)</title><rect x="832.8" y="1589" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="835.78" y="1599.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; +0.02%)</title><rect x="97.2" y="1573" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="100.20" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1157" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1167.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (64 samples, 0.13%; -0.01%)</title><rect x="791.6" y="1349" width="1.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="794.62" y="1359.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1637" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1647.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1765" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1775.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (83 samples, 0.17%; +0.00%)</title><rect x="17.3" y="1525" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="20.26" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (38 samples, 0.08%; -0.01%)</title><rect x="691.8" y="1621" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="694.78" y="1631.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (196 samples, 0.41%; +0.01%)</title><rect x="744.3" y="1525" width="4.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="747.32" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.00%)</title><rect x="517.6" y="1429" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="520.63" y="1439.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%; -0.00%)</title><rect x="806.5" y="1413" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="809.46" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="1170.9" y="1605" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1173.87" y="1615.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%; +0.00%)</title><rect x="818.9" y="1429" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="821.88" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (18 samples, 0.04%; -0.01%)</title><rect x="566.3" y="1445" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="569.32" y="1455.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (139 samples, 0.29%; +0.00%)</title><rect x="669.2" y="1637" width="3.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="672.23" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="224.2" y="1349" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="227.19" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (5 samples, 0.01%; 0.00%)</title><rect x="392.0" y="1413" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="395.03" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%; 0.00%)</title><rect x="743.4" y="1525" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.42" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,179 samples, 2.48%; -0.03%)</title><rect x="170.1" y="1301" width="29.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="173.13" y="1311.5" >co..</text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%; -0.00%)</title><rect x="441.9" y="1445" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="444.86" y="1455.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (148 samples, 0.31%; -0.01%)</title><rect x="404.9" y="1429" width="3.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="407.86" y="1439.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (30 samples, 0.06%; 0.00%)</title><rect x="155.1" y="1381" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="158.06" y="1391.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (12 samples, 0.03%; -0.03%)</title><rect x="136.2" y="1397" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="139.23" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (25 samples, 0.05%; +0.00%)</title><rect x="551.7" y="1589" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="554.66" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (37 samples, 0.08%; 0.00%)</title><rect x="1019.4" y="1397" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1022.39" y="1407.5" ></text>
</g>
<g >
<title>database::has_keyspace (135 samples, 0.28%; 0.00%)</title><rect x="839.5" y="1589" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="842.52" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="963.9" y="1557" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="966.86" y="1567.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%; 0.00%)</title><rect x="1141.5" y="1301" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.48" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (8 samples, 0.02%; -0.01%)</title><rect x="913.1" y="1525" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="916.06" y="1535.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (77 samples, 0.16%; +0.00%)</title><rect x="767.9" y="1557" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="770.86" y="1567.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; -0.00%)</title><rect x="763.4" y="1477" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="766.37" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%; +0.00%)</title><rect x="98.0" y="1541" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="100.99" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (38 samples, 0.08%; -0.01%)</title><rect x="477.9" y="1365" width="0.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="480.86" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%; -0.01%)</title><rect x="199.3" y="1301" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="202.34" y="1311.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="756.6" y="1573" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="759.58" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,995 samples, 48.29%; -0.00%)</title><rect x="54.4" y="1637" width="569.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="57.38" y="1647.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (15 samples, 0.03%; +0.00%)</title><rect x="604.0" y="1605" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="607.04" y="1615.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (34 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1653" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.27" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="1169.7" y="1653" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1172.71" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (67 samples, 0.14%; -0.01%)</title><rect x="695.7" y="1653" width="1.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="698.72" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (22 samples, 0.05%; -0.01%)</title><rect x="204.8" y="1269" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="207.79" y="1279.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%; -0.01%)</title><rect x="1046.3" y="1429" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1049.30" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; -0.03%)</title><rect x="1050.1" y="1365" width="0.3" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="1053.09" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; +0.00%)</title><rect x="962.1" y="1573" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="965.05" y="1583.5" ></text>
</g>
<g >
<title>tombstone::apply (13 samples, 0.03%; -0.00%)</title><rect x="388.6" y="1365" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="391.61" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%; -0.00%)</title><rect x="90.3" y="1605" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="93.34" y="1615.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (11 samples, 0.02%; -0.04%)</title><rect x="675.1" y="1637" width="0.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="678.08" y="1647.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (10 samples, 0.02%; -0.03%)</title><rect x="62.6" y="1605" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="65.63" y="1615.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; 0.00%)</title><rect x="615.1" y="1557" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="618.14" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (7 samples, 0.01%; +0.01%)</title><rect x="494.1" y="1461" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="497.07" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="937.6" y="1557" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="940.65" y="1567.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (737 samples, 1.55%; -0.03%)</title><rect x="553.8" y="1541" width="18.3" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="556.81" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="768.7" y="1509" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.75" y="1519.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (578 samples, 1.21%; +0.00%)</title><rect x="1152.5" y="1653" width="14.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1155.51" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.03%; +0.02%)</title><rect x="1101.2" y="1525" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1104.19" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (207 samples, 0.43%; -0.00%)</title><rect x="217.8" y="1381" width="5.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="220.83" y="1391.5" ></text>
</g>
<g >
<title>dht::tri_compare (90 samples, 0.19%; +0.03%)</title><rect x="473.1" y="1429" width="2.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="476.08" y="1439.5" ></text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%; +0.01%)</title><rect x="208.8" y="1301" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="211.81" y="1311.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (85 samples, 0.18%; +0.00%)</title><rect x="38.1" y="1637" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="41.15" y="1647.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (120 samples, 0.25%; -0.05%)</title><rect x="925.7" y="1509" width="3.0" height="15.0" fill="rgb(141,141,255)" rx="2" ry="2" />
<text  x="928.70" y="1519.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%; +0.00%)</title><rect x="1036.3" y="1381" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1039.27" y="1391.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="804.5" y="1349" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.53" y="1359.5" ></text>
</g>
<g >
<title>seastar::gate::leave (9 samples, 0.02%; +0.00%)</title><rect x="61.4" y="1573" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="64.37" y="1583.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (69 samples, 0.14%; 0.00%)</title><rect x="602.3" y="1605" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="605.33" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (5 samples, 0.01%; 0.00%)</title><rect x="23.6" y="1685" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.58" y="1695.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.03%; -0.02%)</title><rect x="245.5" y="1397" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="248.45" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (21 samples, 0.04%; 0.00%)</title><rect x="670.5" y="1605" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="673.55" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="815.3" y="1509" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="818.31" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (25 samples, 0.05%; -0.01%)</title><rect x="258.8" y="1445" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="261.79" y="1455.5" ></text>
</g>
<g >
<title>operator delete (57 samples, 0.12%; +0.02%)</title><rect x="686.3" y="1653" width="1.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="689.33" y="1663.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (82 samples, 0.17%; 0.00%)</title><rect x="860.3" y="1637" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="863.31" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (91 samples, 0.19%; +0.00%)</title><rect x="659.9" y="1637" width="2.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="662.89" y="1647.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (10 samples, 0.02%; -0.00%)</title><rect x="997.3" y="1445" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1000.27" y="1455.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (110 samples, 0.23%; +0.02%)</title><rect x="716.8" y="1621" width="2.8" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="719.84" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%; 0.00%)</title><rect x="420.2" y="1573" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="423.22" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; 0.00%)</title><rect x="1129.7" y="1541" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1132.66" y="1551.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (49 samples, 0.10%; +0.01%)</title><rect x="1095.7" y="1461" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1098.74" y="1471.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (39 samples, 0.08%; +0.02%)</title><rect x="385.5" y="1333" width="0.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="388.46" y="1343.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (28 samples, 0.06%; +0.01%)</title><rect x="647.2" y="1589" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="650.23" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (5 samples, 0.01%; 0.00%)</title><rect x="620.3" y="1573" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="623.29" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; -0.01%)</title><rect x="785.3" y="1413" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="788.28" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%; -0.01%)</title><rect x="1075.7" y="1461" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1078.72" y="1471.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1311.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (111 samples, 0.23%; -0.02%)</title><rect x="1185.8" y="1781" width="2.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1188.81" y="1791.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.01%)</title><rect x="673.4" y="1653" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="676.40" y="1663.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; 0.00%)</title><rect x="93.0" y="1605" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="95.99" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (5 samples, 0.01%; -0.00%)</title><rect x="497.9" y="1429" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="500.86" y="1439.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5 samples, 0.01%; -0.01%)</title><rect x="121.4" y="1477" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="124.36" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (15 samples, 0.03%; -0.00%)</title><rect x="198.7" y="1269" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="201.70" y="1279.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (13 samples, 0.03%; +0.02%)</title><rect x="237.8" y="1381" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="240.85" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::stats (34 samples, 0.07%; -0.01%)</title><rect x="499.4" y="1413" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="502.44" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%; +0.01%)</title><rect x="331.7" y="1333" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="334.66" y="1343.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (13 samples, 0.03%; -0.00%)</title><rect x="725.8" y="1573" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="728.83" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (47 samples, 0.10%; -0.01%)</title><rect x="995.2" y="1445" width="1.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="998.23" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (160 samples, 0.34%; -0.01%)</title><rect x="824.6" y="1509" width="4.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="827.60" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="911.7" y="1509" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="914.65" y="1519.5" ></text>
</g>
<g >
<title>freeze (10 samples, 0.02%; 0.00%)</title><rect x="1141.5" y="1365" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1375.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (7 samples, 0.01%; 0.00%)</title><rect x="22.2" y="1685" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.17" y="1695.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (13 samples, 0.03%; +0.03%)</title><rect x="765.2" y="1541" width="0.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="768.20" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (26 samples, 0.05%; +0.00%)</title><rect x="848.7" y="1525" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="851.71" y="1535.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; -0.00%)</title><rect x="780.9" y="1461" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="783.89" y="1471.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="684.9" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1599.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (355 samples, 0.75%; -0.01%)</title><rect x="795.2" y="1381" width="8.8" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="798.21" y="1391.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (103 samples, 0.22%; +0.00%)</title><rect x="614.5" y="1589" width="2.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="617.47" y="1599.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.04%; -0.07%)</title><rect x="477.2" y="1381" width="0.4" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="480.19" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1221" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1231.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (6 samples, 0.01%; +0.00%)</title><rect x="1002.7" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1005.72" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="810.8" y="1429" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="813.85" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.04%; +0.01%)</title><rect x="483.3" y="1381" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="486.34" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (15 samples, 0.03%; -0.02%)</title><rect x="536.0" y="1509" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="539.04" y="1519.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (48 samples, 0.10%; -0.01%)</title><rect x="826.3" y="1477" width="1.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="829.31" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (520 samples, 1.09%; +0.01%)</title><rect x="500.4" y="1429" width="12.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="503.39" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (21 samples, 0.04%; -0.01%)</title><rect x="936.5" y="1493" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="939.48" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (14 samples, 0.03%; -0.00%)</title><rect x="814.2" y="1461" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="817.19" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (19 samples, 0.04%; +0.02%)</title><rect x="1122.5" y="1573" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1125.50" y="1583.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,088 samples, 8.58%; -0.09%)</title><rect x="733.1" y="1605" width="101.3" height="15.0" fill="rgb(92,92,255)" rx="2" ry="2" />
<text  x="736.14" y="1615.5" >cql3::query_..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%; -0.01%)</title><rect x="640.9" y="1653" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="643.89" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%; -0.01%)</title><rect x="872.1" y="1637" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="875.10" y="1647.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (533 samples, 1.12%; +0.06%)</title><rect x="470.9" y="1477" width="13.2" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="473.92" y="1487.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%; -0.00%)</title><rect x="811.1" y="1445" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="814.12" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.03%; -0.01%)</title><rect x="781.9" y="1477" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="784.88" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (9 samples, 0.02%; -0.00%)</title><rect x="695.5" y="1653" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="698.50" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%; -0.01%)</title><rect x="621.7" y="1541" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="624.71" y="1551.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (87 samples, 0.18%; +0.00%)</title><rect x="621.2" y="1589" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="624.21" y="1599.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (6 samples, 0.01%; 0.00%)</title><rect x="21.3" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.27" y="1647.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (14 samples, 0.03%; +0.01%)</title><rect x="153.1" y="1365" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="156.13" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.01%; -0.00%)</title><rect x="18.1" y="1461" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="21.13" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (83 samples, 0.17%; +0.02%)</title><rect x="660.1" y="1621" width="2.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="663.09" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (15 samples, 0.03%; -0.00%)</title><rect x="951.6" y="1557" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="954.60" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="569.4" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="572.45" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (14 samples, 0.03%; 0.00%)</title><rect x="446.7" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="449.71" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (197 samples, 0.41%; +0.00%)</title><rect x="760.2" y="1541" width="4.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="763.25" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%; +0.05%)</title><rect x="1128.3" y="1557" width="1.9" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="1131.27" y="1567.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.01%)</title><rect x="728.2" y="1461" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="731.23" y="1471.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (345 samples, 0.72%; +0.01%)</title><rect x="475.3" y="1429" width="8.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="478.31" y="1439.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (22 samples, 0.05%; +0.01%)</title><rect x="225.7" y="1397" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="228.68" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (17 samples, 0.04%; -0.01%)</title><rect x="683.2" y="1621" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="686.23" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (78 samples, 0.16%; +0.00%)</title><rect x="752.7" y="1573" width="1.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="755.72" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.18%; -0.01%)</title><rect x="974.5" y="1509" width="2.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="977.54" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (11 samples, 0.02%; +0.00%)</title><rect x="751.1" y="1573" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="754.11" y="1583.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (45 samples, 0.09%; +0.00%)</title><rect x="615.6" y="1557" width="1.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="618.61" y="1567.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; +0.01%)</title><rect x="153.8" y="1349" width="1.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="156.82" y="1359.5" ></text>
</g>
<g >
<title>seastar::gate::enter (6 samples, 0.01%; +0.00%)</title><rect x="1038.3" y="1413" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1041.28" y="1423.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (10 samples, 0.02%; +0.01%)</title><rect x="96.8" y="1573" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="99.83" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.03%; +0.01%)</title><rect x="1145.4" y="1669" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1148.37" y="1679.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (15 samples, 0.03%; +0.01%)</title><rect x="213.4" y="1285" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="216.37" y="1295.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (34 samples, 0.07%; -0.04%)</title><rect x="927.8" y="1493" width="0.9" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="930.83" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (55 samples, 0.12%; -0.01%)</title><rect x="979.5" y="1477" width="1.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="982.52" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1615.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (453 samples, 0.95%; +0.02%)</title><rect x="459.6" y="1477" width="11.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="462.62" y="1487.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.04%; +0.01%)</title><rect x="241.6" y="1381" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="244.64" y="1391.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (10 samples, 0.02%; -0.03%)</title><rect x="885.2" y="1573" width="0.3" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="888.21" y="1583.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (6 samples, 0.01%; 0.00%)</title><rect x="29.4" y="1653" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="32.43" y="1663.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (9 samples, 0.02%; +0.01%)</title><rect x="859.9" y="1573" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="862.91" y="1583.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (24 samples, 0.05%; -0.00%)</title><rect x="507.3" y="1365" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="510.35" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (16 samples, 0.03%; +0.00%)</title><rect x="1050.5" y="1445" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1053.49" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (60 samples, 0.13%; -0.00%)</title><rect x="220.5" y="1333" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="223.50" y="1343.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (33 samples, 0.07%; -0.00%)</title><rect x="725.0" y="1573" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="728.01" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.01%)</title><rect x="592.9" y="1541" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="595.86" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%; -0.00%)</title><rect x="593.7" y="1557" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="596.71" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="865.8" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.78" y="1583.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (171 samples, 0.36%; -0.00%)</title><rect x="447.1" y="1445" width="4.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="450.06" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%; +0.00%)</title><rect x="1034.5" y="1381" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1037.51" y="1391.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (24 samples, 0.05%; -0.02%)</title><rect x="841.9" y="1509" width="0.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="844.95" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.00%)</title><rect x="278.5" y="1461" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="281.46" y="1471.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,028 samples, 2.16%; +0.03%)</title><rect x="887.8" y="1541" width="25.5" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="890.79" y="1551.5" >_..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (29 samples, 0.06%; -0.04%)</title><rect x="1149.1" y="1653" width="0.7" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="1152.09" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.01%)</title><rect x="1005.1" y="1461" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1008.12" y="1471.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (94 samples, 0.20%; -0.06%)</title><rect x="1113.2" y="1541" width="2.4" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1116.23" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%; +0.00%)</title><rect x="846.4" y="1541" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="849.38" y="1551.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="620.7" y="1605" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="623.67" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%; +0.00%)</title><rect x="865.9" y="1493" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.86" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (202 samples, 0.42%; +0.00%)</title><rect x="1169.9" y="1653" width="5.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1172.85" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.03%; +0.00%)</title><rect x="349.7" y="1333" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="352.65" y="1343.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.01%; 0.00%)</title><rect x="1157.0" y="1621" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1160.02" y="1631.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%; +0.01%)</title><rect x="401.5" y="1349" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="404.54" y="1359.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (15 samples, 0.03%; +0.01%)</title><rect x="691.2" y="1621" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="694.24" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%; -0.02%)</title><rect x="1122.0" y="1541" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1125.03" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%; +0.01%)</title><rect x="152.5" y="1365" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="155.51" y="1375.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (35 samples, 0.07%; -0.02%)</title><rect x="747.6" y="1429" width="0.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="750.64" y="1439.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (20 samples, 0.04%; -0.00%)</title><rect x="696.6" y="1637" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="699.59" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (52 samples, 0.11%; +0.02%)</title><rect x="681.9" y="1621" width="1.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="684.95" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.00%)</title><rect x="793.3" y="1381" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="796.28" y="1391.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (20 samples, 0.04%; -0.00%)</title><rect x="366.9" y="1333" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="369.95" y="1343.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%; +0.00%)</title><rect x="905.6" y="1477" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="908.56" y="1487.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (166 samples, 0.35%; +0.02%)</title><rect x="545.3" y="1557" width="4.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="548.29" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%; +0.01%)</title><rect x="953.2" y="1557" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="956.18" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (5 samples, 0.01%; +0.00%)</title><rect x="606.6" y="1605" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="609.59" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,264 samples, 2.65%; +0.01%)</title><rect x="1013.5" y="1445" width="31.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1016.52" y="1455.5" >se..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="939.3" y="1541" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="942.31" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (608 samples, 1.28%; -0.01%)</title><rect x="789.7" y="1413" width="15.1" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="792.74" y="1423.5" ></text>
</g>
<g >
<title>database::find_column_family (39 samples, 0.08%; -0.01%)</title><rect x="1019.3" y="1413" width="1.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1022.34" y="1423.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%; 0.00%)</title><rect x="212.8" y="1301" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="215.77" y="1311.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%; +0.00%)</title><rect x="1064.5" y="1493" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1067.47" y="1503.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (11 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="1573" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.85" y="1583.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (68 samples, 0.14%; -0.02%)</title><rect x="618.7" y="1605" width="1.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="621.73" y="1615.5" ></text>
</g>
<g >
<title>query::querier_base::close (17 samples, 0.04%; +0.00%)</title><rect x="1175.8" y="1653" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1178.80" y="1663.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%; -0.01%)</title><rect x="833.6" y="1573" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="836.60" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (16 samples, 0.03%; +0.02%)</title><rect x="1066.6" y="1509" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1069.57" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%; -0.01%)</title><rect x="939.6" y="1573" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="942.60" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (28 samples, 0.06%; +0.04%)</title><rect x="448.0" y="1429" width="0.7" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="451.00" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (52 samples, 0.11%; +0.04%)</title><rect x="1165.5" y="1637" width="1.3" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="1168.54" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.02%)</title><rect x="945.8" y="1525" width="0.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="948.80" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%; -0.01%)</title><rect x="328.7" y="1349" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="331.71" y="1359.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (249 samples, 0.52%; +0.02%)</title><rect x="216.8" y="1397" width="6.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="219.83" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%; -0.02%)</title><rect x="439.1" y="1397" width="1.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="442.08" y="1407.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (29 samples, 0.06%; +0.00%)</title><rect x="329.6" y="1333" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="332.56" y="1343.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (35 samples, 0.07%; +0.01%)</title><rect x="764.1" y="1493" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="767.07" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (14 samples, 0.03%; +0.01%)</title><rect x="1033.2" y="1365" width="0.4" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1036.22" y="1375.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (33 samples, 0.07%; +0.01%)</title><rect x="742.3" y="1541" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="745.31" y="1551.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,760 samples, 5.80%; -0.01%)</title><rect x="454.2" y="1509" width="68.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="457.22" y="1519.5" >memtabl..</text>
</g>
<g >
<title>seastar::reactor::del_timer (31 samples, 0.07%; +0.03%)</title><rect x="68.5" y="1541" width="0.7" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="71.45" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%; +0.01%)</title><rect x="1049.4" y="1413" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1052.38" y="1423.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.00%)</title><rect x="701.8" y="1605" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="704.79" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.03%; -0.00%)</title><rect x="385.2" y="1333" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="388.16" y="1343.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (19 samples, 0.04%; -0.01%)</title><rect x="568.7" y="1461" width="0.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="571.68" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.00%)</title><rect x="789.2" y="1429" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="792.19" y="1439.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (59 samples, 0.12%; +0.05%)</title><rect x="729.9" y="1461" width="1.5" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="732.92" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%; -0.02%)</title><rect x="1052.3" y="1461" width="0.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1055.25" y="1471.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (11 samples, 0.02%; -0.01%)</title><rect x="1096.6" y="1429" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1099.63" y="1439.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.02%; 0.00%)</title><rect x="18.7" y="1445" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.67" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (34 samples, 0.07%; -0.01%)</title><rect x="691.9" y="1605" width="0.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="694.88" y="1615.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1573" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1583.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (19 samples, 0.04%; +0.01%)</title><rect x="1175.1" y="1669" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1178.08" y="1679.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%; 0.00%)</title><rect x="768.0" y="1541" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.03" y="1551.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (17 samples, 0.04%; -0.00%)</title><rect x="1010.3" y="1429" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1013.35" y="1439.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (13 samples, 0.03%; 0.00%)</title><rect x="598.1" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="601.12" y="1567.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%; -0.01%)</title><rect x="565.2" y="1445" width="1.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="568.23" y="1455.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,093 samples, 14.90%; +0.02%)</title><rect x="110.8" y="1557" width="175.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="113.80" y="1567.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>query_state::query_state (227 samples, 0.48%; -0.05%)</title><rect x="596.0" y="1605" width="5.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="599.04" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (121 samples, 0.25%; -0.02%)</title><rect x="398.7" y="1365" width="3.0" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="401.67" y="1375.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%; +0.00%)</title><rect x="623.7" y="1605" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="626.74" y="1615.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (62 samples, 0.13%; -0.01%)</title><rect x="740.4" y="1525" width="1.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="743.40" y="1535.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%; +0.01%)</title><rect x="778.9" y="1445" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="781.86" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (14 samples, 0.03%; -0.01%)</title><rect x="871.8" y="1621" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="874.76" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1567.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (275 samples, 0.58%; -0.01%)</title><rect x="94.1" y="1605" width="6.8" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="97.08" y="1615.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (9 samples, 0.02%; +0.01%)</title><rect x="557.3" y="1461" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="560.26" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (11 samples, 0.02%; +0.00%)</title><rect x="605.6" y="1605" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="608.60" y="1615.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%; +0.01%)</title><rect x="722.4" y="1621" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="725.41" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; 0.00%)</title><rect x="1040.7" y="1397" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1043.65" y="1407.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,555 samples, 3.27%; -0.02%)</title><rect x="776.5" y="1509" width="38.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="779.45" y="1519.5" >ser..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (17 samples, 0.04%; +0.02%)</title><rect x="935.5" y="1509" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="938.49" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (12 samples, 0.03%; -0.02%)</title><rect x="982.3" y="1525" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="985.30" y="1535.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (18 samples, 0.04%; +0.02%)</title><rect x="958.0" y="1573" width="0.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="960.96" y="1583.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (31 samples, 0.07%; +0.02%)</title><rect x="332.5" y="1349" width="0.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="335.46" y="1359.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (448 samples, 0.94%; -0.01%)</title><rect x="698.7" y="1653" width="11.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="701.72" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="255.5" ></text>
</g>
<g >
<title>database::find_column_family (100 samples, 0.21%; +0.01%)</title><rect x="1057.4" y="1509" width="2.4" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1060.36" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (123 samples, 0.26%; -0.01%)</title><rect x="635.4" y="1669" width="3.1" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="638.41" y="1679.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (78 samples, 0.16%; +0.16%)</title><rect x="941.6" y="1573" width="2.0" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="944.64" y="1583.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%; +0.00%)</title><rect x="839.6" y="1557" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="842.64" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.02%; +0.00%)</title><rect x="842.7" y="1573" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="845.67" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%; +0.01%)</title><rect x="413.0" y="1509" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="416.04" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (7 samples, 0.01%; -0.03%)</title><rect x="285.7" y="1525" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="288.75" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (13 samples, 0.03%; 0.00%)</title><rect x="61.6" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.62" y="1599.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (216 samples, 0.45%; +0.01%)</title><rect x="1082.4" y="1413" width="5.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1085.41" y="1423.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (14 samples, 0.03%; +0.01%)</title><rect x="203.5" y="1285" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="206.48" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (27 samples, 0.06%; -0.00%)</title><rect x="1105.5" y="1541" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1108.45" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="616.6" y="1525" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="619.55" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="611.1" y="1589" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="614.05" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.70" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.02%; -0.05%)</title><rect x="986.0" y="1493" width="0.2" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="988.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (9 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.73" y="143.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%; +0.00%)</title><rect x="219.0" y="1349" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="221.99" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (9 samples, 0.02%; -0.01%)</title><rect x="837.9" y="1605" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="840.91" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.00%)</title><rect x="131.2" y="1413" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="134.22" y="1423.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%; -0.01%)</title><rect x="508.2" y="1349" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="511.17" y="1359.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (6 samples, 0.01%; +0.01%)</title><rect x="1158.0" y="1573" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1161.03" y="1583.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%; 0.00%)</title><rect x="1132.4" y="1557" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1135.41" y="1567.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (32 samples, 0.07%; -0.00%)</title><rect x="619.5" y="1573" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="622.50" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (12 samples, 0.03%; +0.01%)</title><rect x="318.6" y="1317" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="321.55" y="1327.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%; 0.00%)</title><rect x="45.5" y="1653" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.51" y="1663.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="809.1" y="1429" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.06" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (6 samples, 0.01%; -0.01%)</title><rect x="452.7" y="1477" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="455.66" y="1487.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%; +0.02%)</title><rect x="413.2" y="1525" width="0.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="416.24" y="1535.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (5 samples, 0.01%; 0.00%)</title><rect x="1139.4" y="1605" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.43" y="1615.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (131 samples, 0.28%; 0.00%)</title><rect x="825.3" y="1493" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="828.27" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (27 samples, 0.06%; +0.01%)</title><rect x="1123.4" y="1573" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1126.37" y="1583.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (5 samples, 0.01%; +0.00%)</title><rect x="1094.9" y="1461" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1097.90" y="1471.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (7 samples, 0.01%; -0.00%)</title><rect x="18.1" y="1477" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="21.10" y="1487.5" ></text>
</g>
<g >
<title>row::~row (7 samples, 0.01%; +0.01%)</title><rect x="251.3" y="1429" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="254.25" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1317" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1327.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%; +0.01%)</title><rect x="814.8" y="1477" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="817.79" y="1487.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (42 samples, 0.09%; +0.04%)</title><rect x="1043.5" y="1429" width="1.0" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="1046.50" y="1439.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; -0.00%)</title><rect x="653.6" y="1653" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="656.57" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (170 samples, 0.36%; +0.01%)</title><rect x="33.9" y="1637" width="4.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="36.94" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%; +0.01%)</title><rect x="582.2" y="1493" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="585.18" y="1503.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%; 0.00%)</title><rect x="849.2" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="852.16" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="693" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="703.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,875 samples, 12.34%; +0.01%)</title><rect x="962.2" y="1573" width="145.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="965.23" y="1583.5" >service::storage_p..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (5 samples, 0.01%; -0.01%)</title><rect x="126.9" y="1429" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="129.88" y="1439.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (5 samples, 0.01%; 0.00%)</title><rect x="1065.8" y="1509" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1068.81" y="1519.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.03%; +0.01%)</title><rect x="827.2" y="1445" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="830.20" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%; +0.00%)</title><rect x="284.5" y="1525" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="287.46" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (22 samples, 0.05%; -0.02%)</title><rect x="419.3" y="1589" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="422.26" y="1599.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; 0.00%)</title><rect x="1158.6" y="1557" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.63" y="1567.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (42 samples, 0.09%; +0.00%)</title><rect x="621.4" y="1573" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="624.43" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%; -0.01%)</title><rect x="912.3" y="1477" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="915.35" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (12 samples, 0.03%; +0.02%)</title><rect x="442.2" y="1445" width="0.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="445.23" y="1455.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (260 samples, 0.55%; 0.00%)</title><rect x="15.1" y="1685" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.08" y="1695.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.00%)</title><rect x="588.9" y="1573" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="591.95" y="1583.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; +0.00%)</title><rect x="452.2" y="1461" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="455.22" y="1471.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; -0.04%)</title><rect x="61.9" y="1605" width="0.2" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="64.94" y="1615.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (7 samples, 0.01%; 0.00%)</title><rect x="20.7" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.70" y="1567.5" ></text>
</g>
<g >
<title>auth::resource::resource (6 samples, 0.01%; +0.00%)</title><rect x="757.6" y="1573" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="760.65" y="1583.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%; -0.00%)</title><rect x="439.1" y="1413" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="442.06" y="1423.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (39 samples, 0.08%; +0.07%)</title><rect x="914.3" y="1557" width="0.9" height="15.0" fill="rgb(255,125,125)" rx="2" ry="2" />
<text  x="917.25" y="1567.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.00%)</title><rect x="1062.3" y="1429" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1065.34" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.02%; -0.01%)</title><rect x="452.2" y="1445" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="455.24" y="1455.5" ></text>
</g>
<g >
<title>make_random_seq (5 samples, 0.01%; +0.01%)</title><rect x="719.6" y="1637" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="722.61" y="1647.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%; +0.04%)</title><rect x="1125.4" y="1589" width="1.2" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="1128.42" y="1599.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (6 samples, 0.01%; +0.01%)</title><rect x="775.3" y="1525" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="778.34" y="1535.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (37 samples, 0.08%; 0.00%)</title><rect x="684.8" y="1669" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.85" y="1679.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.00%)</title><rect x="453.3" y="1493" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="456.28" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::consume (11 samples, 0.02%; -0.01%)</title><rect x="209.3" y="1317" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="212.30" y="1327.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%; +0.00%)</title><rect x="1174.3" y="1573" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1177.31" y="1583.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="668.3" y="1653" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="671.32" y="1663.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (18 samples, 0.04%; -0.00%)</title><rect x="924.6" y="1525" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="927.64" y="1535.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (17 samples, 0.04%; +0.01%)</title><rect x="1038.5" y="1413" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1041.52" y="1423.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; +0.00%)</title><rect x="243.5" y="1349" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="246.50" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.00%)</title><rect x="301.0" y="1413" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="304.01" y="1423.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (29 samples, 0.06%; +0.01%)</title><rect x="1030.0" y="1317" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1032.97" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (10 samples, 0.02%; +0.01%)</title><rect x="838.1" y="1605" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="841.13" y="1615.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (14 samples, 0.03%; +0.01%)</title><rect x="224.9" y="1381" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="227.86" y="1391.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%; 0.00%)</title><rect x="529.2" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="532.20" y="1487.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (19 samples, 0.04%; 0.00%)</title><rect x="865.7" y="1621" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.69" y="1631.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="14.9" y="1669" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="17.91" y="1679.5" ></text>
</g>
<g >
<title>schema::column_at (52 samples, 0.11%; -0.01%)</title><rect x="330.7" y="1349" width="1.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="333.70" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%; -0.02%)</title><rect x="504.8" y="1365" width="0.1" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="507.80" y="1375.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (26 samples, 0.05%; -0.01%)</title><rect x="840.8" y="1541" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="843.83" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1173" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1183.5" ></text>
</g>
<g >
<title>operator new (109 samples, 0.23%; 0.00%)</title><rect x="990.7" y="1493" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="993.70" y="1503.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (38 samples, 0.08%; +0.03%)</title><rect x="310.7" y="1333" width="0.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="313.67" y="1343.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (6 samples, 0.01%; 0.00%)</title><rect x="15.6" y="1445" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.55" y="1455.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.06%; -0.00%)</title><rect x="727.9" y="1493" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="730.94" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (111 samples, 0.23%; +0.02%)</title><rect x="192.5" y="1285" width="2.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="195.48" y="1295.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (27 samples, 0.06%; -0.03%)</title><rect x="770.2" y="1509" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="773.19" y="1519.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (588 samples, 1.23%; -0.01%)</title><rect x="1080.3" y="1461" width="14.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1083.28" y="1471.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; -0.00%)</title><rect x="945.7" y="1541" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="948.75" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (36 samples, 0.08%; -0.01%)</title><rect x="1058.9" y="1461" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1061.94" y="1471.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (5 samples, 0.01%; -0.01%)</title><rect x="234.4" y="1381" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="237.43" y="1391.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (7 samples, 0.01%; -0.00%)</title><rect x="258.1" y="1429" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="261.14" y="1439.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (331 samples, 0.70%; -0.01%)</title><rect x="586.0" y="1605" width="8.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="589.02" y="1615.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="416.9" y="1541" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="419.88" y="1551.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (247 samples, 0.52%; 0.00%)</title><rect x="15.1" y="1653" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.13" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1013" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1023.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (34 samples, 0.07%; +0.01%)</title><rect x="1061.7" y="1461" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1064.67" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (34 samples, 0.07%; +0.00%)</title><rect x="541.6" y="1589" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="544.62" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (10 samples, 0.02%; +0.01%)</title><rect x="272.1" y="1509" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="275.09" y="1519.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (7 samples, 0.01%; +0.01%)</title><rect x="457.5" y="1493" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="460.54" y="1503.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="909.4" y="1509" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="912.45" y="1519.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (6 samples, 0.01%; +0.01%)</title><rect x="513.1" y="1413" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="516.12" y="1423.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%; -0.01%)</title><rect x="62.4" y="1605" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="65.43" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (10 samples, 0.02%; 0.00%)</title><rect x="865.8" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.81" y="1567.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.02%; -0.04%)</title><rect x="632.3" y="1653" width="0.2" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="635.26" y="1663.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,696 samples, 9.86%; +0.03%)</title><rect x="421.7" y="1573" width="116.4" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="424.69" y="1583.5" >mutation_sourc..</text>
</g>
<g >
<title>database::query (986 samples, 2.07%; +0.03%)</title><rect x="1014.5" y="1429" width="24.4" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="1017.51" y="1439.5" >d..</text>
</g>
<g >
<title>partition_version_ref::operator (23 samples, 0.05%; +0.00%)</title><rect x="511.7" y="1397" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="514.66" y="1407.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,437 samples, 9.32%; +0.03%)</title><rect x="142.1" y="1461" width="110.0" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="145.12" y="1471.5" >seastar::do_u..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (588 samples, 1.23%; +0.01%)</title><rect x="231.7" y="1413" width="14.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="234.65" y="1423.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (108 samples, 0.23%; -0.00%)</title><rect x="801.0" y="1317" width="2.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="804.04" y="1327.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (55 samples, 0.12%; +0.00%)</title><rect x="1108.6" y="1573" width="1.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1111.62" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (24 samples, 0.05%; 0.00%)</title><rect x="316.5" y="1349" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="319.47" y="1359.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="949.8" y="1477" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="952.81" y="1487.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%; +0.01%)</title><rect x="214.1" y="1317" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="217.11" y="1327.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (18 samples, 0.04%; -0.00%)</title><rect x="38.7" y="1621" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="41.69" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.02%)</title><rect x="593.4" y="1557" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="596.43" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%; +0.01%)</title><rect x="210.9" y="1317" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="213.94" y="1327.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (83 samples, 0.17%; +0.04%)</title><rect x="353.0" y="1333" width="2.1" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="356.00" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%; -0.00%)</title><rect x="437.5" y="1413" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="440.50" y="1423.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%; -0.00%)</title><rect x="212.5" y="1285" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="215.47" y="1295.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (17 samples, 0.04%; +0.01%)</title><rect x="743.2" y="1541" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="746.18" y="1551.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%; -0.02%)</title><rect x="522.6" y="1509" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="525.61" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (34 samples, 0.07%; +0.00%)</title><rect x="647.1" y="1605" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="650.11" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="933" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="943.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%; +0.00%)</title><rect x="1175.9" y="1525" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1178.93" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1621" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1631.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,603 samples, 26.47%; +0.03%)</title><rect x="107.0" y="1589" width="312.3" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="109.96" y="1599.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="245.2" y="1397" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="248.23" y="1407.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%; 0.00%)</title><rect x="684.9" y="1573" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.01%)</title><rect x="620.4" y="1605" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="623.42" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (7 samples, 0.01%; -0.01%)</title><rect x="418.7" y="1557" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="421.74" y="1567.5" ></text>
</g>
<g >
<title>operator delete (82 samples, 0.17%; +0.01%)</title><rect x="405.1" y="1413" width="2.0" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="408.08" y="1423.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="137.7" y="1397" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="140.66" y="1407.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (74 samples, 0.16%; +0.04%)</title><rect x="365.7" y="1365" width="1.8" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="368.71" y="1375.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%; +0.01%)</title><rect x="1039.2" y="1429" width="2.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1042.22" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (5 samples, 0.01%; +0.00%)</title><rect x="1163.7" y="1637" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1166.73" y="1647.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (16 samples, 0.03%; +0.02%)</title><rect x="334.8" y="1349" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="337.81" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (43 samples, 0.09%; -0.02%)</title><rect x="1136.5" y="1589" width="1.1" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1139.53" y="1599.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (18 samples, 0.04%; -0.01%)</title><rect x="169.7" y="1301" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="172.68" y="1311.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (93 samples, 0.20%; -0.02%)</title><rect x="413.8" y="1541" width="2.3" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="416.76" y="1551.5" ></text>
</g>
<g >
<title>schema::column_at (37 samples, 0.08%; +0.03%)</title><rect x="199.6" y="1301" width="0.9" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="202.61" y="1311.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1061" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1071.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (10 samples, 0.02%; +0.01%)</title><rect x="892.5" y="1477" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="895.52" y="1487.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; -0.01%)</title><rect x="803.9" y="1365" width="0.1" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="806.89" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="479.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%; +0.02%)</title><rect x="491.2" y="1477" width="0.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="494.17" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%; +0.01%)</title><rect x="258.4" y="1445" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="261.36" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (14 samples, 0.03%; +0.01%)</title><rect x="315.4" y="1333" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="318.41" y="1343.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (36 samples, 0.08%; +0.01%)</title><rect x="1049.6" y="1413" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1052.60" y="1423.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.00%)</title><rect x="811.6" y="1477" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="814.57" y="1487.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (815 samples, 1.71%; +0.03%)</title><rect x="121.5" y="1477" width="20.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="124.48" y="1487.5" ></text>
</g>
<g >
<title>query::result::builder::build (60 samples, 0.13%; -0.02%)</title><rect x="594.2" y="1605" width="1.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="597.23" y="1615.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (44 samples, 0.09%; -0.00%)</title><rect x="574.5" y="1525" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="577.50" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="423.1" y="1541" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="426.12" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (82 samples, 0.17%; +0.00%)</title><rect x="242.6" y="1381" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="245.63" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="677" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="687.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1045" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1055.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (9 samples, 0.02%; +0.01%)</title><rect x="811.8" y="1477" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="814.84" y="1487.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.03%; +0.01%)</title><rect x="1109.1" y="1557" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1112.12" y="1567.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (31 samples, 0.07%; +0.02%)</title><rect x="501.9" y="1397" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="504.95" y="1407.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (21 samples, 0.04%; +0.01%)</title><rect x="1171.5" y="1621" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1174.51" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%; +0.00%)</title><rect x="1074.8" y="1445" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1077.82" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; +0.00%)</title><rect x="268.8" y="1493" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="271.77" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (6 samples, 0.01%; 0.00%)</title><rect x="976.5" y="1461" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="979.50" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (5 samples, 0.01%; -0.00%)</title><rect x="620.8" y="1605" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="623.84" y="1615.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (26 samples, 0.05%; -0.00%)</title><rect x="419.8" y="1589" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="422.80" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%; -0.01%)</title><rect x="857.6" y="1637" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="860.61" y="1647.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (517 samples, 1.09%; -0.01%)</title><rect x="736.5" y="1573" width="12.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="739.51" y="1583.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (8 samples, 0.02%; -0.01%)</title><rect x="922.4" y="1541" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="925.41" y="1551.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (13 samples, 0.03%; +0.01%)</title><rect x="320.2" y="1381" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="323.17" y="1391.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="947.0" y="1557" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="949.96" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,195 samples, 48.71%; -0.04%)</title><rect x="49.9" y="1653" width="574.7" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="52.87" y="1663.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%; -0.01%)</title><rect x="1171.0" y="1621" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1173.99" y="1631.5" ></text>
</g>
<g >
<title>query::result::result (39 samples, 0.08%; -0.04%)</title><rect x="594.6" y="1589" width="1.0" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="597.62" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.00%)</title><rect x="928.7" y="1509" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="931.68" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (9 samples, 0.02%; -0.01%)</title><rect x="66.7" y="1557" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="69.67" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (158 samples, 0.33%; -0.01%)</title><rect x="851.4" y="1589" width="4.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="854.44" y="1599.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (26 samples, 0.05%; -0.00%)</title><rect x="65.3" y="1573" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="68.31" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (68 samples, 0.14%; +0.00%)</title><rect x="393.5" y="1381" width="1.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="396.51" y="1391.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (56 samples, 0.12%; +0.01%)</title><rect x="885.8" y="1573" width="1.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="888.76" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (7 samples, 0.01%; +0.01%)</title><rect x="169.5" y="1301" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="172.51" y="1311.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (126 samples, 0.26%; +0.02%)</title><rect x="1047.4" y="1445" width="3.1" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1050.37" y="1455.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; +0.00%)</title><rect x="1140.3" y="1621" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.27" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (10 samples, 0.02%; -0.00%)</title><rect x="913.8" y="1541" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="916.78" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (6 samples, 0.01%; -0.01%)</title><rect x="60.0" y="1621" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="62.96" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="591.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (41 samples, 0.09%; -0.01%)</title><rect x="1131.4" y="1557" width="1.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1134.40" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%; -0.04%)</title><rect x="1118.5" y="1509" width="1.8" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1121.49" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="585.6" y="1541" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="588.63" y="1551.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (17 samples, 0.04%; -0.00%)</title><rect x="802.0" y="1285" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="805.00" y="1295.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.03%; -0.01%)</title><rect x="431.3" y="1509" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="434.28" y="1519.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (8 samples, 0.02%; 0.00%)</title><rect x="77.9" y="1621" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.87" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (112 samples, 0.24%; +0.03%)</title><rect x="834.6" y="1605" width="2.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="837.56" y="1615.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (462 samples, 0.97%; -0.00%)</title><rect x="686.0" y="1669" width="11.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="689.03" y="1679.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (40 samples, 0.08%; -0.04%)</title><rect x="1012.2" y="1413" width="1.0" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="1015.18" y="1423.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="1141.5" y="1285" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1144.48" y="1295.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (19 samples, 0.04%; +0.03%)</title><rect x="451.7" y="1445" width="0.4" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="454.67" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (26 samples, 0.05%; +0.01%)</title><rect x="871.5" y="1637" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="874.46" y="1647.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%; +0.00%)</title><rect x="503.8" y="1365" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="506.76" y="1375.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (9 samples, 0.02%; +0.02%)</title><rect x="1053.0" y="1477" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1056.02" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (14 samples, 0.03%; +0.00%)</title><rect x="237.5" y="1381" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="240.50" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%; -0.01%)</title><rect x="311.6" y="1333" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="314.62" y="1343.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%; -0.01%)</title><rect x="214.6" y="1301" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="217.55" y="1311.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (144 samples, 0.30%; -0.01%)</title><rect x="545.8" y="1541" width="3.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="548.83" y="1551.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (47 samples, 0.10%; +0.01%)</title><rect x="799.8" y="1301" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="802.85" y="1311.5" ></text>
</g>
<g >
<title>malloc (24 samples, 0.05%; 0.00%)</title><rect x="600.0" y="1541" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.02" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.01%)</title><rect x="989.2" y="1445" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="992.16" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; +0.02%)</title><rect x="836.1" y="1525" width="0.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="839.15" y="1535.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (13 samples, 0.03%; +0.00%)</title><rect x="705.6" y="1589" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="708.56" y="1599.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%; +0.00%)</title><rect x="841.3" y="1509" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="844.25" y="1519.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1557" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1567.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (105 samples, 0.22%; -0.02%)</title><rect x="510.0" y="1413" width="2.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="513.03" y="1423.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (52 samples, 0.11%; -0.01%)</title><rect x="358.3" y="1317" width="1.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="361.33" y="1327.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (10 samples, 0.02%; +0.01%)</title><rect x="854.9" y="1525" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="857.93" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,455 samples, 9.36%; -0.03%)</title><rect x="141.7" y="1477" width="110.4" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="144.68" y="1487.5" >partition_sna..</text>
</g>
<g >
<title>operator delete (91 samples, 0.19%; +0.03%)</title><rect x="90.7" y="1605" width="2.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="93.73" y="1615.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%; +0.00%)</title><rect x="388.9" y="1365" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="391.93" y="1375.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (17 samples, 0.04%; +0.00%)</title><rect x="647.5" y="1573" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="650.48" y="1583.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (403 samples, 0.85%; +0.01%)</title><rect x="739.3" y="1557" width="10.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="742.34" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="155.6" y="1349" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="158.63" y="1359.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (12 samples, 0.03%; -0.01%)</title><rect x="604.4" y="1605" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="607.44" y="1615.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (43 samples, 0.09%; +0.01%)</title><rect x="749.8" y="1573" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="752.84" y="1583.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (7 samples, 0.01%; -0.04%)</title><rect x="436.2" y="1461" width="0.2" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="439.21" y="1471.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,009 samples, 4.22%; -0.06%)</title><rect x="1003.2" y="1477" width="49.8" height="15.0" fill="rgb(130,130,255)" rx="2" ry="2" />
<text  x="1006.24" y="1487.5" >servi..</text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (45 samples, 0.09%; +0.01%)</title><rect x="807.5" y="1413" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="810.50" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (17 samples, 0.04%; +0.01%)</title><rect x="31.0" y="1653" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="33.96" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.01%; -0.02%)</title><rect x="856.6" y="1573" width="0.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="859.64" y="1583.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (19 samples, 0.04%; +0.01%)</title><rect x="580.3" y="1509" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="583.30" y="1519.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (32 samples, 0.07%; 0.00%)</title><rect x="866.6" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.55" y="1599.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; +0.00%)</title><rect x="517.6" y="1445" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="520.58" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (21 samples, 0.04%; -0.02%)</title><rect x="1029.2" y="1317" width="0.6" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1032.23" y="1327.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (220 samples, 0.46%; -0.01%)</title><rect x="1027.5" y="1365" width="5.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1030.50" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (42 samples, 0.09%; 0.00%)</title><rect x="823.3" y="1477" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.34" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (6 samples, 0.01%; +0.00%)</title><rect x="1106.4" y="1557" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1109.37" y="1567.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1589" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1391.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.02%; 0.00%)</title><rect x="17.4" y="1509" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.36" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; +0.00%)</title><rect x="76.3" y="1621" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="79.26" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%; +0.01%)</title><rect x="335.2" y="1349" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="338.21" y="1359.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (488 samples, 1.02%; -0.00%)</title><rect x="573.2" y="1557" width="12.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="576.24" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (57 samples, 0.12%; -0.01%)</title><rect x="383.7" y="1301" width="1.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="386.75" y="1311.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%; +0.01%)</title><rect x="684.5" y="1653" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="687.50" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (20 samples, 0.04%; +0.01%)</title><rect x="111.4" y="1541" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="114.45" y="1551.5" ></text>
</g>
<g >
<title>database::find_keyspace (171 samples, 0.36%; -0.01%)</title><rect x="1059.8" y="1509" width="4.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1062.83" y="1519.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (12 samples, 0.03%; -0.01%)</title><rect x="1140.0" y="1637" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1142.97" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (66 samples, 0.14%; +0.01%)</title><rect x="1157.8" y="1605" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1160.76" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1701" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1711.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (7 samples, 0.01%; 0.00%)</title><rect x="866.6" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.63" y="1567.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (253 samples, 0.53%; -0.01%)</title><rect x="629.1" y="1669" width="6.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="632.14" y="1679.5" ></text>
</g>
<g >
<title>operator new (92 samples, 0.19%; +0.01%)</title><rect x="279.3" y="1445" width="2.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="282.28" y="1455.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (599 samples, 1.26%; -0.05%)</title><rect x="373.1" y="1349" width="14.8" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="376.09" y="1359.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (309 samples, 0.65%; +0.01%)</title><rect x="1155.9" y="1637" width="7.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1158.90" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (27 samples, 0.06%; -0.01%)</title><rect x="711.0" y="1669" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="713.96" y="1679.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%; 0.00%)</title><rect x="833.4" y="1589" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.45" y="1599.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (131 samples, 0.28%; -0.01%)</title><rect x="999.7" y="1461" width="3.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1002.69" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (278 samples, 0.58%; -0.00%)</title><rect x="397.5" y="1413" width="6.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="400.45" y="1423.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (19 samples, 0.04%; -0.02%)</title><rect x="705.0" y="1589" width="0.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="708.04" y="1599.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (34 samples, 0.07%; +0.01%)</title><rect x="148.5" y="1397" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="151.54" y="1407.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,488 samples, 7.32%; +0.00%)</title><rect x="305.5" y="1413" width="86.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="308.47" y="1423.5" >flat_mutat..</text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (7 samples, 0.01%; 0.00%)</title><rect x="867.1" y="1525" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.12" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%; -0.00%)</title><rect x="1143.0" y="1669" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1145.99" y="1679.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (6 samples, 0.01%; 0.00%)</title><rect x="69.6" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.64" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (8 samples, 0.02%; +0.01%)</title><rect x="537.5" y="1493" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="540.51" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; -0.00%)</title><rect x="523.2" y="1509" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="526.16" y="1519.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="59.0" y="1621" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="62.04" y="1631.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (18 samples, 0.04%; -0.01%)</title><rect x="1062.9" y="1429" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1065.91" y="1439.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (11 samples, 0.02%; 0.00%)</title><rect x="1038.9" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.94" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (6 samples, 0.01%; -0.00%)</title><rect x="969.6" y="1541" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="972.59" y="1551.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (5 samples, 0.01%; +0.00%)</title><rect x="866.6" y="1541" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="869.63" y="1551.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (9 samples, 0.02%; +0.01%)</title><rect x="1029.8" y="1317" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1032.75" y="1327.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%; +0.00%)</title><rect x="919.1" y="1525" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="922.09" y="1535.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (83 samples, 0.17%; +0.00%)</title><rect x="787.0" y="1429" width="2.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="790.04" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (19 samples, 0.04%; -0.00%)</title><rect x="706.5" y="1605" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="709.53" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (13 samples, 0.03%; +0.01%)</title><rect x="903.1" y="1445" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="906.13" y="1455.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="1154.9" y="1589" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1157.89" y="1599.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (17 samples, 0.04%; +0.02%)</title><rect x="242.1" y="1381" width="0.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="245.11" y="1391.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%; -0.00%)</title><rect x="677.1" y="1653" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="680.14" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (20 samples, 0.04%; +0.02%)</title><rect x="583.4" y="1509" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="586.37" y="1519.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (589 samples, 1.24%; -0.01%)</title><rect x="175.5" y="1285" width="14.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="178.50" y="1295.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (19 samples, 0.04%; -0.00%)</title><rect x="685.0" y="1477" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="687.99" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (7 samples, 0.01%; +0.01%)</title><rect x="905.0" y="1493" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="908.01" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (24 samples, 0.05%; +0.01%)</title><rect x="569.7" y="1461" width="0.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="572.69" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (23 samples, 0.05%; +0.04%)</title><rect x="765.5" y="1573" width="0.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="768.53" y="1583.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (48 samples, 0.10%; +0.00%)</title><rect x="1164.3" y="1621" width="1.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1167.33" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (5 samples, 0.01%; -0.02%)</title><rect x="947.1" y="1573" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="950.11" y="1583.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (45 samples, 0.09%; +0.02%)</title><rect x="372.0" y="1349" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="374.98" y="1359.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (43 samples, 0.09%; +0.00%)</title><rect x="805.3" y="1413" width="1.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="808.30" y="1423.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (22 samples, 0.05%; +0.01%)</title><rect x="264.3" y="1493" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="267.34" y="1503.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%; +0.01%)</title><rect x="646.5" y="1605" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="649.46" y="1615.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (48 samples, 0.10%; -0.02%)</title><rect x="587.2" y="1589" width="1.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="590.21" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="699.7" y="1637" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="702.66" y="1647.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%; +0.00%)</title><rect x="529.5" y="1477" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="532.45" y="1487.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (99 samples, 0.21%; +0.02%)</title><rect x="1172.3" y="1605" width="2.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1175.33" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="550.7" y="1589" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="553.71" y="1599.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (12 samples, 0.03%; +0.00%)</title><rect x="1032.7" y="1349" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1035.65" y="1359.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (5 samples, 0.01%; 0.00%)</title><rect x="20.7" y="1509" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.70" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (18 samples, 0.04%; -0.01%)</title><rect x="208.7" y="1317" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="211.71" y="1327.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%; +0.01%)</title><rect x="829.0" y="1493" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="831.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1359.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (7 samples, 0.01%; +0.01%)</title><rect x="417.7" y="1541" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="420.72" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.02%; 0.00%)</title><rect x="16.9" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.91" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (63 samples, 0.13%; +0.01%)</title><rect x="835.6" y="1557" width="1.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="838.63" y="1567.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%; -0.00%)</title><rect x="759.7" y="1493" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="762.65" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (16 samples, 0.03%; 0.00%)</title><rect x="560.8" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.82" y="1455.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (28 samples, 0.06%; 0.00%)</title><rect x="1141.2" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.16" y="1503.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (10 samples, 0.02%; +0.00%)</title><rect x="705.9" y="1589" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="708.88" y="1599.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (22 samples, 0.05%; -0.00%)</title><rect x="908.7" y="1477" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="911.73" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,658 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1717" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1727.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="629" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="639.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (17 samples, 0.04%; +0.00%)</title><rect x="419.4" y="1573" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="422.38" y="1583.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (311 samples, 0.65%; -0.01%)</title><rect x="796.1" y="1349" width="7.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="799.10" y="1359.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (111 samples, 0.23%; +0.01%)</title><rect x="663.4" y="1653" width="2.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="666.39" y="1663.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (14 samples, 0.03%; -0.02%)</title><rect x="584.3" y="1541" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="587.34" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (8 samples, 0.02%; +0.00%)</title><rect x="856.8" y="1605" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="859.79" y="1615.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.00%)</title><rect x="590.1" y="1573" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="593.09" y="1583.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; 0.00%)</title><rect x="578.9" y="1525" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="581.94" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.02%)</title><rect x="223.2" y="1381" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="226.23" y="1391.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (43 samples, 0.09%; +0.01%)</title><rect x="762.1" y="1493" width="1.1" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="765.11" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (7 samples, 0.01%; -0.00%)</title><rect x="999.5" y="1461" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1002.52" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.01%)</title><rect x="1002.5" y="1413" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1005.54" y="1423.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (426 samples, 0.89%; +0.01%)</title><rect x="662.2" y="1669" width="10.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="665.25" y="1679.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (5 samples, 0.01%; -0.00%)</title><rect x="895.4" y="1445" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="898.40" y="1455.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%; -0.01%)</title><rect x="531.1" y="1445" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="534.11" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%; -0.00%)</title><rect x="848.8" y="1509" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="851.81" y="1519.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.01%)</title><rect x="636.0" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="638.96" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (10 samples, 0.02%; -0.00%)</title><rect x="285.9" y="1525" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="288.92" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (7 samples, 0.01%; 0.00%)</title><rect x="1189.8" y="53" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.78" y="63.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="584.2" y="1541" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="587.17" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%; +0.01%)</title><rect x="919.2" y="1509" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="922.18" y="1519.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%; +0.01%)</title><rect x="680.5" y="1605" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="683.46" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,658 samples, 9.78%; -0.01%)</title><rect x="294.0" y="1477" width="115.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="297.02" y="1487.5" >std::__invoke_..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (33 samples, 0.07%; +0.03%)</title><rect x="712.0" y="1669" width="0.8" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="714.95" y="1679.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (39 samples, 0.08%; +0.00%)</title><rect x="304.2" y="1381" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="307.21" y="1391.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (15 samples, 0.03%; -0.01%)</title><rect x="709.3" y="1621" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="712.33" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%; -0.01%)</title><rect x="790.0" y="1397" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="792.96" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (59 samples, 0.12%; -0.00%)</title><rect x="1047.9" y="1397" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1050.91" y="1407.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="941.4" y="1557" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="944.36" y="1567.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (5 samples, 0.01%; -0.01%)</title><rect x="409.2" y="1445" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="412.22" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="149" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.70" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%; +0.02%)</title><rect x="906.2" y="1461" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="909.25" y="1471.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (41 samples, 0.09%; -0.00%)</title><rect x="458.1" y="1493" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="461.11" y="1503.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (42 samples, 0.09%; +0.01%)</title><rect x="436.8" y="1445" width="1.0" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="439.80" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (14 samples, 0.03%; +0.01%)</title><rect x="141.0" y="1445" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="143.96" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (5 samples, 0.01%; +0.01%)</title><rect x="1003.0" y="1477" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1006.01" y="1487.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (16 samples, 0.03%; 0.00%)</title><rect x="1133.5" y="1589" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1136.48" y="1599.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (23 samples, 0.05%; +0.00%)</title><rect x="895.5" y="1445" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="898.52" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="590.7" y="1557" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="593.68" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.01%)</title><rect x="622.7" y="1541" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="625.70" y="1551.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (14 samples, 0.03%; -0.00%)</title><rect x="601.1" y="1573" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="604.12" y="1583.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="722.9" y="1621" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="725.93" y="1631.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.01%)</title><rect x="42.9" y="1653" width="0.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="45.86" y="1663.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (21 samples, 0.04%; +0.01%)</title><rect x="539.3" y="1573" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="542.31" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (16 samples, 0.03%; +0.00%)</title><rect x="864.1" y="1669" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="867.12" y="1679.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; -0.01%)</title><rect x="687.7" y="1653" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="690.74" y="1663.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (90 samples, 0.19%; +0.00%)</title><rect x="746.8" y="1477" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="749.82" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%; +0.01%)</title><rect x="507.6" y="1333" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="510.57" y="1343.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (6 samples, 0.01%; -0.01%)</title><rect x="616.8" y="1541" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="619.83" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="813.2" y="1461" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="816.15" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (10 samples, 0.02%; +0.01%)</title><rect x="78.1" y="1621" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="81.07" y="1631.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (9 samples, 0.02%; +0.01%)</title><rect x="958.7" y="1541" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="961.66" y="1551.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1141.5" y="1333" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.48" y="1343.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.02%; -0.09%)</title><rect x="917.1" y="1557" width="0.2" height="15.0" fill="rgb(95,95,255)" rx="2" ry="2" />
<text  x="920.10" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (24 samples, 0.05%; +0.01%)</title><rect x="611.2" y="1589" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="614.18" y="1599.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%; 0.00%)</title><rect x="216.4" y="1381" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="219.44" y="1391.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (8 samples, 0.02%; -0.00%)</title><rect x="390.4" y="1397" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="393.37" y="1407.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (181 samples, 0.38%; 0.00%)</title><rect x="465.9" y="1445" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="468.87" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (132 samples, 0.28%; -0.00%)</title><rect x="34.8" y="1621" width="3.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="37.83" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (133 samples, 0.28%; +0.01%)</title><rect x="986.2" y="1493" width="3.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="989.19" y="1503.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%; +0.01%)</title><rect x="294.5" y="1461" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="297.52" y="1471.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; +0.01%)</title><rect x="1132.9" y="1557" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1135.91" y="1567.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,009 samples, 2.12%; -0.12%)</title><rect x="459.1" y="1493" width="25.0" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="462.13" y="1503.5" >d..</text>
</g>
<g >
<title>service::abstract_read_executor::execute (203 samples, 0.43%; -0.03%)</title><rect x="689.4" y="1637" width="5.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="692.40" y="1647.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (5 samples, 0.01%; -0.01%)</title><rect x="915.2" y="1557" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="918.22" y="1567.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (43 samples, 0.09%; -0.02%)</title><rect x="517.2" y="1461" width="1.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="520.24" y="1471.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (15 samples, 0.03%; +0.01%)</title><rect x="443.7" y="1461" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="446.67" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (17 samples, 0.04%; +0.00%)</title><rect x="1177.4" y="1621" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1180.36" y="1631.5" ></text>
</g>
<g >
<title>db::filter_for_query (29 samples, 0.06%; +0.01%)</title><rect x="1064.7" y="1509" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1067.69" y="1519.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%; +0.01%)</title><rect x="629.3" y="1653" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="632.31" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (50 samples, 0.10%; +0.03%)</title><rect x="567.3" y="1429" width="1.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="570.32" y="1439.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (168 samples, 0.35%; -0.00%)</title><rect x="397.9" y="1381" width="4.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="400.90" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (44 samples, 0.09%; +0.01%)</title><rect x="510.6" y="1397" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="513.57" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%; +0.00%)</title><rect x="412.3" y="1413" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="415.32" y="1423.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (22 samples, 0.05%; +0.03%)</title><rect x="1100.0" y="1509" width="0.6" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="1103.03" y="1519.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (63 samples, 0.13%; -0.00%)</title><rect x="762.1" y="1509" width="1.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="765.06" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="284.3" y="1509" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="287.33" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; +0.00%)</title><rect x="935.9" y="1509" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="938.91" y="1519.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (16 samples, 0.03%; +0.03%)</title><rect x="852.0" y="1557" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="855.03" y="1567.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%; +0.01%)</title><rect x="746.9" y="1445" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="749.94" y="1455.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%; -0.00%)</title><rect x="487.2" y="1461" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="490.18" y="1471.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (5 samples, 0.01%; +0.01%)</title><rect x="595.9" y="1605" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="598.91" y="1615.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (61 samples, 0.13%; -0.02%)</title><rect x="414.0" y="1525" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="417.03" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (63 samples, 0.13%; -0.01%)</title><rect x="129.9" y="1429" width="1.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="132.86" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.02%; +0.01%)</title><rect x="1105.2" y="1541" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1108.23" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (6 samples, 0.01%; +0.01%)</title><rect x="903.4" y="1445" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="906.45" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (19 samples, 0.04%; -0.02%)</title><rect x="49.4" y="1653" width="0.5" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="52.40" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%; 0.00%)</title><rect x="157.3" y="1349" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.29" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (7 samples, 0.01%; +0.01%)</title><rect x="413.5" y="1525" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="416.48" y="1535.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (31 samples, 0.07%; +0.01%)</title><rect x="482.5" y="1365" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="485.50" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.15%; -0.02%)</title><rect x="1039.4" y="1413" width="1.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1042.44" y="1423.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (8 samples, 0.02%; -0.04%)</title><rect x="713.7" y="1669" width="0.2" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="716.74" y="1679.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%; -0.00%)</title><rect x="706.1" y="1589" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="709.13" y="1599.5" ></text>
</g>
<g >
<title>query::result::builder::builder (170 samples, 0.36%; -0.01%)</title><rect x="597.2" y="1589" width="4.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="600.25" y="1599.5" ></text>
</g>
<g >
<title>seastar::aio_storage_context::reap_completions (5 samples, 0.01%; 0.00%)</title><rect x="1177.1" y="1653" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.09" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (10 samples, 0.02%; +0.01%)</title><rect x="584.7" y="1541" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="587.74" y="1551.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (19 samples, 0.04%; +0.00%)</title><rect x="1098.4" y="1477" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1101.44" y="1487.5" ></text>
</g>
<g >
<title>database::query (155 samples, 0.33%; -0.02%)</title><rect x="41.5" y="1669" width="3.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="44.54" y="1679.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (80 samples, 0.17%; +0.01%)</title><rect x="740.1" y="1541" width="2.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="743.08" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; -0.00%)</title><rect x="519.3" y="1477" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="522.29" y="1487.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (14 samples, 0.03%; -0.00%)</title><rect x="158.0" y="1381" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="161.01" y="1391.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (119 samples, 0.25%; 0.00%)</title><rect x="986.5" y="1477" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="989.49" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (49 samples, 0.10%; +0.02%)</title><rect x="992.2" y="1461" width="1.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="995.19" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (31 samples, 0.07%; -0.00%)</title><rect x="1168.8" y="1637" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1171.84" y="1647.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%; -0.00%)</title><rect x="771.6" y="1525" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="774.62" y="1535.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%; 0.00%)</title><rect x="292.4" y="1461" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="295.44" y="1471.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (44 samples, 0.09%; +0.07%)</title><rect x="572.1" y="1541" width="1.1" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="575.15" y="1551.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (46 samples, 0.10%; +0.08%)</title><rect x="1088.0" y="1445" width="1.1" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="1091.01" y="1455.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (29 samples, 0.06%; +0.06%)</title><rect x="737.3" y="1557" width="0.7" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="740.25" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%; -0.00%)</title><rect x="652.0" y="1605" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="654.96" y="1615.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%; +0.00%)</title><rect x="547.5" y="1509" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="550.49" y="1519.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (8 samples, 0.02%; +0.01%)</title><rect x="514.1" y="1445" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="517.14" y="1455.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%; -0.00%)</title><rect x="980.9" y="1509" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="983.89" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.03%; +0.00%)</title><rect x="814.7" y="1493" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="817.69" y="1503.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (78 samples, 0.16%; -0.00%)</title><rect x="797.6" y="1317" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="800.57" y="1327.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%; -0.00%)</title><rect x="771.7" y="1525" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="774.75" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (54 samples, 0.11%; -0.01%)</title><rect x="60.6" y="1605" width="1.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="63.60" y="1615.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (57 samples, 0.12%; -0.02%)</title><rect x="527.6" y="1461" width="1.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="530.62" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (20 samples, 0.04%; +0.01%)</title><rect x="440.8" y="1429" width="0.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="443.84" y="1439.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; +0.01%)</title><rect x="660.7" y="1605" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="663.66" y="1615.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (5 samples, 0.01%; -0.01%)</title><rect x="908.6" y="1477" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="911.58" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%; -0.00%)</title><rect x="212.7" y="1317" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="215.70" y="1327.5" ></text>
</g>
<g >
<title>database::find_schema (251 samples, 0.53%; +0.01%)</title><rect x="822.3" y="1541" width="6.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="825.35" y="1551.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (41 samples, 0.09%; +0.02%)</title><rect x="1026.3" y="1365" width="1.0" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1029.33" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (43 samples, 0.09%; +0.01%)</title><rect x="727.6" y="1509" width="1.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="730.64" y="1519.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (12 samples, 0.03%; -0.00%)</title><rect x="675.4" y="1637" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="678.38" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (284 samples, 0.60%; 0.00%)</title><rect x="14.6" y="1749" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.61" y="1759.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%; +0.03%)</title><rect x="855.5" y="1589" width="1.3" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="858.48" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (11 samples, 0.02%; -0.01%)</title><rect x="606.9" y="1605" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="609.91" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (5 samples, 0.01%; 0.00%)</title><rect x="262.2" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.23" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.00%)</title><rect x="549.9" y="1557" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="552.95" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1141" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1151.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%; +0.00%)</title><rect x="667.8" y="1637" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="670.77" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%; +0.01%)</title><rect x="44.3" y="1653" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="47.32" y="1663.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (5 samples, 0.01%; +0.01%)</title><rect x="752.6" y="1573" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="755.59" y="1583.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.05%)</title><rect x="613.8" y="1589" width="0.7" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="616.75" y="1599.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%; -0.00%)</title><rect x="608.3" y="1589" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="611.33" y="1599.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (5 samples, 0.01%; +0.00%)</title><rect x="21.9" y="1685" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="24.92" y="1695.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%; +0.00%)</title><rect x="1051.7" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1054.73" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="984.1" y="1525" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="987.06" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (7 samples, 0.01%; 0.00%)</title><rect x="1175.9" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.90" y="1551.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (7 samples, 0.01%; -0.01%)</title><rect x="598.4" y="1573" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="601.44" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (642 samples, 1.35%; +0.01%)</title><rect x="497.4" y="1445" width="15.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="500.36" y="1455.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%; +0.01%)</title><rect x="754.5" y="1541" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="757.52" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (22 samples, 0.05%; -0.00%)</title><rect x="208.6" y="1333" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="211.63" y="1343.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (10 samples, 0.02%; +0.01%)</title><rect x="207.3" y="1301" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="210.27" y="1311.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (85 samples, 0.18%; +0.01%)</title><rect x="646.0" y="1621" width="2.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="648.99" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (88 samples, 0.18%; +0.01%)</title><rect x="791.1" y="1381" width="2.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="794.10" y="1391.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (114 samples, 0.24%; -0.00%)</title><rect x="994.7" y="1461" width="2.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="997.69" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1621" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1631.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (47 samples, 0.10%; -0.00%)</title><rect x="802.5" y="1285" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="805.47" y="1295.5" ></text>
</g>
<g >
<title>schema::get_partitioner (5 samples, 0.01%; +0.00%)</title><rect x="943.6" y="1573" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="946.57" y="1583.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.02%; 0.00%)</title><rect x="17.4" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.41" y="1487.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (7 samples, 0.01%; 0.00%)</title><rect x="1097.5" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1100.55" y="1487.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (16 samples, 0.03%; +0.03%)</title><rect x="506.1" y="1365" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="509.09" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (13 samples, 0.03%; +0.00%)</title><rect x="693.9" y="1621" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="696.94" y="1631.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.01%)</title><rect x="812.7" y="1477" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="815.68" y="1487.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (31 samples, 0.07%; +0.01%)</title><rect x="528.0" y="1445" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="531.04" y="1455.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%; -0.03%)</title><rect x="901.4" y="1445" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="904.42" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,144 samples, 4.50%; +0.00%)</title><rect x="163.3" y="1381" width="53.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="166.31" y="1391.5" >logal..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; +0.01%)</title><rect x="1099.8" y="1509" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1102.83" y="1519.5" ></text>
</g>
<g >
<title>memtable::apply (27 samples, 0.06%; +0.00%)</title><rect x="1140.3" y="1429" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.29" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%; 0.00%)</title><rect x="44.1" y="1653" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="47.15" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.00%)</title><rect x="1046.7" y="1397" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1049.68" y="1407.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (8 samples, 0.02%; +0.00%)</title><rect x="902.0" y="1445" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="905.04" y="1455.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (333 samples, 0.70%; -0.01%)</title><rect x="542.5" y="1589" width="8.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="545.46" y="1599.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%; 0.00%)</title><rect x="912.3" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="915.30" y="1503.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; 0.00%)</title><rect x="519.6" y="1493" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="522.57" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1717" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1727.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (6 samples, 0.01%; 0.00%)</title><rect x="15.6" y="1477" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.55" y="1487.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (29 samples, 0.06%; +0.00%)</title><rect x="586.5" y="1589" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="589.50" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%; -0.02%)</title><rect x="750.0" y="1557" width="0.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="753.04" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="645" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="655.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1109" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1119.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.00%)</title><rect x="389.7" y="1349" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="392.67" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (72 samples, 0.15%; -0.06%)</title><rect x="707.5" y="1605" width="1.8" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="710.49" y="1615.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; -0.01%)</title><rect x="770.6" y="1493" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="773.61" y="1503.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (79 samples, 0.17%; +0.00%)</title><rect x="777.9" y="1493" width="1.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="780.87" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (52 samples, 0.11%; +0.01%)</title><rect x="778.5" y="1477" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="781.46" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%; +0.01%)</title><rect x="1030.8" y="1301" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1033.79" y="1311.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (5 samples, 0.01%; +0.01%)</title><rect x="252.1" y="1477" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="255.07" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (10 samples, 0.02%; -0.01%)</title><rect x="214.5" y="1317" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="217.46" y="1327.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%; 0.00%)</title><rect x="1031.7" y="1333" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.71" y="1343.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (21 samples, 0.04%; -0.00%)</title><rect x="1075.3" y="1477" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1078.32" y="1487.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (18 samples, 0.04%; +0.00%)</title><rect x="1120.4" y="1525" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1123.37" y="1535.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%; +0.01%)</title><rect x="520.7" y="1493" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="523.73" y="1503.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,924 samples, 12.44%; -0.02%)</title><rect x="715.5" y="1653" width="146.8" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="718.55" y="1663.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="592.3" y="1541" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="595.29" y="1551.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%; -0.01%)</title><rect x="1061.8" y="1445" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1064.84" y="1455.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (400 samples, 0.84%; -0.01%)</title><rect x="699.8" y="1637" width="9.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="702.79" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%; -0.00%)</title><rect x="648.3" y="1621" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="651.27" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (228 samples, 0.48%; +0.02%)</title><rect x="150.2" y="1397" width="5.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="153.15" y="1407.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (7 samples, 0.01%; +0.00%)</title><rect x="1138.7" y="1589" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1141.71" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (73 samples, 0.15%; +0.01%)</title><rect x="681.8" y="1637" width="1.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="684.85" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (6 samples, 0.01%; 0.00%)</title><rect x="913.6" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="916.63" y="1551.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (19 samples, 0.04%; -0.00%)</title><rect x="498.1" y="1429" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="501.11" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%; +0.00%)</title><rect x="1026.7" y="1349" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1029.68" y="1359.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="533.0" y="1397" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="536.05" y="1407.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (492 samples, 1.03%; -0.00%)</title><rect x="29.3" y="1669" width="12.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="32.25" y="1679.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (84 samples, 0.18%; -0.01%)</title><rect x="625.4" y="1653" width="2.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="628.45" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (13 samples, 0.03%; +0.02%)</title><rect x="1076.8" y="1493" width="0.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1079.76" y="1503.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%; 0.00%)</title><rect x="1045.5" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.46" y="1455.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (19 samples, 0.04%; -0.02%)</title><rect x="215.3" y="1333" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="218.32" y="1343.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (10 samples, 0.02%; -0.00%)</title><rect x="212.4" y="1301" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="215.45" y="1311.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (181 samples, 0.38%; -0.01%)</title><rect x="727.5" y="1525" width="4.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="730.49" y="1535.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (26 samples, 0.05%; 0.00%)</title><rect x="226.2" y="1397" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="229.23" y="1407.5" ></text>
</g>
<g >
<title>__dynamic_cast (12 samples, 0.03%; -0.00%)</title><rect x="11.8" y="1749" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="14.81" y="1759.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%; -0.00%)</title><rect x="1107.0" y="1541" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1109.96" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="383.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (20 samples, 0.04%; -0.01%)</title><rect x="895.6" y="1429" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="898.59" y="1439.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (5 samples, 0.01%; +0.00%)</title><rect x="1154.8" y="1589" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1157.76" y="1599.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%; 0.00%)</title><rect x="15.7" y="1461" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.72" y="1471.5" ></text>
</g>
<g >
<title>query::digester::digester (34 samples, 0.07%; -0.02%)</title><rect x="597.6" y="1573" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="600.60" y="1583.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%; +0.01%)</title><rect x="603.4" y="1573" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="606.37" y="1583.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1605" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%; 0.00%)</title><rect x="37.9" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.93" y="1567.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="722.2" y="1621" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="725.19" y="1631.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (125 samples, 0.26%; -0.00%)</title><rect x="728.9" y="1493" width="3.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="731.88" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (323 samples, 0.68%; +0.00%)</title><rect x="795.9" y="1365" width="8.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="798.88" y="1375.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%; +0.00%)</title><rect x="827.0" y="1461" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="830.03" y="1471.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%; 0.00%)</title><rect x="959.9" y="1573" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="962.92" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (282 samples, 0.59%; +0.09%)</title><rect x="253.4" y="1461" width="6.9" height="15.0" fill="rgb(255,90,90)" rx="2" ry="2" />
<text  x="256.36" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (18 samples, 0.04%; +0.01%)</title><rect x="808.2" y="1381" width="0.4" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="811.17" y="1391.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (8 samples, 0.02%; +0.01%)</title><rect x="111.2" y="1541" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="114.17" y="1551.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (12 samples, 0.03%; -0.00%)</title><rect x="39.5" y="1605" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="42.49" y="1615.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (207 samples, 0.43%; -0.00%)</title><rect x="209.9" y="1349" width="5.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="212.92" y="1359.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (11 samples, 0.02%; -0.00%)</title><rect x="944.2" y="1573" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="947.24" y="1583.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; -0.04%)</title><rect x="441.3" y="1445" width="0.6" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="444.34" y="1455.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (31 samples, 0.07%; -0.02%)</title><rect x="318.1" y="1333" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="321.13" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (6 samples, 0.01%; +0.01%)</title><rect x="617.4" y="1605" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="620.42" y="1615.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (15 samples, 0.03%; +0.02%)</title><rect x="1053.5" y="1525" width="0.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1056.51" y="1535.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (11 samples, 0.02%; 0.00%)</title><rect x="332.2" y="1349" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="335.18" y="1359.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; +0.01%)</title><rect x="697.9" y="1653" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="700.85" y="1663.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (6 samples, 0.01%; 0.00%)</title><rect x="19.0" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.02" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (11 samples, 0.02%; -0.01%)</title><rect x="23.2" y="1685" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="26.18" y="1695.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,186 samples, 15.09%; -0.08%)</title><rect x="109.5" y="1573" width="178.1" height="15.0" fill="rgb(109,109,255)" rx="2" ry="2" />
<text  x="112.51" y="1583.5" >flat_mutation_reader::p..</text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (33 samples, 0.07%; -0.11%)</title><rect x="1134.4" y="1557" width="0.9" height="15.0" fill="rgb(70,70,255)" rx="2" ry="2" />
<text  x="1137.44" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (113 samples, 0.24%; +0.03%)</title><rect x="680.9" y="1653" width="2.8" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="683.88" y="1663.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (169 samples, 0.35%; -0.01%)</title><rect x="799.6" y="1333" width="4.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="802.62" y="1343.5" ></text>
</g>
<g >
<title>query_result_builder::consume (6 samples, 0.01%; +0.01%)</title><rect x="390.2" y="1397" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="393.22" y="1407.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (336 samples, 0.71%; -0.01%)</title><rect x="724.7" y="1605" width="8.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="727.74" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (54 samples, 0.11%; 0.00%)</title><rect x="15.5" y="1525" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.50" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%; -0.00%)</title><rect x="349.0" y="1317" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="351.96" y="1327.5" ></text>
</g>
<g >
<title>posix_memalign (47 samples, 0.10%; +0.00%)</title><rect x="194.0" y="1253" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="197.01" y="1263.5" ></text>
</g>
<g >
<title>row::external_memory_usage (243 samples, 0.51%; 0.00%)</title><rect x="201.5" y="1317" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="204.50" y="1327.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (162 samples, 0.34%; +0.04%)</title><rect x="345.6" y="1333" width="4.1" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="348.64" y="1343.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (11 samples, 0.02%; -0.01%)</title><rect x="260.0" y="1445" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="262.95" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.01%)</title><rect x="666.2" y="1653" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="669.16" y="1663.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.02%)</title><rect x="938.1" y="1573" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="941.14" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (7 samples, 0.01%; +0.01%)</title><rect x="564.8" y="1461" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="567.84" y="1471.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%; +0.01%)</title><rect x="793.0" y="1333" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="796.03" y="1343.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (62 samples, 0.13%; 0.00%)</title><rect x="1095.5" y="1477" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1098.54" y="1487.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (15 samples, 0.03%; -0.00%)</title><rect x="996.0" y="1429" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="999.03" y="1439.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (55 samples, 0.12%; -0.08%)</title><rect x="97.6" y="1573" width="1.3" height="15.0" fill="rgb(106,106,255)" rx="2" ry="2" />
<text  x="100.57" y="1583.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (31 samples, 0.07%; -0.01%)</title><rect x="781.1" y="1461" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="784.06" y="1471.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (8 samples, 0.02%; +0.01%)</title><rect x="1065.6" y="1509" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1068.61" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (33 samples, 0.07%; +0.01%)</title><rect x="1106.7" y="1557" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1109.72" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; -0.01%)</title><rect x="1126.4" y="1573" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1129.39" y="1583.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.03%; 0.00%)</title><rect x="1031.9" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.91" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,846 samples, 3.88%; -0.03%)</title><rect x="773.6" y="1541" width="45.7" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="776.58" y="1551.5" >serv..</text>
</g>
<g >
<title>clustering_row::external_memory_usage (282 samples, 0.59%; +0.01%)</title><rect x="200.5" y="1333" width="7.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="203.53" y="1343.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (20 samples, 0.04%; -0.00%)</title><rect x="310.2" y="1333" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="313.18" y="1343.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%; +0.00%)</title><rect x="485.5" y="1493" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="488.52" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.01%)</title><rect x="33.7" y="1621" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="36.74" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.02%)</title><rect x="534.4" y="1445" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="537.38" y="1455.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; -0.02%)</title><rect x="911.0" y="1525" width="0.8" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="914.03" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (35 samples, 0.07%; +0.01%)</title><rect x="900.3" y="1413" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="903.30" y="1423.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%; 0.00%)</title><rect x="199.1" y="1285" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="202.09" y="1295.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (19 samples, 0.04%; -0.06%)</title><rect x="1115.7" y="1541" width="0.4" height="15.0" fill="rgb(130,130,255)" rx="2" ry="2" />
<text  x="1118.66" y="1551.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (17 samples, 0.04%; -0.01%)</title><rect x="1031.1" y="1301" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1034.09" y="1311.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="905.2" y="1493" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="908.18" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (43 samples, 0.09%; -0.01%)</title><rect x="210.3" y="1333" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="213.29" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%; -0.01%)</title><rect x="537.7" y="1509" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="540.70" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%; -0.00%)</title><rect x="637.7" y="1653" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="640.71" y="1663.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (10 samples, 0.02%; +0.01%)</title><rect x="164.4" y="1365" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="167.40" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%; -0.02%)</title><rect x="607.2" y="1605" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="610.19" y="1615.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (5 samples, 0.01%; +0.01%)</title><rect x="1170.1" y="1637" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1173.10" y="1647.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%; -0.01%)</title><rect x="1062.0" y="1445" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1065.01" y="1455.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (7 samples, 0.01%; -0.01%)</title><rect x="882.5" y="1589" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="885.54" y="1599.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (58 samples, 0.12%; -0.00%)</title><rect x="503.6" y="1381" width="1.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="506.56" y="1391.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; +0.00%)</title><rect x="208.1" y="1333" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="211.06" y="1343.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (11 samples, 0.02%; -0.01%)</title><rect x="1114.6" y="1525" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1117.60" y="1535.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; +0.01%)</title><rect x="93.1" y="1589" width="0.4" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="96.09" y="1599.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,323 samples, 2.78%; -0.00%)</title><rect x="167.7" y="1333" width="32.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="170.75" y="1343.5" >cl..</text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (12 samples, 0.03%; +0.00%)</title><rect x="648.9" y="1589" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="651.91" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (23 samples, 0.05%; +0.00%)</title><rect x="137.2" y="1413" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="140.24" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="665.4" y="1621" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="668.42" y="1631.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (5 samples, 0.01%; 0.00%)</title><rect x="62.2" y="1621" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="65.19" y="1631.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%; +0.00%)</title><rect x="826.8" y="1429" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="829.78" y="1439.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (822 samples, 1.73%; +0.02%)</title><rect x="641.9" y="1669" width="20.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="644.85" y="1679.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (37 samples, 0.08%; -0.01%)</title><rect x="460.7" y="1461" width="1.0" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="463.74" y="1471.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (5 samples, 0.01%; +0.01%)</title><rect x="225.5" y="1397" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="228.46" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (35 samples, 0.07%; +0.00%)</title><rect x="610.9" y="1605" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="613.90" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%; -0.00%)</title><rect x="1034.3" y="1381" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1037.34" y="1391.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.00%)</title><rect x="278.1" y="1461" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="281.06" y="1471.5" ></text>
</g>
<g >
<title>row_tombstone::apply (28 samples, 0.06%; +0.01%)</title><rect x="388.4" y="1381" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="391.36" y="1391.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (30 samples, 0.06%; -0.05%)</title><rect x="215.1" y="1349" width="0.7" height="15.0" fill="rgb(139,139,255)" rx="2" ry="2" />
<text  x="218.05" y="1359.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (15 samples, 0.03%; -0.02%)</title><rect x="147.7" y="1413" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="150.70" y="1423.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (223 samples, 0.47%; 0.00%)</title><rect x="726.5" y="1573" width="5.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="729.55" y="1583.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (37 samples, 0.08%; 0.00%)</title><rect x="15.8" y="1445" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.77" y="1455.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (117 samples, 0.25%; -0.00%)</title><rect x="579.7" y="1525" width="2.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="582.71" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="564.7" y="1445" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="567.71" y="1455.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (787 samples, 1.65%; 0.00%)</title><rect x="553.7" y="1557" width="19.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="556.74" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="441.7" y="1429" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="444.73" y="1439.5" ></text>
</g>
<g >
<title>__dynamic_cast (19 samples, 0.04%; +0.01%)</title><rect x="644.8" y="1637" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="647.78" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%; +0.01%)</title><rect x="961.0" y="1541" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="963.99" y="1551.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (33 samples, 0.07%; +0.07%)</title><rect x="863.1" y="1653" width="0.8" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="866.06" y="1663.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%; +0.01%)</title><rect x="410.8" y="1429" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="413.81" y="1439.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="813.4" y="1477" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="816.40" y="1487.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; +0.00%)</title><rect x="414.7" y="1509" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="417.75" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; -0.00%)</title><rect x="661.1" y="1605" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="664.06" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="813.9" y="1461" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="816.90" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (8 samples, 0.02%; +0.01%)</title><rect x="713.4" y="1669" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="716.37" y="1679.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (13 samples, 0.03%; +0.01%)</title><rect x="433.8" y="1493" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="436.80" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.03%; -0.01%)</title><rect x="293.4" y="1461" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="296.35" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; 0.00%)</title><rect x="654.2" y="1637" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.22" y="1647.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (8 samples, 0.02%; +0.01%)</title><rect x="228.4" y="1413" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="231.38" y="1423.5" ></text>
</g>
<g >
<title>free (31 samples, 0.07%; +0.03%)</title><rect x="35.4" y="1589" width="0.8" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="38.45" y="1599.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (69 samples, 0.14%; -0.02%)</title><rect x="498.6" y="1429" width="1.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="501.58" y="1439.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (14 samples, 0.03%; +0.02%)</title><rect x="73.9" y="1589" width="0.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="76.93" y="1599.5" ></text>
</g>
<g >
<title>database::find_schema (68 samples, 0.14%; -0.01%)</title><rect x="822.7" y="1525" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="825.69" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (5 samples, 0.01%; +0.00%)</title><rect x="431.2" y="1509" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="434.15" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; +0.01%)</title><rect x="533.6" y="1413" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="536.64" y="1423.5" ></text>
</g>
<g >
<title>schema::get_sharder (6 samples, 0.01%; +0.01%)</title><rect x="1013.2" y="1445" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1016.17" y="1455.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (116 samples, 0.24%; 0.00%)</title><rect x="16.8" y="1541" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.84" y="1551.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%; +0.00%)</title><rect x="794.7" y="1333" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="797.74" y="1343.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (489 samples, 1.03%; +0.00%)</title><rect x="62.3" y="1621" width="12.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="65.31" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%; +0.00%)</title><rect x="506.5" y="1349" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="509.51" y="1359.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,738 samples, 12.05%; -0.09%)</title><rect x="964.2" y="1557" width="142.2" height="15.0" fill="rgb(92,92,255)" rx="2" ry="2" />
<text  x="967.18" y="1567.5" >service::storage_p..</text>
</g>
<g >
<title>dht::tri_compare (97 samples, 0.20%; -0.06%)</title><rect x="1085.4" y="1397" width="2.4" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1088.36" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%; -0.01%)</title><rect x="816.5" y="1509" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="819.55" y="1519.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (18 samples, 0.04%; +0.02%)</title><rect x="1066.1" y="1509" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1069.13" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (25 samples, 0.05%; -0.01%)</title><rect x="328.1" y="1349" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="331.09" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (56 samples, 0.12%; +0.02%)</title><rect x="845.3" y="1557" width="1.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="848.29" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.01%)</title><rect x="453.3" y="1477" width="0.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="456.28" y="1487.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; +0.00%)</title><rect x="1096.8" y="1413" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1099.78" y="1423.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; 0.00%)</title><rect x="404.0" y="1381" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="406.97" y="1391.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="910.8" y="1509" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="913.76" y="1519.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (6 samples, 0.01%; -0.00%)</title><rect x="183.5" y="1253" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="186.48" y="1263.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (8 samples, 0.02%; 0.00%)</title><rect x="867.1" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.12" y="1551.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (6 samples, 0.01%; -0.00%)</title><rect x="901.3" y="1445" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="904.27" y="1455.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%; 0.00%)</title><rect x="498.0" y="1429" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="500.98" y="1439.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (112 samples, 0.24%; -0.03%)</title><rect x="155.8" y="1397" width="2.8" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="158.80" y="1407.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (20 samples, 0.04%; -0.01%)</title><rect x="540.7" y="1573" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="543.73" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%; +0.01%)</title><rect x="246.1" y="1397" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="249.07" y="1407.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; 0.00%)</title><rect x="522.9" y="1509" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="525.89" y="1519.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (69 samples, 0.14%; +0.01%)</title><rect x="267.1" y="1493" width="1.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="270.06" y="1503.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%; -0.00%)</title><rect x="32.3" y="1653" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="35.28" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="808.6" y="1429" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="811.64" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%; -0.00%)</title><rect x="149.4" y="1413" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="152.38" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (30 samples, 0.06%; -0.02%)</title><rect x="788.3" y="1397" width="0.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="791.27" y="1407.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (29 samples, 0.06%; +0.00%)</title><rect x="771.4" y="1541" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="774.35" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%; +0.01%)</title><rect x="755.5" y="1541" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="758.54" y="1551.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (57 samples, 0.12%; +0.01%)</title><rect x="899.9" y="1429" width="1.4" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="902.86" y="1439.5" ></text>
</g>
<g >
<title>tracing::add_table_name (18 samples, 0.04%; -0.03%)</title><rect x="1138.3" y="1589" width="0.4" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="1141.26" y="1599.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (408 samples, 0.86%; -0.09%)</title><rect x="524.9" y="1493" width="10.1" height="15.0" fill="rgb(98,98,255)" rx="2" ry="2" />
<text  x="527.89" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1637" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (12 samples, 0.03%; +0.02%)</title><rect x="651.5" y="1621" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="654.47" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; +0.01%)</title><rect x="548.8" y="1477" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="551.83" y="1487.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (14 samples, 0.03%; +0.00%)</title><rect x="16.1" y="1429" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="19.15" y="1439.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (112 samples, 0.24%; -0.00%)</title><rect x="746.3" y="1493" width="2.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="749.27" y="1503.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (231 samples, 0.49%; -0.01%)</title><rect x="446.5" y="1461" width="5.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="449.47" y="1471.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (7 samples, 0.01%; +0.00%)</title><rect x="817.5" y="1477" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="820.54" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%; -0.00%)</title><rect x="824.1" y="1461" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="827.08" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (101 samples, 0.21%; -0.01%)</title><rect x="674.6" y="1653" width="2.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="677.64" y="1663.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (27 samples, 0.06%; -0.02%)</title><rect x="826.3" y="1461" width="0.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="829.34" y="1471.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; 0.00%)</title><rect x="849.0" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="851.98" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (9 samples, 0.02%; +0.01%)</title><rect x="539.6" y="1557" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="542.61" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="931.3" y="1525" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="934.25" y="1535.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (74 samples, 0.16%; +0.01%)</title><rect x="438.6" y="1429" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="441.61" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (45 samples, 0.09%; +0.04%)</title><rect x="450.2" y="1429" width="1.1" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="453.18" y="1439.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; -0.02%)</title><rect x="615.8" y="1541" width="0.9" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="618.83" y="1551.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%; +0.00%)</title><rect x="754.6" y="1573" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="757.65" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1669" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (12 samples, 0.03%; +0.01%)</title><rect x="605.9" y="1605" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="608.90" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1781" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1791.5" ></text>
</g>
<g >
<title>sstring_hash::operator (7 samples, 0.01%; +0.01%)</title><rect x="1063.7" y="1477" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1066.70" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (195 samples, 0.41%; +0.01%)</title><rect x="246.4" y="1429" width="4.8" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="249.37" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; 0.00%)</title><rect x="1001.7" y="1397" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.65" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (10 samples, 0.02%; +0.01%)</title><rect x="540.5" y="1557" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="543.48" y="1567.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (75 samples, 0.16%; +0.01%)</title><rect x="747.1" y="1445" width="1.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="750.14" y="1455.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%; -0.05%)</title><rect x="234.9" y="1365" width="0.2" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="237.95" y="1375.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%; +0.01%)</title><rect x="510.4" y="1397" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="513.40" y="1407.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (58 samples, 0.12%; +0.00%)</title><rect x="17.9" y="1493" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="20.86" y="1503.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (7 samples, 0.01%; +0.01%)</title><rect x="959.0" y="1525" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="962.01" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (13 samples, 0.03%; 0.00%)</title><rect x="541.3" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="544.30" y="1599.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%; 0.00%)</title><rect x="45.5" y="1669" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.51" y="1679.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.03%; -0.02%)</title><rect x="442.5" y="1445" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="445.53" y="1455.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (271 samples, 0.57%; +0.00%)</title><rect x="445.9" y="1477" width="6.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="448.90" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; -0.00%)</title><rect x="1032.9" y="1365" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1035.95" y="1375.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (34 samples, 0.07%; -0.01%)</title><rect x="670.2" y="1621" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="673.25" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.12%; +0.01%)</title><rect x="754.7" y="1557" width="1.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="757.67" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="411.3" y="1413" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="414.33" y="1423.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (37 samples, 0.08%; -0.00%)</title><rect x="827.6" y="1477" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="830.60" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (89 samples, 0.19%; +0.03%)</title><rect x="248.3" y="1381" width="2.2" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="251.33" y="1391.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (19 samples, 0.04%; +0.01%)</title><rect x="802.6" y="1253" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="805.60" y="1263.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (9 samples, 0.02%; +0.00%)</title><rect x="123.9" y="1445" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="126.94" y="1455.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (263 samples, 0.55%; -0.00%)</title><rect x="688.1" y="1653" width="6.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="691.09" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="43.2" y="1637" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="46.18" y="1647.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (10 samples, 0.02%; +0.01%)</title><rect x="1121.0" y="1573" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1123.96" y="1583.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%; -0.00%)</title><rect x="329.3" y="1333" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="332.26" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.16%; +0.01%)</title><rect x="547.5" y="1493" width="1.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="550.52" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%; +0.01%)</title><rect x="1107.8" y="1573" width="0.8" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1110.81" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (255 samples, 0.54%; +0.06%)</title><rect x="131.5" y="1429" width="6.3" height="15.0" fill="rgb(255,128,128)" rx="2" ry="2" />
<text  x="134.49" y="1439.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (5 samples, 0.01%; -0.01%)</title><rect x="22.8" y="1685" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="25.76" y="1695.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (24 samples, 0.05%; +0.00%)</title><rect x="648.6" y="1621" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="651.62" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (39 samples, 0.08%; +0.03%)</title><rect x="137.8" y="1429" width="1.0" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="140.81" y="1439.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (5 samples, 0.01%; -0.00%)</title><rect x="604.2" y="1589" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="607.21" y="1599.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (21 samples, 0.04%; +0.02%)</title><rect x="590.8" y="1573" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="593.81" y="1583.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (6 samples, 0.01%; +0.00%)</title><rect x="709.1" y="1589" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="712.13" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1509" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (14 samples, 0.03%; +0.01%)</title><rect x="412.6" y="1493" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="415.57" y="1503.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (10 samples, 0.02%; +0.00%)</title><rect x="953.9" y="1573" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="956.93" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%; -0.01%)</title><rect x="909.6" y="1509" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="912.57" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (5 samples, 0.01%; +0.01%)</title><rect x="776.2" y="1509" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="779.18" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (122 samples, 0.26%; +0.01%)</title><rect x="1117.8" y="1557" width="3.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1120.79" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (14 samples, 0.03%; -0.00%)</title><rect x="1076.4" y="1493" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1079.41" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (27 samples, 0.06%; -0.01%)</title><rect x="796.8" y="1317" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="799.82" y="1327.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1077" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1087.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (34 samples, 0.07%; +0.01%)</title><rect x="223.6" y="1365" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="226.57" y="1375.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%; -0.02%)</title><rect x="844.9" y="1589" width="0.1" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="847.90" y="1599.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (28 samples, 0.06%; 0.00%)</title><rect x="1140.3" y="1477" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1487.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (11 samples, 0.02%; -0.01%)</title><rect x="552.8" y="1589" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="555.84" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="669.9" y="1605" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="672.90" y="1615.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (6 samples, 0.01%; -0.00%)</title><rect x="1174.6" y="1589" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1177.64" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; 0.00%)</title><rect x="30.4" y="1637" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.37" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="821.1" y="1525" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="824.08" y="1535.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="159.0" y="1397" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="161.97" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.02%; +0.00%)</title><rect x="1106.5" y="1557" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1109.52" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.03%; -0.02%)</title><rect x="732.6" y="1557" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="735.57" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%; -0.00%)</title><rect x="206.6" y="1269" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="209.63" y="1279.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (14 samples, 0.03%; +0.00%)</title><rect x="849.5" y="1509" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="852.48" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (18 samples, 0.04%; -0.02%)</title><rect x="1151.1" y="1621" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1154.07" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="885" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="895.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (20 samples, 0.04%; +0.00%)</title><rect x="832.3" y="1589" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="835.28" y="1599.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (17 samples, 0.04%; +0.02%)</title><rect x="139.5" y="1429" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="142.52" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; -0.01%)</title><rect x="937.8" y="1541" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="940.82" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (32 samples, 0.07%; -0.00%)</title><rect x="31.5" y="1653" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="34.48" y="1663.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; -0.02%)</title><rect x="635.3" y="1621" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="638.26" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1749" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1759.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (133 samples, 0.28%; -0.01%)</title><rect x="851.9" y="1573" width="3.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="854.88" y="1583.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%; +0.01%)</title><rect x="636.5" y="1653" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="639.48" y="1663.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (11 samples, 0.02%; +0.01%)</title><rect x="1107.5" y="1557" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1110.53" y="1567.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (7 samples, 0.01%; -0.03%)</title><rect x="1057.2" y="1509" width="0.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="1060.18" y="1519.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="1099.7" y="1509" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1102.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (7 samples, 0.01%; +0.00%)</title><rect x="1177.5" y="1605" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1180.46" y="1615.5" ></text>
</g>
<g >
<title>create_partitions (274 samples, 0.58%; 0.00%)</title><rect x="14.9" y="1701" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="1711.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (20 samples, 0.04%; +0.01%)</title><rect x="260.8" y="1477" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="263.82" y="1487.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="549.9" y="1573" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="552.87" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; +0.01%)</title><rect x="1022.2" y="1381" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1025.24" y="1391.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (16 samples, 0.03%; -0.00%)</title><rect x="836.7" y="1541" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="839.74" y="1551.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (25 samples, 0.05%; +0.01%)</title><rect x="314.0" y="1333" width="0.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="317.02" y="1343.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%; +0.00%)</title><rect x="563.3" y="1461" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="566.25" y="1471.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (94 samples, 0.20%; +0.01%)</title><rect x="152.7" y="1381" width="2.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="155.66" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (57 samples, 0.12%; -0.00%)</title><rect x="810.2" y="1461" width="1.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="813.15" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (476 samples, 1.00%; 0.00%)</title><rect x="1023.5" y="1397" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1026.48" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.01%)</title><rect x="458.9" y="1461" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="461.91" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (18 samples, 0.04%; +0.03%)</title><rect x="226.4" y="1381" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="229.42" y="1391.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (78 samples, 0.16%; -0.01%)</title><rect x="135.2" y="1413" width="1.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="138.19" y="1423.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,655 samples, 9.78%; +0.00%)</title><rect x="422.7" y="1557" width="115.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="425.70" y="1567.5" >std::function&lt;..</text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (45 samples, 0.09%; -0.01%)</title><rect x="619.3" y="1589" width="1.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="622.30" y="1599.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (40 samples, 0.08%; +0.05%)</title><rect x="67.0" y="1557" width="1.0" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="69.97" y="1567.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="453.9" y="1493" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="456.95" y="1503.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (205 samples, 0.43%; -0.07%)</title><rect x="202.0" y="1301" width="5.1" height="15.0" fill="rgb(125,125,255)" rx="2" ry="2" />
<text  x="205.04" y="1311.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (465 samples, 0.98%; +0.01%)</title><rect x="62.9" y="1605" width="11.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="65.88" y="1615.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (295 samples, 0.62%; -0.02%)</title><rect x="1080.4" y="1429" width="7.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1083.45" y="1439.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (10 samples, 0.02%; -0.00%)</title><rect x="844.6" y="1589" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="847.65" y="1599.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%; 0.00%)</title><rect x="685.0" y="1493" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.99" y="1503.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (12 samples, 0.03%; +0.01%)</title><rect x="269.7" y="1509" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="272.69" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="561.8" y="1429" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="564.79" y="1439.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (42 samples, 0.09%; +0.00%)</title><rect x="652.5" y="1621" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="655.48" y="1631.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.01%)</title><rect x="409.6" y="1461" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="412.59" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (26 samples, 0.05%; +0.01%)</title><rect x="60.9" y="1589" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="63.95" y="1599.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (7 samples, 0.01%; -0.01%)</title><rect x="1163.4" y="1621" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1166.39" y="1631.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%; +0.00%)</title><rect x="858.4" y="1605" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="861.40" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (78 samples, 0.16%; +0.02%)</title><rect x="380.6" y="1317" width="1.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="383.58" y="1327.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (16 samples, 0.03%; -0.01%)</title><rect x="440.4" y="1429" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="443.44" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%; -0.00%)</title><rect x="286.2" y="1525" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="289.22" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (9 samples, 0.02%; +0.00%)</title><rect x="403.6" y="1381" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="406.62" y="1391.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (31 samples, 0.07%; +0.05%)</title><rect x="886.1" y="1557" width="0.8" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="889.10" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (11 samples, 0.02%; +0.00%)</title><rect x="158.1" y="1365" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="161.08" y="1375.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%; +0.01%)</title><rect x="637.5" y="1637" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="640.54" y="1647.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5 samples, 0.01%; 0.00%)</title><rect x="1135.7" y="1589" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1138.66" y="1599.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (8 samples, 0.02%; 0.00%)</title><rect x="407.1" y="1413" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="410.12" y="1423.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="869" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="879.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; -0.01%)</title><rect x="226.9" y="1397" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="229.87" y="1407.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.01%)</title><rect x="899.7" y="1429" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="902.71" y="1439.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (162 samples, 0.34%; -0.01%)</title><rect x="897.3" y="1445" width="4.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="900.25" y="1455.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (8 samples, 0.02%; +0.02%)</title><rect x="624.0" y="1605" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="626.99" y="1615.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (9 samples, 0.02%; +0.00%)</title><rect x="248.1" y="1381" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="251.06" y="1391.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%; +0.02%)</title><rect x="1170.3" y="1621" width="0.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1173.30" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,852 samples, 3.89%; -0.05%)</title><rect x="1005.6" y="1461" width="45.9" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="1008.59" y="1471.5" >serv..</text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (5 samples, 0.01%; +0.00%)</title><rect x="716.4" y="1637" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="719.36" y="1647.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; 0.00%)</title><rect x="631.7" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="634.67" y="1647.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (104 samples, 0.22%; +0.00%)</title><rect x="659.6" y="1653" width="2.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="662.62" y="1663.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%; -0.00%)</title><rect x="855.5" y="1605" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="858.45" y="1615.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (26 samples, 0.05%; +0.00%)</title><rect x="959.3" y="1525" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="962.25" y="1535.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (962 samples, 2.02%; -0.01%)</title><rect x="786.1" y="1461" width="23.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="789.14" y="1471.5" >s..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (57 samples, 0.12%; +0.00%)</title><rect x="402.1" y="1381" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="405.06" y="1391.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (7 samples, 0.01%; -0.01%)</title><rect x="451.5" y="1445" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="454.50" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (23 samples, 0.05%; 0.00%)</title><rect x="802.5" y="1269" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="805.55" y="1279.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (27 samples, 0.06%; 0.00%)</title><rect x="1140.3" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1455.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (21 samples, 0.04%; +0.00%)</title><rect x="803.1" y="1269" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="806.12" y="1279.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="713.1" y="1669" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="716.07" y="1679.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (30 samples, 0.06%; +0.04%)</title><rect x="1116.4" y="1557" width="0.7" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="1119.38" y="1567.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (102 samples, 0.21%; -0.00%)</title><rect x="816.8" y="1509" width="2.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="819.77" y="1519.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (20 samples, 0.04%; +0.01%)</title><rect x="168.9" y="1301" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="171.94" y="1311.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (14 samples, 0.03%; +0.03%)</title><rect x="1099.1" y="1493" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1102.13" y="1503.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (16 samples, 0.03%; +0.01%)</title><rect x="601.9" y="1605" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="604.93" y="1615.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (197 samples, 0.41%; +0.01%)</title><rect x="727.2" y="1541" width="4.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="730.19" y="1551.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (12 samples, 0.03%; -0.00%)</title><rect x="445.6" y="1477" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="448.60" y="1487.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (11 samples, 0.02%; +0.01%)</title><rect x="1079.6" y="1477" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1082.56" y="1487.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.09%; 0.00%)</title><rect x="738.1" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="741.07" y="1567.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (611 samples, 1.28%; 0.00%)</title><rect x="789.7" y="1429" width="15.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="792.66" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (85 samples, 0.18%; +0.04%)</title><rect x="71.6" y="1541" width="2.1" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="74.60" y="1551.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (26 samples, 0.05%; +0.03%)</title><rect x="1104.6" y="1525" width="0.6" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="1107.59" y="1535.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (22 samples, 0.05%; -0.01%)</title><rect x="1173.9" y="1589" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1176.89" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; -0.00%)</title><rect x="189.9" y="1269" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="192.95" y="1279.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (8 samples, 0.02%; +0.01%)</title><rect x="241.2" y="1365" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="244.19" y="1375.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,544 samples, 9.54%; -0.03%)</title><rect x="296.8" y="1461" width="112.6" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="299.85" y="1471.5" >seastar::repe..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (83 samples, 0.17%; +0.00%)</title><rect x="828.9" y="1509" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="831.94" y="1519.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,382 samples, 9.20%; -0.02%)</title><rect x="143.1" y="1445" width="108.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="146.12" y="1455.5" >logalloc::all..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (132 samples, 0.28%; -0.04%)</title><rect x="1060.4" y="1477" width="3.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1063.40" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (24 samples, 0.05%; +0.00%)</title><rect x="139.9" y="1429" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="142.94" y="1439.5" ></text>
</g>
<g >
<title>perf_simple_que (47,619 samples, 100.00%; 0.00%)</title><rect x="10.0" y="1813" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1823.5" >perf_simple_que</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,926 samples, 10.34%; -0.01%)</title><rect x="291.2" y="1525" width="122.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="294.17" y="1535.5" >flat_mutation_r..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (109 samples, 0.23%; +0.01%)</title><rect x="234.8" y="1381" width="2.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="237.80" y="1391.5" ></text>
</g>
<g >
<title>dht::tri_compare (8 samples, 0.02%; -0.01%)</title><rect x="1094.3" y="1413" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1097.28" y="1423.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (6 samples, 0.01%; -0.01%)</title><rect x="649.1" y="1573" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="652.06" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%; 0.00%)</title><rect x="1077.1" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1080.08" y="1503.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (258 samples, 0.54%; -0.02%)</title><rect x="436.4" y="1461" width="6.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="439.43" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%; -0.00%)</title><rect x="275.2" y="1461" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="278.24" y="1471.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (38 samples, 0.08%; +0.01%)</title><rect x="411.5" y="1429" width="1.0" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="414.53" y="1439.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (8 samples, 0.02%; +0.01%)</title><rect x="953.7" y="1573" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="956.73" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1685" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1695.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (41 samples, 0.09%; -0.00%)</title><rect x="958.9" y="1541" width="1.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="961.88" y="1551.5" ></text>
</g>
<g >
<title>__start_context (284 samples, 0.60%; 0.00%)</title><rect x="14.6" y="1781" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.61" y="1791.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (5 samples, 0.01%; +0.00%)</title><rect x="688.0" y="1653" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="690.97" y="1663.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1471.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (55 samples, 0.12%; -0.00%)</title><rect x="758.7" y="1525" width="1.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="761.69" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (125 samples, 0.26%; -0.01%)</title><rect x="839.6" y="1573" width="3.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="842.57" y="1583.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (40 samples, 0.08%; +0.01%)</title><rect x="813.5" y="1477" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="816.55" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (6 samples, 0.01%; +0.01%)</title><rect x="1035.5" y="1397" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1038.48" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (48 samples, 0.10%; +0.01%)</title><rect x="588.7" y="1589" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="591.65" y="1599.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,198 samples, 2.52%; +0.03%)</title><rect x="782.6" y="1493" width="29.6" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="785.55" y="1503.5" >st..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (15 samples, 0.03%; +0.00%)</title><rect x="893.0" y="1477" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="895.99" y="1487.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.00%)</title><rect x="58.2" y="1621" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="61.22" y="1631.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (49 samples, 0.10%; +0.03%)</title><rect x="100.9" y="1605" width="1.2" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="103.89" y="1615.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (57 samples, 0.12%; +0.01%)</title><rect x="753.2" y="1557" width="1.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="756.24" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%; -0.01%)</title><rect x="690.5" y="1621" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="693.52" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (44 samples, 0.09%; -0.03%)</title><rect x="1166.8" y="1653" width="1.1" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="1169.83" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; 0.00%)</title><rect x="1140.1" y="1621" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.07" y="1631.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (231 samples, 0.49%; +0.01%)</title><rect x="743.6" y="1541" width="5.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="746.60" y="1551.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (21 samples, 0.04%; +0.03%)</title><rect x="207.5" y="1333" width="0.6" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="210.54" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%; +0.01%)</title><rect x="503.8" y="1349" width="1.0" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="506.83" y="1359.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (11 samples, 0.02%; 0.00%)</title><rect x="1141.2" y="1445" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.18" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (6 samples, 0.01%; +0.00%)</title><rect x="619.9" y="1557" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="622.92" y="1567.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1445" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (320 samples, 0.67%; -0.02%)</title><rect x="435.0" y="1477" width="7.9" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="437.99" y="1487.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (23 samples, 0.05%; +0.01%)</title><rect x="928.8" y="1557" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="931.85" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.00%)</title><rect x="938.9" y="1557" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="941.86" y="1567.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (27 samples, 0.06%; +0.00%)</title><rect x="561.3" y="1461" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="564.27" y="1471.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (8 samples, 0.02%; -0.02%)</title><rect x="278.3" y="1461" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="281.26" y="1471.5" ></text>
</g>
<g >
<title>auth::resource::resource (54 samples, 0.11%; 0.00%)</title><rect x="769.9" y="1541" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="772.89" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (106 samples, 0.22%; -0.01%)</title><rect x="1118.2" y="1541" width="2.6" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1121.19" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="680.6" y="1653" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="683.63" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; 0.00%)</title><rect x="601.7" y="1605" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="604.69" y="1615.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (5 samples, 0.01%; +0.00%)</title><rect x="810.0" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="813.03" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (161 samples, 0.34%; -0.02%)</title><rect x="1090.5" y="1429" width="4.0" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1093.49" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (43 samples, 0.09%; +0.02%)</title><rect x="194.1" y="1237" width="1.1" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="197.11" y="1247.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%; -0.01%)</title><rect x="694.8" y="1653" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="697.83" y="1663.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (9 samples, 0.02%; +0.00%)</title><rect x="567.0" y="1445" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="569.99" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.00%)</title><rect x="414.8" y="1493" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="417.80" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (10 samples, 0.02%; +0.01%)</title><rect x="60.3" y="1605" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="63.33" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="58.9" y="1605" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="61.87" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="445.4" y="1477" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="448.40" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="1122.3" y="1573" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1125.33" y="1583.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (9 samples, 0.02%; +0.01%)</title><rect x="728.4" y="1461" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="731.36" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%; +0.01%)</title><rect x="634.5" y="1637" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="637.52" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (29 samples, 0.06%; 0.00%)</title><rect x="1155.2" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.18" y="1631.5" ></text>
</g>
<g >
<title>schema::column_at (52 samples, 0.11%; -0.03%)</title><rect x="205.3" y="1269" width="1.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="208.34" y="1279.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (42 samples, 0.09%; +0.01%)</title><rect x="70.1" y="1573" width="1.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="73.07" y="1583.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,056 samples, 4.32%; -0.06%)</title><rect x="165.1" y="1365" width="51.0" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="168.14" y="1375.5" >parti..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (29 samples, 0.06%; -0.01%)</title><rect x="657.8" y="1653" width="0.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="660.79" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1269" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1279.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="981" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="991.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="566.1" y="1429" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="569.13" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (65 samples, 0.14%; -0.00%)</title><rect x="1168.0" y="1653" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1171.02" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; +0.01%)</title><rect x="154.8" y="1349" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="157.79" y="1359.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (26 samples, 0.05%; -0.01%)</title><rect x="827.8" y="1461" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="830.82" y="1471.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (76 samples, 0.16%; +0.01%)</title><rect x="791.3" y="1365" width="1.9" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="794.32" y="1375.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (5 samples, 0.01%; +0.00%)</title><rect x="691.1" y="1605" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="694.11" y="1615.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%; 0.00%)</title><rect x="684.9" y="1509" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.92" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (26 samples, 0.05%; 0.00%)</title><rect x="609.2" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="612.24" y="1615.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (9 samples, 0.02%; +0.01%)</title><rect x="14.4" y="1781" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="17.39" y="1791.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="782.0" y="1461" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="784.98" y="1471.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%; -0.00%)</title><rect x="987.0" y="1461" width="2.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="989.98" y="1471.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%; -0.01%)</title><rect x="1062.1" y="1429" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1065.09" y="1439.5" ></text>
</g>
<g >
<title>auth::resource::parent (91 samples, 0.19%; -0.01%)</title><rect x="779.9" y="1493" width="2.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="782.92" y="1503.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (29 samples, 0.06%; -0.01%)</title><rect x="654.5" y="1653" width="0.7" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="657.49" y="1663.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (17 samples, 0.04%; -0.02%)</title><rect x="603.6" y="1573" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="606.62" y="1583.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (9 samples, 0.02%; +0.02%)</title><rect x="534.5" y="1461" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="537.51" y="1471.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="639.9" y="1653" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="642.94" y="1663.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (115 samples, 0.24%; +0.05%)</title><rect x="302.6" y="1413" width="2.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="305.62" y="1423.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (26 samples, 0.05%; -0.00%)</title><rect x="794.5" y="1349" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="797.52" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.01%; -0.01%)</title><rect x="606.7" y="1605" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="609.74" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1583.5" ></text>
</g>
<g >
<title>posix_memalign (134 samples, 0.28%; -0.01%)</title><rect x="186.5" y="1221" width="3.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="189.53" y="1231.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (61 samples, 0.13%; +0.01%)</title><rect x="295.2" y="1445" width="1.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="298.16" y="1455.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="329.4" y="1333" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="332.41" y="1343.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (193 samples, 0.41%; 0.00%)</title><rect x="15.4" y="1589" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.43" y="1599.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.02%; +0.00%)</title><rect x="1109.7" y="1541" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1112.71" y="1551.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (6 samples, 0.01%; +0.01%)</title><rect x="167.2" y="1349" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="170.15" y="1359.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%; 0.00%)</title><rect x="45.5" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="48.51" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (7 samples, 0.01%; -0.00%)</title><rect x="865.9" y="1541" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="868.86" y="1551.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%; +0.01%)</title><rect x="704.1" y="1589" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="707.15" y="1599.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.01%; -0.00%)</title><rect x="819.5" y="1557" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="822.47" y="1567.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (12 samples, 0.03%; -0.01%)</title><rect x="746.5" y="1445" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="749.50" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1439.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%; +0.00%)</title><rect x="206.8" y="1285" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="209.77" y="1295.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%; +0.01%)</title><rect x="53.9" y="1637" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="56.91" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,819 samples, 8.02%; -0.05%)</title><rect x="301.2" y="1429" width="94.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="304.23" y="1439.5" >mutation_fr..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (85 samples, 0.18%; +0.03%)</title><rect x="1057.7" y="1477" width="2.1" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="1060.73" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="997" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1007.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (23 samples, 0.05%; -0.00%)</title><rect x="818.0" y="1461" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="820.96" y="1471.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.04%; +0.00%)</title><rect x="482.8" y="1349" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="485.84" y="1359.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (5 samples, 0.01%; -0.01%)</title><rect x="484.1" y="1493" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="487.13" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (14 samples, 0.03%; -0.01%)</title><rect x="437.3" y="1429" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="440.30" y="1439.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (22 samples, 0.05%; 0.00%)</title><rect x="507.4" y="1349" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="510.37" y="1359.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1653" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1663.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (10 samples, 0.02%; -0.00%)</title><rect x="241.4" y="1365" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="244.39" y="1375.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%; +0.01%)</title><rect x="756.0" y="1573" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="759.04" y="1583.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (12 samples, 0.03%; -0.03%)</title><rect x="549.6" y="1557" width="0.3" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="552.57" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%; 0.00%)</title><rect x="61.8" y="1573" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="64.81" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (6 samples, 0.01%; +0.01%)</title><rect x="883.1" y="1589" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="886.13" y="1599.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%; 0.00%)</title><rect x="729.0" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.03" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="136.1" y="1381" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="139.10" y="1391.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (74 samples, 0.16%; -0.02%)</title><rect x="516.6" y="1493" width="1.8" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="519.57" y="1503.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (29 samples, 0.06%; +0.00%)</title><rect x="18.3" y="1477" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="21.28" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; -0.01%)</title><rect x="976.1" y="1493" width="0.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="979.10" y="1503.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (130 samples, 0.27%; 0.00%)</title><rect x="728.8" y="1509" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="731.75" y="1519.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (7 samples, 0.01%; -0.04%)</title><rect x="237.7" y="1365" width="0.1" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="240.67" y="1375.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (12 samples, 0.03%; -0.00%)</title><rect x="317.1" y="1349" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="320.12" y="1359.5" ></text>
</g>
<g >
<title>make_combined_reader (758 samples, 1.59%; +0.00%)</title><rect x="434.1" y="1493" width="18.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="437.13" y="1503.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (30 samples, 0.06%; +0.01%)</title><rect x="389.1" y="1381" width="0.8" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="392.13" y="1391.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; -0.02%)</title><rect x="1147.8" y="1653" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1150.75" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%; -0.00%)</title><rect x="1107.2" y="1541" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1110.16" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (5 samples, 0.01%; +0.01%)</title><rect x="533.5" y="1429" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="536.52" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (26 samples, 0.05%; -0.00%)</title><rect x="130.5" y="1413" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="133.53" y="1423.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1141.5" y="1477" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.46" y="1487.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,433 samples, 11.41%; -0.05%)</title><rect x="970.6" y="1541" width="134.6" height="15.0" fill="rgb(144,144,255)" rx="2" ry="2" />
<text  x="973.60" y="1551.5" >service::storage_..</text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (94 samples, 0.20%; -0.03%)</title><rect x="238.9" y="1365" width="2.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="241.86" y="1375.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (123 samples, 0.26%; -0.00%)</title><rect x="350.0" y="1333" width="3.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="352.95" y="1343.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%; -0.00%)</title><rect x="1100.6" y="1509" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1103.65" y="1519.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%; -0.01%)</title><rect x="94.6" y="1589" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="97.60" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (888 samples, 1.86%; +0.00%)</title><rect x="1077.6" y="1509" width="22.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1080.58" y="1519.5" >s..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,427 samples, 7.20%; +0.03%)</title><rect x="145.8" y="1429" width="84.9" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="148.82" y="1439.5" >partition..</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (61 samples, 0.13%; +0.00%)</title><rect x="958.4" y="1573" width="1.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="961.41" y="1583.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (52 samples, 0.11%; +0.10%)</title><rect x="94.8" y="1589" width="1.3" height="15.0" fill="rgb(255,76,76)" rx="2" ry="2" />
<text  x="97.85" y="1599.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (8 samples, 0.02%; -0.02%)</title><rect x="893.8" y="1461" width="0.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="896.76" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (8 samples, 0.02%; -0.01%)</title><rect x="623.1" y="1557" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="626.12" y="1567.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (100 samples, 0.21%; -0.01%)</title><rect x="531.9" y="1445" width="2.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="534.91" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%; +0.04%)</title><rect x="494.4" y="1445" width="0.8" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="497.36" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (17 samples, 0.04%; +0.02%)</title><rect x="983.5" y="1525" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="986.51" y="1535.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (18 samples, 0.04%; +0.01%)</title><rect x="222.0" y="1333" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="224.99" y="1343.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%; +0.01%)</title><rect x="791.8" y="1317" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="794.82" y="1327.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1525" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.02%)</title><rect x="521.1" y="1493" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="524.05" y="1503.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (32 samples, 0.07%; +0.01%)</title><rect x="592.5" y="1557" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="595.49" y="1567.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (6 samples, 0.01%; -0.00%)</title><rect x="982.0" y="1525" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="984.95" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="515.9" y="1493" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="518.87" y="1503.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (23 samples, 0.05%; -0.00%)</title><rect x="573.9" y="1509" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="576.88" y="1519.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (193 samples, 0.41%; -0.02%)</title><rect x="1027.6" y="1349" width="4.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1030.60" y="1359.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (171 samples, 0.36%; +0.00%)</title><rect x="246.9" y="1413" width="4.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="249.94" y="1423.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%; -0.00%)</title><rect x="574.7" y="1509" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="577.65" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,866 samples, 10.22%; -0.05%)</title><rect x="291.9" y="1493" width="120.6" height="15.0" fill="rgb(141,141,255)" rx="2" ry="2" />
<text  x="294.94" y="1503.5" >seastar::intern..</text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%; -0.11%)</title><rect x="560.2" y="1477" width="0.2" height="15.0" fill="rgb(70,70,255)" rx="2" ry="2" />
<text  x="563.20" y="1487.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (11 samples, 0.02%; +0.01%)</title><rect x="797.1" y="1285" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="800.12" y="1295.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (8 samples, 0.02%; +0.01%)</title><rect x="569.0" y="1429" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="571.95" y="1439.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (15 samples, 0.03%; +0.00%)</title><rect x="882.2" y="1589" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="885.16" y="1599.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (49 samples, 0.10%; -0.01%)</title><rect x="68.0" y="1557" width="1.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="71.01" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (7 samples, 0.01%; 0.00%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.78" y="95.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (21 samples, 0.04%; +0.04%)</title><rect x="932.4" y="1557" width="0.6" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="935.44" y="1567.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; +0.00%)</title><rect x="458.6" y="1477" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="461.56" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="575.3" y="1493" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="578.29" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (20 samples, 0.04%; -0.00%)</title><rect x="637.2" y="1653" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="640.19" y="1663.5" ></text>
</g>
<g >
<title>row::row (1,291 samples, 2.71%; -0.01%)</title><rect x="168.5" y="1317" width="32.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="171.54" y="1327.5" >ro..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (114 samples, 0.24%; -0.01%)</title><rect x="645.6" y="1637" width="2.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="648.57" y="1647.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%; +0.03%)</title><rect x="563.6" y="1461" width="1.2" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="566.57" y="1471.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.04%; -0.01%)</title><rect x="1168.4" y="1637" width="0.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1171.42" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="544.9" y="1509" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="547.94" y="1519.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (80 samples, 0.17%; -0.01%)</title><rect x="294.8" y="1461" width="2.0" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="297.82" y="1471.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (12 samples, 0.03%; -0.01%)</title><rect x="598.6" y="1573" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="601.61" y="1583.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (7 samples, 0.01%; -0.04%)</title><rect x="873.6" y="1621" width="0.1" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="876.57" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="664.7" y="1637" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="667.75" y="1647.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,207 samples, 4.63%; -0.04%)</title><rect x="998.7" y="1493" width="54.6" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="1001.65" y="1503.5" >servi..</text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1052.7" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1055.75" y="1471.5" ></text>
</g>
<g >
<title>partition_entry::read (60 samples, 0.13%; -0.01%)</title><rect x="516.8" y="1477" width="1.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="519.82" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (112 samples, 0.24%; -0.03%)</title><rect x="219.7" y="1349" width="2.7" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="222.66" y="1359.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%; 0.00%)</title><rect x="17.7" y="1493" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.66" y="1503.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%; 0.00%)</title><rect x="838.4" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.38" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (416 samples, 0.87%; +0.02%)</title><rect x="1067.0" y="1509" width="10.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1069.97" y="1519.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (14 samples, 0.03%; +0.01%)</title><rect x="219.3" y="1349" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="222.26" y="1359.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (111 samples, 0.23%; -0.00%)</title><rect x="729.2" y="1477" width="2.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="732.23" y="1487.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (54 samples, 0.11%; 0.00%)</title><rect x="15.5" y="1541" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.50" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%; -0.01%)</title><rect x="631.9" y="1653" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="634.89" y="1663.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (141 samples, 0.30%; +0.00%)</title><rect x="437.8" y="1445" width="3.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="440.84" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (39 samples, 0.08%; +0.02%)</title><rect x="692.7" y="1621" width="1.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="695.72" y="1631.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,614 samples, 3.39%; -0.03%)</title><rect x="775.5" y="1525" width="40.0" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="778.49" y="1535.5" >ser..</text>
</g>
<g >
<title>managed_bytes::operator= (37 samples, 0.08%; -0.01%)</title><rect x="295.7" y="1429" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="298.68" y="1439.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (38 samples, 0.08%; -0.02%)</title><rect x="1073.6" y="1461" width="0.9" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1076.56" y="1471.5" ></text>
</g>
<g >
<title>validation::validate_column_family (11 samples, 0.02%; +0.02%)</title><rect x="831.6" y="1573" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="834.64" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1125" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1135.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (51 samples, 0.11%; +0.01%)</title><rect x="10.4" y="1749" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="13.37" y="1759.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.01%)</title><rect x="819.9" y="1541" width="0.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="822.92" y="1551.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (138 samples, 0.29%; +0.01%)</title><rect x="1113.0" y="1557" width="3.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1115.96" y="1567.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (255 samples, 0.54%; 0.00%)</title><rect x="15.1" y="1669" width="6.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.10" y="1679.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.01%)</title><rect x="143.4" y="1429" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="146.44" y="1439.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (216 samples, 0.45%; -0.00%)</title><rect x="726.7" y="1557" width="5.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="729.72" y="1567.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (118 samples, 0.25%; +0.01%)</title><rect x="1028.6" y="1333" width="2.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1031.59" y="1343.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (9 samples, 0.02%; +0.00%)</title><rect x="245.9" y="1397" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="248.85" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1493" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (5 samples, 0.01%; -0.01%)</title><rect x="260.2" y="1445" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="263.22" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (93 samples, 0.20%; -0.02%)</title><rect x="947.7" y="1557" width="2.3" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="950.66" y="1567.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%; -0.01%)</title><rect x="509.0" y="1381" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="512.01" y="1391.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%; -0.02%)</title><rect x="624.2" y="1637" width="0.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="627.18" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="865.8" y="1605" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.78" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (13 samples, 0.03%; +0.00%)</title><rect x="745.7" y="1461" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="748.65" y="1471.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%; -0.00%)</title><rect x="652.0" y="1621" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="654.96" y="1631.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (6 samples, 0.01%; +0.00%)</title><rect x="945.6" y="1541" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="948.60" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%; +0.01%)</title><rect x="792.6" y="1301" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="795.56" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.00%)</title><rect x="416.7" y="1525" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="419.73" y="1535.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (51 samples, 0.11%; +0.03%)</title><rect x="948.7" y="1541" width="1.3" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="951.70" y="1551.5" ></text>
</g>
<g >
<title>operator new (108 samples, 0.23%; 0.00%)</title><rect x="966.7" y="1541" width="2.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="969.71" y="1551.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (5 samples, 0.01%; 0.00%)</title><rect x="623.6" y="1605" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="626.61" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (27 samples, 0.06%; -0.01%)</title><rect x="257.7" y="1445" width="0.7" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="260.70" y="1455.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (20 samples, 0.04%; -0.00%)</title><rect x="39.3" y="1621" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="42.29" y="1631.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (10 samples, 0.02%; +0.01%)</title><rect x="753.0" y="1557" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="755.96" y="1567.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%; +0.00%)</title><rect x="645.4" y="1637" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="648.42" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (24 samples, 0.05%; -0.02%)</title><rect x="864.9" y="1669" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="867.92" y="1679.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%; -0.01%)</title><rect x="1075.9" y="1477" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1078.89" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1189" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1199.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (45 samples, 0.09%; 0.00%)</title><rect x="945.4" y="1557" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="948.43" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (9 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.73" y="111.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (51 samples, 0.11%; +0.01%)</title><rect x="366.3" y="1349" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="369.28" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (34 samples, 0.07%; +0.00%)</title><rect x="1177.0" y="1669" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1180.04" y="1679.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,143 samples, 2.40%; -0.04%)</title><rect x="487.6" y="1493" width="28.3" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="490.55" y="1503.5" >ma..</text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; +0.00%)</title><rect x="561.4" y="1445" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="564.42" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (28 samples, 0.06%; -0.00%)</title><rect x="513.3" y="1445" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="516.27" y="1455.5" ></text>
</g>
<g >
<title>free (41 samples, 0.09%; +0.01%)</title><rect x="402.3" y="1365" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="405.33" y="1375.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (22 samples, 0.05%; 0.00%)</title><rect x="147.1" y="1413" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="150.13" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; -0.00%)</title><rect x="687.5" y="1637" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="690.52" y="1647.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,290 samples, 13.21%; +0.04%)</title><rect x="114.2" y="1525" width="155.8" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="117.17" y="1535.5" >mutation_fragment_me..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (484 samples, 1.02%; -0.01%)</title><rect x="272.3" y="1509" width="12.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="275.34" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (22 samples, 0.05%; +0.02%)</title><rect x="857.0" y="1621" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="859.99" y="1631.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (119 samples, 0.25%; -0.01%)</title><rect x="531.6" y="1461" width="2.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="534.56" y="1471.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%; -0.02%)</title><rect x="641.1" y="1653" width="0.6" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="644.11" y="1663.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (22 samples, 0.05%; +0.00%)</title><rect x="560.7" y="1461" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="563.67" y="1471.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%; -0.00%)</title><rect x="1052.9" y="1461" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1055.87" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (5 samples, 0.01%; -0.01%)</title><rect x="982.2" y="1525" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="985.17" y="1535.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%; +0.01%)</title><rect x="659.7" y="1637" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="662.74" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (11 samples, 0.02%; +0.00%)</title><rect x="690.7" y="1621" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="693.69" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (80 samples, 0.17%; +0.00%)</title><rect x="677.5" y="1637" width="2.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="680.51" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (12 samples, 0.03%; 0.00%)</title><rect x="1149.8" y="1653" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1152.81" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%; 0.00%)</title><rect x="1033.1" y="1365" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1036.10" y="1375.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (39 samples, 0.08%; -0.00%)</title><rect x="627.9" y="1653" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="630.90" y="1663.5" ></text>
</g>
<g >
<title>free (92 samples, 0.19%; +0.00%)</title><rect x="399.1" y="1349" width="2.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="402.14" y="1359.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="634.3" y="1621" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.27" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%; 0.00%)</title><rect x="246.2" y="1413" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="249.22" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (7 samples, 0.01%; +0.01%)</title><rect x="515.1" y="1461" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="518.08" y="1471.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (128 samples, 0.27%; +0.01%)</title><rect x="1072.1" y="1477" width="3.1" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1075.07" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; -0.01%)</title><rect x="1044.9" y="1445" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1047.89" y="1455.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (57 samples, 0.12%; +0.03%)</title><rect x="1162.0" y="1621" width="1.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1164.97" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (83 samples, 0.17%; -0.02%)</title><rect x="1097.1" y="1493" width="2.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1100.08" y="1503.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (217 samples, 0.46%; -0.02%)</title><rect x="1127.9" y="1589" width="5.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1130.88" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="820.6" y="1541" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="823.59" y="1551.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (38 samples, 0.08%; +0.02%)</title><rect x="578.0" y="1525" width="0.9" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="581.00" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (120 samples, 0.25%; -0.01%)</title><rect x="176.7" y="1269" width="3.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="179.69" y="1279.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (6 samples, 0.01%; -0.01%)</title><rect x="832.6" y="1557" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="835.58" y="1567.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; -0.00%)</title><rect x="808.0" y="1381" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="811.02" y="1391.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.12%; -0.01%)</title><rect x="558.6" y="1493" width="1.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="561.62" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%; +0.01%)</title><rect x="1060.2" y="1477" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1063.18" y="1487.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,013 samples, 23.13%; -0.01%)</title><rect x="867.4" y="1653" width="272.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="870.37" y="1663.5" >seastar::concrete_execution_stage&lt;se..</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (43 samples, 0.09%; +0.01%)</title><rect x="220.9" y="1317" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="223.92" y="1327.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (46 samples, 0.10%; -0.00%)</title><rect x="213.0" y="1317" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="215.97" y="1327.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (18 samples, 0.04%; +0.01%)</title><rect x="516.1" y="1493" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="519.12" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%; +0.01%)</title><rect x="1151.6" y="1653" width="0.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1154.59" y="1663.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%; +0.02%)</title><rect x="701.4" y="1621" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="704.42" y="1631.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1375.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (38 samples, 0.08%; -0.01%)</title><rect x="650.8" y="1637" width="1.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="653.82" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%; +0.01%)</title><rect x="1159.7" y="1589" width="1.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1162.69" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (43 samples, 0.09%; -0.00%)</title><rect x="820.7" y="1541" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="823.71" y="1551.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (54 samples, 0.11%; +0.02%)</title><rect x="195.2" y="1285" width="1.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="198.23" y="1295.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (170 samples, 0.36%; +0.01%)</title><rect x="950.0" y="1589" width="4.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="952.99" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; -0.02%)</title><rect x="401.7" y="1365" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="404.66" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (107 samples, 0.22%; -0.03%)</title><rect x="309.9" y="1349" width="2.6" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="312.88" y="1359.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (96 samples, 0.20%; -0.01%)</title><rect x="190.1" y="1285" width="2.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="193.10" y="1295.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (43 samples, 0.09%; -0.00%)</title><rect x="608.1" y="1605" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="611.10" y="1615.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%; 0.00%)</title><rect x="442.7" y="1429" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="445.70" y="1439.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (5 samples, 0.01%; -0.00%)</title><rect x="332.0" y="1349" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="334.98" y="1359.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (5 samples, 0.01%; -0.01%)</title><rect x="23.5" y="1685" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="26.46" y="1695.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (29 samples, 0.06%; -0.01%)</title><rect x="931.5" y="1525" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="934.48" y="1535.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.02%)</title><rect x="482.2" y="1349" width="0.1" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="485.17" y="1359.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (5 samples, 0.01%; -0.01%)</title><rect x="595.6" y="1589" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="598.59" y="1599.5" ></text>
</g>
<g >
<title>bytes_ostream::view (5 samples, 0.01%; +0.01%)</title><rect x="595.5" y="1573" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="598.47" y="1583.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; -0.01%)</title><rect x="515.7" y="1477" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="518.65" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (15 samples, 0.03%; -0.03%)</title><rect x="485.1" y="1493" width="0.4" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="488.15" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; +0.00%)</title><rect x="1030.9" y="1301" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1033.92" y="1311.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%; +0.02%)</title><rect x="546.5" y="1509" width="0.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="549.50" y="1519.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (20 samples, 0.04%; +0.00%)</title><rect x="20.5" y="1573" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="23.46" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%; +0.01%)</title><rect x="1043.2" y="1429" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1046.16" y="1439.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (47 samples, 0.10%; +0.07%)</title><rect x="298.6" y="1429" width="1.2" height="15.0" fill="rgb(255,120,120)" rx="2" ry="2" />
<text  x="301.63" y="1439.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%; -0.00%)</title><rect x="395.2" y="1381" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="398.20" y="1391.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1029" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1039.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="391.1" y="1397" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="394.11" y="1407.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (29 samples, 0.06%; +0.05%)</title><rect x="52.1" y="1637" width="0.7" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="55.13" y="1647.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (28 samples, 0.06%; -0.00%)</title><rect x="573.8" y="1525" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="576.81" y="1535.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (12 samples, 0.03%; +0.01%)</title><rect x="708.7" y="1573" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="711.66" y="1583.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (6 samples, 0.01%; 0.00%)</title><rect x="710.8" y="1669" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="713.76" y="1679.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,659 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1749" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1759.5" >seastar::app_template::run</text>
</g>
<g >
<title>row::compact_and_expire (9 samples, 0.02%; +0.02%)</title><rect x="390.8" y="1397" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="393.76" y="1407.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (21 samples, 0.04%; +0.02%)</title><rect x="521.8" y="1493" width="0.5" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="524.82" y="1503.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (130 samples, 0.27%; -0.02%)</title><rect x="796.4" y="1333" width="3.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="799.38" y="1343.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="490.0" y="1445" width="0.6" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="492.98" y="1455.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (25 samples, 0.05%; +0.01%)</title><rect x="135.6" y="1397" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="138.61" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (84 samples, 0.18%; -0.01%)</title><rect x="812.5" y="1493" width="2.1" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="815.48" y="1503.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="750.9" y="1573" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="753.91" y="1583.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.01%)</title><rect x="527.3" y="1477" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="530.27" y="1487.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (18 samples, 0.04%; +0.01%)</title><rect x="910.0" y="1525" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="913.04" y="1535.5" ></text>
</g>
<g >
<title>__strlen_avx2 (106 samples, 0.22%; -0.04%)</title><rect x="1016.7" y="1413" width="2.6" height="15.0" fill="rgb(160,160,255)" rx="2" ry="2" />
<text  x="1019.72" y="1423.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (57 samples, 0.12%; 0.00%)</title><rect x="223.0" y="1397" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="226.00" y="1407.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,659 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1765" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1775.5" >seastar::app_template::run</text>
</g>
<g >
<title>cql3::constants::marker::to_expression (7 samples, 0.01%; -0.03%)</title><rect x="889.9" y="1509" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="892.87" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (14 samples, 0.03%; +0.01%)</title><rect x="704.6" y="1573" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="707.57" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (14 samples, 0.03%; -0.00%)</title><rect x="585.0" y="1541" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="587.98" y="1551.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%; -0.03%)</title><rect x="903.6" y="1445" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="906.60" y="1455.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (9 samples, 0.02%; +0.00%)</title><rect x="388.7" y="1349" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="391.71" y="1359.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,130 samples, 2.37%; -0.02%)</title><rect x="783.6" y="1477" width="28.0" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="786.57" y="1487.5" >a..</text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,628 samples, 9.72%; +0.01%)</title><rect x="423.3" y="1541" width="114.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="426.30" y="1551.5" >std::_Function..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (43 samples, 0.09%; -0.02%)</title><rect x="912.0" y="1525" width="1.1" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="915.00" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (44 samples, 0.09%; 0.00%)</title><rect x="787.9" y="1413" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="790.93" y="1423.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (13 samples, 0.03%; -0.00%)</title><rect x="1100.9" y="1525" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1103.87" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="1114.9" y="1525" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1117.87" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (19 samples, 0.04%; +0.02%)</title><rect x="550.9" y="1589" width="0.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="553.86" y="1599.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%; -0.00%)</title><rect x="487.3" y="1493" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="490.30" y="1503.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (64 samples, 0.13%; +0.00%)</title><rect x="1164.0" y="1637" width="1.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1166.96" y="1647.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (91 samples, 0.19%; +0.00%)</title><rect x="835.0" y="1589" width="2.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="838.01" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%; +0.01%)</title><rect x="536.8" y="1477" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="539.81" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (348 samples, 0.73%; +0.01%)</title><rect x="252.2" y="1477" width="8.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="255.19" y="1487.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (46 samples, 0.10%; +0.01%)</title><rect x="952.0" y="1557" width="1.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="954.97" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; +0.01%)</title><rect x="628.7" y="1621" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="631.67" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.01%)</title><rect x="1159.1" y="1525" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1162.08" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (12 samples, 0.03%; +0.01%)</title><rect x="982.8" y="1525" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="985.79" y="1535.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%; +0.01%)</title><rect x="33.0" y="1637" width="0.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="35.97" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (6 samples, 0.01%; +0.01%)</title><rect x="1145.8" y="1669" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1148.82" y="1679.5" ></text>
</g>
<g >
<title>all (47,620 samples, 100%)</title><rect x="10.0" y="1829" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="1839.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (104 samples, 0.22%; -0.01%)</title><rect x="71.1" y="1573" width="2.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="74.13" y="1583.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; -0.00%)</title><rect x="787.3" y="1413" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="790.26" y="1423.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (33 samples, 0.07%; +0.01%)</title><rect x="841.7" y="1525" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="844.72" y="1535.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (14 samples, 0.03%; -0.01%)</title><rect x="185.7" y="1221" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="188.69" y="1231.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="674.1" y="1637" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="677.12" y="1647.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (173 samples, 0.36%; +0.02%)</title><rect x="466.1" y="1429" width="4.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="469.07" y="1439.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (312 samples, 0.66%; +0.01%)</title><rect x="476.1" y="1413" width="7.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="479.13" y="1423.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.05%; +0.03%)</title><rect x="1154.2" y="1589" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1157.22" y="1599.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (17 samples, 0.04%; -0.01%)</title><rect x="270.6" y="1509" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="273.63" y="1519.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%; +0.00%)</title><rect x="969.8" y="1541" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="972.76" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (5 samples, 0.01%; -0.01%)</title><rect x="766.1" y="1573" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="769.10" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (5 samples, 0.01%; +0.00%)</title><rect x="569.2" y="1461" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="572.17" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%; +0.01%)</title><rect x="554.5" y="1525" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="557.48" y="1535.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%; +0.00%)</title><rect x="279.1" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="282.13" y="1455.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%; -0.00%)</title><rect x="670.3" y="1605" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="673.35" y="1615.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (54 samples, 0.11%; 0.00%)</title><rect x="15.5" y="1509" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.50" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%; +0.01%)</title><rect x="710.0" y="1653" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="712.97" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1141.2" y="1477" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.18" y="1487.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (157 samples, 0.33%; +0.01%)</title><rect x="247.1" y="1397" width="3.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="250.14" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (16 samples, 0.03%; 0.00%)</title><rect x="1050.0" y="1381" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1053.05" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (73 samples, 0.15%; +0.01%)</title><rect x="905.3" y="1493" width="1.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="908.31" y="1503.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (16 samples, 0.03%; +0.01%)</title><rect x="512.2" y="1397" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="515.23" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (16 samples, 0.03%; -0.08%)</title><rect x="53.4" y="1637" width="0.4" height="15.0" fill="rgb(100,100,255)" rx="2" ry="2" />
<text  x="56.36" y="1647.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (46 samples, 0.10%; +0.01%)</title><rect x="1160.8" y="1621" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1163.83" y="1631.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (229 samples, 0.48%; -0.02%)</title><rect x="276.5" y="1477" width="5.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="279.48" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="515.0" y="1445" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="517.96" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%; -0.00%)</title><rect x="444.1" y="1461" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="447.14" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (20 samples, 0.04%; -0.00%)</title><rect x="865.7" y="1637" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="868.69" y="1647.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; +0.00%)</title><rect x="841.1" y="1525" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="844.13" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; -0.01%)</title><rect x="1033.6" y="1365" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1036.57" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%; +0.00%)</title><rect x="216.6" y="1381" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="219.56" y="1391.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (5 samples, 0.01%; +0.00%)</title><rect x="487.4" y="1493" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="490.43" y="1503.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (7 samples, 0.01%; -0.01%)</title><rect x="261.7" y="1477" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="264.69" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="719.2" y="1589" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="722.19" y="1599.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,692 samples, 5.65%; +0.04%)</title><rect x="883.3" y="1589" width="66.7" height="15.0" fill="rgb(255,160,160)" rx="2" ry="2" />
<text  x="886.28" y="1599.5" >cql3::r..</text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (753 samples, 1.58%; +0.02%)</title><rect x="1078.4" y="1493" width="18.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1081.42" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (134 samples, 0.28%; -0.04%)</title><rect x="211.4" y="1333" width="3.3" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="214.38" y="1343.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="771.1" y="1509" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="774.05" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="1050.2" y="1349" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1053.22" y="1359.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,509 samples, 49.37%; +0.02%)</title><rect x="46.3" y="1669" width="582.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="49.33" y="1679.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (5 samples, 0.01%; +0.01%)</title><rect x="1097.0" y="1461" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1099.95" y="1471.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%; -0.03%)</title><rect x="1045.1" y="1445" width="0.3" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="1048.06" y="1455.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.00%)</title><rect x="1148.2" y="1653" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1151.25" y="1663.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (24 samples, 0.05%; +0.02%)</title><rect x="731.4" y="1461" width="0.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="734.38" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; +0.02%)</title><rect x="907.9" y="1445" width="0.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="910.91" y="1455.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (18 samples, 0.04%; +0.00%)</title><rect x="1051.0" y="1445" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1054.04" y="1455.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.01%; 0.00%)</title><rect x="10.1" y="1781" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.10" y="1791.5" ></text>
</g>
<g >
<title>seastar::memory::stats (28 samples, 0.06%; -0.02%)</title><rect x="486.6" y="1477" width="0.7" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="489.61" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (10 samples, 0.02%; +0.01%)</title><rect x="264.1" y="1477" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="267.06" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="696.3" y="1637" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="699.27" y="1647.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (23 samples, 0.05%; +0.00%)</title><rect x="123.4" y="1445" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="126.37" y="1455.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (15 samples, 0.03%; +0.02%)</title><rect x="521.4" y="1493" width="0.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="524.45" y="1503.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%; +0.00%)</title><rect x="546.4" y="1525" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="549.38" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.01%)</title><rect x="787.3" y="1397" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="790.31" y="1407.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (129 samples, 0.27%; -0.01%)</title><rect x="312.6" y="1349" width="3.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="315.56" y="1359.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (31 samples, 0.07%; 0.00%)</title><rect x="289.8" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="292.83" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.03%; -0.02%)</title><rect x="568.8" y="1445" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="571.75" y="1455.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (53 samples, 0.11%; +0.01%)</title><rect x="799.7" y="1317" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="802.72" y="1327.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.01%)</title><rect x="1037.3" y="1349" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1040.33" y="1359.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%; -0.00%)</title><rect x="684.2" y="1653" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="687.15" y="1663.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (187 samples, 0.39%; +0.00%)</title><rect x="15.5" y="1557" width="4.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="18.48" y="1567.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (10 samples, 0.02%; +0.00%)</title><rect x="294.3" y="1461" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="297.27" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (622 samples, 1.31%; -0.01%)</title><rect x="1022.9" y="1413" width="15.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1025.86" y="1423.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (29 samples, 0.06%; -0.02%)</title><rect x="740.8" y="1477" width="0.8" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="743.85" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%; -0.04%)</title><rect x="156.0" y="1365" width="2.0" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="159.00" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%; +0.01%)</title><rect x="49.2" y="1653" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="52.23" y="1663.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (12 samples, 0.03%; +0.02%)</title><rect x="395.6" y="1413" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="398.57" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (28 samples, 0.06%; +0.01%)</title><rect x="807.9" y="1397" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="810.92" y="1407.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (6 samples, 0.01%; -0.04%)</title><rect x="749.2" y="1525" width="0.1" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="752.17" y="1535.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; -0.01%)</title><rect x="805.1" y="1413" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="808.08" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (35 samples, 0.07%; +0.01%)</title><rect x="631.0" y="1653" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="633.97" y="1663.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (7 samples, 0.01%; +0.01%)</title><rect x="330.5" y="1333" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="333.52" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%; -0.01%)</title><rect x="387.4" y="1317" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="390.42" y="1327.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (90 samples, 0.19%; +0.01%)</title><rect x="573.4" y="1541" width="2.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="576.36" y="1551.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%; +0.01%)</title><rect x="1027.0" y="1333" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1030.00" y="1343.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (5 samples, 0.01%; +0.01%)</title><rect x="672.7" y="1637" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="675.68" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="833.3" y="1589" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="836.27" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (102 samples, 0.21%; +0.00%)</title><rect x="852.7" y="1541" width="2.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="855.65" y="1551.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (545 samples, 1.14%; +0.05%)</title><rect x="127.1" y="1445" width="13.5" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="130.06" y="1455.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (9 samples, 0.02%; -0.02%)</title><rect x="367.2" y="1317" width="0.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="370.22" y="1327.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="76.6" y="1621" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="79.58" y="1631.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (59 samples, 0.12%; +0.01%)</title><rect x="1153.5" y="1605" width="1.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1156.55" y="1615.5" ></text>
</g>
<g >
<title>row::compact_and_expire (802 samples, 1.68%; +0.03%)</title><rect x="368.4" y="1381" width="19.9" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="371.39" y="1391.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; -0.01%)</title><rect x="747.4" y="1429" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="750.41" y="1439.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (33 samples, 0.07%; -0.01%)</title><rect x="1030.7" y="1317" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1033.69" y="1327.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (18 samples, 0.04%; +0.00%)</title><rect x="314.6" y="1333" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="317.64" y="1343.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (166 samples, 0.35%; +0.01%)</title><rect x="993.4" y="1493" width="4.1" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="996.40" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (6 samples, 0.01%; +0.01%)</title><rect x="969.4" y="1541" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="972.44" y="1551.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; 0.00%)</title><rect x="637.4" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="640.39" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; +0.01%)</title><rect x="1042.9" y="1429" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1045.91" y="1439.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.04%; -0.01%)</title><rect x="1137.8" y="1589" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1140.84" y="1599.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,793 samples, 22.66%; -0.07%)</title><rect x="872.5" y="1637" width="267.5" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="875.52" y="1647.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>utils::array_search_gt_impl (15 samples, 0.03%; +0.01%)</title><rect x="470.5" y="1445" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="473.45" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (96 samples, 0.20%; +0.04%)</title><rect x="1020.5" y="1397" width="2.3" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="1023.46" y="1407.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (16 samples, 0.03%; -0.00%)</title><rect x="818.9" y="1445" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="821.85" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%; 0.00%)</title><rect x="865.9" y="1525" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.86" y="1535.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (11 samples, 0.02%; -0.01%)</title><rect x="745.4" y="1461" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="748.38" y="1471.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (18 samples, 0.04%; +0.00%)</title><rect x="562.8" y="1461" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="565.81" y="1471.5" ></text>
</g>
<g >
<title>make_combined_reader (901 samples, 1.89%; +0.05%)</title><rect x="431.8" y="1509" width="22.3" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="434.82" y="1519.5" >m..</text>
</g>
<g >
<title>single_node_cql_env::make_query_state (442 samples, 0.93%; -0.01%)</title><rect x="839.2" y="1605" width="11.0" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="842.25" y="1615.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%; +0.00%)</title><rect x="34.4" y="1621" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="37.41" y="1631.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (213 samples, 0.45%; 0.00%)</title><rect x="1070.9" y="1493" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1073.88" y="1503.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (347 samples, 0.73%; +0.10%)</title><rect x="395.9" y="1429" width="8.6" height="15.0" fill="rgb(255,84,84)" rx="2" ry="2" />
<text  x="398.87" y="1439.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (6 samples, 0.01%; 0.00%)</title><rect x="867.1" y="1509" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.15" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (30 samples, 0.06%; +0.01%)</title><rect x="532.5" y="1413" width="0.7" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="535.45" y="1423.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%; -0.01%)</title><rect x="292.5" y="1445" width="0.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="295.46" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1541" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; +0.01%)</title><rect x="858.9" y="1573" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="861.92" y="1583.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (55 samples, 0.12%; +0.01%)</title><rect x="958.6" y="1557" width="1.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="961.56" y="1567.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (9 samples, 0.02%; -0.01%)</title><rect x="225.2" y="1381" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="228.21" y="1391.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (112 samples, 0.24%; -0.02%)</title><rect x="919.5" y="1541" width="2.8" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="922.51" y="1551.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (28 samples, 0.06%; -0.01%)</title><rect x="805.6" y="1397" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="808.60" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="543.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (17 samples, 0.04%; +0.02%)</title><rect x="666.9" y="1653" width="0.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="669.88" y="1663.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (23 samples, 0.05%; -0.01%)</title><rect x="655.4" y="1653" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="658.36" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (24 samples, 0.05%; +0.00%)</title><rect x="952.5" y="1525" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="955.46" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.01%)</title><rect x="424.5" y="1525" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="427.54" y="1535.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="249.0" y="1365" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="252.05" y="1375.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (11 samples, 0.02%; -0.02%)</title><rect x="635.1" y="1637" width="0.3" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="638.14" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%; -0.03%)</title><rect x="892.0" y="1445" width="0.5" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="895.03" y="1455.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%; -0.00%)</title><rect x="826.6" y="1445" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="829.58" y="1455.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (19 samples, 0.04%; +0.00%)</title><rect x="507.9" y="1365" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="510.94" y="1375.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (274 samples, 0.58%; 0.00%)</title><rect x="14.9" y="1733" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="1743.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; -0.01%)</title><rect x="611.8" y="1605" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="614.77" y="1615.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (9 samples, 0.02%; +0.01%)</title><rect x="1098.9" y="1477" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1101.91" y="1487.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (8 samples, 0.02%; -0.00%)</title><rect x="749.4" y="1573" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="752.45" y="1583.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (31 samples, 0.07%; +0.02%)</title><rect x="1096.2" y="1445" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1099.18" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="853" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="863.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1237" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1247.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (26 samples, 0.05%; +0.01%)</title><rect x="540.1" y="1573" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="543.08" y="1583.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (46 samples, 0.10%; 0.00%)</title><rect x="763.9" y="1509" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="766.87" y="1519.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.02%; 0.00%)</title><rect x="16.9" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.91" y="1535.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,328 samples, 2.79%; 0.00%)</title><rect x="553.1" y="1589" width="32.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="556.12" y="1599.5" >st..</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (21 samples, 0.04%; +0.00%)</title><rect x="865.7" y="1653" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.66" y="1663.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (84 samples, 0.18%; -0.01%)</title><rect x="746.9" y="1461" width="2.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="749.92" y="1471.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; 0.00%)</title><rect x="416.2" y="1541" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="419.16" y="1551.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (10 samples, 0.02%; -0.01%)</title><rect x="1087.8" y="1429" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1090.76" y="1439.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (104 samples, 0.22%; +0.01%)</title><rect x="951.1" y="1573" width="2.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="954.05" y="1583.5" ></text>
</g>
<g >
<title>seastar::gate::leave (7 samples, 0.01%; -0.00%)</title><rect x="606.4" y="1605" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="609.42" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="1139.7" y="1605" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1142.72" y="1615.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (21 samples, 0.04%; -0.01%)</title><rect x="120.8" y="1477" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="123.84" y="1487.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (13 samples, 0.03%; +0.00%)</title><rect x="989.7" y="1509" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="992.68" y="1519.5" ></text>
</g>
<g >
<title>query_result_builder::consume (9 samples, 0.02%; 0.00%)</title><rect x="685.1" y="1461" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.12" y="1471.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="627.6" y="1653" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="630.63" y="1663.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (9 samples, 0.02%; -0.01%)</title><rect x="300.8" y="1413" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="303.79" y="1423.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (37 samples, 0.08%; +0.08%)</title><rect x="319.1" y="1381" width="0.9" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="322.12" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%; -0.00%)</title><rect x="40.4" y="1637" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="43.38" y="1647.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (8 samples, 0.02%; -0.02%)</title><rect x="830.6" y="1445" width="0.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="833.65" y="1455.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%; 0.00%)</title><rect x="656.5" y="1653" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.52" y="1663.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (18 samples, 0.04%; +0.02%)</title><rect x="391.5" y="1397" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="394.46" y="1407.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (123 samples, 0.26%; -0.00%)</title><rect x="409.5" y="1477" width="3.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="412.47" y="1487.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%; 0.00%)</title><rect x="15.7" y="1477" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.72" y="1487.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,506 samples, 97.66%; +0.02%)</title><rect x="24.1" y="1685" width="1152.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="27.12" y="1695.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (6 samples, 0.01%; 0.00%)</title><rect x="909.7" y="1509" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="912.72" y="1519.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (14 samples, 0.03%; +0.01%)</title><rect x="622.1" y="1557" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="625.13" y="1567.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (14 samples, 0.03%; +0.01%)</title><rect x="656.1" y="1653" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="659.13" y="1663.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%; -0.01%)</title><rect x="768.1" y="1525" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="771.08" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%; -0.02%)</title><rect x="1160.3" y="1573" width="0.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="1163.29" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (20 samples, 0.04%; -0.00%)</title><rect x="781.3" y="1445" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="784.34" y="1455.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.01%)</title><rect x="912.8" y="1477" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="915.82" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1253" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1263.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (6 samples, 0.01%; -0.04%)</title><rect x="73.7" y="1589" width="0.2" height="15.0" fill="rgb(155,155,255)" rx="2" ry="2" />
<text  x="76.71" y="1599.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (6 samples, 0.01%; -0.00%)</title><rect x="1141.7" y="1381" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1144.70" y="1391.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.01%; +0.00%)</title><rect x="726.4" y="1573" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="729.43" y="1583.5" ></text>
</g>
<g >
<title>database::query (7 samples, 0.01%; +0.00%)</title><rect x="1008.5" y="1445" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1011.51" y="1455.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (43 samples, 0.09%; +0.01%)</title><rect x="148.3" y="1413" width="1.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="151.32" y="1423.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (51 samples, 0.11%; +0.02%)</title><rect x="675.9" y="1621" width="1.2" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="678.87" y="1631.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.03%; -0.01%)</title><rect x="674.3" y="1653" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="677.34" y="1663.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,164 samples, 2.44%; +0.01%)</title><rect x="335.5" y="1349" width="28.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="338.45" y="1359.5" >wr..</text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="709.0" y="1589" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="711.96" y="1599.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="659.5" y="1653" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="662.50" y="1663.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%; 0.00%)</title><rect x="206.4" y="1253" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="209.43" y="1263.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,552 samples, 11.66%; +0.10%)</title><rect x="720.0" y="1637" width="137.6" height="15.0" fill="rgb(255,79,79)" rx="2" ry="2" />
<text  x="722.98" y="1647.5" >single_node_cql_e..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (68 samples, 0.14%; -0.00%)</title><rect x="144.0" y="1429" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="146.96" y="1439.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (45 samples, 0.09%; 0.00%)</title><rect x="768.6" y="1525" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.57" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (46 samples, 0.10%; 0.00%)</title><rect x="1150.4" y="1653" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.38" y="1663.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (38 samples, 0.08%; 0.00%)</title><rect x="952.1" y="1541" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="955.12" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%; +0.02%)</title><rect x="614.1" y="1573" width="0.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="617.10" y="1583.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (46 samples, 0.10%; +0.00%)</title><rect x="407.4" y="1413" width="1.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="410.39" y="1423.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (21 samples, 0.04%; -0.01%)</title><rect x="796.9" y="1301" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="799.87" y="1311.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (11 samples, 0.02%; 0.00%)</title><rect x="320.7" y="1365" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="323.69" y="1375.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%; -0.02%)</title><rect x="949.5" y="1493" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="952.51" y="1503.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (8 samples, 0.02%; +0.01%)</title><rect x="571.8" y="1509" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="574.83" y="1519.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%; +0.00%)</title><rect x="762.6" y="1477" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="765.60" y="1487.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (39 samples, 0.08%; +0.01%)</title><rect x="800.0" y="1285" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="803.04" y="1295.5" ></text>
</g>
<g >
<title>database::find_uuid (220 samples, 0.46%; +0.00%)</title><rect x="760.1" y="1557" width="5.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="763.08" y="1567.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (18 samples, 0.04%; 0.00%)</title><rect x="18.5" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.50" y="1471.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,280 samples, 13.19%; +0.05%)</title><rect x="954.4" y="1589" width="155.6" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="957.37" y="1599.5" >cql3::statements::s..</text>
</g>
<g >
<title>[unknown] (475 samples, 1.00%; 0.00%)</title><rect x="10.0" y="1797" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.05" y="1807.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (30 samples, 0.06%; +0.05%)</title><rect x="509.3" y="1413" width="0.7" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="512.28" y="1423.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (12 samples, 0.03%; 0.00%)</title><rect x="221.7" y="1301" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="224.69" y="1311.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (162 samples, 0.34%; -0.01%)</title><rect x="761.0" y="1525" width="4.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="763.99" y="1535.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (7 samples, 0.01%; -0.03%)</title><rect x="11.6" y="1749" width="0.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="14.64" y="1759.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%; -0.01%)</title><rect x="694.1" y="1605" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="697.09" y="1615.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.01%)</title><rect x="155.2" y="1365" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="158.16" y="1375.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (188 samples, 0.39%; +0.00%)</title><rect x="744.5" y="1509" width="4.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="747.46" y="1519.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (141 samples, 0.30%; -0.01%)</title><rect x="846.7" y="1589" width="3.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="849.70" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="650.6" y="1637" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="653.60" y="1647.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (98 samples, 0.21%; -0.01%)</title><rect x="235.1" y="1365" width="2.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="238.07" y="1375.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (19 samples, 0.04%; +0.01%)</title><rect x="1002.2" y="1429" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1005.25" y="1439.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (7 samples, 0.01%; -0.02%)</title><rect x="442.1" y="1445" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="445.06" y="1455.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (45 samples, 0.09%; -0.01%)</title><rect x="896.1" y="1445" width="1.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="899.14" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (24 samples, 0.05%; 0.00%)</title><rect x="664.9" y="1637" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.95" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="559.7" y="1477" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="562.73" y="1487.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (7 samples, 0.01%; 0.00%)</title><rect x="20.7" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.70" y="1551.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,138 samples, 2.39%; -0.04%)</title><rect x="887.1" y="1573" width="28.2" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="890.14" y="1583.5" >c..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (36 samples, 0.08%; +0.01%)</title><rect x="968.5" y="1509" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="971.47" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="807.8" y="1397" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="810.75" y="1407.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (65 samples, 0.14%; +0.01%)</title><rect x="529.6" y="1477" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="532.63" y="1487.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (94 samples, 0.20%; +0.00%)</title><rect x="930.1" y="1557" width="2.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="933.11" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1541" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1551.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (623 samples, 1.31%; +0.04%)</title><rect x="230.9" y="1429" width="15.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="233.93" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (98 samples, 0.21%; +0.04%)</title><rect x="480.1" y="1365" width="2.4" height="15.0" fill="rgb(255,152,152)" rx="2" ry="2" />
<text  x="483.07" y="1375.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (33 samples, 0.07%; +0.01%)</title><rect x="624.6" y="1653" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="627.63" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="965" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="975.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (16 samples, 0.03%; +0.02%)</title><rect x="244.7" y="1397" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="247.66" y="1407.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.01%; -0.03%)</title><rect x="111.9" y="1541" width="0.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="114.94" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%; -0.02%)</title><rect x="929.4" y="1557" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="932.42" y="1567.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; 0.00%)</title><rect x="623.9" y="1605" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="626.86" y="1615.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (158 samples, 0.33%; +0.02%)</title><rect x="977.0" y="1509" width="3.9" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="979.97" y="1519.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (6 samples, 0.01%; +0.01%)</title><rect x="583.9" y="1525" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="586.87" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (8 samples, 0.02%; -0.00%)</title><rect x="981.8" y="1525" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="984.75" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%; +0.00%)</title><rect x="630.7" y="1653" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="633.65" y="1663.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="492.2" y="1477" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="495.18" y="1487.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.01%; 0.00%)</title><rect x="20.5" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.53" y="1567.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (13 samples, 0.03%; +0.00%)</title><rect x="1034.0" y="1381" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1037.01" y="1391.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%; -0.02%)</title><rect x="853.4" y="1509" width="1.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="856.42" y="1519.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (9 samples, 0.02%; +0.01%)</title><rect x="265.3" y="1509" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="268.33" y="1519.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (118 samples, 0.25%; -0.00%)</title><rect x="203.8" y="1285" width="2.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="206.83" y="1295.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (21 samples, 0.04%; +0.02%)</title><rect x="1097.9" y="1477" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1100.92" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; -0.00%)</title><rect x="704.9" y="1589" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="707.92" y="1599.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%; -0.01%)</title><rect x="522.3" y="1493" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="525.34" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; +0.00%)</title><rect x="899.2" y="1429" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="902.16" y="1439.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%; 0.00%)</title><rect x="1132.7" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1135.66" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%; +0.01%)</title><rect x="490.7" y="1477" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="493.67" y="1487.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (9 samples, 0.02%; -0.03%)</title><rect x="566.8" y="1445" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="569.77" y="1455.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%; -0.04%)</title><rect x="665.5" y="1637" width="0.4" height="15.0" fill="rgb(152,152,255)" rx="2" ry="2" />
<text  x="668.54" y="1647.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (22 samples, 0.05%; -0.01%)</title><rect x="444.6" y="1461" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="447.63" y="1471.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (34 samples, 0.07%; -0.01%)</title><rect x="162.0" y="1397" width="0.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="165.00" y="1407.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (6 samples, 0.01%; +0.01%)</title><rect x="1053.9" y="1525" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1056.89" y="1535.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (6 samples, 0.01%; 0.00%)</title><rect x="867.1" y="1493" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.15" y="1503.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (110 samples, 0.23%; 0.00%)</title><rect x="947.2" y="1573" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.24" y="1583.5" ></text>
</g>
<g >
<title>__tls_init (16 samples, 0.03%; -0.01%)</title><rect x="498.9" y="1413" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="501.95" y="1423.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (5 samples, 0.01%; +0.01%)</title><rect x="1070.8" y="1493" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1073.76" y="1503.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (38 samples, 0.08%; -0.04%)</title><rect x="753.5" y="1541" width="0.9" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="756.48" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (6 samples, 0.01%; +0.00%)</title><rect x="41.1" y="1637" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="44.07" y="1647.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (9 samples, 0.02%; -0.03%)</title><rect x="140.7" y="1445" width="0.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="143.74" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (33 samples, 0.07%; 0.00%)</title><rect x="866.6" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.55" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="751.3" y="1557" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.25" y="1567.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (97 samples, 0.20%; +0.01%)</title><rect x="1035.9" y="1397" width="2.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1038.87" y="1407.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%; +0.00%)</title><rect x="621.7" y="1557" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="624.68" y="1567.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (30 samples, 0.06%; 0.00%)</title><rect x="1141.1" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1519.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (6 samples, 0.01%; +0.01%)</title><rect x="43.7" y="1653" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="46.75" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; -0.00%)</title><rect x="1138.9" y="1589" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1141.90" y="1599.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (47 samples, 0.10%; +0.05%)</title><rect x="1143.9" y="1669" width="1.2" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="1146.93" y="1679.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (14 samples, 0.03%; +0.01%)</title><rect x="542.1" y="1573" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="545.12" y="1583.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (37 samples, 0.08%; -0.00%)</title><rect x="740.7" y="1493" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="743.67" y="1503.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20 samples, 0.04%; +0.01%)</title><rect x="818.0" y="1445" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="821.01" y="1455.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (32 samples, 0.07%; 0.00%)</title><rect x="684.9" y="1637" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%; -0.01%)</title><rect x="959.6" y="1509" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="962.58" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (61 samples, 0.13%; -0.01%)</title><rect x="945.0" y="1573" width="1.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="948.03" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (22 samples, 0.05%; -0.02%)</title><rect x="604.7" y="1605" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="607.73" y="1615.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%; -0.02%)</title><rect x="52.9" y="1637" width="0.4" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="55.92" y="1647.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; +0.00%)</title><rect x="790.6" y="1397" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="793.55" y="1407.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (535 samples, 1.12%; +0.01%)</title><rect x="697.5" y="1669" width="13.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="700.48" y="1679.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (6 samples, 0.01%; +0.01%)</title><rect x="600.9" y="1557" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="603.87" y="1567.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (6 samples, 0.01%; +0.01%)</title><rect x="812.1" y="1477" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="815.06" y="1487.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (904 samples, 1.90%; -0.01%)</title><rect x="786.4" y="1445" width="22.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="789.39" y="1455.5" >a..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; 0.00%)</title><rect x="145.6" y="1429" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="148.64" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (83 samples, 0.17%; +0.01%)</title><rect x="819.7" y="1557" width="2.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="822.74" y="1567.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.02%)</title><rect x="208.1" y="1317" width="0.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="211.11" y="1327.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.00%)</title><rect x="106.8" y="1589" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="109.79" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (114 samples, 0.24%; -0.01%)</title><rect x="591.3" y="1573" width="2.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="594.33" y="1583.5" ></text>
</g>
<g >
<title>query::querier&lt; (6 samples, 0.01%; 0.00%)</title><rect x="1175.7" y="1653" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.65" y="1663.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (5 samples, 0.01%; +0.01%)</title><rect x="909.9" y="1525" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="912.92" y="1535.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.12%; 0.00%)</title><rect x="717.8" y="1589" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.83" y="1599.5" ></text>
</g>
<g >
<title>database::find_schema (79 samples, 0.17%; +0.00%)</title><rect x="758.1" y="1557" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="761.12" y="1567.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.03%; 0.00%)</title><rect x="741.2" y="1461" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.24" y="1471.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (81 samples, 0.17%; +0.02%)</title><rect x="362.3" y="1333" width="2.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="365.29" y="1343.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (51 samples, 0.11%; +0.00%)</title><rect x="1176.6" y="1685" width="1.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1179.64" y="1695.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="533.6" y="1429" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="536.64" y="1439.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (35 samples, 0.07%; -0.02%)</title><rect x="275.4" y="1461" width="0.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="278.36" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (26 samples, 0.05%; +0.04%)</title><rect x="1025.7" y="1365" width="0.6" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1028.69" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (12 samples, 0.03%; -0.00%)</title><rect x="996.1" y="1413" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="999.10" y="1423.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21 samples, 0.04%; -0.02%)</title><rect x="357.5" y="1317" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="360.46" y="1327.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (158 samples, 0.33%; 0.00%)</title><rect x="505.0" y="1397" width="3.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="508.02" y="1407.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (67 samples, 0.14%; +0.03%)</title><rect x="930.5" y="1541" width="1.7" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="933.53" y="1551.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.09%; +0.01%)</title><rect x="738.2" y="1541" width="1.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="741.17" y="1551.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; -0.00%)</title><rect x="222.8" y="1365" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="225.83" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; -0.00%)</title><rect x="608.4" y="1573" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="611.38" y="1583.5" ></text>
</g>
<g >
<title>sstring_hash::operator (35 samples, 0.07%; 0.00%)</title><rect x="841.7" y="1541" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.67" y="1551.5" ></text>
</g>
<g >
<title>reader_permit::consume (21 samples, 0.04%; -0.02%)</title><rect x="392.6" y="1397" width="0.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="395.57" y="1407.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (15 samples, 0.03%; +0.00%)</title><rect x="330.3" y="1349" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="333.32" y="1359.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (20 samples, 0.04%; +0.00%)</title><rect x="1150.5" y="1637" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1153.48" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (389 samples, 0.82%; +0.01%)</title><rect x="149.5" y="1413" width="9.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="152.53" y="1423.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (66 samples, 0.14%; +0.02%)</title><rect x="303.8" y="1397" width="1.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="306.84" y="1407.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (74 samples, 0.16%; +0.01%)</title><rect x="543.4" y="1557" width="1.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="546.40" y="1567.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.01%; +0.01%)</title><rect x="404.5" y="1429" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="407.49" y="1439.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; +0.01%)</title><rect x="810.2" y="1445" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="813.23" y="1455.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (14 samples, 0.03%; +0.00%)</title><rect x="595.1" y="1573" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="598.12" y="1583.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="913.5" y="1541" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="916.46" y="1551.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (51 samples, 0.11%; -0.02%)</title><rect x="532.3" y="1429" width="1.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="535.25" y="1439.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (9 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.73" y="127.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (152 samples, 0.32%; -0.01%)</title><rect x="925.1" y="1525" width="3.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="928.08" y="1535.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="658.5" y="1653" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="661.50" y="1663.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (60 samples, 0.13%; 0.00%)</title><rect x="740.5" y="1509" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="743.45" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="850.2" y="1605" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="853.20" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%; +0.00%)</title><rect x="283.3" y="1445" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="286.29" y="1455.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (32 samples, 0.07%; +0.00%)</title><rect x="20.3" y="1605" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="23.31" y="1615.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (6 samples, 0.01%; 0.00%)</title><rect x="15.6" y="1461" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.55" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,470 samples, 9.39%; -0.02%)</title><rect x="297.8" y="1445" width="110.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="300.76" y="1455.5" >flat_mutation..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="623.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%; +0.02%)</title><rect x="518.4" y="1493" width="1.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="521.40" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="661" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="671.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (5 samples, 0.01%; 0.00%)</title><rect x="689.0" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="691.98" y="1647.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%; -0.00%)</title><rect x="866.6" y="1621" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="869.55" y="1631.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (11 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="1605" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.85" y="1615.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (457 samples, 0.96%; +0.01%)</title><rect x="472.7" y="1445" width="11.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="475.66" y="1455.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%; +0.01%)</title><rect x="538.1" y="1573" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="541.05" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1333" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1343.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.01%; +0.00%)</title><rect x="1141.0" y="1461" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.99" y="1471.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (15 samples, 0.03%; +0.02%)</title><rect x="45.0" y="1653" width="0.4" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="48.01" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%; +0.02%)</title><rect x="243.6" y="1333" width="0.9" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="246.57" y="1343.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (5 samples, 0.01%; -0.01%)</title><rect x="815.0" y="1509" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="817.99" y="1519.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (75 samples, 0.16%; 0.00%)</title><rect x="783.9" y="1461" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="786.89" y="1471.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%; +0.01%)</title><rect x="763.2" y="1493" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="766.20" y="1503.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,041 samples, 14.79%; -0.01%)</title><rect x="112.1" y="1541" width="174.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="115.07" y="1551.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%; -0.00%)</title><rect x="486.3" y="1477" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="489.26" y="1487.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (6 samples, 0.01%; +0.01%)</title><rect x="445.2" y="1461" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="448.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="820.3" y="1525" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="823.34" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%; +0.00%)</title><rect x="1062.5" y="1461" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1065.51" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (11 samples, 0.02%; -0.01%)</title><rect x="691.0" y="1621" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="693.97" y="1631.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (18 samples, 0.04%; +0.01%)</title><rect x="646.7" y="1605" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="649.66" y="1615.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (6 samples, 0.01%; -0.01%)</title><rect x="1050.9" y="1445" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1053.89" y="1455.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.02%; -0.00%)</title><rect x="994.3" y="1461" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="997.34" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="137.1" y="1413" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="140.12" y="1423.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.01%; 0.00%)</title><rect x="1175.7" y="1637" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.65" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="948.0" y="1525" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="951.00" y="1535.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (13 samples, 0.03%; +0.01%)</title><rect x="283.7" y="1493" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="286.71" y="1503.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (78 samples, 0.16%; +0.01%)</title><rect x="717.4" y="1605" width="1.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="720.38" y="1615.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (10 samples, 0.02%; -0.00%)</title><rect x="630.4" y="1653" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="633.40" y="1663.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (10 samples, 0.02%; -0.00%)</title><rect x="616.7" y="1557" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="619.73" y="1567.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (5 samples, 0.01%; +0.01%)</title><rect x="550.6" y="1573" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="553.56" y="1583.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (6 samples, 0.01%; +0.00%)</title><rect x="696.4" y="1637" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="699.44" y="1647.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (10 samples, 0.02%; +0.01%)</title><rect x="555.5" y="1509" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="558.47" y="1519.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%; 0.00%)</title><rect x="684.9" y="1621" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1631.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="420.0" y="1573" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="423.03" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.01%)</title><rect x="663.1" y="1637" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="666.14" y="1647.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (19 samples, 0.04%; -0.01%)</title><rect x="535.4" y="1509" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="538.40" y="1519.5" ></text>
</g>
<g >
<title>sstring_hash::operator (13 samples, 0.03%; +0.00%)</title><rect x="830.5" y="1477" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="833.55" y="1487.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (40 samples, 0.08%; -0.03%)</title><rect x="912.1" y="1509" width="1.0" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="915.07" y="1519.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (17 samples, 0.04%; +0.01%)</title><rect x="760.5" y="1525" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="763.55" y="1535.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (126 samples, 0.26%; -0.03%)</title><rect x="890.4" y="1493" width="3.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="893.37" y="1503.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="1589" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.11" y="1599.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%; +0.00%)</title><rect x="1065.2" y="1493" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1068.21" y="1503.5" ></text>
</g>
<g >
<title>local_schema_registry (7 samples, 0.01%; -0.02%)</title><rect x="974.3" y="1525" width="0.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="977.32" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1141.2" y="1461" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.18" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,171 samples, 4.56%; -0.01%)</title><rect x="163.0" y="1397" width="53.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="166.04" y="1407.5" >parti..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%; -0.01%)</title><rect x="892.8" y="1477" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="895.77" y="1487.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (21 samples, 0.04%; +0.01%)</title><rect x="655.4" y="1637" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="658.41" y="1647.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (12 samples, 0.03%; -0.01%)</title><rect x="746.5" y="1461" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="749.50" y="1471.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (759 samples, 1.59%; +0.03%)</title><rect x="369.5" y="1365" width="18.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="372.45" y="1375.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (51 samples, 0.11%; +0.01%)</title><rect x="602.8" y="1589" width="1.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="605.78" y="1599.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (6 samples, 0.01%; +0.00%)</title><rect x="601.5" y="1589" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="604.51" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (112 samples, 0.24%; +0.00%)</title><rect x="35.3" y="1605" width="2.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="38.32" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (20 samples, 0.04%; +0.02%)</title><rect x="407.6" y="1397" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="410.61" y="1407.5" ></text>
</g>
<g >
<title>compound_type&lt; (79 samples, 0.17%; 0.00%)</title><rect x="917.5" y="1541" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="920.55" y="1551.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (7 samples, 0.01%; 0.00%)</title><rect x="741.8" y="1493" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="744.76" y="1503.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (144 samples, 0.30%; +0.00%)</title><rect x="278.6" y="1461" width="3.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="281.59" y="1471.5" ></text>
</g>
<g >
<title>table::as_mutation_source (102 samples, 0.21%; -0.00%)</title><rect x="621.1" y="1605" width="2.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="624.06" y="1615.5" ></text>
</g>
<g >
<title>database::do_apply (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1509" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1519.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; 0.00%)</title><rect x="745.4" y="1445" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="748.41" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="575.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="569.6" y="1461" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="572.57" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (41 samples, 0.09%; 0.00%)</title><rect x="778.7" y="1461" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="781.73" y="1471.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (91 samples, 0.19%; +0.02%)</title><rect x="1068.4" y="1477" width="2.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="1071.41" y="1487.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%; +0.02%)</title><rect x="679.8" y="1621" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="682.84" y="1631.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (69 samples, 0.14%; 0.00%)</title><rect x="17.6" y="1509" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="1519.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="865.8" y="1589" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.78" y="1599.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (21 samples, 0.04%; +0.02%)</title><rect x="417.9" y="1541" width="0.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="420.90" y="1551.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%; -0.00%)</title><rect x="478.7" y="1349" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="481.65" y="1359.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.00%)</title><rect x="688.6" y="1621" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="691.59" y="1631.5" ></text>
</g>
<g >
<title>database::has_keyspace (93 samples, 0.20%; +0.01%)</title><rect x="828.8" y="1525" width="2.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="831.76" y="1535.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (12 samples, 0.03%; +0.01%)</title><rect x="803.3" y="1237" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="806.29" y="1247.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="611.6" y="1557" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="614.57" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (38 samples, 0.08%; +0.01%)</title><rect x="582.9" y="1525" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="585.93" y="1535.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%; -0.01%)</title><rect x="770.9" y="1509" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="773.93" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%; +0.03%)</title><rect x="987.0" y="1445" width="2.0" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="989.98" y="1455.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (56 samples, 0.12%; -0.07%)</title><rect x="344.3" y="1333" width="1.3" height="15.0" fill="rgb(120,120,255)" rx="2" ry="2" />
<text  x="347.25" y="1343.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (14 samples, 0.03%; +0.01%)</title><rect x="1103.5" y="1509" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1106.52" y="1519.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (10 samples, 0.02%; -0.01%)</title><rect x="555.2" y="1509" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="558.22" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1557" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1567.5" ></text>
</g>
<g >
<title>table::query (22,026 samples, 46.25%; -0.06%)</title><rect x="78.4" y="1621" width="545.8" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="81.39" y="1631.5" >table::query</text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%; -0.00%)</title><rect x="847.7" y="1541" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="850.72" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="837" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="847.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (112 samples, 0.24%; 0.00%)</title><rect x="1172.1" y="1621" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.08" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,292 samples, 11.11%; +0.01%)</title><rect x="287.8" y="1573" width="131.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="290.78" y="1583.5" >seastar::future&lt;..</text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (939 samples, 1.97%; +0.03%)</title><rect x="492.4" y="1477" width="23.3" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="495.38" y="1487.5" >s..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (47 samples, 0.10%; -0.03%)</title><rect x="98.9" y="1573" width="1.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="101.93" y="1583.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (181 samples, 0.38%; +0.01%)</title><rect x="355.1" y="1333" width="4.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="358.13" y="1343.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%; -0.03%)</title><rect x="563.5" y="1461" width="0.1" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="566.45" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="683.4" y="1605" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="686.43" y="1615.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (91 samples, 0.19%; +0.00%)</title><rect x="806.4" y="1429" width="2.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="809.36" y="1439.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (9 samples, 0.02%; +0.01%)</title><rect x="952.8" y="1509" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="955.76" y="1519.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="922.0" y="1509" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="925.03" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%; -0.01%)</title><rect x="1158.6" y="1541" width="0.8" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1161.63" y="1551.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; -0.00%)</title><rect x="669.5" y="1621" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="672.51" y="1631.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (14 samples, 0.03%; -0.01%)</title><rect x="862.4" y="1653" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="865.41" y="1663.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (16 samples, 0.03%; +0.00%)</title><rect x="648.8" y="1605" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="651.82" y="1615.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1141.5" y="1317" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.48" y="1327.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (24 samples, 0.05%; +0.00%)</title><rect x="865.6" y="1669" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.64" y="1679.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="948.0" y="1541" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="950.98" y="1551.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,318 samples, 2.77%; +0.00%)</title><rect x="553.2" y="1573" width="32.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="556.22" y="1583.5" >fl..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="140.6" y="1445" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="143.56" y="1455.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (137 samples, 0.29%; -0.01%)</title><rect x="638.5" y="1669" width="3.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="641.46" y="1679.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%; +0.01%)</title><rect x="748.5" y="1429" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="751.50" y="1439.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (458 samples, 0.96%; 0.00%)</title><rect x="560.1" y="1493" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.06" y="1503.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (10 samples, 0.02%; -0.01%)</title><rect x="885.5" y="1573" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="888.51" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (5 samples, 0.01%; -0.01%)</title><rect x="701.9" y="1621" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="704.94" y="1631.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (15 samples, 0.03%; -0.00%)</title><rect x="1031.1" y="1285" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1034.14" y="1295.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (29 samples, 0.06%; -0.00%)</title><rect x="640.1" y="1653" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="643.14" y="1663.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (6 samples, 0.01%; +0.01%)</title><rect x="688.7" y="1637" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="691.71" y="1647.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%; -0.01%)</title><rect x="509.0" y="1397" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="511.96" y="1407.5" ></text>
</g>
<g >
<title>main (46,659 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1781" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1791.5" >main</text>
</g>
<g >
<title>operator new (80 samples, 0.17%; -0.00%)</title><rect x="1128.2" y="1573" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1131.25" y="1583.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (14 samples, 0.03%; +0.01%)</title><rect x="1135.3" y="1573" width="0.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1138.26" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (47 samples, 0.10%; +0.01%)</title><rect x="823.2" y="1493" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="826.21" y="1503.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (20 samples, 0.04%; -0.01%)</title><rect x="1037.8" y="1381" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1040.75" y="1391.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (11 samples, 0.02%; +0.02%)</title><rect x="886.9" y="1557" width="0.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="889.87" y="1567.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (7 samples, 0.01%; -0.01%)</title><rect x="1097.7" y="1477" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1100.72" y="1487.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,721 samples, 3.61%; +0.04%)</title><rect x="321.7" y="1365" width="42.6" height="15.0" fill="rgb(255,155,155)" rx="2" ry="2" />
<text  x="324.65" y="1375.5" >muta..</text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (8 samples, 0.02%; +0.00%)</title><rect x="14.9" y="1685" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="17.88" y="1695.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%; +0.01%)</title><rect x="276.2" y="1461" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="279.23" y="1471.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%; 0.00%)</title><rect x="1118.5" y="1525" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.46" y="1535.5" ></text>
</g>
<g >
<title>mutation_querier::consume (8 samples, 0.02%; +0.00%)</title><rect x="685.1" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="688.12" y="1455.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (704 samples, 1.48%; +0.02%)</title><rect x="124.2" y="1461" width="17.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="127.23" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (87 samples, 0.18%; +0.01%)</title><rect x="1157.2" y="1621" width="2.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1160.24" y="1631.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (74 samples, 0.16%; +0.04%)</title><rect x="860.5" y="1621" width="1.8" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="863.51" y="1631.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.04%; +0.01%)</title><rect x="408.1" y="1397" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="411.11" y="1407.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%; -0.02%)</title><rect x="702.1" y="1621" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="705.12" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,162 samples, 2.44%; -0.00%)</title><rect x="1146.1" y="1669" width="28.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1149.07" y="1679.5" >se..</text>
</g>
<g >
<title>flat_mutation_reader::peek (14 samples, 0.03%; -0.00%)</title><rect x="287.0" y="1541" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="290.01" y="1551.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%; 0.00%)</title><rect x="18.7" y="1413" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.75" y="1423.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (6 samples, 0.01%; 0.00%)</title><rect x="1140.4" y="1413" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.37" y="1423.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (8 samples, 0.02%; +0.01%)</title><rect x="316.2" y="1349" width="0.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="319.20" y="1359.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (28 samples, 0.06%; -0.05%)</title><rect x="898.5" y="1429" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="901.47" y="1439.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%; +0.01%)</title><rect x="530.1" y="1461" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="533.07" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (150 samples, 0.31%; +0.01%)</title><rect x="985.8" y="1509" width="3.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="988.79" y="1519.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (41 samples, 0.09%; +0.01%)</title><rect x="679.6" y="1637" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="682.62" y="1647.5" ></text>
</g>
<g >
<title>row_cache::make_reader (474 samples, 1.00%; +0.02%)</title><rect x="523.6" y="1509" width="11.7" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="526.56" y="1519.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (207 samples, 0.43%; 0.00%)</title><rect x="15.1" y="1637" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.13" y="1647.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (23 samples, 0.05%; -0.00%)</title><rect x="946.5" y="1573" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="949.54" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::stats (39 samples, 0.08%; -0.03%)</title><rect x="144.7" y="1413" width="0.9" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="147.68" y="1423.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="49.1" y="1653" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="52.05" y="1663.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (5 samples, 0.01%; +0.01%)</title><rect x="1020.3" y="1413" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1023.31" y="1423.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (166 samples, 0.35%; 0.00%)</title><rect x="10.3" y="1781" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.27" y="1791.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (8 samples, 0.02%; -0.00%)</title><rect x="1005.4" y="1461" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1008.39" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; 0.00%)</title><rect x="593.1" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="596.14" y="1551.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (7 samples, 0.01%; +0.01%)</title><rect x="404.2" y="1381" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="407.17" y="1391.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.05%; -0.00%)</title><rect x="708.4" y="1589" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="711.39" y="1599.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%; -0.01%)</title><rect x="838.6" y="1589" width="0.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="841.55" y="1599.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (36 samples, 0.08%; -0.00%)</title><rect x="684.9" y="1653" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="687.87" y="1663.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (37 samples, 0.08%; +0.01%)</title><rect x="936.2" y="1509" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="939.16" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (52 samples, 0.11%; +0.01%)</title><rect x="938.3" y="1573" width="1.3" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="941.31" y="1583.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1205" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1215.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (540 samples, 1.13%; +0.00%)</title><rect x="271.1" y="1525" width="13.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="274.08" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (30 samples, 0.06%; +0.06%)</title><rect x="557.5" y="1477" width="0.7" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="560.48" y="1487.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; -0.01%)</title><rect x="222.5" y="1349" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="225.53" y="1359.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (15 samples, 0.03%; -0.01%)</title><rect x="209.2" y="1333" width="0.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="212.20" y="1343.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (6 samples, 0.01%; -0.01%)</title><rect x="16.3" y="1413" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="19.34" y="1423.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (12 samples, 0.03%; -0.02%)</title><rect x="291.6" y="1493" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="294.64" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::stats (6 samples, 0.01%; +0.01%)</title><rect x="521.3" y="1493" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="524.30" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (95 samples, 0.20%; +0.04%)</title><rect x="1101.5" y="1525" width="2.4" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="1104.51" y="1535.5" ></text>
</g>
<g >
<title>database::find_column_family (65 samples, 0.14%; +0.01%)</title><rect x="758.4" y="1541" width="1.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="761.44" y="1551.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (39 samples, 0.08%; -0.00%)</title><rect x="318.1" y="1349" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="321.06" y="1359.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (8 samples, 0.02%; -0.01%)</title><rect x="457.9" y="1493" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="460.91" y="1503.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (80 samples, 0.17%; -0.01%)</title><rect x="615.0" y="1573" width="2.0" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="618.04" y="1583.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt;::unique_ptr&lt;cql3::operation::set_value, std::default_delete&lt;cql3::operation::set_value&gt;, void&gt; (5 samples, 0.01%; 0.00%)</title><rect x="19.2" y="1477" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.17" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="410.4" y="1445" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="413.44" y="1455.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="444.2" y="1445" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="447.19" y="1455.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (79 samples, 0.17%; -0.01%)</title><rect x="547.4" y="1525" width="2.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="550.44" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%; -0.02%)</title><rect x="717.9" y="1573" width="1.3" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="720.88" y="1583.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%; +0.00%)</title><rect x="702.3" y="1605" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="705.31" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (21 samples, 0.04%; +0.03%)</title><rect x="607.6" y="1605" width="0.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="610.56" y="1615.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.05%; +0.00%)</title><rect x="200.7" y="1317" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="203.68" y="1327.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%; +0.00%)</title><rect x="622.6" y="1557" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="625.65" y="1567.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (42 samples, 0.09%; +0.06%)</title><rect x="617.6" y="1605" width="1.0" height="15.0" fill="rgb(255,128,128)" rx="2" ry="2" />
<text  x="620.59" y="1615.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="789" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="799.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (47 samples, 0.10%; +0.03%)</title><rect x="184.9" y="1237" width="1.1" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="187.87" y="1247.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (20 samples, 0.04%; +0.01%)</title><rect x="629.8" y="1653" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="632.78" y="1663.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (34 samples, 0.07%; 0.00%)</title><rect x="866.5" y="1653" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.53" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (9 samples, 0.02%; 0.00%)</title><rect x="43.9" y="1653" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.90" y="1663.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (59 samples, 0.12%; -0.00%)</title><rect x="1157.9" y="1589" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1160.94" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%; +0.03%)</title><rect x="153.9" y="1333" width="0.9" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="156.94" y="1343.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (10 samples, 0.02%; +0.01%)</title><rect x="570.6" y="1477" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="573.64" y="1487.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (20 samples, 0.04%; -0.01%)</title><rect x="628.4" y="1637" width="0.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="631.37" y="1647.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%; +0.00%)</title><rect x="1031.9" y="1317" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1034.93" y="1327.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (92 samples, 0.19%; +0.01%)</title><rect x="502.7" y="1397" width="2.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="505.72" y="1407.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (6 samples, 0.01%; -0.01%)</title><rect x="837.6" y="1605" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="840.61" y="1615.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; -0.00%)</title><rect x="704.3" y="1589" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="707.27" y="1599.5" ></text>
</g>
<g >
<title>database::apply_in_memory (27 samples, 0.06%; 0.00%)</title><rect x="1140.3" y="1461" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1471.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (7 samples, 0.01%; +0.01%)</title><rect x="261.3" y="1477" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="264.31" y="1487.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (113 samples, 0.24%; +0.01%)</title><rect x="703.7" y="1605" width="2.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="706.65" y="1615.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (11 samples, 0.02%; 0.00%)</title><rect x="1042.6" y="1429" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1045.64" y="1439.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.18%; -0.00%)</title><rect x="974.5" y="1525" width="2.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="977.52" y="1535.5" ></text>
</g>
<g >
<title>database::find_uuid (169 samples, 0.35%; +0.01%)</title><rect x="824.4" y="1525" width="4.2" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="827.38" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.02%; -0.03%)</title><rect x="1063.9" y="1493" width="0.2" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="1066.87" y="1503.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; -0.01%)</title><rect x="1105.6" y="1525" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1108.55" y="1535.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (26 samples, 0.05%; -0.01%)</title><rect x="120.2" y="1477" width="0.6" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="123.19" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (13 samples, 0.03%; -0.02%)</title><rect x="937.8" y="1557" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="940.77" y="1567.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (62 samples, 0.13%; -0.00%)</title><rect x="780.3" y="1477" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="783.35" y="1487.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%; +0.00%)</title><rect x="1172.2" y="1605" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1175.21" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="1148.1" y="1637" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1151.10" y="1647.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (392 samples, 0.82%; -0.05%)</title><rect x="894.1" y="1461" width="9.7" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="897.13" y="1471.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (22 samples, 0.05%; +0.03%)</title><rect x="430.6" y="1509" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="433.58" y="1519.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (99 samples, 0.21%; +0.01%)</title><rect x="828.6" y="1541" width="2.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="831.62" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (16 samples, 0.03%; +0.01%)</title><rect x="671.3" y="1605" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="674.29" y="1615.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (8 samples, 0.02%; -0.00%)</title><rect x="976.5" y="1477" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="979.50" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (8 samples, 0.02%; +0.02%)</title><rect x="395.4" y="1413" width="0.2" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="398.37" y="1423.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (8 samples, 0.02%; +0.01%)</title><rect x="75.9" y="1621" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="78.86" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; -0.03%)</title><rect x="416.9" y="1525" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="419.90" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (19 samples, 0.04%; +0.01%)</title><rect x="663.7" y="1637" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="666.71" y="1647.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (11 samples, 0.02%; +0.02%)</title><rect x="881.9" y="1589" width="0.3" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="884.89" y="1599.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%; -0.01%)</title><rect x="858.5" y="1589" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="861.45" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="271.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (5 samples, 0.01%; -0.00%)</title><rect x="675.6" y="1621" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="678.55" y="1631.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10 samples, 0.02%; -0.01%)</title><rect x="1142.7" y="1653" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1145.72" y="1663.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (92 samples, 0.19%; -0.00%)</title><rect x="12.1" y="1749" width="2.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="15.11" y="1759.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (15 samples, 0.03%; -0.02%)</title><rect x="1077.9" y="1493" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1080.95" y="1503.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (119 samples, 0.25%; -0.01%)</title><rect x="186.9" y="1205" width="2.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="189.90" y="1215.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (148 samples, 0.31%; 0.00%)</title><rect x="565.0" y="1461" width="3.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="568.01" y="1471.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (28 samples, 0.06%; +0.03%)</title><rect x="779.1" y="1445" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="782.06" y="1455.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%; +0.00%)</title><rect x="840.9" y="1525" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="843.86" y="1535.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (21 samples, 0.04%; +0.03%)</title><rect x="618.8" y="1589" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="621.76" y="1599.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (8 samples, 0.02%; +0.00%)</title><rect x="457.7" y="1493" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="460.72" y="1503.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (487 samples, 1.02%; 0.00%)</title><rect x="472.0" y="1461" width="12.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="474.99" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (13 samples, 0.03%; -0.01%)</title><rect x="558.3" y="1493" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="561.30" y="1503.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; -0.02%)</title><rect x="1046.3" y="1413" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1049.30" y="1423.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (206 samples, 0.43%; 0.00%)</title><rect x="15.1" y="1605" width="5.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.13" y="1615.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="571.7" y="1493" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="574.68" y="1503.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="917" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="927.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%; +0.01%)</title><rect x="1123.0" y="1573" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1125.97" y="1583.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%; 0.00%)</title><rect x="18.7" y="1429" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.75" y="1439.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (25 samples, 0.05%; +0.03%)</title><rect x="333.2" y="1349" width="0.6" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="336.22" y="1359.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (17 samples, 0.04%; -0.02%)</title><rect x="290.6" y="1541" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="293.60" y="1551.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (108 samples, 0.23%; -0.01%)</title><rect x="359.6" y="1333" width="2.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="362.61" y="1343.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.01%; 0.00%)</title><rect x="1141.0" y="1477" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.99" y="1487.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (12 samples, 0.03%; -0.01%)</title><rect x="408.9" y="1429" width="0.3" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="411.93" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (7 samples, 0.01%; 0.00%)</title><rect x="1029.0" y="1317" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1032.01" y="1327.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (92 samples, 0.19%; +0.01%)</title><rect x="801.4" y="1301" width="2.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="804.36" y="1311.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (6 samples, 0.01%; -0.01%)</title><rect x="418.9" y="1573" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="421.91" y="1583.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,135 samples, 10.78%; +0.04%)</title><rect x="723.1" y="1621" width="127.2" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="726.10" y="1631.5" >single_node_cql..</text>
</g>
<g >
<title>query::querier&lt; (18,182 samples, 38.18%; +0.01%)</title><rect x="102.1" y="1605" width="450.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="105.11" y="1615.5" >query::querier&lt;</text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%; +0.01%)</title><rect x="793.7" y="1381" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="796.70" y="1391.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%; -0.01%)</title><rect x="437.6" y="1429" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="440.64" y="1439.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (156 samples, 0.33%; +0.01%)</title><rect x="1060.0" y="1493" width="3.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1063.01" y="1503.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (183 samples, 0.38%; +0.00%)</title><rect x="702.5" y="1621" width="4.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="705.46" y="1631.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%; 0.00%)</title><rect x="944.3" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="947.34" y="1567.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%; +0.01%)</title><rect x="1065.9" y="1509" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1068.93" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (6 samples, 0.01%; -0.01%)</title><rect x="914.0" y="1541" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="917.03" y="1551.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="821" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="831.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (310 samples, 0.65%; -0.02%)</title><rect x="1080.3" y="1445" width="7.7" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="1083.33" y="1455.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (40 samples, 0.08%; +0.04%)</title><rect x="682.2" y="1605" width="1.0" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="685.24" y="1615.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (33 samples, 0.07%; +0.05%)</title><rect x="903.9" y="1461" width="0.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="906.92" y="1471.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (113 samples, 0.24%; +0.02%)</title><rect x="999.9" y="1445" width="2.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1002.92" y="1455.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; +0.01%)</title><rect x="38.2" y="1621" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="41.25" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (6 samples, 0.01%; +0.01%)</title><rect x="811.4" y="1429" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="814.42" y="1439.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (8 samples, 0.02%; +0.00%)</title><rect x="51.9" y="1637" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="54.90" y="1647.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; +0.01%)</title><rect x="850.0" y="1573" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="853.00" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (67 samples, 0.14%; -0.01%)</title><rect x="262.7" y="1493" width="1.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="265.65" y="1503.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (14 samples, 0.03%; -0.00%)</title><rect x="746.4" y="1477" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="749.45" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (284 samples, 0.60%; 0.00%)</title><rect x="14.6" y="1765" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.61" y="1775.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (11 samples, 0.02%; +0.00%)</title><rect x="508.6" y="1381" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="511.56" y="1391.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (15 samples, 0.03%; +0.01%)</title><rect x="703.1" y="1605" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="706.13" y="1615.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (34 samples, 0.07%; +0.00%)</title><rect x="918.2" y="1525" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="921.24" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (52 samples, 0.11%; -0.01%)</title><rect x="536.4" y="1509" width="1.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="539.42" y="1519.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (631 samples, 1.33%; -0.01%)</title><rect x="1079.8" y="1477" width="15.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1082.83" y="1487.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (107 samples, 0.22%; -0.00%)</title><rect x="382.5" y="1317" width="2.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="385.51" y="1327.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (5 samples, 0.01%; +0.01%)</title><rect x="483.9" y="1429" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="486.86" y="1439.5" ></text>
</g>
<g >
<title>auth::resource::resource (93 samples, 0.20%; -0.00%)</title><rect x="769.8" y="1557" width="2.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="772.76" y="1567.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (32 samples, 0.07%; +0.02%)</title><rect x="268.9" y="1493" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="271.90" y="1503.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (6 samples, 0.01%; +0.01%)</title><rect x="71.3" y="1557" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="74.28" y="1567.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; +0.02%)</title><rect x="45.8" y="1669" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="48.78" y="1679.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.02%; +0.01%)</title><rect x="476.4" y="1397" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="479.40" y="1407.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (150 samples, 0.31%; +0.02%)</title><rect x="815.6" y="1525" width="3.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="818.58" y="1535.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%; 0.00%)</title><rect x="1188.6" y="1797" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.59" y="1807.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%; -0.00%)</title><rect x="141.3" y="1445" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="144.31" y="1455.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%; +0.00%)</title><rect x="756.3" y="1573" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="759.28" y="1583.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (7 samples, 0.01%; -0.00%)</title><rect x="694.3" y="1621" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="697.26" y="1631.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%; +0.01%)</title><rect x="794.1" y="1365" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="797.15" y="1375.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (33 samples, 0.07%; -0.01%)</title><rect x="64.5" y="1573" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="67.49" y="1583.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (64 samples, 0.13%; +0.01%)</title><rect x="797.8" y="1301" width="1.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="800.81" y="1311.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; +0.01%)</title><rect x="939.4" y="1557" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="942.43" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="593.9" y="1541" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="596.93" y="1551.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (59 samples, 0.12%; 0.00%)</title><rect x="804.9" y="1429" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.90" y="1439.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (5 samples, 0.01%; +0.00%)</title><rect x="648.5" y="1621" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="651.49" y="1631.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (10 samples, 0.02%; +0.00%)</title><rect x="1141.2" y="1429" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1144.21" y="1439.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%; +0.01%)</title><rect x="1035.6" y="1397" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1038.62" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1285" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1295.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (26 samples, 0.05%; +0.00%)</title><rect x="1177.2" y="1653" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1180.24" y="1663.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="490.0" y="1461" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="492.95" y="1471.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (425 samples, 0.89%; +0.00%)</title><rect x="63.2" y="1589" width="10.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="66.18" y="1599.5" ></text>
</g>
<g >
<title>row::row (40 samples, 0.08%; +0.04%)</title><rect x="249.5" y="1365" width="1.0" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="252.52" y="1375.5" ></text>
</g>
<g >
<title>do_cql_test (274 samples, 0.58%; 0.00%)</title><rect x="14.9" y="1717" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="1727.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%; -0.02%)</title><rect x="620.1" y="1557" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="623.07" y="1567.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (79 samples, 0.17%; -0.02%)</title><rect x="907.3" y="1493" width="2.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="910.32" y="1503.5" ></text>
</g>
<g >
<title>compound_type&lt; (80 samples, 0.17%; +0.02%)</title><rect x="920.2" y="1525" width="2.0" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="923.18" y="1535.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (44 samples, 0.09%; +0.01%)</title><rect x="284.7" y="1525" width="1.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="287.66" y="1535.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (18 samples, 0.04%; +0.00%)</title><rect x="1051.5" y="1461" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1054.48" y="1471.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (800 samples, 1.68%; +0.02%)</title><rect x="495.3" y="1461" width="19.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="498.26" y="1471.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (70 samples, 0.15%; -0.05%)</title><rect x="677.8" y="1621" width="1.7" height="15.0" fill="rgb(141,141,255)" rx="2" ry="2" />
<text  x="680.76" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.07%; +0.01%)</title><rect x="36.2" y="1589" width="0.8" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="39.22" y="1599.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="805" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="815.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (650 samples, 1.36%; +0.02%)</title><rect x="555.7" y="1509" width="16.1" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="558.72" y="1519.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (33 samples, 0.07%; +0.00%)</title><rect x="489.9" y="1477" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="492.86" y="1487.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%; -0.01%)</title><rect x="1075.0" y="1461" width="0.2" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="1078.00" y="1471.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (20 samples, 0.04%; -0.02%)</title><rect x="610.3" y="1605" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="613.28" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; +0.00%)</title><rect x="805.4" y="1397" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="808.45" y="1407.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1605" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1615.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (16 samples, 0.03%; +0.01%)</title><rect x="1117.1" y="1557" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1120.12" y="1567.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (40 samples, 0.08%; +0.03%)</title><rect x="37.1" y="1573" width="1.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="40.08" y="1583.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (31 samples, 0.07%; +0.00%)</title><rect x="661.4" y="1605" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="664.38" y="1615.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; +0.00%)</title><rect x="768.9" y="1509" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="771.87" y="1519.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%; -0.00%)</title><rect x="683.8" y="1653" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="686.75" y="1663.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (11 samples, 0.02%; +0.01%)</title><rect x="262.0" y="1477" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="264.96" y="1487.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="415.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (12 samples, 0.03%; +0.01%)</title><rect x="609.9" y="1605" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="612.89" y="1615.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (85 samples, 0.18%; -0.01%)</title><rect x="858.1" y="1637" width="2.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="861.10" y="1647.5" ></text>
</g>
<g >
<title>operator new (93 samples, 0.20%; -0.00%)</title><rect x="1068.4" y="1493" width="2.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1071.36" y="1503.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (157 samples, 0.33%; -0.02%)</title><rect x="265.8" y="1509" width="3.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="268.80" y="1519.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="463.5" ></text>
</g>
<g >
<title>[[vdso]] (262 samples, 0.55%; +0.08%)</title><rect x="1179.3" y="1781" width="6.5" height="15.0" fill="rgb(255,109,109)" rx="2" ry="2" />
<text  x="1182.32" y="1791.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%; -0.00%)</title><rect x="1005.0" y="1461" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1007.97" y="1471.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; +0.00%)</title><rect x="98.0" y="1557" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="100.97" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (19 samples, 0.04%; 0.00%)</title><rect x="77.4" y="1621" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="80.38" y="1631.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%; 0.00%)</title><rect x="684.9" y="1557" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1567.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (235 samples, 0.49%; -0.03%)</title><rect x="923.0" y="1541" width="5.8" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="926.03" y="1551.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (45 samples, 0.09%; +0.00%)</title><rect x="37.0" y="1589" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="39.98" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (350 samples, 0.73%; -0.01%)</title><rect x="32.7" y="1653" width="8.7" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="35.75" y="1663.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (129 samples, 0.27%; +0.01%)</title><rect x="505.3" y="1381" width="3.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="508.27" y="1391.5" ></text>
</g>
<g >
<title>database::find_keyspace (7 samples, 0.01%; -0.07%)</title><rect x="974.1" y="1525" width="0.1" height="15.0" fill="rgb(125,125,255)" rx="2" ry="2" />
<text  x="977.07" y="1535.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (130 samples, 0.27%; -0.01%)</title><rect x="392.1" y="1413" width="3.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="395.15" y="1423.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (87 samples, 0.18%; -0.00%)</title><rect x="410.3" y="1461" width="2.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="413.31" y="1471.5" ></text>
</g>
<g >
<title>database::find_column_family (58 samples, 0.12%; +0.01%)</title><rect x="822.9" y="1509" width="1.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="825.94" y="1519.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (5 samples, 0.01%; +0.01%)</title><rect x="158.7" y="1397" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="161.70" y="1407.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="709" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="719.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.00%)</title><rect x="907.9" y="1461" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="910.91" y="1471.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (14 samples, 0.03%; +0.01%)</title><rect x="264.9" y="1493" width="0.3" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="267.88" y="1503.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,617 samples, 5.50%; -0.02%)</title><rect x="766.3" y="1573" width="64.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="769.32" y="1583.5" >service..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (18 samples, 0.04%; -0.04%)</title><rect x="401.0" y="1333" width="0.4" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="403.97" y="1343.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (30 samples, 0.06%; +0.00%)</title><rect x="770.1" y="1525" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="773.11" y="1535.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; -0.02%)</title><rect x="988.4" y="1429" width="0.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="991.42" y="1439.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%; +0.01%)</title><rect x="910.5" y="1525" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="913.49" y="1535.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (13 samples, 0.03%; -0.00%)</title><rect x="1034.9" y="1381" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1037.86" y="1391.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%; +0.01%)</title><rect x="478.8" y="1365" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="481.80" y="1375.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (8 samples, 0.02%; -0.01%)</title><rect x="201.2" y="1317" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="204.25" y="1327.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (132 samples, 0.28%; -0.02%)</title><rect x="677.4" y="1653" width="3.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="680.36" y="1663.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%; -0.01%)</title><rect x="222.7" y="1365" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="225.68" y="1375.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%; 0.00%)</title><rect x="684.9" y="1605" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="687.89" y="1615.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (56 samples, 0.12%; +0.08%)</title><rect x="228.9" y="1413" width="1.4" height="15.0" fill="rgb(255,103,103)" rx="2" ry="2" />
<text  x="231.93" y="1423.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (183 samples, 0.38%; +0.02%)</title><rect x="850.9" y="1605" width="4.6" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="853.92" y="1615.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (11 samples, 0.02%; +0.02%)</title><rect x="1077.3" y="1509" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1080.30" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="261.5" y="1477" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="264.51" y="1487.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (12 samples, 0.03%; +0.01%)</title><rect x="562.5" y="1461" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="565.51" y="1471.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (106 samples, 0.22%; -0.01%)</title><rect x="840.0" y="1557" width="2.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="842.96" y="1567.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%; -0.01%)</title><rect x="1026.9" y="1349" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1029.90" y="1359.5" ></text>
</g>
<g >
<title>schema::column_at (52 samples, 0.11%; -0.05%)</title><rect x="386.4" y="1333" width="1.3" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="389.43" y="1343.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (45 samples, 0.09%; -0.13%)</title><rect x="1009.7" y="1445" width="1.1" height="15.0" fill="rgb(35,35,255)" rx="2" ry="2" />
<text  x="1012.65" y="1455.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.01%; -0.03%)</title><rect x="133.9" y="1413" width="0.1" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="136.92" y="1423.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (16 samples, 0.03%; +0.01%)</title><rect x="922.6" y="1541" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="925.60" y="1551.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (21 samples, 0.04%; 0.00%)</title><rect x="20.5" y="1589" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.46" y="1599.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (25 samples, 0.05%; +0.00%)</title><rect x="239.6" y="1349" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="242.56" y="1359.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (20 samples, 0.04%; -0.05%)</title><rect x="239.1" y="1349" width="0.5" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="242.06" y="1359.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (7 samples, 0.01%; +0.00%)</title><rect x="541.9" y="1573" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="544.94" y="1583.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (41 samples, 0.09%; +0.01%)</title><rect x="270.0" y="1525" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="273.04" y="1535.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (8 samples, 0.02%; +0.01%)</title><rect x="995.8" y="1429" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="998.83" y="1439.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%; +0.05%)</title><rect x="842.9" y="1573" width="1.7" height="15.0" fill="rgb(255,141,141)" rx="2" ry="2" />
<text  x="845.94" y="1583.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (35 samples, 0.07%; +0.00%)</title><rect x="794.3" y="1365" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="797.35" y="1375.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (16 samples, 0.03%; -0.00%)</title><rect x="704.5" y="1589" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="707.52" y="1599.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (415 samples, 0.87%; -0.06%)</title><rect x="643.3" y="1653" width="10.3" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="646.29" y="1663.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (9 samples, 0.02%; 0.00%)</title><rect x="866.8" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.80" y="1551.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="749.7" y="1573" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="752.69" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (391 samples, 0.82%; +0.04%)</title><rect x="1024.2" y="1381" width="9.7" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="1027.20" y="1391.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (79 samples, 0.17%; -0.01%)</title><rect x="60.1" y="1621" width="2.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="63.10" y="1631.5" ></text>
</g>
<g >
<title>schema::column_at (13 samples, 0.03%; -0.02%)</title><rect x="387.9" y="1349" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="390.94" y="1359.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%; -0.01%)</title><rect x="282.2" y="1477" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="285.23" y="1487.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="589.7" y="1557" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="592.67" y="1567.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%; 0.00%)</title><rect x="865.9" y="1509" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.86" y="1519.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (159 samples, 0.33%; -0.01%)</title><rect x="96.2" y="1589" width="3.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="99.16" y="1599.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (10 samples, 0.02%; +0.01%)</title><rect x="995.6" y="1429" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="998.58" y="1439.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (33 samples, 0.07%; 0.00%)</title><rect x="1140.3" y="1573" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.29" y="1583.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (11 samples, 0.02%; 0.00%)</title><rect x="414.5" y="1509" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="417.48" y="1519.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (486 samples, 1.02%; +0.00%)</title><rect x="672.8" y="1669" width="12.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="675.80" y="1679.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (49 samples, 0.10%; -0.01%)</title><rect x="791.8" y="1333" width="1.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="794.79" y="1343.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (24 samples, 0.05%; +0.00%)</title><rect x="408.6" y="1445" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="411.63" y="1455.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1525" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1535.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (98 samples, 0.21%; 0.00%)</title><rect x="847.5" y="1557" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="850.55" y="1567.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%; +0.01%)</title><rect x="699.0" y="1637" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="701.97" y="1647.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="937.1" y="1525" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="940.08" y="1535.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (8 samples, 0.02%; +0.01%)</title><rect x="524.7" y="1493" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="527.70" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (97 samples, 0.20%; -0.00%)</title><rect x="978.5" y="1493" width="2.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="981.48" y="1503.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="655.7" y="1621" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="658.70" y="1631.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (12 samples, 0.03%; -0.01%)</title><rect x="31.1" y="1637" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="34.09" y="1647.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%; -0.02%)</title><rect x="657.2" y="1653" width="0.5" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="660.19" y="1663.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%; +0.01%)</title><rect x="836.9" y="1525" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="839.92" y="1535.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (12 samples, 0.03%; -0.01%)</title><rect x="1052.4" y="1461" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1055.45" y="1471.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (54 samples, 0.11%; -0.01%)</title><rect x="299.8" y="1429" width="1.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="302.80" y="1439.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (6 samples, 0.01%; -0.00%)</title><rect x="981.1" y="1509" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="984.08" y="1519.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (827 samples, 1.74%; +0.02%)</title><rect x="889.4" y="1525" width="20.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="892.42" y="1535.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (8 samples, 0.02%; +0.01%)</title><rect x="998.3" y="1493" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1001.31" y="1503.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (31 samples, 0.07%; 0.00%)</title><rect x="1046.1" y="1445" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1049.06" y="1455.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,829 samples, 12.24%; -0.01%)</title><rect x="117.8" y="1493" width="144.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="120.79" y="1503.5" >mutation_reader_me..</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (27 samples, 0.06%; -0.03%)</title><rect x="798.7" y="1285" width="0.7" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="801.73" y="1295.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%; +0.00%)</title><rect x="778.0" y="1477" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="781.02" y="1487.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.01%)</title><rect x="894.0" y="1461" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="896.96" y="1471.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="893.4" y="1477" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="896.36" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="811.2" y="1429" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="814.25" y="1439.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (9 samples, 0.02%; +0.01%)</title><rect x="22.3" y="1685" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="25.34" y="1695.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (12 samples, 0.03%; -0.00%)</title><rect x="646.8" y="1589" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="649.81" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; -0.00%)</title><rect x="491.0" y="1477" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="493.99" y="1487.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,088 samples, 2.28%; -0.03%)</title><rect x="887.3" y="1557" width="27.0" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="890.29" y="1567.5" >_..</text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (35 samples, 0.07%; +0.01%)</title><rect x="126.1" y="1445" width="0.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="129.14" y="1455.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%; +0.00%)</title><rect x="650.9" y="1621" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="653.95" y="1631.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (29 samples, 0.06%; 0.00%)</title><rect x="460.9" y="1445" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="463.94" y="1455.5" ></text>
</g>
<g >
<title>table::make_reader (4,562 samples, 9.58%; +0.12%)</title><rect x="424.9" y="1525" width="113.1" height="15.0" fill="rgb(255,60,60)" rx="2" ry="2" />
<text  x="427.93" y="1535.5" >table::make_r..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (19 samples, 0.04%; 0.00%)</title><rect x="805.8" y="1381" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="808.82" y="1391.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (11 samples, 0.02%; 0.00%)</title><rect x="365.1" y="1381" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="368.09" y="1391.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (56 samples, 0.12%; +0.07%)</title><rect x="448.8" y="1429" width="1.4" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="451.80" y="1439.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%; +0.00%)</title><rect x="684.9" y="1541" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="687.89" y="1551.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%; +0.00%)</title><rect x="578.7" y="1509" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="581.69" y="1519.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%; +0.03%)</title><rect x="920.8" y="1509" width="1.2" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="923.82" y="1519.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,224 samples, 10.97%; -0.03%)</title><rect x="289.0" y="1557" width="129.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="291.97" y="1567.5" >query::consume_p..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (14 samples, 0.03%; +0.01%)</title><rect x="321.3" y="1365" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="324.30" y="1375.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (13 samples, 0.03%; +0.00%)</title><rect x="19.4" y="1509" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="22.37" y="1519.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,659 samples, 97.98%; 0.00%)</title><rect x="21.8" y="1733" width="1156.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.82" y="1743.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (10 samples, 0.02%; 0.00%)</title><rect x="866.8" y="1557" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.80" y="1567.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (215 samples, 0.45%; +0.04%)</title><rect x="612.1" y="1605" width="5.3" height="15.0" fill="rgb(255,158,158)" rx="2" ry="2" />
<text  x="615.09" y="1615.5" ></text>
</g>
<g >
<title>operator new (97 samples, 0.20%; +0.00%)</title><rect x="1010.8" y="1445" width="2.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1013.77" y="1455.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%; -0.00%)</title><rect x="845.3" y="1573" width="1.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="848.29" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; +0.00%)</title><rect x="1070.1" y="1461" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1073.12" y="1471.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (87 samples, 0.18%; +0.01%)</title><rect x="235.3" y="1349" width="2.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="238.34" y="1359.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,744 samples, 22.56%; -0.01%)</title><rect x="873.7" y="1621" width="266.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="876.74" y="1631.5" >seastar::noncopyable_function&lt;seast..</text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,033 samples, 6.37%; +0.00%)</title><rect x="756.8" y="1589" width="75.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="759.76" y="1599.5" >cql3::st..</text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (121 samples, 0.25%; -0.00%)</title><rect x="716.6" y="1637" width="3.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="719.61" y="1647.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%; +0.01%)</title><rect x="778.0" y="1461" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="781.04" y="1471.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (6 samples, 0.01%; +0.01%)</title><rect x="367.5" y="1381" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="370.54" y="1391.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%; +0.01%)</title><rect x="230.3" y="1413" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="233.31" y="1423.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%; -0.01%)</title><rect x="710.4" y="1653" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="713.42" y="1663.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="1189.7" y="1797" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1192.68" y="1807.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (67 samples, 0.14%; 0.00%)</title><rect x="1153.4" y="1621" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.40" y="1631.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; +0.00%)</title><rect x="288.7" y="1557" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="291.72" y="1567.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (17 samples, 0.04%; +0.02%)</title><rect x="578.3" y="1509" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="581.27" y="1519.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (259 samples, 0.54%; -0.01%)</title><rect x="850.6" y="1621" width="6.4" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="853.57" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (29 samples, 0.06%; -0.01%)</title><rect x="100.2" y="1589" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="103.17" y="1599.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.07%; -0.01%)</title><rect x="792.1" y="1317" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="795.14" y="1327.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (16 samples, 0.03%; +0.01%)</title><rect x="830.0" y="1477" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="832.98" y="1487.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (12 samples, 0.03%; -0.02%)</title><rect x="697.1" y="1637" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="700.09" y="1647.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (11 samples, 0.02%; -0.00%)</title><rect x="857.8" y="1637" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="860.81" y="1647.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (6 samples, 0.01%; -0.03%)</title><rect x="123.8" y="1429" width="0.1" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="126.79" y="1439.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (32 samples, 0.07%; -0.01%)</title><rect x="134.4" y="1413" width="0.8" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="137.39" y="1423.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,874 samples, 10.24%; -0.01%)</title><rect x="420.4" y="1589" width="120.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="423.45" y="1599.5" >query::querier_..</text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (13 samples, 0.03%; 0.00%)</title><rect x="552.0" y="1573" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="554.95" y="1583.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (14 samples, 0.03%; 0.00%)</title><rect x="452.9" y="1493" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="455.91" y="1503.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (80 samples, 0.17%; -0.01%)</title><rect x="847.9" y="1541" width="2.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="850.92" y="1551.5" ></text>
</g>
<g >
<title>table::set_hit_rate (77 samples, 0.16%; 0.00%)</title><rect x="707.4" y="1621" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.37" y="1631.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="999.8" y="1445" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1002.79" y="1455.5" ></text>
</g>
<g >
<title>operator delete (42 samples, 0.09%; -0.01%)</title><rect x="591.5" y="1557" width="1.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="594.45" y="1567.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%; -0.00%)</title><rect x="76.1" y="1621" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="79.06" y="1631.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (14 samples, 0.03%; +0.01%)</title><rect x="804.3" y="1365" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="807.31" y="1375.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (25 samples, 0.05%; -0.02%)</title><rect x="528.2" y="1429" width="0.6" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="531.19" y="1439.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="1132.5" y="1541" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1135.54" y="1551.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (11 samples, 0.02%; +0.00%)</title><rect x="882.9" y="1589" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="885.86" y="1599.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (118 samples, 0.25%; +0.01%)</title><rect x="1130.3" y="1573" width="3.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1133.33" y="1583.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (61 samples, 0.13%; 0.00%)</title><rect x="1000.7" y="1413" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1003.73" y="1423.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; -0.00%)</title><rect x="842.9" y="1589" width="1.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="845.86" y="1599.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (193 samples, 0.41%; 0.00%)</title><rect x="15.4" y="1573" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.43" y="1583.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (44 samples, 0.09%; +0.01%)</title><rect x="1041.2" y="1429" width="1.1" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1044.25" y="1439.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,043 samples, 12.69%; +0.01%)</title><rect x="714.2" y="1669" width="149.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="717.18" y="1679.5" >seastar::internal::..</text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.01%; +0.01%)</title><rect x="1004.6" y="1461" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1007.65" y="1471.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (141 samples, 0.30%; +0.01%)</title><rect x="531.4" y="1477" width="3.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="534.41" y="1487.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; 0.00%)</title><rect x="69.4" y="1541" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="72.42" y="1551.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (52 samples, 0.11%; -0.00%)</title><rect x="758.8" y="1509" width="1.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="761.76" y="1519.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%; -0.03%)</title><rect x="638.0" y="1653" width="0.5" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="641.01" y="1663.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (8 samples, 0.02%; -0.00%)</title><rect x="35.0" y="1605" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="38.03" y="1615.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (7 samples, 0.01%; -0.01%)</title><rect x="1136.3" y="1589" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1139.33" y="1599.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%; +0.01%)</title><rect x="785.8" y="1461" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="788.82" y="1471.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (62 samples, 0.13%; +0.02%)</title><rect x="236.0" y="1333" width="1.5" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="238.96" y="1343.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (5 samples, 0.01%; +0.01%)</title><rect x="623.4" y="1589" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="626.37" y="1599.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%; +0.01%)</title><rect x="929.7" y="1557" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="932.72" y="1567.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (6 samples, 0.01%; +0.00%)</title><rect x="913.3" y="1541" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="916.29" y="1551.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (80 samples, 0.17%; -0.01%)</title><rect x="835.3" y="1573" width="1.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="838.26" y="1583.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%; +0.00%)</title><rect x="143.7" y="1429" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="146.73" y="1439.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.01%; +0.01%)</title><rect x="16.5" y="1413" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="19.54" y="1423.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (10 samples, 0.02%; -0.03%)</title><rect x="259.4" y="1445" width="0.3" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="262.41" y="1455.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (140 samples, 0.29%; 0.00%)</title><rect x="238.2" y="1381" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="241.17" y="1391.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (20 samples, 0.04%; +0.01%)</title><rect x="367.9" y="1365" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="370.89" y="1375.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (16 samples, 0.03%; -0.01%)</title><rect x="989.0" y="1461" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="991.96" y="1471.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (55 samples, 0.12%; 0.00%)</title><rect x="193.9" y="1269" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="196.86" y="1279.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (10 samples, 0.02%; -0.00%)</title><rect x="401.8" y="1365" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="404.81" y="1375.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,742 samples, 5.76%; -0.04%)</title><rect x="159.2" y="1413" width="67.9" height="15.0" fill="rgb(158,158,255)" rx="2" ry="2" />
<text  x="162.17" y="1423.5" >partiti..</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (41 samples, 0.09%; +0.00%)</title><rect x="745.2" y="1477" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="748.21" y="1487.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (7 samples, 0.01%; +0.01%)</title><rect x="721.8" y="1621" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="724.82" y="1631.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (35 samples, 0.07%; -0.00%)</title><rect x="996.4" y="1445" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="999.40" y="1455.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (29 samples, 0.06%; 0.00%)</title><rect x="1126.7" y="1589" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1129.69" y="1599.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (64 samples, 0.13%; -0.00%)</title><rect x="543.6" y="1541" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="546.55" y="1551.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (558 samples, 1.17%; -0.01%)</title><rect x="790.8" y="1397" width="13.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="793.83" y="1407.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (9 samples, 0.02%; +0.01%)</title><rect x="809.7" y="1445" width="0.2" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="812.66" y="1455.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (11 samples, 0.02%; -0.01%)</title><rect x="617.1" y="1589" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="620.07" y="1599.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (59 samples, 0.12%; +0.01%)</title><rect x="485.8" y="1493" width="1.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="488.84" y="1503.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="438.5" y="1429" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="441.49" y="1439.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (148 samples, 0.31%; +0.00%)</title><rect x="999.3" y="1477" width="3.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1002.35" y="1487.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (14 samples, 0.03%; +0.00%)</title><rect x="906.8" y="1477" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="909.77" y="1487.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="259.8" y="1429" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="262.80" y="1439.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (51 samples, 0.11%; +0.10%)</title><rect x="227.1" y="1413" width="1.3" height="15.0" fill="rgb(255,84,84)" rx="2" ry="2" />
<text  x="230.12" y="1423.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%; -0.00%)</title><rect x="948.5" y="1541" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="951.55" y="1551.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (31 samples, 0.07%; +0.02%)</title><rect x="818.5" y="1461" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="821.53" y="1471.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (72 samples, 0.15%; +0.01%)</title><rect x="410.7" y="1445" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="413.68" y="1455.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (8 samples, 0.02%; -0.00%)</title><rect x="830.2" y="1461" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="833.18" y="1471.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (34 samples, 0.07%; +0.00%)</title><rect x="866.5" y="1637" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="869.53" y="1647.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (402 samples, 0.84%; +0.00%)</title><rect x="309.2" y="1381" width="9.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="312.16" y="1391.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (6 samples, 0.01%; +0.01%)</title><rect x="600.6" y="1541" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="603.62" y="1551.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.01%)</title><rect x="51.4" y="1637" width="0.5" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="54.43" y="1647.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (8 samples, 0.02%; +0.00%)</title><rect x="162.8" y="1397" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="165.84" y="1407.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (5 samples, 0.01%; 0.00%)</title><rect x="940.0" y="1573" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="942.95" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (54 samples, 0.11%; -0.01%)</title><rect x="567.2" y="1445" width="1.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="570.22" y="1455.5" ></text>
</g>
<g >
<title>query::querier&lt; (14 samples, 0.03%; -0.01%)</title><rect x="59.2" y="1621" width="0.4" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="62.24" y="1631.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.00%)</title><rect x="1155.4" y="1589" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1158.38" y="1599.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (6 samples, 0.01%; 0.00%)</title><rect x="706.3" y="1589" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="709.30" y="1599.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (13 samples, 0.03%; +0.00%)</title><rect x="589.5" y="1573" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="592.52" y="1583.5" ></text>
</g>
<g >
<title>table::query (35 samples, 0.07%; +0.00%)</title><rect x="1175.6" y="1669" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1178.58" y="1679.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (290 samples, 0.61%; -0.01%)</title><rect x="542.7" y="1573" width="7.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="545.69" y="1583.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (14 samples, 0.03%; +0.00%)</title><rect x="1103.9" y="1525" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1106.94" y="1535.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (11 samples, 0.02%; -0.00%)</title><rect x="444.4" y="1461" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="447.36" y="1471.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%; -0.00%)</title><rect x="646.9" y="1573" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="649.93" y="1583.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (8 samples, 0.02%; -0.00%)</title><rect x="417.4" y="1541" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="420.38" y="1551.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (26 samples, 0.05%; +0.02%)</title><rect x="317.4" y="1349" width="0.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="320.41" y="1359.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="534.7" y="1461" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="537.73" y="1471.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (91 samples, 0.19%; +0.00%)</title><rect x="71.5" y="1557" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="74.45" y="1567.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (40 samples, 0.08%; +0.04%)</title><rect x="577.0" y="1525" width="1.0" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="580.00" y="1535.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="514.0" y="1445" width="0.1" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="516.97" y="1455.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (8 samples, 0.02%; +0.01%)</title><rect x="1077.7" y="1493" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1080.70" y="1503.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%; -0.01%)</title><rect x="848.9" y="1509" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="851.93" y="1519.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (174 samples, 0.37%; 0.00%)</title><rect x="668.5" y="1653" width="4.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="671.49" y="1663.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (50 samples, 0.10%; -0.01%)</title><rect x="282.4" y="1477" width="1.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="285.38" y="1487.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (35 samples, 0.07%; -0.01%)</title><rect x="484.3" y="1493" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="487.25" y="1503.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%; 0.00%)</title><rect x="529.0" y="1477" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="532.03" y="1487.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,378 samples, 7.09%; -0.00%)</title><rect x="306.3" y="1397" width="83.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="309.26" y="1407.5" >compact_m..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="788.1" y="1397" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="791.05" y="1407.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; 0.00%)</title><rect x="1115.0" y="1525" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1117.99" y="1535.5" ></text>
</g>
<g >
<title>__dynamic_cast (56 samples, 0.12%; +0.08%)</title><rect x="880.4" y="1589" width="1.3" height="15.0" fill="rgb(255,103,103)" rx="2" ry="2" />
<text  x="883.36" y="1599.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (384 samples, 0.81%; -0.01%)</title><rect x="309.5" y="1365" width="9.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="312.51" y="1375.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.01%)</title><rect x="216.7" y="1381" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="219.71" y="1391.5" ></text>
</g>
</g>
</svg>
