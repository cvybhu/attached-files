<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>locator::token_metadata_impl::first_token_index (14 samples, 0.03%; +0.02%)</title><rect x="1089.6" y="277" width="0.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1092.63" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (36 samples, 0.07%; +0.02%)</title><rect x="837.5" y="293" width="0.9" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="840.54" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (9 samples, 0.02%; -0.00%)</title><rect x="20.2" y="309" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="23.25" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (24 samples, 0.05%; 0.00%)</title><rect x="1141.1" y="293" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.13" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%; -0.02%)</title><rect x="318.1" y="197" width="0.1" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="321.13" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (126 samples, 0.26%; +0.00%)</title><rect x="1049.2" y="277" width="3.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1052.21" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="425.1" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="428.07" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (22 samples, 0.05%; +0.00%)</title><rect x="1130.0" y="373" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1132.96" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (27 samples, 0.06%; +0.02%)</title><rect x="652.1" y="469" width="0.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="655.05" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%; -0.01%)</title><rect x="212.6" y="117" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="215.57" y="127.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (59 samples, 0.12%; +0.00%)</title><rect x="73.6" y="405" width="1.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="76.60" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%; -0.01%)</title><rect x="138.2" y="277" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="141.19" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.03%; +0.01%)</title><rect x="553.9" y="389" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="556.91" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (51 samples, 0.10%; -0.00%)</title><rect x="778.4" y="357" width="1.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="781.40" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (17 samples, 0.03%; -0.00%)</title><rect x="583.9" y="341" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="586.85" y="351.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,859 samples, 38.72%; -0.16%)</title><rect x="99.4" y="437" width="456.9" height="15.0" fill="rgb(15,15,255)" rx="2" ry="2" />
<text  x="102.42" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.03%; -0.00%)</title><rect x="641.9" y="469" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="644.95" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="1005.4" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1008.39" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (7 samples, 0.01%; +0.01%)</title><rect x="1155.7" y="437" width="0.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1158.67" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (29 samples, 0.06%; -0.01%)</title><rect x="72.6" y="389" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="75.58" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (21 samples, 0.04%; +0.04%)</title><rect x="488.0" y="277" width="0.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="491.03" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (487 samples, 1.00%; +0.02%)</title><rect x="264.7" y="341" width="11.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="267.73" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (67 samples, 0.14%; -0.00%)</title><rect x="804.6" y="213" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="807.56" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%; +0.02%)</title><rect x="612.5" y="421" width="0.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="615.49" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.01%; +0.00%)</title><rect x="409.2" y="261" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="412.24" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (37 samples, 0.08%; +0.00%)</title><rect x="1140.9" y="485" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.87" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (723 samples, 1.48%; -0.02%)</title><rect x="899.9" y="389" width="17.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="902.90" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (10 samples, 0.02%; 0.00%)</title><rect x="954.4" y="325" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="957.44" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (22 samples, 0.05%; +0.01%)</title><rect x="805.6" y="165" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="808.61" y="175.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (49 samples, 0.10%; -0.01%)</title><rect x="560.2" y="325" width="1.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="563.23" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (5 samples, 0.01%; 0.00%)</title><rect x="1177.1" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.09" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; -0.00%)</title><rect x="832.5" y="341" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="835.52" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (81 samples, 0.17%; -0.03%)</title><rect x="735.6" y="309" width="2.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="738.59" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (102 samples, 0.21%; +0.01%)</title><rect x="988.8" y="325" width="2.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="991.79" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%; +0.00%)</title><rect x="1103.2" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1106.22" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,363 samples, 2.80%; +0.02%)</title><rect x="557.2" y="405" width="33.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="560.15" y="415.5" >fl..</text>
</g>
<g >
<title>operator new (21 samples, 0.04%; -0.00%)</title><rect x="848.2" y="373" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="851.17" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (88 samples, 0.18%; -0.00%)</title><rect x="746.5" y="373" width="2.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="749.47" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%; +0.01%)</title><rect x="432.6" y="357" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="435.55" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (5 samples, 0.01%; +0.01%)</title><rect x="538.0" y="309" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="540.99" y="319.5" ></text>
</g>
<g >
<title>create_partitions (277 samples, 0.57%; 0.00%)</title><rect x="17.1" y="533" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.10" y="543.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (31 samples, 0.06%; +0.03%)</title><rect x="564.3" y="309" width="0.8" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="567.35" y="319.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="607.9" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="610.86" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (8 samples, 0.02%; +0.01%)</title><rect x="495.9" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="498.88" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; +0.01%)</title><rect x="1041.6" y="245" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1044.61" y="255.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (14 samples, 0.03%; +0.01%)</title><rect x="304.1" y="197" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="307.10" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (236 samples, 0.48%; +0.01%)</title><rect x="1061.4" y="325" width="5.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1064.45" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (285 samples, 0.59%; +0.01%)</title><rect x="580.6" y="373" width="6.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="583.63" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (11 samples, 0.02%; +0.00%)</title><rect x="693.2" y="309" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="696.24" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="571.7" y="261" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="574.67" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (14 samples, 0.03%; +0.01%)</title><rect x="254.4" y="293" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="257.43" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (85 samples, 0.17%; +0.01%)</title><rect x="675.0" y="485" width="2.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="678.04" y="495.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%; +0.00%)</title><rect x="142.4" y="229" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="145.40" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; -0.00%)</title><rect x="862.6" y="325" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="865.64" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (20 samples, 0.04%; -0.01%)</title><rect x="133.4" y="229" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="136.41" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (11 samples, 0.02%; -0.02%)</title><rect x="454.5" y="261" width="0.2" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="457.45" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (18 samples, 0.04%; +0.01%)</title><rect x="1171.9" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1174.85" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (6 samples, 0.01%; +0.01%)</title><rect x="237.5" y="197" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="240.52" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (39 samples, 0.08%; +0.01%)</title><rect x="539.7" y="341" width="0.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="542.66" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="452.0" y="309" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="455.01" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%; -0.00%)</title><rect x="1174.8" y="421" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1177.79" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (27 samples, 0.06%; +0.00%)</title><rect x="222.9" y="197" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="225.89" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,560 samples, 9.36%; -0.01%)</title><rect x="430.5" y="389" width="110.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="433.47" y="399.5" >std::function..</text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%; +0.00%)</title><rect x="901.7" y="325" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="904.72" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%; +0.00%)</title><rect x="829.8" y="261" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="832.81" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.05%; +0.02%)</title><rect x="486.9" y="181" width="0.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="489.89" y="191.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (7 samples, 0.01%; -0.00%)</title><rect x="1052.5" y="277" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1055.51" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (63 samples, 0.13%; +0.04%)</title><rect x="877.2" y="501" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="880.15" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (11 samples, 0.02%; -0.02%)</title><rect x="712.7" y="405" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="715.67" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (12 samples, 0.02%; +0.02%)</title><rect x="137.4" y="261" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="140.36" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (10 samples, 0.02%; +0.00%)</title><rect x="1104.2" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1107.23" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="581" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>database::find_uuid (196 samples, 0.40%; 0.00%)</title><rect x="835.3" y="357" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.29" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (8 samples, 0.02%; +0.01%)</title><rect x="45.8" y="485" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="48.83" y="495.5" ></text>
</g>
<g >
<title>[unknown] (585 samples, 1.20%; 0.00%)</title><rect x="10.0" y="629" width="14.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (6 samples, 0.01%; +0.00%)</title><rect x="656.6" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="659.63" y="399.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%; -0.01%)</title><rect x="238.0" y="213" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="240.96" y="223.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (8 samples, 0.02%; 0.00%)</title><rect x="1176.0" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.02" y="415.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.01%; 0.00%)</title><rect x="23.5" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.52" y="383.5" ></text>
</g>
<g >
<title>validation::validate_column_family (20 samples, 0.04%; +0.04%)</title><rect x="843.8" y="405" width="0.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="846.76" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; 0.00%)</title><rect x="862.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.78" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (119 samples, 0.24%; +0.01%)</title><rect x="1038.6" y="229" width="2.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1041.58" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%; +0.01%)</title><rect x="648.0" y="485" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="651.03" y="495.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (5 samples, 0.01%; +0.01%)</title><rect x="1046.4" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1049.38" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (16 samples, 0.03%; 0.00%)</title><rect x="1051.9" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1054.88" y="223.5" ></text>
</g>
<g >
<title>auth::resource::parent (89 samples, 0.18%; -0.01%)</title><rect x="790.6" y="325" width="2.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="793.56" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (48 samples, 0.10%; +0.01%)</title><rect x="736.1" y="293" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="739.10" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.01%)</title><rect x="55.9" y="469" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="58.94" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.00%)</title><rect x="838.3" y="261" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="841.29" y="271.5" ></text>
</g>
<g >
<title>operator delete (84 samples, 0.17%; +0.04%)</title><rect x="561.7" y="325" width="2.0" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="564.66" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="831.7" y="357" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="834.72" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (9 samples, 0.02%; +0.01%)</title><rect x="25.7" y="517" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="28.65" y="527.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.17%; -0.00%)</title><rect x="1038.9" y="213" width="2.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1041.89" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%; -0.00%)</title><rect x="449.0" y="261" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="452.03" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (35 samples, 0.07%; +0.01%)</title><rect x="324.1" y="181" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="327.09" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (314 samples, 0.64%; -0.04%)</title><rect x="1156.7" y="469" width="7.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1159.66" y="479.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (359 samples, 0.74%; -0.02%)</title><rect x="198.4" y="165" width="8.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="201.42" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (6 samples, 0.01%; +0.01%)</title><rect x="78.2" y="453" width="0.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="81.18" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (10 samples, 0.02%; -0.01%)</title><rect x="711.0" y="437" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="714.02" y="447.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (13 samples, 0.03%; -0.01%)</title><rect x="1052.7" y="277" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1055.68" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (105 samples, 0.22%; -0.05%)</title><rect x="449.4" y="309" width="2.5" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="452.39" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (22 samples, 0.05%; -0.01%)</title><rect x="108.8" y="373" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="111.85" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (107 samples, 0.22%; +0.05%)</title><rect x="361.5" y="165" width="2.6" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="364.49" y="175.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,969 samples, 4.04%; +0.01%)</title><rect x="782.6" y="389" width="47.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="785.59" y="399.5" >std:..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (403 samples, 0.83%; +0.01%)</title><rect x="673.6" y="501" width="9.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="676.59" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (40 samples, 0.08%; 0.00%)</title><rect x="654.5" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.45" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (32 samples, 0.07%; -0.01%)</title><rect x="839.0" y="293" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="841.97" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; 0.00%)</title><rect x="655.4" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.42" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (21 samples, 0.04%; +0.00%)</title><rect x="772.1" y="309" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="775.10" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (16 samples, 0.03%; +0.01%)</title><rect x="1055.1" y="325" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1058.15" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (39 samples, 0.08%; +0.00%)</title><rect x="68.5" y="405" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="71.49" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (54 samples, 0.11%; +0.01%)</title><rect x="268.4" y="309" width="1.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="271.36" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.00%)</title><rect x="990.9" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="993.92" y="287.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.14%; -0.01%)</title><rect x="970.9" y="373" width="1.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="973.91" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (9 samples, 0.02%; +0.02%)</title><rect x="754.3" y="309" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="757.32" y="319.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (17 samples, 0.03%; 0.00%)</title><rect x="631.8" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="634.82" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (30 samples, 0.06%; -0.01%)</title><rect x="97.2" y="405" width="0.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="100.22" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::stats (49 samples, 0.10%; +0.02%)</title><rect x="503.6" y="245" width="1.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="506.64" y="255.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (37 samples, 0.08%; -0.00%)</title><rect x="149.2" y="197" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="152.24" y="207.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%; 0.00%)</title><rect x="1188.9" y="629" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.86" y="639.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (8 samples, 0.02%; -0.00%)</title><rect x="399.1" y="213" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="402.09" y="223.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; -0.01%)</title><rect x="32.1" y="485" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="35.07" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (50 samples, 0.10%; +0.00%)</title><rect x="629.2" y="405" width="1.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="632.16" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="151.1" y="197" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="154.05" y="207.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.14%; -0.01%)</title><rect x="763.2" y="405" width="1.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="766.16" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,703 samples, 11.71%; -0.07%)</title><rect x="968.1" y="389" width="138.2" height="15.0" fill="rgb(118,118,255)" rx="2" ry="2" />
<text  x="971.15" y="399.5" >service::storage_..</text>
</g>
<g >
<title>operator new (32 samples, 0.07%; 0.00%)</title><rect x="614.3" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="617.33" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (16 samples, 0.03%; -0.01%)</title><rect x="875.6" y="485" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="878.62" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (11 samples, 0.02%; +0.01%)</title><rect x="1139.3" y="437" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1142.27" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (269 samples, 0.55%; -0.00%)</title><rect x="442.7" y="293" width="6.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="445.68" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (5 samples, 0.01%; +0.01%)</title><rect x="669.9" y="485" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="672.91" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (22 samples, 0.05%; +0.00%)</title><rect x="612.3" y="437" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="615.27" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (49 samples, 0.10%; +0.01%)</title><rect x="982.3" y="309" width="1.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="985.27" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%; +0.01%)</title><rect x="276.0" y="325" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="278.97" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (136 samples, 0.28%; +0.02%)</title><rect x="234.5" y="213" width="3.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="237.54" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (14 samples, 0.03%; -0.01%)</title><rect x="656.8" y="389" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="659.83" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume (6 samples, 0.01%; +0.00%)</title><rect x="693.3" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="696.29" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (40 samples, 0.08%; +0.01%)</title><rect x="752.4" y="293" width="0.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="755.38" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (101 samples, 0.21%; 0.00%)</title><rect x="827.6" y="325" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="830.63" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%; -0.01%)</title><rect x="195.1" y="117" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="198.07" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (181 samples, 0.37%; -0.00%)</title><rect x="835.5" y="341" width="4.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="838.48" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (6 samples, 0.01%; +0.01%)</title><rect x="1016.3" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1019.29" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (11 samples, 0.02%; 0.00%)</title><rect x="23.4" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.45" y="495.5" ></text>
</g>
<g >
<title>database::query (5 samples, 0.01%; +0.00%)</title><rect x="24.4" y="517" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="27.39" y="527.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (8 samples, 0.02%; -0.00%)</title><rect x="825.1" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="828.09" y="351.5" ></text>
</g>
<g >
<title>row::external_memory_usage (305 samples, 0.63%; 0.00%)</title><rect x="199.7" y="149" width="7.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="202.73" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (6 samples, 0.01%; +0.01%)</title><rect x="769.0" y="373" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="772.00" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%; +0.00%)</title><rect x="873.5" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="876.54" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (13 samples, 0.03%; +0.02%)</title><rect x="916.3" y="341" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="919.28" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (140 samples, 0.29%; -0.01%)</title><rect x="70.1" y="405" width="3.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="73.06" y="415.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (60 samples, 0.12%; -0.03%)</title><rect x="1133.8" y="389" width="1.5" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="1136.82" y="399.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (5 samples, 0.01%; -0.00%)</title><rect x="607.1" y="405" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="610.09" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,306 samples, 2.68%; +0.08%)</title><rect x="166.2" y="133" width="31.7" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="169.22" y="143.5" >co..</text>
</g>
<g >
<title>seastar::internal::future_base::future_base (14 samples, 0.03%; +0.02%)</title><rect x="787.2" y="341" width="0.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="790.22" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (28 samples, 0.06%; +0.01%)</title><rect x="54.4" y="469" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="57.41" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (609 samples, 1.25%; +0.03%)</title><rect x="650.2" y="485" width="14.7" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="653.16" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="142.6" y="261" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="145.62" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (277 samples, 0.57%; 0.00%)</title><rect x="17.1" y="565" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.10" y="575.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (38 samples, 0.08%; +0.07%)</title><rect x="1053.8" y="293" width="1.0" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="1056.84" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%; +0.01%)</title><rect x="443.5" y="245" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="446.45" y="255.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.12%; 0.00%)</title><rect x="1160.3" y="437" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.30" y="447.5" ></text>
</g>
<g >
<title>__start_context (286 samples, 0.59%; 0.00%)</title><rect x="16.9" y="613" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.88" y="623.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (91 samples, 0.19%; -0.01%)</title><rect x="622.6" y="405" width="2.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="625.62" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (62 samples, 0.13%; +0.02%)</title><rect x="326.5" y="181" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="329.46" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (106 samples, 0.22%; -0.01%)</title><rect x="1013.5" y="261" width="2.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1016.53" y="271.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (94 samples, 0.19%; -0.01%)</title><rect x="530.0" y="309" width="2.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="532.99" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (679 samples, 1.39%; +0.04%)</title><rect x="900.1" y="373" width="16.5" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="903.14" y="383.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (67 samples, 0.14%; -0.00%)</title><rect x="1164.8" y="469" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1167.78" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; +0.01%)</title><rect x="1077.9" y="325" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1080.92" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 0.08%; -0.07%)</title><rect x="905.3" y="293" width="1.0" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="908.30" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,829 samples, 3.76%; -0.03%)</title><rect x="1008.7" y="293" width="44.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1011.68" y="303.5" >serv..</text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%; -0.01%)</title><rect x="785.7" y="357" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="788.67" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%; 0.00%)</title><rect x="1176.1" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.09" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%; -0.00%)</title><rect x="842.0" y="277" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="844.97" y="287.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; +0.01%)</title><rect x="817.3" y="245" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="820.28" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (23 samples, 0.05%; -0.00%)</title><rect x="1141.2" y="229" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1144.16" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="623.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (156 samples, 0.32%; +0.01%)</title><rect x="509.3" y="229" width="3.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="512.28" y="239.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (56 samples, 0.11%; -0.00%)</title><rect x="285.6" y="309" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="288.59" y="319.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.01%; +0.01%)</title><rect x="657.2" y="421" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="660.24" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (45 samples, 0.09%; -0.00%)</title><rect x="1159.0" y="405" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1162.04" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (24 samples, 0.05%; -0.00%)</title><rect x="1151.2" y="469" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1154.19" y="479.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous, auth::get_permissions (8 samples, 0.02%; +0.01%)</title><rect x="822.6" y="309" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="825.64" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (487 samples, 1.00%; +0.01%)</title><rect x="706.6" y="485" width="11.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="709.59" y="495.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.03%; +0.00%)</title><rect x="629.4" y="389" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="632.45" y="399.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.01%)</title><rect x="872.5" y="437" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="875.55" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (31 samples, 0.06%; -0.00%)</title><rect x="666.9" y="485" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="669.88" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.03%; +0.02%)</title><rect x="585.7" y="325" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="588.69" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (78 samples, 0.16%; +0.00%)</title><rect x="687.4" y="469" width="1.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="690.45" y="479.5" ></text>
</g>
<g >
<title>operator delete (50 samples, 0.10%; 0.00%)</title><rect x="1123.4" y="421" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1126.35" y="431.5" ></text>
</g>
<g >
<title>database::find_keyspace (250 samples, 0.51%; +0.00%)</title><rect x="1061.3" y="341" width="6.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1064.28" y="351.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (84 samples, 0.17%; -0.01%)</title><rect x="519.7" y="325" width="2.0" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="522.67" y="335.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (5 samples, 0.01%; -0.01%)</title><rect x="275.8" y="325" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="278.85" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (35 samples, 0.07%; +0.06%)</title><rect x="745.1" y="389" width="0.8" height="15.0" fill="rgb(255,131,131)" rx="2" ry="2" />
<text  x="748.06" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (8 samples, 0.02%; 0.00%)</title><rect x="701.9" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="704.91" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (16 samples, 0.03%; -0.00%)</title><rect x="225.9" y="229" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="228.89" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (313 samples, 0.64%; -0.02%)</title><rect x="505.6" y="245" width="7.6" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="508.65" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="579.2" y="325" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="582.18" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (57 samples, 0.12%; -0.01%)</title><rect x="147.2" y="197" width="1.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="150.25" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="495.5" ></text>
</g>
<g >
<title>schema_registry::get (161 samples, 0.33%; +0.00%)</title><rect x="979.9" y="357" width="3.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="982.90" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (7 samples, 0.01%; -0.02%)</title><rect x="24.6" y="517" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="27.63" y="527.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%; +0.00%)</title><rect x="480.8" y="229" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="483.81" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%; +0.00%)</title><rect x="45.7" y="485" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="48.69" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (24 samples, 0.05%; 0.00%)</title><rect x="693.1" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (9 samples, 0.02%; +0.01%)</title><rect x="659.0" y="389" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="662.03" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (82 samples, 0.17%; +0.05%)</title><rect x="997.0" y="277" width="2.0" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="1000.00" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.02%)</title><rect x="807.9" y="117" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="810.91" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="20.3" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.30" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (200 samples, 0.41%; +0.01%)</title><rect x="1170.2" y="485" width="4.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1173.23" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (41 samples, 0.08%; +0.00%)</title><rect x="818.4" y="245" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="821.37" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%; +0.02%)</title><rect x="614.3" y="405" width="0.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="617.33" y="415.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (9 samples, 0.02%; +0.00%)</title><rect x="421.6" y="341" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="424.60" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (35 samples, 0.07%; -0.01%)</title><rect x="749.6" y="373" width="0.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="752.64" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (67 samples, 0.14%; +0.00%)</title><rect x="872.0" y="469" width="1.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="875.04" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (17 samples, 0.03%; +0.01%)</title><rect x="1076.3" y="293" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1079.35" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (88 samples, 0.18%; +0.03%)</title><rect x="550.4" y="325" width="2.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="553.39" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="547.9" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="550.92" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (31 samples, 0.06%; +0.00%)</title><rect x="666.0" y="485" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="668.96" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%; 0.00%)</title><rect x="24.0" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.00" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (30 samples, 0.06%; +0.01%)</title><rect x="71.9" y="373" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="74.85" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (65 samples, 0.13%; -0.00%)</title><rect x="654.0" y="437" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="657.04" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (229 samples, 0.47%; -0.01%)</title><rect x="950.4" y="421" width="5.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="953.41" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (282 samples, 0.58%; +0.12%)</title><rect x="200.1" y="133" width="6.8" height="15.0" fill="rgb(255,65,65)" rx="2" ry="2" />
<text  x="203.06" y="143.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (69 samples, 0.14%; -0.00%)</title><rect x="751.8" y="309" width="1.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="754.80" y="319.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; +0.02%)</title><rect x="150.2" y="197" width="0.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="153.20" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (6 samples, 0.01%; 0.00%)</title><rect x="448.7" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="451.71" y="287.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (10 samples, 0.02%; 0.00%)</title><rect x="531.8" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="534.81" y="287.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (324 samples, 0.67%; -0.13%)</title><rect x="468.4" y="293" width="7.8" height="15.0" fill="rgb(45,45,255)" rx="2" ry="2" />
<text  x="471.38" y="303.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (7 samples, 0.01%; -0.01%)</title><rect x="122.2" y="261" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="125.20" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; +0.04%)</title><rect x="856.7" y="405" width="1.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="859.70" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (13 samples, 0.03%; +0.00%)</title><rect x="606.5" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="609.51" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (13 samples, 0.03%; +0.00%)</title><rect x="486.1" y="181" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="489.12" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; -0.02%)</title><rect x="845.8" y="421" width="0.1" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="848.78" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; +0.01%)</title><rect x="772.2" y="293" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="775.22" y="303.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (22 samples, 0.05%; +0.02%)</title><rect x="1079.1" y="325" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1082.11" y="335.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.03%)</title><rect x="683.9" y="485" width="0.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="686.94" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (52 samples, 0.11%; +0.03%)</title><rect x="951.9" y="357" width="1.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="954.87" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (26 samples, 0.05%; +0.01%)</title><rect x="1075.7" y="293" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1078.69" y="303.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; -0.00%)</title><rect x="1098.1" y="245" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1101.06" y="255.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (232 samples, 0.48%; -0.01%)</title><rect x="1030.2" y="197" width="5.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1033.17" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; 0.00%)</title><rect x="932.1" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="935.12" y="399.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,068 samples, 2.19%; -0.00%)</title><rect x="493.2" y="325" width="25.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="496.22" y="335.5" >m..</text>
</g>
<g >
<title>operator delete (57 samples, 0.12%; +0.02%)</title><rect x="941.3" y="405" width="1.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="944.26" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (32 samples, 0.07%; +0.01%)</title><rect x="607.2" y="405" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="610.21" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (13 samples, 0.03%; +0.00%)</title><rect x="865.7" y="389" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.69" y="399.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (14 samples, 0.03%; +0.00%)</title><rect x="1114.5" y="357" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1117.48" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (22 samples, 0.05%; +0.02%)</title><rect x="998.0" y="261" width="0.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="1001.02" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (150 samples, 0.31%; +0.01%)</title><rect x="453.6" y="277" width="3.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="456.63" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="421.8" y="325" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="424.84" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (9 samples, 0.02%; -0.01%)</title><rect x="214.0" y="149" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="217.04" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (13 samples, 0.03%; +0.01%)</title><rect x="367.0" y="197" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="369.97" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (18 samples, 0.04%; +0.02%)</title><rect x="107.4" y="373" width="0.5" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="110.42" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.07%; 0.00%)</title><rect x="1159.2" y="373" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.18" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%; +0.01%)</title><rect x="672.5" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="675.45" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; +0.00%)</title><rect x="1119.3" y="357" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1122.28" y="367.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.09%; +0.02%)</title><rect x="35.2" y="469" width="1.1" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="38.20" y="479.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (21 samples, 0.04%; 0.00%)</title><rect x="475.7" y="277" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="478.73" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%; -0.01%)</title><rect x="1038.1" y="229" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1041.09" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%; 0.00%)</title><rect x="772.7" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="775.66" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (51 samples, 0.10%; +0.04%)</title><rect x="579.4" y="373" width="1.2" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="582.39" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (12 samples, 0.02%; +0.02%)</title><rect x="1061.8" y="309" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1064.81" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (18 samples, 0.04%; +0.00%)</title><rect x="676.0" y="469" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="679.01" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (44 samples, 0.09%; +0.02%)</title><rect x="124.3" y="277" width="1.0" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="127.26" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="621.9" y="405" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="624.94" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (5 samples, 0.01%; +0.00%)</title><rect x="628.4" y="437" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="631.38" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (30 samples, 0.06%; -0.00%)</title><rect x="883.6" y="469" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="886.57" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (73 samples, 0.15%; -0.01%)</title><rect x="260.0" y="325" width="1.8" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="263.03" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%; -0.00%)</title><rect x="460.5" y="325" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="463.49" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (43 samples, 0.09%; -0.04%)</title><rect x="773.7" y="325" width="1.0" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="776.65" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (22 samples, 0.05%; +0.03%)</title><rect x="619.1" y="437" width="0.5" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="622.08" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="712.9" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="715.94" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (25 samples, 0.05%; +0.00%)</title><rect x="878.8" y="501" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="881.82" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (84 samples, 0.17%; +0.00%)</title><rect x="577.4" y="373" width="2.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="580.36" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (25 samples, 0.05%; +0.00%)</title><rect x="591.2" y="421" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="594.17" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (101 samples, 0.21%; +0.01%)</title><rect x="416.3" y="277" width="2.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="419.27" y="287.5" ></text>
</g>
<g >
<title>operator new (101 samples, 0.21%; +0.00%)</title><rect x="992.1" y="325" width="2.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="995.09" y="335.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (5 samples, 0.01%; -0.01%)</title><rect x="903.2" y="309" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="906.24" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (6 samples, 0.01%; +0.01%)</title><rect x="773.1" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="776.14" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (67 samples, 0.14%; +0.01%)</title><rect x="747.0" y="341" width="1.6" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="749.98" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (164 samples, 0.34%; +0.06%)</title><rect x="835.8" y="325" width="4.0" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="838.84" y="335.5" ></text>
</g>
<g >
<title>operator delete (76 samples, 0.16%; +0.02%)</title><rect x="584.3" y="341" width="1.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="587.26" y="351.5" ></text>
</g>
<g >
<title>database::find_schema (70 samples, 0.14%; -0.02%)</title><rect x="767.2" y="389" width="1.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="770.18" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (29 samples, 0.06%; +0.01%)</title><rect x="413.2" y="277" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="416.22" y="287.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (9 samples, 0.02%; -0.00%)</title><rect x="236.7" y="165" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="239.67" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%; 0.00%)</title><rect x="908.9" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="911.86" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%; +0.01%)</title><rect x="715.4" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="718.43" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (22 samples, 0.05%; -0.01%)</title><rect x="121.8" y="277" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="124.83" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,512 samples, 11.32%; -0.01%)</title><rect x="285.3" y="325" width="133.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="288.30" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (21 samples, 0.04%; +0.01%)</title><rect x="224.1" y="213" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="227.15" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (18 samples, 0.04%; -0.00%)</title><rect x="512.6" y="213" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="515.55" y="223.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (613 samples, 1.26%; -0.01%)</title><rect x="1081.4" y="293" width="14.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1084.39" y="303.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (55 samples, 0.11%; -0.05%)</title><rect x="932.3" y="389" width="1.4" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="935.34" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (168 samples, 0.34%; +0.01%)</title><rect x="653.8" y="453" width="4.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="656.77" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (34 samples, 0.07%; +0.00%)</title><rect x="39.6" y="421" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="42.56" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (124 samples, 0.25%; +0.00%)</title><rect x="186.3" y="53" width="3.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="189.28" y="63.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (77 samples, 0.16%; +0.01%)</title><rect x="771.2" y="341" width="1.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="774.23" y="351.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.18%; 0.00%)</title><rect x="977.8" y="357" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="980.79" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,375 samples, 13.09%; +0.01%)</title><rect x="721.9" y="501" width="154.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="724.92" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (62 samples, 0.13%; -0.01%)</title><rect x="1153.9" y="453" width="1.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1156.90" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="693.1" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; 0.00%)</title><rect x="194.9" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="197.93" y="127.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (21 samples, 0.04%; +0.01%)</title><rect x="848.7" y="373" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="851.68" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (8 samples, 0.02%; +0.00%)</title><rect x="326.3" y="165" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="329.27" y="175.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="797.1" y="245" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="800.13" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (177 samples, 0.36%; +0.02%)</title><rect x="94.4" y="437" width="4.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="97.43" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.05%; +0.00%)</title><rect x="949.8" y="325" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="952.76" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%; -0.01%)</title><rect x="1103.7" y="357" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1106.68" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (87 samples, 0.18%; -0.01%)</title><rect x="961.4" y="405" width="2.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="964.37" y="415.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (60 samples, 0.12%; +0.02%)</title><rect x="223.5" y="229" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="226.54" y="239.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%; +0.01%)</title><rect x="674.0" y="485" width="0.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="676.95" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (50 samples, 0.10%; +0.01%)</title><rect x="805.0" y="197" width="1.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="807.98" y="207.5" ></text>
</g>
<g >
<title>table::set_hit_rate (77 samples, 0.16%; -0.01%)</title><rect x="715.6" y="453" width="1.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="718.60" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%; -0.00%)</title><rect x="255.3" y="309" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="258.30" y="319.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (21 samples, 0.04%; +0.00%)</title><rect x="814.0" y="101" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="817.01" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (36 samples, 0.07%; -0.01%)</title><rect x="663.9" y="453" width="0.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="666.90" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (770 samples, 1.58%; -0.02%)</title><rect x="1079.6" y="325" width="18.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1082.64" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%; +0.01%)</title><rect x="652.9" y="469" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="655.90" y="479.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (28 samples, 0.06%; +0.00%)</title><rect x="39.6" y="405" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="42.63" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (12 samples, 0.02%; +0.01%)</title><rect x="1032.5" y="149" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1035.50" y="159.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (5 samples, 0.01%; +0.01%)</title><rect x="599.6" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="602.58" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (40 samples, 0.08%; -0.04%)</title><rect x="591.8" y="421" width="0.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="594.77" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; -0.02%)</title><rect x="972.0" y="341" width="0.6" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="975.03" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (21 samples, 0.04%; +0.02%)</title><rect x="75.9" y="453" width="0.5" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="78.85" y="463.5" ></text>
</g>
<g >
<title>all (48,705 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%; +0.00%)</title><rect x="93.9" y="437" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="96.95" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (13 samples, 0.03%; 0.00%)</title><rect x="555.4" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.41" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (13,347 samples, 27.40%; +0.05%)</title><rect x="103.5" y="421" width="323.4" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="106.49" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%; +0.02%)</title><rect x="568.0" y="293" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="571.01" y="303.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (8 samples, 0.02%; -0.01%)</title><rect x="237.3" y="165" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="240.33" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (335 samples, 0.69%; -0.03%)</title><rect x="991.9" y="341" width="8.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="994.92" y="351.5" ></text>
</g>
<g >
<title>query::result::result (13 samples, 0.03%; +0.01%)</title><rect x="615.1" y="421" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="618.11" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (61 samples, 0.13%; -0.01%)</title><rect x="147.2" y="213" width="1.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="150.18" y="223.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; +0.00%)</title><rect x="1054.8" y="293" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1057.79" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; +0.01%)</title><rect x="41.7" y="453" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="44.67" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (84 samples, 0.17%; 0.00%)</title><rect x="535.7" y="277" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="538.71" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="819.2" y="197" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="822.25" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%; +0.01%)</title><rect x="644.9" y="469" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="647.91" y="479.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (60 samples, 0.12%; -0.00%)</title><rect x="148.7" y="213" width="1.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="151.68" y="223.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (143 samples, 0.29%; -0.00%)</title><rect x="185.8" y="69" width="3.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="188.84" y="79.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (7 samples, 0.01%; +0.00%)</title><rect x="1150.1" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1153.15" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (97 samples, 0.20%; -0.01%)</title><rect x="801.7" y="197" width="2.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="804.66" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%; +0.01%)</title><rect x="684.9" y="485" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="687.86" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%; -0.00%)</title><rect x="862.6" y="341" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="865.59" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (21 samples, 0.04%; -0.08%)</title><rect x="506.3" y="229" width="0.5" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="509.32" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (47 samples, 0.10%; +0.01%)</title><rect x="1166.4" y="469" width="1.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1169.40" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="522.5" y="309" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="525.46" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (499 samples, 1.02%; -0.00%)</title><rect x="31.8" y="501" width="12.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="34.76" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%; +0.01%)</title><rect x="819.4" y="261" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="822.44" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; +0.01%)</title><rect x="415.7" y="277" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="418.71" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (21 samples, 0.04%; +0.00%)</title><rect x="842.3" y="293" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="845.34" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%; 0.00%)</title><rect x="824.3" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="827.33" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%; +0.01%)</title><rect x="272.0" y="277" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="275.04" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="453.5" y="261" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="456.48" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (16 samples, 0.03%; -0.02%)</title><rect x="144.7" y="245" width="0.4" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="147.73" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; +0.01%)</title><rect x="41.4" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="44.45" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (10 samples, 0.02%; +0.00%)</title><rect x="240.3" y="229" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="243.28" y="239.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (10 samples, 0.02%; +0.01%)</title><rect x="364.9" y="197" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="367.93" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.04%; +0.00%)</title><rect x="998.6" y="261" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1001.55" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="536.5" y="229" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="539.46" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (197 samples, 0.40%; 0.00%)</title><rect x="17.5" y="405" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.49" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (14 samples, 0.03%; +0.02%)</title><rect x="1078.5" y="341" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1081.53" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="839.9" y="341" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="842.86" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (274 samples, 0.56%; -0.02%)</title><rect x="864.4" y="453" width="6.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="867.36" y="463.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (420 samples, 0.86%; +0.00%)</title><rect x="1178.7" y="629" width="10.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1181.69" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%; -0.00%)</title><rect x="764.9" y="405" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="767.86" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (48 samples, 0.10%; -0.03%)</title><rect x="520.5" y="293" width="1.1" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="523.47" y="303.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (5 samples, 0.01%; +0.01%)</title><rect x="329.8" y="181" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="332.80" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (8 samples, 0.02%; -0.01%)</title><rect x="956.0" y="421" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="958.96" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (19 samples, 0.04%; +0.03%)</title><rect x="459.1" y="325" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="462.08" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (9 samples, 0.02%; +0.01%)</title><rect x="523.8" y="325" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="526.77" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="80.7" y="453" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="83.72" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%; -0.05%)</title><rect x="803.8" y="133" width="0.2" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="806.77" y="143.5" ></text>
</g>
<g >
<title>schema::column_at (74 samples, 0.15%; +0.03%)</title><rect x="388.1" y="165" width="1.8" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="391.12" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (7 samples, 0.01%; +0.01%)</title><rect x="64.1" y="437" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="67.08" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (497 samples, 1.02%; +0.01%)</title><rect x="476.5" y="293" width="12.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="479.55" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (13 samples, 0.03%; +0.01%)</title><rect x="1095.6" y="245" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1098.63" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (189 samples, 0.39%; +0.02%)</title><rect x="146.6" y="229" width="4.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="149.62" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (46 samples, 0.09%; -0.01%)</title><rect x="1155.5" y="453" width="1.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1158.55" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (42 samples, 0.09%; -0.00%)</title><rect x="150.2" y="213" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="153.18" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.06%; 0.00%)</title><rect x="879.6" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.65" y="479.5" ></text>
</g>
<g >
<title>auth::operator== (5 samples, 0.01%; -0.02%)</title><rect x="807.6" y="149" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="810.59" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%; +0.00%)</title><rect x="288.1" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="291.11" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (10 samples, 0.02%; -0.02%)</title><rect x="33.3" y="469" width="0.2" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="36.28" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (60 samples, 0.12%; 0.00%)</title><rect x="1158.7" y="421" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.67" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (180 samples, 0.37%; 0.00%)</title><rect x="242.1" y="245" width="4.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="245.05" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (18 samples, 0.04%; +0.01%)</title><rect x="876.4" y="501" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="879.40" y="511.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (5 samples, 0.01%; 0.00%)</title><rect x="605.8" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="608.80" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (23 samples, 0.05%; +0.01%)</title><rect x="828.9" y="293" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="831.87" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (8 samples, 0.02%; -0.02%)</title><rect x="553.5" y="389" width="0.2" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="556.52" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (107 samples, 0.22%; -0.01%)</title><rect x="988.7" y="341" width="2.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="991.69" y="351.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (18 samples, 0.04%; -0.00%)</title><rect x="133.9" y="229" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="136.90" y="239.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (57 samples, 0.12%; -0.01%)</title><rect x="737.7" y="405" width="1.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="740.67" y="415.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.00%)</title><rect x="424.1" y="373" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="427.12" y="383.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (15 samples, 0.03%; -0.02%)</title><rect x="306.6" y="165" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="309.62" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (69 samples, 0.14%; -0.01%)</title><rect x="243.5" y="213" width="1.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="246.48" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (13 samples, 0.03%; +0.00%)</title><rect x="326.1" y="181" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="329.14" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; +0.01%)</title><rect x="931.8" y="389" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="934.78" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (19 samples, 0.04%; -0.01%)</title><rect x="822.1" y="277" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="825.06" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (85 samples, 0.17%; -0.02%)</title><rect x="297.5" y="245" width="2.1" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="300.51" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.01%; 0.00%)</title><rect x="22.9" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.86" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (7 samples, 0.01%; +0.00%)</title><rect x="814.6" y="149" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="817.57" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%; -0.01%)</title><rect x="667.1" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="670.15" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (6 samples, 0.01%; -0.01%)</title><rect x="365.2" y="213" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="368.18" y="223.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (97 samples, 0.20%; +0.02%)</title><rect x="506.9" y="229" width="2.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="509.91" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%; 0.00%)</title><rect x="556.0" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="558.99" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%; +0.01%)</title><rect x="206.2" y="101" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="209.24" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (12 samples, 0.02%; +0.01%)</title><rect x="586.5" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="589.47" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (358 samples, 0.74%; -0.02%)</title><rect x="1069.9" y="341" width="8.6" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="1072.86" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (7 samples, 0.01%; -0.01%)</title><rect x="924.4" y="325" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="927.37" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (23 samples, 0.05%; -0.00%)</title><rect x="1119.4" y="357" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1122.40" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.02%)</title><rect x="848.2" y="357" width="0.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="851.17" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (24 samples, 0.05%; -0.01%)</title><rect x="213.2" y="133" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="216.24" y="143.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; +0.00%)</title><rect x="914.6" y="325" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="917.63" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; -0.01%)</title><rect x="709.4" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="712.40" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%; -0.03%)</title><rect x="692.3" y="485" width="0.4" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="695.34" y="495.5" ></text>
</g>
<g >
<title>database::find_column_family (87 samples, 0.18%; 0.00%)</title><rect x="1059.2" y="341" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1062.17" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%; +0.01%)</title><rect x="574.4" y="293" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="577.43" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.01%; +0.00%)</title><rect x="747.5" y="309" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="750.51" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="451.8" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="454.79" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%; -0.00%)</title><rect x="1130.5" y="389" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1133.50" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%; 0.00%)</title><rect x="854.9" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="857.86" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.01%)</title><rect x="252.8" y="261" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="255.81" y="271.5" ></text>
</g>
<g >
<title>query::result::result (24 samples, 0.05%; -0.02%)</title><rect x="598.6" y="421" width="0.6" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="601.63" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (8 samples, 0.02%; +0.00%)</title><rect x="693.7" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="696.75" y="479.5" ></text>
</g>
<g >
<title>row::row (21 samples, 0.04%; -0.03%)</title><rect x="244.6" y="197" width="0.6" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="247.64" y="207.5" ></text>
</g>
<g >
<title>query::querier&lt; (8 samples, 0.02%; 0.00%)</title><rect x="1175.8" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.80" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (122 samples, 0.25%; -0.01%)</title><rect x="1031.2" y="165" width="3.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1034.24" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (24 samples, 0.05%; -0.09%)</title><rect x="1141.8" y="485" width="0.5" height="15.0" fill="rgb(103,103,255)" rx="2" ry="2" />
<text  x="1144.76" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (7 samples, 0.01%; +0.01%)</title><rect x="827.5" y="325" width="0.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="830.46" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="1046.1" y="261" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1049.11" y="271.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (8 samples, 0.02%; +0.01%)</title><rect x="244.4" y="197" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="247.45" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (8 samples, 0.02%; -0.00%)</title><rect x="878.9" y="389" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="881.94" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%; -0.01%)</title><rect x="390.0" y="181" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="393.01" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.04%)</title><rect x="597.6" y="389" width="0.1" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="600.59" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (19 samples, 0.04%; +0.00%)</title><rect x="62.7" y="453" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="65.67" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%; -0.04%)</title><rect x="909.9" y="309" width="0.2" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="912.93" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (14 samples, 0.03%; 0.00%)</title><rect x="693.7" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.70" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (5 samples, 0.01%; +0.01%)</title><rect x="458.0" y="277" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="461.01" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (21 samples, 0.04%; +0.00%)</title><rect x="1040.9" y="213" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1043.93" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (141 samples, 0.29%; -0.01%)</title><rect x="1116.5" y="389" width="3.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1119.54" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%; +0.01%)</title><rect x="140.7" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="143.66" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; +0.00%)</title><rect x="231.5" y="213" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="234.46" y="223.5" ></text>
</g>
<g >
<title>tombstone::apply (9 samples, 0.02%; +0.01%)</title><rect x="392.1" y="213" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="395.07" y="223.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; 0.00%)</title><rect x="40.6" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.55" y="463.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (5 samples, 0.01%; -0.00%)</title><rect x="26.2" y="517" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="29.16" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%; 0.00%)</title><rect x="270.9" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="273.86" y="303.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; +0.01%)</title><rect x="643.0" y="485" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="645.97" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (32 samples, 0.07%; -0.00%)</title><rect x="616.9" y="437" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="619.87" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%; -0.01%)</title><rect x="24.9" y="517" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="27.90" y="527.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (26 samples, 0.05%; 0.00%)</title><rect x="1140.1" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.01%)</title><rect x="726.4" y="389" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="729.43" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (20 samples, 0.04%; +0.01%)</title><rect x="72.7" y="373" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="75.75" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%; +0.00%)</title><rect x="654.9" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="657.91" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (215 samples, 0.44%; +0.03%)</title><rect x="619.8" y="437" width="5.2" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="622.81" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,424 samples, 21.40%; +0.05%)</title><rect x="887.2" y="453" width="252.6" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="890.20" y="463.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%; -0.04%)</title><rect x="39.1" y="421" width="0.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="42.07" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%; +0.01%)</title><rect x="1076.1" y="277" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1079.11" y="287.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (105 samples, 0.22%; -0.01%)</title><rect x="535.4" y="309" width="2.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="538.37" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%; -0.02%)</title><rect x="481.9" y="197" width="0.5" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="484.90" y="207.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (15 samples, 0.03%; -0.00%)</title><rect x="701.4" y="453" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="704.40" y="463.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; +0.00%)</title><rect x="272.2" y="277" width="1.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="275.21" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (606 samples, 1.24%; +0.01%)</title><rect x="800.8" y="229" width="14.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="803.83" y="239.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (15 samples, 0.03%; 0.00%)</title><rect x="1141.2" y="181" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.16" y="191.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (8 samples, 0.02%; 0.00%)</title><rect x="23.5" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.47" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (12 samples, 0.02%; +0.01%)</title><rect x="952.3" y="341" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="955.30" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%; -0.01%)</title><rect x="1040.5" y="181" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1043.49" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (140 samples, 0.29%; +0.00%)</title><rect x="947.0" y="405" width="3.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="950.02" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (23 samples, 0.05%; +0.04%)</title><rect x="576.1" y="341" width="0.5" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="579.05" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (20 samples, 0.04%; +0.01%)</title><rect x="883.8" y="453" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="886.81" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (27 samples, 0.06%; -0.01%)</title><rect x="323.4" y="181" width="0.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="326.43" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (90 samples, 0.18%; +0.01%)</title><rect x="751.4" y="325" width="2.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="754.36" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="367.5" ></text>
</g>
<g >
<title>__tls_init (15 samples, 0.03%; -0.00%)</title><rect x="492.8" y="293" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="495.78" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,304 samples, 8.84%; -0.01%)</title><rect x="295.6" y="261" width="104.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="298.57" y="271.5" >mutation_fra..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.01%)</title><rect x="692.0" y="485" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="695.00" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%; +0.02%)</title><rect x="859.1" y="389" width="1.2" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="862.13" y="399.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (65 samples, 0.13%; 0.00%)</title><rect x="789.0" y="325" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="791.96" y="335.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (15 samples, 0.03%; -0.03%)</title><rect x="1100.5" y="341" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1103.50" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%; -0.01%)</title><rect x="536.6" y="245" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="539.61" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="791.0" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="794.00" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (543 samples, 1.11%; +0.05%)</title><rect x="1109.6" y="421" width="13.2" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="1112.64" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (8 samples, 0.02%; 0.00%)</title><rect x="879.9" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.94" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (20 samples, 0.04%; +0.01%)</title><rect x="659.4" y="389" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="662.37" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (10 samples, 0.02%; 0.00%)</title><rect x="868.7" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="871.72" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (101 samples, 0.21%; -0.01%)</title><rect x="235.1" y="197" width="2.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="238.07" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (19 samples, 0.04%; 0.00%)</title><rect x="717.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.47" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (6 samples, 0.01%; +0.01%)</title><rect x="558.3" y="357" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="561.29" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (31 samples, 0.06%; +0.01%)</title><rect x="700.4" y="453" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="703.44" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (21 samples, 0.04%; +0.02%)</title><rect x="399.3" y="245" width="0.5" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="402.34" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (49 samples, 0.10%; -0.00%)</title><rect x="961.8" y="357" width="1.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="964.80" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (12 samples, 0.02%; +0.01%)</title><rect x="217.8" y="181" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="220.75" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="765.0" y="405" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="767.98" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (18 samples, 0.04%; +0.00%)</title><rect x="1178.2" y="629" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1181.15" y="639.5" ></text>
</g>
<g >
<title>compound_type&lt; (205 samples, 0.42%; +0.01%)</title><rect x="482.5" y="213" width="5.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="485.53" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (26 samples, 0.05%; +0.00%)</title><rect x="1107.6" y="405" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1110.58" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (157 samples, 0.32%; -0.02%)</title><rect x="258.9" y="341" width="3.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="261.86" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (14 samples, 0.03%; -0.01%)</title><rect x="523.1" y="325" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="526.11" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (17 samples, 0.03%; -0.01%)</title><rect x="643.6" y="485" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="646.62" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%; -0.03%)</title><rect x="923.9" y="341" width="0.6" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="926.86" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (7 samples, 0.01%; -0.00%)</title><rect x="630.9" y="389" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="633.93" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="389" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%; +0.01%)</title><rect x="1066.9" y="309" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1069.90" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%; +0.02%)</title><rect x="95.0" y="421" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="98.01" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (41 samples, 0.08%; +0.08%)</title><rect x="107.9" y="373" width="0.9" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="110.85" y="383.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (232 samples, 0.48%; -0.03%)</title><rect x="925.9" y="373" width="5.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="928.87" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%; 0.00%)</title><rect x="717.0" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.01" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (26 samples, 0.05%; -0.11%)</title><rect x="366.1" y="165" width="0.7" height="15.0" fill="rgb(75,75,255)" rx="2" ry="2" />
<text  x="369.14" y="175.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (9 samples, 0.02%; -0.00%)</title><rect x="594.0" y="405" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="596.98" y="415.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; -0.01%)</title><rect x="679.3" y="469" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="682.26" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="765.4" y="405" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="768.36" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (30 samples, 0.06%; +0.01%)</title><rect x="1033.5" y="149" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1036.47" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.01%)</title><rect x="424.1" y="357" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="427.12" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (5 samples, 0.01%; +0.01%)</title><rect x="1055.5" y="357" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1058.54" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (36 samples, 0.07%; -0.00%)</title><rect x="637.6" y="485" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="640.59" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%; 0.00%)</title><rect x="495.3" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="498.35" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%; -0.00%)</title><rect x="17.8" y="309" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="20.80" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (14 samples, 0.03%; -0.00%)</title><rect x="871.0" y="453" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="874.00" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (30 samples, 0.06%; -0.02%)</title><rect x="278.8" y="389" width="0.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="281.80" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (14 samples, 0.03%; +0.01%)</title><rect x="1108.7" y="389" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1111.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.03%; -0.02%)</title><rect x="540.0" y="309" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="543.05" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.00%)</title><rect x="973.0" y="373" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="976.02" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%; +0.00%)</title><rect x="46.4" y="469" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="49.41" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%; +0.01%)</title><rect x="653.5" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="656.53" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (22 samples, 0.05%; 0.00%)</title><rect x="693.1" y="421" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%; -0.01%)</title><rect x="511.4" y="165" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="514.44" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; +0.00%)</title><rect x="781.9" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="784.89" y="367.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (6 samples, 0.01%; +0.01%)</title><rect x="606.0" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="609.00" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%; -0.00%)</title><rect x="612.8" y="437" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="615.80" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,237 samples, 2.54%; +0.07%)</title><rect x="1016.5" y="277" width="30.0" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="1019.53" y="287.5" >se..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (10 samples, 0.02%; +0.01%)</title><rect x="759.2" y="405" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="762.24" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.17%; +0.04%)</title><rect x="1038.9" y="197" width="2.0" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="1041.92" y="207.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (30 samples, 0.06%; -0.00%)</title><rect x="634.9" y="485" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="637.85" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%; -0.01%)</title><rect x="753.8" y="277" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="756.83" y="287.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (44 samples, 0.09%; 0.00%)</title><rect x="810.9" y="149" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="813.91" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (25 samples, 0.05%; +0.01%)</title><rect x="1148.1" y="485" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1151.09" y="495.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%; -0.01%)</title><rect x="754.7" y="277" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="757.66" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (113 samples, 0.23%; +0.00%)</title><rect x="754.8" y="277" width="2.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="757.83" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.14%; -0.01%)</title><rect x="1002.9" y="245" width="1.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1005.89" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.01%)</title><rect x="659.2" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="662.25" y="399.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.01%)</title><rect x="53.8" y="469" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="56.80" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.03%)</title><rect x="96.6" y="373" width="0.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="99.61" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (16 samples, 0.03%; +0.00%)</title><rect x="277.8" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="280.76" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (97 samples, 0.20%; +0.01%)</title><rect x="1113.4" y="389" width="2.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1116.39" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (105 samples, 0.22%; +0.10%)</title><rect x="10.4" y="581" width="2.6" height="15.0" fill="rgb(255,83,83)" rx="2" ry="2" />
<text  x="13.44" y="591.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (34 samples, 0.07%; +0.01%)</title><rect x="531.0" y="261" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="533.99" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (12 samples, 0.02%; +0.01%)</title><rect x="954.0" y="341" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="957.02" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%; +0.01%)</title><rect x="676.4" y="469" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="679.45" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (289 samples, 0.59%; -0.02%)</title><rect x="481.0" y="229" width="7.0" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="483.96" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (15 samples, 0.03%; -0.00%)</title><rect x="316.7" y="213" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="319.72" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (10 samples, 0.02%; -0.02%)</title><rect x="37.8" y="421" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="40.84" y="431.5" ></text>
</g>
<g >
<title>tracing::add_table_name (9 samples, 0.02%; +0.02%)</title><rect x="1139.5" y="437" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1142.53" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (15 samples, 0.03%; +0.00%)</title><rect x="712.6" y="421" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="715.57" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (15 samples, 0.03%; 0.00%)</title><rect x="815.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.15" y="207.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%; +0.00%)</title><rect x="777.7" y="373" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="780.74" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%; -0.00%)</title><rect x="781.3" y="341" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="784.31" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (263 samples, 0.54%; 0.00%)</title><rect x="10.3" y="613" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.29" y="623.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (26 samples, 0.05%; -0.02%)</title><rect x="1008.1" y="293" width="0.6" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1011.05" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (13 samples, 0.03%; +0.02%)</title><rect x="943.6" y="405" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="946.58" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="1116.3" y="389" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1119.30" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (20 samples, 0.04%; +0.01%)</title><rect x="800.1" y="229" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="803.06" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (147 samples, 0.30%; -0.00%)</title><rect x="642.4" y="501" width="3.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="645.36" y="511.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%; +0.00%)</title><rect x="710.2" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="713.25" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%; -0.00%)</title><rect x="1096.0" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1098.97" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="566.6" y="261" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="569.55" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (85 samples, 0.17%; +0.03%)</title><rect x="397.0" y="213" width="2.1" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="400.03" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (536 samples, 1.10%; +0.00%)</title><rect x="263.7" y="357" width="13.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="266.71" y="367.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (125 samples, 0.26%; 0.00%)</title><rect x="840.1" y="373" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.11" y="383.5" ></text>
</g>
<g >
<title>operator delete (48 samples, 0.10%; +0.03%)</title><rect x="423.0" y="373" width="1.1" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="425.96" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (7 samples, 0.01%; +0.00%)</title><rect x="310.7" y="165" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="313.69" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (71 samples, 0.15%; -0.01%)</title><rect x="897.5" y="405" width="1.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="900.53" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (16 samples, 0.03%; +0.01%)</title><rect x="313.2" y="181" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="316.18" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.15%; -0.00%)</title><rect x="963.5" y="389" width="1.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="966.47" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (14 samples, 0.03%; -0.01%)</title><rect x="807.8" y="133" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="810.76" y="143.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%; +0.01%)</title><rect x="814.7" y="197" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="817.74" y="207.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (12 samples, 0.02%; -0.01%)</title><rect x="1144.5" y="501" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1147.45" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (270 samples, 0.55%; +0.01%)</title><rect x="751.1" y="341" width="6.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="754.09" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (14 samples, 0.03%; +0.02%)</title><rect x="999.6" y="277" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1002.64" y="287.5" ></text>
</g>
<g >
<title>query_state::query_state (211 samples, 0.43%; -0.03%)</title><rect x="599.8" y="437" width="5.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="602.84" y="447.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (32 samples, 0.07%; -0.01%)</title><rect x="851.1" y="437" width="0.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="854.08" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (43 samples, 0.09%; +0.02%)</title><rect x="387.1" y="165" width="1.0" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="390.08" y="175.5" ></text>
</g>
<g >
<title>local_schema_registry (16 samples, 0.03%; -0.01%)</title><rect x="977.4" y="357" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="980.40" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="463.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (138 samples, 0.28%; +0.01%)</title><rect x="383.2" y="149" width="3.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="386.15" y="159.5" ></text>
</g>
<g >
<title>posix_memalign (38 samples, 0.08%; +0.00%)</title><rect x="193.4" y="85" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="196.35" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; -0.00%)</title><rect x="764.3" y="373" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="767.25" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%; -0.00%)</title><rect x="406.7" y="181" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="409.70" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (8 samples, 0.02%; -0.00%)</title><rect x="1101.3" y="357" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1104.28" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (268 samples, 0.55%; +0.01%)</title><rect x="452.3" y="309" width="6.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="455.30" y="319.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (17 samples, 0.03%; +0.01%)</title><rect x="329.3" y="181" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="332.32" y="191.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="469" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="479.5" ></text>
</g>
<g >
<title>__strlen_avx2 (76 samples, 0.16%; -0.03%)</title><rect x="1020.1" y="245" width="1.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1023.09" y="255.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,883 samples, 22.34%; +0.01%)</title><rect x="879.5" y="501" width="263.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="882.45" y="511.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (54 samples, 0.11%; +0.00%)</title><rect x="797.7" y="245" width="1.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="800.68" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (53 samples, 0.11%; -0.04%)</title><rect x="778.4" y="373" width="1.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="781.37" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (17 samples, 0.03%; +0.02%)</title><rect x="588.6" y="373" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="591.55" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,379 samples, 2.83%; -0.01%)</title><rect x="557.1" y="421" width="33.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="560.06" y="431.5" >st..</text>
</g>
<g >
<title>table::as_mutation_source (106 samples, 0.22%; -0.01%)</title><rect x="628.7" y="437" width="2.6" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="631.72" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (150 samples, 0.31%; +0.02%)</title><rect x="865.3" y="405" width="3.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="868.33" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_expression (11 samples, 0.02%; +0.00%)</title><rect x="22.4" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="25.40" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (54 samples, 0.11%; +0.01%)</title><rect x="828.8" y="309" width="1.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="831.77" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (185 samples, 0.38%; +0.01%)</title><rect x="217.1" y="197" width="4.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="220.07" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (41 samples, 0.08%; +0.08%)</title><rect x="198.5" y="149" width="1.0" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="201.54" y="159.5" ></text>
</g>
<g >
<title>query::result::builder::builder (161 samples, 0.33%; +0.01%)</title><rect x="600.9" y="421" width="3.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="603.91" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,916 samples, 3.93%; +0.01%)</title><rect x="163.0" y="181" width="46.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="165.97" y="191.5" >muta..</text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (158 samples, 0.32%; +0.00%)</title><rect x="548.7" y="373" width="3.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="551.72" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,932 samples, 12.18%; -0.01%)</title><rect x="727.6" y="469" width="143.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="730.64" y="479.5" >single_node_cql_en..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%; 0.00%)</title><rect x="693.1" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.14" y="383.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (55 samples, 0.11%; -0.02%)</title><rect x="356.9" y="149" width="1.4" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="359.94" y="159.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; -0.01%)</title><rect x="1126.6" y="405" width="1.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1129.65" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%; +0.00%)</title><rect x="1055.0" y="325" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1057.98" y="335.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (372 samples, 0.76%; -0.01%)</title><rect x="66.5" y="453" width="9.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="69.52" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (78 samples, 0.16%; +0.01%)</title><rect x="671.7" y="469" width="1.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="674.65" y="479.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (111 samples, 0.23%; -0.01%)</title><rect x="271.6" y="293" width="2.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="274.58" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%; -0.01%)</title><rect x="1062.1" y="309" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1065.10" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (676 samples, 1.39%; +0.00%)</title><rect x="559.6" y="341" width="16.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="562.62" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%; +0.00%)</title><rect x="450.5" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="453.46" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (5 samples, 0.01%; +0.01%)</title><rect x="827.1" y="341" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="830.07" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (5 samples, 0.01%; +0.01%)</title><rect x="497.8" y="293" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="500.82" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%; -0.00%)</title><rect x="693.8" y="453" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="696.77" y="463.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (105 samples, 0.22%; +0.00%)</title><rect x="348.2" y="165" width="2.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="351.22" y="175.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (213 samples, 0.44%; -0.02%)</title><rect x="994.8" y="309" width="5.2" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="997.82" y="319.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="540.0" y="325" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="543.00" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%; -0.01%)</title><rect x="488.8" y="325" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="491.78" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (23 samples, 0.05%; -0.01%)</title><rect x="818.8" y="229" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="821.81" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="1145.1" y="501" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1148.11" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%; +0.07%)</title><rect x="392.3" y="229" width="0.8" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="395.29" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (5 samples, 0.01%; +0.01%)</title><rect x="442.6" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="445.56" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="769.5" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="772.53" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::close (14 samples, 0.03%; 0.00%)</title><rect x="1176.0" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.00" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.00%)</title><rect x="950.2" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="953.17" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (41 samples, 0.08%; +0.02%)</title><rect x="734.1" y="325" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="737.09" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (9 samples, 0.02%; 0.00%)</title><rect x="254.0" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="256.97" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%; -0.00%)</title><rect x="915.8" y="357" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="918.77" y="367.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (144 samples, 0.30%; -0.01%)</title><rect x="860.3" y="421" width="3.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="863.31" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (28 samples, 0.06%; +0.02%)</title><rect x="330.9" y="181" width="0.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="333.89" y="191.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (24 samples, 0.05%; 0.00%)</title><rect x="753.7" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="756.71" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (34 samples, 0.07%; +0.02%)</title><rect x="355.8" y="149" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="358.80" y="159.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (10 samples, 0.02%; 0.00%)</title><rect x="1140.4" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.38" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (24 samples, 0.05%; +0.03%)</title><rect x="572.2" y="277" width="0.6" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="575.20" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%; 0.00%)</title><rect x="1068.4" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1071.40" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="453" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (25 samples, 0.05%; -0.01%)</title><rect x="586.8" y="357" width="0.6" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="589.76" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,400 samples, 11.09%; +0.02%)</title><rect x="973.7" y="373" width="130.8" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="976.67" y="383.5" >service::storage..</text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%; +0.01%)</title><rect x="826.8" y="341" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="829.81" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (6 samples, 0.01%; +0.00%)</title><rect x="599.7" y="437" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="602.70" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (11 samples, 0.02%; +0.00%)</title><rect x="1114.2" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1117.22" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (11 samples, 0.02%; +0.01%)</title><rect x="678.9" y="469" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="681.92" y="479.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (953 samples, 1.96%; -0.01%)</title><rect x="796.5" y="277" width="23.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="799.52" y="287.5" >a..</text>
</g>
<g >
<title>cql3::query_processor::parse_statement (205 samples, 0.42%; 0.00%)</title><rect x="17.3" y="469" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.32" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,839 samples, 5.83%; -0.01%)</title><rect x="986.8" y="357" width="68.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="989.76" y="367.5" >service..</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (59 samples, 0.12%; +0.01%)</title><rect x="837.3" y="309" width="1.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="840.32" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (6 samples, 0.01%; +0.01%)</title><rect x="207.0" y="133" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="209.97" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (127 samples, 0.26%; +0.00%)</title><rect x="1116.9" y="373" width="3.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1119.88" y="383.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (52 samples, 0.11%; -0.00%)</title><rect x="1097.0" y="309" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1100.04" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (59 samples, 0.12%; +0.02%)</title><rect x="541.0" y="389" width="1.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="543.97" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.03%; +0.01%)</title><rect x="1104.5" y="373" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1107.50" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (13 samples, 0.03%; -0.03%)</title><rect x="605.1" y="437" width="0.3" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="608.12" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; -0.00%)</title><rect x="804.1" y="213" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="807.08" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (11 samples, 0.02%; +0.01%)</title><rect x="624.5" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="627.48" y="383.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (5 samples, 0.01%; +0.01%)</title><rect x="1099.2" y="309" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1102.20" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (12 samples, 0.02%; +0.02%)</title><rect x="416.0" y="277" width="0.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="418.98" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%; -0.01%)</title><rect x="768.4" y="325" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="771.39" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (42 samples, 0.09%; -0.03%)</title><rect x="256.2" y="325" width="1.0" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="259.20" y="335.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%; +0.00%)</title><rect x="515.3" y="213" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="518.31" y="223.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (29 samples, 0.06%; -0.02%)</title><rect x="214.6" y="165" width="0.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="217.65" y="175.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,973 samples, 4.05%; +0.01%)</title><rect x="317.4" y="213" width="47.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="320.37" y="223.5" >quer..</text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (92 samples, 0.19%; +0.01%)</title><rect x="808.3" y="149" width="2.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="811.27" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (5 samples, 0.01%; +0.01%)</title><rect x="696.1" y="469" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="699.15" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%; -0.00%)</title><rect x="1045.2" y="261" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1048.17" y="271.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (13 samples, 0.03%; -0.00%)</title><rect x="1047.3" y="277" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1050.28" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.02%)</title><rect x="487.7" y="213" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="490.72" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (13 samples, 0.03%; -0.04%)</title><rect x="228.0" y="245" width="0.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="231.00" y="255.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (185 samples, 0.38%; +0.01%)</title><rect x="471.0" y="277" width="4.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="474.05" y="287.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (137 samples, 0.28%; 0.00%)</title><rect x="980.1" y="341" width="3.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="983.14" y="351.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.00%)</title><rect x="447.5" y="277" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="450.50" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (213 samples, 0.44%; +0.00%)</title><rect x="1126.3" y="421" width="5.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1129.26" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (26 samples, 0.05%; 0.00%)</title><rect x="879.6" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.65" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (286 samples, 0.59%; 0.00%)</title><rect x="16.9" y="581" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.88" y="591.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%; -0.01%)</title><rect x="1075.4" y="277" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1078.40" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; +0.01%)</title><rect x="154.1" y="197" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="157.11" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (6 samples, 0.01%; +0.00%)</title><rect x="625.0" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="628.01" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (51 samples, 0.10%; -0.00%)</title><rect x="834.0" y="341" width="1.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="837.00" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (58 samples, 0.12%; -0.01%)</title><rect x="847.9" y="389" width="1.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="850.86" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (19 samples, 0.04%; +0.00%)</title><rect x="624.3" y="389" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="627.29" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (187 samples, 0.38%; +0.00%)</title><rect x="17.5" y="389" width="4.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="20.53" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (5 samples, 0.01%; -0.00%)</title><rect x="1155.2" y="421" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1158.19" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (6 samples, 0.01%; +0.01%)</title><rect x="696.7" y="469" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="699.66" y="479.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (14 samples, 0.03%; +0.00%)</title><rect x="814.2" y="85" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="817.16" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (5 samples, 0.01%; -0.00%)</title><rect x="552.4" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="555.38" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (16 samples, 0.03%; -0.01%)</title><rect x="1137.1" y="421" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1140.14" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.02%)</title><rect x="458.2" y="277" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="461.16" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (187 samples, 0.38%; -0.01%)</title><rect x="951.1" y="405" width="4.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="954.07" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (35 samples, 0.07%; +0.03%)</title><rect x="613.0" y="437" width="0.9" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="616.05" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (78 samples, 0.16%; -0.02%)</title><rect x="192.4" y="117" width="1.9" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="195.38" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (88 samples, 0.18%; +0.00%)</title><rect x="533.1" y="309" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="536.07" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (903 samples, 1.85%; +0.17%)</title><rect x="368.5" y="197" width="21.8" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="371.47" y="207.5" >c..</text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (38 samples, 0.08%; +0.01%)</title><rect x="96.3" y="405" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="99.30" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (5 samples, 0.01%; 0.00%)</title><rect x="648.6" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="651.64" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (58 samples, 0.12%; +0.01%)</title><rect x="949.0" y="373" width="1.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="952.01" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (41 samples, 0.08%; +0.01%)</title><rect x="789.5" y="309" width="1.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="792.52" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,158 samples, 14.70%; -0.04%)</title><rect x="106.2" y="405" width="173.4" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="109.16" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,528 samples, 11.35%; -0.01%)</title><rect x="285.2" y="341" width="133.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="288.15" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (29 samples, 0.06%; -0.00%)</title><rect x="1066.2" y="277" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1069.17" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (17 samples, 0.03%; +0.01%)</title><rect x="1029.6" y="181" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1032.57" y="191.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%; +0.00%)</title><rect x="725.6" y="421" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="728.63" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (88 samples, 0.18%; -0.02%)</title><rect x="381.0" y="149" width="2.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="384.02" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (11 samples, 0.02%; +0.01%)</title><rect x="425.3" y="373" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="428.33" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (5 samples, 0.01%; 0.00%)</title><rect x="199.5" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="202.53" y="159.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (22 samples, 0.05%; -0.04%)</title><rect x="283.9" y="373" width="0.5" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="286.87" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (8 samples, 0.02%; -0.01%)</title><rect x="299.4" y="213" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="302.37" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%; -0.01%)</title><rect x="356.6" y="149" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="359.62" y="159.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,911 samples, 3.92%; +0.03%)</title><rect x="783.9" y="373" width="46.3" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="786.90" y="383.5" >serv..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="1046.5" y="277" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1049.50" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (24 samples, 0.05%; -0.01%)</title><rect x="572.8" y="277" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="575.80" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (97 samples, 0.20%; +0.00%)</title><rect x="484.1" y="197" width="2.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="487.08" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (12 samples, 0.02%; -0.01%)</title><rect x="737.3" y="293" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="740.26" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (171 samples, 0.35%; -0.01%)</title><rect x="679.2" y="485" width="4.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="682.21" y="495.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.00%)</title><rect x="695.2" y="469" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="698.18" y="479.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (69 samples, 0.14%; +0.00%)</title><rect x="221.9" y="229" width="1.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="224.87" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (17 samples, 0.03%; -0.01%)</title><rect x="984.9" y="357" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="987.87" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (42 samples, 0.09%; +0.01%)</title><rect x="222.5" y="213" width="1.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="225.52" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (105 samples, 0.22%; +0.05%)</title><rect x="866.4" y="373" width="2.6" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="869.42" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (9 samples, 0.02%; +0.01%)</title><rect x="988.5" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="991.48" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (26 samples, 0.05%; +0.04%)</title><rect x="225.0" y="229" width="0.6" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="227.99" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (52 samples, 0.11%; 0.00%)</title><rect x="677.9" y="485" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="680.93" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (112 samples, 0.23%; +0.01%)</title><rect x="218.4" y="181" width="2.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="221.38" y="191.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (7 samples, 0.01%; -0.01%)</title><rect x="897.0" y="405" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="899.97" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (26 samples, 0.05%; +0.01%)</title><rect x="855.5" y="341" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="858.49" y="351.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (15 samples, 0.03%; 0.00%)</title><rect x="1141.2" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.16" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (48 samples, 0.10%; +0.02%)</title><rect x="907.9" y="277" width="1.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="910.94" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (9 samples, 0.02%; +0.02%)</title><rect x="228.6" y="261" width="0.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="231.56" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (17 samples, 0.03%; 0.00%)</title><rect x="20.6" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.56" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (6 samples, 0.01%; -0.01%)</title><rect x="1000.8" y="325" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1003.83" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (30 samples, 0.06%; +0.03%)</title><rect x="427.3" y="405" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="430.32" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (27 samples, 0.06%; +0.00%)</title><rect x="573.5" y="293" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="576.46" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (10 samples, 0.02%; 0.00%)</title><rect x="532.3" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="535.27" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.02%)</title><rect x="252.1" y="277" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="255.13" y="287.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (22 samples, 0.05%; -0.02%)</title><rect x="310.9" y="181" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="313.93" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (63 samples, 0.13%; 0.00%)</title><rect x="614.0" y="437" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="616.97" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (20 samples, 0.04%; +0.02%)</title><rect x="1151.3" y="453" width="0.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1154.28" y="463.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (7 samples, 0.01%; +0.01%)</title><rect x="553.3" y="389" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="556.35" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%; +0.01%)</title><rect x="136.2" y="261" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="139.20" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%; 0.00%)</title><rect x="1158.9" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1161.87" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="863.6" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="866.61" y="415.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (7 samples, 0.01%; -0.00%)</title><rect x="983.5" y="341" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="986.46" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; +0.01%)</title><rect x="849.8" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="852.85" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (21 samples, 0.04%; +0.01%)</title><rect x="66.7" y="437" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="69.67" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (113 samples, 0.23%; +0.01%)</title><rect x="396.5" y="229" width="2.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="399.55" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.00%)</title><rect x="289.7" y="229" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="292.68" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (10 samples, 0.02%; -0.12%)</title><rect x="463.6" y="325" width="0.3" height="15.0" fill="rgb(60,60,255)" rx="2" ry="2" />
<text  x="466.61" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (18 samples, 0.04%; +0.03%)</title><rect x="1142.7" y="485" width="0.4" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="1145.68" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; 0.00%)</title><rect x="150.9" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="153.91" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="646.8" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="649.80" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (56 samples, 0.11%; +0.03%)</title><rect x="455.3" y="261" width="1.4" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="458.30" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%; -0.00%)</title><rect x="459.7" y="309" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="462.66" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (33 samples, 0.07%; +0.00%)</title><rect x="207.9" y="165" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="210.89" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%; -0.01%)</title><rect x="1038.2" y="229" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1041.21" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%; +0.00%)</title><rect x="909.8" y="309" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="912.81" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (16 samples, 0.03%; -0.07%)</title><rect x="408.6" y="213" width="0.4" height="15.0" fill="rgb(123,123,255)" rx="2" ry="2" />
<text  x="411.57" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (11 samples, 0.02%; +0.01%)</title><rect x="845.2" y="389" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="848.22" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (13 samples, 0.03%; +0.01%)</title><rect x="317.6" y="197" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="320.62" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (56 samples, 0.11%; 0.00%)</title><rect x="17.6" y="373" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.58" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (40 samples, 0.08%; +0.01%)</title><rect x="233.3" y="165" width="0.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="236.28" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; -0.00%)</title><rect x="832.6" y="341" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="835.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (154 samples, 0.32%; +0.00%)</title><rect x="1001.6" y="309" width="3.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1004.63" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (34 samples, 0.07%; -0.01%)</title><rect x="660.6" y="469" width="0.9" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="663.63" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (19 samples, 0.04%; +0.02%)</title><rect x="627.8" y="437" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="630.75" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; -0.00%)</title><rect x="46.6" y="485" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="49.63" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (15 samples, 0.03%; +0.01%)</title><rect x="279.1" y="373" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="282.12" y="383.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%; -0.01%)</title><rect x="445.1" y="245" width="1.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="448.05" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%; -0.01%)</title><rect x="1052.0" y="197" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1054.98" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (7 samples, 0.01%; +0.01%)</title><rect x="894.5" y="421" width="0.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="897.47" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (7 samples, 0.01%; +0.00%)</title><rect x="185.7" y="69" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="188.67" y="79.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; +0.00%)</title><rect x="680.3" y="453" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="683.33" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%; +0.01%)</title><rect x="869.3" y="421" width="1.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="872.32" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (18 samples, 0.04%; +0.01%)</title><rect x="525.0" y="341" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="527.98" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%; +0.01%)</title><rect x="937.8" y="309" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="940.84" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (8 samples, 0.02%; +0.01%)</title><rect x="909.2" y="309" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="912.23" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.05%; +0.03%)</title><rect x="755.2" y="261" width="0.6" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="758.16" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (5 samples, 0.01%; +0.01%)</title><rect x="979.8" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="982.75" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="524.0" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="526.99" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (48 samples, 0.10%; +0.05%)</title><rect x="761.8" y="373" width="1.2" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="764.80" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (92 samples, 0.19%; +0.02%)</title><rect x="812.3" y="133" width="2.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="815.29" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1144.8" y="501" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1147.77" y="511.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (13 samples, 0.03%; -0.00%)</title><rect x="813.0" y="117" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="816.00" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; +0.02%)</title><rect x="763.2" y="389" width="1.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="766.21" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (233 samples, 0.48%; -0.00%)</title><rect x="216.2" y="229" width="5.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="219.22" y="239.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; -0.02%)</title><rect x="678.4" y="469" width="0.5" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="681.44" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="833.1" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="836.08" y="383.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (41 samples, 0.08%; +0.01%)</title><rect x="939.8" y="405" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="942.83" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="134.6" y="245" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="137.60" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.03%; +0.02%)</title><rect x="1105.1" y="357" width="0.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1108.13" y="367.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%; +0.00%)</title><rect x="1099.9" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1102.95" y="319.5" ></text>
</g>
<g >
<title>make_combined_reader (13 samples, 0.03%; +0.02%)</title><rect x="431.6" y="357" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="434.63" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (667 samples, 1.37%; -0.00%)</title><rect x="799.5" y="261" width="16.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="802.45" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (7 samples, 0.01%; +0.01%)</title><rect x="894.7" y="421" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="897.72" y="431.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (167 samples, 0.34%; +0.01%)</title><rect x="810.7" y="165" width="4.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="813.69" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%; -0.00%)</title><rect x="716.8" y="421" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="719.79" y="431.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (304 samples, 0.62%; -0.02%)</title><rect x="750.5" y="373" width="7.4" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="753.49" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="1130.6" y="373" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1133.62" y="383.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; +0.02%)</title><rect x="621.2" y="421" width="0.9" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="624.19" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (51 samples, 0.10%; +0.05%)</title><rect x="314.2" y="165" width="1.2" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="317.20" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (23 samples, 0.05%; +0.02%)</title><rect x="135.3" y="261" width="0.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="138.30" y="271.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%; 0.00%)</title><rect x="636.2" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="639.23" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.01%)</title><rect x="494.8" y="277" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="497.84" y="287.5" ></text>
</g>
<g >
<title>schema::get_sharder (5 samples, 0.01%; +0.01%)</title><rect x="1016.1" y="277" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1019.10" y="287.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (39 samples, 0.08%; -0.01%)</title><rect x="443.0" y="277" width="1.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="446.02" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; 0.00%)</title><rect x="765.2" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="768.22" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (67 samples, 0.14%; +0.01%)</title><rect x="1160.1" y="453" width="1.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1163.13" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (14 samples, 0.03%; +0.02%)</title><rect x="965.3" y="405" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="968.31" y="415.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.10%; -0.01%)</title><rect x="570.6" y="277" width="1.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="573.55" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (101 samples, 0.21%; +0.02%)</title><rect x="1132.9" y="421" width="2.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1135.92" y="431.5" ></text>
</g>
<g >
<title>freeze (15 samples, 0.03%; 0.00%)</title><rect x="1141.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.16" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%; -0.01%)</title><rect x="772.4" y="293" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="775.39" y="303.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (5 samples, 0.01%; -0.00%)</title><rect x="714.4" y="421" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="717.39" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (26 samples, 0.05%; +0.00%)</title><rect x="566.1" y="293" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="569.07" y="303.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; +0.01%)</title><rect x="36.8" y="453" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="39.84" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (12 samples, 0.02%; -0.00%)</title><rect x="587.1" y="341" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="590.07" y="351.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (11 samples, 0.02%; 0.00%)</title><rect x="985.9" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="988.86" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (5 samples, 0.01%; -0.01%)</title><rect x="81.4" y="453" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="84.45" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (21 samples, 0.04%; -0.01%)</title><rect x="1051.8" y="229" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1054.76" y="239.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (193 samples, 0.40%; -0.01%)</title><rect x="864.6" y="437" width="4.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="867.60" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%; -0.01%)</title><rect x="1170.0" y="469" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1172.96" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (772 samples, 1.59%; +0.02%)</title><rect x="119.7" y="309" width="18.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="122.65" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (29 samples, 0.06%; 0.00%)</title><rect x="40.9" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="43.91" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.01%)</title><rect x="261.5" y="309" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="264.53" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (16 samples, 0.03%; +0.01%)</title><rect x="368.1" y="197" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="371.08" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (13 samples, 0.03%; -0.00%)</title><rect x="447.2" y="261" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="450.19" y="271.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (27 samples, 0.06%; +0.02%)</title><rect x="915.9" y="357" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="918.94" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (55 samples, 0.11%; 0.00%)</title><rect x="626.4" y="437" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.42" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (7 samples, 0.01%; +0.00%)</title><rect x="573.9" y="261" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="576.94" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (309 samples, 0.63%; +0.07%)</title><rect x="181.8" y="85" width="7.5" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="184.82" y="95.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (48 samples, 0.10%; +0.08%)</title><rect x="315.6" y="197" width="1.1" height="15.0" fill="rgb(255,116,116)" rx="2" ry="2" />
<text  x="318.56" y="207.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (129 samples, 0.26%; +0.10%)</title><rect x="13.5" y="581" width="3.2" height="15.0" fill="rgb(255,80,80)" rx="2" ry="2" />
<text  x="16.54" y="591.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,346 samples, 4.82%; -0.00%)</title><rect x="159.1" y="213" width="56.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="162.14" y="223.5" >logall..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; 0.00%)</title><rect x="911.1" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="914.12" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="791.6" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="794.55" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (9 samples, 0.02%; +0.01%)</title><rect x="979.7" y="293" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="982.66" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (202 samples, 0.41%; -0.01%)</title><rect x="209.5" y="181" width="4.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="212.51" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (30 samples, 0.06%; +0.00%)</title><rect x="789.8" y="293" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="792.76" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (23 samples, 0.05%; +0.00%)</title><rect x="467.8" y="277" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="470.83" y="287.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (7 samples, 0.01%; 0.00%)</title><rect x="23.8" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="463.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (69 samples, 0.14%; -0.01%)</title><rect x="761.5" y="389" width="1.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="764.49" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (39 samples, 0.08%; -0.04%)</title><rect x="365.8" y="181" width="1.0" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="368.83" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; +0.01%)</title><rect x="628.5" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="631.50" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (10 samples, 0.02%; +0.01%)</title><rect x="962.5" y="309" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="965.48" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%; +0.00%)</title><rect x="465.8" y="293" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="468.79" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.01%; +0.01%)</title><rect x="516.3" y="245" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="519.28" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (18 samples, 0.04%; +0.00%)</title><rect x="610.8" y="437" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="613.82" y="447.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (6 samples, 0.01%; +0.00%)</title><rect x="1143.3" y="501" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1146.29" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (58 samples, 0.12%; -0.00%)</title><rect x="961.6" y="373" width="1.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="964.58" y="383.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; -0.00%)</title><rect x="459.6" y="325" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="462.64" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (17 samples, 0.03%; +0.00%)</title><rect x="750.1" y="357" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="753.08" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.00%)</title><rect x="1007.5" y="293" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1010.47" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%; 0.00%)</title><rect x="813.6" y="85" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="816.63" y="95.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (9 samples, 0.02%; -0.00%)</title><rect x="1035.5" y="181" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1038.55" y="191.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%; -0.03%)</title><rect x="672.3" y="437" width="0.1" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="675.28" y="447.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (302 samples, 0.62%; +0.00%)</title><rect x="480.6" y="245" width="7.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="483.64" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (28 samples, 0.06%; -0.00%)</title><rect x="1177.4" y="485" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1180.40" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (95 samples, 0.20%; +0.04%)</title><rect x="1172.6" y="437" width="2.3" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="1175.60" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (27 samples, 0.06%; +0.02%)</title><rect x="449.8" y="293" width="0.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="452.75" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (19 samples, 0.04%; 0.00%)</title><rect x="878.9" y="453" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.89" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%; +0.01%)</title><rect x="1136.8" y="421" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1139.82" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%; +0.00%)</title><rect x="508.9" y="197" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="511.89" y="207.5" ></text>
</g>
<g >
<title>query::result::builder::build (58 samples, 0.12%; +0.00%)</title><rect x="597.9" y="437" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="600.93" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (7 samples, 0.01%; +0.01%)</title><rect x="720.5" y="501" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="723.52" y="511.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,763 samples, 9.78%; +0.03%)</title><rect x="428.3" y="421" width="115.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="431.29" y="431.5" >query::querier..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (121 samples, 0.25%; +0.01%)</title><rect x="37.4" y="453" width="3.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="40.45" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (708 samples, 1.45%; +0.08%)</title><rect x="372.9" y="181" width="17.1" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="375.86" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (107 samples, 0.22%; +0.01%)</title><rect x="812.0" y="149" width="2.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="814.98" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (22 samples, 0.05%; +0.01%)</title><rect x="134.8" y="245" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="137.77" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (16 samples, 0.03%; +0.02%)</title><rect x="853.0" y="389" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="856.00" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (100 samples, 0.21%; +0.05%)</title><rect x="490.7" y="309" width="2.4" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="493.72" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (5 samples, 0.01%; +0.00%)</title><rect x="413.1" y="277" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="416.10" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="450.5" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="453.53" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (162 samples, 0.33%; -0.03%)</title><rect x="1063.0" y="309" width="3.9" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="1065.98" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%; -0.03%)</title><rect x="1121.0" y="373" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1124.00" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (74 samples, 0.15%; +0.01%)</title><rect x="861.7" y="373" width="1.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="864.67" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (34 samples, 0.07%; +0.01%)</title><rect x="615.7" y="437" width="0.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="618.69" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.03%; 0.00%)</title><rect x="910.8" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="913.83" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%; +0.01%)</title><rect x="239.6" y="181" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="242.63" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (20 samples, 0.04%; -0.00%)</title><rect x="276.8" y="357" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="279.79" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (12 samples, 0.02%; +0.01%)</title><rect x="714.5" y="421" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="717.51" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (97 samples, 0.20%; -0.01%)</title><rect x="40.5" y="469" width="2.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="43.50" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (9 samples, 0.02%; +0.01%)</title><rect x="910.1" y="309" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="913.08" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%; +0.01%)</title><rect x="940.8" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="943.82" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (20 samples, 0.04%; +0.02%)</title><rect x="411.2" y="229" width="0.5" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="414.21" y="239.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (73 samples, 0.15%; -0.01%)</title><rect x="873.7" y="469" width="1.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="876.73" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::execution_stage_manager::flush (5 samples, 0.01%; +0.00%)</title><rect x="1176.9" y="501" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1179.89" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (12 samples, 0.02%; -0.01%)</title><rect x="25.9" y="517" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="28.87" y="527.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (49 samples, 0.10%; -0.01%)</title><rect x="1165.2" y="453" width="1.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1168.19" y="463.5" ></text>
</g>
<g >
<title>partition_entry::read (65 samples, 0.13%; -0.01%)</title><rect x="520.1" y="309" width="1.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="523.06" y="319.5" ></text>
</g>
<g >
<title>row::compact_and_expire (952 samples, 1.95%; +0.02%)</title><rect x="367.3" y="213" width="23.0" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="370.28" y="223.5" >r..</text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%; -0.01%)</title><rect x="654.8" y="389" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="657.77" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%; +0.02%)</title><rect x="1155.9" y="421" width="0.8" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1158.86" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (125 samples, 0.26%; +0.01%)</title><rect x="211.2" y="165" width="3.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="214.23" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%; -0.00%)</title><rect x="1100.9" y="341" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1103.89" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%; +0.00%)</title><rect x="671.4" y="469" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="674.39" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (46 samples, 0.09%; -0.00%)</title><rect x="658.9" y="405" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="661.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%; +0.01%)</title><rect x="869.2" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="872.16" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (87 samples, 0.18%; +0.01%)</title><rect x="546.0" y="373" width="2.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="548.98" y="383.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (6 samples, 0.01%; -0.03%)</title><rect x="94.3" y="437" width="0.1" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="97.29" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (14 samples, 0.03%; +0.01%)</title><rect x="1152.8" y="485" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1155.84" y="495.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (36 samples, 0.07%; -0.01%)</title><rect x="530.9" y="277" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="533.94" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.01%; -0.03%)</title><rect x="138.0" y="277" width="0.2" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="141.04" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%; +0.01%)</title><rect x="347.4" y="149" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="350.37" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%; -0.00%)</title><rect x="867.4" y="341" width="1.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="870.39" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (759 samples, 1.56%; +0.00%)</title><rect x="558.5" y="357" width="18.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="561.51" y="367.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (5 samples, 0.01%; -0.01%)</title><rect x="525.4" y="341" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="528.42" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.02%; +0.00%)</title><rect x="196.3" y="101" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="199.33" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (20 samples, 0.04%; -0.01%)</title><rect x="962.4" y="325" width="0.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="965.38" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%; -0.01%)</title><rect x="586.1" y="357" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="589.11" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (33 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.92" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (566 samples, 1.16%; -0.00%)</title><rect x="705.3" y="501" width="13.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="708.33" y="511.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (8 samples, 0.02%; +0.01%)</title><rect x="75.7" y="453" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="78.66" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (179 samples, 0.37%; +0.03%)</title><rect x="934.0" y="373" width="4.4" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="937.04" y="383.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (19 samples, 0.04%; +0.03%)</title><rect x="80.2" y="453" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="83.19" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (30 samples, 0.06%; -0.01%)</title><rect x="325.3" y="181" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="328.27" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.02%; 0.00%)</title><rect x="23.4" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.45" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="62.4" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="65.43" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="671.0" y="485" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="674.05" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (68 samples, 0.14%; +0.02%)</title><rect x="232.6" y="181" width="1.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="235.60" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (55 samples, 0.11%; -0.03%)</title><rect x="238.5" y="197" width="1.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="241.51" y="207.5" ></text>
</g>
<g >
<title>operator delete (59 samples, 0.12%; -0.01%)</title><rect x="92.5" y="437" width="1.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="95.52" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; -0.00%)</title><rect x="752.1" y="277" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="755.11" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (480 samples, 0.99%; +0.02%)</title><rect x="852.2" y="437" width="11.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="855.17" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (15 samples, 0.03%; +0.00%)</title><rect x="829.7" y="277" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="832.71" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="1141.2" y="117" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1144.23" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.00%)</title><rect x="246.3" y="229" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="249.29" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,943 samples, 8.10%; +0.06%)</title><rect x="299.6" y="245" width="95.5" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="302.57" y="255.5" >flat_mutati..</text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%; +0.00%)</title><rect x="121.1" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="124.13" y="303.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%; 0.00%)</title><rect x="752.3" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="755.26" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; -0.01%)</title><rect x="481.4" y="213" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="484.37" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="674.7" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="677.71" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%; 0.00%)</title><rect x="575.4" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="578.37" y="319.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (91 samples, 0.19%; -0.01%)</title><rect x="545.9" y="389" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="548.91" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (27 samples, 0.06%; +0.05%)</title><rect x="1062.3" y="309" width="0.7" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1065.32" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%; -0.02%)</title><rect x="986.2" y="357" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="989.22" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (12 samples, 0.02%; +0.00%)</title><rect x="218.0" y="181" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="221.04" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (6 samples, 0.01%; +0.00%)</title><rect x="728.6" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="731.61" y="463.5" ></text>
</g>
<g >
<title>make_combined_reader (948 samples, 1.95%; +0.09%)</title><rect x="437.7" y="341" width="23.0" height="15.0" fill="rgb(255,101,101)" rx="2" ry="2" />
<text  x="440.71" y="351.5" >m..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%; +0.00%)</title><rect x="824.9" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="827.94" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (20 samples, 0.04%; +0.01%)</title><rect x="277.3" y="357" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="280.28" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (24 samples, 0.05%; +0.04%)</title><rect x="311.6" y="181" width="0.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="314.63" y="191.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (47 samples, 0.10%; +0.00%)</title><rect x="937.0" y="341" width="1.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="940.02" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%; -0.02%)</title><rect x="1171.5" y="453" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="1174.47" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (308 samples, 0.63%; -0.01%)</title><rect x="67.6" y="421" width="7.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="70.59" y="431.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (10 samples, 0.02%; 0.00%)</title><rect x="1141.2" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.18" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%; +0.00%)</title><rect x="636.6" y="485" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="639.62" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (68 samples, 0.14%; +0.01%)</title><rect x="951.5" y="373" width="1.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="954.50" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (9 samples, 0.02%; +0.01%)</title><rect x="608.5" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="611.49" y="431.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (39 samples, 0.08%; -0.03%)</title><rect x="481.6" y="213" width="0.9" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="484.59" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (6 samples, 0.01%; +0.01%)</title><rect x="544.3" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="547.26" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (8 samples, 0.02%; +0.00%)</title><rect x="221.4" y="181" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="224.36" y="191.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (25 samples, 0.05%; -0.01%)</title><rect x="494.7" y="309" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="497.74" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (33 samples, 0.07%; -0.01%)</title><rect x="33.5" y="485" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="36.52" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (456 samples, 0.94%; +0.02%)</title><rect x="304.5" y="197" width="11.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="307.46" y="207.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.13%; -0.01%)</title><rect x="568.6" y="293" width="1.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="571.59" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (13 samples, 0.03%; 0.00%)</title><rect x="213.4" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.37" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="1052.1" y="181" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1055.15" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%; 0.00%)</title><rect x="743.3" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.34" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (15 samples, 0.03%; +0.02%)</title><rect x="842.5" y="277" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="845.48" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%; -0.01%)</title><rect x="655.2" y="373" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="658.20" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (11 samples, 0.02%; +0.01%)</title><rect x="208.3" y="133" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="211.33" y="143.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (11 samples, 0.02%; +0.02%)</title><rect x="606.8" y="405" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="609.82" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; -0.02%)</title><rect x="522.6" y="309" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="525.61" y="319.5" ></text>
</g>
<g >
<title>database::find_uuid (264 samples, 0.54%; 0.00%)</title><rect x="768.9" y="389" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.88" y="399.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%; +0.00%)</title><rect x="731.0" y="405" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="733.96" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (17 samples, 0.03%; +0.01%)</title><rect x="394.7" y="229" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="397.68" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; -0.02%)</title><rect x="255.9" y="325" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="258.86" y="335.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1141.2" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.16" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (13 samples, 0.03%; +0.01%)</title><rect x="1034.4" y="165" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1037.36" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%; +0.00%)</title><rect x="501.4" y="277" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="504.38" y="287.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.01%)</title><rect x="524.7" y="341" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="527.71" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%; -0.01%)</title><rect x="605.0" y="437" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="608.00" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (50 samples, 0.10%; +0.07%)</title><rect x="196.6" y="117" width="1.3" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="199.65" y="127.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; +0.00%)</title><rect x="510.4" y="197" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="513.44" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (455 samples, 0.93%; -0.01%)</title><rect x="1027.0" y="229" width="11.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1030.05" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (14 samples, 0.03%; +0.02%)</title><rect x="1001.8" y="293" width="0.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="1004.75" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; -0.02%)</title><rect x="604.0" y="357" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="606.99" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; +0.01%)</title><rect x="348.0" y="165" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="351.02" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (159 samples, 0.33%; -0.01%)</title><rect x="242.3" y="229" width="3.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="245.32" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (28 samples, 0.06%; -0.01%)</title><rect x="118.5" y="309" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="121.47" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (6 samples, 0.01%; +0.01%)</title><rect x="698.3" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="701.33" y="447.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (188 samples, 0.39%; -0.03%)</title><rect x="269.7" y="309" width="4.6" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="272.72" y="319.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (6 samples, 0.01%; +0.01%)</title><rect x="760.9" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="763.93" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; -0.00%)</title><rect x="938.2" y="357" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="941.16" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; -0.01%)</title><rect x="197.9" y="133" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="200.86" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%; -0.02%)</title><rect x="979.2" y="325" width="0.7" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="982.22" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (16 samples, 0.03%; +0.02%)</title><rect x="254.8" y="309" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="257.77" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.02%; +0.02%)</title><rect x="843.2" y="405" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="846.16" y="415.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (31 samples, 0.06%; -0.00%)</title><rect x="1140.1" y="325" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.12" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (218 samples, 0.45%; -0.02%)</title><rect x="653.1" y="469" width="5.3" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="656.07" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (23 samples, 0.05%; -0.01%)</title><rect x="775.3" y="405" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="778.32" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (74 samples, 0.15%; +0.01%)</title><rect x="655.6" y="437" width="1.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="658.61" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (39 samples, 0.08%; 0.00%)</title><rect x="22.3" y="453" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.33" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (6 samples, 0.01%; -0.05%)</title><rect x="365.4" y="197" width="0.2" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="368.42" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.03%)</title><rect x="914.7" y="309" width="0.5" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="917.68" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%; -0.01%)</title><rect x="577.8" y="341" width="0.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="580.80" y="351.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (14 samples, 0.03%; +0.02%)</title><rect x="524.3" y="341" width="0.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="527.33" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (17 samples, 0.03%; -0.00%)</title><rect x="119.1" y="309" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="122.14" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (27 samples, 0.06%; 0.00%)</title><rect x="879.6" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.65" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (117 samples, 0.24%; -0.02%)</title><rect x="724.6" y="469" width="2.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="727.61" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%; +0.01%)</title><rect x="848.9" y="357" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="851.93" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (17 samples, 0.03%; +0.03%)</title><rect x="414.9" y="293" width="0.4" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="417.89" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (8 samples, 0.02%; +0.01%)</title><rect x="785.5" y="357" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="788.47" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (14 samples, 0.03%; +0.00%)</title><rect x="850.0" y="437" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="853.04" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (93 samples, 0.19%; +0.00%)</title><rect x="735.3" y="325" width="2.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="738.30" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%; +0.01%)</title><rect x="246.0" y="213" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="249.00" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%; -0.02%)</title><rect x="971.0" y="357" width="1.6" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="974.01" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (21 samples, 0.04%; 0.00%)</title><rect x="873.2" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="876.15" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (126 samples, 0.26%; +0.01%)</title><rect x="947.4" y="389" width="3.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="950.36" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (36 samples, 0.07%; +0.01%)</title><rect x="805.3" y="181" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="808.27" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%; 0.00%)</title><rect x="495.5" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="498.54" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (10 samples, 0.02%; +0.01%)</title><rect x="734.8" y="293" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="737.84" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1132.5" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1135.53" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (11 samples, 0.02%; -0.00%)</title><rect x="757.9" y="405" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="760.85" y="415.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (14 samples, 0.03%; +0.03%)</title><rect x="1068.6" y="341" width="0.4" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="1071.62" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%; +0.00%)</title><rect x="964.4" y="373" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="967.44" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (10 samples, 0.02%; +0.00%)</title><rect x="18.1" y="261" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="21.14" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="417.4" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="420.36" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (80 samples, 0.16%; -0.00%)</title><rect x="658.5" y="453" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="661.50" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (173 samples, 0.36%; 0.00%)</title><rect x="36.3" y="469" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.31" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (51 samples, 0.10%; +0.01%)</title><rect x="730.7" y="421" width="1.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="733.72" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (13 samples, 0.03%; -0.01%)</title><rect x="263.4" y="341" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="266.40" y="351.5" ></text>
</g>
<g >
<title>database::apply_in_memory (26 samples, 0.05%; 0.00%)</title><rect x="1140.1" y="293" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; +0.00%)</title><rect x="789.1" y="293" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="792.08" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%; +0.01%)</title><rect x="1031.4" y="149" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1034.41" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (72 samples, 0.15%; +0.00%)</title><rect x="1168.3" y="485" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1171.34" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (84 samples, 0.17%; +0.03%)</title><rect x="977.8" y="341" width="2.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="980.84" y="351.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%; +0.00%)</title><rect x="514.5" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="517.46" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%; -0.00%)</title><rect x="422.8" y="357" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="425.76" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (74 samples, 0.15%; -0.00%)</title><rect x="847.6" y="405" width="1.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="850.59" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%; -0.00%)</title><rect x="1127.9" y="373" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1130.86" y="383.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (37 samples, 0.08%; -0.01%)</title><rect x="686.2" y="453" width="0.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="689.19" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%; -0.01%)</title><rect x="669.1" y="485" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="672.11" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (271 samples, 0.56%; +0.02%)</title><rect x="635.8" y="501" width="6.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="638.80" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="243.0" y="213" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="246.02" y="223.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%; +0.01%)</title><rect x="945.3" y="373" width="1.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="948.30" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (27 samples, 0.06%; -0.00%)</title><rect x="672.9" y="437" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="675.89" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (422 samples, 0.87%; +0.03%)</title><rect x="707.8" y="469" width="10.2" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="710.78" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="785.8" y="357" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="788.81" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (26 samples, 0.05%; -0.01%)</title><rect x="844.9" y="421" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="847.90" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (44 samples, 0.09%; +0.01%)</title><rect x="534.1" y="293" width="1.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="537.14" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%; +0.01%)</title><rect x="212.6" y="101" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="215.64" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (32 samples, 0.07%; -0.10%)</title><rect x="193.5" y="69" width="0.8" height="15.0" fill="rgb(86,86,255)" rx="2" ry="2" />
<text  x="196.50" y="79.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%; -0.00%)</title><rect x="391.7" y="197" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="394.68" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (61 samples, 0.13%; +0.01%)</title><rect x="1120.1" y="405" width="1.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1123.10" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (21 samples, 0.04%; -0.00%)</title><rect x="807.7" y="149" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="810.71" y="159.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (13 samples, 0.03%; -0.00%)</title><rect x="1004.6" y="261" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1007.61" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%; 0.00%)</title><rect x="331.6" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.57" y="191.5" ></text>
</g>
<g >
<title>row::row (26 samples, 0.05%; +0.05%)</title><rect x="245.2" y="213" width="0.6" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="248.20" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (116 samples, 0.24%; 0.00%)</title><rect x="645.9" y="501" width="2.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="648.95" y="511.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (365 samples, 0.75%; +0.00%)</title><rect x="730.4" y="437" width="8.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="733.43" y="447.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (26 samples, 0.05%; +0.01%)</title><rect x="747.8" y="309" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="750.80" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (9 samples, 0.02%; +0.01%)</title><rect x="210.9" y="133" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="213.94" y="143.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (5 samples, 0.01%; -0.01%)</title><rect x="889.0" y="437" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="892.05" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.01%)</title><rect x="596.7" y="373" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="599.72" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (15 samples, 0.03%; -0.01%)</title><rect x="34.3" y="485" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="37.32" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (34 samples, 0.07%; -0.02%)</title><rect x="141.8" y="245" width="0.8" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="144.80" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%; +0.00%)</title><rect x="586.3" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="589.32" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (10 samples, 0.02%; -0.01%)</title><rect x="544.4" y="405" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="547.41" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="1141.0" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.96" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (53 samples, 0.11%; +0.00%)</title><rect x="654.3" y="421" width="1.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="657.28" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (19 samples, 0.04%; +0.01%)</title><rect x="192.7" y="101" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="195.70" y="111.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (22 samples, 0.05%; +0.03%)</title><rect x="65.8" y="437" width="0.6" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="68.82" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (5 samples, 0.01%; +0.01%)</title><rect x="98.6" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="101.60" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (30 samples, 0.06%; +0.01%)</title><rect x="734.4" y="309" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="737.35" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (16 samples, 0.03%; -0.01%)</title><rect x="153.6" y="213" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="156.57" y="223.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (31 samples, 0.06%; -0.01%)</title><rect x="1074.9" y="293" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1077.90" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.02%; +0.00%)</title><rect x="860.0" y="373" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="862.97" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (38 samples, 0.08%; -0.00%)</title><rect x="811.0" y="133" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="813.96" y="143.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; 0.00%)</title><rect x="432.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.02" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (18 samples, 0.04%; +0.01%)</title><rect x="42.4" y="437" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="45.42" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (121 samples, 0.25%; -0.01%)</title><rect x="639.4" y="485" width="3.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="642.43" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (6 samples, 0.01%; +0.00%)</title><rect x="1145.3" y="501" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1148.25" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (18 samples, 0.04%; +0.02%)</title><rect x="241.1" y="245" width="0.5" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="244.13" y="255.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (42 samples, 0.09%; 0.00%)</title><rect x="235.3" y="181" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="238.32" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%; +0.01%)</title><rect x="457.3" y="277" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="460.26" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (46 samples, 0.09%; -0.00%)</title><rect x="20.0" y="325" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="22.98" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (47 samples, 0.10%; -0.01%)</title><rect x="690.7" y="469" width="1.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="693.70" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (15 samples, 0.03%; -0.00%)</title><rect x="1124.6" y="421" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1127.63" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (272 samples, 0.56%; -0.00%)</title><rect x="695.5" y="485" width="6.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="698.54" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (123 samples, 0.25%; -0.01%)</title><rect x="754.6" y="293" width="3.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="757.58" y="303.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%; -0.02%)</title><rect x="1155.1" y="405" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1158.06" y="415.5" ></text>
</g>
<g >
<title>schema::get_partitioner (16 samples, 0.03%; +0.01%)</title><rect x="942.7" y="405" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="945.66" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (50 samples, 0.10%; +0.03%)</title><rect x="771.4" y="325" width="1.2" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="774.40" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_18prepare_expressionERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_4ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_5ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_6ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_7ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_8ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_9ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_10ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_11ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_12ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_13ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_14ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_15ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_16ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_17ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_18ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_19EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (10 samples, 0.02%; 0.00%)</title><rect x="22.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.43" y="399.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (509 samples, 1.05%; -0.03%)</title><rect x="476.3" y="309" width="12.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="479.31" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (37 samples, 0.08%; +0.01%)</title><rect x="251.2" y="277" width="0.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="254.21" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (7 samples, 0.01%; 0.00%)</title><rect x="1176.0" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.04" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (22 samples, 0.05%; +0.00%)</title><rect x="1150.7" y="469" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1153.65" y="479.5" ></text>
</g>
<g >
<title>__tls_init (16 samples, 0.03%; 0.00%)</title><rect x="141.4" y="245" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="144.39" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (26 samples, 0.05%; +0.00%)</title><rect x="937.4" y="325" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="940.36" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (56 samples, 0.11%; +0.02%)</title><rect x="1154.0" y="437" width="1.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1157.05" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (10 samples, 0.02%; +0.00%)</title><rect x="828.3" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="831.26" y="319.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (11 samples, 0.02%; -0.00%)</title><rect x="22.4" y="421" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="25.40" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.01%; 0.00%)</title><rect x="19.0" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.96" y="351.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%; 0.00%)</title><rect x="47.7" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.75" y="479.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (10 samples, 0.02%; -0.01%)</title><rect x="13.0" y="581" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="15.98" y="591.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%; +0.01%)</title><rect x="534.9" y="277" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="537.86" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (155 samples, 0.32%; +0.00%)</title><rect x="403.1" y="197" width="3.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="406.07" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (30 samples, 0.06%; +0.01%)</title><rect x="690.8" y="453" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="693.77" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; +0.01%)</title><rect x="663.6" y="453" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="666.56" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (9 samples, 0.02%; +0.00%)</title><rect x="858.7" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="861.71" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (30 samples, 0.06%; -0.01%)</title><rect x="630.4" y="405" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="633.37" y="415.5" ></text>
</g>
<g >
<title>auth::resource::resource (112 samples, 0.23%; -0.00%)</title><rect x="779.7" y="389" width="2.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="782.66" y="399.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (626 samples, 1.29%; 0.00%)</title><rect x="742.7" y="405" width="15.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="745.69" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (50 samples, 0.10%; -0.01%)</title><rect x="365.6" y="197" width="1.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="368.56" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%; +0.01%)</title><rect x="512.4" y="213" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="515.36" y="223.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (6 samples, 0.01%; +0.01%)</title><rect x="234.4" y="197" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="237.37" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (47 samples, 0.10%; -0.00%)</title><rect x="834.1" y="325" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="837.10" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%; -0.02%)</title><rect x="991.4" y="341" width="0.2" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="994.41" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (81 samples, 0.17%; +0.03%)</title><rect x="420.8" y="357" width="2.0" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="423.80" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%; +0.01%)</title><rect x="655.1" y="389" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="658.06" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (524 samples, 1.08%; +0.04%)</title><rect x="176.7" y="101" width="12.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="179.73" y="111.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (9 samples, 0.02%; 0.00%)</title><rect x="19.1" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (32 samples, 0.07%; -0.00%)</title><rect x="1051.5" y="245" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1054.49" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (8 samples, 0.02%; -0.00%)</title><rect x="814.3" y="69" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="817.28" y="79.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%; 0.00%)</title><rect x="315.2" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="318.24" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; 0.00%)</title><rect x="1159.5" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.52" y="367.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%; 0.00%)</title><rect x="1155.8" y="437" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1158.84" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (388 samples, 0.80%; -0.02%)</title><rect x="399.8" y="261" width="9.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="402.84" y="271.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%; -0.00%)</title><rect x="504.7" y="229" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="507.70" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.15%; -0.05%)</title><rect x="151.7" y="197" width="1.8" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="154.71" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.01%)</title><rect x="575.5" y="309" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="578.54" y="319.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (103 samples, 0.21%; +0.06%)</title><rect x="132.1" y="245" width="2.5" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="135.11" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%; -0.01%)</title><rect x="518.7" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="521.73" y="303.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%; 0.00%)</title><rect x="640.5" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.54" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (117 samples, 0.24%; -0.01%)</title><rect x="866.1" y="389" width="2.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="869.13" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,251 samples, 4.62%; +0.01%)</title><rect x="895.9" y="421" width="54.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="898.88" y="431.5" >cql3:..</text>
</g>
<g >
<title>bytes_ostream::linearize (13 samples, 0.03%; +0.01%)</title><rect x="598.9" y="405" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="601.87" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (9 samples, 0.02%; +0.01%)</title><rect x="65.5" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="68.53" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (15 samples, 0.03%; +0.01%)</title><rect x="1122.9" y="421" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1125.94" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (50 samples, 0.10%; -0.02%)</title><rect x="195.4" y="117" width="1.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="198.41" y="127.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (7 samples, 0.01%; +0.00%)</title><rect x="463.9" y="325" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="466.85" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%; +0.00%)</title><rect x="1141.2" y="133" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1144.18" y="143.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (21 samples, 0.04%; +0.00%)</title><rect x="1067.3" y="341" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1070.34" y="351.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (12 samples, 0.02%; 0.00%)</title><rect x="917.6" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="920.56" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (63 samples, 0.13%; 0.00%)</title><rect x="19.6" y="341" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.59" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; -0.01%)</title><rect x="689.6" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="692.63" y="463.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.17%; +0.01%)</title><rect x="1117.2" y="357" width="2.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1120.22" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (245 samples, 0.50%; +0.02%)</title><rect x="1090.0" y="277" width="5.9" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="1093.01" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (6 samples, 0.01%; +0.00%)</title><rect x="1005.2" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1008.22" y="303.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (34 samples, 0.07%; +0.03%)</title><rect x="305.8" y="165" width="0.8" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="308.79" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.01%; -0.01%)</title><rect x="656.9" y="373" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="659.87" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (12 samples, 0.02%; +0.02%)</title><rect x="657.5" y="437" width="0.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="660.46" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (23 samples, 0.05%; -0.01%)</title><rect x="1168.7" y="469" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1171.66" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (23 samples, 0.05%; -0.00%)</title><rect x="1048.2" y="261" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1051.17" y="271.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.11%; 0.00%)</title><rect x="867.4" y="357" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="870.39" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%; +0.01%)</title><rect x="645.4" y="485" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="648.37" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (114 samples, 0.23%; -0.00%)</title><rect x="1049.5" y="261" width="2.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1052.50" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (105 samples, 0.22%; -0.01%)</title><rect x="724.8" y="453" width="2.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="727.83" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (6 samples, 0.01%; -0.00%)</title><rect x="25.0" y="517" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="28.02" y="527.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (28 samples, 0.06%; -0.00%)</title><rect x="582.2" y="357" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="585.18" y="367.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (454 samples, 0.93%; +0.08%)</title><rect x="527.1" y="325" width="11.0" height="15.0" fill="rgb(255,113,113)" rx="2" ry="2" />
<text  x="530.14" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%; -0.01%)</title><rect x="873.4" y="405" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="876.42" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.02%)</title><rect x="924.8" y="373" width="0.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="927.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.01%; 0.00%)</title><rect x="1100.4" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1103.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="595.2" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="598.22" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (11 samples, 0.02%; -0.02%)</title><rect x="782.1" y="357" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="785.11" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (148 samples, 0.30%; -0.03%)</title><rect x="807.0" y="165" width="3.6" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="810.04" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (12 samples, 0.02%; +0.01%)</title><rect x="576.6" y="341" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="579.61" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (38 samples, 0.08%; -0.01%)</title><rect x="780.3" y="357" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="783.29" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (11 samples, 0.02%; 0.00%)</title><rect x="23.4" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.45" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="787.0" y="341" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="790.02" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (25 samples, 0.05%; -0.02%)</title><rect x="719.9" y="501" width="0.6" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="722.87" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (16 samples, 0.03%; +0.03%)</title><rect x="894.9" y="421" width="0.4" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="897.88" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (11 samples, 0.02%; -0.01%)</title><rect x="689.8" y="453" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="692.85" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (15 samples, 0.03%; +0.00%)</title><rect x="714.9" y="437" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="717.90" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="933.4" y="341" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="936.41" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; 0.00%)</title><rect x="99.3" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="102.25" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (20 samples, 0.04%; -0.01%)</title><rect x="253.0" y="277" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="255.98" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (44 samples, 0.09%; -0.01%)</title><rect x="288.9" y="277" width="1.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="291.91" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%; -0.04%)</title><rect x="1064.2" y="277" width="0.2" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1067.24" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (20 samples, 0.04%; -0.01%)</title><rect x="1149.8" y="485" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1152.83" y="495.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="207.3" y="165" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="210.33" y="175.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.12%; 0.00%)</title><rect x="869.3" y="437" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.28" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (15 samples, 0.03%; -0.01%)</title><rect x="33.2" y="485" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="36.16" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (24 samples, 0.05%; -0.00%)</title><rect x="454.7" y="261" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="457.72" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; +0.01%)</title><rect x="718.5" y="485" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="721.51" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (39 samples, 0.08%; -0.01%)</title><rect x="214.4" y="181" width="1.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="217.41" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%; -0.01%)</title><rect x="1107.0" y="373" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1110.02" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (93 samples, 0.19%; +0.04%)</title><rect x="1042.6" y="245" width="2.2" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1045.58" y="255.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,172 samples, 2.41%; +0.02%)</title><rect x="794.1" y="309" width="28.4" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="797.12" y="319.5" >au..</text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (33 samples, 0.07%; +0.01%)</title><rect x="184.8" y="53" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="187.83" y="63.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; -0.00%)</title><rect x="911.2" y="357" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="914.24" y="367.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (268 samples, 0.55%; -0.00%)</title><rect x="17.3" y="501" width="6.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="20.27" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (273 samples, 0.56%; -0.01%)</title><rect x="751.0" y="357" width="6.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="754.05" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (8 samples, 0.02%; -0.00%)</title><rect x="876.0" y="485" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="879.01" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (96 samples, 0.20%; +0.02%)</title><rect x="981.1" y="325" width="2.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="984.13" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (47,480 samples, 97.48%; +0.01%)</title><rect x="26.4" y="517" width="1150.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="29.38" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (27 samples, 0.06%; -0.01%)</title><rect x="1022.1" y="213" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1025.10" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,418 samples, 9.07%; -0.01%)</title><rect x="139.7" y="277" width="107.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="142.67" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (24 samples, 0.05%; 0.00%)</title><rect x="693.1" y="485" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="495.5" ></text>
</g>
<g >
<title>__libc_start_main (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="629" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (17 samples, 0.03%; +0.00%)</title><rect x="1013.1" y="261" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1016.07" y="271.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (6 samples, 0.01%; 0.00%)</title><rect x="1042.2" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1045.24" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%; -0.00%)</title><rect x="547.5" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="550.51" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,596 samples, 11.49%; +0.02%)</title><rect x="284.4" y="373" width="135.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="287.40" y="383.5" >flat_mutation_rea..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%; +0.01%)</title><rect x="241.8" y="245" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="244.83" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="695.4" y="485" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="698.40" y="495.5" ></text>
</g>
<g >
<title>__tls_init (32 samples, 0.07%; +0.02%)</title><rect x="533.3" y="293" width="0.8" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="536.34" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (39 samples, 0.08%; +0.01%)</title><rect x="682.4" y="453" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="685.39" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%; +0.00%)</title><rect x="863.5" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="866.49" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%; -0.01%)</title><rect x="1174.3" y="421" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1177.28" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%; +0.00%)</title><rect x="1148.6" y="469" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1151.57" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%; +0.00%)</title><rect x="661.3" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="664.26" y="463.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.01%)</title><rect x="482.4" y="197" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="485.36" y="207.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="663.1" y="453" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="666.10" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%; +0.00%)</title><rect x="1103.8" y="341" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1106.80" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (101 samples, 0.21%; 0.00%)</title><rect x="861.2" y="405" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="864.16" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="1059.0" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1061.98" y="351.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (364 samples, 0.75%; -0.01%)</title><rect x="806.2" y="213" width="8.8" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="809.19" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (33 samples, 0.07%; +0.03%)</title><rect x="552.6" y="389" width="0.7" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="555.55" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (65 samples, 0.13%; +0.02%)</title><rect x="914.2" y="341" width="1.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="917.19" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (25 samples, 0.05%; -0.01%)</title><rect x="596.5" y="389" width="0.6" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="599.47" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%; +0.01%)</title><rect x="679.6" y="469" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="682.65" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.06%; +0.02%)</title><rect x="194.3" y="117" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="197.27" y="127.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%; -0.01%)</title><rect x="707.1" y="469" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="710.15" y="479.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.01%; 0.00%)</title><rect x="1140.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.75" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (223 samples, 0.46%; +0.00%)</title><rect x="994.6" y="325" width="5.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="997.58" y="335.5" ></text>
</g>
<g >
<title>dht::tri_compare (131 samples, 0.27%; +0.05%)</title><rect x="1086.3" y="229" width="3.2" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="1089.33" y="239.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (11 samples, 0.02%; 0.00%)</title><rect x="1098.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.93" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%; 0.00%)</title><rect x="1105.7" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1108.69" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="692.8" y="485" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="695.78" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="189.4" y="101" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="192.43" y="111.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%; -0.01%)</title><rect x="134.3" y="229" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="137.34" y="239.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,010 samples, 2.07%; 0.00%)</title><rect x="796.3" y="293" width="24.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="799.25" y="303.5" >s..</text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="815.7" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.71" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (71 samples, 0.15%; 0.00%)</title><rect x="671.8" y="453" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="674.82" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (19 samples, 0.04%; -0.00%)</title><rect x="543.1" y="405" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="546.08" y="415.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (15 samples, 0.03%; -0.00%)</title><rect x="1097.8" y="261" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1100.81" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%; +0.02%)</title><rect x="1160.3" y="421" width="1.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1163.30" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (7 samples, 0.01%; +0.01%)</title><rect x="1005.0" y="277" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1007.95" y="287.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.02%)</title><rect x="589.6" y="389" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="592.59" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,229 samples, 4.58%; -0.06%)</title><rect x="1001.0" y="325" width="54.0" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1003.98" y="335.5" >servi..</text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (19 samples, 0.04%; +0.00%)</title><rect x="425.6" y="373" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="428.62" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (28 samples, 0.06%; -0.01%)</title><rect x="1032.8" y="149" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1035.79" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (39 samples, 0.08%; -0.00%)</title><rect x="1029.0" y="197" width="1.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1032.03" y="207.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%; +0.01%)</title><rect x="391.0" y="197" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="394.00" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="36.2" y="453" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="39.17" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (25 samples, 0.05%; +0.00%)</title><rect x="647.2" y="485" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="650.18" y="495.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (10 samples, 0.02%; -0.01%)</title><rect x="664.3" y="437" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="667.26" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.03%; +0.00%)</title><rect x="734.5" y="293" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="737.50" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (23 samples, 0.05%; +0.01%)</title><rect x="451.2" y="277" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="454.23" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%; +0.00%)</title><rect x="899.0" y="373" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="902.03" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (8 samples, 0.02%; +0.02%)</title><rect x="280.6" y="389" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="283.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%; +0.00%)</title><rect x="510.5" y="181" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="513.54" y="191.5" ></text>
</g>
<g >
<title>compound_type&lt; (13 samples, 0.03%; +0.01%)</title><rect x="919.7" y="389" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="922.67" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,029 samples, 4.17%; -0.03%)</title><rect x="1005.7" y="309" width="49.2" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="1008.75" y="319.5" >serv..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (349 samples, 0.72%; +0.02%)</title><rect x="566.8" y="309" width="8.4" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="569.77" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (7 samples, 0.01%; +0.00%)</title><rect x="20.8" y="277" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="23.78" y="287.5" ></text>
</g>
<g >
<title>dht::tri_compare (41 samples, 0.08%; +0.01%)</title><rect x="1082.1" y="245" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1085.14" y="255.5" ></text>
</g>
<g >
<title>malloc (18 samples, 0.04%; 0.00%)</title><rect x="604.0" y="373" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="606.99" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (5 samples, 0.01%; +0.00%)</title><rect x="599.2" y="421" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="602.21" y="431.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; +0.02%)</title><rect x="566.2" y="277" width="0.5" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="569.17" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (329 samples, 0.68%; 0.00%)</title><rect x="806.8" y="197" width="7.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="809.77" y="207.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.11%; +0.00%)</title><rect x="989.5" y="293" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="992.49" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; 0.00%)</title><rect x="1118.9" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1121.94" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%; +0.00%)</title><rect x="895.4" y="421" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="898.39" y="431.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; -0.02%)</title><rect x="673.0" y="421" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="676.01" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="965.8" y="405" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="968.80" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.01%)</title><rect x="496.5" y="309" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="499.51" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.01%)</title><rect x="799.1" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="802.11" y="271.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (22 samples, 0.05%; +0.01%)</title><rect x="1069.1" y="341" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1072.06" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (52 samples, 0.11%; +0.01%)</title><rect x="1150.6" y="485" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1153.56" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (5 samples, 0.01%; +0.01%)</title><rect x="792.8" y="325" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="795.81" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (19 samples, 0.04%; -0.00%)</title><rect x="832.4" y="357" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="835.43" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="675.5" y="453" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="678.53" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (18 samples, 0.04%; -0.02%)</title><rect x="681.9" y="453" width="0.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="684.95" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (190 samples, 0.39%; 0.00%)</title><rect x="1170.5" y="469" width="4.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.47" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.02%; +0.01%)</title><rect x="165.2" y="133" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="168.25" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (37 samples, 0.08%; +0.01%)</title><rect x="581.3" y="357" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="584.28" y="367.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (5 samples, 0.01%; -0.03%)</title><rect x="1175.5" y="501" width="0.1" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="1178.51" y="511.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (152 samples, 0.31%; +0.01%)</title><rect x="852.8" y="405" width="3.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="855.75" y="415.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; +0.02%)</title><rect x="532.8" y="293" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="535.78" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (14 samples, 0.03%; +0.01%)</title><rect x="1114.8" y="373" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1117.82" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (354 samples, 0.73%; -0.07%)</title><rect x="545.2" y="405" width="8.5" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="548.16" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (13 samples, 0.03%; +0.01%)</title><rect x="131.3" y="245" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="134.31" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; 0.00%)</title><rect x="772.8" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="775.83" y="319.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (16 samples, 0.03%; 0.00%)</title><rect x="37.7" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.69" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (15 samples, 0.03%; +0.01%)</title><rect x="954.4" y="341" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="957.36" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (33 samples, 0.07%; -0.01%)</title><rect x="610.0" y="437" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="613.02" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (134 samples, 0.28%; -0.02%)</title><rect x="409.6" y="261" width="3.3" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="412.61" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (197 samples, 0.40%; -0.00%)</title><rect x="17.5" y="421" width="4.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="20.49" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (29 samples, 0.06%; +0.01%)</title><rect x="560.3" y="309" width="0.7" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="563.30" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (14 samples, 0.03%; -0.01%)</title><rect x="511.3" y="181" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="514.32" y="191.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (217 samples, 0.45%; 0.00%)</title><rect x="732.4" y="389" width="5.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.42" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (27 samples, 0.06%; +0.02%)</title><rect x="967.3" y="389" width="0.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="970.28" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (97 samples, 0.20%; +0.02%)</title><rect x="444.5" y="261" width="2.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="447.54" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (136 samples, 0.28%; +0.01%)</title><rect x="680.0" y="469" width="3.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="683.04" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (5 samples, 0.01%; +0.01%)</title><rect x="480.5" y="245" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="483.52" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (56 samples, 0.11%; -0.01%)</title><rect x="953.4" y="373" width="1.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="956.44" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (29 samples, 0.06%; -0.00%)</title><rect x="395.8" y="229" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="398.85" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%; +0.01%)</title><rect x="452.1" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="455.13" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (17 samples, 0.03%; 0.00%)</title><rect x="22.7" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.67" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (8 samples, 0.02%; 0.00%)</title><rect x="819.9" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="822.85" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; +0.00%)</title><rect x="150.0" y="181" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="152.96" y="191.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (10 samples, 0.02%; -0.00%)</title><rect x="830.4" y="389" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="833.44" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (28 samples, 0.06%; +0.04%)</title><rect x="352.6" y="165" width="0.6" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="355.55" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%; 0.00%)</title><rect x="906.4" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="909.42" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%; 0.00%)</title><rect x="262.7" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.67" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (47 samples, 0.10%; -0.00%)</title><rect x="623.1" y="389" width="1.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="626.15" y="399.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="597" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (41 samples, 0.08%; +0.01%)</title><rect x="486.4" y="197" width="1.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="489.43" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (81 samples, 0.17%; -0.00%)</title><rect x="989.1" y="309" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="992.08" y="319.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%; +0.03%)</title><rect x="274.7" y="293" width="1.1" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="277.69" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.02%; -0.02%)</title><rect x="512.0" y="181" width="0.3" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="515.04" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; -0.02%)</title><rect x="942.4" y="389" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="945.42" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (6 samples, 0.01%; +0.01%)</title><rect x="849.7" y="437" width="0.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="852.70" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.03%; +0.01%)</title><rect x="92.1" y="437" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="95.11" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%; -0.01%)</title><rect x="687.1" y="485" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="690.09" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.01%)</title><rect x="898.4" y="389" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="901.45" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (31 samples, 0.06%; +0.02%)</title><rect x="143.8" y="245" width="0.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="146.83" y="255.5" ></text>
</g>
<g >
<title>query_result_builder::consume (7 samples, 0.01%; 0.00%)</title><rect x="693.3" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.29" y="303.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (8 samples, 0.02%; -0.00%)</title><rect x="47.3" y="485" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="50.33" y="495.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (11 samples, 0.02%; +0.01%)</title><rect x="390.7" y="181" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="393.74" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%; -0.02%)</title><rect x="1049.7" y="229" width="1.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1052.75" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (24,233 samples, 49.75%; +0.00%)</title><rect x="48.5" y="501" width="587.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="51.47" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (35 samples, 0.07%; +0.07%)</title><rect x="1136.0" y="421" width="0.8" height="15.0" fill="rgb(255,121,121)" rx="2" ry="2" />
<text  x="1138.97" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (323 samples, 0.66%; +0.01%)</title><rect x="1081.7" y="261" width="7.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1084.68" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (53 samples, 0.11%; -0.00%)</title><rect x="953.5" y="357" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="956.49" y="367.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; +0.00%)</title><rect x="149.4" y="181" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="152.38" y="191.5" ></text>
</g>
<g >
<title>sstring_hash::operator (25 samples, 0.05%; +0.00%)</title><rect x="842.3" y="309" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="845.31" y="319.5" ></text>
</g>
<g >
<title>seastar::schedule (9 samples, 0.02%; +0.01%)</title><rect x="1144.2" y="501" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1147.23" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; -0.03%)</title><rect x="642.2" y="453" width="0.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="645.17" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (18 samples, 0.04%; +0.01%)</title><rect x="704.4" y="469" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="707.36" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (11 samples, 0.02%; +0.02%)</title><rect x="554.4" y="405" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="557.44" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (10 samples, 0.02%; +0.01%)</title><rect x="1041.2" y="197" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1044.17" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="617.7" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="620.72" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%; 0.00%)</title><rect x="441.1" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="444.13" y="319.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,103 samples, 10.48%; +0.04%)</title><rect x="290.5" y="293" width="123.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="293.48" y="303.5" >seastar::repeat..</text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.02%; +0.00%)</title><rect x="804.3" y="213" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="807.27" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="1171.2" y="437" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1174.20" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (11 samples, 0.02%; +0.01%)</title><rect x="153.7" y="197" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="156.67" y="207.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%; -0.03%)</title><rect x="198.1" y="133" width="0.3" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="201.08" y="143.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (10 samples, 0.02%; +0.01%)</title><rect x="701.5" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="704.50" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; +0.01%)</title><rect x="485.9" y="181" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="488.92" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="849.3" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="852.26" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,544 samples, 9.33%; -0.02%)</title><rect x="430.8" y="373" width="110.0" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="433.76" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>mutation_reader_merger::operator (229 samples, 0.47%; -0.01%)</title><rect x="248.4" y="293" width="5.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="251.42" y="303.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%; 0.00%)</title><rect x="520.9" y="277" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="523.91" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.03%; +0.01%)</title><rect x="1037.5" y="213" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1040.54" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (30 samples, 0.06%; +0.00%)</title><rect x="791.7" y="293" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="794.72" y="303.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (146 samples, 0.30%; +0.04%)</title><rect x="307.4" y="181" width="3.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="310.39" y="191.5" ></text>
</g>
<g >
<title>dht::shard_of (25 samples, 0.05%; +0.03%)</title><rect x="1006.7" y="293" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1009.67" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%; +0.01%)</title><rect x="922.4" y="341" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="925.36" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; 0.00%)</title><rect x="938.8" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="941.81" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,940 samples, 12.20%; +0.01%)</title><rect x="114.4" y="341" width="143.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="117.42" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; -0.01%)</title><rect x="55.2" y="469" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="58.23" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (13 samples, 0.03%; +0.01%)</title><rect x="898.1" y="389" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="901.13" y="399.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.00%)</title><rect x="629.0" y="405" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="632.04" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (10 samples, 0.02%; +0.01%)</title><rect x="998.7" y="245" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1001.75" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (10 samples, 0.02%; -0.00%)</title><rect x="979.6" y="309" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="982.63" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (31 samples, 0.06%; -0.01%)</title><rect x="618.3" y="421" width="0.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="621.33" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="391.9" y="181" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="394.92" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (16 samples, 0.03%; +0.03%)</title><rect x="78.8" y="453" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="81.78" y="463.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (10 samples, 0.02%; +0.00%)</title><rect x="75.2" y="421" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="78.22" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (30 samples, 0.06%; -0.00%)</title><rect x="1066.2" y="293" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1069.17" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.04%; -0.01%)</title><rect x="208.7" y="165" width="0.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="211.71" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%; -0.02%)</title><rect x="719.2" y="501" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="722.16" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (180 samples, 0.37%; +0.01%)</title><rect x="548.2" y="389" width="4.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="551.19" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (5 samples, 0.01%; +0.00%)</title><rect x="825.5" y="341" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="828.52" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (10 samples, 0.02%; +0.01%)</title><rect x="226.0" y="213" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="229.04" y="223.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (14 samples, 0.03%; -0.09%)</title><rect x="164.9" y="133" width="0.3" height="15.0" fill="rgb(98,98,255)" rx="2" ry="2" />
<text  x="167.91" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (24 samples, 0.05%; +0.03%)</title><rect x="984.0" y="357" width="0.6" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="987.04" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="276.5" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="279.53" y="351.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%; 0.00%)</title><rect x="96.6" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="99.59" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (5 samples, 0.01%; -0.01%)</title><rect x="1137.0" y="421" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1140.01" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (8 samples, 0.02%; +0.00%)</title><rect x="1141.5" y="213" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1144.52" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (14 samples, 0.03%; +0.00%)</title><rect x="991.6" y="341" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="994.58" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%; -0.01%)</title><rect x="767.6" y="341" width="1.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="770.59" y="351.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (129 samples, 0.26%; 0.00%)</title><rect x="1153.5" y="469" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.54" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (55 samples, 0.11%; +0.00%)</title><rect x="1108.2" y="405" width="1.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1111.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%; +0.01%)</title><rect x="945.4" y="357" width="1.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="948.42" y="367.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%; +0.01%)</title><rect x="1100.1" y="325" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1103.14" y="335.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (25 samples, 0.05%; 0.00%)</title><rect x="1140.1" y="277" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.14" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%; 0.00%)</title><rect x="862.9" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.93" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (38 samples, 0.08%; +0.05%)</title><rect x="738.1" y="389" width="1.0" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="741.13" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (7 samples, 0.01%; -0.01%)</title><rect x="995.3" y="293" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="998.26" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%; -0.08%)</title><rect x="165.7" y="133" width="0.5" height="15.0" fill="rgb(106,106,255)" rx="2" ry="2" />
<text  x="168.73" y="143.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.01%)</title><rect x="773.0" y="309" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="775.97" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.01%; -0.01%)</title><rect x="659.5" y="373" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="662.51" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%; 0.00%)</title><rect x="833.1" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.06" y="399.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="789.1" y="309" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="792.06" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (13 samples, 0.03%; -0.00%)</title><rect x="1177.6" y="453" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1180.60" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; +0.00%)</title><rect x="1131.3" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1134.27" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (9 samples, 0.02%; 0.00%)</title><rect x="19.4" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.38" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (9 samples, 0.02%; -0.00%)</title><rect x="154.0" y="213" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="157.03" y="223.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%; -0.01%)</title><rect x="903.0" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="906.05" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="663.7" y="453" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="666.68" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; +0.00%)</title><rect x="841.8" y="277" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="844.78" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (52 samples, 0.11%; 0.00%)</title><rect x="17.6" y="325" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="335.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (509 samples, 1.05%; -0.00%)</title><rect x="577.1" y="389" width="12.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="580.14" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="790.9" y="309" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="793.88" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="644.1" y="485" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="647.11" y="495.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%; 0.00%)</title><rect x="947.8" y="373" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.77" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.01%)</title><rect x="547.7" y="341" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="550.66" y="351.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (86 samples, 0.18%; 0.00%)</title><rect x="797.0" y="261" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="799.98" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (33 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.92" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="619.6" y="437" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="622.64" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%; +0.00%)</title><rect x="19.5" y="309" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="22.47" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="830.3" y="389" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="833.29" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (57 samples, 0.12%; +0.03%)</title><rect x="294.2" y="261" width="1.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="297.16" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; 0.00%)</title><rect x="777.8" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="780.82" y="367.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; -0.00%)</title><rect x="140.2" y="261" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="143.15" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (21 samples, 0.04%; 0.00%)</title><rect x="878.9" y="469" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.87" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (21 samples, 0.04%; -0.03%)</title><rect x="453.1" y="277" width="0.5" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="456.12" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%; -0.01%)</title><rect x="993.8" y="293" width="0.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="996.76" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; -0.00%)</title><rect x="855.0" y="341" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="857.98" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (87 samples, 0.18%; -0.02%)</title><rect x="595.6" y="405" width="2.1" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="598.60" y="415.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (105 samples, 0.22%; 0.00%)</title><rect x="605.4" y="437" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="608.44" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (109 samples, 0.22%; +0.01%)</title><rect x="1002.3" y="277" width="2.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1005.31" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.01%; 0.00%)</title><rect x="19.7" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.69" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%; 0.00%)</title><rect x="693.1" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.14" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (14 samples, 0.03%; -0.00%)</title><rect x="898.7" y="373" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="901.69" y="383.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; +0.02%)</title><rect x="595.7" y="389" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="598.70" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (12 samples, 0.02%; +0.01%)</title><rect x="864.0" y="453" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="867.02" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (15 samples, 0.03%; +0.00%)</title><rect x="22.7" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="25.67" y="415.5" ></text>
</g>
<g >
<title>operator new (108 samples, 0.22%; -0.00%)</title><rect x="1013.5" y="277" width="2.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1016.48" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="597.5" y="373" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="600.47" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (42 samples, 0.09%; +0.01%)</title><rect x="450.8" y="293" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="453.77" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (188 samples, 0.39%; +0.01%)</title><rect x="733.1" y="357" width="4.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="736.07" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (9 samples, 0.02%; -0.02%)</title><rect x="554.8" y="421" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="557.80" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; -0.01%)</title><rect x="816.1" y="229" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="819.10" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (19 samples, 0.04%; -0.03%)</title><rect x="1115.2" y="373" width="0.4" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="1118.16" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,003 samples, 10.27%; +0.03%)</title><rect x="291.6" y="277" width="121.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="294.64" y="287.5" >flat_mutation_r..</text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (204 samples, 0.42%; 0.00%)</title><rect x="17.3" y="437" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.34" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (8 samples, 0.02%; +0.00%)</title><rect x="876.8" y="501" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="879.84" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (63 samples, 0.13%; +0.01%)</title><rect x="64.3" y="437" width="1.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="67.29" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (24 samples, 0.05%; +0.00%)</title><rect x="1141.1" y="245" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1144.13" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%; -0.00%)</title><rect x="437.1" y="341" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="440.08" y="351.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (35 samples, 0.07%; +0.03%)</title><rect x="626.8" y="405" width="0.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="629.81" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (8 samples, 0.02%; -0.04%)</title><rect x="55.5" y="469" width="0.2" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="58.50" y="479.5" ></text>
</g>
<g >
<title>seastar::gate::leave (6 samples, 0.01%; +0.00%)</title><rect x="611.9" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="614.93" y="447.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (132 samples, 0.27%; 0.00%)</title><rect x="928.1" y="341" width="3.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="931.13" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%; -0.02%)</title><rect x="278.4" y="357" width="0.3" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="281.39" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (36 samples, 0.07%; +0.00%)</title><rect x="22.4" y="437" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="25.36" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%; +0.01%)</title><rect x="936.7" y="341" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="939.68" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%; +0.01%)</title><rect x="140.4" y="261" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="143.44" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="527.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (135 samples, 0.28%; -0.01%)</title><rect x="1185.6" y="613" width="3.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1188.59" y="623.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,742 samples, 48.75%; +0.10%)</title><rect x="56.3" y="469" width="575.2" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="59.27" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>utils::array_search_gt_impl (172 samples, 0.35%; -0.01%)</title><rect x="471.4" y="261" width="4.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="474.36" y="271.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%; 0.00%)</title><rect x="963.5" y="405" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="966.47" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (206 samples, 0.42%; +0.02%)</title><rect x="732.7" y="373" width="5.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="735.68" y="383.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (50 samples, 0.10%; -0.01%)</title><rect x="1012.3" y="277" width="1.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1015.27" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; +0.01%)</title><rect x="418.9" y="325" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="421.94" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%; -0.01%)</title><rect x="1077.4" y="309" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1080.37" y="319.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%; 0.00%)</title><rect x="103.3" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="106.28" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%; 0.00%)</title><rect x="930.1" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="933.14" y="335.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (8 samples, 0.02%; 0.00%)</title><rect x="693.7" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.75" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; -0.00%)</title><rect x="816.1" y="245" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="819.10" y="255.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (669 samples, 1.37%; +0.03%)</title><rect x="1080.8" y="309" width="16.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="1083.81" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (8 samples, 0.02%; +0.01%)</title><rect x="856.2" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="859.24" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (134 samples, 0.28%; +0.02%)</title><rect x="711.6" y="437" width="3.2" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="714.56" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (8 samples, 0.02%; 0.00%)</title><rect x="258.0" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="261.02" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%; 0.00%)</title><rect x="1161.0" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1164.02" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (19 samples, 0.04%; +0.01%)</title><rect x="629.9" y="389" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="632.91" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (15 samples, 0.03%; +0.01%)</title><rect x="703.1" y="485" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="706.05" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (38 samples, 0.08%; 0.00%)</title><rect x="17.8" y="277" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.83" y="287.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (7 samples, 0.01%; -0.01%)</title><rect x="762.7" y="357" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="765.70" y="367.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (21 samples, 0.04%; -0.00%)</title><rect x="309.5" y="165" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="312.52" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (402 samples, 0.83%; +0.01%)</title><rect x="683.4" y="501" width="9.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="686.35" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (22 samples, 0.05%; -0.01%)</title><rect x="846.2" y="405" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="849.19" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%; -0.00%)</title><rect x="1107.2" y="373" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1110.19" y="383.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.02%)</title><rect x="593.4" y="405" width="0.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="596.42" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="1048.7" y="277" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1051.73" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (58 samples, 0.12%; +0.01%)</title><rect x="945.0" y="389" width="1.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="948.04" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="537.6" y="261" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="540.63" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%; +0.00%)</title><rect x="792.5" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="795.45" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (197 samples, 0.40%; 0.00%)</title><rect x="904.5" y="309" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="907.45" y="319.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (36 samples, 0.07%; +0.07%)</title><rect x="464.0" y="325" width="0.9" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="467.02" y="335.5" ></text>
</g>
<g >
<title>query::querier_base::close (8 samples, 0.02%; -0.14%)</title><rect x="63.1" y="453" width="0.2" height="15.0" fill="rgb(40,40,255)" rx="2" ry="2" />
<text  x="66.13" y="463.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.00%)</title><rect x="705.5" y="485" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="708.55" y="495.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.07%; -0.00%)</title><rect x="1159.2" y="389" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1162.18" y="399.5" ></text>
</g>
<g >
<title>database::find_column_family (34 samples, 0.07%; +0.01%)</title><rect x="1021.9" y="245" width="0.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1024.93" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (94 samples, 0.19%; -0.01%)</title><rect x="550.3" y="357" width="2.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="553.27" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.01%)</title><rect x="81.6" y="453" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="84.57" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (8 samples, 0.02%; -0.01%)</title><rect x="1031.6" y="149" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1034.58" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,943 samples, 49.16%; +0.05%)</title><rect x="51.7" y="485" width="580.1" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="54.74" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (14 samples, 0.03%; +0.02%)</title><rect x="419.6" y="357" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="422.64" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (16 samples, 0.03%; +0.01%)</title><rect x="41.1" y="437" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="44.06" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (24 samples, 0.05%; 0.00%)</title><rect x="1141.1" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.13" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (24 samples, 0.05%; -0.01%)</title><rect x="500.8" y="277" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="503.80" y="287.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (20 samples, 0.04%; +0.03%)</title><rect x="515.8" y="229" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="518.80" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (13 samples, 0.03%; +0.01%)</title><rect x="567.7" y="293" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="570.69" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.02%; -0.01%)</title><rect x="517.6" y="277" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="520.64" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (25 samples, 0.05%; -0.02%)</title><rect x="1045.5" y="261" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1048.51" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (78 samples, 0.16%; -0.00%)</title><rect x="1059.4" y="325" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1062.39" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (51 samples, 0.10%; -0.03%)</title><rect x="791.2" y="309" width="1.3" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="794.22" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (336 samples, 0.69%; -0.01%)</title><rect x="401.0" y="229" width="8.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="404.03" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (7 samples, 0.01%; +0.00%)</title><rect x="622.2" y="405" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="625.18" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (39 samples, 0.08%; +0.01%)</title><rect x="798.0" y="229" width="1.0" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="801.05" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (8 samples, 0.02%; +0.01%)</title><rect x="97.9" y="421" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="100.95" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%; -0.01%)</title><rect x="324.9" y="181" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="327.93" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (73 samples, 0.15%; 0.00%)</title><rect x="1064.1" y="293" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1067.14" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (14 samples, 0.03%; 0.00%)</title><rect x="879.9" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.89" y="399.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.12%; -0.00%)</title><rect x="540.9" y="405" width="1.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="543.95" y="415.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (45 samples, 0.09%; -0.04%)</title><rect x="903.4" y="309" width="1.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="906.36" y="319.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (202 samples, 0.41%; -0.01%)</title><rect x="710.4" y="453" width="4.9" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="713.37" y="463.5" ></text>
</g>
<g >
<title>local_schema_registry (29 samples, 0.06%; +0.01%)</title><rect x="970.0" y="373" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="973.01" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (8 samples, 0.02%; +0.01%)</title><rect x="121.3" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="124.25" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (24 samples, 0.05%; -0.00%)</title><rect x="1141.1" y="261" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1144.13" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (5 samples, 0.01%; +0.01%)</title><rect x="820.5" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="823.48" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (78 samples, 0.16%; +0.00%)</title><rect x="725.2" y="437" width="1.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="728.20" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (7 samples, 0.01%; +0.01%)</title><rect x="709.8" y="437" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="712.79" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%; -0.00%)</title><rect x="1109.1" y="389" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1112.06" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (10 samples, 0.02%; +0.01%)</title><rect x="181.6" y="85" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="184.58" y="95.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (56 samples, 0.11%; +0.09%)</title><rect x="76.5" y="453" width="1.3" height="15.0" fill="rgb(255,98,98)" rx="2" ry="2" />
<text  x="79.48" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="637.0" y="485" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="640.01" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (10 samples, 0.02%; +0.01%)</title><rect x="411.7" y="245" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="414.69" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; -0.00%)</title><rect x="1140.9" y="373" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.89" y="383.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%; +0.00%)</title><rect x="536.9" y="261" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="539.85" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (13 samples, 0.03%; -0.00%)</title><rect x="413.6" y="261" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="416.61" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; -0.07%)</title><rect x="939.1" y="373" width="0.3" height="15.0" fill="rgb(126,126,255)" rx="2" ry="2" />
<text  x="942.10" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (112 samples, 0.23%; +0.00%)</title><rect x="853.5" y="389" width="2.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="856.46" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%; +0.01%)</title><rect x="662.3" y="437" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="665.25" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%; +0.00%)</title><rect x="146.1" y="245" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="149.09" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (6,058 samples, 12.44%; +0.02%)</title><rect x="279.9" y="405" width="146.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="282.87" y="415.5" >seastar::future&lt;mu..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%; +0.01%)</title><rect x="1033.9" y="117" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1036.88" y="127.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (20 samples, 0.04%; -0.03%)</title><rect x="407.1" y="197" width="0.5" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="410.14" y="207.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="575.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (437 samples, 0.90%; -0.00%)</title><rect x="477.4" y="277" width="10.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="480.45" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (17 samples, 0.03%; +0.02%)</title><rect x="1029.2" y="181" width="0.4" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="1032.15" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (52 samples, 0.11%; -0.01%)</title><rect x="658.7" y="421" width="1.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="661.74" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (19 samples, 0.04%; +0.01%)</title><rect x="448.2" y="277" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="451.20" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%; +0.01%)</title><rect x="691.6" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="694.59" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%; 0.00%)</title><rect x="841.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="844.68" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (9 samples, 0.02%; -0.01%)</title><rect x="1048.9" y="277" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1051.95" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="519.1" y="325" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="522.14" y="335.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (8 samples, 0.02%; +0.01%)</title><rect x="660.0" y="421" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="663.00" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (661 samples, 1.36%; -0.01%)</title><rect x="799.6" y="245" width="16.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="802.60" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (798 samples, 1.64%; +0.08%)</title><rect x="499.1" y="293" width="19.3" height="15.0" fill="rgb(255,111,111)" rx="2" ry="2" />
<text  x="502.08" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,240 samples, 2.55%; +0.01%)</title><rect x="793.0" y="325" width="30.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="796.03" y="335.5" >st..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (6 samples, 0.01%; -0.01%)</title><rect x="917.4" y="389" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="920.42" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (12 samples, 0.02%; +0.00%)</title><rect x="863.1" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="866.12" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (78 samples, 0.16%; +0.00%)</title><rect x="746.7" y="357" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="749.71" y="367.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (8 samples, 0.02%; +0.00%)</title><rect x="820.8" y="293" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="823.80" y="303.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%; +0.00%)</title><rect x="903.0" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="906.00" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (138 samples, 0.28%; +0.01%)</title><rect x="415.4" y="293" width="3.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="418.37" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="818.2" y="245" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="821.18" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (16 samples, 0.03%; +0.02%)</title><rect x="290.1" y="293" width="0.4" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="293.09" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (20 samples, 0.04%; -0.02%)</title><rect x="203.8" y="101" width="0.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="206.84" y="111.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (6 samples, 0.01%; +0.01%)</title><rect x="10.3" y="581" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="13.29" y="591.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (22 samples, 0.05%; 0.00%)</title><rect x="753.8" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="756.76" y="303.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (199 samples, 0.41%; -0.05%)</title><rect x="1030.4" y="181" width="4.8" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="1033.41" y="191.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (6 samples, 0.01%; -0.01%)</title><rect x="202.6" y="117" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="205.61" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="878.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.92" y="415.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%; +0.01%)</title><rect x="526.9" y="325" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="529.87" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%; +0.01%)</title><rect x="205.9" y="85" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="208.93" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%; +0.03%)</title><rect x="947.8" y="357" width="1.2" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="950.82" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%; +0.01%)</title><rect x="618.4" y="405" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="621.40" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (114 samples, 0.23%; +0.01%)</title><rect x="189.6" y="117" width="2.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="192.62" y="127.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (91 samples, 0.19%; +0.05%)</title><rect x="907.0" y="293" width="2.2" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="910.02" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (885 samples, 1.82%; +0.00%)</title><rect x="1078.9" y="341" width="21.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1081.87" y="351.5" >s..</text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%; -0.01%)</title><rect x="565.5" y="293" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="568.49" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (6 samples, 0.01%; +0.00%)</title><rect x="888.9" y="437" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="891.90" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (14 samples, 0.03%; -0.01%)</title><rect x="961.0" y="405" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="964.03" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (7 samples, 0.01%; -0.00%)</title><rect x="1036.8" y="213" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1039.83" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (614 samples, 1.26%; -0.01%)</title><rect x="1026.6" y="245" width="14.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1029.59" y="255.5" ></text>
</g>
<g >
<title>database::do_apply (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="991.1" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="994.09" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="289.9" y="261" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="292.85" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; -0.04%)</title><rect x="71.2" y="389" width="0.2" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="74.20" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (205 samples, 0.42%; -0.01%)</title><rect x="696.9" y="469" width="5.0" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="699.95" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%; -0.01%)</title><rect x="1143.1" y="501" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1146.14" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (60 samples, 0.12%; -0.01%)</title><rect x="365.3" y="213" width="1.5" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="368.32" y="223.5" ></text>
</g>
<g >
<title>compound_type&lt; (74 samples, 0.15%; +0.02%)</title><rect x="546.1" y="357" width="1.8" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="549.13" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.00%)</title><rect x="71.1" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="74.05" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (54 samples, 0.11%; -0.00%)</title><rect x="823.4" y="325" width="1.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="826.37" y="335.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.14%; +0.00%)</title><rect x="1049.7" y="245" width="1.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1052.70" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (26 samples, 0.05%; +0.02%)</title><rect x="220.5" y="165" width="0.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="223.46" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="1137.4" y="405" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1140.35" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (13 samples, 0.03%; +0.01%)</title><rect x="610.9" y="421" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="613.94" y="431.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (17 samples, 0.03%; +0.02%)</title><rect x="519.3" y="325" width="0.4" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="522.26" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (19 samples, 0.04%; +0.01%)</title><rect x="704.8" y="469" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="707.80" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; +0.01%)</title><rect x="158.8" y="213" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="161.76" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%; +0.00%)</title><rect x="676.3" y="453" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="679.30" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (25 samples, 0.05%; +0.01%)</title><rect x="539.1" y="341" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="542.06" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (12 samples, 0.02%; +0.01%)</title><rect x="398.8" y="197" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="401.80" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (365 samples, 0.75%; +0.01%)</title><rect x="35.0" y="485" width="8.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="37.95" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (6 samples, 0.01%; +0.00%)</title><rect x="913.8" y="357" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="916.78" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (41 samples, 0.08%; 0.00%)</title><rect x="74.0" y="389" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="77.03" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="32.6" y="469" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="35.58" y="479.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (12 samples, 0.02%; +0.01%)</title><rect x="616.5" y="437" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="619.51" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%; +0.00%)</title><rect x="647.8" y="485" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="650.81" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (76 samples, 0.16%; -0.00%)</title><rect x="913.9" y="357" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="916.93" y="367.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (5 samples, 0.01%; 0.00%)</title><rect x="23.5" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.52" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (27 samples, 0.06%; -0.01%)</title><rect x="999.0" y="277" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1001.99" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,980 samples, 14.33%; +0.05%)</title><rect x="109.6" y="373" width="169.1" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="112.60" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (10 samples, 0.02%; 0.00%)</title><rect x="278.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="281.15" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%; -0.01%)</title><rect x="136.9" y="261" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="139.88" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (5 samples, 0.01%; 0.00%)</title><rect x="22.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.86" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (359 samples, 0.74%; -0.06%)</title><rect x="146.3" y="245" width="8.7" height="15.0" fill="rgb(139,139,255)" rx="2" ry="2" />
<text  x="149.28" y="255.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (6 samples, 0.01%; +0.01%)</title><rect x="1035.1" y="165" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1038.09" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (110 samples, 0.23%; -0.06%)</title><rect x="509.7" y="213" width="2.7" height="15.0" fill="rgb(141,141,255)" rx="2" ry="2" />
<text  x="512.69" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,960 samples, 6.08%; +0.00%)</title><rect x="155.0" y="245" width="71.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="157.98" y="255.5" >partitio..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.02%; +0.01%)</title><rect x="214.1" y="133" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="217.07" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.01%; -0.01%)</title><rect x="18.5" y="261" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="21.48" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="20.3" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.30" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%; +0.04%)</title><rect x="1126.6" y="389" width="1.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1129.65" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (167 samples, 0.34%; -0.02%)</title><rect x="395.2" y="245" width="4.1" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="398.24" y="255.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.01%; +0.01%)</title><rect x="1034.7" y="165" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1037.70" y="175.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%; 0.00%)</title><rect x="1033.8" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1036.76" y="143.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,332 samples, 13.00%; +0.05%)</title><rect x="956.2" y="421" width="153.4" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="959.16" y="431.5" >cql3::statements::s..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (32 samples, 0.07%; -0.00%)</title><rect x="1177.3" y="501" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1180.30" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (169 samples, 0.35%; -0.01%)</title><rect x="865.0" y="421" width="4.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="868.04" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%; -0.01%)</title><rect x="220.1" y="133" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="223.10" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; +0.01%)</title><rect x="1044.3" y="229" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1047.27" y="239.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (12 samples, 0.02%; +0.02%)</title><rect x="960.7" y="405" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="963.66" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (14 samples, 0.03%; -0.02%)</title><rect x="443.4" y="261" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="446.36" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%; -0.01%)</title><rect x="289.5" y="245" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="292.54" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="909.5" y="309" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="912.47" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (122 samples, 0.25%; +0.00%)</title><rect x="827.2" y="341" width="2.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="830.19" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (37 samples, 0.08%; +0.02%)</title><rect x="609.1" y="437" width="0.9" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="612.12" y="447.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%; -0.01%)</title><rect x="685.6" y="469" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="688.61" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (43 samples, 0.09%; -0.00%)</title><rect x="747.4" y="325" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="750.44" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (106 samples, 0.22%; -0.00%)</title><rect x="19.0" y="373" width="2.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="21.96" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (7 samples, 0.01%; 0.00%)</title><rect x="17.6" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.01%)</title><rect x="223.3" y="181" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="226.27" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (29 samples, 0.06%; +0.01%)</title><rect x="289.1" y="261" width="0.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="292.15" y="271.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (5 samples, 0.01%; +0.01%)</title><rect x="553.7" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="556.74" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (18 samples, 0.04%; -0.01%)</title><rect x="563.9" y="309" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="566.91" y="319.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (52 samples, 0.11%; -0.01%)</title><rect x="816.0" y="261" width="1.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="818.95" y="271.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (7 samples, 0.01%; +0.00%)</title><rect x="532.1" y="277" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="535.10" y="287.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (11 samples, 0.02%; -0.01%)</title><rect x="1132.7" y="421" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1135.65" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (478 samples, 0.98%; +0.01%)</title><rect x="504.9" y="261" width="11.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="507.92" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%; +0.01%)</title><rect x="243.1" y="213" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="246.14" y="223.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (14 samples, 0.03%; +0.01%)</title><rect x="79.2" y="453" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="82.24" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (5 samples, 0.01%; +0.01%)</title><rect x="1115.6" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1118.62" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (24 samples, 0.05%; 0.00%)</title><rect x="1141.1" y="277" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.13" y="287.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,640 samples, 3.37%; -0.02%)</title><rect x="786.0" y="357" width="39.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="789.01" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (30 samples, 0.06%; +0.05%)</title><rect x="801.8" y="181" width="0.7" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="804.75" y="191.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (65 samples, 0.13%; 0.00%)</title><rect x="873.9" y="453" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="876.93" y="463.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (41 samples, 0.08%; +0.02%)</title><rect x="535.8" y="261" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="538.83" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (28 samples, 0.06%; +0.02%)</title><rect x="511.7" y="197" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="514.65" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%; +0.00%)</title><rect x="838.0" y="277" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="841.02" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%; +0.01%)</title><rect x="431.5" y="357" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="434.49" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.02%; +0.01%)</title><rect x="1149.5" y="469" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1152.54" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.01%; 0.00%)</title><rect x="19.0" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.96" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="538.3" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="541.30" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (37 samples, 0.08%; +0.00%)</title><rect x="516.5" y="277" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="519.52" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (21 samples, 0.04%; +0.02%)</title><rect x="946.4" y="405" width="0.5" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="949.44" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (21 samples, 0.04%; -0.01%)</title><rect x="824.1" y="309" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="827.14" y="319.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (43 samples, 0.09%; +0.00%)</title><rect x="932.6" y="373" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="935.58" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (10 samples, 0.02%; +0.02%)</title><rect x="160.5" y="197" width="0.2" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="163.48" y="207.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (94 samples, 0.19%; +0.00%)</title><rect x="628.8" y="421" width="2.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="631.84" y="431.5" ></text>
</g>
<g >
<title>validation::validate_column_family (5 samples, 0.01%; 0.00%)</title><rect x="23.3" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.28" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (8 samples, 0.02%; -0.00%)</title><rect x="1028.8" y="197" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1031.84" y="207.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; -0.00%)</title><rect x="578.4" y="341" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="581.45" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (38 samples, 0.08%; -0.00%)</title><rect x="1097.3" y="293" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1100.28" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.01%)</title><rect x="487.5" y="213" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="490.50" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (9 samples, 0.02%; +0.01%)</title><rect x="538.8" y="341" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="541.84" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="54.3" y="453" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="57.29" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (31 samples, 0.06%; +0.00%)</title><rect x="42.1" y="453" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="45.10" y="463.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (656 samples, 1.35%; -0.01%)</title><rect x="122.5" y="293" width="15.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="125.46" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (14 samples, 0.03%; +0.03%)</title><rect x="657.9" y="453" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="660.92" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (36 samples, 0.07%; +0.01%)</title><rect x="780.3" y="341" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="783.34" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr, false&gt;::uninitialized_set&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (7 samples, 0.01%; +0.01%)</title><rect x="747.6" y="309" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="750.63" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="109.4" y="373" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="112.38" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (9 samples, 0.02%; +0.00%)</title><rect x="220.2" y="117" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="223.20" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%; +0.01%)</title><rect x="556.2" y="421" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="559.16" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (57 samples, 0.12%; -0.01%)</title><rect x="858.9" y="421" width="1.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="861.93" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="448.0" y="261" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="450.98" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%; +0.01%)</title><rect x="739.3" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="742.27" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%; +0.00%)</title><rect x="850.4" y="437" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="853.40" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (47 samples, 0.10%; +0.07%)</title><rect x="1064.5" y="261" width="1.2" height="15.0" fill="rgb(255,118,118)" rx="2" ry="2" />
<text  x="1067.53" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (17 samples, 0.03%; -0.01%)</title><rect x="571.8" y="277" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="574.79" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (13 samples, 0.03%; +0.01%)</title><rect x="1119.6" y="341" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1122.64" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (295 samples, 0.61%; +0.00%)</title><rect x="732.0" y="421" width="7.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="735.00" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (68 samples, 0.14%; -0.01%)</title><rect x="658.5" y="437" width="1.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="661.55" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="587.6" y="373" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="590.61" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="77.9" y="453" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="80.86" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (23 samples, 0.05%; -0.00%)</title><rect x="879.7" y="405" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="882.72" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (17 samples, 0.03%; -0.01%)</title><rect x="496.1" y="309" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="499.08" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (14 samples, 0.03%; 0.00%)</title><rect x="693.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.17" y="351.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (8 samples, 0.02%; -0.02%)</title><rect x="576.9" y="373" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="579.95" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (28 samples, 0.06%; +0.00%)</title><rect x="879.6" y="485" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="882.62" y="495.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (13 samples, 0.03%; +0.00%)</title><rect x="927.1" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="930.08" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.02%; +0.00%)</title><rect x="25.2" y="517" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="28.19" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.02%; +0.00%)</title><rect x="94.0" y="421" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="97.00" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (32 samples, 0.07%; +0.03%)</title><rect x="587.8" y="373" width="0.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="590.78" y="383.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (50 samples, 0.10%; +0.00%)</title><rect x="464.9" y="325" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="467.90" y="335.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (338 samples, 0.69%; +0.00%)</title><rect x="1081.4" y="277" width="8.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1084.44" y="287.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (10 samples, 0.02%; 0.00%)</title><rect x="983.8" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="986.80" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (25 samples, 0.05%; +0.00%)</title><rect x="752.6" y="277" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="755.57" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (22 samples, 0.05%; +0.01%)</title><rect x="577.7" y="357" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="580.65" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (435 samples, 0.89%; +0.02%)</title><rect x="229.3" y="229" width="10.5" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="232.31" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (8 samples, 0.02%; +0.01%)</title><rect x="165.5" y="133" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="168.54" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (24 samples, 0.05%; +0.01%)</title><rect x="690.9" y="437" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="693.91" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (9 samples, 0.02%; +0.01%)</title><rect x="145.2" y="245" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="148.24" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (63 samples, 0.13%; -0.01%)</title><rect x="802.5" y="181" width="1.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="805.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (35 samples, 0.07%; -0.13%)</title><rect x="625.2" y="437" width="0.9" height="15.0" fill="rgb(55,55,255)" rx="2" ry="2" />
<text  x="628.21" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (66 samples, 0.14%; -0.00%)</title><rect x="565.1" y="309" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="568.10" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (493 samples, 1.01%; -0.03%)</title><rect x="745.9" y="389" width="12.0" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="748.91" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (154 samples, 0.32%; +0.01%)</title><rect x="594.2" y="421" width="3.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="597.20" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%; +0.00%)</title><rect x="549.4" y="341" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="552.38" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.02%; 0.00%)</title><rect x="631.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="634.94" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (158 samples, 0.32%; -0.00%)</title><rect x="996.2" y="293" width="3.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="999.16" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (6 samples, 0.01%; +0.01%)</title><rect x="213.7" y="117" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="216.68" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (12 samples, 0.02%; -0.00%)</title><rect x="675.4" y="469" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="678.41" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="1053.4" y="293" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1056.41" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.00%)</title><rect x="618.8" y="389" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="621.81" y="399.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (11 samples, 0.02%; +0.01%)</title><rect x="897.1" y="405" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="900.14" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="513.3" y="245" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="516.28" y="255.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (14 samples, 0.03%; -0.00%)</title><rect x="1099.3" y="309" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1102.34" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%; +0.00%)</title><rect x="731.1" y="389" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="734.06" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%; -0.00%)</title><rect x="1147.9" y="485" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1150.89" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (5 samples, 0.01%; +0.01%)</title><rect x="138.9" y="293" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="141.87" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (43 samples, 0.09%; +0.00%)</title><rect x="813.5" y="117" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="816.48" y="127.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (14 samples, 0.03%; +0.02%)</title><rect x="592.8" y="421" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="595.79" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (17 samples, 0.03%; +0.00%)</title><rect x="366.4" y="149" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="369.36" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (5 samples, 0.01%; +0.00%)</title><rect x="393.4" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="396.42" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (14 samples, 0.03%; +0.00%)</title><rect x="691.5" y="453" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="694.50" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (457 samples, 0.94%; -0.01%)</title><rect x="694.3" y="501" width="11.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="697.26" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.02%; +0.00%)</title><rect x="608.2" y="421" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="611.20" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (49 samples, 0.10%; +0.02%)</title><rect x="426.9" y="421" width="1.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="429.86" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="255.5" ></text>
</g>
<g >
<title>perf_simple_que (48,705 samples, 100.00%; 0.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>validation::validate_column_family (409 samples, 0.84%; +0.01%)</title><rect x="833.2" y="389" width="9.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="836.23" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (6 samples, 0.01%; +0.01%)</title><rect x="136.3" y="261" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="139.35" y="271.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,444 samples, 2.96%; -0.01%)</title><rect x="163.4" y="165" width="35.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="166.43" y="175.5" >cl..</text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.03%; -0.02%)</title><rect x="630.5" y="373" width="0.4" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="633.49" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%; +0.01%)</title><rect x="876.1" y="469" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="879.08" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (500 samples, 1.03%; +0.01%)</title><rect x="563.7" y="325" width="12.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="566.72" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%; -0.01%)</title><rect x="586.3" y="357" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="589.25" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (146 samples, 0.30%; +0.00%)</title><rect x="444.0" y="277" width="3.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="446.96" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (70 samples, 0.14%; 0.00%)</title><rect x="288.4" y="293" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="291.40" y="303.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (7 samples, 0.01%; 0.00%)</title><rect x="879.9" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.94" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (21 samples, 0.04%; -0.01%)</title><rect x="1066.4" y="261" width="0.5" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1069.37" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (6 samples, 0.01%; +0.00%)</title><rect x="775.1" y="373" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="778.13" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,264 samples, 4.65%; -0.01%)</title><rect x="160.8" y="197" width="54.8" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="163.79" y="207.5" >parti..</text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (7 samples, 0.01%; +0.00%)</title><rect x="988.3" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="991.31" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (6 samples, 0.01%; -0.01%)</title><rect x="601.9" y="389" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="604.93" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; 0.00%)</title><rect x="622.3" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="625.35" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (16 samples, 0.03%; +0.03%)</title><rect x="419.2" y="357" width="0.4" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="422.23" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (39 samples, 0.08%; -0.01%)</title><rect x="699.5" y="453" width="0.9" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="702.49" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (6 samples, 0.01%; 0.00%)</title><rect x="23.5" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.52" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (8 samples, 0.02%; 0.00%)</title><rect x="1176.0" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.02" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,844 samples, 12.00%; -0.02%)</title><rect x="966.0" y="405" width="141.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="968.99" y="415.5" >service::storage_..</text>
</g>
<g >
<title>operator new (21 samples, 0.04%; -0.00%)</title><rect x="522.6" y="325" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="525.58" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,539 samples, 7.27%; +0.01%)</title><rect x="142.8" y="261" width="85.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="145.77" y="271.5" >partition_..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1121.6" y="405" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1124.61" y="415.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (6 samples, 0.01%; +0.01%)</title><rect x="18.5" y="245" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="21.48" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (11 samples, 0.02%; +0.00%)</title><rect x="46.3" y="485" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="49.32" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (11 samples, 0.02%; +0.01%)</title><rect x="781.2" y="357" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="784.21" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (57 samples, 0.12%; -0.02%)</title><rect x="314.1" y="181" width="1.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="317.13" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="824.4" y="277" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="827.41" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (10 samples, 0.02%; +0.01%)</title><rect x="261.8" y="325" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="264.80" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="244.3" y="197" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="247.33" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%; +0.00%)</title><rect x="735.4" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="738.40" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (549 samples, 1.13%; +0.01%)</title><rect x="303.4" y="213" width="13.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="306.42" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (44 samples, 0.09%; +0.01%)</title><rect x="834.2" y="309" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="837.17" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (148 samples, 0.30%; -0.00%)</title><rect x="489.6" y="325" width="3.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="492.56" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (42 samples, 0.09%; +0.02%)</title><rect x="670.0" y="485" width="1.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="673.03" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="718.8" y="485" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="721.85" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (15 samples, 0.03%; +0.01%)</title><rect x="542.6" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="545.64" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (24 samples, 0.05%; 0.00%)</title><rect x="693.1" y="501" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (19 samples, 0.04%; -0.01%)</title><rect x="713.1" y="421" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="716.06" y="431.5" ></text>
</g>
<g >
<title>__tls_init (13 samples, 0.03%; +0.00%)</title><rect x="503.3" y="245" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="506.27" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.01%)</title><rect x="726.8" y="421" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="729.77" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="986.5" y="357" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="989.46" y="367.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%; -0.00%)</title><rect x="507.8" y="197" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="510.80" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (49 samples, 0.10%; -0.01%)</title><rect x="219.3" y="165" width="1.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="222.28" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%; +0.00%)</title><rect x="627.4" y="373" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="630.44" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (193 samples, 0.40%; +0.01%)</title><rect x="414.2" y="309" width="4.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="417.16" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (5 samples, 0.01%; -0.00%)</title><rect x="769.7" y="357" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="772.65" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.01%; -0.01%)</title><rect x="795.6" y="245" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="798.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (9 samples, 0.02%; +0.01%)</title><rect x="660.2" y="437" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="663.19" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (21 samples, 0.04%; +0.03%)</title><rect x="556.5" y="421" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="559.55" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.00%)</title><rect x="665.7" y="469" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="668.67" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="643.4" y="469" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="646.43" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (53 samples, 0.11%; +0.00%)</title><rect x="802.7" y="165" width="1.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="805.68" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (5 samples, 0.01%; +0.00%)</title><rect x="984.6" y="357" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="987.62" y="367.5" ></text>
</g>
<g >
<title>operator new (89 samples, 0.18%; +0.00%)</title><rect x="550.4" y="341" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="553.37" y="351.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (85 samples, 0.17%; -0.00%)</title><rect x="1133.2" y="405" width="2.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1136.21" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (16 samples, 0.03%; -0.01%)</title><rect x="131.6" y="245" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="134.62" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="829.3" y="277" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="832.30" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (18 samples, 0.04%; +0.01%)</title><rect x="809.2" y="117" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="812.22" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (7 samples, 0.01%; +0.00%)</title><rect x="255.5" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="258.50" y="319.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%; -0.00%)</title><rect x="458.2" y="293" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="461.16" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (5 samples, 0.01%; -0.00%)</title><rect x="835.7" y="325" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="838.67" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (6 samples, 0.01%; +0.01%)</title><rect x="748.6" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="751.65" y="383.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (13 samples, 0.03%; -0.02%)</title><rect x="938.4" y="389" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="941.40" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; -0.01%)</title><rect x="638.2" y="469" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="641.24" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; -0.00%)</title><rect x="712.2" y="421" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="715.21" y="431.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%; +0.01%)</title><rect x="502.0" y="261" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="504.99" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%; +0.01%)</title><rect x="996.8" y="277" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="999.83" y="287.5" ></text>
</g>
<g >
<title>database::has_keyspace (120 samples, 0.25%; +0.01%)</title><rect x="840.2" y="357" width="2.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="843.23" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (25 samples, 0.05%; +0.05%)</title><rect x="70.4" y="389" width="0.7" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="73.45" y="399.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (6 samples, 0.01%; +0.00%)</title><rect x="1141.0" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1143.96" y="287.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%; +0.02%)</title><rect x="831.0" y="373" width="0.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="834.05" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (90 samples, 0.18%; +0.01%)</title><rect x="38.2" y="437" width="2.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="41.20" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%; +0.01%)</title><rect x="1120.0" y="405" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1122.96" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (23 samples, 0.05%; +0.02%)</title><rect x="1076.8" y="309" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1079.81" y="319.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (6 samples, 0.01%; -0.00%)</title><rect x="714.2" y="421" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="717.24" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (73 samples, 0.15%; +0.03%)</title><rect x="715.7" y="437" width="1.7" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="718.67" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.01%; -0.00%)</title><rect x="307.2" y="165" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="310.22" y="175.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; +0.01%)</title><rect x="287.2" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="290.21" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (31 samples, 0.06%; +0.03%)</title><rect x="921.5" y="357" width="0.7" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="924.49" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="589.9" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="592.91" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; 0.00%)</title><rect x="615.6" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="618.57" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (24 samples, 0.05%; +0.03%)</title><rect x="386.5" y="165" width="0.6" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="389.50" y="175.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (10 samples, 0.02%; +0.01%)</title><rect x="390.3" y="213" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="393.35" y="223.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.01%; 0.00%)</title><rect x="23.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.49" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (365 samples, 0.75%; +0.03%)</title><rect x="766.4" y="405" width="8.9" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="769.43" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (388 samples, 0.80%; +0.06%)</title><rect x="266.4" y="325" width="9.4" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="269.40" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="103.1" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="106.08" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; +0.01%)</title><rect x="704.0" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="707.04" y="479.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (29 samples, 0.06%; +0.01%)</title><rect x="713.5" y="421" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="716.54" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; +0.00%)</title><rect x="1131.0" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1133.98" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%; -0.01%)</title><rect x="162.9" y="181" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="165.85" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (46 samples, 0.09%; 0.00%)</title><rect x="22.3" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.28" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.00%)</title><rect x="133.7" y="213" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="136.71" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (25 samples, 0.05%; -0.01%)</title><rect x="456.7" y="261" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="459.66" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%; -0.01%)</title><rect x="152.8" y="181" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="155.80" y="191.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (334 samples, 0.69%; -0.01%)</title><rect x="479.9" y="261" width="8.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="482.87" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (18 samples, 0.04%; 0.00%)</title><rect x="815.1" y="213" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.08" y="223.5" ></text>
</g>
<g >
<title>db::block_for (8 samples, 0.02%; +0.01%)</title><rect x="1067.7" y="325" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1070.65" y="335.5" ></text>
</g>
<g >
<title>row::row (1,395 samples, 2.86%; -0.02%)</title><rect x="164.6" y="149" width="33.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="167.62" y="159.5" >ro..</text>
</g>
<g >
<title>seastar::reactor::run (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="549" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="607.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (11 samples, 0.02%; -0.01%)</title><rect x="440.1" y="325" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="443.09" y="335.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; +0.00%)</title><rect x="938.0" y="325" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="940.99" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (7 samples, 0.01%; -0.01%)</title><rect x="1044.9" y="261" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1047.90" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,197 samples, 12.72%; 0.00%)</title><rect x="112.8" y="357" width="150.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="115.77" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (85 samples, 0.17%; +0.05%)</title><rect x="384.4" y="133" width="2.1" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="387.44" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%; -0.00%)</title><rect x="1036.1" y="197" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1039.08" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%; +0.00%)</title><rect x="216.0" y="213" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="218.98" y="223.5" ></text>
</g>
<g >
<title>database::has_keyspace (166 samples, 0.34%; +0.01%)</title><rect x="852.6" y="421" width="4.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="855.58" y="431.5" ></text>
</g>
<g >
<title>query::digester::digester (20 samples, 0.04%; -0.03%)</title><rect x="601.6" y="405" width="0.5" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="604.59" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.01%; -0.00%)</title><rect x="863.2" y="325" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="866.22" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (27 samples, 0.06%; -0.01%)</title><rect x="829.4" y="293" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="832.42" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="678.8" y="453" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="681.75" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%; -0.00%)</title><rect x="502.7" y="261" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="505.71" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%; +0.00%)</title><rect x="317.3" y="213" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="320.25" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="693.1" y="453" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="463.5" ></text>
</g>
<g >
<title>tracing::add_table_name (47 samples, 0.10%; +0.07%)</title><rect x="1137.5" y="421" width="1.2" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="1140.52" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%; +0.01%)</title><rect x="626.1" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="629.06" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (153 samples, 0.31%; +0.02%)</title><rect x="202.8" y="117" width="3.7" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="205.75" y="127.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (6 samples, 0.01%; -0.01%)</title><rect x="626.5" y="421" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="629.54" y="431.5" ></text>
</g>
<g >
<title>operator delete (50 samples, 0.10%; +0.04%)</title><rect x="61.4" y="453" width="1.2" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="64.36" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (24 samples, 0.05%; +0.00%)</title><rect x="372.3" y="181" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="375.27" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="450.6" y="293" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="453.65" y="303.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (21 samples, 0.04%; -0.00%)</title><rect x="1177.5" y="469" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1180.47" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.03%; +0.01%)</title><rect x="208.8" y="149" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="211.79" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (102 samples, 0.21%; -0.03%)</title><rect x="95.5" y="421" width="2.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="98.47" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%; +0.02%)</title><rect x="840.4" y="325" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="843.40" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (206 samples, 0.42%; -0.00%)</title><rect x="216.8" y="213" width="5.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="219.78" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (9 samples, 0.02%; +0.00%)</title><rect x="774.9" y="373" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="777.91" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (102 samples, 0.21%; -0.02%)</title><rect x="583.6" y="357" width="2.5" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="586.63" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (18 samples, 0.04%; +0.01%)</title><rect x="1080.4" y="309" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1083.37" y="319.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (5 samples, 0.01%; +0.00%)</title><rect x="1153.2" y="485" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1156.17" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,409 samples, 2.89%; +0.00%)</title><rect x="556.3" y="437" width="34.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="559.33" y="447.5" >qu..</text>
</g>
<g >
<title>mutation_querier::mutation_querier (98 samples, 0.20%; +0.05%)</title><rect x="305.0" y="181" width="2.4" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="308.02" y="191.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%; -0.02%)</title><rect x="237.8" y="213" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="240.84" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.01%)</title><rect x="144.6" y="245" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="147.58" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,220 samples, 2.50%; -0.01%)</title><rect x="1145.5" y="501" width="29.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1148.52" y="511.5" >se..</text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1164.4" y="469" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1167.44" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%; +0.02%)</title><rect x="618.0" y="421" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="621.04" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (43 samples, 0.09%; +0.01%)</title><rect x="680.9" y="453" width="1.0" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="683.91" y="463.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (475 samples, 0.98%; +0.01%)</title><rect x="920.0" y="389" width="11.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="922.98" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; -0.00%)</title><rect x="222.2" y="213" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="225.18" y="223.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (12 samples, 0.02%; -0.00%)</title><rect x="931.5" y="389" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="934.49" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%; +0.02%)</title><rect x="498.1" y="277" width="0.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="501.06" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (34 samples, 0.07%; +0.01%)</title><rect x="949.6" y="341" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="952.57" y="351.5" ></text>
</g>
<g >
<title>main (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="613" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="623.5" >main</text>
</g>
<g >
<title>tombstone::apply (12 samples, 0.02%; -0.01%)</title><rect x="390.7" y="197" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="393.71" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (15 samples, 0.03%; -0.01%)</title><rect x="952.7" y="341" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="955.69" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (33 samples, 0.07%; -0.00%)</title><rect x="543.9" y="421" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="546.85" y="431.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (7 samples, 0.01%; -0.02%)</title><rect x="559.4" y="341" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="562.41" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.98" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (10 samples, 0.02%; -0.01%)</title><rect x="1052.3" y="277" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1055.27" y="287.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,627 samples, 5.39%; -0.06%)</title><rect x="460.7" y="341" width="63.6" height="15.0" fill="rgb(141,141,255)" rx="2" ry="2" />
<text  x="463.68" y="351.5" >memtab..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; +0.01%)</title><rect x="1037.2" y="213" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1040.17" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%; +0.01%)</title><rect x="938.9" y="389" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="941.93" y="399.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (31 samples, 0.06%; -0.01%)</title><rect x="748.8" y="373" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="751.79" y="383.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; 0.00%)</title><rect x="489.3" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="492.32" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (10 samples, 0.02%; -0.01%)</title><rect x="895.5" y="421" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="898.54" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%; +0.01%)</title><rect x="1077.2" y="293" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1080.22" y="303.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (379 samples, 0.78%; +0.07%)</title><rect x="377.3" y="165" width="9.2" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="380.31" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (42 samples, 0.09%; +0.03%)</title><rect x="293.1" y="261" width="1.1" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="296.15" y="271.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,336 samples, 2.74%; +0.14%)</title><rect x="331.7" y="181" width="32.4" height="15.0" fill="rgb(255,37,37)" rx="2" ry="2" />
<text  x="334.72" y="191.5" >wr..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%; +0.01%)</title><rect x="575.0" y="293" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="577.99" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (18 samples, 0.04%; +0.00%)</title><rect x="845.0" y="405" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="848.05" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (82 samples, 0.17%; +0.01%)</title><rect x="502.8" y="261" width="2.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="505.84" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (13 samples, 0.03%; +0.01%)</title><rect x="645.6" y="485" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="648.58" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (5 samples, 0.01%; +0.00%)</title><rect x="517.5" y="277" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="520.52" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (240 samples, 0.49%; +0.01%)</title><rect x="129.5" y="261" width="5.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="132.49" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (38 samples, 0.08%; +0.02%)</title><rect x="417.8" y="261" width="0.9" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="420.80" y="271.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.09%; 0.00%)</title><rect x="758.1" y="405" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="761.14" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%; +0.00%)</title><rect x="872.8" y="405" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="875.84" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%; +0.01%)</title><rect x="710.0" y="453" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="712.98" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (205 samples, 0.42%; 0.00%)</title><rect x="17.3" y="453" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.32" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%; +0.01%)</title><rect x="1035.8" y="197" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1038.79" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%; +0.00%)</title><rect x="1030.0" y="197" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1032.98" y="207.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (7 samples, 0.01%; +0.00%)</title><rect x="731.8" y="405" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="734.79" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (69 samples, 0.14%; +0.00%)</title><rect x="603.1" y="405" width="1.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="606.14" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (91 samples, 0.19%; -0.00%)</title><rect x="861.3" y="389" width="2.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="864.28" y="399.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (19 samples, 0.04%; +0.01%)</title><rect x="925.3" y="373" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="928.34" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="37.2" y="437" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="40.16" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (18 samples, 0.04%; +0.01%)</title><rect x="489.0" y="325" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="492.03" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (17 samples, 0.03%; +0.02%)</title><rect x="1163.9" y="453" width="0.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1166.86" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (27 samples, 0.06%; +0.01%)</title><rect x="208.0" y="149" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="211.04" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (33 samples, 0.07%; -0.04%)</title><rect x="1015.3" y="245" width="0.8" height="15.0" fill="rgb(156,156,255)" rx="2" ry="2" />
<text  x="1018.30" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (47 samples, 0.10%; -0.03%)</title><rect x="71.4" y="389" width="1.2" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="74.44" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (10 samples, 0.02%; -0.01%)</title><rect x="295.2" y="245" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="298.16" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (13 samples, 0.03%; +0.02%)</title><rect x="393.1" y="229" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="396.11" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (56 samples, 0.11%; -0.00%)</title><rect x="872.3" y="453" width="1.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="875.30" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%; +0.01%)</title><rect x="307.0" y="165" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="309.98" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%; 0.00%)</title><rect x="1078.4" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1081.36" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (11 samples, 0.02%; +0.00%)</title><rect x="1175.2" y="501" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1178.17" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (19 samples, 0.04%; +0.02%)</title><rect x="394.2" y="229" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="397.22" y="239.5" ></text>
</g>
<g >
<title>database::query (146 samples, 0.30%; -0.04%)</title><rect x="44.0" y="501" width="3.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="46.99" y="511.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (23 samples, 0.05%; +0.01%)</title><rect x="436.5" y="341" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="439.50" y="351.5" ></text>
</g>
<g >
<title>table::query (31 samples, 0.06%; -0.00%)</title><rect x="1175.8" y="501" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1178.75" y="511.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (42 samples, 0.09%; -0.01%)</title><rect x="838.8" y="309" width="1.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="841.80" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (10 samples, 0.02%; -0.01%)</title><rect x="611.3" y="437" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="614.28" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (5 samples, 0.01%; +0.01%)</title><rect x="1067.0" y="309" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1070.05" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (12 samples, 0.02%; -0.04%)</title><rect x="995.4" y="293" width="0.3" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="998.43" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (150 samples, 0.31%; +0.02%)</title><rect x="1022.9" y="229" width="3.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1025.85" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.02%; +0.00%)</title><rect x="990.8" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="993.83" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (73 samples, 0.15%; -0.00%)</title><rect x="632.3" y="485" width="1.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="635.26" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (33 samples, 0.07%; +0.00%)</title><rect x="781.6" y="373" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="784.57" y="383.5" ></text>
</g>
<g >
<title>row_cache::make_reader (532 samples, 1.09%; +0.03%)</title><rect x="525.5" y="341" width="12.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="528.54" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%; -0.03%)</title><rect x="835.0" y="293" width="0.2" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="838.02" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (5 samples, 0.01%; -0.00%)</title><rect x="408.4" y="213" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="411.45" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (299 samples, 0.61%; +0.03%)</title><rect x="1112.7" y="405" width="7.3" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="1115.71" y="415.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%; +0.00%)</title><rect x="859.1" y="405" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="862.10" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%; +0.00%)</title><rect x="517.9" y="277" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="520.93" y="287.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (32 samples, 0.07%; +0.05%)</title><rect x="226.7" y="245" width="0.8" height="15.0" fill="rgb(255,149,149)" rx="2" ry="2" />
<text  x="229.69" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (19 samples, 0.04%; 0.00%)</title><rect x="862.4" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="865.44" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.05%; -0.01%)</title><rect x="1048.1" y="277" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1051.10" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,551 samples, 11.40%; +0.01%)</title><rect x="284.7" y="357" width="134.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="287.74" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="560.8" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.84" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (13 samples, 0.03%; +0.00%)</title><rect x="253.6" y="277" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="256.63" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%; +0.01%)</title><rect x="939.5" y="405" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="942.54" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (9 samples, 0.02%; 0.00%)</title><rect x="457.8" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="460.80" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (10 samples, 0.02%; -0.01%)</title><rect x="561.4" y="325" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="564.42" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (6 samples, 0.01%; +0.01%)</title><rect x="75.1" y="421" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="78.05" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%; +0.00%)</title><rect x="1131.1" y="389" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1134.13" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="779.5" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="782.51" y="335.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="878.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.92" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%; -0.00%)</title><rect x="681.1" y="437" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="684.10" y="447.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%; +0.01%)</title><rect x="416.6" y="261" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="419.56" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (67 samples, 0.14%; -0.04%)</title><rect x="687.7" y="453" width="1.6" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="690.72" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (10 samples, 0.02%; +0.01%)</title><rect x="1169.7" y="453" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1172.72" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (69 samples, 0.14%; -0.02%)</title><rect x="690.2" y="485" width="1.7" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="693.19" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; -0.00%)</title><rect x="1140.1" y="389" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.12" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (24 samples, 0.05%; +0.02%)</title><rect x="145.5" y="229" width="0.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="148.50" y="239.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (56 samples, 0.11%; +0.02%)</title><rect x="755.8" y="261" width="1.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="758.77" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; -0.01%)</title><rect x="635.3" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="638.34" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.01%)</title><rect x="271.4" y="293" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="274.41" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (23 samples, 0.05%; +0.01%)</title><rect x="915.2" y="325" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="918.21" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%; -0.02%)</title><rect x="540.6" y="341" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="543.61" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.16%; -0.01%)</title><rect x="1070.9" y="309" width="1.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1073.92" y="319.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (9 samples, 0.02%; 0.00%)</title><rect x="243.3" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="246.26" y="223.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (8 samples, 0.02%; -0.00%)</title><rect x="863.1" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="866.15" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (49 samples, 0.10%; -0.02%)</title><rect x="617.9" y="437" width="1.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="620.89" y="447.5" ></text>
</g>
<g >
<title>__tls_init (31 samples, 0.06%; -0.01%)</title><rect x="489.9" y="309" width="0.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="492.87" y="319.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (29 samples, 0.06%; 0.00%)</title><rect x="467.7" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="470.68" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (8 samples, 0.02%; 0.00%)</title><rect x="16.7" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.66" y="623.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (37 samples, 0.08%; +0.03%)</title><rect x="391.2" y="213" width="0.9" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="394.17" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (19 samples, 0.04%; +0.01%)</title><rect x="532.5" y="309" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="535.51" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="677.8" y="485" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="680.78" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.00%)</title><rect x="709.5" y="437" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="712.47" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (132 samples, 0.27%; -0.00%)</title><rect x="173.5" y="101" width="3.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="176.54" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (18 samples, 0.04%; -0.01%)</title><rect x="536.2" y="245" width="0.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="539.17" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%; +0.00%)</title><rect x="1036.3" y="197" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1039.28" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (13 samples, 0.03%; +0.02%)</title><rect x="749.8" y="357" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="752.76" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="555.8" y="421" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="558.85" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%; +0.00%)</title><rect x="727.0" y="421" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="729.96" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (90 samples, 0.18%; -0.01%)</title><rect x="817.2" y="261" width="2.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="820.21" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="357" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (67 samples, 0.14%; +0.01%)</title><rect x="733.5" y="341" width="1.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="736.46" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (7 samples, 0.01%; -0.00%)</title><rect x="543.7" y="421" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="546.68" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (12 samples, 0.02%; +0.02%)</title><rect x="1113.8" y="357" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="1116.80" y="367.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (76 samples, 0.16%; -0.01%)</title><rect x="606.1" y="421" width="1.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="609.14" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%; -0.00%)</title><rect x="42.9" y="469" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="45.95" y="479.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (255 samples, 0.52%; +0.00%)</title><rect x="17.3" y="485" width="6.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="20.27" y="495.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%; 0.00%)</title><rect x="549.3" y="357" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="552.26" y="367.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%; 0.00%)</title><rect x="47.7" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.75" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%; +0.00%)</title><rect x="675.8" y="469" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="678.82" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (56 samples, 0.11%; 0.00%)</title><rect x="17.6" y="357" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.58" y="367.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (5 samples, 0.01%; -0.00%)</title><rect x="328.0" y="181" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="330.96" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (6 samples, 0.01%; +0.01%)</title><rect x="768.7" y="373" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="771.73" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,766 samples, 7.73%; -0.03%)</title><rect x="301.0" y="229" width="91.3" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="304.04" y="239.5" >compact_mu..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (9 samples, 0.02%; +0.01%)</title><rect x="1172.4" y="437" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1175.36" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.03%; +0.03%)</title><rect x="400.5" y="229" width="0.4" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="403.50" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%; +0.00%)</title><rect x="19.7" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="22.69" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (49 samples, 0.10%; -0.02%)</title><rect x="298.4" y="229" width="1.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="301.38" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="717.3" y="405" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="720.27" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (78 samples, 0.16%; +0.01%)</title><rect x="685.2" y="485" width="1.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="688.20" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,987 samples, 12.29%; +0.02%)</title><rect x="281.0" y="389" width="145.1" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="284.03" y="399.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (7 samples, 0.01%; 0.00%)</title><rect x="73.3" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.28" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (14 samples, 0.03%; -0.01%)</title><rect x="135.9" y="261" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="138.86" y="271.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.01%; 0.00%)</title><rect x="1140.7" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.75" y="303.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.02%; 0.00%)</title><rect x="19.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.67" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (28 samples, 0.06%; +0.04%)</title><rect x="1143.6" y="501" width="0.6" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="1146.56" y="511.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.03%; -0.00%)</title><rect x="553.9" y="405" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="556.91" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (80 samples, 0.16%; -0.00%)</title><rect x="961.5" y="389" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="964.53" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (7 samples, 0.01%; 0.00%)</title><rect x="717.2" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="720.22" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (7 samples, 0.01%; -0.02%)</title><rect x="595.4" y="405" width="0.1" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="598.36" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.01%)</title><rect x="1048.5" y="229" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1051.46" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (34 samples, 0.07%; 0.00%)</title><rect x="412.0" y="245" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="415.03" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="720.8" y="501" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="723.79" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%; -0.00%)</title><rect x="286.7" y="293" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="289.73" y="303.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (7 samples, 0.01%; -0.02%)</title><rect x="364.7" y="197" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="367.69" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,516 samples, 21.59%; +0.10%)</title><rect x="885.0" y="469" width="254.8" height="15.0" fill="rgb(255,80,80)" rx="2" ry="2" />
<text  x="887.98" y="479.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (15 samples, 0.03%; +0.01%)</title><rect x="709.6" y="453" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="712.59" y="463.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%; -0.02%)</title><rect x="602.1" y="405" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="605.07" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (13 samples, 0.03%; -0.01%)</title><rect x="910.5" y="325" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="913.46" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%; +0.01%)</title><rect x="638.5" y="485" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="641.53" y="495.5" ></text>
</g>
<g >
<title>dht::shard_of (33 samples, 0.07%; -0.01%)</title><rect x="1011.4" y="277" width="0.8" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1014.42" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (18 samples, 0.04%; 0.00%)</title><rect x="698.5" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.47" y="463.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (9 samples, 0.02%; +0.01%)</title><rect x="1052.8" y="261" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1055.78" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (25 samples, 0.05%; +0.01%)</title><rect x="542.4" y="405" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="545.40" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%; -0.00%)</title><rect x="1152.4" y="485" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1155.42" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (15 samples, 0.03%; +0.02%)</title><rect x="884.3" y="469" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="887.30" y="479.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (18 samples, 0.04%; +0.03%)</title><rect x="995.7" y="293" width="0.5" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="998.72" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="437" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.02%; 0.00%)</title><rect x="879.9" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.89" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (61 samples, 0.13%; +0.03%)</title><rect x="892.8" y="421" width="1.5" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="895.85" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (18 samples, 0.04%; -0.00%)</title><rect x="511.2" y="197" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="514.22" y="207.5" ></text>
</g>
<g >
<title>table::make_reader (4,455 samples, 9.15%; -0.12%)</title><rect x="432.9" y="357" width="107.9" height="15.0" fill="rgb(65,65,255)" rx="2" ry="2" />
<text  x="435.92" y="367.5" >table::make_r..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (16 samples, 0.03%; +0.03%)</title><rect x="163.7" y="149" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="166.72" y="159.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (19 samples, 0.04%; +0.01%)</title><rect x="366.8" y="213" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="369.82" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (20 samples, 0.04%; -0.01%)</title><rect x="816.7" y="213" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="819.68" y="223.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,590 samples, 9.42%; +0.00%)</title><rect x="429.7" y="405" width="111.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="432.74" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>mutation_querier::mutation_querier (17 samples, 0.03%; +0.03%)</title><rect x="303.7" y="197" width="0.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="306.69" y="207.5" ></text>
</g>
<g >
<title>table::query (22,686 samples, 46.58%; -0.14%)</title><rect x="81.9" y="453" width="549.6" height="15.0" fill="rgb(37,37,255)" rx="2" ry="2" />
<text  x="84.86" y="463.5" >table::query</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (9 samples, 0.02%; +0.00%)</title><rect x="870.8" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="873.78" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%; -0.03%)</title><rect x="725.7" y="405" width="1.0" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="728.68" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (6 samples, 0.01%; -0.00%)</title><rect x="258.5" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="261.53" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (57 samples, 0.12%; +0.04%)</title><rect x="209.8" y="165" width="1.4" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="212.83" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (70 samples, 0.14%; +0.01%)</title><rect x="127.7" y="261" width="1.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="130.70" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (5 samples, 0.01%; -0.00%)</title><rect x="395.1" y="245" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="398.12" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (61 samples, 0.13%; -0.00%)</title><rect x="1158.6" y="437" width="1.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1161.65" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (5 samples, 0.01%; +0.01%)</title><rect x="835.6" y="325" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="838.55" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%; +0.01%)</title><rect x="46.2" y="485" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="49.20" y="495.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%; +0.00%)</title><rect x="285.9" y="293" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="288.88" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (9 samples, 0.02%; 0.00%)</title><rect x="1140.9" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.92" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; -0.01%)</title><rect x="518.9" y="309" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="521.90" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (5 samples, 0.01%; +0.00%)</title><rect x="810.5" y="149" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="813.50" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (238 samples, 0.49%; +0.02%)</title><rect x="769.1" y="373" width="5.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="772.14" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (31 samples, 0.06%; +0.01%)</title><rect x="1169.2" y="469" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1172.21" y="479.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (119 samples, 0.24%; +0.03%)</title><rect x="420.0" y="373" width="2.9" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="423.03" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; +0.00%)</title><rect x="561.0" y="309" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="564.01" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (16 samples, 0.03%; +0.01%)</title><rect x="364.2" y="197" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="367.16" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (129 samples, 0.26%; -0.00%)</title><rect x="1002.1" y="293" width="3.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1005.09" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (806 samples, 1.65%; -0.02%)</title><rect x="557.6" y="389" width="19.5" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="560.61" y="399.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (13 samples, 0.03%; -0.00%)</title><rect x="515.5" y="229" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="518.48" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%; +0.01%)</title><rect x="629.5" y="373" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="632.47" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,288 samples, 4.70%; -0.01%)</title><rect x="1000.1" y="341" width="55.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1003.10" y="351.5" >servi..</text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,247 samples, 6.67%; +0.02%)</title><rect x="765.6" y="421" width="78.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="768.58" y="431.5" >cql3::sta..</text>
</g>
<g >
<title>memtable::apply (23 samples, 0.05%; 0.00%)</title><rect x="1140.2" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.16" y="271.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (40 samples, 0.08%; +0.05%)</title><rect x="329.9" y="181" width="1.0" height="15.0" fill="rgb(255,144,144)" rx="2" ry="2" />
<text  x="332.92" y="191.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (26 samples, 0.05%; +0.02%)</title><rect x="230.8" y="213" width="0.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="233.83" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (58 samples, 0.12%; -0.01%)</title><rect x="821.1" y="293" width="1.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="824.11" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%; -0.01%)</title><rect x="1022.5" y="197" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1025.49" y="207.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (15 samples, 0.03%; +0.02%)</title><rect x="917.1" y="373" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="920.05" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (105 samples, 0.22%; -0.01%)</title><rect x="847.1" y="437" width="2.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="850.08" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (40 samples, 0.08%; -0.01%)</title><rect x="816.2" y="245" width="1.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="819.24" y="255.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (930 samples, 1.91%; +0.02%)</title><rect x="466.1" y="325" width="22.5" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="469.11" y="335.5" >d..</text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (742 samples, 1.52%; +0.00%)</title><rect x="741.9" y="421" width="18.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="744.91" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (588 samples, 1.21%; -0.02%)</title><rect x="1153.3" y="485" width="14.2" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="1156.30" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%; +0.00%)</title><rect x="563.4" y="309" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="566.38" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (30 samples, 0.06%; +0.00%)</title><rect x="608.0" y="437" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="610.98" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%; -0.01%)</title><rect x="406.8" y="197" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="409.82" y="207.5" ></text>
</g>
<g >
<title>seastar::gate::enter (12 samples, 0.02%; +0.02%)</title><rect x="1041.9" y="229" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1044.95" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%; 0.00%)</title><rect x="1140.9" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.89" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (60 samples, 0.12%; 0.00%)</title><rect x="274.3" y="309" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="277.35" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="1067.2" y="325" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1070.17" y="335.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,549 samples, 3.18%; +0.02%)</title><rect x="787.6" y="341" width="37.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="790.56" y="351.5" >ser..</text>
</g>
<g >
<title>row_marker::compact_and_expire (9 samples, 0.02%; +0.01%)</title><rect x="393.9" y="229" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="396.86" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; -0.02%)</title><rect x="1154.9" y="421" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1157.94" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (75 samples, 0.15%; +0.00%)</title><rect x="808.7" y="133" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="811.68" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (380 samples, 0.78%; -0.02%)</title><rect x="901.6" y="341" width="9.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="904.62" y="351.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="687.0" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="689.96" y="447.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; -0.01%)</title><rect x="238.9" y="181" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="241.90" y="191.5" ></text>
</g>
<g >
<title>db::filter_for_query (28 samples, 0.06%; +0.00%)</title><rect x="1067.9" y="341" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1070.89" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; 0.00%)</title><rect x="665.8" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.84" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (99 samples, 0.20%; +0.06%)</title><rect x="992.1" y="309" width="2.4" height="15.0" fill="rgb(255,134,134)" rx="2" ry="2" />
<text  x="995.13" y="319.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="659.9" y="389" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="662.85" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; -0.02%)</title><rect x="538.5" y="341" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="541.52" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%; +0.00%)</title><rect x="1121.3" y="389" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1124.32" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (79 samples, 0.16%; +0.01%)</title><rect x="204.3" y="101" width="1.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="207.33" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (22 samples, 0.05%; +0.01%)</title><rect x="854.7" y="373" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="857.69" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; -0.02%)</title><rect x="817.9" y="229" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="820.91" y="239.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (42 samples, 0.09%; +0.01%)</title><rect x="1129.5" y="389" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1132.48" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (104 samples, 0.21%; -0.02%)</title><rect x="186.8" y="37" width="2.5" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="189.76" y="47.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,479 samples, 9.20%; +0.01%)</title><rect x="138.4" y="309" width="108.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="141.36" y="319.5" >partition_sna..</text>
</g>
<g >
<title>do_cql_test (277 samples, 0.57%; 0.00%)</title><rect x="17.1" y="549" width="6.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.10" y="559.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (5 samples, 0.01%; +0.01%)</title><rect x="763.0" y="373" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="766.01" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (33 samples, 0.07%; -0.08%)</title><rect x="298.5" y="213" width="0.8" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="301.53" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (13 samples, 0.03%; +0.01%)</title><rect x="963.0" y="373" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="965.99" y="383.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (88 samples, 0.18%; 0.00%)</title><rect x="777.5" y="389" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="780.53" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (62 samples, 0.13%; +0.01%)</title><rect x="833.8" y="357" width="1.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="836.78" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (26 samples, 0.05%; -0.00%)</title><rect x="1122.0" y="405" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1124.99" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (127 samples, 0.26%; -0.01%)</title><rect x="754.5" y="309" width="3.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="757.54" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (36 samples, 0.07%; -0.00%)</title><rect x="219.6" y="149" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="222.59" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (893 samples, 1.83%; +0.00%)</title><rect x="917.9" y="405" width="21.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="920.85" y="415.5" >c..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="970.7" y="373" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="973.72" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%; +0.01%)</title><rect x="51.0" y="485" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="53.99" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%; +0.00%)</title><rect x="591.5" y="405" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="594.51" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (10 samples, 0.02%; +0.02%)</title><rect x="502.3" y="261" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="505.33" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; +0.01%)</title><rect x="1104.1" y="357" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1107.11" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%; +0.00%)</title><rect x="287.0" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="290.02" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (19 samples, 0.04%; -0.01%)</title><rect x="212.3" y="149" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="215.30" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="897.4" y="405" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="900.40" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (13 samples, 0.03%; 0.00%)</title><rect x="21.2" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.17" y="367.5" ></text>
</g>
<g >
<title>make_combined_reader (773 samples, 1.59%; +0.03%)</title><rect x="440.4" y="325" width="18.7" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="443.35" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (334 samples, 0.69%; -0.01%)</title><rect x="441.3" y="309" width="8.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="444.30" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (39 samples, 0.08%; -0.01%)</title><rect x="961.9" y="341" width="1.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="964.95" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (26 samples, 0.05%; -0.01%)</title><rect x="748.9" y="357" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="751.91" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%; +0.01%)</title><rect x="540.5" y="325" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="543.49" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (63 samples, 0.13%; -0.00%)</title><rect x="1064.4" y="277" width="1.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1067.38" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%; +0.00%)</title><rect x="596.9" y="373" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="599.89" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (99 samples, 0.20%; +0.06%)</title><rect x="944.0" y="405" width="2.4" height="15.0" fill="rgb(255,139,139)" rx="2" ry="2" />
<text  x="947.04" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (95 samples, 0.20%; +0.02%)</title><rect x="514.0" y="245" width="2.3" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="516.98" y="255.5" ></text>
</g>
<g >
<title>std::type_info::operator== (18 samples, 0.04%; +0.03%)</title><rect x="1008.2" y="277" width="0.5" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="1011.25" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (115 samples, 0.24%; +0.03%)</title><rect x="935.4" y="357" width="2.8" height="15.0" fill="rgb(255,166,166)" rx="2" ry="2" />
<text  x="938.37" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.01%)</title><rect x="1037.4" y="213" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1040.37" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; -0.00%)</title><rect x="797.1" y="229" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="800.13" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (29 samples, 0.06%; -0.01%)</title><rect x="851.2" y="421" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="854.15" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%; +0.00%)</title><rect x="727.2" y="437" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="730.16" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (21 samples, 0.04%; +0.04%)</title><rect x="312.7" y="181" width="0.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="315.67" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; +0.01%)</title><rect x="698.1" y="453" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="701.09" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (76 samples, 0.16%; +0.03%)</title><rect x="140.8" y="261" width="1.8" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="143.78" y="271.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (30 samples, 0.06%; -0.01%)</title><rect x="855.4" y="357" width="0.7" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="858.39" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (6 samples, 0.01%; 0.00%)</title><rect x="23.5" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.52" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (28 samples, 0.06%; +0.01%)</title><rect x="689.4" y="469" width="0.7" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="692.44" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.02%; +0.00%)</title><rect x="667.3" y="453" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="670.34" y="463.5" ></text>
</g>
<g >
<title>operator new (151 samples, 0.31%; -0.01%)</title><rect x="1022.8" y="245" width="3.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1025.83" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (36 samples, 0.07%; -0.01%)</title><rect x="74.2" y="373" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="77.15" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,437 samples, 9.11%; -0.02%)</title><rect x="739.4" y="437" width="107.5" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="742.39" y="447.5" >cql3::query_p..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="698.6" y="437" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="701.64" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (42 samples, 0.09%; -0.01%)</title><rect x="626.7" y="421" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="629.74" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (47 samples, 0.10%; +0.01%)</title><rect x="578.3" y="357" width="1.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="581.26" y="367.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; -0.01%)</title><rect x="622.7" y="389" width="0.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="625.74" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; 0.00%)</title><rect x="1130.8" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1133.81" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (200 samples, 0.41%; +0.00%)</title><rect x="241.6" y="261" width="4.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="244.57" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (48 samples, 0.10%; +0.02%)</title><rect x="157.8" y="229" width="1.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="160.84" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (12 samples, 0.02%; +0.01%)</title><rect x="820.2" y="277" width="0.3" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="823.19" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (505 samples, 1.04%; +0.01%)</title><rect x="125.4" y="277" width="12.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="128.42" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,881 samples, 3.86%; -0.12%)</title><rect x="318.5" y="197" width="45.6" height="15.0" fill="rgb(58,58,255)" rx="2" ry="2" />
<text  x="321.51" y="207.5" >muta..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (496 samples, 1.02%; -0.00%)</title><rect x="229.1" y="245" width="12.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="232.11" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; +0.01%)</title><rect x="838.5" y="277" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="841.53" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (97 samples, 0.20%; -0.00%)</title><rect x="671.2" y="485" width="2.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="674.19" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (6 samples, 0.01%; -0.00%)</title><rect x="1106.2" y="373" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1109.17" y="383.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; -0.03%)</title><rect x="823.5" y="309" width="0.6" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="826.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="423.9" y="357" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="426.90" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (36 samples, 0.07%; +0.01%)</title><rect x="832.0" y="373" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="835.01" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (269 samples, 0.55%; 0.00%)</title><rect x="17.3" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.27" y="527.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (286 samples, 0.59%; 0.00%)</title><rect x="16.9" y="597" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.88" y="607.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (35 samples, 0.07%; +0.02%)</title><rect x="809.7" y="117" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="812.65" y="127.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%; +0.01%)</title><rect x="449.2" y="293" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="452.20" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (23 samples, 0.05%; -0.00%)</title><rect x="313.6" y="181" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="316.57" y="191.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (11 samples, 0.02%; -0.01%)</title><rect x="1099.7" y="309" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1102.68" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (7 samples, 0.01%; +0.01%)</title><rect x="418.5" y="245" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="421.52" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%; +0.01%)</title><rect x="1048.2" y="245" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1051.24" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (41 samples, 0.08%; +0.08%)</title><rect x="1131.5" y="421" width="1.0" height="15.0" fill="rgb(255,106,106)" rx="2" ry="2" />
<text  x="1134.54" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%; -0.04%)</title><rect x="990.4" y="261" width="0.4" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="993.44" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; +0.00%)</title><rect x="482.2" y="181" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="485.19" y="191.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (18 samples, 0.04%; -0.01%)</title><rect x="922.2" y="357" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="925.24" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (6 samples, 0.01%; 0.00%)</title><rect x="488.6" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="491.64" y="335.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (7 samples, 0.01%; -0.03%)</title><rect x="237.7" y="197" width="0.1" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="240.67" y="207.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (235 samples, 0.48%; -0.01%)</title><rect x="759.9" y="421" width="5.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="762.89" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; -0.00%)</title><rect x="818.9" y="213" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="821.86" y="223.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (20 samples, 0.04%; +0.01%)</title><rect x="1041.8" y="245" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1044.75" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,305 samples, 21.16%; -0.07%)</title><rect x="889.2" y="437" width="249.6" height="15.0" fill="rgb(118,118,255)" rx="2" ry="2" />
<text  x="892.17" y="447.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (524 samples, 1.08%; -0.00%)</title><rect x="228.9" y="261" width="12.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="231.87" y="271.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (47 samples, 0.10%; -0.01%)</title><rect x="1113.7" y="373" width="1.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1116.68" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (5 samples, 0.01%; 0.00%)</title><rect x="413.9" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="416.92" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (23 samples, 0.05%; -0.00%)</title><rect x="841.6" y="309" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="844.56" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (8 samples, 0.02%; -0.01%)</title><rect x="63.7" y="453" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="66.71" y="463.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (7 samples, 0.01%; 0.00%)</title><rect x="23.8" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="1114.1" y="357" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1117.10" y="367.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (31 samples, 0.06%; -0.00%)</title><rect x="1140.1" y="405" width="0.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.12" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (18 samples, 0.04%; +0.02%)</title><rect x="954.9" y="389" width="0.5" height="15.0" fill="rgb(255,179,179)" rx="2" ry="2" />
<text  x="957.92" y="399.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (13 samples, 0.03%; +0.00%)</title><rect x="851.9" y="437" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="854.86" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.08%; +0.01%)</title><rect x="758.2" y="389" width="1.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="761.24" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (70 samples, 0.14%; -0.00%)</title><rect x="238.2" y="213" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="241.15" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%; -0.00%)</title><rect x="794.8" y="261" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="797.80" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%; -0.00%)</title><rect x="17.6" y="309" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="20.61" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (44 samples, 0.09%; +0.02%)</title><rect x="593.1" y="421" width="1.1" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="596.13" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (42 samples, 0.09%; +0.01%)</title><rect x="743.9" y="373" width="1.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="746.95" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (16 samples, 0.03%; 0.00%)</title><rect x="752.0" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="754.99" y="303.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (74 samples, 0.15%; -0.03%)</title><rect x="350.8" y="165" width="1.8" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="353.76" y="175.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (22 samples, 0.05%; -0.09%)</title><rect x="325.5" y="165" width="0.5" height="15.0" fill="rgb(93,93,255)" rx="2" ry="2" />
<text  x="328.47" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (5 samples, 0.01%; 0.00%)</title><rect x="648.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="651.64" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.02%)</title><rect x="238.9" y="165" width="0.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="241.90" y="175.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (133 samples, 0.27%; +0.06%)</title><rect x="358.3" y="165" width="3.2" height="15.0" fill="rgb(255,131,131)" rx="2" ry="2" />
<text  x="361.27" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.02%; 0.00%)</title><rect x="1106.4" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1109.39" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.01%)</title><rect x="228.3" y="245" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="231.31" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.05%; -0.00%)</title><rect x="1060.7" y="293" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1063.72" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.03%; +0.01%)</title><rect x="13.2" y="581" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="16.22" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="667.7" y="485" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="670.70" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="38.1" y="437" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="41.08" y="447.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,566 samples, 11.43%; -0.03%)</title><rect x="729.2" y="453" width="134.8" height="15.0" fill="rgb(169,169,255)" rx="2" ry="2" />
<text  x="732.17" y="463.5" >single_node_cql_e..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="696.5" y="469" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="699.53" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (10 samples, 0.02%; +0.01%)</title><rect x="574.2" y="293" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="577.16" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="1105.9" y="373" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1108.88" y="383.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (384 samples, 0.79%; -0.01%)</title><rect x="467.0" y="309" width="9.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="470.00" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (224 samples, 0.46%; +0.00%)</title><rect x="732.2" y="405" width="5.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="735.25" y="415.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%; +0.00%)</title><rect x="646.3" y="485" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="649.29" y="495.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (156 samples, 0.32%; -0.02%)</title><rect x="344.2" y="165" width="3.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="347.24" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (14 samples, 0.03%; 0.00%)</title><rect x="1176.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.00" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (26 samples, 0.05%; +0.01%)</title><rect x="252.3" y="277" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="255.35" y="287.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="417.6" y="261" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="420.58" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (66 samples, 0.14%; +0.02%)</title><rect x="923.1" y="357" width="1.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="926.06" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (11 samples, 0.02%; -0.00%)</title><rect x="627.3" y="389" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="630.29" y="399.5" ></text>
</g>
<g >
<title>[[vdso]] (244 samples, 0.50%; -0.07%)</title><rect x="1179.7" y="613" width="5.9" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="1182.68" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (5 samples, 0.01%; +0.01%)</title><rect x="1176.6" y="501" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1179.58" y="511.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (7 samples, 0.01%; +0.01%)</title><rect x="863.8" y="437" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="866.85" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.03%; -0.01%)</title><rect x="226.3" y="229" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="229.28" y="239.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (8 samples, 0.02%; +0.02%)</title><rect x="823.1" y="325" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="826.07" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="816.0" y="245" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="818.98" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; -0.00%)</title><rect x="915.4" y="309" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="918.43" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (16 samples, 0.03%; -0.00%)</title><rect x="1120.7" y="389" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1123.73" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (5 samples, 0.01%; 0.00%)</title><rect x="63.3" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="66.32" y="463.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; +0.00%)</title><rect x="45.2" y="485" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="48.15" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; +0.01%)</title><rect x="164.1" y="149" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="167.11" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%; -0.01%)</title><rect x="465.5" y="309" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="468.55" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (86 samples, 0.18%; +0.01%)</title><rect x="761.1" y="405" width="2.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="764.08" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.03%; +0.01%)</title><rect x="639.0" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="641.97" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (918 samples, 1.88%; -0.06%)</title><rect x="496.7" y="309" width="22.2" height="15.0" fill="rgb(139,139,255)" rx="2" ry="2" />
<text  x="499.66" y="319.5" >s..</text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%; +0.02%)</title><rect x="573.6" y="277" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="576.63" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%; 0.00%)</title><rect x="695.8" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="698.78" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (21 samples, 0.04%; +0.01%)</title><rect x="65.2" y="421" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="68.24" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (8 samples, 0.02%; -0.02%)</title><rect x="1069.7" y="341" width="0.2" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="1072.66" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; +0.00%)</title><rect x="207.3" y="149" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="210.33" y="159.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (208 samples, 0.43%; +0.05%)</title><rect x="353.2" y="165" width="5.1" height="15.0" fill="rgb(255,151,151)" rx="2" ry="2" />
<text  x="356.23" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (86 samples, 0.18%; -0.00%)</title><rect x="658.4" y="469" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="661.35" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="815.4" y="181" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="818.39" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%; -0.00%)</title><rect x="264.6" y="341" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="267.58" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (55 samples, 0.11%; +0.01%)</title><rect x="1025.2" y="213" width="1.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1028.16" y="223.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (218 samples, 0.45%; 0.00%)</title><rect x="452.9" y="293" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="455.85" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (41 samples, 0.08%; +0.01%)</title><rect x="949.4" y="357" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="952.40" y="367.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%; +0.00%)</title><rect x="1089.5" y="261" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1092.50" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (7 samples, 0.01%; +0.00%)</title><rect x="396.9" y="213" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="399.86" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (11 samples, 0.02%; +0.01%)</title><rect x="327.7" y="165" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="330.70" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (36 samples, 0.07%; +0.01%)</title><rect x="213.0" y="149" width="0.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="216.00" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (26 samples, 0.05%; +0.01%)</title><rect x="262.0" y="325" width="0.7" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="265.04" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (47 samples, 0.10%; +0.03%)</title><rect x="656.0" y="405" width="1.2" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="659.03" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.00%)</title><rect x="800.6" y="229" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="803.64" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%; +0.04%)</title><rect x="507.8" y="181" width="1.1" height="15.0" fill="rgb(255,156,156)" rx="2" ry="2" />
<text  x="510.83" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (21 samples, 0.04%; +0.02%)</title><rect x="589.0" y="373" width="0.5" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="591.96" y="383.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%; +0.02%)</title><rect x="529.7" y="309" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="532.70" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.14%; +0.04%)</title><rect x="445.1" y="229" width="1.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="448.10" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (176 samples, 0.36%; 0.00%)</title><rect x="825.9" y="357" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="828.89" y="367.5" ></text>
</g>
<g >
<title>operator delete (76 samples, 0.16%; -0.03%)</title><rect x="409.9" y="245" width="1.8" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="412.85" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; -0.02%)</title><rect x="664.6" y="437" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="667.58" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%; -0.05%)</title><rect x="989.5" y="277" width="1.3" height="15.0" fill="rgb(151,151,255)" rx="2" ry="2" />
<text  x="992.52" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (75 samples, 0.15%; 0.00%)</title><rect x="1098.3" y="325" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.30" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (727 samples, 1.49%; -0.02%)</title><rect x="172.0" y="117" width="17.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="175.01" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (323 samples, 0.66%; +0.04%)</title><rect x="246.9" y="309" width="7.9" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="249.94" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="850.5" y="437" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="853.55" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%; +0.00%)</title><rect x="552.1" y="309" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="555.09" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%; +0.01%)</title><rect x="590.9" y="421" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="593.88" y="431.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%; +0.02%)</title><rect x="521.7" y="325" width="0.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="524.71" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; -0.01%)</title><rect x="703.8" y="469" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="706.75" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%; +0.01%)</title><rect x="870.2" y="405" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="873.22" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (14 samples, 0.03%; +0.00%)</title><rect x="1176.0" y="453" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1179.00" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (365 samples, 0.75%; +0.00%)</title><rect x="400.4" y="245" width="8.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="403.38" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="543.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (7 samples, 0.01%; -0.01%)</title><rect x="753.2" y="277" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="756.18" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (33 samples, 0.07%; +0.04%)</title><rect x="257.2" y="325" width="0.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="260.22" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="1142.3" y="485" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1145.34" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%; 0.00%)</title><rect x="17.6" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.61" y="303.5" ></text>
</g>
<g >
<title>[unknown] (263 samples, 0.54%; 0.00%)</title><rect x="10.3" y="597" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.29" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; -0.01%)</title><rect x="1051.0" y="213" width="0.4" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1054.01" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (12 samples, 0.02%; -0.01%)</title><rect x="1033.2" y="133" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1036.18" y="143.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (63 samples, 0.13%; +0.03%)</title><rect x="282.3" y="373" width="1.6" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="285.34" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (16 samples, 0.03%; +0.03%)</title><rect x="137.7" y="277" width="0.3" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="140.65" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (9 samples, 0.02%; 0.00%)</title><rect x="952.8" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="955.76" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (5 samples, 0.01%; +0.01%)</title><rect x="895.3" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="898.27" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.02%; +0.00%)</title><rect x="723.1" y="485" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="726.06" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%; -0.01%)</title><rect x="317.9" y="197" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="320.93" y="207.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (9 samples, 0.02%; +0.01%)</title><rect x="393.5" y="229" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="396.55" y="239.5" ></text>
</g>
<g >
<title>dht::tri_compare (93 samples, 0.19%; +0.05%)</title><rect x="477.6" y="261" width="2.3" height="15.0" fill="rgb(255,146,146)" rx="2" ry="2" />
<text  x="480.61" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (17 samples, 0.03%; -0.00%)</title><rect x="78.4" y="453" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="81.37" y="463.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (30 samples, 0.06%; -0.00%)</title><rect x="932.9" y="357" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="935.90" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (5 samples, 0.01%; -0.01%)</title><rect x="1138.7" y="421" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1141.66" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (53 samples, 0.11%; -0.01%)</title><rect x="656.0" y="421" width="1.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="658.95" y="431.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (47,629 samples, 97.79%; 0.00%)</title><rect x="24.2" y="565" width="1154.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="27.22" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%; 0.00%)</title><rect x="878.9" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.92" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (26 samples, 0.05%; -0.01%)</title><rect x="145.5" y="245" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="148.46" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (51 samples, 0.10%; +0.00%)</title><rect x="767.5" y="357" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="770.50" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,080 samples, 14.54%; -0.01%)</title><rect x="107.3" y="389" width="171.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="110.27" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (9 samples, 0.02%; 0.00%)</title><rect x="19.1" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt; (6 samples, 0.01%; +0.01%)</title><rect x="626.3" y="437" width="0.1" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="629.27" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (7 samples, 0.01%; -0.01%)</title><rect x="962.1" y="325" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="965.12" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%; +0.01%)</title><rect x="1124.8" y="405" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1127.80" y="415.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; -0.01%)</title><rect x="47.9" y="501" width="0.5" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="50.94" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (21 samples, 0.04%; -0.01%)</title><rect x="790.0" y="277" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="792.98" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (37 samples, 0.08%; -0.02%)</title><rect x="1161.8" y="453" width="0.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1164.75" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (134 samples, 0.28%; -0.00%)</title><rect x="151.2" y="229" width="3.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="154.20" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (20 samples, 0.04%; -0.00%)</title><rect x="667.9" y="485" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="670.92" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (11 samples, 0.02%; 0.00%)</title><rect x="318.2" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="321.25" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (47,628 samples, 97.79%; +0.01%)</title><rect x="24.2" y="533" width="1153.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="27.22" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (110 samples, 0.23%; -0.01%)</title><rect x="840.4" y="341" width="2.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="843.37" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (8 samples, 0.02%; -0.02%)</title><rect x="258.7" y="341" width="0.2" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="261.67" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (14 samples, 0.03%; +0.00%)</title><rect x="212.4" y="133" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="215.42" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="822.3" y="261" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="825.30" y="271.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (12 samples, 0.02%; +0.01%)</title><rect x="227.5" y="245" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="230.47" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (5 samples, 0.01%; +0.00%)</title><rect x="955.6" y="405" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="958.60" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (15 samples, 0.03%; -0.00%)</title><rect x="698.9" y="453" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="701.91" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%; -0.01%)</title><rect x="79.9" y="453" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="82.90" y="463.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%; +0.00%)</title><rect x="662.2" y="453" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="665.20" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%; +0.01%)</title><rect x="543.3" y="389" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="546.27" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (13 samples, 0.03%; -0.01%)</title><rect x="715.3" y="453" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="718.29" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (23 samples, 0.05%; -0.03%)</title><rect x="236.3" y="181" width="0.6" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="239.33" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (12 samples, 0.02%; +0.02%)</title><rect x="424.7" y="373" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="427.73" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.03%; +0.02%)</title><rect x="663.1" y="437" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="666.15" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; -0.02%)</title><rect x="524.2" y="325" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="527.18" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (55 samples, 0.11%; 0.00%)</title><rect x="17.6" y="341" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.58" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (26 samples, 0.05%; +0.01%)</title><rect x="634.1" y="485" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="637.08" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="538.1" y="325" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="541.14" y="335.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%; -0.00%)</title><rect x="213.9" y="149" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="216.87" y="159.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; -0.01%)</title><rect x="594.5" y="405" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="597.51" y="415.5" ></text>
</g>
<g >
<title>query::result::result (5 samples, 0.01%; +0.01%)</title><rect x="599.4" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="602.41" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%; -0.00%)</title><rect x="448.9" y="277" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="451.93" y="287.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (20 samples, 0.04%; +0.00%)</title><rect x="813.5" y="101" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="816.53" y="111.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.02%; 0.00%)</title><rect x="23.5" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.47" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (16 samples, 0.03%; +0.01%)</title><rect x="210.8" y="149" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="213.80" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; -0.01%)</title><rect x="569.8" y="277" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="572.85" y="287.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (11 samples, 0.02%; +0.00%)</title><rect x="1098.9" y="293" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1101.93" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (11 samples, 0.02%; +0.00%)</title><rect x="271.1" y="293" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="274.15" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (16 samples, 0.03%; +0.01%)</title><rect x="64.8" y="421" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="67.78" y="431.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="630.4" y="389" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="633.44" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%; -0.02%)</title><rect x="829.0" y="277" width="0.3" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="831.96" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%; 0.00%)</title><rect x="17.8" y="293" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.80" y="303.5" ></text>
</g>
<g >
<title>operator new (101 samples, 0.21%; +0.00%)</title><rect x="1042.4" y="261" width="2.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1045.38" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (6 samples, 0.01%; +0.00%)</title><rect x="230.7" y="213" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="233.69" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%; +0.01%)</title><rect x="1072.0" y="293" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1075.01" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (24 samples, 0.05%; +0.01%)</title><rect x="98.1" y="421" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="101.14" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (7 samples, 0.01%; +0.01%)</title><rect x="221.1" y="181" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="224.09" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%; -0.01%)</title><rect x="160.1" y="197" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="163.09" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.00%)</title><rect x="931.3" y="341" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="934.32" y="351.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; +0.00%)</title><rect x="1147.3" y="485" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1150.34" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (6 samples, 0.01%; -0.01%)</title><rect x="255.7" y="309" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="258.67" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (110 samples, 0.23%; -0.02%)</title><rect x="1074.1" y="309" width="2.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1077.10" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%; -0.01%)</title><rect x="309.4" y="165" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="312.38" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.01%; +0.01%)</title><rect x="983.6" y="341" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="986.63" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (112 samples, 0.23%; -0.02%)</title><rect x="622.1" y="421" width="2.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="625.11" y="431.5" ></text>
</g>
<g >
<title>row_tombstone::apply (22 samples, 0.05%; -0.00%)</title><rect x="390.6" y="213" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="393.59" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="706.2" y="469" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="709.18" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.06%; 0.00%)</title><rect x="1140.1" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.12" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="574.8" y="293" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="577.79" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (27 samples, 0.06%; +0.03%)</title><rect x="1096.3" y="293" width="0.7" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="1099.34" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="973.4" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="976.41" y="383.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (10 samples, 0.02%; -0.00%)</title><rect x="160.2" y="197" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="163.23" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (23 samples, 0.05%; +0.02%)</title><rect x="412.3" y="229" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="415.30" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (78 samples, 0.16%; +0.01%)</title><rect x="951.3" y="389" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="954.31" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (22 samples, 0.05%; +0.00%)</title><rect x="878.8" y="485" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="881.85" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; -0.00%)</title><rect x="743.6" y="389" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="746.56" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (101 samples, 0.21%; -0.01%)</title><rect x="63.9" y="453" width="2.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="66.91" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="244.1" y="197" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="247.13" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; 0.00%)</title><rect x="295.4" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="298.40" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (41 samples, 0.08%; +0.02%)</title><rect x="1104.9" y="373" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1107.89" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%; -0.00%)</title><rect x="668.5" y="485" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="671.45" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%; +0.00%)</title><rect x="118.9" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="121.90" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (22 samples, 0.05%; +0.03%)</title><rect x="911.4" y="357" width="0.5" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="914.38" y="367.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (192 samples, 0.39%; +0.00%)</title><rect x="933.7" y="389" width="4.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="936.75" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (390 samples, 0.80%; +0.00%)</title><rect x="901.4" y="357" width="9.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="904.38" y="367.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (26 samples, 0.05%; +0.01%)</title><rect x="69.4" y="405" width="0.7" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="72.43" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.02%; -0.07%)</title><rect x="748.2" y="293" width="0.2" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="751.24" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="916.8" y="373" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="919.81" y="383.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (97 samples, 0.20%; -0.00%)</title><rect x="535.5" y="293" width="2.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="538.47" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (323 samples, 0.66%; -0.00%)</title><rect x="806.9" y="181" width="7.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="809.91" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1,023 samples, 2.10%; +0.01%)</title><rect x="648.8" y="501" width="24.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="651.76" y="511.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (5 samples, 0.01%; -0.02%)</title><rect x="669.6" y="485" width="0.1" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="672.59" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.01%; +0.00%)</title><rect x="145.1" y="245" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="148.12" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (66 samples, 0.14%; -0.02%)</title><rect x="953.2" y="389" width="1.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="956.20" y="399.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (43 samples, 0.09%; -0.00%)</title><rect x="743.9" y="389" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="746.92" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%; -0.01%)</title><rect x="703.9" y="469" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="706.88" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (344 samples, 0.71%; -0.00%)</title><rect x="67.2" y="437" width="8.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="70.18" y="447.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.02%; 0.00%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="669.5" y="485" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="672.47" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (768 samples, 1.58%; +0.01%)</title><rect x="899.2" y="405" width="18.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="902.25" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; -0.00%)</title><rect x="1038.3" y="229" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1041.34" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (27 samples, 0.06%; -0.01%)</title><rect x="811.2" y="117" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="814.18" y="127.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (53 samples, 0.11%; -0.00%)</title><rect x="794.6" y="293" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="797.63" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (102 samples, 0.21%; +0.00%)</title><rect x="735.2" y="341" width="2.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="738.15" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (8 samples, 0.02%; -0.00%)</title><rect x="750.3" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="753.30" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (18 samples, 0.04%; -0.01%)</title><rect x="312.2" y="181" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="315.24" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (16 samples, 0.03%; 0.00%)</title><rect x="635.2" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="638.19" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; +0.01%)</title><rect x="706.4" y="485" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="709.37" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.01%; -0.00%)</title><rect x="458.9" y="309" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="461.86" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="501.2" y="261" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="504.24" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (23 samples, 0.05%; +0.04%)</title><rect x="231.8" y="197" width="0.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="234.80" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (11 samples, 0.02%; +0.01%)</title><rect x="661.5" y="469" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="664.53" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%; +0.01%)</title><rect x="587.4" y="357" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="590.37" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%; -0.02%)</title><rect x="631.5" y="469" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="634.48" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (8 samples, 0.02%; +0.00%)</title><rect x="287.9" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="290.91" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (74 samples, 0.15%; 0.00%)</title><rect x="19.4" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.38" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (38 samples, 0.08%; -0.00%)</title><rect x="778.7" y="341" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="781.71" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (24 samples, 0.05%; -0.01%)</title><rect x="555.1" y="421" width="0.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="558.14" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; -0.05%)</title><rect x="413.0" y="277" width="0.1" height="15.0" fill="rgb(149,149,255)" rx="2" ry="2" />
<text  x="415.95" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (18 samples, 0.04%; +0.02%)</title><rect x="713.8" y="405" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="716.81" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,232 samples, 10.74%; +0.02%)</title><rect x="287.4" y="309" width="126.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="290.36" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (7 samples, 0.01%; -0.00%)</title><rect x="253.5" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="256.46" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (138 samples, 0.28%; +0.02%)</title><rect x="570.1" y="293" width="3.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="573.12" y="303.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (42 samples, 0.09%; +0.01%)</title><rect x="802.9" y="149" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="805.94" y="159.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (193 samples, 0.40%; +0.01%)</title><rect x="1073.1" y="325" width="4.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1076.05" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (410 samples, 0.84%; +0.01%)</title><rect x="544.8" y="421" width="9.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="547.77" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (29 samples, 0.06%; -0.03%)</title><rect x="98.7" y="437" width="0.7" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="101.72" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%; +0.00%)</title><rect x="212.8" y="149" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="215.76" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="804.8" y="181" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="807.81" y="191.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (6 samples, 0.01%; -0.00%)</title><rect x="18.2" y="245" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="21.24" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (8 samples, 0.02%; 0.00%)</title><rect x="1176.0" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.02" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (6 samples, 0.01%; +0.01%)</title><rect x="844.4" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="847.37" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (40 samples, 0.08%; -0.00%)</title><rect x="193.3" y="101" width="1.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="196.31" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%; +0.01%)</title><rect x="884.7" y="469" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="887.66" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (33 samples, 0.07%; +0.00%)</title><rect x="262.9" y="357" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="265.91" y="367.5" ></text>
</g>
<g >
<title>schema::position (5 samples, 0.01%; -0.01%)</title><rect x="943.0" y="405" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="946.05" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (119 samples, 0.24%; -0.01%)</title><rect x="687.2" y="485" width="2.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="690.23" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; 0.00%)</title><rect x="1045.4" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1048.39" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (24 samples, 0.05%; +0.04%)</title><rect x="513.4" y="245" width="0.6" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="516.40" y="255.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (5 samples, 0.01%; 0.00%)</title><rect x="22.7" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.72" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (10 samples, 0.02%; +0.00%)</title><rect x="828.5" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="831.50" y="319.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; 0.00%)</title><rect x="909.1" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="912.11" y="287.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="782.4" y="389" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="785.45" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.03%; +0.02%)</title><rect x="780.8" y="325" width="0.4" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="783.80" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%; +0.02%)</title><rect x="1117.3" y="341" width="2.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1120.29" y="351.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (62 samples, 0.13%; +0.02%)</title><rect x="184.1" y="69" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="187.12" y="79.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (12 samples, 0.02%; -0.01%)</title><rect x="215.1" y="149" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="218.06" y="159.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; +0.01%)</title><rect x="582.9" y="357" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="585.86" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (42 samples, 0.09%; -0.00%)</title><rect x="121.4" y="293" width="1.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="124.45" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (109 samples, 0.22%; -0.00%)</title><rect x="801.4" y="213" width="2.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="804.44" y="223.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (8 samples, 0.02%; -0.03%)</title><rect x="590.2" y="405" width="0.2" height="15.0" fill="rgb(166,166,255)" rx="2" ry="2" />
<text  x="593.18" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (8 samples, 0.02%; +0.02%)</title><rect x="422.5" y="341" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="425.55" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (14 samples, 0.03%; +0.02%)</title><rect x="224.7" y="213" width="0.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="227.66" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (120 samples, 0.25%; -0.02%)</title><rect x="1128.5" y="405" width="2.9" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="1131.49" y="415.5" ></text>
</g>
<g >
<title>free (24 samples, 0.05%; 0.00%)</title><rect x="38.4" y="421" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="41.44" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%; -0.01%)</title><rect x="861.4" y="373" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="864.40" y="383.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (12 samples, 0.02%; +0.02%)</title><rect x="442.3" y="293" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="445.27" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (615 samples, 1.26%; -0.02%)</title><rect x="501.6" y="277" width="14.9" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="504.62" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (8 samples, 0.02%; 0.00%)</title><rect x="258.3" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="261.33" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (8 samples, 0.02%; 0.00%)</title><rect x="873.3" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="876.35" y="431.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; +0.02%)</title><rect x="1170.6" y="453" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1173.64" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (15 samples, 0.03%; -0.01%)</title><rect x="819.0" y="213" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="822.00" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; +0.02%)</title><rect x="597.7" y="405" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="600.71" y="415.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (81 samples, 0.17%; +0.01%)</title><rect x="530.3" y="293" width="2.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="533.31" y="303.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; -0.01%)</title><rect x="821.2" y="277" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="824.21" y="287.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (8 samples, 0.02%; 0.00%)</title><rect x="879.9" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.94" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; -0.01%)</title><rect x="409.0" y="213" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="411.95" y="223.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; +0.01%)</title><rect x="664.9" y="485" width="0.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="667.92" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (795 samples, 1.63%; +0.01%)</title><rect x="557.6" y="373" width="19.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="560.64" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (24 samples, 0.05%; +0.00%)</title><rect x="667.0" y="469" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="670.05" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (26 samples, 0.05%; +0.01%)</title><rect x="236.9" y="181" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="239.89" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%; +0.01%)</title><rect x="1109.4" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1112.42" y="399.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (113 samples, 0.23%; 0.00%)</title><rect x="1172.3" y="453" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1175.34" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.02%)</title><rect x="149.5" y="165" width="0.5" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="152.45" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (109 samples, 0.22%; +0.01%)</title><rect x="231.6" y="213" width="2.6" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="234.61" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (34 samples, 0.07%; -0.01%)</title><rect x="1106.7" y="389" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1109.68" y="399.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.01%)</title><rect x="623.5" y="373" width="0.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="626.46" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (23 samples, 0.05%; -0.00%)</title><rect x="1097.6" y="277" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1100.64" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.03%; 0.00%)</title><rect x="23.8" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.83" y="559.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (168 samples, 0.34%; +0.00%)</title><rect x="753.5" y="325" width="4.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="756.54" y="335.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.16%; -0.00%)</title><rect x="151.7" y="213" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="154.68" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,778 samples, 11.86%; -0.00%)</title><rect x="115.8" y="325" width="140.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="118.83" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>reader_selector::~reader_selector (11 samples, 0.02%; +0.01%)</title><rect x="582.4" y="341" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="585.37" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%; 0.00%)</title><rect x="769.8" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="772.77" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (21 samples, 0.04%; -0.00%)</title><rect x="20.5" y="309" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="23.47" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="1124.4" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1127.37" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (12 samples, 0.02%; -0.02%)</title><rect x="446.9" y="261" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="449.89" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (198 samples, 0.41%; +0.02%)</title><rect x="770.0" y="357" width="4.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="772.99" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%; +0.00%)</title><rect x="1122.7" y="405" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1125.67" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (14 samples, 0.03%; +0.02%)</title><rect x="426.3" y="389" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="429.25" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (86 samples, 0.18%; -0.03%)</title><rect x="922.7" y="373" width="2.1" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="925.67" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (76 samples, 0.16%; +0.01%)</title><rect x="703.4" y="485" width="1.9" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="706.42" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (19 samples, 0.04%; +0.01%)</title><rect x="51.3" y="485" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="54.28" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%; +0.00%)</title><rect x="824.8" y="325" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="827.84" y="335.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; -0.00%)</title><rect x="856.6" y="421" width="1.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="859.61" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (32 samples, 0.07%; +0.00%)</title><rect x="845.9" y="421" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="848.95" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%; -0.00%)</title><rect x="641.3" y="469" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="644.30" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,361 samples, 4.85%; -0.00%)</title><rect x="159.0" y="229" width="57.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="162.02" y="239.5" >partit..</text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (90 samples, 0.18%; +0.01%)</title><rect x="830.8" y="389" width="2.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="833.75" y="399.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%; 0.00%)</title><rect x="47.7" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.75" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%; 0.00%)</title><rect x="597.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="600.20" y="399.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (15 samples, 0.03%; +0.00%)</title><rect x="1139.8" y="469" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1142.75" y="479.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; -0.00%)</title><rect x="1053.3" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1056.26" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="915.6" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="918.65" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%; -0.01%)</title><rect x="582.6" y="341" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="585.64" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (5 samples, 0.01%; 0.00%)</title><rect x="189.3" y="85" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="192.31" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (85 samples, 0.17%; -0.00%)</title><rect x="662.8" y="469" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="665.79" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (6 samples, 0.01%; +0.01%)</title><rect x="701.8" y="453" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="704.77" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (17 samples, 0.03%; +0.00%)</title><rect x="206.5" y="117" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="209.48" y="127.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (8 samples, 0.02%; -0.02%)</title><rect x="328.2" y="181" width="0.2" height="15.0" fill="rgb(179,179,255)" rx="2" ry="2" />
<text  x="331.18" y="191.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.02%; 0.00%)</title><rect x="19.7" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.67" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (272 samples, 0.56%; +0.00%)</title><rect x="833.4" y="373" width="6.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="836.44" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (378 samples, 0.78%; +0.02%)</title><rect x="1027.6" y="213" width="9.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1030.58" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (7 samples, 0.01%; +0.01%)</title><rect x="498.9" y="293" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="501.91" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%; +0.01%)</title><rect x="418.7" y="293" width="0.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="421.72" y="303.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.00%)</title><rect x="414.3" y="293" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="417.28" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (41 samples, 0.08%; -0.00%)</title><rect x="268.6" y="293" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="271.63" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%; +0.02%)</title><rect x="457.5" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="460.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.01%; +0.00%)</title><rect x="241.0" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="244.01" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume (16 samples, 0.03%; -0.01%)</title><rect x="273.8" y="277" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="276.81" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,880 samples, 3.86%; -0.01%)</title><rect x="1055.7" y="357" width="45.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1058.73" y="367.5" >serv..</text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (169 samples, 0.35%; -0.02%)</title><rect x="927.4" y="357" width="4.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="930.40" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (13 samples, 0.03%; -0.00%)</title><rect x="1047.6" y="277" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1050.59" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (32 samples, 0.07%; +0.01%)</title><rect x="662.0" y="469" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="665.01" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.06%; -0.02%)</title><rect x="1167.5" y="485" width="0.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1170.54" y="495.5" ></text>
</g>
<g >
<title>schema::position (10 samples, 0.02%; +0.01%)</title><rect x="1125.1" y="421" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1128.09" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (53 samples, 0.11%; -0.04%)</title><rect x="603.4" y="389" width="1.2" height="15.0" fill="rgb(159,159,255)" rx="2" ry="2" />
<text  x="606.36" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.01%)</title><rect x="645.1" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="648.15" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (354 samples, 0.73%; -0.02%)</title><rect x="901.9" y="325" width="8.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="904.86" y="335.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.01%; +0.00%)</title><rect x="1007.3" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1010.30" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%; +0.01%)</title><rect x="858.4" y="421" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="861.45" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (50 samples, 0.10%; -0.01%)</title><rect x="1162.6" y="453" width="1.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1165.65" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%; -0.00%)</title><rect x="804.7" y="197" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="807.71" y="207.5" ></text>
</g>
<g >
<title>database::find_column_family (60 samples, 0.12%; +0.01%)</title><rect x="767.3" y="373" width="1.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="770.28" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.02%; +0.00%)</title><rect x="693.2" y="325" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="696.22" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (75 samples, 0.15%; +0.01%)</title><rect x="1059.5" y="309" width="1.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1062.46" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (8 samples, 0.02%; -0.01%)</title><rect x="509.5" y="213" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="512.50" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (10 samples, 0.02%; -0.01%)</title><rect x="985.5" y="357" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="988.47" y="367.5" ></text>
</g>
<g >
<title>auth::resource::resource (60 samples, 0.12%; 0.00%)</title><rect x="780.0" y="373" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="783.02" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (13 samples, 0.03%; -0.00%)</title><rect x="81.1" y="453" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="84.06" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (8 samples, 0.02%; -0.00%)</title><rect x="613.7" y="421" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="616.70" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%; -0.01%)</title><rect x="637.3" y="485" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="640.27" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (100 samples, 0.21%; -0.08%)</title><rect x="341.8" y="165" width="2.4" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="344.82" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%; +0.00%)</title><rect x="520.9" y="261" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="523.91" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.01%; 0.00%)</title><rect x="1101.5" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1104.47" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (23 samples, 0.05%; +0.01%)</title><rect x="1046.7" y="277" width="0.6" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1049.72" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="693.1" y="405" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.09" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%; -0.01%)</title><rect x="702.3" y="485" width="0.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="705.32" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (64 samples, 0.13%; +0.12%)</title><rect x="912.1" y="357" width="1.6" height="15.0" fill="rgb(255,63,63)" rx="2" ry="2" />
<text  x="915.13" y="367.5" ></text>
</g>
<g >
<title>database::query (996 samples, 2.04%; -0.01%)</title><rect x="1018.1" y="261" width="24.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1021.11" y="271.5" >d..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%; +0.00%)</title><rect x="1176.2" y="437" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1179.21" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%; +0.01%)</title><rect x="1139.9" y="453" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1142.87" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (102 samples, 0.21%; +0.06%)</title><rect x="920.2" y="373" width="2.5" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="923.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.06%; +0.01%)</title><rect x="1003.8" y="229" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1006.84" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (30 samples, 0.06%; 0.00%)</title><rect x="816.4" y="229" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.44" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (52 samples, 0.11%; +0.00%)</title><rect x="1176.8" y="517" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1179.82" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="691.7" y="437" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="694.71" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; 0.00%)</title><rect x="735.9" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="738.88" y="303.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (23 samples, 0.05%; +0.04%)</title><rect x="1115.7" y="389" width="0.6" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="1118.74" y="399.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%; -0.02%)</title><rect x="694.5" y="485" width="0.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="697.48" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%; +0.00%)</title><rect x="682.1" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="685.07" y="447.5" ></text>
</g>
<g >
<title>row_cache::make_reader (11 samples, 0.02%; +0.02%)</title><rect x="432.3" y="357" width="0.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="435.29" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%; +0.00%)</title><rect x="824.7" y="325" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="827.72" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%; +0.01%)</title><rect x="285.9" y="277" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="288.93" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (194 samples, 0.40%; +0.04%)</title><rect x="1091.2" y="261" width="4.7" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1094.25" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (8 samples, 0.02%; +0.01%)</title><rect x="279.6" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="282.58" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (24 samples, 0.05%; -0.02%)</title><rect x="1031.9" y="149" width="0.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1034.92" y="159.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%; +0.00%)</title><rect x="813.3" y="117" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="816.31" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="32.9" y="485" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="35.87" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="721.3" y="501" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="724.27" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (81 samples, 0.17%; +0.00%)</title><rect x="1158.2" y="453" width="1.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1161.17" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%; -0.01%)</title><rect x="234.2" y="213" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="237.25" y="223.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (16 samples, 0.03%; +0.02%)</title><rect x="136.5" y="261" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="139.49" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (10 samples, 0.02%; -0.02%)</title><rect x="698.2" y="453" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="701.23" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%; +0.01%)</title><rect x="139.4" y="277" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="142.45" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (87 samples, 0.18%; +0.01%)</title><rect x="847.3" y="421" width="2.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="850.33" y="431.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,453 samples, 9.14%; +0.01%)</title><rect x="139.0" y="293" width="107.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="141.99" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="932.0" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="935.00" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%; -0.00%)</title><rect x="502.6" y="261" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="505.57" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="973.2" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="976.24" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (15 samples, 0.03%; +0.01%)</title><rect x="850.7" y="437" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="853.72" y="447.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,775 samples, 5.70%; -0.06%)</title><rect x="775.9" y="405" width="67.3" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="778.93" y="415.5" >service..</text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (20 samples, 0.04%; -0.01%)</title><rect x="572.9" y="261" width="0.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="575.90" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (22 samples, 0.05%; +0.03%)</title><rect x="791.9" y="277" width="0.6" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="794.92" y="287.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; -0.01%)</title><rect x="463.5" y="325" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="466.47" y="335.5" ></text>
</g>
<g >
<title>utils::array_search_gt (8 samples, 0.02%; +0.01%)</title><rect x="475.5" y="277" width="0.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="478.53" y="287.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%; +0.00%)</title><rect x="794.8" y="277" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="797.78" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%; -0.00%)</title><rect x="677.2" y="485" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="680.20" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (35 samples, 0.07%; +0.03%)</title><rect x="602.3" y="405" width="0.8" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="605.29" y="415.5" ></text>
</g>
<g >
<title>free (118 samples, 0.24%; -0.00%)</title><rect x="403.8" y="181" width="2.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="406.79" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%; -0.00%)</title><rect x="1121.7" y="405" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1124.73" y="415.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (40 samples, 0.08%; 0.00%)</title><rect x="686.1" y="469" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="689.12" y="479.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (12 samples, 0.02%; +0.02%)</title><rect x="906.7" y="293" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="909.66" y="303.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,280 samples, 12.89%; +0.01%)</title><rect x="723.4" y="485" width="152.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="726.35" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (16 samples, 0.03%; -0.00%)</title><rect x="1053.0" y="293" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1055.99" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (13 samples, 0.03%; 0.00%)</title><rect x="21.2" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.17" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (35 samples, 0.07%; -0.00%)</title><rect x="514.6" y="229" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="517.63" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (28 samples, 0.06%; -0.00%)</title><rect x="681.3" y="437" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="684.27" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (10 samples, 0.02%; -0.02%)</title><rect x="428.0" y="421" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="431.05" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%; -0.01%)</title><rect x="1105.5" y="357" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1108.54" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (36 samples, 0.07%; +0.01%)</title><rect x="644.5" y="485" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="647.49" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (29 samples, 0.06%; -0.01%)</title><rect x="128.4" y="245" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="131.40" y="255.5" ></text>
</g>
<g >
<title>from_hex (8 samples, 0.02%; +0.01%)</title><rect x="22.4" y="341" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="25.43" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.47" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (35 samples, 0.07%; +0.04%)</title><rect x="1125.3" y="421" width="0.9" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="1128.34" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (8 samples, 0.02%; +0.00%)</title><rect x="1007.7" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1010.74" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (264 samples, 0.54%; +0.02%)</title><rect x="401.2" y="213" width="6.4" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="404.23" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (16 samples, 0.03%; +0.01%)</title><rect x="759.5" y="405" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="762.48" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (6 samples, 0.01%; -0.00%)</title><rect x="299.4" y="197" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="302.42" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (5 samples, 0.01%; +0.01%)</title><rect x="844.2" y="421" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="847.25" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (9 samples, 0.02%; -0.01%)</title><rect x="47.0" y="485" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="50.04" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (6 samples, 0.01%; -0.01%)</title><rect x="904.3" y="293" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="907.31" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (34 samples, 0.07%; +0.01%)</title><rect x="699.6" y="437" width="0.8" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="702.61" y="447.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (8 samples, 0.02%; 0.00%)</title><rect x="22.4" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.43" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; +0.03%)</title><rect x="536.9" y="245" width="0.7" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="539.88" y="255.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (15 samples, 0.03%; +0.01%)</title><rect x="925.0" y="373" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="927.98" y="383.5" ></text>
</g>
<g >
<title>sstring_hash::operator (32 samples, 0.07%; 0.00%)</title><rect x="855.4" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.37" y="383.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%; -0.00%)</title><rect x="494.8" y="293" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="497.84" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (6 samples, 0.01%; +0.00%)</title><rect x="552.4" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="555.36" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%; -0.01%)</title><rect x="997.9" y="261" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1000.90" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%; -0.02%)</title><rect x="79.6" y="453" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="82.61" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (30 samples, 0.06%; -0.02%)</title><rect x="407.6" y="213" width="0.7" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="410.62" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (47 samples, 0.10%; +0.01%)</title><rect x="1148.7" y="485" width="1.1" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1151.69" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (71 samples, 0.15%; +0.00%)</title><rect x="507.5" y="213" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="510.54" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (29 samples, 0.06%; 0.00%)</title><rect x="1022.1" y="229" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1025.06" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (13 samples, 0.03%; +0.00%)</title><rect x="608.8" y="437" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="611.81" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%; +0.00%)</title><rect x="1103.4" y="341" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1106.44" y="351.5" ></text>
</g>
<g >
<title>abstract_type::from_string (8 samples, 0.02%; 0.00%)</title><rect x="22.4" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.43" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="641.1" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="644.05" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%; -0.01%)</title><rect x="227.9" y="245" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="230.88" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (17 samples, 0.03%; +0.02%)</title><rect x="124.9" y="261" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="127.91" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (84 samples, 0.17%; -0.01%)</title><rect x="1101.6" y="357" width="2.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1104.64" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%; -0.02%)</title><rect x="565.6" y="277" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="568.58" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.03%; 0.00%)</title><rect x="879.9" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.89" y="383.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (18 samples, 0.04%; 0.00%)</title><rect x="757.1" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="760.13" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (60 samples, 0.12%; -0.00%)</title><rect x="773.3" y="341" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="776.34" y="351.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%; +0.00%)</title><rect x="498.0" y="293" width="0.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="501.01" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%; 0.00%)</title><rect x="693.1" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="696.12" y="399.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; 0.00%)</title><rect x="421.8" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="424.82" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (26 samples, 0.05%; +0.02%)</title><rect x="310.0" y="165" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="313.03" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%; -0.00%)</title><rect x="1065.7" y="261" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1068.66" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (93 samples, 0.19%; -0.00%)</title><rect x="840.7" y="325" width="2.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="843.71" y="335.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (39 samples, 0.08%; +0.01%)</title><rect x="328.4" y="181" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="331.37" y="191.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (263 samples, 0.54%; +0.01%)</title><rect x="1083.1" y="245" width="6.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1086.13" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (15 samples, 0.03%; -0.03%)</title><rect x="239.8" y="229" width="0.4" height="15.0" fill="rgb(174,174,255)" rx="2" ry="2" />
<text  x="242.85" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (22 samples, 0.05%; -0.01%)</title><rect x="406.1" y="165" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="409.12" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; +0.01%)</title><rect x="1157.9" y="453" width="0.2" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1160.90" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (8 samples, 0.02%; +0.01%)</title><rect x="757.7" y="357" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="760.66" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%; -0.01%)</title><rect x="1029.7" y="165" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1032.74" y="175.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%; -0.00%)</title><rect x="1070.9" y="325" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1073.90" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%; +0.01%)</title><rect x="443.7" y="261" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="446.70" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; +0.00%)</title><rect x="129.2" y="245" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="132.15" y="255.5" ></text>
</g>
<g >
<title>free (19 samples, 0.04%; -0.03%)</title><rect x="407.9" y="197" width="0.4" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="410.86" y="207.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,724 samples, 22.02%; +0.03%)</title><rect x="880.3" y="485" width="259.8" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="883.30" y="495.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (13 samples, 0.03%; +0.01%)</title><rect x="240.5" y="229" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="243.52" y="239.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; +0.01%)</title><rect x="838.4" y="293" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="841.41" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%; +0.00%)</title><rect x="856.4" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="859.44" y="415.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.15%; +0.00%)</title><rect x="1002.8" y="261" width="1.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1005.82" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%; +0.01%)</title><rect x="272.3" y="261" width="1.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="275.29" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; 0.00%)</title><rect x="1077.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1080.78" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (78 samples, 0.16%; -0.02%)</title><rect x="232.4" y="197" width="1.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="235.36" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (15 samples, 0.03%; +0.00%)</title><rect x="871.7" y="469" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="874.67" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.01%)</title><rect x="93.8" y="421" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="96.78" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="872.5" y="421" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="875.55" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (27 samples, 0.06%; 0.00%)</title><rect x="879.6" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.65" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%; +0.01%)</title><rect x="940.3" y="389" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="943.26" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (305 samples, 0.63%; +0.01%)</title><rect x="590.5" y="437" width="7.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="593.54" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (28 samples, 0.06%; -0.01%)</title><rect x="898.6" y="389" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="901.57" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (15 samples, 0.03%; -0.01%)</title><rect x="389.5" y="149" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="392.55" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.01%)</title><rect x="38.9" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="41.88" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%; -0.01%)</title><rect x="1151.9" y="485" width="0.5" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1154.91" y="495.5" ></text>
</g>
</g>
</svg>
