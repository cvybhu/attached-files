<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="1123.8" y="405" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1126.82" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (11 samples, 0.02%; 0.00%)</title><rect x="883.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.14" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (8 samples, 0.02%; +0.01%)</title><rect x="795.9" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="798.92" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (6 samples, 0.01%; -0.03%)</title><rect x="320.3" y="181" width="0.1" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="323.29" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (14 samples, 0.03%; +0.01%)</title><rect x="617.4" y="437" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="620.37" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (101 samples, 0.21%; +0.00%)</title><rect x="836.2" y="389" width="2.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="839.18" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%; +0.00%)</title><rect x="719.8" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="722.80" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%; +0.00%)</title><rect x="590.7" y="357" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="593.66" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,765 samples, 7.72%; -0.07%)</title><rect x="307.0" y="245" width="91.1" height="15.0" fill="rgb(176,176,255)" rx="2" ry="2" />
<text  x="309.98" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>sstring_hash::operator (36 samples, 0.07%; -0.00%)</title><rect x="860.1" y="373" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="863.13" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%; +0.01%)</title><rect x="847.5" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="850.50" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (196 samples, 0.40%; 0.00%)</title><rect x="14.7" y="405" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.74" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (470 samples, 0.96%; 0.00%)</title><rect x="1030.0" y="229" width="11.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1032.99" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (99 samples, 0.20%; +0.01%)</title><rect x="807.6" y="197" width="2.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="810.55" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (12 samples, 0.02%; +0.01%)</title><rect x="795.6" y="309" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="798.63" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (17 samples, 0.03%; +0.01%)</title><rect x="634.7" y="389" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="637.75" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (21 samples, 0.04%; +0.01%)</title><rect x="334.6" y="181" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="337.64" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (98 samples, 0.20%; +0.06%)</title><rect x="264.0" y="325" width="2.4" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="267.01" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="543.7" y="325" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="546.74" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%; +0.00%)</title><rect x="775.0" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="777.99" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (118 samples, 0.24%; +0.00%)</title><rect x="741.9" y="341" width="2.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="744.89" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (34 samples, 0.07%; +0.02%)</title><rect x="333.6" y="165" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="336.62" y="175.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (63 samples, 0.13%; +0.01%)</title><rect x="295.0" y="277" width="1.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="297.96" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,910 samples, 12.12%; +0.04%)</title><rect x="967.0" y="405" width="143.0" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="969.96" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%; +0.00%)</title><rect x="814.6" y="117" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="817.62" y="127.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (142 samples, 0.29%; -0.04%)</title><rect x="313.7" y="181" width="3.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="316.69" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (24 samples, 0.05%; +0.02%)</title><rect x="138.5" y="245" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="141.53" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.01%; -0.01%)</title><rect x="835.3" y="261" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="838.33" y="271.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%; +0.01%)</title><rect x="953.8" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="956.82" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (32 samples, 0.07%; +0.06%)</title><rect x="415.3" y="277" width="0.8" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="418.33" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (68 samples, 0.14%; +0.02%)</title><rect x="287.2" y="373" width="1.6" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="290.19" y="383.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (305 samples, 0.63%; +0.01%)</title><rect x="485.0" y="245" width="7.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="488.02" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="734.4" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="737.43" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%; +0.00%)</title><rect x="675.2" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="678.15" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (275 samples, 0.56%; +0.01%)</title><rect x="446.7" y="293" width="6.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="449.74" y="303.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.02%; -0.00%)</title><rect x="644.9" y="485" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="647.88" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (573 samples, 1.17%; +0.01%)</title><rect x="1153.2" y="485" width="13.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1156.20" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (46 samples, 0.09%; -0.06%)</title><rect x="399.6" y="213" width="1.1" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="402.56" y="223.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (16 samples, 0.03%; -0.00%)</title><rect x="1037.6" y="133" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1040.64" y="143.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%; +0.01%)</title><rect x="653.4" y="485" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="656.45" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%; +0.01%)</title><rect x="859.7" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="862.72" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.10%; -0.02%)</title><rect x="547.5" y="389" width="1.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="550.49" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%; -0.00%)</title><rect x="417.8" y="277" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="420.83" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (89 samples, 0.18%; +0.03%)</title><rect x="157.9" y="197" width="2.2" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="160.91" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (47 samples, 0.10%; +0.03%)</title><rect x="31.4" y="485" width="1.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="34.41" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (19 samples, 0.04%; -0.02%)</title><rect x="338.6" y="181" width="0.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="341.61" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (171 samples, 0.35%; -0.01%)</title><rect x="775.3" y="357" width="4.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="778.28" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (10 samples, 0.02%; +0.01%)</title><rect x="543.9" y="341" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="546.94" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (23 samples, 0.05%; +0.01%)</title><rect x="689.7" y="453" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="692.72" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (10 samples, 0.02%; -0.01%)</title><rect x="986.6" y="357" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="989.63" y="367.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%; -0.02%)</title><rect x="34.9" y="453" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="37.87" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (40 samples, 0.08%; -0.03%)</title><rect x="663.3" y="405" width="1.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="666.32" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (31 samples, 0.06%; +0.01%)</title><rect x="727.2" y="501" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="730.18" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (9 samples, 0.02%; +0.00%)</title><rect x="821.2" y="149" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="824.20" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (477 samples, 0.98%; +0.01%)</title><rect x="511.6" y="261" width="11.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="514.61" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.01%; -0.01%)</title><rect x="1175.0" y="501" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1178.05" y="511.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (225 samples, 0.46%; +0.04%)</title><rect x="273.5" y="309" width="5.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="276.54" y="319.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.01%; +0.01%)</title><rect x="1170.2" y="469" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1173.16" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (455 samples, 0.93%; -0.01%)</title><rect x="582.7" y="389" width="11.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="585.75" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%; +0.00%)</title><rect x="414.8" y="261" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="417.75" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (5 samples, 0.01%; 0.00%)</title><rect x="884.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.16" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (32 samples, 0.07%; -0.00%)</title><rect x="883.7" y="421" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="886.75" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (855 samples, 1.75%; -0.03%)</title><rect x="920.1" y="405" width="20.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="923.07" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,639 samples, 7.46%; +0.02%)</title><rect x="307.7" y="229" width="88.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="310.69" y="239.5" >compact_mu..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (31 samples, 0.06%; +0.01%)</title><rect x="1053.8" y="245" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1056.75" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (42 samples, 0.09%; +0.01%)</title><rect x="637.4" y="405" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="640.41" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (137 samples, 0.28%; +0.01%)</title><rect x="761.0" y="309" width="3.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="764.05" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%; -0.01%)</title><rect x="1163.7" y="453" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1166.75" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (29 samples, 0.06%; +0.02%)</title><rect x="561.7" y="421" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="564.67" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (58 samples, 0.12%; +0.01%)</title><rect x="1154.0" y="453" width="1.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1157.02" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (30 samples, 0.06%; +0.01%)</title><rect x="614.5" y="437" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="617.49" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%; +0.01%)</title><rect x="325.2" y="197" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="328.20" y="207.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (9 samples, 0.02%; +0.00%)</title><rect x="768.9" y="357" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="771.91" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (75 samples, 0.15%; -0.00%)</title><rect x="1122.0" y="405" width="1.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1125.01" y="415.5" ></text>
</g>
<g >
<title>operator new (165 samples, 0.34%; 0.00%)</title><rect x="1025.5" y="245" width="4.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1028.51" y="255.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (13 samples, 0.03%; +0.01%)</title><rect x="334.8" y="165" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="337.83" y="175.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (344 samples, 0.71%; -0.02%)</title><rect x="738.2" y="437" width="8.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="741.18" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (104 samples, 0.21%; -0.01%)</title><rect x="1172.2" y="437" width="2.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1175.24" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; 0.00%)</title><rect x="469.7" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="472.66" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,741 samples, 11.77%; +0.06%)</title><rect x="969.5" y="389" width="138.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="972.45" y="399.5" >service::storage_..</text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (10 samples, 0.02%; +0.00%)</title><rect x="15.9" y="261" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="18.88" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (24 samples, 0.05%; -0.00%)</title><rect x="1110.0" y="405" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1112.96" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (21 samples, 0.04%; +0.01%)</title><rect x="1098.4" y="309" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1101.42" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (11 samples, 0.02%; +0.01%)</title><rect x="992.7" y="293" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="995.68" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (19 samples, 0.04%; 0.00%)</title><rect x="19.9" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.87" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (68 samples, 0.14%; +0.01%)</title><rect x="897.9" y="421" width="1.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="900.88" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (25 samples, 0.05%; 0.00%)</title><rect x="545.1" y="341" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="548.05" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%; +0.01%)</title><rect x="664.0" y="373" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="667.05" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (14 samples, 0.03%; +0.01%)</title><rect x="1104.4" y="357" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1107.44" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (211 samples, 0.43%; +0.00%)</title><rect x="739.8" y="405" width="5.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="742.76" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (21 samples, 0.04%; +0.01%)</title><rect x="630.6" y="389" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="633.63" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,048 samples, 2.15%; -0.00%)</title><rect x="801.6" y="293" width="25.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="804.55" y="303.5" >s..</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (44 samples, 0.09%; +0.00%)</title><rect x="1036.3" y="149" width="1.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1039.26" y="159.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (29 samples, 0.06%; +0.01%)</title><rect x="935.0" y="357" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="937.97" y="367.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (12 samples, 0.02%; +0.02%)</title><rect x="317.8" y="181" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="320.78" y="191.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (15 samples, 0.03%; +0.03%)</title><rect x="106.8" y="421" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="109.78" y="431.5" ></text>
</g>
<g >
<title>database::has_keyspace (153 samples, 0.31%; -0.01%)</title><rect x="857.7" y="421" width="3.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="860.74" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (6 samples, 0.01%; +0.00%)</title><rect x="1139.7" y="421" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1142.70" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (12 samples, 0.02%; -0.01%)</title><rect x="888.4" y="469" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="891.42" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (72 samples, 0.15%; -0.00%)</title><rect x="875.9" y="469" width="1.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="878.89" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.00%)</title><rect x="846.5" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="849.51" y="287.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%; 0.00%)</title><rect x="517.5" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.52" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (47 samples, 0.10%; 0.00%)</title><rect x="17.4" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (16 samples, 0.03%; +0.01%)</title><rect x="683.1" y="469" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="686.11" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="876.4" y="421" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="879.39" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (20 samples, 0.04%; +0.02%)</title><rect x="275.3" y="293" width="0.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="278.31" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (9 samples, 0.02%; 0.00%)</title><rect x="14.9" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.94" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (173 samples, 0.35%; +0.01%)</title><rect x="262.8" y="341" width="4.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="265.78" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (49 samples, 0.10%; +0.01%)</title><rect x="853.5" y="389" width="1.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="856.50" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume (7 samples, 0.01%; 0.00%)</title><rect x="702.3" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.28" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (41 samples, 0.08%; +0.03%)</title><rect x="925.0" y="341" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="927.95" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (18 samples, 0.04%; -0.02%)</title><rect x="316.2" y="165" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="319.18" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (17 samples, 0.03%; +0.01%)</title><rect x="955.7" y="325" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="958.68" y="335.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (45 samples, 0.09%; -0.02%)</title><rect x="362.9" y="149" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="365.88" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%; -0.01%)</title><rect x="720.5" y="421" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="723.55" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (79 samples, 0.16%; -0.01%)</title><rect x="679.8" y="469" width="1.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="682.75" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (34 samples, 0.07%; -0.01%)</title><rect x="661.7" y="405" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="664.72" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; -0.01%)</title><rect x="935.6" y="341" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="938.55" y="351.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%; +0.00%)</title><rect x="257.4" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="260.38" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%; +0.01%)</title><rect x="606.4" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="609.41" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%; -0.01%)</title><rect x="1152.2" y="485" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1155.16" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%; -0.02%)</title><rect x="1049.3" y="277" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1052.30" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%; 0.00%)</title><rect x="173.3" y="133" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.35" y="143.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (110 samples, 0.23%; +0.01%)</title><rect x="833.0" y="325" width="2.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="835.96" y="335.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.00%)</title><rect x="602.3" y="389" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="605.30" y="399.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (96 samples, 0.20%; -0.00%)</title><rect x="1116.0" y="389" width="2.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1119.03" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (25 samples, 0.05%; +0.01%)</title><rect x="684.3" y="469" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="687.28" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (5 samples, 0.01%; +0.00%)</title><rect x="1176.0" y="405" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1178.97" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; +0.04%)</title><rect x="421.8" y="357" width="0.9" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="424.84" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; -0.00%)</title><rect x="705.7" y="469" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="708.74" y="479.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.10%; -0.00%)</title><rect x="769.4" y="405" width="1.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="772.40" y="415.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (5 samples, 0.01%; -0.04%)</title><rect x="236.3" y="197" width="0.1" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="239.26" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (19 samples, 0.04%; +0.00%)</title><rect x="643.8" y="469" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="646.84" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; +0.01%)</title><rect x="1139.9" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1142.87" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="30.6" y="485" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="33.64" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (42 samples, 0.09%; -0.00%)</title><rect x="817.5" y="149" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="820.55" y="159.5" ></text>
</g>
<g >
<title>sstring_hash::operator (9 samples, 0.02%; +0.00%)</title><rect x="861.1" y="389" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="864.13" y="399.5" ></text>
</g>
<g >
<title>operator delete (76 samples, 0.16%; -0.00%)</title><rect x="567.3" y="325" width="1.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="570.34" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (30 samples, 0.06%; -0.02%)</title><rect x="690.3" y="453" width="0.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="693.28" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="797.8" y="293" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="800.76" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (7 samples, 0.01%; 0.00%)</title><rect x="549.9" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="552.91" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (36 samples, 0.07%; +0.00%)</title><rect x="1128.1" y="421" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1131.08" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1142.2" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (92 samples, 0.19%; +0.05%)</title><rect x="695.7" y="453" width="2.2" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="698.67" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (17 samples, 0.03%; -0.04%)</title><rect x="586.6" y="357" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="589.57" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (21 samples, 0.04%; 0.00%)</title><rect x="953.3" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="956.31" y="351.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (23 samples, 0.05%; -0.00%)</title><rect x="375.6" y="181" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="378.63" y="191.5" ></text>
</g>
<g >
<title>seastar::schedule (15 samples, 0.03%; +0.01%)</title><rect x="1144.7" y="501" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1147.70" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (23 samples, 0.05%; +0.03%)</title><rect x="70.9" y="453" width="0.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="73.88" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (96 samples, 0.20%; 0.00%)</title><rect x="818.8" y="133" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="821.83" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (45 samples, 0.09%; -0.01%)</title><rect x="811.2" y="197" width="1.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="814.21" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (49 samples, 0.10%; 0.00%)</title><rect x="1165.9" y="469" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1168.88" y="479.5" ></text>
</g>
<g >
<title>__start_context (289 samples, 0.59%; 0.00%)</title><rect x="14.0" y="613" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.99" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (10 samples, 0.02%; -0.00%)</title><rect x="722.3" y="453" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="725.26" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="144.3" y="277" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="147.29" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; -0.01%)</title><rect x="216.5" y="133" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="219.51" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (7 samples, 0.01%; -0.02%)</title><rect x="1125.7" y="421" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1128.69" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%; +0.00%)</title><rect x="957.4" y="405" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="960.43" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; 0.00%)</title><rect x="487.4" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="490.42" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="1138.7" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1141.73" y="415.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (8 samples, 0.02%; +0.00%)</title><rect x="564.9" y="341" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="567.89" y="351.5" ></text>
</g>
<g >
<title>query::digester::digester (35 samples, 0.07%; +0.03%)</title><rect x="608.4" y="405" width="0.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="611.44" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (17 samples, 0.03%; 0.00%)</title><rect x="962.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="965.07" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (68 samples, 0.14%; -0.02%)</title><rect x="952.3" y="357" width="1.7" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="955.32" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="1124.0" y="405" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1126.99" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (6 samples, 0.01%; -0.01%)</title><rect x="779.5" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="782.49" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%; 0.00%)</title><rect x="683.3" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="686.31" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%; +0.01%)</title><rect x="975.1" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="978.11" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (7 samples, 0.01%; +0.01%)</title><rect x="1108.0" y="373" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1111.05" y="383.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (60 samples, 0.12%; -0.03%)</title><rect x="357.5" y="165" width="1.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="360.46" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (38 samples, 0.08%; -0.00%)</title><rect x="1132.6" y="389" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1135.56" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (97 samples, 0.20%; +0.01%)</title><rect x="370.5" y="213" width="2.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="373.45" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (34 samples, 0.07%; +0.00%)</title><rect x="220.8" y="181" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="223.77" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (231 samples, 0.47%; -0.01%)</title><rect x="1062.5" y="325" width="5.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1065.49" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (132 samples, 0.27%; +0.00%)</title><rect x="628.0" y="405" width="3.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="630.97" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (16 samples, 0.03%; +0.01%)</title><rect x="698.5" y="453" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="701.48" y="463.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (5 samples, 0.01%; +0.00%)</title><rect x="686.9" y="453" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="689.89" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%; 0.00%)</title><rect x="1145.8" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.84" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (111 samples, 0.23%; -0.01%)</title><rect x="807.4" y="213" width="2.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="810.39" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%; +0.03%)</title><rect x="798.0" y="325" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="800.97" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (58 samples, 0.12%; +0.00%)</title><rect x="822.2" y="261" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="825.22" y="271.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (944 samples, 1.94%; -0.03%)</title><rect x="470.1" y="325" width="22.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="473.11" y="335.5" >d..</text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%; -0.01%)</title><rect x="214.7" y="149" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="217.68" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.00%)</title><rect x="624.0" y="389" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="626.95" y="399.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (40 samples, 0.08%; 0.00%)</title><rect x="566.1" y="325" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="569.13" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; -0.00%)</title><rect x="1148.5" y="485" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1151.53" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (64 samples, 0.13%; -0.01%)</title><rect x="711.9" y="485" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="714.93" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (44 samples, 0.09%; +0.02%)</title><rect x="1076.4" y="293" width="1.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1079.35" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (18 samples, 0.04%; -0.01%)</title><rect x="797.2" y="277" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="800.22" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%; +0.01%)</title><rect x="43.4" y="485" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="46.39" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%; -0.02%)</title><rect x="769.4" y="389" width="1.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="772.40" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (22 samples, 0.05%; +0.02%)</title><rect x="524.4" y="277" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="527.36" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (49 samples, 0.10%; -0.01%)</title><rect x="842.3" y="309" width="1.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="845.30" y="319.5" ></text>
</g>
<g >
<title>[unknown] (146 samples, 0.30%; 0.00%)</title><rect x="10.2" y="597" width="3.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.24" y="607.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%; -0.00%)</title><rect x="670.8" y="453" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="673.77" y="463.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (11 samples, 0.02%; -0.02%)</title><rect x="919.2" y="357" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="922.17" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (13 samples, 0.03%; +0.01%)</title><rect x="447.6" y="261" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="450.61" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (20 samples, 0.04%; -0.00%)</title><rect x="17.9" y="293" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="20.91" y="303.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (28 samples, 0.06%; 0.00%)</title><rect x="1141.1" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (16 samples, 0.03%; +0.02%)</title><rect x="558.5" y="389" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="561.46" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%; +0.02%)</title><rect x="518.6" y="165" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="521.63" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (8 samples, 0.02%; +0.00%)</title><rect x="166.6" y="197" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="169.57" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (98 samples, 0.20%; +0.01%)</title><rect x="692.7" y="485" width="2.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="695.67" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.01%)</title><rect x="1159.6" y="373" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1162.63" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="678.3" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="681.30" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (23 samples, 0.05%; +0.01%)</title><rect x="282.0" y="357" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="285.04" y="367.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (36 samples, 0.07%; -0.14%)</title><rect x="10.3" y="581" width="0.9" height="15.0" fill="rgb(138,138,255)" rx="2" ry="2" />
<text  x="13.34" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24,304 samples, 49.84%; -0.12%)</title><rect x="51.8" y="469" width="588.1" height="15.0" fill="rgb(148,148,255)" rx="2" ry="2" />
<text  x="54.81" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.02%; 0.00%)</title><rect x="14.9" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (573 samples, 1.17%; -0.03%)</title><rect x="905.6" y="373" width="13.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="908.57" y="383.5" ></text>
</g>
<g >
<title>compound_type&lt; (60 samples, 0.12%; -0.02%)</title><rect x="552.3" y="357" width="1.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="555.29" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (14 samples, 0.03%; +0.00%)</title><rect x="730.6" y="485" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="733.56" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (7 samples, 0.01%; +0.00%)</title><rect x="427.6" y="373" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="430.63" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (9 samples, 0.02%; -0.01%)</title><rect x="450.3" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="453.32" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (23 samples, 0.05%; +0.02%)</title><rect x="267.9" y="341" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="270.91" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (60 samples, 0.12%; +0.01%)</title><rect x="1158.8" y="437" width="1.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1161.81" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%; +0.00%)</title><rect x="1101.1" y="341" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1104.10" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%; -0.00%)</title><rect x="688.8" y="437" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="691.78" y="447.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (7 samples, 0.01%; +0.01%)</title><rect x="767.6" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="770.61" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (23 samples, 0.05%; +0.03%)</title><rect x="50.6" y="469" width="0.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="53.55" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%; -0.01%)</title><rect x="529.8" y="325" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="532.78" y="335.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (236 samples, 0.48%; -0.00%)</title><rect x="1033.6" y="197" width="5.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1036.62" y="207.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (14 samples, 0.03%; -0.00%)</title><rect x="1044.7" y="245" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1047.73" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,305 samples, 4.73%; -0.01%)</title><rect x="1001.5" y="341" width="55.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1004.49" y="351.5" >servi..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%; +0.01%)</title><rect x="717.1" y="453" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="720.06" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (61 samples, 0.13%; +0.08%)</title><rect x="66.4" y="373" width="1.5" height="15.0" fill="rgb(255,167,167)" rx="2" ry="2" />
<text  x="69.38" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.02%; +0.01%)</title><rect x="809.6" y="133" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="812.56" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%; +0.00%)</title><rect x="526.2" y="325" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="529.15" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (8 samples, 0.02%; +0.00%)</title><rect x="717.6" y="437" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="720.57" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="426.6" y="357" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="429.63" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (22 samples, 0.05%; 0.00%)</title><rect x="30.8" y="485" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="33.83" y="495.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (7 samples, 0.01%; -0.03%)</title><rect x="1118.4" y="389" width="0.1" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1121.36" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (23 samples, 0.05%; -0.00%)</title><rect x="820.0" y="101" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="823.02" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="1048.6" y="261" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1051.57" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (8 samples, 0.02%; +0.01%)</title><rect x="656.0" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="658.97" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%; +0.00%)</title><rect x="509.0" y="261" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="512.02" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (15 samples, 0.03%; +0.02%)</title><rect x="1056.4" y="293" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1059.39" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (24 samples, 0.05%; +0.01%)</title><rect x="820.6" y="101" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="823.57" y="111.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%; +0.00%)</title><rect x="883.1" y="325" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="886.14" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (19 samples, 0.04%; 0.00%)</title><rect x="947.4" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.38" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; 0.00%)</title><rect x="707.4" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.36" y="463.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="826.4" y="277" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="829.43" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.00%)</title><rect x="141.2" y="245" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="144.19" y="255.5" ></text>
</g>
<g >
<title>tombstone::apply (14 samples, 0.03%; +0.01%)</title><rect x="394.3" y="197" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="397.31" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (9 samples, 0.02%; 0.00%)</title><rect x="20.1" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.09" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (69 samples, 0.14%; +0.06%)</title><rect x="910.2" y="293" width="1.6" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="913.17" y="303.5" ></text>
</g>
<g >
<title>db::block_for (18 samples, 0.04%; +0.03%)</title><rect x="1068.7" y="341" width="0.4" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1071.68" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (20 samples, 0.04%; -0.01%)</title><rect x="63.5" y="405" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="66.52" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.00%)</title><rect x="849.4" y="421" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="852.39" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (16 samples, 0.03%; -0.00%)</title><rect x="15.4" y="261" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="18.37" y="271.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%; 0.00%)</title><rect x="1042.1" y="213" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1045.09" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (5 samples, 0.01%; +0.01%)</title><rect x="660.4" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="663.44" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (63 samples, 0.13%; +0.00%)</title><rect x="14.8" y="325" width="1.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="17.84" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%; -0.00%)</title><rect x="701.4" y="485" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="704.38" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (11 samples, 0.02%; +0.01%)</title><rect x="963.5" y="325" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="966.55" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (29 samples, 0.06%; +0.01%)</title><rect x="822.9" y="229" width="0.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="825.87" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (66 samples, 0.14%; -0.01%)</title><rect x="753.5" y="357" width="1.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="756.52" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (17 samples, 0.03%; 0.00%)</title><rect x="846.3" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="849.27" y="319.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (7 samples, 0.01%; 0.00%)</title><rect x="1141.1" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="239.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (42 samples, 0.09%; -0.01%)</title><rect x="469.1" y="325" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="472.10" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (126 samples, 0.26%; -0.00%)</title><rect x="1015.0" y="261" width="3.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1017.99" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (7 samples, 0.01%; +0.01%)</title><rect x="40.1" y="485" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="43.15" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%; +0.01%)</title><rect x="992.2" y="261" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="995.17" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="581.5" y="309" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="584.54" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%; -0.03%)</title><rect x="59.6" y="437" width="0.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="62.60" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (12 samples, 0.02%; +0.01%)</title><rect x="900.1" y="421" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="903.13" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (157 samples, 0.32%; +0.01%)</title><rect x="813.4" y="165" width="3.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="816.39" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (16 samples, 0.03%; -0.00%)</title><rect x="38.3" y="453" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="41.26" y="463.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%; +0.00%)</title><rect x="908.2" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="911.16" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%; -0.00%)</title><rect x="142.4" y="261" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="145.45" y="271.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; 0.00%)</title><rect x="426.6" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="429.63" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="824.5" y="245" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="827.52" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (48 samples, 0.10%; +0.02%)</title><rect x="371.6" y="181" width="1.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="374.64" y="191.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (51 samples, 0.10%; -0.00%)</title><rect x="155.3" y="197" width="1.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="158.27" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (810 samples, 1.66%; -0.04%)</title><rect x="505.9" y="293" width="19.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="508.93" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%; -0.02%)</title><rect x="1079.3" y="325" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1082.30" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (655 samples, 1.34%; -0.01%)</title><rect x="128.8" y="293" width="15.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="131.83" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.01%; 0.00%)</title><rect x="17.6" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.60" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (82 samples, 0.17%; -0.01%)</title><rect x="767.4" y="405" width="2.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="770.41" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="259.5" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="262.49" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (9 samples, 0.02%; 0.00%)</title><rect x="67.9" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="70.88" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (517 samples, 1.06%; -0.01%)</title><rect x="311.3" y="197" width="12.5" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="314.29" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.03%; +0.01%)</title><rect x="834.4" y="277" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="837.36" y="287.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (5 samples, 0.01%; +0.00%)</title><rect x="1177.3" y="437" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1180.32" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (9 samples, 0.02%; -0.00%)</title><rect x="18.2" y="277" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="21.18" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (19 samples, 0.04%; +0.00%)</title><rect x="1006.0" y="261" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1009.04" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; -0.00%)</title><rect x="1142.2" y="245" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1145.16" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="655.0" y="485" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="657.97" y="495.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; +0.01%)</title><rect x="285.8" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="288.76" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="427.8" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="430.82" y="383.5" ></text>
</g>
<g >
<title>compound_type&lt; (74 samples, 0.15%; -0.06%)</title><rect x="921.9" y="373" width="1.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="924.86" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (112 samples, 0.23%; -0.01%)</title><rect x="1131.7" y="405" width="2.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1134.69" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (7 samples, 0.01%; -0.00%)</title><rect x="1101.5" y="357" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1104.47" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (166 samples, 0.34%; -0.01%)</title><rect x="869.0" y="437" width="4.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="872.01" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (6 samples, 0.01%; +0.00%)</title><rect x="413.6" y="229" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="416.64" y="239.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (168 samples, 0.34%; 0.00%)</title><rect x="475.8" y="277" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="478.83" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,995 samples, 38.95%; +0.10%)</title><rect x="101.9" y="437" width="459.6" height="15.0" fill="rgb(255,159,159)" rx="2" ry="2" />
<text  x="104.87" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (33 samples, 0.07%; 0.00%)</title><rect x="19.6" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.63" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (20 samples, 0.04%; +0.00%)</title><rect x="880.6" y="501" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="883.58" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (16 samples, 0.03%; +0.01%)</title><rect x="362.5" y="149" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="365.49" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; 0.00%)</title><rect x="1117.2" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1120.19" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.01%)</title><rect x="395.1" y="197" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="398.06" y="207.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (39 samples, 0.08%; -0.01%)</title><rect x="130.4" y="277" width="1.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="133.45" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (6 samples, 0.01%; +0.00%)</title><rect x="725.0" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="728.02" y="479.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; +0.01%)</title><rect x="540.2" y="309" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="543.24" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="244.8" y="229" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="247.75" y="239.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (34 samples, 0.07%; -0.00%)</title><rect x="883.7" y="485" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="886.72" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="686.6" y="453" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="689.62" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.03%; -0.00%)</title><rect x="843.1" y="293" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="846.07" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%; +0.01%)</title><rect x="849.6" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="852.61" y="431.5" ></text>
</g>
<g >
<title>operator delete (42 samples, 0.09%; -0.02%)</title><rect x="1126.0" y="421" width="1.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1129.03" y="431.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; -0.01%)</title><rect x="688.0" y="453" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="691.05" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (198 samples, 0.41%; -0.00%)</title><rect x="996.5" y="325" width="4.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="999.45" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.02%)</title><rect x="38.4" y="437" width="0.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="41.36" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%; -0.01%)</title><rect x="146.3" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="149.35" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (251 samples, 0.51%; -0.03%)</title><rect x="586.2" y="373" width="6.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="589.23" y="383.5" ></text>
</g>
<g >
<title>database::has_keyspace (5 samples, 0.01%; +0.01%)</title><rect x="844.8" y="373" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="847.84" y="383.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (5 samples, 0.01%; -0.01%)</title><rect x="919.9" y="389" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="922.95" y="399.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; +0.01%)</title><rect x="146.4" y="245" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="149.39" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; -0.00%)</title><rect x="1033.3" y="165" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1036.31" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%; +0.01%)</title><rect x="1124.1" y="405" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1127.14" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.00%)</title><rect x="30.3" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="33.28" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (19 samples, 0.04%; 0.00%)</title><rect x="883.1" y="485" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.10" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (18 samples, 0.04%; +0.00%)</title><rect x="140.1" y="229" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="143.13" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%; +0.01%)</title><rect x="619.3" y="437" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="622.33" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,266 samples, 2.60%; -0.01%)</title><rect x="1018.5" y="277" width="30.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1021.47" y="287.5" >se..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (5 samples, 0.01%; -0.01%)</title><rect x="580.2" y="293" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="583.21" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (21 samples, 0.04%; -0.01%)</title><rect x="670.0" y="469" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="673.00" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (5 samples, 0.01%; +0.01%)</title><rect x="180.0" y="117" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="182.95" y="127.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (13,343 samples, 27.36%; -0.00%)</title><rect x="107.2" y="421" width="322.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="110.24" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (15 samples, 0.03%; -0.02%)</title><rect x="141.8" y="261" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="144.82" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="617.7" y="437" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="620.74" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.01%)</title><rect x="911.8" y="293" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="914.84" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (47 samples, 0.10%; +0.01%)</title><rect x="98.1" y="405" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="101.15" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="627.0" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="629.98" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (20 samples, 0.04%; +0.01%)</title><rect x="712.6" y="469" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="715.61" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; 0.00%)</title><rect x="236.1" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="239.07" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%; -0.01%)</title><rect x="645.7" y="485" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="648.71" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (37 samples, 0.08%; -0.01%)</title><rect x="253.9" y="277" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="256.92" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%; +0.02%)</title><rect x="604.0" y="389" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="607.02" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (59 samples, 0.12%; -0.00%)</title><rect x="514.4" y="213" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="517.44" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (104 samples, 0.21%; 0.00%)</title><rect x="1041.8" y="229" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1044.77" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (5 samples, 0.01%; +0.00%)</title><rect x="988.3" y="357" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="991.28" y="367.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (251 samples, 0.51%; -0.00%)</title><rect x="1083.5" y="245" width="6.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1086.49" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (14 samples, 0.03%; -0.03%)</title><rect x="968.9" y="389" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="971.94" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_expression (7 samples, 0.01%; -0.00%)</title><rect x="19.7" y="405" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="22.65" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; -0.01%)</title><rect x="620.1" y="405" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="623.13" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (27 samples, 0.06%; +0.01%)</title><rect x="1050.4" y="277" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1053.36" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.01%; -0.01%)</title><rect x="717.8" y="453" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="720.84" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (12 samples, 0.02%; -0.01%)</title><rect x="711.6" y="485" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="714.64" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (11 samples, 0.02%; +0.01%)</title><rect x="638.2" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="641.16" y="399.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; -0.01%)</title><rect x="600.3" y="405" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="603.34" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%; -0.00%)</title><rect x="151.3" y="245" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="154.31" y="255.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.00%)</title><rect x="867.1" y="325" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="870.05" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; 0.00%)</title><rect x="421.4" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="424.41" y="335.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.01%; 0.00%)</title><rect x="883.2" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.17" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%; +0.01%)</title><rect x="726.3" y="501" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="729.26" y="511.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (25 samples, 0.05%; +0.01%)</title><rect x="1067.4" y="261" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1070.37" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; -0.01%)</title><rect x="1117.3" y="357" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1120.31" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (20 samples, 0.04%; +0.02%)</title><rect x="1105.7" y="357" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1108.68" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (37 samples, 0.08%; +0.02%)</title><rect x="331.1" y="181" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="334.13" y="191.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="255.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (695 samples, 1.43%; +0.01%)</title><rect x="180.1" y="117" width="16.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="183.08" y="127.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (6 samples, 0.01%; +0.01%)</title><rect x="780.3" y="405" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="783.29" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (7 samples, 0.01%; 0.00%)</title><rect x="883.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.17" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.00%)</title><rect x="577.0" y="261" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="579.99" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (281 samples, 0.58%; 0.00%)</title><rect x="14.2" y="565" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.19" y="575.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (10 samples, 0.02%; 0.00%)</title><rect x="11.2" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="14.21" y="591.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,885 samples, 3.87%; +0.01%)</title><rect x="169.9" y="181" width="45.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="172.86" y="191.5" >muta..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (25 samples, 0.05%; +0.05%)</title><rect x="639.1" y="437" width="0.6" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="642.08" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (31 samples, 0.06%; +0.01%)</title><rect x="459.8" y="261" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="462.78" y="271.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (59 samples, 0.12%; +0.09%)</title><rect x="171.5" y="133" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="174.53" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (20 samples, 0.04%; +0.01%)</title><rect x="452.9" y="277" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="455.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (10 samples, 0.02%; +0.01%)</title><rect x="452.7" y="277" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="455.67" y="287.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.08%; +0.00%)</title><rect x="753.9" y="309" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="756.94" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (10 samples, 0.02%; -0.01%)</title><rect x="212.9" y="117" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="215.89" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (16 samples, 0.03%; 0.00%)</title><rect x="883.1" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.12" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (330 samples, 0.68%; +0.01%)</title><rect x="551.1" y="405" width="8.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="554.12" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (85 samples, 0.17%; +0.00%)</title><rect x="242.1" y="213" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="245.14" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (5 samples, 0.01%; -0.00%)</title><rect x="606.6" y="437" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="609.61" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (12 samples, 0.02%; 0.00%)</title><rect x="997.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1000.23" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (13 samples, 0.03%; +0.01%)</title><rect x="260.0" y="309" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="263.02" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (9 samples, 0.02%; +0.00%)</title><rect x="902.5" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="905.55" y="415.5" ></text>
</g>
<g >
<title>row_cache::make_reader (474 samples, 0.97%; -0.05%)</title><rect x="532.5" y="341" width="11.4" height="15.0" fill="rgb(183,183,255)" rx="2" ry="2" />
<text  x="535.47" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="527.5" ></text>
</g>
<g >
<title>std::type_info::operator== (15 samples, 0.03%; +0.01%)</title><rect x="1077.1" y="277" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1080.05" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (15 samples, 0.03%; +0.02%)</title><rect x="452.3" y="277" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="455.31" y="287.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%; 0.00%)</title><rect x="213.6" y="165" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="216.64" y="175.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%; -0.01%)</title><rect x="724.1" y="405" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="727.05" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (446 samples, 0.91%; -0.01%)</title><rect x="857.4" y="437" width="10.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="860.45" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.02%; +0.01%)</title><rect x="56.1" y="437" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="59.07" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (104 samples, 0.21%; -0.00%)</title><rect x="719.2" y="437" width="2.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="722.24" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (27 samples, 0.06%; -0.01%)</title><rect x="842.4" y="293" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="845.42" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; +0.01%)</title><rect x="124.6" y="293" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="127.64" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (8 samples, 0.02%; +0.01%)</title><rect x="664.3" y="405" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="667.29" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (10 samples, 0.02%; +0.00%)</title><rect x="863.0" y="421" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="865.96" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (7 samples, 0.01%; +0.00%)</title><rect x="1045.1" y="261" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1048.06" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (14 samples, 0.03%; +0.00%)</title><rect x="160.2" y="197" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="163.19" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (221 samples, 0.45%; +0.01%)</title><rect x="1129.0" y="421" width="5.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1132.05" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (23 samples, 0.05%; +0.00%)</title><rect x="1177.1" y="485" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1180.08" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (205 samples, 0.42%; 0.00%)</title><rect x="14.6" y="437" width="4.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.57" y="447.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,105 samples, 14.57%; +0.06%)</title><rect x="111.6" y="389" width="171.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="114.55" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (13 samples, 0.03%; 0.00%)</title><rect x="560.7" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="563.66" y="415.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (8 samples, 0.02%; -0.00%)</title><rect x="721.3" y="421" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="724.34" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%; 0.00%)</title><rect x="872.9" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.91" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; +0.01%)</title><rect x="625.1" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="628.12" y="447.5" ></text>
</g>
<g >
<title>all (48,768 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (19 samples, 0.04%; -0.01%)</title><rect x="214.1" y="165" width="0.5" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="217.14" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (24 samples, 0.05%; -0.02%)</title><rect x="557.9" y="389" width="0.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="560.87" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (61 samples, 0.13%; +0.01%)</title><rect x="371.3" y="197" width="1.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="374.32" y="207.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="160.8" y="229" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="163.81" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (28 samples, 0.06%; +0.05%)</title><rect x="370.6" y="197" width="0.7" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="373.64" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%; +0.01%)</title><rect x="415.1" y="277" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="418.09" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.00%)</title><rect x="966.7" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="969.74" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (11 samples, 0.02%; +0.02%)</title><rect x="1121.7" y="405" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1124.74" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (28 samples, 0.06%; +0.01%)</title><rect x="814.1" y="149" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="817.09" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="783.6" y="341" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="786.58" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (5 samples, 0.01%; +0.01%)</title><rect x="721.4" y="405" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="724.42" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (51 samples, 0.10%; +0.02%)</title><rect x="778.1" y="325" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="781.08" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (114 samples, 0.23%; +0.01%)</title><rect x="761.6" y="277" width="2.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="764.61" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%; +0.01%)</title><rect x="913.8" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="916.78" y="319.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (6 samples, 0.01%; -0.01%)</title><rect x="1096.2" y="261" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1099.19" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; -0.00%)</title><rect x="580.4" y="293" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="583.35" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%; +0.01%)</title><rect x="1041.5" y="229" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1044.46" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,201 samples, 6.56%; -0.02%)</title><rect x="771.6" y="421" width="77.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="774.55" y="431.5" >cql3::st..</text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (16 samples, 0.03%; +0.03%)</title><rect x="369.8" y="197" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="372.77" y="207.5" ></text>
</g>
<g >
<title>dht::shard_of (10 samples, 0.02%; -0.03%)</title><rect x="1008.1" y="293" width="0.2" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1011.07" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%; +0.02%)</title><rect x="973.4" y="341" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="976.44" y="351.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; +0.00%)</title><rect x="559.1" y="405" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="562.11" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.01%)</title><rect x="810.2" y="213" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="813.24" y="223.5" ></text>
</g>
<g >
<title>database::has_keyspace (117 samples, 0.24%; 0.00%)</title><rect x="865.3" y="405" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="868.29" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.00%)</title><rect x="254.8" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="257.82" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (18 samples, 0.04%; +0.01%)</title><rect x="515.4" y="197" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="518.41" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (6 samples, 0.01%; +0.00%)</title><rect x="734.3" y="437" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="737.29" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; +0.01%)</title><rect x="1037.5" y="133" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1040.47" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.01%; -0.01%)</title><rect x="1094.6" y="277" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1097.57" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (29 samples, 0.06%; 0.00%)</title><rect x="702.1" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.08" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%; +0.02%)</title><rect x="941.9" y="373" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="944.92" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (30 samples, 0.06%; +0.03%)</title><rect x="1097.7" y="309" width="0.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="1100.69" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.02%; +0.01%)</title><rect x="241.6" y="213" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="244.61" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (146 samples, 0.30%; +0.04%)</title><rect x="245.8" y="229" width="3.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="248.82" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (13 samples, 0.03%; +0.00%)</title><rect x="903.8" y="389" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="906.76" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.02%; -0.01%)</title><rect x="776.7" y="309" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="779.73" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,057 samples, 4.22%; +0.01%)</title><rect x="1007.0" y="309" width="49.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1009.98" y="319.5" >servi..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%; +0.00%)</title><rect x="838.6" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="841.65" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (20 samples, 0.04%; +0.02%)</title><rect x="519.3" y="181" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="522.33" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (113 samples, 0.23%; +0.01%)</title><rect x="1096.4" y="325" width="2.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1099.41" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (103 samples, 0.21%; +0.01%)</title><rect x="199.7" y="117" width="2.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="202.72" y="127.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%; -0.01%)</title><rect x="751.4" y="373" width="0.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="754.40" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (9 samples, 0.02%; +0.01%)</title><rect x="849.0" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="852.00" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%; +0.00%)</title><rect x="69.7" y="453" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="72.72" y="463.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; 0.00%)</title><rect x="501.8" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="504.84" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%; +0.02%)</title><rect x="841.1" y="325" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="844.07" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (26 samples, 0.05%; +0.05%)</title><rect x="593.8" y="389" width="0.6" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="596.76" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; -0.00%)</title><rect x="1141.0" y="453" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.95" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (15 samples, 0.03%; +0.03%)</title><rect x="1125.1" y="421" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1128.13" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,799 samples, 11.89%; +0.00%)</title><rect x="734.9" y="469" width="140.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="737.92" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (87 samples, 0.18%; +0.06%)</title><rect x="301.0" y="261" width="2.1" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="304.01" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (38 samples, 0.08%; +0.03%)</title><rect x="486.5" y="197" width="0.9" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="489.50" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (55 samples, 0.11%; +0.00%)</title><rect x="663.2" y="421" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="666.20" y="431.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (9 samples, 0.02%; -0.01%)</title><rect x="1036.0" y="149" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1039.04" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (9 samples, 0.02%; +0.00%)</title><rect x="557.6" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="560.61" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (25 samples, 0.05%; -0.01%)</title><rect x="681.1" y="437" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="684.06" y="447.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%; +0.01%)</title><rect x="441.5" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="444.51" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (69 samples, 0.14%; -0.01%)</title><rect x="722.7" y="437" width="1.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="725.75" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (26 samples, 0.05%; +0.01%)</title><rect x="218.1" y="149" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="221.09" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (24 samples, 0.05%; +0.02%)</title><rect x="544.2" y="341" width="0.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="547.20" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.00%)</title><rect x="303.0" y="245" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="305.99" y="255.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (37 samples, 0.08%; +0.01%)</title><rect x="471.4" y="293" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="474.45" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (9 samples, 0.02%; -0.02%)</title><rect x="400.8" y="245" width="0.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="403.84" y="255.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (15 samples, 0.03%; -0.01%)</title><rect x="520.1" y="213" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="523.06" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (84 samples, 0.17%; -0.03%)</title><rect x="1045.3" y="245" width="2.0" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1048.28" y="255.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (136 samples, 0.28%; +0.01%)</title><rect x="929.9" y="341" width="3.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="932.92" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; +0.00%)</title><rect x="794.0" y="293" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="796.96" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (23 samples, 0.05%; -0.02%)</title><rect x="566.2" y="309" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="569.20" y="319.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (18 samples, 0.04%; +0.01%)</title><rect x="605.5" y="405" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="608.54" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (25 samples, 0.05%; 0.00%)</title><rect x="1141.9" y="341" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; +0.01%)</title><rect x="656.2" y="485" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="659.21" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (12 samples, 0.02%; +0.01%)</title><rect x="57.5" y="453" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="60.47" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (14 samples, 0.03%; +0.01%)</title><rect x="428.0" y="373" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="430.99" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (23 samples, 0.05%; +0.01%)</title><rect x="58.6" y="421" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="61.63" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (86 samples, 0.18%; +0.00%)</title><rect x="983.0" y="325" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="985.95" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (18 samples, 0.04%; -0.02%)</title><rect x="266.5" y="325" width="0.5" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="269.53" y="335.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (49 samples, 0.10%; +0.00%)</title><rect x="934.5" y="373" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="937.49" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (16 samples, 0.03%; 0.00%)</title><rect x="883.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.12" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="74.1" y="453" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="77.14" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (27 samples, 0.06%; 0.00%)</title><rect x="999.6" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1002.65" y="271.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (9 samples, 0.02%; -0.02%)</title><rect x="1081.8" y="309" width="0.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1084.82" y="319.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (35 samples, 0.07%; -0.03%)</title><rect x="1165.0" y="453" width="0.8" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="1167.98" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; 0.00%)</title><rect x="743.0" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.05" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%; -0.03%)</title><rect x="871.3" y="341" width="1.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="874.34" y="351.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (30 samples, 0.06%; +0.00%)</title><rect x="200.1" y="101" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="203.13" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%; +0.00%)</title><rect x="1079.8" y="325" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1082.83" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (33 samples, 0.07%; +0.01%)</title><rect x="101.1" y="437" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="104.07" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (39 samples, 0.08%; +0.01%)</title><rect x="501.6" y="309" width="0.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="504.57" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (6 samples, 0.01%; +0.00%)</title><rect x="439.8" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="442.85" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (790 samples, 1.62%; +0.01%)</title><rect x="125.6" y="309" width="19.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="128.56" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (622 samples, 1.28%; -0.02%)</title><rect x="806.9" y="229" width="15.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="809.90" y="239.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (7 samples, 0.01%; 0.00%)</title><rect x="1141.1" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="223.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (16 samples, 0.03%; +0.00%)</title><rect x="835.2" y="277" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="838.19" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.03%; -0.00%)</title><rect x="652.0" y="485" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="655.00" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (11 samples, 0.02%; -0.00%)</title><rect x="664.7" y="437" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="667.68" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%; +0.01%)</title><rect x="631.2" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="634.21" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (52 samples, 0.11%; -0.00%)</title><rect x="1150.8" y="485" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1153.83" y="495.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (12 samples, 0.02%; +0.01%)</title><rect x="830.9" y="341" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="833.90" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (34 samples, 0.07%; -0.02%)</title><rect x="164.3" y="229" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="167.30" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (49 samples, 0.10%; +0.08%)</title><rect x="467.6" y="325" width="1.2" height="15.0" fill="rgb(255,169,169)" rx="2" ry="2" />
<text  x="470.62" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (46 samples, 0.09%; +0.02%)</title><rect x="615.5" y="437" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="618.53" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; +0.00%)</title><rect x="636.7" y="373" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="639.71" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (20 samples, 0.04%; -0.01%)</title><rect x="1035.6" y="149" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1038.56" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; -0.02%)</title><rect x="1073.4" y="293" width="0.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1076.45" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (23 samples, 0.05%; +0.00%)</title><rect x="1122.6" y="389" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1125.61" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (50 samples, 0.10%; +0.03%)</title><rect x="420.1" y="261" width="1.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="423.10" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (18 samples, 0.04%; +0.02%)</title><rect x="267.0" y="341" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="269.96" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="357" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (34 samples, 0.07%; +0.00%)</title><rect x="883.7" y="437" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="886.72" y="447.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (5 samples, 0.01%; +0.01%)</title><rect x="90.8" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="93.84" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (25 samples, 0.05%; -0.05%)</title><rect x="204.9" y="117" width="0.6" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="207.92" y="127.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (46 samples, 0.09%; -0.01%)</title><rect x="946.3" y="389" width="1.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="949.27" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="629" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>utils::tuple_hash::operator (66 samples, 0.14%; -0.00%)</title><rect x="777.8" y="341" width="1.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="780.82" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%; -0.01%)</title><rect x="782.9" y="357" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="785.85" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (77 samples, 0.16%; -0.01%)</title><rect x="236.2" y="213" width="1.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="239.21" y="223.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="485" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (55 samples, 0.11%; +0.01%)</title><rect x="1162.4" y="453" width="1.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1165.42" y="463.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (17 samples, 0.03%; +0.01%)</title><rect x="522.5" y="229" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="525.45" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%; 0.00%)</title><rect x="281.3" y="325" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="284.29" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (42 samples, 0.09%; +0.04%)</title><rect x="320.9" y="181" width="1.0" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="323.92" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%; +0.01%)</title><rect x="531.4" y="325" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="534.40" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (66 samples, 0.14%; -0.01%)</title><rect x="570.6" y="309" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="573.55" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.01%; 0.00%)</title><rect x="18.8" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.83" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (7 samples, 0.01%; +0.00%)</title><rect x="546.9" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="549.94" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%; -0.01%)</title><rect x="447.8" y="245" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="450.81" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (11 samples, 0.02%; -0.01%)</title><rect x="142.2" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="145.18" y="271.5" ></text>
</g>
<g >
<title>operator new (132 samples, 0.27%; +0.01%)</title><rect x="1014.8" y="277" width="3.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1017.84" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (63 samples, 0.13%; -0.01%)</title><rect x="236.5" y="181" width="1.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="239.55" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (7 samples, 0.01%; +0.00%)</title><rect x="1018.2" y="277" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1021.16" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="528.5" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="531.55" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (37 samples, 0.08%; -0.00%)</title><rect x="817.6" y="133" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="820.57" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.03%; +0.01%)</title><rect x="820.1" y="85" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="823.09" y="95.5" ></text>
</g>
<g >
<title>dht::tri_compare (120 samples, 0.25%; -0.02%)</title><rect x="1086.7" y="229" width="2.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1089.66" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (84 samples, 0.17%; -0.01%)</title><rect x="1134.7" y="421" width="2.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1137.66" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (7 samples, 0.01%; -0.00%)</title><rect x="461.3" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="464.31" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%; +0.01%)</title><rect x="218.0" y="149" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="220.97" y="159.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (6 samples, 0.01%; +0.01%)</title><rect x="22.2" y="517" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="25.22" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%; -0.01%)</title><rect x="245.4" y="245" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="248.43" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%; +0.00%)</title><rect x="1049.2" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1052.15" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.01%)</title><rect x="501.8" y="277" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="504.84" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (11 samples, 0.02%; +0.00%)</title><rect x="609.3" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="612.29" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (15 samples, 0.03%; +0.00%)</title><rect x="667.0" y="389" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="669.98" y="399.5" ></text>
</g>
<g >
<title>perf_simple_que (48,766 samples, 100.00%; 0.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (81 samples, 0.17%; +0.01%)</title><rect x="552.0" y="389" width="1.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="554.97" y="399.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; -0.01%)</title><rect x="416.4" y="293" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="419.38" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,791 samples, 3.67%; +0.02%)</title><rect x="325.9" y="197" width="43.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="328.91" y="207.5" >muta..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%; -0.00%)</title><rect x="508.9" y="261" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="511.90" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (31 samples, 0.06%; +0.03%)</title><rect x="1106.8" y="357" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1109.77" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (388 samples, 0.80%; -0.01%)</title><rect x="595.3" y="437" width="9.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="598.28" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (65 samples, 0.13%; 0.00%)</title><rect x="808.4" y="181" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="811.38" y="191.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (13 samples, 0.03%; +0.02%)</title><rect x="565.1" y="341" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="568.08" y="351.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; -0.03%)</title><rect x="156.7" y="197" width="0.5" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="159.68" y="207.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; +0.01%)</title><rect x="628.1" y="389" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="631.14" y="399.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (9 samples, 0.02%; -0.03%)</title><rect x="1080.4" y="325" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1083.37" y="335.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (25 samples, 0.05%; +0.01%)</title><rect x="230.3" y="229" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="233.28" y="239.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="591.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (15 samples, 0.03%; +0.01%)</title><rect x="1104.0" y="341" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1107.01" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (104 samples, 0.21%; -0.01%)</title><rect x="35.0" y="453" width="2.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="38.02" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (64 samples, 0.13%; 0.00%)</title><rect x="14.8" y="341" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.82" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (64 samples, 0.13%; +0.03%)</title><rect x="796.2" y="309" width="1.5" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="799.16" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (104 samples, 0.21%; +0.00%)</title><rect x="845.2" y="357" width="2.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="848.16" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.01%; +0.01%)</title><rect x="278.8" y="277" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="281.82" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type&gt; (7 samples, 0.01%; +0.01%)</title><rect x="729.2" y="501" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="732.18" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (50 samples, 0.10%; 0.00%)</title><rect x="510.2" y="245" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="513.23" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (53 samples, 0.11%; +0.01%)</title><rect x="808.6" y="165" width="1.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="811.57" y="175.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (27 samples, 0.06%; +0.01%)</title><rect x="317.1" y="181" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="320.12" y="191.5" ></text>
</g>
<g >
<title>main (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="613" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="623.5" >main</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (13 samples, 0.03%; +0.03%)</title><rect x="618.5" y="437" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="621.49" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (22 samples, 0.05%; -0.00%)</title><rect x="779.7" y="405" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="782.71" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="553.7" y="357" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="556.74" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (15 samples, 0.03%; -0.00%)</title><rect x="503.1" y="309" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="506.12" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%; +0.01%)</title><rect x="619.0" y="421" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="621.99" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (8 samples, 0.02%; 0.00%)</title><rect x="662.3" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.26" y="383.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (42 samples, 0.09%; -0.03%)</title><rect x="762.6" y="261" width="1.0" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="765.62" y="271.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (49 samples, 0.10%; +0.01%)</title><rect x="856.0" y="437" width="1.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="859.02" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%; -0.01%)</title><rect x="214.4" y="133" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="217.41" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (20 samples, 0.04%; +0.01%)</title><rect x="723.7" y="421" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="726.72" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (12 samples, 0.02%; +0.02%)</title><rect x="213.3" y="165" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="216.34" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (166 samples, 0.34%; +0.03%)</title><rect x="627.1" y="421" width="4.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="630.15" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (58 samples, 0.12%; +0.09%)</title><rect x="257.6" y="293" width="1.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="260.55" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (13 samples, 0.03%; 0.00%)</title><rect x="232.3" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="235.27" y="255.5" ></text>
</g>
<g >
<title>operator new (58 samples, 0.12%; -0.00%)</title><rect x="799.7" y="277" width="1.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="802.72" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (15 samples, 0.03%; +0.00%)</title><rect x="74.4" y="453" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="77.36" y="463.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (27 samples, 0.06%; 0.00%)</title><rect x="702.1" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.08" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%; -0.00%)</title><rect x="923.4" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="926.36" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (12 samples, 0.02%; -0.00%)</title><rect x="855.3" y="437" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="858.29" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (25 samples, 0.05%; +0.00%)</title><rect x="571.5" y="293" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="574.55" y="303.5" ></text>
</g>
<g >
<title>database::do_apply (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="351.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (84 samples, 0.17%; +0.01%)</title><rect x="535.7" y="309" width="2.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="538.73" y="319.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; +0.01%)</title><rect x="1156.0" y="437" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1159.03" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (199 samples, 0.41%; -0.02%)</title><rect x="1089.7" y="277" width="4.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1092.71" y="287.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (81 samples, 0.17%; +0.00%)</title><rect x="877.7" y="469" width="1.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="880.68" y="479.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%; 0.00%)</title><rect x="702.2" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.16" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (19 samples, 0.04%; +0.00%)</title><rect x="160.1" y="213" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="163.09" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (22 samples, 0.05%; -0.00%)</title><rect x="318.2" y="181" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="321.24" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (49 samples, 0.10%; +0.00%)</title><rect x="685.9" y="485" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="688.87" y="495.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (8 samples, 0.02%; +0.01%)</title><rect x="925.9" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="928.95" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; 0.00%)</title><rect x="675.7" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="678.71" y="495.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%; -0.00%)</title><rect x="972.2" y="373" width="2.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="975.23" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (96 samples, 0.20%; -0.01%)</title><rect x="670.5" y="469" width="2.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="673.51" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (8 samples, 0.02%; +0.00%)</title><rect x="493.0" y="325" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="495.96" y="335.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%; -0.01%)</title><rect x="741.6" y="293" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="744.62" y="303.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.02%; 0.00%)</title><rect x="687.3" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="690.28" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (12 samples, 0.02%; -0.00%)</title><rect x="216.4" y="149" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="219.42" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%; -0.02%)</title><rect x="259.0" y="309" width="0.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="261.98" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="987.8" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="990.82" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (6 samples, 0.01%; +0.00%)</title><rect x="396.6" y="229" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="399.63" y="239.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (34 samples, 0.07%; +0.03%)</title><rect x="315.4" y="165" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="318.36" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,846 samples, 5.84%; +0.01%)</title><rect x="988.4" y="357" width="68.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="991.40" y="367.5" >service..</text>
</g>
<g >
<title>seastar::memory::allocate (76 samples, 0.16%; -0.04%)</title><rect x="556.0" y="325" width="1.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="559.01" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (15 samples, 0.03%; -0.02%)</title><rect x="440.2" y="341" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="443.16" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (27 samples, 0.06%; +0.00%)</title><rect x="255.0" y="277" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="257.99" y="287.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (12 samples, 0.02%; +0.00%)</title><rect x="1097.2" y="309" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1100.21" y="319.5" ></text>
</g>
<g >
<title>validation::validate_column_family (366 samples, 0.75%; +0.01%)</title><rect x="838.8" y="389" width="8.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="841.82" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (341 samples, 0.70%; +0.00%)</title><rect x="906.7" y="341" width="8.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="909.69" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (264 samples, 0.54%; +0.01%)</title><rect x="758.0" y="357" width="6.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="761.03" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (5 samples, 0.01%; +0.00%)</title><rect x="729.1" y="501" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="732.06" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (16 samples, 0.03%; +0.03%)</title><rect x="622.9" y="437" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="625.87" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (126 samples, 0.26%; -0.01%)</title><rect x="1051.5" y="277" width="3.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1054.45" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (7 samples, 0.01%; 0.00%)</title><rect x="627.7" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="630.66" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (188 samples, 0.39%; -0.01%)</title><rect x="600.1" y="421" width="4.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="603.12" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%; +0.01%)</title><rect x="736.3" y="453" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="739.32" y="463.5" ></text>
</g>
<g >
<title>sstring_hash::operator (21 samples, 0.04%; +0.00%)</title><rect x="846.9" y="309" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="849.92" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (6 samples, 0.01%; +0.01%)</title><rect x="945.2" y="389" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="948.23" y="399.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.18%; -0.01%)</title><rect x="1045.2" y="261" width="2.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1048.23" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (21 samples, 0.04%; -0.00%)</title><rect x="582.1" y="341" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="585.07" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; +0.00%)</title><rect x="517.6" y="181" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="520.61" y="191.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.01%; +0.01%)</title><rect x="744.7" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="747.74" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (5 samples, 0.01%; 0.00%)</title><rect x="461.5" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="464.48" y="287.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (11 samples, 0.02%; +0.01%)</title><rect x="209.6" y="117" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="212.57" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (8 samples, 0.02%; -0.02%)</title><rect x="372.4" y="149" width="0.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="375.43" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; +0.02%)</title><rect x="610.7" y="357" width="0.7" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="613.69" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (14 samples, 0.03%; +0.01%)</title><rect x="325.6" y="197" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="328.57" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_18prepare_expressionERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_4ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_5ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_6ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_7ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_8ZNS5_18prepare_expressionESA_SC_SH_SK_E3$_9ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_10ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_11ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_12ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_13ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_14ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_15ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_16ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_17ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_18ZNS5_18prepare_expressionESA_SC_SH_SK_E4$_19EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (7 samples, 0.01%; 0.00%)</title><rect x="19.7" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (81 samples, 0.17%; -0.00%)</title><rect x="948.2" y="389" width="1.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="951.16" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (35 samples, 0.07%; -0.01%)</title><rect x="636.6" y="405" width="0.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="639.56" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%; +0.02%)</title><rect x="295.8" y="245" width="0.6" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="298.78" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%; 0.00%)</title><rect x="124.4" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="127.45" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (41 samples, 0.08%; -0.01%)</title><rect x="228.0" y="213" width="1.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="231.03" y="223.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (11 samples, 0.02%; +0.01%)</title><rect x="14.2" y="501" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="17.21" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (33 samples, 0.07%; +0.05%)</title><rect x="516.0" y="213" width="0.8" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="519.02" y="223.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (11 samples, 0.02%; +0.02%)</title><rect x="897.6" y="421" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="900.61" y="431.5" ></text>
</g>
<g >
<title>auth::resource::parent (105 samples, 0.22%; -0.00%)</title><rect x="795.3" y="325" width="2.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="798.34" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.03%; 0.00%)</title><rect x="90.4" y="437" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="93.43" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (93 samples, 0.19%; -0.00%)</title><rect x="304.7" y="245" width="2.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="307.73" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (155 samples, 0.32%; +0.01%)</title><rect x="216.9" y="165" width="3.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="219.88" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="389" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (25 samples, 0.05%; -0.01%)</title><rect x="49.5" y="469" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="52.49" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%; +0.01%)</title><rect x="635.2" y="389" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="638.16" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%; 0.00%)</title><rect x="883.1" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.14" y="367.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (11 samples, 0.02%; 0.00%)</title><rect x="702.8" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.81" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (8 samples, 0.02%; +0.00%)</title><rect x="1068.1" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1071.08" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%; +0.00%)</title><rect x="1040.7" y="213" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1043.73" y="223.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (5 samples, 0.01%; 0.00%)</title><rect x="20.7" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.67" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%; -0.01%)</title><rect x="224.3" y="181" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="227.26" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (10 samples, 0.02%; +0.00%)</title><rect x="847.7" y="405" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="850.70" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%; -0.04%)</title><rect x="454.3" y="293" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="457.34" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%; +0.00%)</title><rect x="660.3" y="469" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="663.27" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (90 samples, 0.18%; +0.00%)</title><rect x="845.3" y="341" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="848.33" y="351.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (508 samples, 1.04%; +0.01%)</title><rect x="480.7" y="309" width="12.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="483.66" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (31 samples, 0.06%; +0.01%)</title><rect x="642.7" y="485" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="645.73" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (28 samples, 0.06%; 0.00%)</title><rect x="794.6" y="293" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="797.56" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (288 samples, 0.59%; -0.06%)</title><rect x="189.5" y="85" width="7.0" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="192.49" y="95.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (6 samples, 0.01%; -0.01%)</title><rect x="902.8" y="405" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="905.77" y="415.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%; +0.01%)</title><rect x="1044.3" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1047.29" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%; +0.00%)</title><rect x="463.1" y="309" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="466.12" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (29 samples, 0.06%; -0.00%)</title><rect x="550.1" y="421" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="553.08" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (11 samples, 0.02%; -0.09%)</title><rect x="70.4" y="453" width="0.3" height="15.0" fill="rgb(163,163,255)" rx="2" ry="2" />
<text  x="73.44" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (10 samples, 0.02%; +0.02%)</title><rect x="494.5" y="325" width="0.2" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="497.50" y="335.5" ></text>
</g>
<g >
<title>std::type_info::operator== (9 samples, 0.02%; +0.01%)</title><rect x="1174.2" y="405" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1177.18" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (8 samples, 0.02%; +0.00%)</title><rect x="369.6" y="197" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="372.58" y="207.5" ></text>
</g>
<g >
<title>dht::tri_compare (15 samples, 0.03%; -0.01%)</title><rect x="492.5" y="277" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="495.50" y="287.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (19 samples, 0.04%; -0.03%)</title><rect x="312.3" y="165" width="0.5" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="315.31" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; 0.00%)</title><rect x="830.3" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="833.28" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="266.3" y="309" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="269.26" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (813 samples, 1.67%; +0.03%)</title><rect x="562.9" y="373" width="19.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="565.93" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,760 samples, 9.76%; -0.02%)</title><rect x="299.0" y="277" width="115.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="302.02" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%; -0.00%)</title><rect x="685.1" y="485" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="688.10" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1142.2" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%; +0.00%)</title><rect x="618.3" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="621.34" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (204 samples, 0.42%; -0.01%)</title><rect x="152.3" y="229" width="4.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="155.30" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (68 samples, 0.14%; -0.01%)</title><rect x="247.4" y="213" width="1.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="250.36" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.02%; +0.00%)</title><rect x="1101.6" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1104.64" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (139 samples, 0.29%; -0.00%)</title><rect x="575.8" y="293" width="3.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="578.76" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (5 samples, 0.01%; +0.01%)</title><rect x="974.7" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="977.73" y="383.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (22 samples, 0.05%; -0.00%)</title><rect x="834.3" y="293" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="837.32" y="303.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%; +0.00%)</title><rect x="1097.5" y="309" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1100.50" y="319.5" ></text>
</g>
<g >
<title>row::row (26 samples, 0.05%; +0.01%)</title><rect x="248.3" y="197" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="251.31" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (14 samples, 0.03%; +0.01%)</title><rect x="850.5" y="389" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="853.45" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%; -0.01%)</title><rect x="901.1" y="421" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="904.10" y="431.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (14 samples, 0.03%; 0.00%)</title><rect x="1177.2" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.15" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (10 samples, 0.02%; 0.00%)</title><rect x="883.9" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.87" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; 0.00%)</title><rect x="843.2" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.17" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (48 samples, 0.10%; -0.02%)</title><rect x="1135.4" y="389" width="1.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1138.36" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (54 samples, 0.11%; +0.00%)</title><rect x="333.1" y="181" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="336.14" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.01%)</title><rect x="46.7" y="485" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="49.66" y="495.5" ></text>
</g>
<g >
<title>free (114 samples, 0.23%; -0.01%)</title><rect x="405.2" y="181" width="2.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="408.24" y="191.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (23 samples, 0.05%; -0.03%)</title><rect x="338.1" y="181" width="0.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="341.05" y="191.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (39 samples, 0.08%; +0.01%)</title><rect x="694.1" y="453" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="697.10" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="702.1" y="421" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.11" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (14 samples, 0.03%; -0.00%)</title><rect x="675.9" y="485" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="678.93" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (14 samples, 0.03%; -0.00%)</title><rect x="820.8" y="85" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="823.81" y="95.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (32 samples, 0.07%; +0.03%)</title><rect x="451.5" y="277" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="454.46" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%; -0.00%)</title><rect x="851.4" y="421" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="854.40" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="695.1" y="485" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="698.07" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="975.4" y="373" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="978.43" y="383.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,481 samples, 3.04%; -0.00%)</title><rect x="170.4" y="165" width="35.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="173.42" y="175.5" >clu..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; +0.00%)</title><rect x="859.3" y="341" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="862.29" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; -0.00%)</title><rect x="485.9" y="213" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="488.87" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%; -0.01%)</title><rect x="858.0" y="389" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="860.98" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (352 samples, 0.72%; -0.00%)</title><rect x="906.4" y="357" width="8.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="909.42" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (16 samples, 0.03%; +0.00%)</title><rect x="283.9" y="373" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="286.93" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (19 samples, 0.04%; -0.00%)</title><rect x="255.6" y="277" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="258.64" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (42 samples, 0.09%; +0.00%)</title><rect x="237.1" y="165" width="1.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="240.06" y="175.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%; -0.01%)</title><rect x="219.4" y="117" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="222.44" y="127.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (58 samples, 0.12%; +0.00%)</title><rect x="963.1" y="357" width="1.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="966.11" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (36 samples, 0.07%; -0.00%)</title><rect x="673.9" y="485" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="676.94" y="495.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (9 samples, 0.02%; +0.00%)</title><rect x="759.5" y="277" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="762.55" y="287.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (115 samples, 0.24%; +0.02%)</title><rect x="354.7" y="165" width="2.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="357.67" y="175.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%; -0.00%)</title><rect x="97.3" y="389" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="100.35" y="399.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (111 samples, 0.23%; -0.01%)</title><rect x="423.1" y="373" width="2.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="426.10" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::consume (5 samples, 0.01%; -0.00%)</title><rect x="702.3" y="277" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="705.28" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="1175.5" y="501" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1178.51" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="854.5" y="357" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="857.50" y="367.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (12 samples, 0.02%; +0.01%)</title><rect x="1055.1" y="277" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1058.11" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (31 samples, 0.06%; -0.00%)</title><rect x="887.7" y="469" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="890.67" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (108 samples, 0.22%; -0.02%)</title><rect x="448.2" y="277" width="2.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="451.22" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="691.9" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="694.95" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (555 samples, 1.14%; +0.01%)</title><rect x="268.5" y="357" width="13.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="271.46" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (12 samples, 0.02%; +0.01%)</title><rect x="247.8" y="197" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="250.85" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (11 samples, 0.02%; -0.05%)</title><rect x="261.7" y="325" width="0.3" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="264.74" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (99 samples, 0.20%; -0.01%)</title><rect x="224.6" y="181" width="2.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="227.64" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="581.9" y="325" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="584.90" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (18 samples, 0.04%; +0.00%)</title><rect x="71.8" y="453" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="74.77" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (11 samples, 0.02%; +0.00%)</title><rect x="23.2" y="517" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="26.19" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (22 samples, 0.05%; -0.04%)</title><rect x="776.5" y="325" width="0.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="779.46" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="223.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,597 samples, 3.27%; +0.01%)</title><rect x="792.3" y="341" width="38.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="795.26" y="351.5" >ser..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,185 samples, 2.43%; -0.03%)</title><rect x="1146.3" y="501" width="28.7" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1149.30" y="511.5" >se..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.06%; -0.01%)</title><rect x="395.7" y="229" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="398.74" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (93 samples, 0.19%; +0.01%)</title><rect x="951.8" y="389" width="2.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="954.84" y="399.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; +0.00%)</title><rect x="527.9" y="277" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="530.94" y="287.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (332 samples, 0.68%; -0.00%)</title><rect x="484.4" y="261" width="8.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="487.37" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (88 samples, 0.18%; +0.01%)</title><rect x="990.9" y="309" width="2.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="993.87" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,393 samples, 11.06%; -0.04%)</title><rect x="975.7" y="373" width="130.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="978.69" y="383.5" >service::storage..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="575.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,358 samples, 8.94%; -0.01%)</title><rect x="145.1" y="293" width="105.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="148.11" y="303.5" >seastar::do_..</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%; 0.00%)</title><rect x="866.6" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="869.64" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (41 samples, 0.08%; 0.00%)</title><rect x="19.6" y="469" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.56" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (20 samples, 0.04%; -0.00%)</title><rect x="141.3" y="245" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="144.34" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (104 samples, 0.21%; -0.00%)</title><rect x="488.7" y="197" width="2.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="491.70" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="914.7" y="325" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="917.72" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; -0.00%)</title><rect x="580.8" y="293" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="583.84" y="303.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (7 samples, 0.01%; -0.03%)</title><rect x="408.6" y="197" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="411.61" y="207.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (286 samples, 0.59%; -0.00%)</title><rect x="485.5" y="229" width="6.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="488.48" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (68 samples, 0.14%; +0.01%)</title><rect x="242.5" y="197" width="1.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="245.55" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%; +0.00%)</title><rect x="640.4" y="469" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="643.43" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.03%; +0.00%)</title><rect x="928.7" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="931.68" y="367.5" ></text>
</g>
<g >
<title>seastar::gate::enter (7 samples, 0.01%; -0.01%)</title><rect x="1044.9" y="229" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1047.90" y="239.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (70 samples, 0.14%; -0.01%)</title><rect x="236.4" y="197" width="1.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="239.38" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; +0.01%)</title><rect x="955.9" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="958.93" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (36 samples, 0.07%; -0.01%)</title><rect x="803.6" y="245" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="806.56" y="255.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (5 samples, 0.01%; +0.01%)</title><rect x="835.8" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="838.82" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (11 samples, 0.02%; +0.00%)</title><rect x="302.7" y="245" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="305.73" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (22 samples, 0.05%; 0.00%)</title><rect x="407.5" y="165" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="410.47" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (35 samples, 0.07%; -0.01%)</title><rect x="794.4" y="309" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="797.44" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (41 samples, 0.08%; +0.02%)</title><rect x="1167.1" y="485" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1170.06" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (28 samples, 0.06%; +0.03%)</title><rect x="676.9" y="485" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="679.94" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (70 samples, 0.14%; +0.01%)</title><rect x="954.5" y="357" width="1.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="957.52" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (76 samples, 0.16%; 0.00%)</title><rect x="152.6" y="213" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.64" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="822.5" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="825.48" y="239.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (768 samples, 1.57%; -0.00%)</title><rect x="564.0" y="357" width="18.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="567.02" y="367.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%; +0.01%)</title><rect x="450.8" y="277" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="453.83" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (25 samples, 0.05%; -0.02%)</title><rect x="752.3" y="389" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="755.32" y="399.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (124 samples, 0.25%; +0.00%)</title><rect x="276.0" y="293" width="3.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="278.99" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; -0.02%)</title><rect x="555.1" y="341" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="558.14" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.02%)</title><rect x="635.5" y="437" width="0.2" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="638.54" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (14 samples, 0.03%; +0.01%)</title><rect x="1032.1" y="197" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1035.07" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (188 samples, 0.39%; -0.00%)</title><rect x="14.8" y="389" width="4.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="17.82" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (71 samples, 0.15%; 0.00%)</title><rect x="1168.2" y="485" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1171.18" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (5 samples, 0.01%; +0.01%)</title><rect x="1070.2" y="341" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1073.16" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (31 samples, 0.06%; +0.04%)</title><rect x="458.1" y="261" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="461.07" y="271.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (29 samples, 0.06%; -0.01%)</title><rect x="1067.3" y="277" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1070.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (13 samples, 0.03%; +0.01%)</title><rect x="945.1" y="405" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="948.06" y="415.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; -0.00%)</title><rect x="148.5" y="229" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="151.47" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (24 samples, 0.05%; +0.00%)</title><rect x="573.0" y="293" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="576.02" y="303.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%; +0.01%)</title><rect x="467.4" y="325" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="470.36" y="335.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (6 samples, 0.01%; -0.01%)</title><rect x="394.0" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="396.97" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%; +0.00%)</title><rect x="1109.5" y="357" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1112.52" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (237 samples, 0.49%; +0.02%)</title><rect x="951.4" y="405" width="5.7" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="954.38" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (10 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.94" y="479.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,265 samples, 2.59%; -0.03%)</title><rect x="798.4" y="325" width="30.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="801.41" y="335.5" >st..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="413.2" y="245" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="416.16" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (10 samples, 0.02%; -0.01%)</title><rect x="1152.4" y="485" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1155.42" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.00%)</title><rect x="913.1" y="261" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="916.07" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (43 samples, 0.09%; +0.01%)</title><rect x="646.2" y="485" width="1.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="649.19" y="495.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (11 samples, 0.02%; +0.00%)</title><rect x="396.8" y="229" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="399.80" y="239.5" ></text>
</g>
<g >
<title>dht::shard_of (26 samples, 0.05%; -0.01%)</title><rect x="1012.9" y="277" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1015.93" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (86 samples, 0.18%; -0.01%)</title><rect x="682.9" y="485" width="2.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="685.87" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%; +0.00%)</title><rect x="720.1" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="723.13" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (29 samples, 0.06%; -0.01%)</title><rect x="843.8" y="293" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="846.80" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%; -0.03%)</title><rect x="542.7" y="245" width="0.3" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="545.68" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="665.6" y="453" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="668.60" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (12 samples, 0.02%; -0.00%)</title><rect x="710.1" y="453" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="713.12" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (36 samples, 0.07%; -0.01%)</title><rect x="527.7" y="293" width="0.8" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="530.68" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (206 samples, 0.42%; 0.00%)</title><rect x="14.6" y="453" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.57" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (28 samples, 0.06%; -0.00%)</title><rect x="430.3" y="405" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="433.31" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (8 samples, 0.02%; +0.01%)</title><rect x="1040.2" y="197" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1043.20" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%; 0.00%)</title><rect x="16.5" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.53" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (5 samples, 0.01%; +0.00%)</title><rect x="111.4" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="114.43" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (12 samples, 0.02%; 0.00%)</title><rect x="884.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.14" y="399.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (71 samples, 0.15%; -0.01%)</title><rect x="732.5" y="437" width="1.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="735.55" y="447.5" ></text>
</g>
<g >
<title>service::client_state::has_access (5 samples, 0.01%; 0.00%)</title><rect x="20.7" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.67" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%; -0.01%)</title><rect x="173.0" y="133" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="175.96" y="143.5" ></text>
</g>
<g >
<title>schema::position (13 samples, 0.03%; +0.01%)</title><rect x="1127.8" y="421" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1130.77" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (30 samples, 0.06%; +0.02%)</title><rect x="578.3" y="261" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="581.32" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%; +0.00%)</title><rect x="865.5" y="373" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.53" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (8 samples, 0.02%; +0.01%)</title><rect x="1174.6" y="421" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1177.56" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (23 samples, 0.05%; -0.00%)</title><rect x="623.6" y="421" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="626.64" y="431.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (32 samples, 0.07%; +0.06%)</title><rect x="1104.8" y="357" width="0.8" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1107.81" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.00%)</title><rect x="395.4" y="181" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="398.42" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (13 samples, 0.03%; -0.01%)</title><rect x="112.3" y="373" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="115.35" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (16 samples, 0.03%; -0.01%)</title><rect x="713.1" y="469" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="716.09" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (12 samples, 0.02%; 0.00%)</title><rect x="143.9" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="146.85" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%; -0.00%)</title><rect x="1077.9" y="293" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1080.92" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%; +0.01%)</title><rect x="1047.8" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1050.75" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%; 0.00%)</title><rect x="883.1" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.14" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (7 samples, 0.01%; +0.01%)</title><rect x="318.1" y="181" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="321.07" y="191.5" ></text>
</g>
<g >
<title>database::apply_in_memory (28 samples, 0.06%; 0.00%)</title><rect x="1141.1" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (34 samples, 0.07%; 0.00%)</title><rect x="883.7" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.72" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (52 samples, 0.11%; -0.00%)</title><rect x="776.3" y="341" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="779.34" y="351.5" ></text>
</g>
<g >
<title>operator delete (80 samples, 0.16%; +0.03%)</title><rect x="91.0" y="437" width="1.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="93.96" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="628.6" y="373" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="631.60" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (48 samples, 0.10%; -0.00%)</title><rect x="661.6" y="421" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="664.58" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; +0.01%)</title><rect x="758.9" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="761.87" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (498 samples, 1.02%; 0.00%)</title><rect x="233.1" y="261" width="12.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="236.06" y="271.5" ></text>
</g>
<g >
<title>row::compact_and_expire (857 samples, 1.76%; -0.03%)</title><rect x="373.2" y="213" width="20.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="376.23" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="933.7" y="389" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="936.71" y="399.5" ></text>
</g>
<g >
<title>validation::validate_column_family (26 samples, 0.05%; +0.01%)</title><rect x="848.4" y="405" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="851.37" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (77 samples, 0.16%; +0.00%)</title><rect x="772.8" y="357" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="775.81" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (12 samples, 0.02%; -0.07%)</title><rect x="323.9" y="197" width="0.3" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="326.87" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%; -0.00%)</title><rect x="159.4" y="181" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="162.39" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (26 samples, 0.05%; +0.01%)</title><rect x="143.2" y="261" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="146.22" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%; +0.01%)</title><rect x="732.9" y="405" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="735.89" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%; +0.01%)</title><rect x="1161.1" y="405" width="0.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1164.06" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (104 samples, 0.21%; +0.03%)</title><rect x="1101.9" y="357" width="2.5" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1104.85" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (20 samples, 0.04%; +0.02%)</title><rect x="1116.7" y="357" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1119.71" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; 0.00%)</title><rect x="698.3" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.26" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.02%; +0.00%)</title><rect x="985.3" y="341" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="988.30" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (143 samples, 0.29%; +0.01%)</title><rect x="457.1" y="277" width="3.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="460.07" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; -0.00%)</title><rect x="247.2" y="213" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="250.17" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (49 samples, 0.10%; +0.01%)</title><rect x="666.7" y="405" width="1.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="669.68" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (29 samples, 0.06%; -0.00%)</title><rect x="1037.3" y="149" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1040.32" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (44 samples, 0.09%; -0.02%)</title><rect x="740.8" y="341" width="1.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="743.80" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (32 samples, 0.07%; -0.01%)</title><rect x="519.0" y="197" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="522.04" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%; +0.02%)</title><rect x="1123.4" y="389" width="0.4" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1126.36" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (8 samples, 0.02%; -0.00%)</title><rect x="1142.4" y="213" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1145.36" y="223.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="939.5" y="325" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="942.50" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (17 samples, 0.03%; -0.00%)</title><rect x="720.9" y="421" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="723.93" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%; +0.01%)</title><rect x="1072.3" y="309" width="1.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1075.26" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (27 samples, 0.06%; -0.01%)</title><rect x="652.6" y="485" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="655.63" y="495.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; -0.01%)</title><rect x="535.6" y="309" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="538.59" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (36 samples, 0.07%; +0.02%)</title><rect x="591.3" y="357" width="0.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="594.34" y="367.5" ></text>
</g>
<g >
<title>auth::resource::resource (98 samples, 0.20%; -0.02%)</title><rect x="785.1" y="389" width="2.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="788.05" y="399.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (13 samples, 0.03%; +0.01%)</title><rect x="336.8" y="181" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="339.79" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%; 0.00%)</title><rect x="293.0" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="295.97" y="319.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%; +0.01%)</title><rect x="493.9" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="496.92" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="683.5" y="469" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="686.53" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (37 samples, 0.08%; -0.06%)</title><rect x="916.0" y="357" width="0.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="919.03" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (39 samples, 0.08%; +0.00%)</title><rect x="822.7" y="245" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="825.68" y="255.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%; +0.01%)</title><rect x="978.9" y="357" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="981.89" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.04%; -0.01%)</title><rect x="1168.5" y="469" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1171.47" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (25 samples, 0.05%; -0.00%)</title><rect x="918.4" y="325" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="921.42" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.01%)</title><rect x="603.3" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="606.29" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (192 samples, 0.39%; -0.01%)</title><rect x="1170.3" y="469" width="4.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1173.33" y="479.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%; -0.04%)</title><rect x="55.5" y="453" width="0.9" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="58.46" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (15 samples, 0.03%; -0.01%)</title><rect x="513.2" y="229" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="516.23" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (38 samples, 0.08%; +0.03%)</title><rect x="507.2" y="277" width="0.9" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="510.18" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (108 samples, 0.22%; -0.01%)</title><rect x="1119.0" y="373" width="2.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1122.03" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (5 samples, 0.01%; +0.01%)</title><rect x="429.7" y="405" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="432.68" y="415.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; +0.01%)</title><rect x="92.9" y="437" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="95.90" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (19 samples, 0.04%; -0.01%)</title><rect x="520.8" y="245" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="523.78" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (18 samples, 0.04%; -0.01%)</title><rect x="667.4" y="389" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="670.39" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%; 0.00%)</title><rect x="17.2" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.21" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%; +0.01%)</title><rect x="784.9" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="787.88" y="367.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; +0.00%)</title><rect x="871.3" y="357" width="1.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="874.31" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; -0.01%)</title><rect x="914.9" y="357" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="917.94" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="592.4" y="373" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="595.38" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (6 samples, 0.01%; +0.00%)</title><rect x="663.6" y="389" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="666.61" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,986 samples, 4.07%; -0.01%)</title><rect x="787.7" y="389" width="48.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="790.67" y="399.5" >std:..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (27 samples, 0.06%; +0.00%)</title><rect x="1133.5" y="389" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1136.48" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (8 samples, 0.02%; -0.02%)</title><rect x="721.2" y="405" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="724.15" y="415.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%; -0.00%)</title><rect x="556.0" y="341" width="1.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="559.01" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (83 samples, 0.17%; +0.01%)</title><rect x="582.8" y="373" width="2.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="585.84" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (47,789 samples, 97.99%; -0.00%)</title><rect x="21.3" y="533" width="1156.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="24.32" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%; +0.01%)</title><rect x="771.1" y="405" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="774.12" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (23 samples, 0.05%; +0.01%)</title><rect x="1171.3" y="453" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1174.27" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.01%; +0.01%)</title><rect x="56.5" y="453" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="59.46" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (9 samples, 0.02%; +0.00%)</title><rect x="877.2" y="421" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="880.22" y="431.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (5 samples, 0.01%; +0.01%)</title><rect x="872.6" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="875.57" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (10 samples, 0.02%; +0.02%)</title><rect x="579.3" y="277" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="582.31" y="287.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (81 samples, 0.17%; +0.01%)</title><rect x="802.5" y="261" width="2.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="805.52" y="271.5" ></text>
</g>
<g >
<title>row::row (8 samples, 0.02%; +0.02%)</title><rect x="215.3" y="165" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="218.26" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.02%)</title><rect x="543.1" y="277" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="546.11" y="287.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (197 samples, 0.40%; -0.02%)</title><rect x="359.2" y="165" width="4.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="362.20" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (38 samples, 0.08%; -0.01%)</title><rect x="595.7" y="421" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="598.69" y="431.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (12 samples, 0.02%; -0.03%)</title><rect x="358.9" y="165" width="0.3" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="361.91" y="175.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (146 samples, 0.30%; 0.00%)</title><rect x="10.2" y="613" width="3.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.24" y="623.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (17 samples, 0.03%; 0.00%)</title><rect x="1127.3" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1130.31" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.01%)</title><rect x="875.6" y="469" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="878.64" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (118 samples, 0.24%; +0.01%)</title><rect x="1051.6" y="261" width="2.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1054.65" y="271.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (11 samples, 0.02%; +0.01%)</title><rect x="336.5" y="181" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="339.53" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (37 samples, 0.08%; -0.02%)</title><rect x="430.1" y="421" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="433.09" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; -0.00%)</title><rect x="1025.1" y="197" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1028.05" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; -0.02%)</title><rect x="964.5" y="373" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="967.52" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%; +0.00%)</title><rect x="774.3" y="325" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="777.29" y="335.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (21 samples, 0.04%; -0.04%)</title><rect x="337.1" y="181" width="0.5" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="340.11" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (71 samples, 0.15%; -0.02%)</title><rect x="815.2" y="133" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="818.20" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (11 samples, 0.02%; +0.01%)</title><rect x="990.0" y="341" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="992.99" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (93 samples, 0.19%; -0.01%)</title><rect x="732.3" y="453" width="2.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="735.33" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (7 samples, 0.01%; -0.01%)</title><rect x="1003.4" y="293" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1006.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%; -0.00%)</title><rect x="876.8" y="405" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="879.83" y="415.5" ></text>
</g>
<g >
<title>row::external_memory_usage (241 samples, 0.49%; +0.01%)</title><rect x="207.5" y="149" width="5.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="210.49" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.97" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%; +0.01%)</title><rect x="715.1" y="469" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="718.08" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (26 samples, 0.05%; -0.02%)</title><rect x="68.8" y="373" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="71.85" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%; +0.00%)</title><rect x="702.1" y="405" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="705.11" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; -0.00%)</title><rect x="940.3" y="373" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="943.27" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (260 samples, 0.53%; -0.00%)</title><rect x="644.5" y="501" width="6.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="647.50" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="940.5" y="357" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="943.49" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; -0.00%)</title><rect x="734.1" y="421" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="737.10" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (11 samples, 0.02%; +0.01%)</title><rect x="579.9" y="261" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="582.92" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (36 samples, 0.07%; -0.02%)</title><rect x="912.4" y="277" width="0.9" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="915.42" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (8 samples, 0.02%; 0.00%)</title><rect x="1008.7" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1011.72" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%; -0.00%)</title><rect x="525.9" y="309" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="528.91" y="319.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.01%)</title><rect x="41.7" y="485" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="44.67" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (19 samples, 0.04%; +0.02%)</title><rect x="999.8" y="245" width="0.5" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1002.84" y="255.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%; -0.01%)</title><rect x="648.9" y="469" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="651.85" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (12 samples, 0.02%; +0.01%)</title><rect x="226.3" y="133" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="229.29" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="34.2" y="453" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="37.20" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (31 samples, 0.06%; -0.00%)</title><rect x="675.0" y="485" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="677.96" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; -0.01%)</title><rect x="942.4" y="405" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="945.38" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.01%)</title><rect x="914.3" y="309" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="917.26" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (17 samples, 0.03%; +0.01%)</title><rect x="31.0" y="469" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="33.95" y="479.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="415.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,741 samples, 9.72%; +0.01%)</title><rect x="432.7" y="405" width="114.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="435.71" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>operator new (31 samples, 0.06%; -0.00%)</title><rect x="555.0" y="357" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="558.04" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;seastar::promise&lt;void&gt; &gt;::operator=&lt;seastar::promise&lt;void&gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="1175.3" y="501" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1178.29" y="511.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (16 samples, 0.03%; -0.01%)</title><rect x="288.8" y="373" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="291.84" y="383.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (43 samples, 0.09%; -0.01%)</title><rect x="68.4" y="405" width="1.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="71.43" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%; -0.02%)</title><rect x="863.4" y="389" width="1.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="866.35" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (12 samples, 0.02%; +0.01%)</title><rect x="683.6" y="469" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="686.65" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.02%; 0.00%)</title><rect x="750.7" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="753.74" y="399.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (53 samples, 0.11%; +0.00%)</title><rect x="768.0" y="373" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="770.97" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (20 samples, 0.04%; -0.00%)</title><rect x="113.4" y="373" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="116.41" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (6 samples, 0.01%; +0.00%)</title><rect x="429.8" y="405" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="432.80" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (13 samples, 0.03%; -0.03%)</title><rect x="65.8" y="373" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="68.82" y="383.5" ></text>
</g>
<g >
<title>compound_type&lt; (182 samples, 0.37%; -0.04%)</title><rect x="487.6" y="213" width="4.4" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="490.58" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (16 samples, 0.03%; -0.00%)</title><rect x="214.6" y="165" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="217.63" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%; 0.00%)</title><rect x="810.9" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="813.87" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.02%)</title><rect x="590.5" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="593.47" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (84 samples, 0.17%; +0.00%)</title><rect x="954.4" y="373" width="2.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="957.43" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (7 samples, 0.01%; +0.01%)</title><rect x="230.1" y="229" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="233.11" y="239.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%; +0.01%)</title><rect x="765.2" y="405" width="0.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="768.16" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (265 samples, 0.54%; +0.01%)</title><rect x="402.4" y="213" width="6.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="405.37" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="540.9" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="543.91" y="287.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (7 samples, 0.01%; -0.01%)</title><rect x="1134.5" y="421" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1137.49" y="431.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (22 samples, 0.05%; -0.01%)</title><rect x="860.4" y="341" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="863.35" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (16 samples, 0.03%; 0.00%)</title><rect x="883.1" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.12" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (13 samples, 0.03%; -0.00%)</title><rect x="422.7" y="357" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="425.69" y="367.5" ></text>
</g>
<g >
<title>operator delete (42 samples, 0.09%; +0.01%)</title><rect x="703.7" y="485" width="1.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="706.73" y="495.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; +0.01%)</title><rect x="502.8" y="309" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="505.78" y="319.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; +0.01%)</title><rect x="1147.7" y="485" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1150.73" y="495.5" ></text>
</g>
<g >
<title>operator delete (93 samples, 0.19%; +0.04%)</title><rect x="410.8" y="245" width="2.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="413.79" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%; -0.00%)</title><rect x="859.2" y="357" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="862.17" y="367.5" ></text>
</g>
<g >
<title>make_combined_reader (934 samples, 1.92%; -0.01%)</title><rect x="441.7" y="341" width="22.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="444.66" y="351.5" >m..</text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (7 samples, 0.01%; +0.01%)</title><rect x="254.6" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="257.58" y="271.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; -0.00%)</title><rect x="670.1" y="453" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="673.12" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (7 samples, 0.01%; 0.00%)</title><rect x="1150.3" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1153.32" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (8 samples, 0.02%; -0.01%)</title><rect x="23.6" y="517" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="26.65" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (6 samples, 0.01%; -0.01%)</title><rect x="313.2" y="165" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="316.20" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (20 samples, 0.04%; +0.01%)</title><rect x="205.8" y="133" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="208.77" y="143.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (100 samples, 0.21%; 0.00%)</title><rect x="782.6" y="389" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="785.63" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (79 samples, 0.16%; -0.01%)</title><rect x="35.6" y="437" width="1.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="38.62" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%; +0.04%)</title><rect x="546.1" y="309" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="549.09" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (14 samples, 0.03%; 0.00%)</title><rect x="16.8" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.82" y="351.5" ></text>
</g>
<g >
<title>table::as_mutation_source (115 samples, 0.24%; +0.01%)</title><rect x="636.1" y="437" width="2.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="639.15" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (17 samples, 0.03%; -0.00%)</title><rect x="1143.1" y="485" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1146.11" y="495.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.00%)</title><rect x="637.6" y="389" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="640.60" y="399.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (8 samples, 0.02%; 0.00%)</title><rect x="1142.2" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.01%)</title><rect x="165.0" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="167.98" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%; -0.00%)</title><rect x="702.2" y="325" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="705.16" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (414 samples, 0.85%; +0.03%)</title><rect x="1030.5" y="213" width="10.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1033.50" y="223.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (7 samples, 0.01%; -0.01%)</title><rect x="531.6" y="341" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="534.65" y="351.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (58 samples, 0.12%; -0.01%)</title><rect x="227.6" y="229" width="1.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="230.62" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%; 0.00%)</title><rect x="16.9" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.94" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (10 samples, 0.02%; +0.00%)</title><rect x="764.4" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="767.41" y="367.5" ></text>
</g>
<g >
<title>tracing::add_table_name (29 samples, 0.06%; -0.04%)</title><rect x="1139.0" y="421" width="0.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="1141.99" y="431.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (11 samples, 0.02%; +0.01%)</title><rect x="985.0" y="341" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="988.03" y="351.5" ></text>
</g>
<g >
<title>query::result::result (18 samples, 0.04%; +0.01%)</title><rect x="620.8" y="421" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="623.78" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (17 samples, 0.03%; -0.00%)</title><rect x="702.2" y="309" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="705.16" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (6 samples, 0.01%; +0.01%)</title><rect x="872.8" y="421" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="875.76" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (102 samples, 0.21%; -0.01%)</title><rect x="990.6" y="325" width="2.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="993.62" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="591.0" y="341" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="593.95" y="351.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%; 0.00%)</title><rect x="636.7" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="639.68" y="399.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (129 samples, 0.26%; +0.00%)</title><rect x="540.4" y="309" width="3.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="543.43" y="319.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (7 samples, 0.01%; 0.00%)</title><rect x="19.7" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%; +0.01%)</title><rect x="805.7" y="229" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="808.74" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (8 samples, 0.02%; +0.02%)</title><rect x="23.5" y="517" width="0.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="26.45" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (15 samples, 0.03%; +0.01%)</title><rect x="618.8" y="437" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="621.80" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (7 samples, 0.01%; +0.00%)</title><rect x="561.2" y="421" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="564.17" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (376 samples, 0.77%; +0.01%)</title><rect x="401.1" y="261" width="9.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="404.06" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (34 samples, 0.07%; 0.00%)</title><rect x="883.7" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.72" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (11 samples, 0.02%; +0.02%)</title><rect x="1079.6" y="325" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1082.57" y="335.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (562 samples, 1.15%; -0.02%)</title><rect x="1082.0" y="309" width="13.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1085.04" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (471 samples, 0.97%; -0.08%)</title><rect x="185.4" y="101" width="11.4" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="188.42" y="111.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (41 samples, 0.08%; +0.01%)</title><rect x="849.8" y="421" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="852.83" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (14 samples, 0.03%; -0.02%)</title><rect x="766.2" y="405" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="769.16" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (32 samples, 0.07%; +0.01%)</title><rect x="755.7" y="357" width="0.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="758.68" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (11 samples, 0.02%; 0.00%)</title><rect x="219.7" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="222.66" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (24 samples, 0.05%; -0.00%)</title><rect x="759.2" y="293" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="762.19" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%; +0.00%)</title><rect x="550.5" y="405" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="553.52" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.01%)</title><rect x="645.5" y="469" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="648.54" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (7 samples, 0.01%; -0.03%)</title><rect x="656.5" y="485" width="0.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="659.52" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (24 samples, 0.05%; +0.01%)</title><rect x="397.5" y="229" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="400.50" y="239.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (6 samples, 0.01%; +0.00%)</title><rect x="408.1" y="181" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="411.10" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%; +0.02%)</title><rect x="799.7" y="261" width="1.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="802.72" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (16 samples, 0.03%; +0.03%)</title><rect x="250.2" y="277" width="0.4" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="253.17" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.00%)</title><rect x="776.8" y="293" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="779.75" y="303.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (63 samples, 0.13%; +0.01%)</title><rect x="486.1" y="213" width="1.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="489.06" y="223.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (37 samples, 0.08%; -0.01%)</title><rect x="229.0" y="229" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="232.02" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%; +0.01%)</title><rect x="92.6" y="421" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="95.58" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (20 samples, 0.04%; +0.01%)</title><rect x="541.6" y="245" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="544.59" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (13 samples, 0.03%; 0.00%)</title><rect x="826.1" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.11" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (132 samples, 0.27%; +0.00%)</title><rect x="1003.6" y="293" width="3.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1006.57" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.00%)</title><rect x="801.1" y="277" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="804.12" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (8 samples, 0.02%; +0.01%)</title><rect x="859.9" y="373" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="862.94" y="383.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (83 samples, 0.17%; +0.01%)</title><rect x="154.5" y="213" width="2.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="157.50" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (31 samples, 0.06%; +0.00%)</title><rect x="413.4" y="245" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="416.45" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="71.6" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="74.63" y="463.5" ></text>
</g>
<g >
<title>create_partitions (281 samples, 0.58%; +0.00%)</title><rect x="14.2" y="533" width="6.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="17.19" y="543.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (8 samples, 0.02%; +0.01%)</title><rect x="72.4" y="453" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="75.43" y="463.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (19 samples, 0.04%; +0.02%)</title><rect x="453.4" y="293" width="0.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="456.42" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (29 samples, 0.06%; 0.00%)</title><rect x="702.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.08" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (12 samples, 0.02%; -0.00%)</title><rect x="756.7" y="357" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="759.67" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (15 samples, 0.03%; -0.00%)</title><rect x="1121.3" y="357" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1124.28" y="367.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (14 samples, 0.03%; +0.01%)</title><rect x="672.1" y="437" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="675.13" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (7 samples, 0.01%; 0.00%)</title><rect x="1047.3" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1050.34" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (9 samples, 0.02%; -0.00%)</title><rect x="728.4" y="501" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="731.36" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,779 samples, 11.85%; +0.08%)</title><rect x="120.5" y="325" width="139.8" height="15.0" fill="rgb(255,167,167)" rx="2" ry="2" />
<text  x="123.50" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%; +0.01%)</title><rect x="441.3" y="341" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="444.35" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt (5 samples, 0.01%; +0.01%)</title><rect x="537.5" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="540.53" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="784.7" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="787.71" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.00%)</title><rect x="227.1" y="181" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="230.06" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (193 samples, 0.40%; +0.04%)</title><rect x="494.7" y="325" width="4.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="497.75" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (20 samples, 0.04%; 0.00%)</title><rect x="1043.8" y="213" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1046.78" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (96 samples, 0.20%; +0.01%)</title><rect x="666.0" y="453" width="2.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="668.98" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (421 samples, 0.86%; +0.01%)</title><rect x="703.4" y="501" width="10.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="706.37" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (74 samples, 0.15%; -0.00%)</title><rect x="679.9" y="453" width="1.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="682.87" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="419.7" y="261" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="422.69" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (7 samples, 0.01%; +0.01%)</title><rect x="372.6" y="165" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="375.63" y="175.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (10 samples, 0.02%; -0.00%)</title><rect x="446.5" y="293" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="449.48" y="303.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%; -0.00%)</title><rect x="1164.1" y="469" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1167.11" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (5 samples, 0.01%; -0.01%)</title><rect x="189.4" y="85" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="192.37" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="161.2" y="229" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="164.18" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (209 samples, 0.43%; -0.01%)</title><rect x="766.5" y="421" width="5.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="769.49" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (12 samples, 0.02%; 0.00%)</title><rect x="14.9" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; -0.01%)</title><rect x="1078.4" y="309" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1081.38" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (9 samples, 0.02%; +0.00%)</title><rect x="21.7" y="517" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="24.69" y="527.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%; -0.02%)</title><rect x="528.7" y="325" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="531.67" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%; 0.00%)</title><rect x="1037.7" y="117" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1040.71" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%; +0.01%)</title><rect x="454.6" y="277" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="457.58" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (18 samples, 0.04%; +0.03%)</title><rect x="98.8" y="389" width="0.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="101.85" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (114 samples, 0.23%; -0.02%)</title><rect x="648.0" y="485" width="2.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="650.98" y="495.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; +0.00%)</title><rect x="681.1" y="421" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="684.08" y="431.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (56 samples, 0.11%; -0.00%)</title><rect x="834.3" y="309" width="1.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="837.27" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,412 samples, 21.35%; -0.01%)</title><rect x="888.9" y="469" width="251.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="891.88" y="479.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (8 samples, 0.02%; -0.00%)</title><rect x="874.6" y="437" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="877.63" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (14 samples, 0.03%; +0.01%)</title><rect x="1070.7" y="341" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1073.69" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (10 samples, 0.02%; -0.02%)</title><rect x="39.1" y="437" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="42.06" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (372 samples, 0.76%; +0.02%)</title><rect x="1071.0" y="341" width="9.0" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="1074.03" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (5 samples, 0.01%; +0.00%)</title><rect x="213.1" y="133" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="216.13" y="143.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.01%; 0.00%)</title><rect x="19.7" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (24 samples, 0.05%; -0.00%)</title><rect x="940.1" y="389" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="943.13" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (190 samples, 0.39%; -0.03%)</title><rect x="774.9" y="373" width="4.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="777.89" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (5 samples, 0.01%; +0.01%)</title><rect x="1136.5" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1139.53" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,891 samples, 10.03%; -0.02%)</title><rect x="431.5" y="421" width="118.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="434.47" y="431.5" >query::querier..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (35 samples, 0.07%; +0.06%)</title><rect x="99.3" y="421" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="102.28" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%; -0.01%)</title><rect x="949.6" y="341" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="952.61" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (15 samples, 0.03%; +0.00%)</title><rect x="332.8" y="181" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="335.78" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (176 samples, 0.36%; -0.01%)</title><rect x="740.5" y="357" width="4.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="743.48" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (20 samples, 0.04%; -0.00%)</title><rect x="1173.9" y="421" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1176.91" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (31 samples, 0.06%; +0.01%)</title><rect x="390.3" y="165" width="0.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="393.29" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (34 samples, 0.07%; -0.00%)</title><rect x="631.9" y="437" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="634.87" y="447.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="620.1" y="421" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="623.11" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (60 samples, 0.12%; -0.03%)</title><rect x="753.7" y="341" width="1.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="756.67" y="351.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (14 samples, 0.03%; +0.02%)</title><rect x="1048.7" y="261" width="0.3" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1051.69" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (18 samples, 0.04%; -0.01%)</title><rect x="491.5" y="181" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="494.53" y="191.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.02%)</title><rect x="1170.4" y="453" width="0.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1173.43" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (5 samples, 0.01%; +0.00%)</title><rect x="947.8" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="950.84" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (31 samples, 0.06%; +0.00%)</title><rect x="785.4" y="357" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="788.39" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%; -0.00%)</title><rect x="547.1" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="550.11" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.02%; 0.00%)</title><rect x="1038.5" y="165" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.51" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%; +0.01%)</title><rect x="800.8" y="245" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="803.78" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (7 samples, 0.01%; +0.00%)</title><rect x="884.1" y="357" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="887.14" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (31 samples, 0.06%; +0.01%)</title><rect x="860.1" y="357" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="863.13" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (13 samples, 0.03%; -0.01%)</title><rect x="758.9" y="293" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="761.87" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (12 samples, 0.02%; +0.01%)</title><rect x="728.0" y="501" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="731.02" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (36 samples, 0.07%; -0.02%)</title><rect x="394.7" y="213" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="397.74" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (81 samples, 0.17%; -0.01%)</title><rect x="952.1" y="373" width="2.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="955.13" y="383.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (5 samples, 0.01%; 0.00%)</title><rect x="23.9" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.86" y="527.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (46 samples, 0.09%; -0.01%)</title><rect x="758.8" y="309" width="1.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="761.78" y="319.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.01%)</title><rect x="651.5" y="485" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="654.51" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (35 samples, 0.07%; 0.00%)</title><rect x="1159.4" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.42" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (13 samples, 0.03%; +0.02%)</title><rect x="333.3" y="165" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="336.26" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (8 samples, 0.02%; +0.00%)</title><rect x="631.6" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="634.60" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="988.1" y="357" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="991.08" y="367.5" ></text>
</g>
<g >
<title>operator delete (72 samples, 0.15%; +0.02%)</title><rect x="942.6" y="405" width="1.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="945.64" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="580.7" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="583.72" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (10 samples, 0.02%; -0.00%)</title><rect x="702.8" y="469" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="705.83" y="479.5" ></text>
</g>
<g >
<title>operator delete (64 samples, 0.13%; -0.00%)</title><rect x="589.1" y="341" width="1.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="592.09" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (7 samples, 0.01%; +0.01%)</title><rect x="218.9" y="133" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="221.89" y="143.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (51 samples, 0.10%; -0.01%)</title><rect x="541.4" y="261" width="1.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="544.37" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (207 samples, 0.42%; +0.00%)</title><rect x="14.5" y="469" width="5.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="17.55" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (26 samples, 0.05%; +0.03%)</title><rect x="596.0" y="405" width="0.6" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="598.96" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (196 samples, 0.40%; 0.00%)</title><rect x="14.7" y="421" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.74" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%; +0.01%)</title><rect x="646.9" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="649.92" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; -0.01%)</title><rect x="652.9" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="655.92" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (25 samples, 0.05%; +0.02%)</title><rect x="124.9" y="309" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="127.86" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (9 samples, 0.02%; -0.00%)</title><rect x="1140.4" y="437" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1143.37" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (26 samples, 0.05%; -0.02%)</title><rect x="1161.8" y="453" width="0.6" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1164.79" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (6 samples, 0.01%; +0.01%)</title><rect x="557.7" y="261" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="560.66" y="271.5" ></text>
</g>
<g >
<title>seastar::gate::leave (11 samples, 0.02%; +0.01%)</title><rect x="618.1" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="621.07" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.02%; +0.00%)</title><rect x="1154.9" y="421" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1157.94" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (29 samples, 0.06%; +0.01%)</title><rect x="756.5" y="373" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="759.45" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (6 samples, 0.01%; +0.01%)</title><rect x="990.5" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="993.48" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%; -0.01%)</title><rect x="1051.3" y="277" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1054.28" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%; -0.01%)</title><rect x="645.9" y="485" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="648.88" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (111 samples, 0.23%; +0.05%)</title><rect x="601.6" y="405" width="2.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="604.65" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (7 samples, 0.01%; 0.00%)</title><rect x="1141.9" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (10 samples, 0.02%; +0.00%)</title><rect x="220.4" y="133" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="223.39" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (22 samples, 0.05%; -0.02%)</title><rect x="622.3" y="437" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="625.33" y="447.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (89 samples, 0.18%; +0.00%)</title><rect x="513.7" y="229" width="2.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="516.72" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%; +0.01%)</title><rect x="739.3" y="389" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="742.27" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.01%; +0.00%)</title><rect x="1146.1" y="501" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1149.11" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::stats (25 samples, 0.05%; +0.03%)</title><rect x="530.5" y="325" width="0.6" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="533.46" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (55 samples, 0.11%; -0.05%)</title><rect x="211.4" y="101" width="1.4" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="214.43" y="111.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,370 samples, 4.86%; +0.01%)</title><rect x="165.1" y="229" width="57.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="168.15" y="239.5" >partit..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%; +0.01%)</title><rect x="842.9" y="261" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="845.88" y="271.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%; 0.00%)</title><rect x="505.2" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="508.15" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (155 samples, 0.32%; +0.01%)</title><rect x="410.4" y="261" width="3.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="413.45" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%; -0.00%)</title><rect x="230.9" y="229" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="233.89" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (54 samples, 0.11%; -0.01%)</title><rect x="598.8" y="421" width="1.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="601.81" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%; +0.00%)</title><rect x="676.3" y="485" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="679.27" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="38.1" y="437" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="41.12" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (32 samples, 0.07%; +0.03%)</title><rect x="296.6" y="293" width="0.8" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="299.58" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%; -0.01%)</title><rect x="823.2" y="213" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="826.21" y="223.5" ></text>
</g>
<g >
<title>free (24 samples, 0.05%; +0.01%)</title><rect x="409.0" y="197" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="412.00" y="207.5" ></text>
</g>
<g >
<title>free (14 samples, 0.03%; -0.01%)</title><rect x="35.7" y="421" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="38.70" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (32 samples, 0.07%; 0.00%)</title><rect x="786.6" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="789.65" y="383.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%; -0.01%)</title><rect x="1055.3" y="261" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1058.28" y="271.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%; -0.01%)</title><rect x="782.9" y="373" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="785.85" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (7 samples, 0.01%; -0.03%)</title><rect x="522.9" y="229" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="525.86" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.01%)</title><rect x="1038.6" y="149" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1041.60" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (125 samples, 0.26%; -0.02%)</title><rect x="34.6" y="469" width="3.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="37.56" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (15 samples, 0.03%; +0.00%)</title><rect x="612.5" y="437" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="615.46" y="447.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%; -0.01%)</title><rect x="810.4" y="213" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="813.43" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (10 samples, 0.02%; +0.00%)</title><rect x="1177.2" y="453" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1180.22" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (6 samples, 0.01%; +0.01%)</title><rect x="617.9" y="437" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="620.86" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%; -0.01%)</title><rect x="1160.5" y="421" width="1.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1163.50" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (6 samples, 0.01%; -0.01%)</title><rect x="615.1" y="421" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="618.07" y="431.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (11 samples, 0.02%; -0.01%)</title><rect x="926.2" y="373" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="929.24" y="383.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%; -0.00%)</title><rect x="509.9" y="245" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="512.89" y="255.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (62 samples, 0.13%; -0.01%)</title><rect x="610.2" y="389" width="1.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="613.16" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (123 samples, 0.25%; -0.01%)</title><rect x="418.3" y="277" width="3.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="421.33" y="287.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%; 0.00%)</title><rect x="1188.7" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.72" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="671.4" y="453" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="674.38" y="463.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.01%; 0.00%)</title><rect x="19.7" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.65" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (15 samples, 0.03%; -0.01%)</title><rect x="1055.4" y="293" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1058.40" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (92 samples, 0.19%; -0.02%)</title><rect x="347.9" y="165" width="2.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="350.85" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (8 samples, 0.02%; +0.01%)</title><rect x="419.9" y="261" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="422.91" y="271.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (5 samples, 0.01%; -0.00%)</title><rect x="609.2" y="389" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="612.17" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; -0.00%)</title><rect x="1107.9" y="373" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1110.88" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (38 samples, 0.08%; +0.01%)</title><rect x="305.8" y="213" width="0.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="308.77" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (20 samples, 0.04%; +0.02%)</title><rect x="292.4" y="293" width="0.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="295.42" y="303.5" ></text>
</g>
<g >
<title>__strlen_avx2 (79 samples, 0.16%; +0.01%)</title><rect x="1022.1" y="245" width="1.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1025.10" y="255.5" ></text>
</g>
<g >
<title>database::find_keyspace (247 samples, 0.51%; -0.00%)</title><rect x="1062.3" y="341" width="6.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1065.29" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (12 samples, 0.02%; +0.00%)</title><rect x="786.1" y="357" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="789.14" y="367.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%; +0.00%)</title><rect x="542.6" y="261" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="545.61" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%; +0.01%)</title><rect x="169.6" y="181" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="172.65" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (15 samples, 0.03%; 0.00%)</title><rect x="18.6" y="357" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.61" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (26 samples, 0.05%; 0.00%)</title><rect x="1124.5" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1127.48" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (70 samples, 0.14%; +0.01%)</title><rect x="810.6" y="213" width="1.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="813.60" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="1099.7" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1102.75" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="581" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>reader_permit::impl::~impl (84 samples, 0.17%; +0.00%)</title><rect x="57.8" y="453" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="60.76" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (163 samples, 0.33%; +0.01%)</title><rect x="687.1" y="485" width="4.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="690.11" y="495.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%; -0.02%)</title><rect x="691.4" y="485" width="0.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="694.41" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%; +0.01%)</title><rect x="557.2" y="309" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="560.22" y="319.5" ></text>
</g>
<g >
<title>schema::get_partitioner (5 samples, 0.01%; -0.02%)</title><rect x="944.4" y="405" width="0.1" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="947.41" y="415.5" ></text>
</g>
<g >
<title>query::querier&lt; (6 samples, 0.01%; 0.00%)</title><rect x="1175.8" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.80" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; -0.00%)</title><rect x="868.1" y="405" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="871.12" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (14 samples, 0.03%; +0.01%)</title><rect x="869.9" y="389" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="872.93" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (7 samples, 0.01%; -0.00%)</title><rect x="323.6" y="149" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="326.61" y="159.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (128 samples, 0.26%; -0.01%)</title><rect x="516.8" y="213" width="3.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="519.81" y="223.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (62 samples, 0.13%; -0.01%)</title><rect x="291.4" y="309" width="1.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="294.43" y="319.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; +0.00%)</title><rect x="337.9" y="181" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="340.86" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (5 samples, 0.01%; -0.00%)</title><rect x="883.2" y="261" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="886.17" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (35 samples, 0.07%; +0.01%)</title><rect x="623.3" y="437" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="626.35" y="447.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.07%; -0.00%)</title><rect x="584.0" y="341" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="586.96" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="993.2" y="341" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="996.24" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (84 samples, 0.17%; +0.00%)</title><rect x="962.6" y="389" width="2.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="965.63" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (39 samples, 0.08%; -0.01%)</title><rect x="1149.2" y="485" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1152.18" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%; 0.00%)</title><rect x="702.1" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.13" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (215 samples, 0.44%; +0.01%)</title><rect x="416.2" y="309" width="5.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="419.18" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%; +0.01%)</title><rect x="51.1" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="54.13" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (166 samples, 0.34%; -0.01%)</title><rect x="245.6" y="245" width="4.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="248.62" y="255.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,743 samples, 22.03%; -0.01%)</title><rect x="883.6" y="501" width="259.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="886.58" y="511.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="969.3" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="972.31" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (21 samples, 0.04%; +0.00%)</title><rect x="462.6" y="325" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="465.59" y="335.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (15 samples, 0.03%; +0.02%)</title><rect x="196.5" y="85" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="199.46" y="95.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (17 samples, 0.03%; +0.00%)</title><rect x="616.9" y="437" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="619.94" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%; +0.01%)</title><rect x="995.6" y="293" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="998.56" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="221.7" y="181" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="224.74" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.02%; +0.01%)</title><rect x="804.5" y="261" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="807.53" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,440 samples, 11.15%; +0.01%)</title><rect x="289.9" y="341" width="131.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="292.93" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (23 samples, 0.05%; +0.00%)</title><rect x="811.6" y="165" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="814.64" y="175.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (8 samples, 0.02%; +0.00%)</title><rect x="724.2" y="421" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="727.20" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (106 samples, 0.22%; +0.00%)</title><rect x="865.4" y="389" width="2.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="868.41" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (5 samples, 0.01%; -0.01%)</title><rect x="413.0" y="245" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="416.04" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="700.6" y="437" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="703.56" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (80 samples, 0.16%; +0.01%)</title><rect x="640.7" y="485" width="2.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="643.75" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (75 samples, 0.15%; +0.05%)</title><rect x="322.0" y="165" width="1.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="324.99" y="175.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (44 samples, 0.09%; 0.00%)</title><rect x="15.2" y="293" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.18" y="303.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (18 samples, 0.04%; +0.01%)</title><rect x="312.8" y="165" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="315.77" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; +0.00%)</title><rect x="460.7" y="277" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="463.68" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.01%)</title><rect x="291.7" y="277" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="294.72" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (514 samples, 1.05%; -0.00%)</title><rect x="569.3" y="325" width="12.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="572.34" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (152 samples, 0.31%; +0.00%)</title><rect x="695.2" y="485" width="3.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="698.19" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.06%; -0.02%)</title><rect x="300.3" y="261" width="0.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="303.26" y="271.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="14.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.21" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (15 samples, 0.03%; +0.01%)</title><rect x="1035.1" y="149" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1038.12" y="159.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (17 samples, 0.03%; +0.00%)</title><rect x="867.5" y="341" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="870.46" y="351.5" ></text>
</g>
<g >
<title>malloc (30 samples, 0.06%; 0.00%)</title><rect x="610.7" y="373" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="613.69" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%; +0.01%)</title><rect x="850.8" y="421" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="853.82" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (50 samples, 0.10%; -0.01%)</title><rect x="863.2" y="421" width="1.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="866.21" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (704 samples, 1.44%; -0.02%)</title><rect x="749.5" y="421" width="17.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="752.46" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (16 samples, 0.03%; +0.01%)</title><rect x="599.7" y="405" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="602.73" y="415.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (21 samples, 0.04%; -0.00%)</title><rect x="587.0" y="357" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="589.98" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (59 samples, 0.12%; -0.05%)</title><rect x="946.0" y="405" width="1.4" height="15.0" fill="rgb(184,184,255)" rx="2" ry="2" />
<text  x="948.96" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (12 samples, 0.02%; +0.02%)</title><rect x="21.9" y="517" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="24.90" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="715.5" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="718.49" y="479.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (21 samples, 0.04%; -0.02%)</title><rect x="614.0" y="405" width="0.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="616.99" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; -0.00%)</title><rect x="409.9" y="213" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="412.87" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%; 0.00%)</title><rect x="662.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.55" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,358 samples, 13.04%; -0.06%)</title><rect x="957.9" y="421" width="153.8" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="960.91" y="431.5" >cql3::statements::s..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%; +0.01%)</title><rect x="232.6" y="245" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="235.58" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%; +0.00%)</title><rect x="336.1" y="165" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="339.09" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (160 samples, 0.33%; -0.02%)</title><rect x="554.0" y="389" width="3.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="557.00" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (310 samples, 0.64%; +0.02%)</title><rect x="950.2" y="421" width="7.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="953.17" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (74 samples, 0.15%; -0.02%)</title><rect x="521.2" y="245" width="1.8" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="524.24" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%; 0.00%)</title><rect x="21.1" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.13" y="495.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (7 samples, 0.01%; +0.00%)</title><rect x="238.2" y="197" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="241.17" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (8 samples, 0.02%; -0.01%)</title><rect x="868.4" y="453" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="871.38" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (17 samples, 0.03%; +0.01%)</title><rect x="51.4" y="469" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="54.40" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%; +0.00%)</title><rect x="873.1" y="421" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="876.05" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%; 0.00%)</title><rect x="702.1" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.11" y="447.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.02%; +0.01%)</title><rect x="606.2" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="609.17" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (47 samples, 0.10%; -0.01%)</title><rect x="839.6" y="341" width="1.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="842.61" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="503.5" y="309" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="506.48" y="319.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,779 samples, 5.70%; +0.01%)</title><rect x="464.4" y="341" width="67.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="467.40" y="351.5" >memtabl..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.00%)</title><rect x="777.4" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="780.43" y="319.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (8 samples, 0.02%; +0.00%)</title><rect x="819.7" y="117" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="822.75" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%; -0.02%)</title><rect x="1052.1" y="229" width="1.5" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1055.06" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (22 samples, 0.05%; -0.00%)</title><rect x="650.2" y="469" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="653.21" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (85 samples, 0.17%; 0.00%)</title><rect x="823.6" y="261" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.62" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (10 samples, 0.02%; 0.00%)</title><rect x="567.1" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="570.09" y="335.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.01%)</title><rect x="654.5" y="485" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="657.47" y="495.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (57 samples, 0.12%; +0.01%)</title><rect x="584.9" y="373" width="1.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="587.85" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (22 samples, 0.05%; +0.01%)</title><rect x="256.1" y="277" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="259.10" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (129 samples, 0.26%; -0.01%)</title><rect x="687.9" y="469" width="3.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="690.88" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (90 samples, 0.18%; +0.01%)</title><rect x="865.8" y="373" width="2.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="868.80" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (50 samples, 0.10%; +0.00%)</title><rect x="932.0" y="325" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="935.00" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (297 samples, 0.61%; 0.00%)</title><rect x="93.9" y="437" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="96.89" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.01%)</title><rect x="1065.8" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1068.75" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (35 samples, 0.07%; -0.04%)</title><rect x="216.0" y="165" width="0.8" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="218.96" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (46 samples, 0.09%; -0.00%)</title><rect x="1176.5" y="517" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1179.52" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%; -0.00%)</title><rect x="1111.4" y="389" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1114.36" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,473 samples, 7.12%; -0.03%)</title><rect x="148.9" y="261" width="84.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="151.86" y="271.5" >partition..</text>
</g>
<g >
<title>reader_permit::impl::mark_unused (347 samples, 0.71%; -0.01%)</title><rect x="61.3" y="437" width="8.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="64.32" y="447.5" ></text>
</g>
<g >
<title>reader_permit::signal (5 samples, 0.01%; +0.01%)</title><rect x="273.4" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="276.42" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (179 samples, 0.37%; +0.05%)</title><rect x="1063.7" y="309" width="4.3" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="1066.67" y="319.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (13 samples, 0.03%; -0.01%)</title><rect x="526.3" y="325" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="529.30" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (6 samples, 0.01%; -0.01%)</title><rect x="1044.0" y="197" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1047.05" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (125 samples, 0.26%; 0.00%)</title><rect x="209.8" y="117" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="212.84" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (10 samples, 0.02%; -0.01%)</title><rect x="764.8" y="405" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="767.80" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (72 samples, 0.15%; +0.01%)</title><rect x="66.1" y="389" width="1.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="69.14" y="399.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (62 samples, 0.13%; -0.00%)</title><rect x="783.4" y="357" width="1.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="786.38" y="367.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%; -0.01%)</title><rect x="1004.3" y="261" width="1.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1007.29" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%; +0.01%)</title><rect x="945.4" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="948.38" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%; +0.02%)</title><rect x="1046.6" y="229" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1049.59" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (21 samples, 0.04%; -0.00%)</title><rect x="1148.7" y="485" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1151.67" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.07%; -0.01%)</title><rect x="824.8" y="245" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="827.81" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (283 samples, 0.58%; -0.00%)</title><rect x="739.6" y="421" width="6.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="742.56" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (78 samples, 0.16%; +0.01%)</title><rect x="538.3" y="309" width="1.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="541.35" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (27 samples, 0.06%; +0.00%)</title><rect x="219.3" y="133" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="222.27" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (6 samples, 0.01%; 0.00%)</title><rect x="685.7" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="688.73" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%; +0.01%)</title><rect x="441.1" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="444.08" y="351.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.17%; +0.01%)</title><rect x="1129.6" y="405" width="2.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1132.58" y="415.5" ></text>
</g>
<g >
<title>query::querier_base::close (10 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.94" y="495.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%; +0.01%)</title><rect x="219.8" y="101" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="222.78" y="111.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (833 samples, 1.71%; -0.17%)</title><rect x="373.8" y="197" width="20.2" height="15.0" fill="rgb(125,125,255)" rx="2" ry="2" />
<text  x="376.81" y="207.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%; -0.00%)</title><rect x="276.5" y="277" width="1.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="279.52" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (16 samples, 0.03%; -0.00%)</title><rect x="956.6" y="389" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="959.58" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (11 samples, 0.02%; +0.00%)</title><rect x="1062.8" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1065.78" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="1170.8" y="437" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1173.76" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%; +0.01%)</title><rect x="859.5" y="341" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="862.48" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%; +0.00%)</title><rect x="671.2" y="453" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="674.16" y="463.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (8 samples, 0.02%; +0.01%)</title><rect x="435.1" y="357" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="438.05" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%; -0.04%)</title><rect x="449.1" y="229" width="1.2" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="452.09" y="239.5" ></text>
</g>
<g >
<title>database::find_schema (233 samples, 0.48%; +0.00%)</title><rect x="839.2" y="373" width="5.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="842.16" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%; -0.02%)</title><rect x="949.7" y="325" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="952.73" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (15 samples, 0.03%; 0.00%)</title><rect x="548.9" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="551.87" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (38 samples, 0.08%; +0.03%)</title><rect x="624.2" y="437" width="0.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="627.20" y="447.5" ></text>
</g>
<g >
<title>database::query (147 samples, 0.30%; +0.01%)</title><rect x="40.4" y="501" width="3.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="43.37" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%; +0.01%)</title><rect x="635.0" y="373" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="637.96" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%; -0.01%)</title><rect x="435.2" y="357" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="438.25" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="581.3" y="309" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="584.30" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,980 samples, 12.26%; -0.02%)</title><rect x="285.0" y="405" width="144.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="287.97" y="415.5" >seastar::future&lt;mu..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (14 samples, 0.03%; +0.00%)</title><rect x="256.6" y="277" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="259.63" y="287.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (6 samples, 0.01%; +0.01%)</title><rect x="148.6" y="261" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="151.64" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%; -0.01%)</title><rect x="1133.0" y="373" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1136.02" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (242 samples, 0.50%; +0.00%)</title><rect x="704.9" y="485" width="5.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="707.94" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%; +0.01%)</title><rect x="243.2" y="165" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="246.18" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (326 samples, 0.67%; +0.02%)</title><rect x="61.6" y="421" width="7.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="64.61" y="431.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (19 samples, 0.04%; +0.04%)</title><rect x="899.5" y="421" width="0.5" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="902.52" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (23 samples, 0.05%; -0.07%)</title><rect x="459.2" y="261" width="0.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="462.23" y="271.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (10 samples, 0.02%; 0.00%)</title><rect x="835.9" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="838.94" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; 0.00%)</title><rect x="601.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.97" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%; 0.00%)</title><rect x="434.8" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="437.84" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.03%; 0.00%)</title><rect x="647.5" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="650.52" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; 0.00%)</title><rect x="529.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="532.18" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (34 samples, 0.07%; -0.01%)</title><rect x="219.1" y="149" width="0.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="222.13" y="159.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (43 samples, 0.09%; -0.00%)</title><rect x="15.2" y="277" width="1.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="18.20" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="837.8" y="357" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="840.82" y="367.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%; +0.01%)</title><rect x="816.9" y="133" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="819.92" y="143.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (10 samples, 0.02%; -0.00%)</title><rect x="718.7" y="437" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="721.71" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (106 samples, 0.22%; -0.06%)</title><rect x="364.0" y="165" width="2.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="366.97" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (191 samples, 0.39%; +0.00%)</title><rect x="245.1" y="261" width="4.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="248.11" y="271.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (8 samples, 0.02%; +0.01%)</title><rect x="440.9" y="341" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="443.89" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (5 samples, 0.01%; 0.00%)</title><rect x="1176.0" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.97" y="447.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%; -0.00%)</title><rect x="16.9" y="309" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="19.94" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (26 samples, 0.05%; -0.00%)</title><rect x="675.1" y="469" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="678.08" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; +0.01%)</title><rect x="915.1" y="341" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="918.13" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (9 samples, 0.02%; 0.00%)</title><rect x="20.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.60" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.03%; -0.00%)</title><rect x="1043.3" y="181" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1046.32" y="191.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (166 samples, 0.34%; -0.01%)</title><rect x="935.8" y="389" width="4.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="938.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="280.7" y="277" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="283.66" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (137 samples, 0.28%; -0.02%)</title><rect x="997.9" y="293" width="3.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="1000.93" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (6 samples, 0.01%; +0.01%)</title><rect x="961.9" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="964.93" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (62 samples, 0.13%; +0.01%)</title><rect x="305.5" y="229" width="1.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="308.48" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (162 samples, 0.33%; +0.02%)</title><rect x="404.3" y="197" width="3.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="407.33" y="207.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (46 samples, 0.09%; -0.00%)</title><rect x="634.3" y="405" width="1.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="637.31" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%; +0.01%)</title><rect x="573.5" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="576.48" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (42 samples, 0.09%; +0.01%)</title><rect x="201.2" y="101" width="1.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="204.20" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (11 samples, 0.02%; +0.02%)</title><rect x="435.6" y="357" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="438.56" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (128 samples, 0.26%; +0.01%)</title><rect x="650.8" y="501" width="3.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="653.79" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (13 samples, 0.03%; -0.02%)</title><rect x="1142.6" y="485" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="1145.62" y="495.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (511 samples, 1.05%; +0.01%)</title><rect x="1082.4" y="293" width="12.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1085.35" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.00%)</title><rect x="141.0" y="229" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="143.97" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.15%; +0.00%)</title><rect x="979.4" y="341" width="1.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="982.37" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.00%)</title><rect x="1170.9" y="453" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1173.93" y="463.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (90 samples, 0.18%; -0.01%)</title><rect x="814.9" y="149" width="2.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="817.86" y="159.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.02%; +0.01%)</title><rect x="487.1" y="181" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="490.12" y="191.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%; -0.02%)</title><rect x="682.0" y="485" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="685.05" y="495.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (6 samples, 0.01%; +0.01%)</title><rect x="962.3" y="389" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="965.34" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%; +0.01%)</title><rect x="692.3" y="485" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="695.28" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%; +0.01%)</title><rect x="1079.4" y="309" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1082.45" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="559.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%; -0.00%)</title><rect x="400.7" y="213" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="403.67" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (10 samples, 0.02%; -0.00%)</title><rect x="418.1" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="421.09" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (5 samples, 0.01%; -0.02%)</title><rect x="1080.1" y="341" width="0.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1083.10" y="351.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (8 samples, 0.02%; -0.00%)</title><rect x="985.5" y="357" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="988.49" y="367.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (404 samples, 0.83%; +0.01%)</title><rect x="59.9" y="453" width="9.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="62.94" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (13 samples, 0.03%; -0.02%)</title><rect x="1070.4" y="341" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1073.37" y="351.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (12 samples, 0.02%; +0.01%)</title><rect x="240.8" y="165" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="243.76" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%; 0.00%)</title><rect x="1131.1" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1134.11" y="383.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (33 samples, 0.07%; +0.04%)</title><rect x="1032.7" y="181" width="0.8" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1035.70" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (22 samples, 0.05%; +0.00%)</title><rect x="883.0" y="501" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="886.05" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%; +0.01%)</title><rect x="638.8" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="641.79" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (61 samples, 0.13%; +0.01%)</title><rect x="940.9" y="405" width="1.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="943.90" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; +0.01%)</title><rect x="1140.2" y="437" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1143.23" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (65 samples, 0.13%; +0.01%)</title><rect x="58.0" y="437" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="61.03" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (10 samples, 0.02%; -0.02%)</title><rect x="593.5" y="373" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="596.52" y="383.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (166 samples, 0.34%; -0.00%)</title><rect x="909.3" y="309" width="4.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="912.35" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.10%; -0.02%)</title><rect x="991.4" y="277" width="1.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="994.45" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.02%; -0.02%)</title><rect x="670.1" y="437" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="673.12" y="447.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; 0.00%)</title><rect x="829.3" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="832.31" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="17.6" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.60" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%; -0.00%)</title><rect x="145.5" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="148.50" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (37 samples, 0.08%; +0.03%)</title><rect x="560.1" y="421" width="0.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="563.08" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (15 samples, 0.03%; 0.00%)</title><rect x="1096.0" y="277" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.02" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%; -0.01%)</title><rect x="460.5" y="277" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="463.53" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%; -0.01%)</title><rect x="266.4" y="325" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="269.38" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (68 samples, 0.14%; +0.01%)</title><rect x="666.5" y="421" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="669.47" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,241 samples, 12.80%; +0.00%)</title><rect x="729.4" y="501" width="151.0" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="732.40" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (21 samples, 0.04%; +0.01%)</title><rect x="904.2" y="373" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="907.17" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (31 samples, 0.06%; +0.00%)</title><rect x="1151.3" y="469" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1154.33" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (164 samples, 0.34%; +0.01%)</title><rect x="1025.5" y="229" width="4.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1028.54" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (7 samples, 0.01%; -0.01%)</title><rect x="631.0" y="373" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="633.97" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; +0.01%)</title><rect x="612.2" y="437" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="615.22" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,253 samples, 4.62%; +0.01%)</title><rect x="167.3" y="197" width="54.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="170.35" y="207.5" >parti..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,323 samples, 21.17%; +0.01%)</title><rect x="891.0" y="453" width="249.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="894.03" y="463.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>auth::data_resource_view::table (8 samples, 0.02%; +0.00%)</title><rect x="832.8" y="325" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="835.77" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (9 samples, 0.02%; -0.01%)</title><rect x="1057.0" y="325" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1060.04" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; +0.01%)</title><rect x="644.1" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="647.11" y="463.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (128 samples, 0.26%; -0.01%)</title><rect x="1185.6" y="613" width="3.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1188.57" y="623.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (430 samples, 0.88%; -0.02%)</title><rect x="714.8" y="485" width="10.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="717.84" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (8 samples, 0.02%; +0.01%)</title><rect x="530.2" y="325" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="533.22" y="335.5" ></text>
</g>
<g >
<title>sstring_hash::operator (29 samples, 0.06%; 0.00%)</title><rect x="1067.3" y="293" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1070.28" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; +0.01%)</title><rect x="1125.9" y="421" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1128.86" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (19 samples, 0.04%; +0.01%)</title><rect x="1109.2" y="373" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1112.21" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (250 samples, 0.51%; -0.00%)</title><rect x="14.5" y="485" width="6.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="17.55" y="495.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (7 samples, 0.01%; -0.00%)</title><rect x="43.8" y="485" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="46.75" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (23 samples, 0.05%; -0.01%)</title><rect x="414.5" y="277" width="0.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="417.54" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%; -0.02%)</title><rect x="245.0" y="245" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="247.97" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="431.2" y="405" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="434.21" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%; +0.01%)</title><rect x="426.2" y="357" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="429.25" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%; +0.00%)</title><rect x="1055.5" y="277" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1058.52" y="287.5" ></text>
</g>
<g >
<title>query::result::builder::build (58 samples, 0.12%; -0.03%)</title><rect x="604.7" y="437" width="1.4" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="607.67" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (41 samples, 0.08%; -0.01%)</title><rect x="688.7" y="453" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="691.70" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (34 samples, 0.07%; -0.03%)</title><rect x="1066.1" y="261" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1069.07" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.01%)</title><rect x="649.3" y="453" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="652.29" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.01%; 0.00%)</title><rect x="1099.9" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1102.92" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="677.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="680.65" y="495.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (53 samples, 0.11%; -0.01%)</title><rect x="191.1" y="69" width="1.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="194.06" y="79.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (17 samples, 0.03%; +0.01%)</title><rect x="598.4" y="421" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="601.40" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (24 samples, 0.05%; 0.00%)</title><rect x="699.8" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="702.83" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (9 samples, 0.02%; -0.01%)</title><rect x="1117.7" y="373" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1120.70" y="383.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%; +0.02%)</title><rect x="587.5" y="357" width="1.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="590.49" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (688 samples, 1.41%; +0.01%)</title><rect x="565.4" y="341" width="16.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="568.40" y="351.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.03%; -0.01%)</title><rect x="686.4" y="469" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="689.40" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%; +0.00%)</title><rect x="736.2" y="453" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="739.18" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="688.3" y="437" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="691.34" y="447.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (182 samples, 0.37%; +0.01%)</title><rect x="929.0" y="357" width="4.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="932.04" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (19 samples, 0.04%; -0.01%)</title><rect x="1150.9" y="469" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1153.87" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%; -0.01%)</title><rect x="221.4" y="149" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="224.38" y="159.5" ></text>
</g>
<g >
<title>query::result::builder::builder (168 samples, 0.34%; -0.02%)</title><rect x="608.0" y="421" width="4.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="611.03" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (258 samples, 0.53%; +0.02%)</title><rect x="868.6" y="453" width="6.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="871.58" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (162 samples, 0.33%; -0.01%)</title><rect x="192.5" y="69" width="4.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="195.54" y="79.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; +0.00%)</title><rect x="866.9" y="325" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="869.88" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (16 samples, 0.03%; +0.00%)</title><rect x="847.0" y="293" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="849.97" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%; +0.01%)</title><rect x="293.1" y="309" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="296.14" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (258 samples, 0.53%; -0.01%)</title><rect x="758.1" y="341" width="6.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="761.15" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (131 samples, 0.27%; -0.05%)</title><rect x="841.4" y="325" width="3.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="844.41" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (18 samples, 0.04%; +0.01%)</title><rect x="721.8" y="437" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="724.83" y="447.5" ></text>
</g>
<g >
<title>table::make_reader (6 samples, 0.01%; +0.00%)</title><rect x="547.3" y="373" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="550.28" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,605 samples, 21.75%; -0.01%)</title><rect x="884.5" y="485" width="256.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="887.55" y="495.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>seastar::memory::stats (36 samples, 0.07%; +0.01%)</title><rect x="147.8" y="245" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="150.77" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::run (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="549" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (9 samples, 0.02%; +0.01%)</title><rect x="1164.3" y="469" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1167.26" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%; -0.01%)</title><rect x="922.5" y="357" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="925.49" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (7 samples, 0.01%; -0.00%)</title><rect x="595.0" y="405" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="597.97" y="415.5" ></text>
</g>
<g >
<title>row::external_memory_usage (10 samples, 0.02%; +0.01%)</title><rect x="215.0" y="165" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="218.01" y="175.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.02%; -0.03%)</title><rect x="659.9" y="469" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="662.91" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (24,791 samples, 50.83%; -0.03%)</title><rect x="44.5" y="501" width="599.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="47.46" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>memtable_entry::snapshot (85 samples, 0.17%; +0.04%)</title><rect x="526.6" y="325" width="2.1" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="529.61" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (54 samples, 0.11%; -0.01%)</title><rect x="839.5" y="357" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="842.47" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt; (7 samples, 0.01%; +0.00%)</title><rect x="632.8" y="437" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="635.83" y="447.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%; +0.00%)</title><rect x="291.6" y="293" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="294.62" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (25 samples, 0.05%; 0.00%)</title><rect x="1141.9" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (6 samples, 0.01%; +0.01%)</title><rect x="804.9" y="261" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="807.94" y="271.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (11 samples, 0.02%; -0.00%)</title><rect x="933.4" y="389" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="936.45" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (190 samples, 0.39%; -0.01%)</title><rect x="515.9" y="229" width="4.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="518.94" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%; +0.01%)</title><rect x="944.0" y="389" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="947.05" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%; +0.01%)</title><rect x="851.6" y="405" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="854.62" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (23 samples, 0.05%; +0.00%)</title><rect x="645.1" y="485" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="648.13" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="232.1" y="245" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="235.10" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,951 samples, 12.20%; +0.06%)</title><rect x="118.3" y="341" width="144.0" height="15.0" fill="rgb(255,177,177)" rx="2" ry="2" />
<text  x="121.28" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; +0.01%)</title><rect x="553.4" y="341" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="556.40" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.01%)</title><rect x="569.0" y="309" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="572.03" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="1136.8" y="421" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1139.77" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (9 samples, 0.02%; -0.01%)</title><rect x="244.5" y="229" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="247.46" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (73 samples, 0.15%; -0.01%)</title><rect x="1065.4" y="293" width="1.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1068.37" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (37 samples, 0.08%; -0.00%)</title><rect x="843.7" y="309" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="846.68" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (37 samples, 0.08%; -0.01%)</title><rect x="949.2" y="373" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="952.22" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (632 samples, 1.30%; -0.01%)</title><rect x="904.8" y="405" width="15.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="907.78" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%; -0.01%)</title><rect x="757.0" y="357" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="759.96" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (28 samples, 0.06%; -0.01%)</title><rect x="785.5" y="341" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="788.46" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; -0.01%)</title><rect x="532.1" y="341" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="535.11" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (215 samples, 0.44%; -0.01%)</title><rect x="660.6" y="469" width="5.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="663.56" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (12 samples, 0.02%; -0.04%)</title><rect x="616.6" y="437" width="0.3" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="619.65" y="447.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (9 samples, 0.02%; +0.01%)</title><rect x="93.7" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="96.67" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,016 samples, 4.13%; +0.01%)</title><rect x="901.4" y="421" width="48.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="904.39" y="431.5" >cql3..</text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (73 samples, 0.15%; +0.00%)</title><rect x="552.1" y="373" width="1.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="555.09" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%; +0.01%)</title><rect x="531.1" y="325" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="534.07" y="335.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (13 samples, 0.03%; -0.01%)</title><rect x="311.0" y="197" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="313.95" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%; +0.00%)</title><rect x="915.7" y="357" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="918.71" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (7 samples, 0.01%; -0.01%)</title><rect x="708.0" y="453" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="710.99" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (24 samples, 0.05%; -0.01%)</title><rect x="240.5" y="181" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="243.47" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (8 samples, 0.02%; +0.00%)</title><rect x="445.1" y="309" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="448.14" y="319.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (601 samples, 1.23%; -0.00%)</title><rect x="750.1" y="405" width="14.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="753.11" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="804.3" y="213" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="807.31" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (89 samples, 0.18%; 0.00%)</title><rect x="852.7" y="437" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.73" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (424 samples, 0.87%; -0.06%)</title><rect x="270.6" y="325" width="10.3" height="15.0" fill="rgb(177,177,255)" rx="2" ry="2" />
<text  x="273.64" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%; +0.01%)</title><rect x="806.4" y="229" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="809.39" y="239.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; -0.00%)</title><rect x="529.3" y="325" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="532.30" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (551 samples, 1.13%; +0.04%)</title><rect x="1111.8" y="421" width="13.3" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1114.80" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (18 samples, 0.04%; -0.01%)</title><rect x="480.1" y="277" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="483.11" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (18 samples, 0.04%; -0.00%)</title><rect x="214.2" y="149" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="217.17" y="159.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (696 samples, 1.43%; -0.00%)</title><rect x="805.2" y="261" width="16.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="808.23" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (86 samples, 0.18%; +0.01%)</title><rect x="742.6" y="309" width="2.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="745.64" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (63 samples, 0.13%; -0.02%)</title><rect x="424.0" y="357" width="1.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="427.00" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (10 samples, 0.02%; +0.01%)</title><rect x="705.5" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="708.47" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (381 samples, 0.78%; -0.02%)</title><rect x="715.8" y="469" width="9.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="718.75" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (21 samples, 0.04%; +0.02%)</title><rect x="490.7" y="181" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="493.71" y="191.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (14 samples, 0.03%; -0.01%)</title><rect x="229.5" y="213" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="232.46" y="223.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (386 samples, 0.79%; +0.06%)</title><rect x="381.0" y="165" width="9.3" height="15.0" fill="rgb(255,181,181)" rx="2" ry="2" />
<text  x="383.95" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%; -0.01%)</title><rect x="854.0" y="357" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="856.99" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (23 samples, 0.05%; -0.00%)</title><rect x="1048.0" y="261" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1051.02" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (28 samples, 0.06%; 0.00%)</title><rect x="1177.0" y="501" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1179.96" y="511.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (62 samples, 0.13%; +0.00%)</title><rect x="793.8" y="325" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="796.79" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (601 samples, 1.23%; 0.00%)</title><rect x="905.3" y="389" width="14.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="908.33" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (10 samples, 0.02%; -0.02%)</title><rect x="397.3" y="229" width="0.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="400.26" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,075 samples, 10.41%; -0.00%)</title><rect x="293.3" y="309" width="122.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="296.31" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (45 samples, 0.09%; +0.01%)</title><rect x="694.0" y="469" width="1.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="696.95" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (32 samples, 0.07%; +0.02%)</title><rect x="60.5" y="437" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="63.55" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20 samples, 0.04%; +0.00%)</title><rect x="760.3" y="277" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="763.32" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (346 samples, 0.71%; +0.02%)</title><rect x="813.0" y="181" width="8.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="816.05" y="191.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; +0.01%)</title><rect x="827.2" y="277" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="830.18" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,375 samples, 8.97%; +0.03%)</title><rect x="746.6" y="437" width="105.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="749.60" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (607 samples, 1.24%; -0.02%)</title><rect x="658.2" y="485" width="14.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="661.22" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (12 samples, 0.02%; 0.00%)</title><rect x="702.8" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.79" y="511.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (38 samples, 0.08%; -0.02%)</title><rect x="908.4" y="309" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="911.43" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%; +0.01%)</title><rect x="1069.8" y="325" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1072.82" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%; 0.00%)</title><rect x="17.2" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.21" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (9 samples, 0.02%; 0.00%)</title><rect x="20.1" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.09" y="399.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (40 samples, 0.08%; -0.02%)</title><rect x="743.3" y="293" width="0.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="746.27" y="303.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (117 samples, 0.24%; +0.01%)</title><rect x="540.5" y="293" width="2.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="543.55" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1,027 samples, 2.11%; -0.01%)</title><rect x="656.9" y="501" width="24.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="659.93" y="511.5" >s..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (5 samples, 0.01%; +0.00%)</title><rect x="901.3" y="421" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="904.27" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (45 samples, 0.09%; +0.00%)</title><rect x="295.3" y="261" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="298.35" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (24 samples, 0.05%; -0.01%)</title><rect x="738.6" y="389" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="741.57" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="101.6" y="421" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="104.63" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%; -0.00%)</title><rect x="662.0" y="389" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="664.97" y="399.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (6 samples, 0.01%; -0.00%)</title><rect x="424.6" y="341" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="427.58" y="351.5" ></text>
</g>
<g >
<title>row::row (1,448 samples, 2.97%; +0.00%)</title><rect x="171.2" y="149" width="35.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="174.22" y="159.5" >ro..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (29 samples, 0.06%; -0.01%)</title><rect x="708.6" y="437" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="711.57" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="1137.6" y="421" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1140.64" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (46 samples, 0.09%; +0.01%)</title><rect x="963.3" y="341" width="1.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="966.28" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (5 samples, 0.01%; +0.00%)</title><rect x="410.3" y="261" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="413.33" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.16%; +0.02%)</title><rect x="1129.7" y="389" width="1.9" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1132.65" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (7 samples, 0.01%; +0.01%)</title><rect x="915.9" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="918.86" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (48 samples, 0.10%; +0.02%)</title><rect x="783.7" y="341" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="786.72" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (38 samples, 0.08%; -0.01%)</title><rect x="206.5" y="149" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="209.50" y="159.5" ></text>
</g>
<g >
<title>[[vdso]] (277 samples, 0.57%; +0.07%)</title><rect x="1178.9" y="613" width="6.7" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1181.87" y="623.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (66 samples, 0.14%; -0.04%)</title><rect x="388.7" y="133" width="1.6" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="391.69" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.02%; +0.01%)</title><rect x="425.5" y="357" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="428.52" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (58 samples, 0.12%; +0.02%)</title><rect x="1116.3" y="373" width="1.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1119.30" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (7 samples, 0.01%; +0.00%)</title><rect x="909.2" y="293" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="912.18" y="303.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.01%)</title><rect x="1127.0" y="421" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1130.04" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (25 samples, 0.05%; +0.01%)</title><rect x="1151.5" y="453" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1154.48" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%; +0.00%)</title><rect x="711.0" y="485" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="713.96" y="495.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (440 samples, 0.90%; +0.01%)</title><rect x="481.8" y="277" width="10.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="484.85" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (31 samples, 0.06%; -0.01%)</title><rect x="491.2" y="197" width="0.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="494.21" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume (23 samples, 0.05%; +0.01%)</title><rect x="278.3" y="277" width="0.5" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="281.26" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (16 samples, 0.03%; -0.02%)</title><rect x="150.9" y="229" width="0.4" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="153.92" y="239.5" ></text>
</g>
<g >
<title>compound_type&lt; (74 samples, 0.15%; -0.02%)</title><rect x="924.4" y="357" width="1.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="927.40" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (12 samples, 0.02%; -0.01%)</title><rect x="59.2" y="421" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="62.19" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (82 samples, 0.17%; +0.00%)</title><rect x="1119.2" y="341" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1122.20" y="351.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (67 samples, 0.14%; +0.01%)</title><rect x="934.1" y="389" width="1.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="937.10" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (84 samples, 0.17%; +0.01%)</title><rect x="555.8" y="357" width="2.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="558.84" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (15 samples, 0.03%; -0.01%)</title><rect x="815.5" y="117" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="818.54" y="127.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (68 samples, 0.14%; -0.00%)</title><rect x="799.6" y="293" width="1.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="802.62" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (11 samples, 0.02%; 0.00%)</title><rect x="787.2" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="790.16" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="591.2" y="357" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="594.22" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (43 samples, 0.09%; +0.01%)</title><rect x="539.2" y="293" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="542.19" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%; -0.01%)</title><rect x="1041.1" y="213" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1044.10" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (64 samples, 0.13%; 0.00%)</title><rect x="14.8" y="357" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.82" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (5 samples, 0.01%; -0.01%)</title><rect x="862.8" y="421" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="865.84" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.03%; -0.01%)</title><rect x="413.8" y="229" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="416.79" y="239.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (14 samples, 0.03%; +0.01%)</title><rect x="613.6" y="405" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="616.57" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (31 samples, 0.06%; -0.01%)</title><rect x="332.0" y="181" width="0.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="335.03" y="191.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (112 samples, 0.23%; +0.01%)</title><rect x="845.0" y="373" width="2.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="847.96" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (9 samples, 0.02%; +0.02%)</title><rect x="257.0" y="277" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="259.97" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (6 samples, 0.01%; 0.00%)</title><rect x="421.1" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="424.12" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (66 samples, 0.14%; -0.02%)</title><rect x="448.7" y="261" width="1.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="451.73" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (68 samples, 0.14%; +0.00%)</title><rect x="758.3" y="325" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="761.32" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (7 samples, 0.01%; -0.00%)</title><rect x="957.7" y="421" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="960.74" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (7 samples, 0.01%; +0.01%)</title><rect x="1001.3" y="341" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1004.27" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (10 samples, 0.02%; -0.02%)</title><rect x="46.8" y="485" width="0.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="49.80" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%; 0.00%)</title><rect x="587.3" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="590.27" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (105 samples, 0.22%; +0.01%)</title><rect x="633.0" y="437" width="2.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="636.00" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (9 samples, 0.02%; +0.01%)</title><rect x="398.2" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="401.23" y="255.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (15 samples, 0.03%; +0.00%)</title><rect x="35.2" y="437" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="38.19" y="447.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%; +0.00%)</title><rect x="145.9" y="261" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="148.89" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; -0.03%)</title><rect x="759.3" y="277" width="0.2" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="762.33" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="877.3" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="880.31" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (110 samples, 0.23%; +0.01%)</title><rect x="742.1" y="325" width="2.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="745.06" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,343 samples, 2.75%; -0.01%)</title><rect x="562.5" y="405" width="32.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="565.47" y="415.5" >fl..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%; -0.00%)</title><rect x="1159.2" y="405" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1162.22" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (27 samples, 0.06%; 0.00%)</title><rect x="883.8" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.80" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (5 samples, 0.01%; 0.00%)</title><rect x="702.9" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.88" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.02%; -0.01%)</title><rect x="785.9" y="325" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="788.85" y="335.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (292 samples, 0.60%; +0.01%)</title><rect x="206.3" y="165" width="7.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="209.26" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (18 samples, 0.04%; +0.00%)</title><rect x="416.9" y="293" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="419.93" y="303.5" ></text>
</g>
<g >
<title>query::querier&lt; (22 samples, 0.05%; +0.01%)</title><rect x="56.6" y="453" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="59.58" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.00%)</title><rect x="771.0" y="405" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="773.99" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (7 samples, 0.01%; -0.01%)</title><rect x="260.5" y="325" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="263.50" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (14 samples, 0.03%; -0.00%)</title><rect x="571.0" y="277" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="573.99" y="287.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.10%; -0.00%)</title><rect x="991.4" y="293" width="1.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="994.45" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (310 samples, 0.64%; +0.03%)</title><rect x="757.2" y="373" width="7.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="760.15" y="383.5" ></text>
</g>
<g >
<title>posix_memalign (7 samples, 0.01%; 0.00%)</title><rect x="192.4" y="69" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="195.37" y="79.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%; -0.00%)</title><rect x="755.6" y="373" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="758.61" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (823 samples, 1.69%; +0.01%)</title><rect x="562.8" y="389" width="19.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="565.83" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,908 samples, 10.06%; +0.04%)</title><rect x="297.4" y="293" width="118.7" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="300.35" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="598.2" y="421" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="601.23" y="431.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (9 samples, 0.02%; +0.01%)</title><rect x="1025.3" y="245" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1028.30" y="255.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (44 samples, 0.09%; -0.00%)</title><rect x="583.8" y="357" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="586.79" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%; +0.00%)</title><rect x="46.5" y="485" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="49.54" y="495.5" ></text>
</g>
<g >
<title>make_combined_reader (760 samples, 1.56%; +0.01%)</title><rect x="444.2" y="325" width="18.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="447.20" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (46 samples, 0.09%; +0.02%)</title><rect x="447.1" y="277" width="1.1" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="450.10" y="287.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (17 samples, 0.03%; 0.00%)</title><rect x="1068.3" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1071.27" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (5 samples, 0.01%; +0.00%)</title><rect x="428.8" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="431.79" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (47 samples, 0.10%; -0.02%)</title><rect x="1154.2" y="437" width="1.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1157.24" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (24 samples, 0.05%; +0.00%)</title><rect x="518.5" y="181" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="521.46" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (276 samples, 0.57%; -0.01%)</title><rect x="455.8" y="309" width="6.6" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="458.77" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (75 samples, 0.15%; +0.02%)</title><rect x="903.0" y="405" width="1.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="905.96" y="415.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%; -0.01%)</title><rect x="946.4" y="373" width="1.0" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="949.44" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (10 samples, 0.02%; +0.01%)</title><rect x="854.9" y="437" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="857.93" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (38 samples, 0.08%; +0.01%)</title><rect x="283.5" y="389" width="0.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="286.47" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; +0.00%)</title><rect x="918.6" y="309" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="921.59" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%; +0.00%)</title><rect x="247.0" y="213" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="250.03" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (24 samples, 0.05%; -0.00%)</title><rect x="762.0" y="261" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="765.04" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (365 samples, 0.75%; -0.03%)</title><rect x="572.2" y="309" width="8.9" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="575.22" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; -0.00%)</title><rect x="1039.7" y="197" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1042.74" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%; +0.01%)</title><rect x="431.0" y="421" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="433.99" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (6 samples, 0.01%; 0.00%)</title><rect x="884.2" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.16" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (10 samples, 0.02%; +0.02%)</title><rect x="611.9" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="614.86" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (59 samples, 0.12%; 0.00%)</title><rect x="17.2" y="341" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.16" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%; +0.02%)</title><rect x="951.1" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="954.09" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%; 0.00%)</title><rect x="42.1" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="45.13" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (35 samples, 0.07%; +0.00%)</title><rect x="578.2" y="277" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="581.20" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%; +0.00%)</title><rect x="751.3" y="389" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="754.35" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (8 samples, 0.02%; -0.02%)</title><rect x="170.7" y="149" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="173.66" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (107 samples, 0.22%; 0.00%)</title><rect x="16.4" y="373" width="2.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.41" y="383.5" ></text>
</g>
<g >
<title>schema_registry::get (178 samples, 0.36%; -0.00%)</title><rect x="981.2" y="357" width="4.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="984.19" y="367.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (5 samples, 0.01%; -0.00%)</title><rect x="913.4" y="309" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="916.36" y="319.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (35 samples, 0.07%; -0.01%)</title><rect x="239.1" y="181" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="242.11" y="191.5" ></text>
</g>
<g >
<title>database::find_column_family (53 samples, 0.11%; -0.01%)</title><rect x="1024.0" y="245" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1027.01" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%; -0.00%)</title><rect x="670.8" y="437" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="673.80" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%; +0.03%)</title><rect x="93.0" y="421" width="0.7" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="96.04" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (162 samples, 0.33%; +0.01%)</title><rect x="223.4" y="197" width="3.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="226.41" y="207.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%; +0.00%)</title><rect x="566.6" y="293" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="569.61" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (18 samples, 0.04%; -0.00%)</title><rect x="883.1" y="469" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="886.12" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (5 samples, 0.01%; +0.00%)</title><rect x="1166.9" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1169.94" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%; -0.02%)</title><rect x="170.9" y="149" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="173.86" y="159.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; +0.00%)</title><rect x="939.3" y="309" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="942.33" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="324.5" y="213" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="327.48" y="223.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (7 samples, 0.01%; -0.00%)</title><rect x="1141.9" y="277" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1144.95" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (87 samples, 0.18%; +0.01%)</title><rect x="1158.2" y="453" width="2.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1161.18" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (30 samples, 0.06%; +0.01%)</title><rect x="1000.3" y="277" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1003.30" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (8 samples, 0.02%; +0.01%)</title><rect x="324.3" y="213" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="327.28" y="223.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (67 samples, 0.14%; +0.00%)</title><rect x="878.0" y="453" width="1.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="881.01" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (5 samples, 0.01%; -0.00%)</title><rect x="710.4" y="453" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="713.41" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.03%; +0.01%)</title><rect x="73.1" y="453" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="76.10" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%; -0.02%)</title><rect x="593.3" y="373" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="596.30" y="383.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (14 samples, 0.03%; +0.00%)</title><rect x="1140.8" y="469" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1143.81" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="447.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,685 samples, 3.46%; -0.00%)</title><rect x="790.8" y="357" width="40.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="793.81" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (30 samples, 0.06%; -0.01%)</title><rect x="621.5" y="437" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="624.49" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; 0.00%)</title><rect x="1126.8" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1129.85" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (14 samples, 0.03%; +0.01%)</title><rect x="838.2" y="341" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="841.21" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="416.7" y="277" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="419.74" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%; +0.00%)</title><rect x="205.5" y="133" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="208.53" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="37.4" y="389" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="40.37" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (20 samples, 0.04%; +0.01%)</title><rect x="320.4" y="181" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="323.44" y="191.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%; +0.01%)</title><rect x="1109.7" y="389" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1112.72" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (7 samples, 0.01%; +0.01%)</title><rect x="70.7" y="453" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="73.71" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (15 samples, 0.03%; +0.01%)</title><rect x="220.3" y="149" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="223.26" y="159.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (7 samples, 0.01%; -0.01%)</title><rect x="721.6" y="421" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="724.59" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (6 samples, 0.01%; -0.00%)</title><rect x="913.6" y="309" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="916.63" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (26 samples, 0.05%; -0.03%)</title><rect x="765.4" y="389" width="0.7" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="768.43" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (55 samples, 0.11%; +0.01%)</title><rect x="1158.9" y="421" width="1.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1161.93" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; -0.00%)</title><rect x="757.0" y="341" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="760.01" y="351.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; -0.00%)</title><rect x="948.5" y="373" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="951.47" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (10 samples, 0.02%; +0.00%)</title><rect x="150.7" y="245" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="153.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (8 samples, 0.02%; -0.01%)</title><rect x="690.0" y="437" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="693.01" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (25 samples, 0.05%; -0.01%)</title><rect x="807.8" y="181" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="810.77" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (54 samples, 0.11%; +0.08%)</title><rect x="94.5" y="421" width="1.3" height="15.0" fill="rgb(255,170,170)" rx="2" ry="2" />
<text  x="97.49" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (5 samples, 0.01%; -0.00%)</title><rect x="774.7" y="373" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="777.67" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (111 samples, 0.23%; -0.00%)</title><rect x="1003.8" y="277" width="2.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1006.83" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (10 samples, 0.02%; -0.01%)</title><rect x="879.7" y="485" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="882.73" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (5 samples, 0.01%; +0.01%)</title><rect x="1002.5" y="325" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1005.50" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (161 samples, 0.33%; -0.05%)</title><rect x="1090.6" y="261" width="3.9" height="15.0" fill="rgb(183,183,255)" rx="2" ry="2" />
<text  x="1093.63" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%; +0.01%)</title><rect x="424.7" y="325" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="427.72" y="335.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; -0.01%)</title><rect x="508.7" y="261" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="511.66" y="271.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (8 samples, 0.02%; +0.01%)</title><rect x="693.6" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="696.62" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%; +0.03%)</title><rect x="601.1" y="405" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="604.11" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (13 samples, 0.03%; 0.00%)</title><rect x="454.5" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="457.51" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (39 samples, 0.08%; +0.03%)</title><rect x="100.1" y="421" width="1.0" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="103.13" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%; +0.00%)</title><rect x="933.9" y="389" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="936.86" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (107 samples, 0.22%; +0.03%)</title><rect x="923.6" y="373" width="2.6" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="926.65" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (10 samples, 0.02%; 0.00%)</title><rect x="1175.9" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.94" y="463.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (81 samples, 0.17%; +0.00%)</title><rect x="609.9" y="405" width="2.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="612.90" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (46 samples, 0.09%; +0.01%)</title><rect x="272.2" y="293" width="1.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="275.19" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (340 samples, 0.70%; +0.01%)</title><rect x="512.5" y="245" width="8.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="515.48" y="255.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (15 samples, 0.03%; -0.01%)</title><rect x="1177.6" y="629" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1180.64" y="639.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%; -0.00%)</title><rect x="632.7" y="437" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="635.69" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%; +0.01%)</title><rect x="766.3" y="389" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="769.25" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (9 samples, 0.02%; +0.01%)</title><rect x="1145.4" y="501" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1148.41" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (12 samples, 0.02%; -0.00%)</title><rect x="450.5" y="261" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="453.54" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (64 samples, 0.13%; 0.00%)</title><rect x="14.8" y="373" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.82" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (5 samples, 0.01%; 0.00%)</title><rect x="21.0" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.01%)</title><rect x="888.2" y="437" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="891.25" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (63 samples, 0.13%; -0.01%)</title><rect x="133.4" y="261" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="136.45" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (62 samples, 0.13%; 0.00%)</title><rect x="1160.3" y="453" width="1.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1163.29" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (5 samples, 0.01%; -0.02%)</title><rect x="665.4" y="453" width="0.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="668.40" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%; 0.00%)</title><rect x="520.6" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="523.56" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.01%)</title><rect x="1050.8" y="229" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1053.85" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (125 samples, 0.26%; +0.00%)</title><rect x="1118.6" y="389" width="3.0" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1121.62" y="399.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; -0.00%)</title><rect x="571.7" y="277" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="574.69" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.02%; -0.01%)</title><rect x="440.6" y="341" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="443.60" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; 0.00%)</title><rect x="296.2" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="299.19" y="239.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (6 samples, 0.01%; 0.00%)</title><rect x="1039.2" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.16" y="191.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (92 samples, 0.19%; +0.00%)</title><rect x="238.8" y="197" width="2.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="241.82" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (60 samples, 0.12%; -0.00%)</title><rect x="545.7" y="341" width="1.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="548.66" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; +0.00%)</title><rect x="964.7" y="389" width="1.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="967.71" y="399.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (6 samples, 0.01%; +0.00%)</title><rect x="1153.5" y="469" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1156.49" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="611.5" y="373" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="614.49" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%; +0.00%)</title><rect x="281.9" y="357" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="284.89" y="367.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (5 samples, 0.01%; +0.00%)</title><rect x="1040.9" y="213" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1043.88" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (12 samples, 0.02%; +0.00%)</title><rect x="557.6" y="293" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="560.56" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="701.8" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="704.79" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%; -0.01%)</title><rect x="283.2" y="357" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="286.20" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (8 samples, 0.02%; +0.01%)</title><rect x="826.2" y="261" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="829.23" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%; -0.00%)</title><rect x="687.6" y="469" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="690.59" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%; +0.00%)</title><rect x="702.8" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="705.83" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (10 samples, 0.02%; +0.01%)</title><rect x="667.5" y="373" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="670.46" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (304 samples, 0.62%; +0.01%)</title><rect x="1156.6" y="469" width="7.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1159.63" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (28 samples, 0.06%; 0.00%)</title><rect x="17.7" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.74" y="319.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (25 samples, 0.05%; +0.00%)</title><rect x="156.6" y="213" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="159.63" y="223.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.03%; -0.04%)</title><rect x="626.7" y="421" width="0.4" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="629.74" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="566.5" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="569.49" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (17 samples, 0.03%; -0.00%)</title><rect x="150.9" y="245" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="153.89" y="255.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%; +0.00%)</title><rect x="863.3" y="405" width="1.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="866.30" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (156 samples, 0.32%; -0.03%)</title><rect x="936.0" y="373" width="3.7" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="938.96" y="383.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (94 samples, 0.19%; -0.07%)</title><rect x="11.5" y="581" width="2.3" height="15.0" fill="rgb(173,173,255)" rx="2" ry="2" />
<text  x="14.50" y="591.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (55 samples, 0.11%; +0.00%)</title><rect x="1164.5" y="469" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1167.52" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,048 samples, 8.30%; -0.03%)</title><rect x="303.1" y="261" width="98.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="306.11" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (27 samples, 0.06%; -0.00%)</title><rect x="741.2" y="325" width="0.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="744.16" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (33 samples, 0.07%; +0.01%)</title><rect x="202.2" y="117" width="0.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="205.21" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (8 samples, 0.02%; 0.00%)</title><rect x="262.0" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.00" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.01%)</title><rect x="414.2" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="417.22" y="287.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (428 samples, 0.88%; -0.02%)</title><rect x="533.3" y="325" width="10.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="536.32" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="944.8" y="405" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="947.77" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (8 samples, 0.02%; 0.00%)</title><rect x="173.2" y="133" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="176.15" y="143.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; 0.00%)</title><rect x="490.5" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="493.51" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (35 samples, 0.07%; -0.01%)</title><rect x="745.5" y="389" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="748.49" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (50 samples, 0.10%; -0.03%)</title><rect x="620.1" y="437" width="1.2" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="623.08" y="447.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; +0.00%)</title><rect x="546.0" y="325" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="548.99" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.01%; +0.00%)</title><rect x="22.4" y="517" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="25.39" y="527.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.03%; -0.00%)</title><rect x="866.8" y="341" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="869.81" y="351.5" ></text>
</g>
<g >
<title>__start_context (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="607.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (16 samples, 0.03%; -0.01%)</title><rect x="724.5" y="453" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="727.54" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%; -0.00%)</title><rect x="825.8" y="261" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="828.75" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (503 samples, 1.03%; -0.06%)</title><rect x="269.6" y="341" width="12.2" height="15.0" fill="rgb(181,181,255)" rx="2" ry="2" />
<text  x="272.65" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; -0.01%)</title><rect x="980.8" y="325" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="983.80" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (14 samples, 0.03%; -0.00%)</title><rect x="1054.1" y="213" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1057.14" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.04%)</title><rect x="948.5" y="357" width="0.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="951.47" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (30 samples, 0.06%; +0.05%)</title><rect x="64.8" y="389" width="0.7" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="67.76" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (28 samples, 0.06%; -0.00%)</title><rect x="904.1" y="389" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="907.07" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.02%)</title><rect x="1032.6" y="181" width="0.1" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1035.58" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (343 samples, 0.70%; -0.01%)</title><rect x="401.8" y="245" width="8.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="404.76" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.00%)</title><rect x="828.4" y="261" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="831.39" y="271.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (8 samples, 0.02%; +0.00%)</title><rect x="1142.2" y="181" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1145.16" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%; -0.02%)</title><rect x="39.0" y="453" width="0.3" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="41.96" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (63 samples, 0.13%; +0.09%)</title><rect x="318.8" y="181" width="1.5" height="15.0" fill="rgb(255,163,163)" rx="2" ry="2" />
<text  x="321.77" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="831.5" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="834.46" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; +0.00%)</title><rect x="777.2" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="780.24" y="319.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (13 samples, 0.03%; -0.00%)</title><rect x="1141.4" y="245" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1144.37" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="975.0" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="977.99" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,529 samples, 11.34%; -0.01%)</title><rect x="289.2" y="373" width="133.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="292.22" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (71 samples, 0.15%; +0.03%)</title><rect x="152.7" y="197" width="1.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="155.73" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%; +0.00%)</title><rect x="761.4" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="764.41" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (38 samples, 0.08%; +0.05%)</title><rect x="1100.0" y="341" width="1.0" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="1103.04" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%; +0.01%)</title><rect x="825.2" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="828.22" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (15 samples, 0.03%; 0.00%)</title><rect x="700.4" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="703.44" y="463.5" ></text>
</g>
<g >
<title>local_schema_registry (10 samples, 0.02%; -0.01%)</title><rect x="979.0" y="357" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="982.01" y="367.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (24 samples, 0.05%; +0.02%)</title><rect x="142.6" y="261" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="145.64" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,472 samples, 11.22%; +0.01%)</title><rect x="289.4" y="357" width="132.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="292.44" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>mutation_partition::lower_bound (19 samples, 0.04%; -0.01%)</title><rect x="235.6" y="213" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="238.58" y="223.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.02%; -0.00%)</title><rect x="1049.8" y="277" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1052.78" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (187 samples, 0.38%; -0.02%)</title><rect x="740.3" y="373" width="4.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="743.34" y="383.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%; +0.00%)</title><rect x="672.9" y="485" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="675.90" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (22 samples, 0.05%; +0.04%)</title><rect x="1099.1" y="325" width="0.6" height="15.0" fill="rgb(255,188,188)" rx="2" ry="2" />
<text  x="1102.14" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (76 samples, 0.16%; +0.00%)</title><rect x="662.8" y="437" width="1.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="665.76" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="848.2" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="851.16" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (45 samples, 0.09%; 0.00%)</title><rect x="753.8" y="325" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="756.82" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%; -0.01%)</title><rect x="679.6" y="469" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="682.61" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%; 0.00%)</title><rect x="702.1" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.11" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; -0.01%)</title><rect x="502.7" y="309" width="0.1" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="505.66" y="319.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (68 samples, 0.14%; -0.01%)</title><rect x="1134.9" y="405" width="1.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1137.88" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="599.5" y="389" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="602.49" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (437 samples, 0.90%; -0.02%)</title><rect x="1178.1" y="629" width="10.6" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="1181.10" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%; 0.00%)</title><rect x="1169.8" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1172.77" y="479.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.13%; -0.00%)</title><rect x="873.0" y="437" width="1.6" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="876.03" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%; +0.01%)</title><rect x="672.5" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="675.47" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,345 samples, 4.81%; +0.02%)</title><rect x="165.4" y="213" width="56.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="168.44" y="223.5" >logall..</text>
</g>
<g >
<title>mutation_querier::mutation_querier (9 samples, 0.02%; -0.02%)</title><rect x="310.7" y="197" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="313.73" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (718 samples, 1.47%; +0.03%)</title><rect x="376.2" y="181" width="17.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="379.19" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.03%; -0.00%)</title><rect x="828.2" y="277" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="831.22" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (11 samples, 0.02%; +0.02%)</title><rect x="677.9" y="485" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="680.94" y="495.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.17%; -0.00%)</title><rect x="1119.2" y="357" width="2.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1122.18" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (23 samples, 0.05%; -0.01%)</title><rect x="221.0" y="165" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="224.04" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.03%; +0.00%)</title><rect x="1050.6" y="245" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1053.61" y="255.5" ></text>
</g>
<g >
<title>utils::array_search_gt (9 samples, 0.02%; +0.00%)</title><rect x="479.9" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="482.89" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="868.0" y="389" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="870.97" y="399.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; +0.00%)</title><rect x="594.5" y="389" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="597.48" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.03%; +0.01%)</title><rect x="693.2" y="469" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="696.16" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.02%; +0.00%)</title><rect x="447.9" y="261" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="450.93" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (5 samples, 0.01%; +0.01%)</title><rect x="804.8" y="261" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="807.82" y="271.5" ></text>
</g>
<g >
<title>make_random_seq (5 samples, 0.01%; +0.01%)</title><rect x="734.7" y="469" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="737.65" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (14 samples, 0.03%; +0.00%)</title><rect x="18.6" y="341" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="21.64" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.02%; +0.01%)</title><rect x="669.2" y="453" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="672.23" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.01%; 0.00%)</title><rect x="663.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="666.88" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (33 samples, 0.07%; +0.01%)</title><rect x="353.6" y="149" width="0.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="356.61" y="159.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%; +0.00%)</title><rect x="514.6" y="197" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="517.61" y="207.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (8 samples, 0.02%; +0.00%)</title><rect x="370.3" y="213" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="373.26" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.01%)</title><rect x="505.2" y="277" width="0.7" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="508.20" y="287.5" ></text>
</g>
<g >
<title>database::find_uuid (166 samples, 0.34%; -0.00%)</title><rect x="840.8" y="357" width="4.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="843.78" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (17 samples, 0.03%; +0.01%)</title><rect x="955.2" y="341" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="958.15" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%; -0.01%)</title><rect x="1106.2" y="373" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1109.18" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (15 samples, 0.03%; +0.00%)</title><rect x="993.4" y="341" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="996.38" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (453 samples, 0.93%; -0.02%)</title><rect x="29.4" y="501" width="10.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="32.36" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%; +0.03%)</title><rect x="155.5" y="165" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="158.49" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (10 samples, 0.02%; +0.01%)</title><rect x="707.5" y="453" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="710.50" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (6 samples, 0.01%; -0.00%)</title><rect x="1006.5" y="277" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1009.52" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (110 samples, 0.23%; +0.01%)</title><rect x="937.0" y="357" width="2.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="939.96" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (21 samples, 0.04%; +0.01%)</title><rect x="963.8" y="325" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="966.84" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.01%; -0.02%)</title><rect x="244.2" y="229" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="247.19" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (15 samples, 0.03%; +0.00%)</title><rect x="945.5" y="405" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="948.52" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (15 samples, 0.03%; +0.02%)</title><rect x="494.1" y="325" width="0.4" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="497.14" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (44 samples, 0.09%; -0.01%)</title><rect x="839.7" y="309" width="1.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="842.69" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (87 samples, 0.18%; +0.02%)</title><rect x="146.5" y="261" width="2.1" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="149.54" y="271.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (61 samples, 0.13%; +0.01%)</title><rect x="744.9" y="405" width="1.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="747.86" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%; -0.02%)</title><rect x="965.7" y="373" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="968.73" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (28 samples, 0.06%; -0.01%)</title><rect x="454.9" y="293" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="457.90" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (52 samples, 0.11%; -0.02%)</title><rect x="335.1" y="181" width="1.3" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="338.15" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (60 samples, 0.12%; +0.01%)</title><rect x="661.3" y="437" width="1.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="664.31" y="447.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%; -0.00%)</title><rect x="908.3" y="293" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="911.26" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (15 samples, 0.03%; -0.01%)</title><rect x="1150.1" y="485" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1153.12" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="599.9" y="389" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="602.93" y="399.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (8 samples, 0.02%; +0.00%)</title><rect x="468.8" y="325" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="471.81" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (30 samples, 0.06%; +0.02%)</title><rect x="763.6" y="261" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="766.64" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%; -0.00%)</title><rect x="502.5" y="309" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="505.51" y="319.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10 samples, 0.02%; +0.01%)</title><rect x="1002.0" y="325" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1005.02" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (18 samples, 0.04%; +0.00%)</title><rect x="717.3" y="453" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="720.33" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%; -0.00%)</title><rect x="1077.7" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1080.73" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.02%; -0.00%)</title><rect x="203.1" y="117" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="206.06" y="127.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (7 samples, 0.01%; +0.00%)</title><rect x="74.7" y="453" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="77.75" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (6 samples, 0.01%; 0.00%)</title><rect x="262.4" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="265.41" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%; +0.01%)</title><rect x="875.3" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="878.30" y="479.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.01%; 0.00%)</title><rect x="20.6" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.65" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (55 samples, 0.11%; +0.04%)</title><rect x="1016.7" y="245" width="1.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1019.71" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.01%)</title><rect x="846.4" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="849.39" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (35 samples, 0.07%; 0.00%)</title><rect x="408.8" y="213" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="411.78" y="223.5" ></text>
</g>
<g >
<title>from_hex (5 samples, 0.01%; -0.00%)</title><rect x="19.7" y="341" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="22.65" y="351.5" ></text>
</g>
<g >
<title>table::query (26 samples, 0.05%; 0.00%)</title><rect x="1175.7" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.75" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (135 samples, 0.28%; -0.00%)</title><rect x="96.0" y="421" width="3.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="99.02" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%; +0.00%)</title><rect x="1155.1" y="405" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1158.08" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (6 samples, 0.01%; +0.00%)</title><rect x="127.2" y="293" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="130.16" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (44 samples, 0.09%; +0.01%)</title><rect x="579.1" y="293" width="1.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="582.12" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (9 samples, 0.02%; +0.01%)</title><rect x="421.6" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="424.63" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%; +0.01%)</title><rect x="844.6" y="325" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="847.58" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (12 samples, 0.02%; +0.02%)</title><rect x="259.1" y="309" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="262.15" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (19 samples, 0.04%; +0.03%)</title><rect x="999.0" y="261" width="0.4" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="1001.97" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (37 samples, 0.08%; -0.00%)</title><rect x="837.7" y="373" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="840.66" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%; +0.03%)</title><rect x="60.2" y="437" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="63.18" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (39 samples, 0.08%; +0.01%)</title><rect x="523.2" y="277" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="526.20" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (8 samples, 0.02%; +0.01%)</title><rect x="1137.0" y="421" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1140.03" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (30 samples, 0.06%; +0.01%)</title><rect x="796.9" y="293" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="799.93" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.00%)</title><rect x="584.7" y="325" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="587.66" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%; +0.00%)</title><rect x="36.2" y="421" width="0.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="39.16" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; +0.02%)</title><rect x="542.3" y="245" width="0.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="545.29" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (131 samples, 0.27%; +0.01%)</title><rect x="761.2" y="293" width="3.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="764.20" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="453" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; -0.01%)</title><rect x="1038.1" y="165" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1041.14" y="175.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (296 samples, 0.61%; -0.01%)</title><rect x="1082.5" y="277" width="7.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1085.47" y="287.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (124 samples, 0.25%; 0.00%)</title><rect x="1153.6" y="469" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.63" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%; +0.00%)</title><rect x="398.8" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="401.78" y="239.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (572 samples, 1.17%; +0.01%)</title><rect x="310.3" y="213" width="13.9" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="313.35" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="665.9" y="453" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="668.86" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.01%; -0.02%)</title><rect x="150.3" y="245" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="153.34" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (28 samples, 0.06%; -0.01%)</title><rect x="592.5" y="373" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="595.50" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (7 samples, 0.01%; 0.00%)</title><rect x="883.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.87" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (56 samples, 0.11%; -0.02%)</title><rect x="392.0" y="165" width="1.4" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="395.01" y="175.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="448.6" y="261" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="451.56" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (12 samples, 0.02%; +0.01%)</title><rect x="650.4" y="453" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="653.40" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (9 samples, 0.02%; +0.01%)</title><rect x="23.0" y="517" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="25.97" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.01%)</title><rect x="704.5" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="707.50" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (5 samples, 0.01%; +0.01%)</title><rect x="957.2" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="960.21" y="415.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%; -0.02%)</title><rect x="44.2" y="501" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="47.19" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (144 samples, 0.30%; -0.00%)</title><rect x="1003.3" y="309" width="3.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1006.33" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%; +0.01%)</title><rect x="453.1" y="261" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="456.08" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (9 samples, 0.02%; 0.00%)</title><rect x="1040.5" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1043.52" y="223.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (23 samples, 0.05%; -0.02%)</title><rect x="65.6" y="389" width="0.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="68.58" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (13 samples, 0.03%; +0.02%)</title><rect x="867.6" y="325" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="870.56" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%; +0.03%)</title><rect x="1004.3" y="245" width="1.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1007.29" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (212 samples, 0.43%; -0.00%)</title><rect x="222.5" y="229" width="5.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="225.49" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%; +0.00%)</title><rect x="409.6" y="213" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="412.62" y="223.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; 0.00%)</title><rect x="1159.6" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1162.63" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (118 samples, 0.24%; +0.02%)</title><rect x="496.6" y="309" width="2.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="499.56" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (57 samples, 0.12%; +0.00%)</title><rect x="127.3" y="293" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="130.30" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,704 samples, 9.65%; +0.00%)</title><rect x="433.6" y="389" width="113.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="436.60" y="399.5" >std::function&lt;..</text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (79 samples, 0.16%; +0.02%)</title><rect x="628.7" y="389" width="1.9" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="631.72" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.02%; +0.01%)</title><rect x="1038.3" y="165" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1041.31" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.01%; +0.01%)</title><rect x="700.9" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="703.87" y="495.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; 0.00%)</title><rect x="1052.0" y="245" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1055.01" y="255.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,393 samples, 2.86%; -0.00%)</title><rect x="561.5" y="437" width="33.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="564.48" y="447.5" >qu..</text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (204 samples, 0.42%; -0.02%)</title><rect x="1074.1" y="325" width="4.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1077.10" y="335.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (11 samples, 0.02%; 0.00%)</title><rect x="1097.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1100.23" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (24 samples, 0.05%; +0.02%)</title><rect x="429.0" y="389" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="432.01" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (10 samples, 0.02%; -0.02%)</title><rect x="915.5" y="357" width="0.2" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="918.47" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (805 samples, 1.65%; -0.01%)</title><rect x="1080.2" y="341" width="19.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1083.22" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (98 samples, 0.20%; +0.02%)</title><rect x="385.3" y="149" width="2.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="388.33" y="159.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%; +0.00%)</title><rect x="220.0" y="149" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="222.95" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.02%; -0.00%)</title><rect x="1120.9" y="325" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1123.90" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (13 samples, 0.03%; 0.00%)</title><rect x="14.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.86" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%; +0.00%)</title><rect x="1056.0" y="293" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1059.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (89 samples, 0.18%; -0.01%)</title><rect x="948.0" y="405" width="2.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="950.97" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (17 samples, 0.03%; -0.01%)</title><rect x="458.8" y="261" width="0.4" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="461.82" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (9 samples, 0.02%; -0.01%)</title><rect x="792.0" y="341" width="0.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="795.05" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (72 samples, 0.15%; +0.01%)</title><rect x="279.2" y="309" width="1.7" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="282.16" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (28 samples, 0.06%; +0.01%)</title><rect x="760.1" y="293" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="763.13" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::take_value (6 samples, 0.01%; +0.01%)</title><rect x="750.9" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="753.89" y="383.5" ></text>
</g>
<g >
<title>query::result::result (39 samples, 0.08%; +0.02%)</title><rect x="605.1" y="421" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="608.06" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (131 samples, 0.27%; -0.01%)</title><rect x="238.4" y="213" width="3.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="241.44" y="223.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,780 samples, 5.70%; +0.05%)</title><rect x="780.4" y="405" width="67.3" height="15.0" fill="rgb(255,184,184)" rx="2" ry="2" />
<text  x="783.43" y="415.5" >service..</text>
</g>
<g >
<title>reader_selector::~reader_selector (6 samples, 0.01%; -0.01%)</title><rect x="587.1" y="341" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="590.13" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (62 samples, 0.13%; +0.00%)</title><rect x="271.9" y="309" width="1.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="274.92" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (40 samples, 0.08%; -0.00%)</title><rect x="678.5" y="485" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="681.47" y="495.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (16 samples, 0.03%; +0.01%)</title><rect x="231.6" y="245" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="234.61" y="255.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (28 samples, 0.06%; 0.00%)</title><rect x="738.5" y="405" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="741.47" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (8 samples, 0.02%; 0.00%)</title><rect x="13.8" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.77" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.00%)</title><rect x="419.5" y="245" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="422.52" y="255.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (7 samples, 0.01%; +0.01%)</title><rect x="330.9" y="181" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="333.89" y="191.5" ></text>
</g>
<g >
<title>memtable::apply (26 samples, 0.05%; 0.00%)</title><rect x="1141.1" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (29 samples, 0.06%; -0.00%)</title><rect x="1141.9" y="485" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1144.92" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,419 samples, 11.11%; +0.07%)</title><rect x="290.3" y="325" width="131.1" height="15.0" fill="rgb(255,172,172)" rx="2" ry="2" />
<text  x="293.26" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (7 samples, 0.01%; +0.00%)</title><rect x="830.5" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="833.54" y="335.5" ></text>
</g>
<g >
<title>database::query (1,038 samples, 2.13%; +0.01%)</title><rect x="1019.9" y="261" width="25.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1022.95" y="271.5" >d..</text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%; -0.02%)</title><rect x="808.9" y="149" width="1.0" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="811.93" y="159.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (9 samples, 0.02%; 0.00%)</title><rect x="760.8" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="763.83" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (71 samples, 0.15%; +0.01%)</title><rect x="783.3" y="373" width="1.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="786.29" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (63 samples, 0.13%; -0.00%)</title><rect x="827.1" y="293" width="1.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="830.11" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.02%; +0.02%)</title><rect x="256.3" y="261" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="259.34" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; 0.00%)</title><rect x="64.6" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.59" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (18 samples, 0.04%; +0.02%)</title><rect x="316.6" y="165" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="319.61" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (16 samples, 0.03%; -0.01%)</title><rect x="1054.1" y="229" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1057.09" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="453" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%; +0.00%)</title><rect x="517.4" y="197" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="520.39" y="207.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.11%; +0.00%)</title><rect x="1160.5" y="437" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1163.46" y="447.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (8 samples, 0.02%; -0.01%)</title><rect x="710.2" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="713.19" y="447.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (7 samples, 0.01%; +0.01%)</title><rect x="877.8" y="453" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="880.84" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (142 samples, 0.29%; +0.01%)</title><rect x="869.3" y="421" width="3.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="872.33" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (10 samples, 0.02%; 0.00%)</title><rect x="872.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="875.33" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%; -0.00%)</title><rect x="294.1" y="293" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="297.09" y="303.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%; 0.00%)</title><rect x="732.8" y="421" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="735.84" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (30 samples, 0.06%; -0.00%)</title><rect x="149.5" y="245" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="152.52" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; -0.05%)</title><rect x="399.0" y="229" width="0.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="402.00" y="239.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (17 samples, 0.03%; -0.02%)</title><rect x="226.6" y="165" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="229.63" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="508.0" y="261" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="510.98" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (26 samples, 0.05%; -0.00%)</title><rect x="1063.0" y="309" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1066.04" y="319.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (53 samples, 0.11%; -0.00%)</title><rect x="613.2" y="421" width="1.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="616.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%; +0.01%)</title><rect x="877.4" y="421" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="880.43" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (11 samples, 0.02%; +0.01%)</title><rect x="755.3" y="373" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="758.34" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (9 samples, 0.02%; +0.01%)</title><rect x="306.7" y="213" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="309.74" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (131 samples, 0.27%; +0.01%)</title><rect x="832.5" y="341" width="3.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="835.50" y="351.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%; +0.02%)</title><rect x="680.3" y="437" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="683.31" y="447.5" ></text>
</g>
<g >
<title>__tls_init (42 samples, 0.09%; +0.02%)</title><rect x="495.5" y="309" width="1.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="498.50" y="319.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; +0.01%)</title><rect x="37.7" y="453" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="40.68" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (5 samples, 0.01%; +0.01%)</title><rect x="791.9" y="341" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="794.92" y="351.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; +0.00%)</title><rect x="876.4" y="437" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="879.37" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (19 samples, 0.04%; -0.00%)</title><rect x="1050.6" y="261" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1053.56" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (75 samples, 0.15%; -0.01%)</title><rect x="853.0" y="421" width="1.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="855.97" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%; -0.01%)</title><rect x="653.3" y="485" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="656.33" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.05%; -0.01%)</title><rect x="569.9" y="309" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="572.92" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (18 samples, 0.04%; +0.00%)</title><rect x="537.9" y="309" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="540.86" y="319.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.14%; +0.00%)</title><rect x="964.7" y="405" width="1.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="967.66" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="405" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="259.7" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="262.68" y="319.5" ></text>
</g>
<g >
<title>partition_entry::read (46 samples, 0.09%; -0.02%)</title><rect x="527.4" y="309" width="1.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="530.44" y="319.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (6 samples, 0.01%; +0.01%)</title><rect x="638.9" y="437" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="641.93" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (14 samples, 0.03%; +0.00%)</title><rect x="218.7" y="149" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="221.72" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (32 samples, 0.07%; +0.02%)</title><rect x="985.7" y="357" width="0.8" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="988.69" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%; -0.01%)</title><rect x="393.2" y="149" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="396.17" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (41 samples, 0.08%; -0.00%)</title><rect x="267.5" y="357" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="270.47" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; +0.01%)</title><rect x="222.2" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="225.18" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (14 samples, 0.03%; +0.00%)</title><rect x="138.2" y="245" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="141.19" y="255.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%; -0.01%)</title><rect x="538.2" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="541.18" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (6 samples, 0.01%; -0.02%)</title><rect x="144.1" y="277" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="147.14" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; +0.01%)</title><rect x="917.8" y="309" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="920.77" y="319.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.16%; +0.00%)</title><rect x="979.3" y="357" width="1.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="982.30" y="367.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (6 samples, 0.01%; -0.01%)</title><rect x="914.6" y="325" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="917.55" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%; +0.01%)</title><rect x="840.4" y="293" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="843.36" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (33 samples, 0.07%; +0.00%)</title><rect x="36.7" y="421" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="39.74" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (16 samples, 0.03%; +0.01%)</title><rect x="833.8" y="309" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="836.76" y="319.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%; +0.01%)</title><rect x="128.5" y="277" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="131.49" y="287.5" ></text>
</g>
<g >
<title>__tls_init (23 samples, 0.05%; +0.02%)</title><rect x="498.9" y="293" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="501.86" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (214 samples, 0.44%; +0.00%)</title><rect x="215.6" y="181" width="5.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="218.60" y="191.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (127 samples, 0.26%; +0.00%)</title><rect x="1171.9" y="453" width="3.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1174.90" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (17 samples, 0.03%; +0.02%)</title><rect x="1133.7" y="373" width="0.4" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1136.72" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (13 samples, 0.03%; -0.03%)</title><rect x="619.7" y="437" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="622.74" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (357 samples, 0.73%; +0.01%)</title><rect x="812.8" y="197" width="8.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="815.78" y="207.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (176 samples, 0.36%; +0.01%)</title><rect x="718.0" y="453" width="4.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="721.00" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (82 samples, 0.17%; +0.01%)</title><rect x="666.1" y="437" width="2.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="669.13" y="447.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%; +0.00%)</title><rect x="449.0" y="245" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="451.99" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%; -0.01%)</title><rect x="401.8" y="229" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="404.78" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (9 samples, 0.02%; -0.00%)</title><rect x="669.6" y="469" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="672.59" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; +0.01%)</title><rect x="802.8" y="229" width="0.8" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="805.84" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (160 samples, 0.33%; +0.01%)</title><rect x="417.4" y="293" width="3.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="420.44" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.02%)</title><rect x="283.3" y="357" width="0.2" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="286.34" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="261.6" y="309" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="264.57" y="319.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%; +0.01%)</title><rect x="802.8" y="245" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="805.76" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%; +0.01%)</title><rect x="201.0" y="101" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="203.96" y="111.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%; -0.00%)</title><rect x="702.2" y="341" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="705.16" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%; +0.01%)</title><rect x="273.3" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="276.30" y="303.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (6 samples, 0.01%; -0.00%)</title><rect x="69.9" y="453" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="72.86" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; +0.02%)</title><rect x="96.7" y="405" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="99.72" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (70 samples, 0.14%; +0.00%)</title><rect x="399.1" y="229" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="402.15" y="239.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (46 samples, 0.09%; +0.06%)</title><rect x="926.5" y="373" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="929.50" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (35 samples, 0.07%; +0.00%)</title><rect x="698.0" y="469" width="0.9" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="701.02" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%; +0.01%)</title><rect x="218.5" y="117" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="221.52" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (17 samples, 0.03%; 0.00%)</title><rect x="372.2" y="165" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="375.22" y="175.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (88 samples, 0.18%; -0.00%)</title><rect x="636.3" y="421" width="2.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="639.34" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (14 samples, 0.03%; +0.01%)</title><rect x="790.4" y="357" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="793.42" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%; +0.00%)</title><rect x="825.1" y="229" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="828.15" y="239.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (21 samples, 0.04%; -0.01%)</title><rect x="548.7" y="405" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="551.73" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.00%)</title><rect x="824.3" y="229" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="827.35" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%; +0.01%)</title><rect x="674.6" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="677.60" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (77 samples, 0.16%; -0.00%)</title><rect x="321.9" y="181" width="1.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="324.94" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (12 samples, 0.02%; 0.00%)</title><rect x="884.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.14" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,310 samples, 2.69%; +0.03%)</title><rect x="173.8" y="133" width="31.7" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="176.83" y="143.5" >co..</text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%; +0.02%)</title><rect x="744.2" y="293" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="747.23" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.01%)</title><rect x="776.9" y="293" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="779.87" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%; +0.01%)</title><rect x="814.4" y="117" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="817.43" y="127.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (14 samples, 0.03%; -0.04%)</title><rect x="609.6" y="405" width="0.3" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="612.56" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (485 samples, 0.99%; -0.01%)</title><rect x="752.9" y="389" width="11.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="755.92" y="399.5" ></text>
</g>
<g >
<title>database::find_uuid (200 samples, 0.41%; -0.01%)</title><rect x="774.8" y="389" width="4.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="777.79" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%; +0.01%)</title><rect x="704.7" y="485" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="707.75" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (252 samples, 0.52%; -0.01%)</title><rect x="625.5" y="437" width="6.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="628.50" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (18 samples, 0.04%; 0.00%)</title><rect x="883.1" y="453" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.12" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (7 samples, 0.01%; -0.02%)</title><rect x="373.6" y="197" width="0.2" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="376.64" y="207.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (18 samples, 0.04%; 0.00%)</title><rect x="569.5" y="309" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="572.49" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (37 samples, 0.08%; +0.03%)</title><rect x="493.2" y="325" width="0.9" height="15.0" fill="rgb(255,193,193)" rx="2" ry="2" />
<text  x="496.25" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (19 samples, 0.04%; 0.00%)</title><rect x="814.3" y="133" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="817.28" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; -0.00%)</title><rect x="528.0" y="261" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="530.99" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.01%)</title><rect x="1148.3" y="469" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1151.33" y="479.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (5 samples, 0.01%; +0.00%)</title><rect x="755.0" y="325" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="758.00" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (92 samples, 0.19%; +0.00%)</title><rect x="870.3" y="389" width="2.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="873.34" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (8 samples, 0.02%; +0.00%)</title><rect x="558.8" y="389" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="561.84" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (10 samples, 0.02%; +0.02%)</title><rect x="68.2" y="405" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="71.17" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (179 samples, 0.37%; +0.03%)</title><rect x="350.1" y="165" width="4.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="353.08" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.00%)</title><rect x="275.8" y="293" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="278.80" y="303.5" ></text>
</g>
<g >
<title>posix_memalign (143 samples, 0.29%; -0.01%)</title><rect x="192.8" y="53" width="3.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="195.83" y="63.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%; -0.00%)</title><rect x="262.3" y="341" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="265.27" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (5 samples, 0.01%; +0.01%)</title><rect x="95.8" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="98.80" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%; +0.01%)</title><rect x="1049.7" y="277" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1052.66" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (12 samples, 0.02%; +0.02%)</title><rect x="461.0" y="277" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="463.99" y="287.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="597" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (13 samples, 0.03%; 0.00%)</title><rect x="324.9" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="327.89" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (19 samples, 0.04%; +0.01%)</title><rect x="923.2" y="357" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="926.16" y="367.5" ></text>
</g>
<g >
<title>database::find_schema (311 samples, 0.64%; -0.04%)</title><rect x="772.1" y="405" width="7.5" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="775.11" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (30 samples, 0.06%; -0.01%)</title><rect x="124.1" y="309" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="127.13" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (15 samples, 0.03%; -0.01%)</title><rect x="70.0" y="453" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="73.01" y="463.5" ></text>
</g>
<g >
<title>database::find_column_family (72 samples, 0.15%; +0.00%)</title><rect x="1060.6" y="341" width="1.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1063.55" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%; +0.01%)</title><rect x="874.0" y="405" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="876.97" y="415.5" ></text>
</g>
<g >
<title>query_state::query_state (223 samples, 0.46%; +0.01%)</title><rect x="606.8" y="437" width="5.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="609.80" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (13 samples, 0.03%; +0.01%)</title><rect x="230.6" y="213" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="233.57" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%; -0.00%)</title><rect x="529.3" y="309" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="532.30" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%; +0.00%)</title><rect x="212.4" y="85" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="215.43" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="42.0" y="469" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="45.01" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (19 samples, 0.04%; +0.01%)</title><rect x="427.2" y="373" width="0.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="430.17" y="383.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (9 samples, 0.02%; +0.00%)</title><rect x="1098.9" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1101.93" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%; +0.00%)</title><rect x="1127.5" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1130.48" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (8 samples, 0.02%; -0.01%)</title><rect x="1050.1" y="277" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1053.07" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,217 samples, 14.80%; +0.05%)</title><rect x="109.9" y="405" width="174.6" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="112.86" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (90 samples, 0.18%; 0.00%)</title><rect x="962.5" y="405" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="965.48" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.01%)</title><rect x="912.0" y="293" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="915.03" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%; 0.00%)</title><rect x="1103.8" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.79" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (102 samples, 0.21%; -0.00%)</title><rect x="695.4" y="469" width="2.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="698.43" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (18 samples, 0.04%; -0.01%)</title><rect x="806.0" y="229" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="808.96" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (16 samples, 0.03%; 0.00%)</title><rect x="1142.2" y="229" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="239.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (47,789 samples, 97.99%; 0.00%)</title><rect x="21.3" y="565" width="1156.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.32" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="603.4" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="606.44" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%; -0.01%)</title><rect x="639.9" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="642.88" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (143 samples, 0.29%; +0.00%)</title><rect x="554.4" y="373" width="3.5" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="557.41" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%; -0.01%)</title><rect x="1078.8" y="309" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1081.77" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (93 samples, 0.19%; 0.00%)</title><rect x="482.1" y="261" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="485.12" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (10 samples, 0.02%; -0.01%)</title><rect x="615.3" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="618.29" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (31 samples, 0.06%; +0.02%)</title><rect x="1138.2" y="421" width="0.8" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="1141.24" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1141.9" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (27 samples, 0.06%; -0.01%)</title><rect x="191.7" y="53" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="194.69" y="63.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (34 samples, 0.07%; +0.00%)</title><rect x="941.5" y="389" width="0.8" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="944.46" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (23 samples, 0.05%; +0.01%)</title><rect x="456.5" y="277" width="0.6" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="459.52" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (10 samples, 0.02%; -0.00%)</title><rect x="964.0" y="309" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="967.03" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%; -0.02%)</title><rect x="1005.6" y="229" width="0.4" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="1008.55" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,823 samples, 3.74%; -0.01%)</title><rect x="1057.4" y="357" width="44.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1060.36" y="367.5" >serv..</text>
</g>
<g >
<title>operator new (25 samples, 0.05%; +0.00%)</title><rect x="461.7" y="293" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="464.69" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (76 samples, 0.16%; -0.02%)</title><rect x="845.6" y="325" width="1.9" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="848.62" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (348 samples, 0.71%; -0.05%)</title><rect x="250.6" y="309" width="8.4" height="15.0" fill="rgb(183,183,255)" rx="2" ry="2" />
<text  x="253.56" y="319.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (15 samples, 0.03%; +0.00%)</title><rect x="739.2" y="405" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="742.15" y="415.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%; -0.04%)</title><rect x="538.8" y="293" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="541.78" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.03%; -0.01%)</title><rect x="412.6" y="229" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="415.62" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (36 samples, 0.07%; -0.01%)</title><rect x="1108.8" y="389" width="0.9" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1111.85" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; 0.00%)</title><rect x="811.0" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="813.97" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (8 samples, 0.02%; +0.02%)</title><rect x="1055.8" y="293" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1058.76" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (289 samples, 0.59%; 0.00%)</title><rect x="14.0" y="581" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.99" y="591.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%; -0.00%)</title><rect x="238.1" y="213" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="241.07" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; +0.01%)</title><rect x="733.7" y="389" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="736.71" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (10 samples, 0.02%; -0.01%)</title><rect x="337.6" y="181" width="0.3" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="340.62" y="191.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.11%; +0.03%)</title><rect x="629.3" y="373" width="1.3" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="632.25" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (28 samples, 0.06%; +0.00%)</title><rect x="518.4" y="197" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="521.36" y="207.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.13%; +0.03%)</title><rect x="203.4" y="117" width="1.5" height="15.0" fill="rgb(255,195,195)" rx="2" ry="2" />
<text  x="206.35" y="127.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; -0.03%)</title><rect x="33.5" y="469" width="1.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="36.54" y="479.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; -0.00%)</title><rect x="424.7" y="341" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="427.72" y="351.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%; -0.00%)</title><rect x="155.4" y="181" width="1.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="158.44" y="191.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%; -0.00%)</title><rect x="463.1" y="325" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="466.12" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (72 samples, 0.15%; +0.05%)</title><rect x="772.9" y="341" width="1.8" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="775.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%; +0.01%)</title><rect x="604.3" y="405" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="607.33" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (11 samples, 0.02%; +0.01%)</title><rect x="900.8" y="421" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="903.83" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (160 samples, 0.33%; +0.01%)</title><rect x="840.9" y="341" width="3.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="843.90" y="351.5" ></text>
</g>
<g >
<title>database::find_schema (99 samples, 0.20%; +0.01%)</title><rect x="772.4" y="389" width="2.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="775.40" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (5 samples, 0.01%; +0.01%)</title><rect x="581.1" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="584.05" y="319.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%; 0.00%)</title><rect x="49.0" y="469" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="51.96" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="919.6" y="373" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="922.56" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.01%)</title><rect x="144.6" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="147.56" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (8 samples, 0.02%; +0.01%)</title><rect x="665.2" y="453" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="668.21" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (35 samples, 0.07%; +0.01%)</title><rect x="521.6" y="229" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="524.60" y="239.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%; -0.00%)</title><rect x="1014.5" y="261" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1017.46" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%; 0.00%)</title><rect x="1066.9" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1069.89" y="271.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.01%)</title><rect x="713.9" y="485" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="716.89" y="495.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (17 samples, 0.03%; -0.00%)</title><rect x="140.6" y="229" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="143.56" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%; +0.00%)</title><rect x="271.7" y="309" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="274.73" y="319.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%; 0.00%)</title><rect x="1072.2" y="325" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1075.24" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (10 samples, 0.02%; +0.01%)</title><rect x="423.8" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="426.75" y="367.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.01%; +0.00%)</title><rect x="485.3" y="229" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="488.31" y="239.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (216 samples, 0.44%; +0.02%)</title><rect x="1033.8" y="181" width="5.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="1036.79" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (268 samples, 0.55%; 0.00%)</title><rect x="14.5" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.48" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.02%)</title><rect x="39.4" y="469" width="0.3" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="42.37" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (25 samples, 0.05%; -0.01%)</title><rect x="699.8" y="453" width="0.6" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="702.81" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (7 samples, 0.01%; +0.01%)</title><rect x="196.3" y="53" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="199.29" y="63.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (456 samples, 0.94%; -0.01%)</title><rect x="691.1" y="501" width="11.0" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="694.05" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (46 samples, 0.09%; +0.00%)</title><rect x="699.7" y="469" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="702.69" y="479.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (29 samples, 0.06%; -0.01%)</title><rect x="1095.7" y="309" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1098.71" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%; +0.00%)</title><rect x="1123.2" y="389" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1126.24" y="399.5" ></text>
</g>
<g >
<title>table::query (23,334 samples, 47.85%; +0.42%)</title><rect x="75.2" y="453" width="564.6" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="78.23" y="463.5" >table::query</text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (651 samples, 1.33%; +0.04%)</title><rect x="1080.7" y="325" width="15.7" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="1083.66" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; -0.01%)</title><rect x="213.6" y="149" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="216.64" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (8 samples, 0.02%; -0.01%)</title><rect x="686.8" y="469" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="689.82" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (23 samples, 0.05%; +0.04%)</title><rect x="952.8" y="341" width="0.5" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="955.76" y="351.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="139.1" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="142.11" y="255.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (488 samples, 1.00%; 0.00%)</title><rect x="921.6" y="389" width="11.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="924.64" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%; -0.03%)</title><rect x="999.4" y="261" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1002.43" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; -0.01%)</title><rect x="623.7" y="405" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="626.69" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (19 samples, 0.04%; 0.00%)</title><rect x="428.3" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="431.33" y="383.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (31 samples, 0.06%; 0.00%)</title><rect x="68.7" y="389" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="71.72" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%; +0.00%)</title><rect x="830.7" y="325" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="833.71" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%; 0.00%)</title><rect x="1109.0" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1112.04" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (49 samples, 0.10%; +0.00%)</title><rect x="1024.1" y="229" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1027.11" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (152 samples, 0.31%; +0.04%)</title><rect x="181.7" y="101" width="3.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="184.74" y="111.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,232 samples, 12.78%; -0.00%)</title><rect x="116.7" y="357" width="150.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="119.68" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%; +0.01%)</title><rect x="933.2" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="936.21" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%; +0.00%)</title><rect x="339.1" y="181" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="342.07" y="191.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (68 samples, 0.14%; -0.01%)</title><rect x="536.1" y="293" width="1.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="539.12" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (5 samples, 0.01%; -0.02%)</title><rect x="229.8" y="213" width="0.1" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="232.80" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (122 samples, 0.25%; +0.01%)</title><rect x="654.0" y="501" width="2.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="656.96" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (15 samples, 0.03%; +0.00%)</title><rect x="603.7" y="389" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="606.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%; -0.01%)</title><rect x="946.5" y="357" width="0.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="949.47" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (147 samples, 0.30%; +0.01%)</title><rect x="157.2" y="229" width="3.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="160.23" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="1142.9" y="485" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1145.94" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (83 samples, 0.17%; -0.02%)</title><rect x="870.6" y="373" width="2.0" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="873.56" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%; +0.00%)</title><rect x="43.0" y="485" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="45.96" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (6 samples, 0.01%; +0.00%)</title><rect x="771.4" y="405" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="774.41" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; -0.03%)</title><rect x="1042.1" y="197" width="1.6" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1045.11" y="207.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.00%)</title><rect x="823.7" y="245" width="0.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="826.69" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%; -0.02%)</title><rect x="705.1" y="469" width="0.3" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="708.13" y="479.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (10 samples, 0.02%; +0.00%)</title><rect x="1143.7" y="501" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1146.66" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (109 samples, 0.22%; -0.00%)</title><rect x="818.6" y="149" width="2.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="821.56" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (43 samples, 0.09%; +0.02%)</title><rect x="1155.6" y="453" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1158.59" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%; -0.01%)</title><rect x="647.2" y="485" width="0.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="650.23" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (21 samples, 0.04%; +0.00%)</title><rect x="210.9" y="101" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="213.93" y="111.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (354 samples, 0.73%; +0.01%)</title><rect x="445.3" y="309" width="8.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="448.34" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,889 samples, 5.92%; +0.01%)</title><rect x="161.4" y="245" width="69.9" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="164.37" y="255.5" >partiti..</text>
</g>
<g >
<title>operator delete (42 samples, 0.09%; +0.02%)</title><rect x="836.5" y="373" width="1.0" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="839.49" y="383.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%; +0.00%)</title><rect x="793.9" y="309" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="796.91" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (6 samples, 0.01%; +0.00%)</title><rect x="285.5" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="288.55" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (35 samples, 0.07%; +0.01%)</title><rect x="1168.9" y="469" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1171.93" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (380 samples, 0.78%; -0.01%)</title><rect x="812.3" y="213" width="9.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="815.30" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (31 samples, 0.06%; -0.02%)</title><rect x="112.7" y="373" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="115.66" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (83 samples, 0.17%; +0.01%)</title><rect x="917.0" y="357" width="2.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="920.02" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (18 samples, 0.04%; +0.01%)</title><rect x="821.5" y="213" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="824.52" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%; -0.01%)</title><rect x="797.7" y="309" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="800.71" y="319.5" ></text>
</g>
<g >
<title>schema::get_partitioner (5 samples, 0.01%; +0.00%)</title><rect x="939.9" y="389" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="942.88" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (622 samples, 1.28%; +0.01%)</title><rect x="508.2" y="277" width="15.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="511.15" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (19 samples, 0.04%; +0.02%)</title><rect x="241.1" y="197" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="244.15" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (283 samples, 0.58%; +0.00%)</title><rect x="33.3" y="485" width="6.8" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="36.28" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%; +0.00%)</title><rect x="1038.0" y="165" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1041.02" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; +0.00%)</title><rect x="1079.1" y="325" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1082.11" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%; +0.01%)</title><rect x="692.1" y="485" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="695.09" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (23 samples, 0.05%; +0.00%)</title><rect x="955.6" y="341" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="958.59" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%; -0.02%)</title><rect x="455.3" y="277" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="458.26" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,317 samples, 8.85%; -0.02%)</title><rect x="145.6" y="277" width="104.5" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="148.62" y="287.5" >logalloc::al..</text>
</g>
<g >
<title>schema::position (7 samples, 0.01%; +0.00%)</title><rect x="944.6" y="405" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="947.55" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (9 samples, 0.02%; -0.01%)</title><rect x="72.2" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="75.21" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%; -0.00%)</title><rect x="227.2" y="181" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="230.19" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (26 samples, 0.05%; +0.00%)</title><rect x="829.9" y="309" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="832.89" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="543.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (14 samples, 0.03%; +0.01%)</title><rect x="987.4" y="357" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="990.36" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (126 samples, 0.26%; +0.05%)</title><rect x="193.2" y="37" width="3.1" height="15.0" fill="rgb(255,187,187)" rx="2" ry="2" />
<text  x="196.24" y="47.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.01%)</title><rect x="1051.0" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1054.02" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; 0.00%)</title><rect x="786.9" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="789.94" y="367.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.03%; +0.00%)</title><rect x="854.0" y="373" width="0.4" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="856.96" y="383.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; +0.01%)</title><rect x="146.2" y="245" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="149.15" y="255.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (12 samples, 0.02%; +0.01%)</title><rect x="15.4" y="245" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="18.44" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="974.6" y="373" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="977.61" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (7 samples, 0.01%; -0.01%)</title><rect x="619.2" y="437" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="622.16" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.00%)</title><rect x="38.5" y="437" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="41.53" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (17 samples, 0.03%; -0.00%)</title><rect x="997.5" y="293" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1000.52" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (323 samples, 0.66%; -0.00%)</title><rect x="402.2" y="229" width="7.8" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="405.22" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (15 samples, 0.03%; +0.02%)</title><rect x="1065.4" y="277" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1068.39" y="287.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (198 samples, 0.41%; 0.00%)</title><rect x="740.1" y="389" width="4.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="743.07" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (60 samples, 0.12%; -0.03%)</title><rect x="1060.8" y="309" width="1.5" height="15.0" fill="rgb(194,194,255)" rx="2" ry="2" />
<text  x="1063.84" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (10 samples, 0.02%; +0.02%)</title><rect x="200.6" y="85" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="203.62" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (7 samples, 0.01%; -0.01%)</title><rect x="987.1" y="357" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="990.09" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (24 samples, 0.05%; +0.04%)</title><rect x="135.0" y="261" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="137.97" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (9 samples, 0.02%; -0.02%)</title><rect x="637.2" y="389" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="640.19" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (67 samples, 0.14%; +0.06%)</title><rect x="596.6" y="421" width="1.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="599.61" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (6 samples, 0.01%; +0.00%)</title><rect x="880.0" y="485" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="882.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%; +0.01%)</title><rect x="725.4" y="485" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="728.41" y="495.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,218 samples, 2.50%; -0.00%)</title><rect x="799.2" y="309" width="29.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="802.16" y="319.5" >au..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (24 samples, 0.05%; +0.02%)</title><rect x="524.9" y="277" width="0.6" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="527.90" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,435 samples, 11.14%; +0.01%)</title><rect x="736.9" y="453" width="131.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="739.88" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%; -0.01%)</title><rect x="38.7" y="453" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="41.70" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (86 samples, 0.18%; +0.02%)</title><rect x="541.0" y="277" width="2.1" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="544.03" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (8 samples, 0.02%; +0.02%)</title><rect x="956.2" y="357" width="0.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="959.22" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%; -0.04%)</title><rect x="861.6" y="405" width="1.2" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="864.61" y="415.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (20 samples, 0.04%; +0.00%)</title><rect x="73.5" y="453" width="0.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="76.52" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (45 samples, 0.09%; +0.04%)</title><rect x="1024.2" y="213" width="1.1" height="15.0" fill="rgb(255,190,190)" rx="2" ry="2" />
<text  x="1027.21" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="975.2" y="373" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="978.23" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (100 samples, 0.21%; -0.00%)</title><rect x="994.0" y="309" width="2.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="996.99" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (14 samples, 0.03%; 0.00%)</title><rect x="590.9" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="593.88" y="367.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; +0.00%)</title><rect x="511.3" y="229" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="514.30" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.00%)</title><rect x="810.0" y="197" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="812.95" y="207.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.01%; -0.00%)</title><rect x="160.6" y="213" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="163.60" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (20 samples, 0.04%; +0.01%)</title><rect x="794.8" y="277" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="797.76" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (21 samples, 0.04%; 0.00%)</title><rect x="570.9" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="573.89" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.00%)</title><rect x="101.8" y="421" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="104.75" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (51 samples, 0.10%; -0.01%)</title><rect x="738.3" y="421" width="1.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="741.28" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%; -0.01%)</title><rect x="588.8" y="341" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="591.82" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (51 samples, 0.10%; +0.02%)</title><rect x="671.6" y="453" width="1.2" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="674.57" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (23 samples, 0.05%; -0.01%)</title><rect x="1095.8" y="293" width="0.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1098.83" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (407 samples, 0.83%; +0.04%)</title><rect x="151.5" y="245" width="9.9" height="15.0" fill="rgb(255,191,191)" rx="2" ry="2" />
<text  x="154.52" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (24,512 samples, 50.26%; -0.01%)</title><rect x="47.0" y="485" width="593.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="50.04" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (520 samples, 1.07%; +0.01%)</title><rect x="713.6" y="501" width="12.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="716.55" y="511.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,147 samples, 12.60%; -0.01%)</title><rect x="730.9" y="485" width="148.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="733.90" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (45 samples, 0.09%; 0.00%)</title><rect x="15.2" y="309" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="18.18" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="751.0" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="754.03" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (62 samples, 0.13%; +0.02%)</title><rect x="634.0" y="421" width="1.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="637.04" y="431.5" ></text>
</g>
<g >
<title>do_cql_test (281 samples, 0.58%; 0.00%)</title><rect x="14.2" y="549" width="6.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.19" y="559.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (5 samples, 0.01%; 0.00%)</title><rect x="883.2" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.17" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (17 samples, 0.03%; -0.00%)</title><rect x="1117.9" y="373" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1120.92" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%; +0.01%)</title><rect x="97.3" y="373" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="100.35" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (12 samples, 0.02%; +0.00%)</title><rect x="74.9" y="453" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="77.92" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%; -0.01%)</title><rect x="1149.9" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1152.91" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%; -0.00%)</title><rect x="917.7" y="325" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="920.74" y="335.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; -0.02%)</title><rect x="540.1" y="277" width="0.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="543.09" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (49 samples, 0.10%; +0.00%)</title><rect x="1110.6" y="405" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1113.56" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (7 samples, 0.01%; +0.01%)</title><rect x="653.1" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="656.11" y="479.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%; +0.01%)</title><rect x="241.9" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="244.90" y="223.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.11%; +0.01%)</title><rect x="861.4" y="421" width="1.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="864.44" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (28 samples, 0.06%; +0.01%)</title><rect x="471.7" y="277" width="0.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="474.66" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.05%; -0.00%)</title><rect x="949.5" y="357" width="0.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="952.49" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,909 samples, 3.91%; +0.08%)</title><rect x="1009.2" y="293" width="46.2" height="15.0" fill="rgb(255,167,167)" rx="2" ry="2" />
<text  x="1012.21" y="303.5" >serv..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.01%; 0.00%)</title><rect x="20.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.97" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (69 samples, 0.14%; 0.00%)</title><rect x="917.4" y="341" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="920.36" y="351.5" ></text>
</g>
<g >
<title>row_tombstone::apply (24 samples, 0.05%; +0.01%)</title><rect x="394.1" y="213" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="397.11" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.01%)</title><rect x="680.7" y="437" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="683.72" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.01%; +0.01%)</title><rect x="740.0" y="389" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="742.95" y="399.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (493 samples, 1.01%; -0.00%)</title><rect x="481.0" y="293" width="11.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="484.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="1137.4" y="421" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1140.45" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (13 samples, 0.03%; -0.00%)</title><rect x="684.0" y="469" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="686.96" y="479.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (8 samples, 0.02%; -0.01%)</title><rect x="1009.0" y="293" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1012.01" y="303.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%; 0.00%)</title><rect x="1142.2" y="149" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.21" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (9 samples, 0.02%; +0.00%)</title><rect x="262.6" y="341" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="265.56" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (415 samples, 0.85%; +0.02%)</title><rect x="470.6" y="309" width="10.0" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="473.57" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%; +0.00%)</title><rect x="1111.6" y="373" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1114.58" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (314 samples, 0.64%; +0.01%)</title><rect x="906.9" y="325" width="7.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="909.88" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10 samples, 0.02%; +0.00%)</title><rect x="820.9" y="69" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="823.91" y="79.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,004 samples, 14.36%; -0.04%)</title><rect x="114.0" y="373" width="169.5" height="15.0" fill="rgb(188,188,255)" rx="2" ry="2" />
<text  x="117.00" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>seastar::memory::allocate_aligned (31 samples, 0.06%; -0.00%)</title><rect x="201.4" y="69" width="0.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="204.44" y="79.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%; +0.01%)</title><rect x="865.1" y="405" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="868.07" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.02%; 0.00%)</title><rect x="1108.5" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.46" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="17.6" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.60" y="287.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (14 samples, 0.03%; -0.04%)</title><rect x="231.3" y="245" width="0.3" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="234.27" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (92 samples, 0.19%; +0.01%)</title><rect x="294.4" y="293" width="2.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="297.35" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (50 samples, 0.10%; +0.00%)</title><rect x="819.9" y="117" width="1.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="822.94" y="127.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (75 samples, 0.15%; +0.01%)</title><rect x="962.7" y="373" width="1.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="965.70" y="383.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%; +0.00%)</title><rect x="547.4" y="405" width="1.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="550.42" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%; -0.01%)</title><rect x="832.4" y="341" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="835.38" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (339 samples, 0.70%; +0.07%)</title><rect x="472.3" y="293" width="8.2" height="15.0" fill="rgb(255,174,174)" rx="2" ry="2" />
<text  x="475.34" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%; +0.01%)</title><rect x="923.0" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="926.04" y="351.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (10 samples, 0.02%; -0.01%)</title><rect x="857.2" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="860.21" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (5 samples, 0.01%; -0.00%)</title><rect x="42.8" y="469" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="45.81" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (259 samples, 0.53%; +0.08%)</title><rect x="135.6" y="261" width="6.2" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="138.55" y="271.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (12 samples, 0.02%; +0.01%)</title><rect x="742.3" y="309" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="745.35" y="319.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (151 samples, 0.31%; +0.05%)</title><rect x="981.4" y="341" width="3.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="984.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="157.0" y="181" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="160.04" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (23 samples, 0.05%; +0.00%)</title><rect x="838.0" y="357" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="840.99" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (311 samples, 0.64%; +0.00%)</title><rect x="993.7" y="341" width="7.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="996.74" y="351.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (182 samples, 0.37%; -0.00%)</title><rect x="760.0" y="325" width="4.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="762.96" y="335.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%; 0.00%)</title><rect x="20.6" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.60" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (368 samples, 0.75%; -0.01%)</title><rect x="550.8" y="421" width="8.9" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="553.83" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (107 samples, 0.22%; -0.02%)</title><rect x="387.7" y="149" width="2.6" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="390.70" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (62 samples, 0.13%; +0.01%)</title><rect x="1028.0" y="213" width="1.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1031.01" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%; -0.00%)</title><rect x="825.4" y="213" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="828.44" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (5 samples, 0.01%; 0.00%)</title><rect x="18.0" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.98" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (11 samples, 0.02%; +0.01%)</title><rect x="492.1" y="213" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="495.08" y="223.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%; 0.00%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (17 samples, 0.03%; +0.02%)</title><rect x="1137.8" y="421" width="0.4" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="1140.83" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (11 samples, 0.02%; 0.00%)</title><rect x="883.1" y="389" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.14" y="399.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (48 samples, 0.10%; -0.06%)</title><rect x="912.2" y="293" width="1.2" height="15.0" fill="rgb(180,180,255)" rx="2" ry="2" />
<text  x="915.20" y="303.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (45 samples, 0.09%; -0.00%)</title><rect x="938.5" y="341" width="1.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="941.53" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%; +0.01%)</title><rect x="393.4" y="165" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="396.36" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (7 samples, 0.01%; -0.01%)</title><rect x="35.4" y="421" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="38.38" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (83 samples, 0.17%; -0.01%)</title><rect x="772.7" y="373" width="2.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="775.66" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (11 samples, 0.02%; +0.01%)</title><rect x="770.6" y="405" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="773.61" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,210 samples, 20.94%; +0.08%)</title><rect x="893.0" y="437" width="247.0" height="15.0" fill="rgb(255,167,167)" rx="2" ry="2" />
<text  x="895.97" y="447.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (289 samples, 0.59%; -0.01%)</title><rect x="1082.6" y="261" width="7.0" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1085.57" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (28 samples, 0.06%; -0.03%)</title><rect x="803.8" y="229" width="0.6" height="15.0" fill="rgb(195,195,255)" rx="2" ry="2" />
<text  x="806.76" y="239.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (69 samples, 0.14%; -0.02%)</title><rect x="612.8" y="437" width="1.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="615.82" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (13 samples, 0.03%; +0.02%)</title><rect x="974.3" y="373" width="0.3" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="977.29" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%; -0.00%)</title><rect x="821.7" y="197" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="824.71" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%; +0.01%)</title><rect x="354.4" y="165" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="357.41" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%; +0.00%)</title><rect x="461.7" y="277" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="464.74" y="287.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5 samples, 0.01%; +0.01%)</title><rect x="693.8" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="696.83" y="479.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (11 samples, 0.02%; +0.00%)</title><rect x="240.2" y="165" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="243.20" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%; -0.01%)</title><rect x="1111.1" y="389" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1114.10" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (7 samples, 0.01%; +0.01%)</title><rect x="260.3" y="325" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="263.33" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.00%)</title><rect x="682.6" y="469" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="685.56" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%; +0.01%)</title><rect x="134.8" y="245" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="137.76" y="255.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (289 samples, 0.59%; 0.00%)</title><rect x="14.0" y="597" width="7.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="16.99" y="607.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (8 samples, 0.02%; -0.01%)</title><rect x="961.7" y="405" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="964.73" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (9 samples, 0.02%; -0.01%)</title><rect x="1001.0" y="277" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="1004.03" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="900.0" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="902.98" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.08%; +0.02%)</title><rect x="856.2" y="421" width="1.0" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="859.21" y="431.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (997 samples, 2.04%; +0.03%)</title><rect x="801.7" y="277" width="24.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="804.75" y="287.5" >a..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (11 samples, 0.02%; +0.01%)</title><rect x="638.5" y="421" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="641.47" y="431.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (31 samples, 0.06%; +0.00%)</title><rect x="834.9" y="293" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="837.87" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (21 samples, 0.04%; -0.01%)</title><rect x="240.0" y="181" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="242.96" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%; 0.00%)</title><rect x="702.2" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.16" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.01%)</title><rect x="637.6" y="373" width="0.5" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="640.63" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="688.6" y="453" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="691.56" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.00%)</title><rect x="949.9" y="309" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="952.95" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (93 samples, 0.19%; -0.01%)</title><rect x="679.5" y="485" width="2.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="682.48" y="495.5" ></text>
</g>
<g >
<title>table::make_reader (4,605 samples, 9.44%; +0.06%)</title><rect x="435.9" y="357" width="111.4" height="15.0" fill="rgb(255,180,180)" rx="2" ry="2" />
<text  x="438.85" y="367.5" >table::make_r..</text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (115 samples, 0.24%; +0.01%)</title><rect x="990.3" y="341" width="2.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="993.31" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (21 samples, 0.04%; -0.01%)</title><rect x="877.1" y="437" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="880.12" y="447.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (29 samples, 0.06%; -0.01%)</title><rect x="643.6" y="485" width="0.7" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="646.60" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (5 samples, 0.01%; -0.00%)</title><rect x="849.2" y="421" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="852.22" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (52 samples, 0.11%; +0.00%)</title><rect x="225.4" y="165" width="1.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="228.37" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (30 samples, 0.06%; +0.00%)</title><rect x="688.9" y="437" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="691.92" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; -0.01%)</title><rect x="227.9" y="213" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="230.86" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="651.8" y="469" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="654.80" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%; -0.00%)</title><rect x="846.3" y="293" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="849.32" y="303.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.02%; -0.01%)</title><rect x="369.3" y="197" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="372.29" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (7 samples, 0.01%; +0.00%)</title><rect x="150.5" y="245" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="153.48" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,242 samples, 4.60%; +0.00%)</title><rect x="1002.6" y="325" width="54.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1005.62" y="335.5" >servi..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%; +0.01%)</title><rect x="913.9" y="309" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="916.95" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (18 samples, 0.04%; 0.00%)</title><rect x="19.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.87" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (25 samples, 0.05%; +0.01%)</title><rect x="640.1" y="485" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="643.14" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,684 samples, 9.60%; +0.01%)</title><rect x="433.9" y="373" width="113.4" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="436.94" y="383.5" >std::_Function..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (15 samples, 0.03%; +0.01%)</title><rect x="1054.5" y="277" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1057.50" y="287.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%; 0.00%)</title><rect x="1142.2" y="165" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.21" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (44 samples, 0.09%; -0.00%)</title><rect x="97.1" y="405" width="1.0" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="100.08" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (9 samples, 0.02%; -0.00%)</title><rect x="720.3" y="421" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="723.26" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (99 samples, 0.20%; -0.01%)</title><rect x="398.4" y="245" width="2.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="401.45" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (6 samples, 0.01%; +0.00%)</title><rect x="801.4" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="804.38" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (23 samples, 0.05%; +0.02%)</title><rect x="32.6" y="485" width="0.5" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="35.55" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (36 samples, 0.07%; -0.00%)</title><rect x="811.3" y="181" width="0.9" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="814.33" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (88 samples, 0.18%; +0.01%)</title><rect x="588.5" y="357" width="2.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="591.53" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;column_definition const*, std::pair&lt;column_definition const* const, cql3::expr::expression&gt;, std::allocator&lt;std::pair&lt;column_definition const* const, cql3::expr::expression&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;column_definition const*&gt;, std::hash&lt;column_definition const*&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (7 samples, 0.01%; 0.00%)</title><rect x="20.1" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.14" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (32 samples, 0.07%; 0.00%)</title><rect x="19.6" y="437" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.63" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; -0.00%)</title><rect x="575.6" y="277" width="0.1" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="578.56" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (42 samples, 0.09%; +0.01%)</title><rect x="668.5" y="469" width="1.0" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="671.50" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (167 samples, 0.34%; -0.02%)</title><rect x="831.6" y="357" width="4.1" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="834.63" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (72 samples, 0.15%; +0.01%)</title><rect x="453.9" y="309" width="1.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="456.90" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (14 samples, 0.03%; +0.00%)</title><rect x="830.2" y="293" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="833.18" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="1173.7" y="421" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1176.69" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (5 samples, 0.01%; 0.00%)</title><rect x="1176.0" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.97" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (7 samples, 0.01%; -0.00%)</title><rect x="710.5" y="469" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="713.53" y="479.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,906 samples, 12.11%; 0.00%)</title><rect x="285.9" y="389" width="142.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="288.89" y="399.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="581.4" y="309" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="584.42" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="1168.1" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1171.05" y="495.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (13 samples, 0.03%; +0.00%)</title><rect x="1145.1" y="501" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1148.07" y="511.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1141.9" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="303.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (169 samples, 0.35%; +0.01%)</title><rect x="64.0" y="405" width="4.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="67.01" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (259 samples, 0.53%; -0.00%)</title><rect x="1115.4" y="405" width="6.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1118.38" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; 0.00%)</title><rect x="787.5" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="790.52" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (188 samples, 0.39%; 0.00%)</title><rect x="996.7" y="309" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="999.70" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (45 samples, 0.09%; +0.00%)</title><rect x="1032.4" y="197" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1035.41" y="207.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%; -0.00%)</title><rect x="614.8" y="421" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="617.83" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (7 samples, 0.01%; +0.01%)</title><rect x="727.0" y="501" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="729.96" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (216 samples, 0.44%; -0.07%)</title><rect x="207.9" y="133" width="5.2" height="15.0" fill="rgb(172,172,255)" rx="2" ry="2" />
<text  x="210.90" y="143.5" ></text>
</g>
<g >
<title>operator new (103 samples, 0.21%; 0.00%)</title><rect x="993.9" y="325" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.94" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (25 samples, 0.05%; +0.00%)</title><rect x="577.6" y="277" width="0.6" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="580.59" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (444 samples, 0.91%; +0.06%)</title><rect x="233.5" y="229" width="10.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="236.45" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (7 samples, 0.01%; +0.01%)</title><rect x="569.2" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="572.17" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (6 samples, 0.01%; +0.00%)</title><rect x="635.9" y="437" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="638.93" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (76 samples, 0.16%; -0.03%)</title><rect x="998.5" y="277" width="1.8" height="15.0" fill="rgb(193,193,255)" rx="2" ry="2" />
<text  x="1001.46" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (65 samples, 0.13%; +0.01%)</title><rect x="876.1" y="453" width="1.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="879.05" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (28 samples, 0.06%; 0.00%)</title><rect x="1141.9" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.95" y="367.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%; -0.02%)</title><rect x="576.2" y="277" width="1.0" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="579.17" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%; +0.01%)</title><rect x="464.0" y="325" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="466.99" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%; -0.01%)</title><rect x="847.1" y="277" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="850.14" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1142.2" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (10 samples, 0.02%; 0.00%)</title><rect x="707.7" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.75" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.01%; -0.01%)</title><rect x="1094.4" y="245" width="0.1" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="1097.38" y="255.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (11 samples, 0.02%; +0.01%)</title><rect x="281.0" y="325" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="284.02" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; +0.01%)</title><rect x="1053.0" y="213" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="1056.05" y="223.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,240 samples, 2.54%; -0.13%)</title><rect x="339.2" y="181" width="30.0" height="15.0" fill="rgb(146,146,255)" rx="2" ry="2" />
<text  x="342.24" y="191.5" >wr..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%; +0.01%)</title><rect x="1122.9" y="373" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1125.93" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (9 samples, 0.02%; +0.01%)</title><rect x="269.4" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="272.43" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (38 samples, 0.08%; +0.01%)</title><rect x="708.4" y="453" width="0.9" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="711.35" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (36 samples, 0.07%; +0.02%)</title><rect x="655.3" y="485" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="658.31" y="495.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (11 samples, 0.02%; -0.00%)</title><rect x="617.1" y="421" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="620.08" y="431.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="325" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%; 0.00%)</title><rect x="1056.9" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.87" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (7 samples, 0.01%; -0.01%)</title><rect x="1121.5" y="341" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1124.48" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.00%)</title><rect x="1134.2" y="389" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1137.16" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (30 samples, 0.06%; 0.00%)</title><rect x="134.0" y="245" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="137.03" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="611.7" y="389" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="614.71" y="399.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (10 samples, 0.02%; +0.01%)</title><rect x="1054.9" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1057.86" y="287.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (27 samples, 0.06%; -0.00%)</title><rect x="1141.1" y="277" width="0.7" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1144.15" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (922 samples, 1.89%; +0.02%)</title><rect x="503.6" y="309" width="22.3" height="15.0" fill="rgb(255,200,200)" rx="2" ry="2" />
<text  x="506.60" y="319.5" >s..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; +0.01%)</title><rect x="712.2" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="715.20" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (9 samples, 0.02%; -0.01%)</title><rect x="819.5" y="117" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="822.53" y="127.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (6 samples, 0.01%; +0.01%)</title><rect x="631.5" y="421" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="634.46" y="431.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (32 samples, 0.07%; +0.00%)</title><rect x="536.7" y="277" width="0.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="539.65" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="397.1" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="400.07" y="239.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (8 samples, 0.02%; 0.00%)</title><rect x="1141.1" y="245" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (611 samples, 1.25%; -0.00%)</title><rect x="1029.5" y="245" width="14.8" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="1032.51" y="255.5" ></text>
</g>
<g >
<title>db::block_for (13 samples, 0.03%; +0.02%)</title><rect x="1069.5" y="325" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1072.50" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (11 samples, 0.02%; +0.01%)</title><rect x="22.6" y="517" width="0.2" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="25.56" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (31 samples, 0.06%; +0.01%)</title><rect x="1094.8" y="293" width="0.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1097.84" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (27 samples, 0.06%; +0.03%)</title><rect x="1036.7" y="133" width="0.6" height="15.0" fill="rgb(255,194,194)" rx="2" ry="2" />
<text  x="1039.67" y="143.5" ></text>
</g>
<g >
<title>operator delete (83 samples, 0.17%; +0.05%)</title><rect x="573.7" y="293" width="2.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="576.72" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (10 samples, 0.02%; -0.01%)</title><rect x="283.0" y="357" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="285.96" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (207 samples, 0.42%; -0.01%)</title><rect x="1170.0" y="485" width="5.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1172.97" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (17 samples, 0.03%; +0.01%)</title><rect x="393.6" y="181" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="396.56" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; +0.01%)</title><rect x="561.3" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="564.33" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%; 0.00%)</title><rect x="244.0" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="246.98" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="736.6" y="453" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="739.64" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (12 samples, 0.02%; +0.01%)</title><rect x="822.3" y="245" width="0.3" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="825.31" y="255.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.02%; 0.00%)</title><rect x="1142.2" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="207.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; -0.00%)</title><rect x="531.9" y="341" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="534.86" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (10 samples, 0.02%; -0.00%)</title><rect x="549.4" y="405" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="552.38" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (265 samples, 0.54%; 0.00%)</title><rect x="14.5" y="501" width="6.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="17.48" y="511.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (10 samples, 0.02%; -0.00%)</title><rect x="394.4" y="181" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="397.40" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (6 samples, 0.01%; -0.00%)</title><rect x="919.0" y="357" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="922.03" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (21 samples, 0.04%; +0.02%)</title><rect x="166.8" y="197" width="0.5" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="169.77" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (37 samples, 0.08%; -0.02%)</title><rect x="984.1" y="309" width="0.9" height="15.0" fill="rgb(197,197,255)" rx="2" ry="2" />
<text  x="987.14" y="319.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; 0.00%)</title><rect x="1055.6" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1058.64" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (171 samples, 0.35%; +0.01%)</title><rect x="817.3" y="165" width="4.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="820.28" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (29 samples, 0.06%; -0.01%)</title><rect x="859.0" y="373" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="862.02" y="383.5" ></text>
</g>
<g >
<title>table::set_hit_rate (79 samples, 0.16%; +0.00%)</title><rect x="722.6" y="453" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="725.60" y="463.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.05%)</title><rect x="425.8" y="373" width="0.8" height="15.0" fill="rgb(187,187,255)" rx="2" ry="2" />
<text  x="428.84" y="383.5" ></text>
</g>
<g >
<title>dht::tri_compare (24 samples, 0.05%; -0.03%)</title><rect x="1082.9" y="245" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1085.91" y="255.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (17 samples, 0.03%; +0.03%)</title><rect x="284.6" y="405" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="287.55" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="646.0" y="485" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="649.02" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="566.9" y="309" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="569.85" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%; +0.00%)</title><rect x="591.9" y="341" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="594.87" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%; -0.01%)</title><rect x="854.4" y="373" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="857.37" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (112 samples, 0.23%; +0.01%)</title><rect x="366.5" y="165" width="2.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="369.53" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%; +0.01%)</title><rect x="1107.8" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1110.76" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (99 samples, 0.20%; +0.01%)</title><rect x="954.1" y="389" width="2.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="957.09" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%; 0.00%)</title><rect x="938.8" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="941.84" y="335.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,099 samples, 2.25%; +0.05%)</title><rect x="499.5" y="325" width="26.6" height="15.0" fill="rgb(255,186,186)" rx="2" ry="2" />
<text  x="502.49" y="335.5" >m..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; -0.01%)</title><rect x="842.7" y="277" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="845.74" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (694 samples, 1.42%; +0.01%)</title><rect x="805.3" y="245" width="16.8" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="808.28" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%; -0.01%)</title><rect x="72.6" y="453" width="0.2" height="15.0" fill="rgb(202,202,255)" rx="2" ry="2" />
<text  x="75.62" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (47,624 samples, 97.65%; -0.01%)</title><rect x="24.1" y="517" width="1152.3" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="27.11" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.02%; 0.00%)</title><rect x="204.6" y="101" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="207.61" y="111.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (6 samples, 0.01%; +0.01%)</title><rect x="549.6" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="552.62" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (31 samples, 0.06%; +0.02%)</title><rect x="127.7" y="277" width="0.8" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="130.74" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (16 samples, 0.03%; +0.00%)</title><rect x="874.8" y="453" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="877.82" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (29 samples, 0.06%; +0.02%)</title><rect x="850.1" y="405" width="0.7" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="853.09" y="415.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; -0.01%)</title><rect x="224.4" y="181" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="227.43" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; 0.00%)</title><rect x="940.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.00" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (15 samples, 0.03%; -0.00%)</title><rect x="662.2" y="389" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="665.16" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.00%)</title><rect x="1054.2" y="197" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1057.21" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (68 samples, 0.14%; +0.01%)</title><rect x="881.3" y="501" width="1.7" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="884.30" y="511.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (158 samples, 0.32%; -0.01%)</title><rect x="864.4" y="421" width="3.8" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="867.42" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (7 samples, 0.01%; +0.01%)</title><rect x="544.9" y="341" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="547.88" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (75 samples, 0.15%; 0.00%)</title><rect x="16.8" y="357" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.80" y="367.5" ></text>
</g>
<g >
<title>[unknown] (467 samples, 0.96%; 0.00%)</title><rect x="10.0" y="629" width="11.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.02" y="639.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (63 samples, 0.13%; +0.00%)</title><rect x="1060.8" y="325" width="1.5" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1063.77" y="335.5" ></text>
</g>
<g >
<title>local_schema_registry (6 samples, 0.01%; -0.05%)</title><rect x="972.0" y="373" width="0.1" height="15.0" fill="rgb(186,186,255)" rx="2" ry="2" />
<text  x="974.99" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="918.9" y="293" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="921.86" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (22 samples, 0.05%; -0.00%)</title><rect x="887.9" y="453" width="0.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="890.89" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (20 samples, 0.04%; -0.01%)</title><rect x="1077.4" y="293" width="0.5" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1080.42" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (39 samples, 0.08%; +0.01%)</title><rect x="361.5" y="149" width="1.0" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="364.55" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (15 samples, 0.03%; -0.01%)</title><rect x="282.6" y="357" width="0.4" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="285.59" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%; +0.00%)</title><rect x="134.6" y="229" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="137.56" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; 0.00%)</title><rect x="701.0" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="704.04" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (66 samples, 0.14%; +0.01%)</title><rect x="853.1" y="405" width="1.6" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="856.14" y="415.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (48 samples, 0.10%; +0.00%)</title><rect x="1013.7" y="277" width="1.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1016.66" y="287.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (19 samples, 0.04%; +0.01%)</title><rect x="218.3" y="133" width="0.4" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="221.26" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (13 samples, 0.03%; +0.01%)</title><rect x="1039.3" y="197" width="0.3" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="1042.33" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%; +0.01%)</title><rect x="675.4" y="453" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="678.40" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (16 samples, 0.03%; -0.00%)</title><rect x="583.4" y="357" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="586.35" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (29 samples, 0.06%; -0.00%)</title><rect x="709.3" y="453" width="0.7" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="712.27" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,883 samples, 3.86%; -0.00%)</title><rect x="324.7" y="213" width="45.6" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="327.70" y="223.5" >quer..</text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (6 samples, 0.01%; +0.00%)</title><rect x="1047.6" y="261" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1050.61" y="271.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%; 0.00%)</title><rect x="243.2" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="246.18" y="191.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,935 samples, 3.97%; -0.02%)</title><rect x="788.9" y="373" width="46.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="791.88" y="383.5" >serv..</text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (14 samples, 0.03%; 0.00%)</title><rect x="372.9" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="375.89" y="223.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (30 samples, 0.06%; +0.05%)</title><rect x="633.3" y="421" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="636.27" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (5 samples, 0.01%; -0.00%)</title><rect x="537.6" y="277" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="540.65" y="287.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (67 samples, 0.14%; -0.01%)</title><rect x="767.8" y="389" width="1.6" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="770.78" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (25 samples, 0.05%; +0.01%)</title><rect x="777.0" y="325" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="780.00" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.00%)</title><rect x="227.5" y="197" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="230.50" y="207.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (239 samples, 0.49%; -0.02%)</title><rect x="927.7" y="373" width="5.7" height="15.0" fill="rgb(201,201,255)" rx="2" ry="2" />
<text  x="930.66" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.02%; 0.00%)</title><rect x="1107.5" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1110.52" y="367.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%; 0.00%)</title><rect x="1141.1" y="469" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (7 samples, 0.01%; -0.00%)</title><rect x="790.2" y="357" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="793.18" y="367.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (7 samples, 0.01%; 0.00%)</title><rect x="1141.1" y="197" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1144.15" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%; -0.02%)</title><rect x="770.2" y="373" width="0.4" height="15.0" fill="rgb(200,200,255)" rx="2" ry="2" />
<text  x="773.24" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (20 samples, 0.04%; +0.02%)</title><rect x="754.4" y="293" width="0.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="757.42" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; +0.02%)</title><rect x="630.3" y="357" width="0.3" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="633.34" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (7 samples, 0.01%; -0.01%)</title><rect x="720.3" y="405" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="723.30" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.02%; -0.01%)</title><rect x="855.7" y="437" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="858.73" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%; -0.01%)</title><rect x="1159.8" y="357" width="0.4" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1162.80" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.14%; +0.01%)</title><rect x="276.6" y="261" width="1.7" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="279.57" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (116 samples, 0.24%; -0.04%)</title><rect x="858.2" y="389" width="2.8" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="861.22" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::needs_filtering (9 samples, 0.02%; +0.01%)</title><rect x="900.6" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="903.61" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (105 samples, 0.22%; 0.00%)</title><rect x="665.8" y="469" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="668.77" y="479.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.09%; +0.01%)</title><rect x="418.6" y="261" width="1.1" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="421.55" y="271.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%; -0.00%)</title><rect x="147.4" y="245" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="150.41" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.05%; 0.00%)</title><rect x="1061.7" y="293" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1064.74" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (225 samples, 0.46%; +0.01%)</title><rect x="456.2" y="293" width="5.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="459.15" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (31 samples, 0.06%; 0.00%)</title><rect x="760.1" y="309" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="763.08" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (107 samples, 0.22%; +0.00%)</title><rect x="732.1" y="469" width="2.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="735.06" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%; 0.00%)</title><rect x="1142.2" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1145.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,356 samples, 2.78%; 0.00%)</title><rect x="562.4" y="421" width="32.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="565.37" y="431.5" >st..</text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (75 samples, 0.15%; -0.01%)</title><rect x="753.4" y="373" width="1.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="756.40" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="239.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.19%; 0.00%)</title><rect x="157.9" y="213" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="160.89" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%; +0.01%)</title><rect x="542.1" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="545.07" y="255.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (28 samples, 0.06%; -0.01%)</title><rect x="536.8" y="261" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="539.75" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%; +0.00%)</title><rect x="72.8" y="453" width="0.3" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="75.79" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.02%; +0.00%)</title><rect x="228.7" y="181" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="231.73" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%; -0.03%)</title><rect x="1156.1" y="421" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1159.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (7 samples, 0.01%; -0.01%)</title><rect x="919.3" y="341" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="922.27" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (15 samples, 0.03%; +0.01%)</title><rect x="42.6" y="485" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="45.57" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%; -0.03%)</title><rect x="514.7" y="181" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="517.66" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (71 samples, 0.15%; +0.00%)</title><rect x="37.6" y="469" width="1.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="40.58" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; +0.01%)</title><rect x="699.5" y="469" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="702.49" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="934.7" y="357" width="0.2" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="937.71" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (189 samples, 0.39%; +0.02%)</title><rect x="706.0" y="469" width="4.5" height="15.0" fill="rgb(255,197,197)" rx="2" ry="2" />
<text  x="708.96" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (119 samples, 0.24%; -0.01%)</title><rect x="869.7" y="405" width="2.9" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="872.69" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (21 samples, 0.04%; -0.00%)</title><rect x="867.5" y="357" width="0.5" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="870.46" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%; +0.01%)</title><rect x="843.3" y="277" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="846.32" y="287.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (154 samples, 0.32%; -0.04%)</title><rect x="476.2" y="261" width="3.7" height="15.0" fill="rgb(191,191,255)" rx="2" ry="2" />
<text  x="479.16" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (525 samples, 1.08%; -0.02%)</title><rect x="131.4" y="277" width="12.7" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="134.44" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (79 samples, 0.16%; +0.00%)</title><rect x="699.0" y="485" width="1.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="701.96" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (11 samples, 0.02%; +0.01%)</title><rect x="293.8" y="293" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="296.82" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="677.8" y="485" width="0.1" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="680.77" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.00%)</title><rect x="255.5" y="261" width="0.1" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="258.49" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (19 samples, 0.04%; +0.00%)</title><rect x="663.8" y="389" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="666.78" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (144 samples, 0.30%; +0.06%)</title><rect x="1074.8" y="309" width="3.5" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1077.83" y="319.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (5 samples, 0.01%; 0.00%)</title><rect x="336.4" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="339.41" y="191.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%; 0.00%)</title><rect x="16.5" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.53" y="351.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (11 samples, 0.02%; -0.00%)</title><rect x="572.8" y="293" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="575.76" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.16%; +0.01%)</title><rect x="972.3" y="357" width="1.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="975.28" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (188 samples, 0.39%; +0.01%)</title><rect x="223.1" y="213" width="4.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="226.07" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; +0.01%)</title><rect x="431.3" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="434.33" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (9 samples, 0.02%; -0.00%)</title><rect x="952.5" y="341" width="0.3" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="955.54" y="351.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (5 samples, 0.01%; 0.00%)</title><rect x="20.7" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.67" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.01%; +0.01%)</title><rect x="860.9" y="357" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="863.88" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; -0.01%)</title><rect x="469.9" y="293" width="0.2" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="472.90" y="303.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (9 samples, 0.02%; +0.00%)</title><rect x="15.9" y="245" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="18.90" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (481 samples, 0.99%; +0.00%)</title><rect x="233.3" y="245" width="11.7" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="236.33" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (6 samples, 0.01%; +0.00%)</title><rect x="826.7" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="829.72" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (383 samples, 0.79%; -0.01%)</title><rect x="681.8" y="501" width="9.3" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="684.78" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="1174.8" y="437" width="0.1" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1177.76" y="447.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%; +0.02%)</title><rect x="29.6" y="485" width="0.9" height="15.0" fill="rgb(255,201,201)" rx="2" ry="2" />
<text  x="32.57" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (239 samples, 0.49%; -0.02%)</title><rect x="251.4" y="293" width="5.8" height="15.0" fill="rgb(198,198,255)" rx="2" ry="2" />
<text  x="254.41" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (145 samples, 0.30%; -0.00%)</title><rect x="857.8" y="405" width="3.5" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="860.83" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%; +0.00%)</title><rect x="649.6" y="469" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="652.55" y="479.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (42 samples, 0.09%; +0.01%)</title><rect x="815.9" y="117" width="1.0" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="818.90" y="127.5" ></text>
</g>
<g >
<title>tombstone::apply (5 samples, 0.01%; -0.01%)</title><rect x="395.6" y="213" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="398.61" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (6 samples, 0.01%; 0.00%)</title><rect x="1002.4" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1005.36" y="335.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (136 samples, 0.28%; +0.01%)</title><rect x="1034.7" y="165" width="3.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1037.73" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; +0.01%)</title><rect x="1006.3" y="245" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1009.30" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%; +0.01%)</title><rect x="668.2" y="437" width="0.1" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="671.16" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%; 0.00%)</title><rect x="50.3" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="53.26" y="479.5" ></text>
</g>
<g >
<title>row::row (7 samples, 0.01%; -0.04%)</title><rect x="249.1" y="213" width="0.1" height="15.0" fill="rgb(190,190,255)" rx="2" ry="2" />
<text  x="252.06" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (93 samples, 0.19%; +0.02%)</title><rect x="509.2" y="261" width="2.2" height="15.0" fill="rgb(255,198,198)" rx="2" ry="2" />
<text  x="512.19" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (13 samples, 0.03%; +0.01%)</title><rect x="1039.9" y="197" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1042.89" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.01%; +0.00%)</title><rect x="524.2" y="277" width="0.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="527.22" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (40 samples, 0.08%; -0.01%)</title><rect x="391.0" y="165" width="1.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="394.04" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (29 samples, 0.06%; +0.00%)</title><rect x="817.7" y="117" width="0.7" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="820.72" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (11 samples, 0.02%; +0.00%)</title><rect x="1169.5" y="453" width="0.3" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1172.51" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (33 samples, 0.07%; +0.01%)</title><rect x="228.2" y="197" width="0.8" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="231.23" y="207.5" ></text>
</g>
<g >
<title>posix_memalign (35 samples, 0.07%; -0.00%)</title><rect x="201.3" y="85" width="0.9" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="204.34" y="95.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (12 samples, 0.02%; -0.00%)</title><rect x="966.3" y="405" width="0.3" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="969.33" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (50 samples, 0.10%; +0.00%)</title><rect x="1065.9" y="277" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="1068.92" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (10 samples, 0.02%; -0.01%)</title><rect x="146.1" y="261" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="149.10" y="271.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (78 samples, 0.16%; -0.04%)</title><rect x="139.3" y="245" width="1.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="142.30" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.05%; +0.00%)</title><rect x="579.6" y="277" width="0.6" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="582.55" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%; +0.00%)</title><rect x="408.2" y="197" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="411.25" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%; +0.01%)</title><rect x="313.3" y="165" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="316.35" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%; -0.00%)</title><rect x="315.2" y="165" width="0.2" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="318.23" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (117 samples, 0.24%; +0.01%)</title><rect x="196.9" y="117" width="2.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="199.89" y="127.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (164 samples, 0.34%; -0.01%)</title><rect x="661.1" y="453" width="4.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="664.12" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%; +0.01%)</title><rect x="864.0" y="373" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="867.00" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (34 samples, 0.07%; -0.01%)</title><rect x="62.7" y="405" width="0.8" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="65.70" y="415.5" ></text>
</g>
<g >
<title>db::validate_for_read (6 samples, 0.01%; +0.01%)</title><rect x="1125.5" y="421" width="0.2" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="1128.54" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (10 samples, 0.02%; -0.00%)</title><rect x="1117.5" y="357" width="0.2" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1120.46" y="367.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.01%)</title><rect x="599.0" y="405" width="0.6" height="15.0" fill="rgb(255,202,202)" rx="2" ry="2" />
<text  x="601.96" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (18 samples, 0.04%; +0.00%)</title><rect x="577.2" y="277" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="580.16" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="673.7" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.68" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (15 samples, 0.03%; -0.00%)</title><rect x="741.4" y="309" width="0.4" height="15.0" fill="rgb(208,208,255)" rx="2" ry="2" />
<text  x="744.40" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="725.8" y="485" width="0.2" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="728.84" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (58 samples, 0.12%; +0.00%)</title><rect x="1106.5" y="373" width="1.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1109.47" y="383.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (5 samples, 0.01%; +0.01%)</title><rect x="742.2" y="309" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="745.23" y="319.5" ></text>
</g>
<g >
<title>db::filter_for_query (39 samples, 0.08%; -0.00%)</title><rect x="1069.1" y="341" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="1072.12" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (47 samples, 0.10%; +0.00%)</title><rect x="839.6" y="325" width="1.2" height="15.0" fill="rgb(255,208,208)" rx="2" ry="2" />
<text  x="842.61" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (14 samples, 0.03%; +0.01%)</title><rect x="443.9" y="325" width="0.3" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="446.86" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (12 samples, 0.02%; 0.00%)</title><rect x="21.0" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="623.5" ></text>
</g>
<g >
<title>tracing::add_table_name (9 samples, 0.02%; 0.00%)</title><rect x="1140.6" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1143.59" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; 0.00%)</title><rect x="851.2" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="854.23" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (37 samples, 0.08%; +0.00%)</title><rect x="225.7" y="149" width="0.9" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="228.73" y="159.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.10%; +0.01%)</title><rect x="279.6" y="293" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="282.59" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (16 samples, 0.03%; +0.00%)</title><rect x="1152.7" y="485" width="0.4" height="15.0" fill="rgb(255,207,207)" rx="2" ry="2" />
<text  x="1155.71" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%; 0.00%)</title><rect x="17.4" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.43" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (6 samples, 0.01%; 0.00%)</title><rect x="884.2" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.16" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (16 samples, 0.03%; +0.01%)</title><rect x="953.4" y="325" width="0.4" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="956.39" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (15 samples, 0.03%; -0.00%)</title><rect x="131.0" y="261" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="134.03" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (28 samples, 0.06%; 0.00%)</title><rect x="1144.0" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1147.03" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (9 samples, 0.02%; +0.01%)</title><rect x="39.8" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="42.76" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (17 samples, 0.03%; -0.00%)</title><rect x="603.0" y="389" width="0.4" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="606.00" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (11 samples, 0.02%; -0.01%)</title><rect x="583.5" y="341" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="586.47" y="351.5" ></text>
</g>
<g >
<title>auth::resource::resource (53 samples, 0.11%; 0.00%)</title><rect x="785.1" y="373" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="788.15" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%; -0.01%)</title><rect x="1172.1" y="437" width="0.1" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="1175.09" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (44 samples, 0.09%; -0.00%)</title><rect x="260.7" y="325" width="1.0" height="15.0" fill="rgb(207,207,255)" rx="2" ry="2" />
<text  x="263.67" y="335.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (28 samples, 0.06%; -0.01%)</title><rect x="36.8" y="405" width="0.7" height="15.0" fill="rgb(205,205,255)" rx="2" ry="2" />
<text  x="39.83" y="415.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (5 samples, 0.01%; 0.00%)</title><rect x="21.0" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.01" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="625.3" y="437" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="628.26" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.01%)</title><rect x="559.1" y="389" width="0.5" height="15.0" fill="rgb(255,205,205)" rx="2" ry="2" />
<text  x="562.13" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,376 samples, 8.97%; -0.01%)</title><rect x="144.7" y="309" width="105.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="147.68" y="319.5" >partition_sn..</text>
</g>
<g >
<title>mutation_querier::mutation_querier (80 samples, 0.16%; -0.01%)</title><rect x="311.7" y="181" width="1.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="314.68" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (54 samples, 0.11%; -0.01%)</title><rect x="829.2" y="325" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="832.23" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%; +0.01%)</title><rect x="145.4" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="148.38" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="413.3" y="245" width="0.1" height="15.0" fill="rgb(255,204,204)" rx="2" ry="2" />
<text  x="416.33" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (8 samples, 0.02%; -0.01%)</title><rect x="373.0" y="197" width="0.2" height="15.0" fill="rgb(204,204,255)" rx="2" ry="2" />
<text  x="376.04" y="207.5" ></text>
</g>
</g>
</svg>
