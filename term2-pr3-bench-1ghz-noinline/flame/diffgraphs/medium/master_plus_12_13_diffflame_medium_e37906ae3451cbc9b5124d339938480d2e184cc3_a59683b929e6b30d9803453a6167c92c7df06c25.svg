<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>seastar::memory::allocate (150 samples, 0.32%; -0.02%)</title><rect x="1025.3" y="229" width="3.8" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="1028.31" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%; +0.01%)</title><rect x="399.1" y="165" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="402.08" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%; -0.00%)</title><rect x="655.5" y="469" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="658.53" y="479.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (13 samples, 0.03%; +0.00%)</title><rect x="47.0" y="485" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="49.98" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%; -0.01%)</title><rect x="724.3" y="437" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="727.32" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (259 samples, 0.55%; -0.01%)</title><rect x="595.0" y="373" width="6.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="598.00" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (13 samples, 0.03%; +0.00%)</title><rect x="1034.3" y="149" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1037.32" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (23 samples, 0.05%; +0.00%)</title><rect x="633.5" y="421" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="636.47" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (45 samples, 0.10%; -0.02%)</title><rect x="354.3" y="165" width="1.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="357.27" y="175.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (13 samples, 0.03%; -0.01%)</title><rect x="523.2" y="229" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="526.18" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (27 samples, 0.06%; +0.00%)</title><rect x="732.5" y="501" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="735.46" y="511.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (138 samples, 0.29%; -0.00%)</title><rect x="867.3" y="421" width="3.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="870.35" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%; +0.01%)</title><rect x="1053.4" y="245" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1056.38" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (31 samples, 0.07%; -0.01%)</title><rect x="942.2" y="389" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="945.19" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (11 samples, 0.02%; -0.03%)</title><rect x="642.2" y="421" width="0.3" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="645.20" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (10 samples, 0.02%; -0.01%)</title><rect x="601.2" y="341" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="604.15" y="351.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (4 samples, 0.01%; -0.01%)</title><rect x="926.9" y="373" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="929.95" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (4 samples, 0.01%; 0.00%)</title><rect x="237.4" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="240.43" y="239.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (4 samples, 0.01%; +0.01%)</title><rect x="182.9" y="101" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="185.93" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.09%; -0.01%)</title><rect x="759.2" y="373" width="1.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="762.19" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (181 samples, 0.39%; +0.01%)</title><rect x="453.2" y="277" width="4.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="456.23" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (853 samples, 1.81%; +0.06%)</title><rect x="378.2" y="197" width="21.4" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="381.22" y="207.5" >c..</text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%; 0.00%)</title><rect x="522.2" y="229" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="525.17" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%; -0.00%)</title><rect x="536.2" y="325" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="539.18" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (30 samples, 0.06%; 0.00%)</title><rect x="1139.3" y="341" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.34" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.03%; -0.00%)</title><rect x="812.0" y="229" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="815.04" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%; -0.00%)</title><rect x="832.7" y="293" width="1.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="835.70" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (6 samples, 0.01%; +0.00%)</title><rect x="18.2" y="261" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="21.16" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (8 samples, 0.02%; -0.00%)</title><rect x="985.9" y="357" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="988.89" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (8 samples, 0.02%; +0.01%)</title><rect x="1138.2" y="437" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1141.23" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.01%)</title><rect x="516.3" y="181" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="519.35" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume (9 samples, 0.02%; -0.01%)</title><rect x="520.8" y="181" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="523.79" y="191.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (9 samples, 0.02%; +0.01%)</title><rect x="1097.7" y="293" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1100.69" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (18 samples, 0.04%; +0.01%)</title><rect x="1136.9" y="421" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1139.90" y="431.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.19%; +0.00%)</title><rect x="288.2" y="277" width="2.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="291.17" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%; -0.01%)</title><rect x="144.8" y="261" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="147.79" y="271.5" ></text>
</g>
<g >
<title>dht::shard_of (4 samples, 0.01%; -0.01%)</title><rect x="1007.8" y="293" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1010.81" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%; 0.00%)</title><rect x="624.5" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="627.50" y="431.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; -0.00%)</title><rect x="776.6" y="405" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="779.64" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (185 samples, 0.39%; 0.00%)</title><rect x="1168.6" y="485" width="4.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1171.61" y="495.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.01%; -0.00%)</title><rect x="22.8" y="405" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="25.80" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; -0.00%)</title><rect x="546.7" y="245" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="549.68" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.00%)</title><rect x="590.7" y="293" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="593.69" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (276 samples, 0.59%; 0.00%)</title><rect x="16.3" y="565" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.28" y="575.5" ></text>
</g>
<g >
<title>database::find_uuid (153 samples, 0.33%; +0.01%)</title><rect x="846.0" y="357" width="3.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="849.01" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (33 samples, 0.07%; +0.01%)</title><rect x="267.4" y="277" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="270.35" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (41 samples, 0.09%; 0.00%)</title><rect x="673.6" y="469" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.63" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="942.0" y="389" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="945.01" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="288.1" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="291.07" y="287.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (30 samples, 0.06%; +0.01%)</title><rect x="326.5" y="181" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="329.48" y="191.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (12 samples, 0.03%; 0.00%)</title><rect x="1139.6" y="213" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.59" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; -0.02%)</title><rect x="80.4" y="453" width="0.3" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="83.40" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (23 samples, 0.05%; +0.01%)</title><rect x="612.0" y="389" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="614.95" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (25 samples, 0.05%; +0.03%)</title><rect x="254.7" y="229" width="0.6" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="257.68" y="239.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (8 samples, 0.02%; +0.01%)</title><rect x="603.9" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="606.92" y="415.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.01%; 0.00%)</title><rect x="1177.7" y="629" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1180.72" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%; +0.01%)</title><rect x="948.9" y="357" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="951.94" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (331 samples, 0.70%; -0.02%)</title><rect x="817.9" y="197" width="8.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="820.86" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (23 samples, 0.05%; -0.00%)</title><rect x="145.2" y="277" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="148.19" y="287.5" ></text>
</g>
<g >
<title>database::query (5 samples, 0.01%; +0.01%)</title><rect x="23.7" y="517" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="26.71" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (60 samples, 0.13%; +0.01%)</title><rect x="226.1" y="181" width="1.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="229.13" y="191.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (28 samples, 0.06%; -0.02%)</title><rect x="936.7" y="357" width="0.7" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="939.69" y="367.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (10 samples, 0.02%; -0.02%)</title><rect x="986.2" y="357" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="989.25" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; +0.01%)</title><rect x="838.4" y="341" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="841.37" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.01%)</title><rect x="869.8" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="872.81" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (21 samples, 0.04%; +0.00%)</title><rect x="704.4" y="453" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="707.36" y="463.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (4 samples, 0.01%; +0.00%)</title><rect x="832.6" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="835.60" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (24 samples, 0.05%; +0.01%)</title><rect x="339.2" y="181" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="342.16" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%; +0.01%)</title><rect x="851.3" y="293" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="854.30" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (38 samples, 0.08%; +0.00%)</title><rect x="764.0" y="373" width="1.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="767.01" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%; -0.02%)</title><rect x="851.6" y="277" width="0.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="854.56" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (5 samples, 0.01%; +0.01%)</title><rect x="989.0" y="341" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="991.96" y="351.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; +0.00%)</title><rect x="494.2" y="197" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="497.23" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="858.6" y="437" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="861.61" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; 0.00%)</title><rect x="870.6" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.61" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (20 samples, 0.04%; -0.02%)</title><rect x="542.0" y="261" width="0.5" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="544.98" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (84 samples, 0.18%; 0.00%)</title><rect x="374.7" y="213" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="377.73" y="223.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (13 samples, 0.03%; +0.02%)</title><rect x="295.6" y="405" width="0.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="298.62" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.00%)</title><rect x="1124.8" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1127.75" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (34 samples, 0.07%; +0.02%)</title><rect x="822.6" y="117" width="0.8" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="825.56" y="127.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%; -0.01%)</title><rect x="53.2" y="469" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="56.16" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (7 samples, 0.01%; 0.00%)</title><rect x="20.5" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.52" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (52 samples, 0.11%; +0.03%)</title><rect x="1027.8" y="213" width="1.3" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="1030.77" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (124 samples, 0.26%; +0.01%)</title><rect x="683.0" y="485" width="3.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="685.97" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (32 samples, 0.07%; +0.01%)</title><rect x="537.0" y="341" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="539.96" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%; +0.02%)</title><rect x="414.7" y="197" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="417.75" y="207.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (18 samples, 0.04%; +0.00%)</title><rect x="37.6" y="437" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="40.57" y="447.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; +0.00%)</title><rect x="498.9" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="501.93" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.01%; 0.00%)</title><rect x="269.7" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="272.69" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.01%; +0.00%)</title><rect x="779.5" y="357" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="782.53" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.02%; 0.00%)</title><rect x="17.1" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.08" y="287.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; +0.00%)</title><rect x="788.4" y="373" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="791.39" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%; -0.01%)</title><rect x="1042.9" y="181" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1045.91" y="191.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (283 samples, 0.60%; 0.00%)</title><rect x="16.1" y="597" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.10" y="607.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (6 samples, 0.01%; -0.00%)</title><rect x="469.2" y="341" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="472.23" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%; +0.01%)</title><rect x="432.6" y="389" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="435.62" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%; 0.00%)</title><rect x="1139.6" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.56" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; 0.00%)</title><rect x="767.5" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="770.53" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; -0.00%)</title><rect x="629.8" y="405" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="632.77" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (30 samples, 0.06%; +0.01%)</title><rect x="510.3" y="277" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="513.30" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.00%)</title><rect x="312.6" y="245" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="315.57" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; -0.00%)</title><rect x="919.6" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="922.57" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (348 samples, 0.74%; +0.01%)</title><rect x="408.7" y="245" width="8.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="411.72" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (4 samples, 0.01%; -0.01%)</title><rect x="743.6" y="453" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="746.55" y="463.5" ></text>
</g>
<g >
<title>seastar::schedule (7 samples, 0.01%; +0.01%)</title><rect x="1141.6" y="501" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1144.65" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,798 samples, 8.08%; +0.00%)</title><rect x="312.8" y="261" width="95.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="315.77" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%; +0.00%)</title><rect x="768.5" y="277" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="771.48" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="1139.4" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.39" y="303.5" ></text>
</g>
<g >
<title>schema::get_partitioner (4 samples, 0.01%; +0.00%)</title><rect x="941.9" y="389" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="944.91" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (18 samples, 0.04%; 0.00%)</title><rect x="17.7" y="261" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.71" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%; -0.04%)</title><rect x="876.2" y="421" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="879.23" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (11 samples, 0.02%; -0.00%)</title><rect x="825.7" y="85" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="828.70" y="95.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (114 samples, 0.24%; -0.01%)</title><rect x="1151.3" y="469" width="2.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1154.31" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (5 samples, 0.01%; +0.00%)</title><rect x="832.0" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="835.05" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%; -0.05%)</title><rect x="208.6" y="149" width="0.5" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="211.63" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%; +0.01%)</title><rect x="804.1" y="325" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="807.13" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (403 samples, 0.86%; +0.02%)</title><rect x="580.9" y="309" width="10.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="583.95" y="319.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (39 samples, 0.08%; +0.08%)</title><rect x="344.6" y="181" width="1.0" height="15.0" fill="rgb(255,84,84)" rx="2" ry="2" />
<text  x="347.63" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (4 samples, 0.01%; -0.01%)</title><rect x="1002.0" y="325" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1005.01" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (18 samples, 0.04%; -0.03%)</title><rect x="72.7" y="389" width="0.5" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="75.71" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;range_tombstone*&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="561.7" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="564.71" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (8 samples, 0.02%; +0.00%)</title><rect x="24.6" y="517" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="27.64" y="527.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (59 samples, 0.13%; -0.00%)</title><rect x="779.6" y="357" width="1.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="782.63" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%; +0.01%)</title><rect x="1107.1" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1110.10" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%; +0.01%)</title><rect x="269.5" y="293" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="272.51" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (230 samples, 0.49%; +0.01%)</title><rect x="285.2" y="309" width="5.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="288.15" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (4 samples, 0.01%; +0.00%)</title><rect x="1095.2" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1098.15" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%; -0.01%)</title><rect x="688.6" y="469" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="691.65" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%; -0.00%)</title><rect x="1009.1" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1012.07" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (11 samples, 0.02%; +0.01%)</title><rect x="1105.4" y="357" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1108.37" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; +0.01%)</title><rect x="815.2" y="197" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="818.23" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (15 samples, 0.03%; +0.00%)</title><rect x="422.5" y="261" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="425.51" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%; +0.01%)</title><rect x="783.2" y="293" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="786.17" y="303.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.01%)</title><rect x="828.7" y="245" width="0.9" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="831.73" y="255.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (16 samples, 0.03%; +0.00%)</title><rect x="928.9" y="357" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="931.88" y="367.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (32 samples, 0.07%; +0.02%)</title><rect x="752.4" y="405" width="0.8" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="755.36" y="415.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; +0.01%)</title><rect x="635.7" y="421" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="638.72" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (42 samples, 0.09%; +0.01%)</title><rect x="100.2" y="405" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="103.18" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (285 samples, 0.61%; 0.00%)</title><rect x="1081.6" y="261" width="7.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.62" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (73 samples, 0.16%; +0.03%)</title><rect x="214.2" y="101" width="1.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="217.16" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (6 samples, 0.01%; +0.00%)</title><rect x="511.9" y="261" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="514.88" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (4 samples, 0.01%; -0.01%)</title><rect x="772.8" y="405" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="775.82" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (21 samples, 0.04%; 0.00%)</title><rect x="20.8" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.77" y="351.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.01%; -0.00%)</title><rect x="1139.2" y="309" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.16" y="319.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (9 samples, 0.02%; -0.01%)</title><rect x="796.5" y="357" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="799.55" y="367.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (108 samples, 0.23%; -0.02%)</title><rect x="393.0" y="149" width="2.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="395.98" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (19 samples, 0.04%; 0.00%)</title><rect x="885.9" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.95" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%; -0.03%)</title><rect x="809.4" y="229" width="0.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="812.43" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (10 samples, 0.02%; -0.01%)</title><rect x="767.5" y="293" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="770.50" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="639.2" y="357" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="642.21" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (161 samples, 0.34%; -0.00%)</title><rect x="355.4" y="165" width="4.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="358.40" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (11 samples, 0.02%; +0.01%)</title><rect x="916.6" y="357" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="919.63" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (8 samples, 0.02%; -0.02%)</title><rect x="858.2" y="437" width="0.2" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="861.23" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.00%)</title><rect x="678.4" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="681.43" y="479.5" ></text>
</g>
<g >
<title>boost::algorithm::any_of&lt;std::vector&lt;cql3::expr::expression, std::allocator&lt;cql3::expr::expression&gt; &gt;, std::_Bind_front&lt;bool  (4 samples, 0.01%; 0.00%)</title><rect x="885.6" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.65" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%; 0.00%)</title><rect x="883.7" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="886.66" y="511.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.01%; +0.00%)</title><rect x="749.5" y="309" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="752.48" y="319.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="23.3" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.26" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; +0.00%)</title><rect x="869.7" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="872.68" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,248 samples, 2.66%; -0.03%)</title><rect x="176.2" y="133" width="31.3" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="179.17" y="143.5" >co..</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (23 samples, 0.05%; +0.04%)</title><rect x="171.6" y="181" width="0.5" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="174.55" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (51 samples, 0.11%; +0.01%)</title><rect x="1160.5" y="453" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1163.53" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%; -0.01%)</title><rect x="1038.4" y="197" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1041.36" y="207.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%; -0.01%)</title><rect x="961.3" y="389" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="964.34" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%; 0.00%)</title><rect x="551.0" y="309" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="554.02" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; +0.00%)</title><rect x="400.7" y="197" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="403.74" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (62 samples, 0.13%; +0.00%)</title><rect x="17.0" y="325" width="1.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="20.03" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%; +0.01%)</title><rect x="789.5" y="341" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="792.47" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (4 samples, 0.01%; +0.01%)</title><rect x="728.1" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="731.11" y="415.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,612 samples, 9.81%; -0.09%)</title><rect x="436.7" y="405" width="115.8" height="15.0" fill="rgb(63,63,255)" rx="2" ry="2" />
<text  x="439.66" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>global_schema_ptr::get (4 samples, 0.01%; -0.01%)</title><rect x="1044.4" y="261" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1047.41" y="271.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; +0.00%)</title><rect x="518.8" y="197" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="521.81" y="207.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (43 samples, 0.09%; -0.02%)</title><rect x="1013.9" y="277" width="1.1" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="1016.89" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="789.3" y="341" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="792.29" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%; -0.01%)</title><rect x="940.3" y="341" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="943.30" y="351.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (6 samples, 0.01%; -0.01%)</title><rect x="225.5" y="149" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="228.50" y="159.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (23 samples, 0.05%; +0.01%)</title><rect x="175.2" y="133" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="178.17" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (5 samples, 0.01%; +0.01%)</title><rect x="52.5" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="55.45" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%; -0.01%)</title><rect x="669.7" y="405" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="672.74" y="415.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%; +0.00%)</title><rect x="543.5" y="293" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="546.51" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (4 samples, 0.01%; +0.00%)</title><rect x="853.2" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="856.16" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; 0.00%)</title><rect x="771.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="774.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.06%; +0.01%)</title><rect x="38.8" y="421" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="41.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (134 samples, 0.29%; +0.01%)</title><rect x="1051.3" y="261" width="3.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1054.29" y="271.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%; 0.00%)</title><rect x="47.6" y="501" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="50.61" y="511.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%; -0.00%)</title><rect x="749.6" y="309" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="752.58" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%; -0.01%)</title><rect x="1071.1" y="293" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1074.08" y="303.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; -0.00%)</title><rect x="696.5" y="485" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="699.48" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt;  (4 samples, 0.01%; 0.00%)</title><rect x="16.1" y="565" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.13" y="575.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (10 samples, 0.02%; +0.01%)</title><rect x="296.5" y="389" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="299.48" y="399.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%; +0.00%)</title><rect x="1097.9" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1100.91" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.01%)</title><rect x="639.7" y="421" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="642.67" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (33 samples, 0.07%; -0.00%)</title><rect x="633.2" y="437" width="0.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="636.21" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (17 samples, 0.04%; -0.03%)</title><rect x="149.9" y="245" width="0.4" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="152.86" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="716.5" y="485" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="719.54" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%; +0.01%)</title><rect x="416.8" y="213" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="419.83" y="223.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (6 samples, 0.01%; -0.01%)</title><rect x="769.2" y="277" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="772.18" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (5 samples, 0.01%; +0.00%)</title><rect x="1151.7" y="453" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1154.66" y="463.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (4 samples, 0.01%; -0.00%)</title><rect x="536.5" y="341" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="539.51" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (13 samples, 0.03%; +0.01%)</title><rect x="953.9" y="389" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="956.88" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; +0.00%)</title><rect x="1157.6" y="357" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1160.59" y="367.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (5 samples, 0.01%; +0.01%)</title><rect x="776.4" y="373" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="779.36" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (504 samples, 1.07%; +0.01%)</title><rect x="280.8" y="341" width="12.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="283.81" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%; -0.00%)</title><rect x="867.1" y="373" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="870.15" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (9 samples, 0.02%; +0.00%)</title><rect x="628.0" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="630.99" y="447.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (5 samples, 0.01%; -0.01%)</title><rect x="171.4" y="181" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="174.43" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (20 samples, 0.04%; -0.00%)</title><rect x="688.1" y="469" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="691.14" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; -0.01%)</title><rect x="568.0" y="421" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="570.97" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (370 samples, 0.79%; -0.06%)</title><rect x="1030.3" y="213" width="9.3" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="1033.31" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (9 samples, 0.02%; -0.00%)</title><rect x="425.1" y="277" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="428.14" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%; -0.00%)</title><rect x="1139.6" y="277" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.56" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.01%; 0.00%)</title><rect x="1170.9" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.92" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (66 samples, 0.14%; -0.01%)</title><rect x="779.5" y="373" width="1.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="782.45" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (4 samples, 0.01%; +0.01%)</title><rect x="306.3" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="309.34" y="287.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%; +0.02%)</title><rect x="610.3" y="389" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="613.29" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (69 samples, 0.15%; +0.01%)</title><rect x="922.6" y="373" width="1.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="925.60" y="383.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (68 samples, 0.14%; -0.01%)</title><rect x="545.4" y="261" width="1.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="548.45" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; +0.01%)</title><rect x="814.9" y="213" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="817.93" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; +0.01%)</title><rect x="71.1" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="74.13" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (5 samples, 0.01%; +0.01%)</title><rect x="839.0" y="325" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="842.03" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%; -0.01%)</title><rect x="422.9" y="277" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="425.88" y="287.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,392 samples, 11.47%; +0.08%)</title><rect x="297.1" y="389" width="135.3" height="15.0" fill="rgb(255,77,77)" rx="2" ry="2" />
<text  x="300.05" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%; -0.00%)</title><rect x="1056.2" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1059.16" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.01%; +0.00%)</title><rect x="21.0" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="24.02" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (112 samples, 0.24%; -0.00%)</title><rect x="989.2" y="325" width="2.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="992.16" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (8 samples, 0.02%; +0.01%)</title><rect x="498.5" y="197" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="501.47" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (10 samples, 0.02%; 0.00%)</title><rect x="707.8" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.78" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.01%)</title><rect x="811.1" y="261" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="814.14" y="271.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%; -0.00%)</title><rect x="429.1" y="341" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="432.08" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (9 samples, 0.02%; +0.01%)</title><rect x="518.2" y="197" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="521.21" y="207.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (72 samples, 0.15%; +0.01%)</title><rect x="562.6" y="357" width="1.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="565.59" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.00%)</title><rect x="1138.5" y="453" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1141.51" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (106 samples, 0.23%; +0.02%)</title><rect x="648.9" y="485" width="2.6" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="651.88" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="434.6" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="437.56" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; -0.01%)</title><rect x="414.4" y="181" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="417.40" y="191.5" ></text>
</g>
<g >
<title>seastar::app_template::run (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="597" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (46 samples, 0.10%; -0.01%)</title><rect x="74.9" y="389" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="77.87" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (14 samples, 0.03%; +0.01%)</title><rect x="505.4" y="309" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="508.35" y="319.5" ></text>
</g>
<g >
<title>operator delete (91 samples, 0.19%; +0.03%)</title><rect x="597.8" y="341" width="2.3" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="600.84" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (6 samples, 0.01%; +0.01%)</title><rect x="895.8" y="437" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="898.82" y="447.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (23 samples, 0.05%; +0.02%)</title><rect x="255.7" y="229" width="0.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="258.66" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%; +0.00%)</title><rect x="591.4" y="309" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="594.36" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (23 samples, 0.05%; 0.00%)</title><rect x="114.1" y="373" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="117.06" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (36 samples, 0.08%; 0.00%)</title><rect x="1063.8" y="293" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1066.82" y="303.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (5 samples, 0.01%; +0.01%)</title><rect x="502.1" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="505.06" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (560 samples, 1.19%; -0.02%)</title><rect x="242.4" y="245" width="14.0" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="245.37" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (5 samples, 0.01%; +0.01%)</title><rect x="834.2" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="837.18" y="319.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,511 samples, 39.38%; -0.03%)</title><rect x="104.4" y="437" width="464.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="107.42" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>row::apply_monotonically (5 samples, 0.01%; +0.00%)</title><rect x="886.0" y="293" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="889.05" y="303.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%; -0.01%)</title><rect x="471.9" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="474.86" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (821 samples, 1.75%; -0.03%)</title><rect x="571.6" y="357" width="20.6" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="574.63" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (24 samples, 0.05%; +0.00%)</title><rect x="624.3" y="437" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="627.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; +0.01%)</title><rect x="1121.6" y="389" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1124.56" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (75 samples, 0.16%; -0.01%)</title><rect x="558.2" y="357" width="1.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="561.25" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (39 samples, 0.08%; +0.02%)</title><rect x="98.1" y="421" width="1.0" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="101.12" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1104.2" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.16" y="367.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.02%; 0.00%)</title><rect x="885.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.95" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (51 samples, 0.11%; +0.00%)</title><rect x="1148.5" y="485" width="1.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1151.48" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; 0.00%)</title><rect x="776.2" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="779.16" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%; +0.01%)</title><rect x="1130.6" y="373" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1133.60" y="383.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (7 samples, 0.01%; +0.00%)</title><rect x="882.8" y="485" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="885.84" y="495.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%; +0.01%)</title><rect x="1066.6" y="341" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1069.56" y="351.5" ></text>
</g>
<g >
<title>query::result::builder::builder (153 samples, 0.33%; +0.01%)</title><rect x="617.0" y="421" width="3.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="620.05" y="431.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (39 samples, 0.08%; -0.01%)</title><rect x="698.7" y="453" width="1.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="701.74" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (23 samples, 0.05%; -0.02%)</title><rect x="847.6" y="293" width="0.6" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="850.59" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (12 samples, 0.03%; +0.01%)</title><rect x="1054.7" y="277" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1057.66" y="287.5" ></text>
</g>
<g >
<title>table::query (22,528 samples, 47.93%; +0.01%)</title><rect x="82.4" y="453" width="565.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="85.40" y="463.5" >table::query</text>
</g>
<g >
<title>partition_snapshot::versions (7 samples, 0.01%; -0.01%)</title><rect x="244.7" y="213" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="247.68" y="223.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (242 samples, 0.51%; 0.00%)</title><rect x="747.1" y="421" width="6.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="750.12" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (115 samples, 0.24%; +0.00%)</title><rect x="459.8" y="309" width="2.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="462.76" y="319.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (4 samples, 0.01%; -0.00%)</title><rect x="1088.8" y="261" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1091.78" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.00%)</title><rect x="268.1" y="261" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="271.06" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%; 0.00%)</title><rect x="1139.6" y="245" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.56" y="255.5" ></text>
</g>
<g >
<title>tracing::add_table_name (17 samples, 0.04%; -0.01%)</title><rect x="1136.5" y="421" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1139.48" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (4 samples, 0.01%; 0.00%)</title><rect x="760.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="763.22" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (222 samples, 0.47%; +0.00%)</title><rect x="153.6" y="229" width="5.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="156.55" y="239.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%; +0.01%)</title><rect x="1067.9" y="341" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1070.94" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%; -0.01%)</title><rect x="49.9" y="485" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="52.89" y="495.5" ></text>
</g>
<g >
<title>table::set_hit_rate (57 samples, 0.12%; 0.00%)</title><rect x="729.6" y="453" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.57" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (181 samples, 0.39%; -0.01%)</title><rect x="871.7" y="437" width="4.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="874.69" y="447.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%; +0.00%)</title><rect x="806.3" y="277" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="809.27" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (88 samples, 0.19%; -0.03%)</title><rect x="1097.1" y="325" width="2.2" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1100.14" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (109 samples, 0.23%; -0.00%)</title><rect x="846.8" y="325" width="2.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="849.84" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%; +0.01%)</title><rect x="345.6" y="181" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="348.61" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%; -0.02%)</title><rect x="842.9" y="341" width="0.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="845.89" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (14 samples, 0.03%; +0.01%)</title><rect x="269.8" y="293" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="272.81" y="303.5" ></text>
</g>
<g >
<title>seastar::gate::enter (6 samples, 0.01%; +0.00%)</title><rect x="1043.5" y="181" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1046.54" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (4 samples, 0.01%; -0.00%)</title><rect x="711.2" y="469" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="714.19" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (45 samples, 0.10%; +0.01%)</title><rect x="642.7" y="405" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="645.73" y="415.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (4 samples, 0.01%; +0.01%)</title><rect x="966.6" y="389" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="969.64" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%; +0.02%)</title><rect x="1131.1" y="421" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1134.10" y="431.5" ></text>
</g>
<g >
<title>database::find_keyspace (166 samples, 0.35%; 0.00%)</title><rect x="1062.0" y="341" width="4.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1064.96" y="351.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%; -0.03%)</title><rect x="593.7" y="341" width="0.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="596.75" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%; 0.00%)</title><rect x="554.0" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="556.98" y="399.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (25 samples, 0.05%; -0.02%)</title><rect x="623.7" y="405" width="0.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="626.70" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%; -0.00%)</title><rect x="688.0" y="469" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="690.97" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (11 samples, 0.02%; -0.01%)</title><rect x="325.8" y="165" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="328.85" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (378 samples, 0.80%; -0.04%)</title><rect x="261.1" y="309" width="9.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="264.05" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (5 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%; -0.03%)</title><rect x="978.6" y="341" width="1.6" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="981.64" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (9 samples, 0.02%; -0.00%)</title><rect x="244.4" y="213" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="247.38" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%; -0.00%)</title><rect x="718.1" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="721.12" y="479.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (10 samples, 0.02%; -0.00%)</title><rect x="458.4" y="277" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="461.41" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (34 samples, 0.07%; +0.00%)</title><rect x="1148.9" y="469" width="0.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1151.90" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (573 samples, 1.22%; -0.00%)</title><rect x="242.1" y="261" width="14.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="245.12" y="271.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (7 samples, 0.01%; -0.00%)</title><rect x="1141.0" y="501" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1144.04" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (44 samples, 0.09%; +0.01%)</title><rect x="822.3" y="133" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="825.31" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%; +0.02%)</title><rect x="1157.0" y="373" width="1.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1159.99" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (111 samples, 0.24%; -0.01%)</title><rect x="749.5" y="325" width="2.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="752.45" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (173 samples, 0.37%; -0.01%)</title><rect x="1168.9" y="469" width="4.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1171.91" y="479.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (5 samples, 0.01%; +0.01%)</title><rect x="538.9" y="325" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="541.92" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%; -0.01%)</title><rect x="215.8" y="85" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="218.76" y="95.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (80 samples, 0.17%; -0.00%)</title><rect x="839.2" y="325" width="2.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="842.15" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%; +0.01%)</title><rect x="459.2" y="261" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="462.23" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,064 samples, 4.39%; -0.04%)</title><rect x="901.0" y="421" width="51.9" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="904.04" y="431.5" >cql3:..</text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (7 samples, 0.01%; +0.00%)</title><rect x="1078.4" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1081.36" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (25 samples, 0.05%; +0.00%)</title><rect x="1120.8" y="389" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1123.83" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (138 samples, 0.29%; -0.01%)</title><rect x="212.7" y="117" width="3.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="215.68" y="127.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (14 samples, 0.03%; -0.01%)</title><rect x="770.8" y="261" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="773.84" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%; +0.01%)</title><rect x="283.7" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="286.70" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (15 samples, 0.03%; +0.00%)</title><rect x="836.0" y="293" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="839.02" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (15 samples, 0.03%; +0.01%)</title><rect x="551.9" y="341" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="554.92" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.01%; +0.01%)</title><rect x="706.5" y="485" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="709.55" y="495.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%; 0.00%)</title><rect x="951.0" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="954.02" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (82 samples, 0.17%; -0.00%)</title><rect x="982.2" y="325" width="2.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="985.18" y="335.5" ></text>
</g>
<g >
<title>local_schema_registry (8 samples, 0.02%; -0.03%)</title><rect x="971.0" y="373" width="0.2" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="974.03" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (22 samples, 0.05%; 0.00%)</title><rect x="142.8" y="261" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="145.83" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%; -0.01%)</title><rect x="661.4" y="485" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="664.43" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (69 samples, 0.15%; +0.01%)</title><rect x="1069.8" y="309" width="1.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1072.85" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="613" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="623.5" ></text>
</g>
<g >
<title>database::query (966 samples, 2.06%; +0.03%)</title><rect x="1020.2" y="261" width="24.2" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1023.16" y="271.5" >d..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (18 samples, 0.04%; -0.01%)</title><rect x="141.4" y="229" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="144.35" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="383.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%; +0.01%)</title><rect x="148.3" y="261" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="151.33" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (45 samples, 0.10%; +0.02%)</title><rect x="226.5" y="165" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="229.51" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (324 samples, 0.69%; +0.02%)</title><rect x="409.3" y="229" width="8.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="412.30" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.01%; 0.00%)</title><rect x="252.9" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="255.87" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%; +0.00%)</title><rect x="843.5" y="389" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="846.50" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%; -0.00%)</title><rect x="65.1" y="405" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="68.06" y="415.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (156 samples, 0.33%; +0.00%)</title><rect x="544.6" y="309" width="3.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="547.62" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (116 samples, 0.25%; -0.01%)</title><rect x="257.1" y="229" width="2.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="260.14" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (7 samples, 0.01%; -0.03%)</title><rect x="734.5" y="501" width="0.1" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="737.46" y="511.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (70 samples, 0.15%; -0.01%)</title><rect x="809.2" y="261" width="1.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="812.23" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%; +0.01%)</title><rect x="1053.8" y="229" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1056.78" y="239.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (4 samples, 0.01%; +0.00%)</title><rect x="664.5" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="667.52" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (21 samples, 0.04%; +0.01%)</title><rect x="395.7" y="165" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="398.69" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; 0.00%)</title><rect x="662.8" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="665.76" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (24 samples, 0.05%; +0.00%)</title><rect x="800.6" y="277" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="803.62" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (31 samples, 0.07%; +0.00%)</title><rect x="1167.4" y="469" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1170.36" y="479.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (33 samples, 0.07%; -0.01%)</title><rect x="940.7" y="341" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="943.65" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,325 samples, 2.82%; 0.00%)</title><rect x="570.0" y="405" width="33.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="572.97" y="415.5" >fl..</text>
</g>
<g >
<title>operator new (16 samples, 0.03%; 0.00%)</title><rect x="646.2" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="649.19" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; +0.00%)</title><rect x="991.6" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="994.62" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (392 samples, 0.83%; -0.00%)</title><rect x="686.2" y="501" width="9.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="689.16" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%; +0.00%)</title><rect x="658.0" y="469" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="660.99" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (27 samples, 0.06%; -0.01%)</title><rect x="575.8" y="309" width="0.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="578.77" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (6 samples, 0.01%; -0.01%)</title><rect x="555.2" y="405" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="558.16" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%; +0.01%)</title><rect x="1099.1" y="293" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1102.12" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (35 samples, 0.07%; +0.00%)</title><rect x="999.8" y="277" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1002.83" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (116 samples, 0.25%; -0.01%)</title><rect x="989.1" y="341" width="2.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="992.08" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.01%)</title><rect x="1125.5" y="405" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1128.48" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%; 0.00%)</title><rect x="53.3" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="56.28" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (707 samples, 1.50%; +0.00%)</title><rect x="509.3" y="293" width="17.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="512.27" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,365 samples, 2.90%; +0.01%)</title><rect x="569.8" y="421" width="34.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="572.85" y="431.5" >st..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (10 samples, 0.02%; -0.00%)</title><rect x="847.9" y="277" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="850.91" y="287.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (11 samples, 0.02%; -0.00%)</title><rect x="528.3" y="325" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="531.32" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (5 samples, 0.01%; +0.01%)</title><rect x="973.7" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="976.74" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%; 0.00%)</title><rect x="884.9" y="421" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.90" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (35 samples, 0.07%; +0.01%)</title><rect x="645.2" y="405" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="648.16" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (37 samples, 0.08%; -0.00%)</title><rect x="745.9" y="389" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="748.86" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (15 samples, 0.03%; -0.00%)</title><rect x="206.5" y="101" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="209.47" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (12 samples, 0.03%; +0.00%)</title><rect x="138.5" y="245" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="141.54" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (11 samples, 0.02%; -0.01%)</title><rect x="1167.9" y="453" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1170.86" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%; -0.01%)</title><rect x="461.3" y="293" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="464.32" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (26 samples, 0.06%; -0.01%)</title><rect x="782.7" y="325" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="785.72" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%; +0.03%)</title><rect x="559.7" y="341" width="0.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="562.66" y="351.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (5 samples, 0.01%; +0.00%)</title><rect x="966.7" y="389" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="969.74" y="399.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (4 samples, 0.01%; -0.00%)</title><rect x="1134.7" y="421" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1137.69" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="400.4" y="213" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="403.41" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%; +0.00%)</title><rect x="672.8" y="453" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="675.83" y="463.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%; +0.00%)</title><rect x="513.6" y="229" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="516.56" y="239.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (6 samples, 0.01%; -0.00%)</title><rect x="341.0" y="165" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="343.96" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (15 samples, 0.03%; -0.02%)</title><rect x="718.6" y="469" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="721.60" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; +0.00%)</title><rect x="1050.0" y="245" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1052.99" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (6 samples, 0.01%; -0.01%)</title><rect x="377.0" y="197" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="380.04" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%; -0.01%)</title><rect x="584.3" y="277" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="587.33" y="287.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,112 samples, 2.37%; -0.05%)</title><rect x="345.8" y="181" width="27.9" height="15.0" fill="rgb(122,122,255)" rx="2" ry="2" />
<text  x="348.78" y="191.5" >w..</text>
</g>
<g >
<title>mutation_reader_merger::operator (6,006 samples, 12.78%; +0.03%)</title><rect x="120.5" y="325" width="150.8" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="123.51" y="335.5" >mutation_reader_mer..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (6 samples, 0.01%; +0.00%)</title><rect x="985.7" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="988.72" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (6 samples, 0.01%; +0.01%)</title><rect x="627.8" y="421" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="630.84" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (116 samples, 0.25%; +0.01%)</title><rect x="1116.2" y="373" width="2.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1119.22" y="383.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (4 samples, 0.01%; -0.02%)</title><rect x="1115.4" y="389" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="1118.36" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.01%; +0.01%)</title><rect x="255.3" y="229" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="258.30" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (85 samples, 0.18%; -0.01%)</title><rect x="38.1" y="437" width="2.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="41.07" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="466.5" y="277" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="469.54" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (56 samples, 0.12%; +0.03%)</title><rect x="874.2" y="341" width="1.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="877.18" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (11 samples, 0.02%; +0.01%)</title><rect x="464.9" y="261" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="467.88" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; -0.01%)</title><rect x="234.9" y="213" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="237.94" y="223.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (58 samples, 0.12%; -0.01%)</title><rect x="541.3" y="309" width="1.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="544.25" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (38 samples, 0.08%; -0.01%)</title><rect x="1153.2" y="453" width="1.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1156.22" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (13 samples, 0.03%; +0.02%)</title><rect x="1123.5" y="421" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1126.52" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="580.7" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="583.74" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (34 samples, 0.07%; -0.02%)</title><rect x="203.9" y="117" width="0.8" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="206.86" y="127.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (7 samples, 0.01%; +0.01%)</title><rect x="945.1" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="948.10" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,733 samples, 3.69%; 0.00%)</title><rect x="331.2" y="213" width="43.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="334.20" y="223.5" >quer..</text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; -0.01%)</title><rect x="502.7" y="293" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="505.72" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%; -0.01%)</title><rect x="923.5" y="357" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="926.48" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (25 samples, 0.05%; 0.00%)</title><rect x="669.9" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="672.89" y="447.5" ></text>
</g>
<g >
<title>malloc (4 samples, 0.01%; +0.00%)</title><rect x="620.5" y="389" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="623.46" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (43 samples, 0.09%; +0.01%)</title><rect x="748.2" y="341" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="751.25" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (30 samples, 0.06%; +0.01%)</title><rect x="550.0" y="341" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="552.97" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (185 samples, 0.39%; +0.00%)</title><rect x="608.5" y="421" width="4.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="611.49" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (151 samples, 0.32%; +0.00%)</title><rect x="837.4" y="357" width="3.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="840.42" y="367.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%; -0.00%)</title><rect x="577.4" y="325" width="1.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="580.41" y="335.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,602 samples, 3.41%; +0.01%)</title><rect x="797.0" y="357" width="40.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="800.00" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%; +0.02%)</title><rect x="1036.9" y="117" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1039.93" y="127.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (22 samples, 0.05%; -0.02%)</title><rect x="340.1" y="165" width="0.5" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="343.08" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (20 samples, 0.04%; +0.01%)</title><rect x="497.5" y="181" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="500.47" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (9 samples, 0.02%; +0.01%)</title><rect x="1134.8" y="421" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1137.79" y="431.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%; +0.03%)</title><rect x="834.8" y="309" width="0.7" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="837.76" y="319.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; -0.00%)</title><rect x="1099.2" y="309" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1102.22" y="319.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (6 samples, 0.01%; +0.01%)</title><rect x="837.2" y="357" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="840.22" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (4 samples, 0.01%; -0.01%)</title><rect x="225.9" y="133" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="228.86" y="143.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (127 samples, 0.27%; +0.02%)</title><rect x="323.3" y="181" width="3.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="326.29" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; -0.02%)</title><rect x="305.9" y="245" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="308.89" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (84 samples, 0.18%; -0.00%)</title><rect x="1171.0" y="437" width="2.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1174.02" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (186 samples, 0.40%; -0.02%)</title><rect x="584.6" y="293" width="4.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="587.64" y="303.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; +0.00%)</title><rect x="707.3" y="261" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="710.33" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; -0.01%)</title><rect x="672.3" y="469" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="675.25" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (42 samples, 0.09%; +0.02%)</title><rect x="67.7" y="405" width="1.1" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="70.74" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (83 samples, 0.18%; +0.00%)</title><rect x="153.9" y="213" width="2.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="156.88" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="548.8" y="325" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="551.79" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%; -0.01%)</title><rect x="40.7" y="453" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="43.70" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="684.5" y="421" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="687.50" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (29 samples, 0.06%; +0.01%)</title><rect x="1036.5" y="149" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1039.53" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="173.3" y="133" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="176.34" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (130 samples, 0.28%; -0.01%)</title><rect x="1003.1" y="309" width="3.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1006.14" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (4 samples, 0.01%; +0.00%)</title><rect x="961.0" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="963.96" y="415.5" ></text>
</g>
<g >
<title>database::find_column_family (40 samples, 0.09%; -0.01%)</title><rect x="1024.2" y="245" width="1.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1027.15" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="601.6" y="373" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="604.61" y="383.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.01%)</title><rect x="637.5" y="389" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="640.53" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%; -0.01%)</title><rect x="767.8" y="277" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="770.80" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (30 samples, 0.06%; -0.00%)</title><rect x="810.1" y="229" width="0.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="813.11" y="239.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,183 samples, 15.28%; +0.03%)</title><rect x="114.7" y="373" width="180.3" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="117.71" y="383.5" >seastar::repeat&lt;merging..</text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="234.6" y="197" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="237.64" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="469.4" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="472.38" y="351.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; +0.01%)</title><rect x="44.9" y="485" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="47.95" y="495.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (13 samples, 0.03%; +0.01%)</title><rect x="836.7" y="341" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="839.67" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%; -0.01%)</title><rect x="1100.5" y="341" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1103.50" y="351.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (49 samples, 0.10%; +0.09%)</title><rect x="959.7" y="405" width="1.3" height="15.0" fill="rgb(255,63,63)" rx="2" ry="2" />
<text  x="962.73" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (10 samples, 0.02%; -0.00%)</title><rect x="627.7" y="437" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="630.74" y="447.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (6 samples, 0.01%; 0.00%)</title><rect x="22.8" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (26 samples, 0.06%; +0.06%)</title><rect x="566.7" y="405" width="0.7" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="569.71" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (17 samples, 0.04%; -0.03%)</title><rect x="714.9" y="453" width="0.4" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="717.86" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (83 samples, 0.18%; -0.02%)</title><rect x="321.2" y="181" width="2.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="324.18" y="191.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%; +0.00%)</title><rect x="1116.5" y="357" width="2.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1119.54" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (430 samples, 0.91%; +0.01%)</title><rect x="556.6" y="421" width="10.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="559.57" y="431.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (203 samples, 0.43%; -0.01%)</title><rect x="1032.9" y="181" width="5.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1035.94" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (852 samples, 1.81%; -0.08%)</title><rect x="124.8" y="309" width="21.4" height="15.0" fill="rgb(84,84,255)" rx="2" ry="2" />
<text  x="127.78" y="319.5" >m..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%; -0.01%)</title><rect x="175.0" y="133" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="177.97" y="143.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (33 samples, 0.07%; -0.01%)</title><rect x="859.1" y="437" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="862.06" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%; +0.00%)</title><rect x="753.4" y="437" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="756.39" y="447.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="1067.7" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1070.66" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%; +0.01%)</title><rect x="967.1" y="389" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="970.09" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (30 samples, 0.06%; +0.00%)</title><rect x="791.0" y="357" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="794.00" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.01%; +0.01%)</title><rect x="108.6" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="111.61" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (33 samples, 0.07%; +0.02%)</title><rect x="422.1" y="277" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="425.05" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (4 samples, 0.01%; -0.02%)</title><rect x="404.0" y="229" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="406.95" y="239.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%; +0.01%)</title><rect x="824.9" y="101" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="827.92" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; -0.01%)</title><rect x="401.3" y="229" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="404.32" y="239.5" ></text>
</g>
<g >
<title>operator delete (83 samples, 0.18%; -0.02%)</title><rect x="418.3" y="245" width="2.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="421.31" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (38 samples, 0.08%; -0.01%)</title><rect x="911.1" y="293" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="914.08" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.01%; +0.00%)</title><rect x="1007.9" y="293" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1010.94" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%; -0.02%)</title><rect x="900.8" y="421" width="0.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="903.79" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%; +0.02%)</title><rect x="526.1" y="277" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="529.06" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (8 samples, 0.02%; +0.01%)</title><rect x="615.3" y="421" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="618.31" y="431.5" ></text>
</g>
<g >
<title>__libc_start_main (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="629" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (835 samples, 1.78%; -0.00%)</title><rect x="1078.5" y="341" width="21.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1081.53" y="351.5" ></text>
</g>
<g >
<title>dht::shard_of (15 samples, 0.03%; +0.00%)</title><rect x="1013.5" y="277" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1016.48" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%; -0.00%)</title><rect x="646.2" y="373" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="649.22" y="383.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (64 samples, 0.14%; +0.01%)</title><rect x="880.5" y="469" width="1.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="883.45" y="479.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="565" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%; +0.00%)</title><rect x="41.7" y="437" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="44.68" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (8 samples, 0.02%; 0.00%)</title><rect x="328.3" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="331.34" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (15 samples, 0.03%; 0.00%)</title><rect x="729.1" y="453" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.09" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (156 samples, 0.33%; -0.01%)</title><rect x="256.5" y="261" width="3.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="259.51" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (172 samples, 0.37%; +0.01%)</title><rect x="274.5" y="341" width="4.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="277.46" y="351.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,047 samples, 21.38%; +0.04%)</title><rect x="886.5" y="485" width="252.2" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="889.45" y="495.5" >seastar::concrete_execution_stage..</text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (55 samples, 0.12%; +0.01%)</title><rect x="375.5" y="181" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="378.46" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (59 samples, 0.13%; -0.00%)</title><rect x="253.2" y="197" width="1.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="256.20" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; +0.00%)</title><rect x="240.2" y="245" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="243.17" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (4 samples, 0.01%; 0.00%)</title><rect x="22.2" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.23" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (609 samples, 1.30%; +0.03%)</title><rect x="904.8" y="389" width="15.3" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="907.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (120 samples, 0.26%; +0.01%)</title><rect x="99.1" y="421" width="3.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="102.12" y="431.5" ></text>
</g>
<g >
<title>malloc (25 samples, 0.05%; 0.00%)</title><rect x="619.5" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="622.48" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (4 samples, 0.01%; -0.01%)</title><rect x="152.0" y="245" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="154.97" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%; +0.00%)</title><rect x="1041.6" y="197" width="1.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1044.55" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%; -0.00%)</title><rect x="1149.9" y="485" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1152.91" y="495.5" ></text>
</g>
<g >
<title>dht::tri_compare (22 samples, 0.05%; -0.03%)</title><rect x="1082.1" y="245" width="0.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1085.10" y="255.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.01%; 0.00%)</title><rect x="1139.2" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.16" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%; -0.00%)</title><rect x="1158.8" y="405" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1161.84" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (24 samples, 0.05%; -0.00%)</title><rect x="152.1" y="245" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="155.12" y="255.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%; +0.01%)</title><rect x="251.5" y="197" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="254.46" y="207.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; 0.00%)</title><rect x="659.9" y="485" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="662.85" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (8 samples, 0.02%; +0.00%)</title><rect x="956.1" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="959.14" y="415.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="532.4" y="325" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="535.37" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (251 samples, 0.53%; -0.02%)</title><rect x="1178.9" y="613" width="6.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1181.90" y="623.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,335 samples, 7.10%; -0.06%)</title><rect x="317.6" y="229" width="83.7" height="15.0" fill="rgb(112,112,255)" rx="2" ry="2" />
<text  x="320.59" y="239.5" >compact_m..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="831.0" y="245" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="834.02" y="255.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (439 samples, 0.93%; +0.03%)</title><rect x="1177.8" y="629" width="11.0" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1180.82" y="639.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (36 samples, 0.08%; -0.00%)</title><rect x="818.8" y="149" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="821.84" y="159.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%; +0.00%)</title><rect x="1069.8" y="325" width="1.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1072.80" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (16 samples, 0.03%; +0.00%)</title><rect x="1175.8" y="485" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1178.79" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (8 samples, 0.02%; -0.00%)</title><rect x="576.3" y="293" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="579.25" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (22 samples, 0.05%; -0.02%)</title><rect x="631.0" y="437" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="633.95" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (64 samples, 0.14%; 0.00%)</title><rect x="878.8" y="453" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="881.82" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="789.1" y="357" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="792.09" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (22 samples, 0.05%; +0.01%)</title><rect x="626.5" y="437" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="629.46" y="447.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (546 samples, 1.16%; -0.01%)</title><rect x="757.8" y="405" width="13.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="760.84" y="415.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (5 samples, 0.01%; -0.00%)</title><rect x="536.4" y="341" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="539.38" y="351.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; -0.00%)</title><rect x="876.2" y="437" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="879.23" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (7 samples, 0.01%; +0.01%)</title><rect x="565.1" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="568.10" y="399.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (44 samples, 0.09%; +0.01%)</title><rect x="769.7" y="261" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="772.74" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="278.9" y="341" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="281.93" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%; +0.01%)</title><rect x="858.5" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="861.46" y="447.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%; +0.00%)</title><rect x="1044.3" y="229" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1047.29" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; -0.00%)</title><rect x="633.9" y="389" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="636.94" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.01%; 0.00%)</title><rect x="617.4" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="620.40" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (76 samples, 0.16%; +0.01%)</title><rect x="844.1" y="357" width="1.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="847.10" y="367.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (118 samples, 0.25%; 0.00%)</title><rect x="768.2" y="325" width="3.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.23" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%; +0.01%)</title><rect x="1169.5" y="453" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1172.51" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.04%; +0.03%)</title><rect x="70.3" y="389" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="73.33" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%; 0.00%)</title><rect x="216.7" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="219.74" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="680.0" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="683.01" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.02%)</title><rect x="566.3" y="389" width="0.3" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="569.26" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="735.2" y="501" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="738.19" y="511.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (88 samples, 0.19%; -0.01%)</title><rect x="139.6" y="245" width="2.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="142.59" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (164 samples, 0.35%; -0.04%)</title><rect x="1090.4" y="261" width="4.1" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="1093.41" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (47 samples, 0.10%; +0.01%)</title><rect x="1146.6" y="485" width="1.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1149.62" y="495.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%; 0.00%)</title><rect x="771.9" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="774.95" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (8 samples, 0.02%; +0.00%)</title><rect x="871.0" y="453" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="874.04" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (141 samples, 0.30%; -0.00%)</title><rect x="692.5" y="469" width="3.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="695.46" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,572 samples, 9.73%; +0.04%)</title><rect x="146.2" y="309" width="114.8" height="15.0" fill="rgb(255,140,140)" rx="2" ry="2" />
<text  x="149.17" y="319.5" >partition_snap..</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (32 samples, 0.07%; 0.00%)</title><rect x="816.2" y="181" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="819.18" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.00%)</title><rect x="241.7" y="245" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="244.70" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%; -0.02%)</title><rect x="366.4" y="149" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="369.45" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (14 samples, 0.03%; -0.01%)</title><rect x="728.7" y="437" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="731.69" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (6 samples, 0.01%; +0.01%)</title><rect x="1065.8" y="309" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1068.75" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%; +0.01%)</title><rect x="972.4" y="341" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="975.41" y="351.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%; +0.00%)</title><rect x="1152.7" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1155.69" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (55 samples, 0.12%; -0.00%)</title><rect x="19.3" y="341" width="1.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="22.31" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (271 samples, 0.58%; +0.07%)</title><rect x="209.6" y="133" width="6.8" height="15.0" fill="rgb(255,94,94)" rx="2" ry="2" />
<text  x="212.61" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="692.0" y="453" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="695.04" y="463.5" ></text>
</g>
<g >
<title>tombstone::apply (17 samples, 0.04%; +0.01%)</title><rect x="399.9" y="197" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="402.89" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (20 samples, 0.04%; +0.02%)</title><rect x="762.9" y="293" width="0.5" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="765.93" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (201 samples, 0.43%; 0.00%)</title><rect x="16.9" y="405" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.85" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="590.5" y="293" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="593.54" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.14%; -0.01%)</title><rect x="562.7" y="325" width="1.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="565.74" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (4 samples, 0.01%; +0.00%)</title><rect x="290.9" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="293.93" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%; +0.00%)</title><rect x="124.0" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="126.95" y="303.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (127 samples, 0.27%; +0.00%)</title><rect x="930.2" y="341" width="3.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="933.19" y="351.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (26 samples, 0.06%; 0.00%)</title><rect x="707.1" y="469" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.10" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::poll (5 samples, 0.01%; 0.00%)</title><rect x="1175.4" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.36" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%; -0.01%)</title><rect x="810.0" y="229" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="812.96" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%; +0.01%)</title><rect x="568.6" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="571.59" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (41 samples, 0.09%; -0.01%)</title><rect x="842.4" y="373" width="1.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="845.37" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%; +0.00%)</title><rect x="648.6" y="469" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="651.58" y="479.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (96 samples, 0.20%; +0.02%)</title><rect x="849.9" y="373" width="2.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="852.90" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="601.9" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="604.88" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="689.1" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="692.12" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (12 samples, 0.03%; -0.01%)</title><rect x="726.5" y="405" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="729.51" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (104 samples, 0.22%; +0.05%)</title><rect x="371.1" y="165" width="2.6" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="374.09" y="175.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="852.9" y="421" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="855.91" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%; -0.00%)</title><rect x="303.4" y="293" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="306.38" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (15 samples, 0.03%; +0.00%)</title><rect x="621.2" y="437" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="624.21" y="447.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%; +0.01%)</title><rect x="1097.0" y="245" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1099.98" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (180 samples, 0.38%; 0.00%)</title><rect x="691.5" y="485" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.48" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%; +0.00%)</title><rect x="284.9" y="277" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="287.90" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%; -0.00%)</title><rect x="710.5" y="469" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="713.54" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (24 samples, 0.05%; 0.00%)</title><rect x="22.0" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.95" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (10 samples, 0.02%; 0.00%)</title><rect x="1174.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.51" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (7 samples, 0.01%; +0.00%)</title><rect x="32.4" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="35.37" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; +0.00%)</title><rect x="660.6" y="469" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="663.58" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (22 samples, 0.05%; +0.03%)</title><rect x="878.0" y="469" width="0.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="881.02" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (4 samples, 0.01%; +0.00%)</title><rect x="687.0" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="690.02" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; 0.00%)</title><rect x="1145.8" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.79" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%; -0.02%)</title><rect x="278.8" y="341" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="281.78" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="1143.1" y="501" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1146.13" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (73 samples, 0.16%; -0.01%)</title><rect x="813.1" y="213" width="1.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="816.09" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (51 samples, 0.11%; -0.04%)</title><rect x="1164.0" y="469" width="1.3" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="1167.02" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; +0.01%)</title><rect x="1008.1" y="293" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1011.09" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (5 samples, 0.01%; 0.00%)</title><rect x="733.2" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="736.23" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (61 samples, 0.13%; -0.01%)</title><rect x="579.4" y="309" width="1.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="582.36" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="458.3" y="261" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="461.26" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (123 samples, 0.26%; 0.00%)</title><rect x="636.6" y="421" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="639.58" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (429 samples, 0.91%; +0.01%)</title><rect x="860.0" y="437" width="10.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="863.04" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (4 samples, 0.01%; +0.00%)</title><rect x="404.1" y="229" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="407.05" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (14 samples, 0.03%; +0.00%)</title><rect x="884.9" y="453" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="887.87" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (8 samples, 0.02%; 0.00%)</title><rect x="19.7" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.72" y="303.5" ></text>
</g>
<g >
<title>operator new (89 samples, 0.19%; 0.00%)</title><rect x="159.5" y="213" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="162.45" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (77 samples, 0.16%; +0.02%)</title><rect x="1116.6" y="341" width="2.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1119.62" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (16 samples, 0.03%; +0.01%)</title><rect x="161.8" y="197" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="164.79" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%; -0.00%)</title><rect x="934.1" y="389" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="937.13" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%; +0.01%)</title><rect x="1130.9" y="389" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1133.88" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (21 samples, 0.04%; 0.00%)</title><rect x="768.3" y="309" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.33" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; -0.00%)</title><rect x="228.0" y="197" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="230.99" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; -0.00%)</title><rect x="437.6" y="373" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="440.57" y="383.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%; +0.01%)</title><rect x="1173.0" y="421" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1175.95" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (5 samples, 0.01%; +0.01%)</title><rect x="819.7" y="149" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="822.75" y="159.5" ></text>
</g>
<g >
<title>query::querier_base::close (10 samples, 0.02%; 0.00%)</title><rect x="1174.5" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.51" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (50 samples, 0.11%; 0.00%)</title><rect x="961.6" y="389" width="1.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="964.64" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (9 samples, 0.02%; +0.00%)</title><rect x="767.8" y="293" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="770.75" y="303.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; +0.03%)</title><rect x="685.1" y="421" width="0.8" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="688.08" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (35 samples, 0.07%; +0.04%)</title><rect x="1098.1" y="309" width="0.8" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="1101.06" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,910 samples, 4.06%; +0.05%)</title><rect x="793.3" y="389" width="48.0" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="796.34" y="399.5" >std:..</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (48 samples, 0.10%; 0.00%)</title><rect x="19.5" y="325" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.49" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.02%; -0.02%)</title><rect x="1106.9" y="373" width="0.2" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="1109.85" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (29 samples, 0.06%; +0.04%)</title><rect x="576.7" y="325" width="0.7" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="579.68" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (32 samples, 0.07%; +0.01%)</title><rect x="954.4" y="389" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="957.41" y="399.5" ></text>
</g>
<g >
<title>query_state::query_state (9 samples, 0.02%; +0.01%)</title><rect x="61.9" y="453" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="64.87" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (22 samples, 0.05%; -0.01%)</title><rect x="595.4" y="357" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="598.43" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (37 samples, 0.08%; 0.00%)</title><rect x="524.7" y="277" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="527.68" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,582 samples, 9.75%; -0.01%)</title><rect x="437.4" y="389" width="115.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="440.42" y="399.5" >std::function&lt;..</text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (6 samples, 0.01%; +0.00%)</title><rect x="774.9" y="389" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="777.88" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (44 samples, 0.09%; -0.01%)</title><rect x="713.8" y="453" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="716.75" y="463.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%; -0.01%)</title><rect x="1049.2" y="277" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1052.21" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (35 samples, 0.07%; +0.02%)</title><rect x="545.8" y="245" width="0.9" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="548.80" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; +0.01%)</title><rect x="568.9" y="421" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="571.89" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%; 0.00%)</title><rect x="734.8" y="501" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="737.82" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="219.5" y="165" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="222.50" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (4 samples, 0.01%; +0.00%)</title><rect x="242.5" y="229" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="245.45" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (12 samples, 0.03%; +0.00%)</title><rect x="46.0" y="485" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="49.00" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (54 samples, 0.11%; +0.01%)</title><rect x="844.6" y="309" width="1.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="847.60" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="941.7" y="373" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="944.68" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (13 samples, 0.03%; -0.01%)</title><rect x="33.5" y="485" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="36.52" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.01%)</title><rect x="235.8" y="181" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="238.80" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::run (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="549" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>compact_mutation_state&lt; (391 samples, 0.83%; -0.01%)</title><rect x="320.3" y="213" width="9.8" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="323.25" y="223.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; +0.01%)</title><rect x="607.5" y="405" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="610.46" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (13 samples, 0.03%; +0.01%)</title><rect x="521.8" y="245" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="524.77" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (33 samples, 0.07%; 0.00%)</title><rect x="1104.9" y="373" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1107.87" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (6 samples, 0.01%; 0.00%)</title><rect x="1039.0" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.02" y="191.5" ></text>
</g>
<g >
<title>__strlen_avx2 (73 samples, 0.16%; -0.01%)</title><rect x="1022.3" y="245" width="1.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1025.32" y="255.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (207 samples, 0.44%; 0.00%)</title><rect x="16.7" y="437" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.70" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (43 samples, 0.09%; -0.01%)</title><rect x="815.9" y="197" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="818.93" y="207.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="1008.3" y="293" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1011.29" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (172 samples, 0.37%; -0.03%)</title><rect x="494.4" y="213" width="4.3" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="497.36" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (62 samples, 0.13%; +0.04%)</title><rect x="133.6" y="245" width="1.5" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="136.57" y="255.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (472 samples, 1.00%; +0.05%)</title><rect x="475.4" y="309" width="11.9" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="478.40" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (243 samples, 0.52%; +0.00%)</title><rect x="97.3" y="437" width="6.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="100.27" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (4 samples, 0.01%; +0.00%)</title><rect x="783.8" y="341" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="786.85" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (246 samples, 0.52%; -0.01%)</title><rect x="653.1" y="501" width="6.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="656.15" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%; -0.01%)</title><rect x="1121.8" y="389" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1124.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.05%)</title><rect x="866.7" y="389" width="0.6" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="869.72" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.01%)</title><rect x="720.9" y="469" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="723.93" y="479.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (27 samples, 0.06%; +0.03%)</title><rect x="140.7" y="229" width="0.7" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="143.67" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%; +0.00%)</title><rect x="338.7" y="181" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="341.65" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (57 samples, 0.12%; +0.00%)</title><rect x="961.5" y="405" width="1.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="964.47" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (102 samples, 0.22%; +0.01%)</title><rect x="838.7" y="341" width="2.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="841.65" y="351.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (4 samples, 0.01%; +0.01%)</title><rect x="1096.2" y="277" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1099.23" y="287.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,665 samples, 5.67%; -0.02%)</title><rect x="469.5" y="341" width="66.9" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="472.48" y="351.5" >memtabl..</text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (63 samples, 0.13%; 0.00%)</title><rect x="17.0" y="341" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.00" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.01%; +0.01%)</title><rect x="152.7" y="245" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="155.72" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%; +0.00%)</title><rect x="678.9" y="453" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="681.91" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (26 samples, 0.06%; +0.00%)</title><rect x="1107.3" y="405" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1110.25" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%; -0.02%)</title><rect x="661.6" y="485" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="664.63" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (176 samples, 0.37%; 0.00%)</title><rect x="766.8" y="341" width="4.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="769.85" y="351.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.19%; 0.00%)</title><rect x="962.9" y="405" width="2.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="965.90" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (11 samples, 0.02%; +0.00%)</title><rect x="713.4" y="453" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="716.35" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (18 samples, 0.04%; 0.00%)</title><rect x="884.9" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.87" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (72 samples, 0.15%; -0.00%)</title><rect x="674.7" y="469" width="1.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="677.66" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (4 samples, 0.01%; -0.00%)</title><rect x="1038.5" y="197" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1041.46" y="207.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (17 samples, 0.04%; +0.00%)</title><rect x="596.0" y="357" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="598.98" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; -0.01%)</title><rect x="924.1" y="341" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="927.13" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (9 samples, 0.02%; +0.01%)</title><rect x="1018.4" y="277" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1021.38" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (50 samples, 0.11%; +0.00%)</title><rect x="192.8" y="69" width="1.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="195.77" y="79.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (5 samples, 0.01%; +0.00%)</title><rect x="831.3" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="834.35" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (16 samples, 0.03%; +0.02%)</title><rect x="996.5" y="293" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="999.49" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (10 samples, 0.02%; -0.01%)</title><rect x="1094.3" y="245" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1097.27" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (275 samples, 0.59%; -0.04%)</title><rect x="514.8" y="245" width="6.9" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="517.79" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (14 samples, 0.03%; +0.01%)</title><rect x="609.6" y="405" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="612.59" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (145 samples, 0.31%; -0.02%)</title><rect x="69.7" y="405" width="3.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="72.65" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (4 samples, 0.01%; -0.02%)</title><rect x="515.5" y="229" width="0.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="518.47" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4 samples, 0.01%; 0.00%)</title><rect x="637.0" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="640.01" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%; -0.00%)</title><rect x="1077.8" y="309" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1080.75" y="319.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (7 samples, 0.01%; +0.00%)</title><rect x="93.7" y="437" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="96.65" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (4 samples, 0.01%; 0.00%)</title><rect x="61.0" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="63.96" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="590.3" y="293" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="593.28" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (77 samples, 0.16%; +0.01%)</title><rect x="1120.1" y="405" width="2.0" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1123.13" y="415.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%; -0.00%)</title><rect x="874.2" y="357" width="1.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="877.15" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (13 samples, 0.03%; -0.01%)</title><rect x="1043.4" y="197" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1046.36" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (48 samples, 0.10%; +0.03%)</title><rect x="265.7" y="277" width="1.3" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="268.75" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (43 samples, 0.09%; +0.00%)</title><rect x="157.0" y="197" width="1.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="160.02" y="207.5" ></text>
</g>
<g >
<title>operator new (129 samples, 0.27%; +0.01%)</title><rect x="1015.0" y="277" width="3.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1018.04" y="287.5" ></text>
</g>
<g >
<title>freeze (12 samples, 0.03%; 0.00%)</title><rect x="1139.6" y="197" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.59" y="207.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (30 samples, 0.06%; +0.01%)</title><rect x="1047.3" y="261" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1050.30" y="271.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (218 samples, 0.46%; 0.00%)</title><rect x="10.3" y="613" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.33" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (4 samples, 0.01%; +0.01%)</title><rect x="74.8" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="77.77" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (66 samples, 0.14%; -0.00%)</title><rect x="642.5" y="421" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="645.48" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%; -0.00%)</title><rect x="826.2" y="197" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="829.17" y="207.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (406 samples, 0.86%; +0.00%)</title><rect x="488.9" y="277" width="10.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="491.88" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (327 samples, 0.70%; +0.00%)</title><rect x="992.8" y="341" width="8.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="995.85" y="351.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; 0.00%)</title><rect x="530.4" y="277" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="533.38" y="287.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (5 samples, 0.01%; -0.00%)</title><rect x="1139.4" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.39" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (93 samples, 0.20%; -0.02%)</title><rect x="739.2" y="453" width="2.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="742.16" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (5 samples, 0.01%; 0.00%)</title><rect x="22.2" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.20" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="38.6" y="405" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="41.62" y="415.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,434 samples, 3.05%; +0.01%)</title><rect x="172.5" y="165" width="36.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="175.48" y="175.5" >clu..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%; 0.00%)</title><rect x="914.3" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="917.32" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="800.5" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="803.49" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; -0.01%)</title><rect x="634.0" y="437" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="637.04" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (203 samples, 0.43%; -0.03%)</title><rect x="995.9" y="309" width="5.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="998.94" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (21 samples, 0.04%; +0.01%)</title><rect x="12.0" y="581" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="15.03" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (4 samples, 0.01%; 0.00%)</title><rect x="885.6" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.65" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%; -0.00%)</title><rect x="1140.8" y="501" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1143.79" y="511.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%; 0.00%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1191.85" y="639.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (25 samples, 0.05%; +0.04%)</title><rect x="401.4" y="229" width="0.7" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="404.44" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (4 samples, 0.01%; 0.00%)</title><rect x="18.9" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.91" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (19 samples, 0.04%; -0.01%)</title><rect x="376.2" y="149" width="0.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="379.19" y="159.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (16 samples, 0.03%; +0.01%)</title><rect x="252.5" y="213" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="255.47" y="223.5" ></text>
</g>
<g >
<title>create_partitions (275 samples, 0.59%; 0.00%)</title><rect x="16.3" y="533" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.28" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,568 samples, 9.72%; -0.02%)</title><rect x="437.7" y="373" width="114.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="440.67" y="383.5" >std::_Function..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.04%; 0.00%)</title><rect x="1108.7" y="389" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1111.68" y="399.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.02%)</title><rect x="907.0" y="325" width="0.2" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="910.04" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (436 samples, 0.93%; -0.01%)</title><rect x="720.7" y="485" width="10.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="723.66" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.03%; +0.01%)</title><rect x="758.3" y="389" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="761.29" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.01%; -0.03%)</title><rect x="876.8" y="405" width="0.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="879.79" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%; +0.01%)</title><rect x="331.9" y="197" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="334.90" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="286.9" y="293" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="289.89" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (18 samples, 0.04%; -0.00%)</title><rect x="885.9" y="341" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="888.95" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (4 samples, 0.01%; +0.01%)</title><rect x="468.1" y="325" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="471.12" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (11 samples, 0.02%; +0.02%)</title><rect x="992.3" y="341" width="0.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="995.30" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (4 samples, 0.01%; +0.00%)</title><rect x="987.2" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="990.25" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (6 samples, 0.01%; +0.01%)</title><rect x="919.4" y="373" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="922.39" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%; +0.00%)</title><rect x="667.9" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="670.91" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (13 samples, 0.03%; +0.01%)</title><rect x="875.6" y="357" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="878.58" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (50 samples, 0.11%; -0.01%)</title><rect x="638.2" y="389" width="1.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="641.16" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (50 samples, 0.11%; -0.00%)</title><rect x="125.6" y="293" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="128.61" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (7 samples, 0.01%; 0.00%)</title><rect x="20.3" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.27" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%; -0.00%)</title><rect x="703.0" y="453" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="705.98" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::stats (28 samples, 0.06%; +0.01%)</title><rect x="543.8" y="293" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="546.81" y="303.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (9 samples, 0.02%; 0.00%)</title><rect x="1055.0" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1057.96" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.10%; -0.01%)</title><rect x="739.9" y="405" width="1.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="742.94" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (45 samples, 0.10%; -0.01%)</title><rect x="315.8" y="229" width="1.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="318.76" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (4 samples, 0.01%; -0.00%)</title><rect x="544.8" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="547.79" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (78 samples, 0.17%; -0.01%)</title><rect x="971.3" y="357" width="2.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="974.31" y="367.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1162.2" y="469" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1165.21" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="691.1" y="453" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="694.08" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.01%; 0.00%)</title><rect x="76.2" y="421" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="79.23" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%; -0.02%)</title><rect x="703.2" y="453" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="706.18" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (34 samples, 0.07%; +0.05%)</title><rect x="81.5" y="453" width="0.9" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="84.50" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%; -0.01%)</title><rect x="964.2" y="373" width="0.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="967.23" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (4 samples, 0.01%; +0.01%)</title><rect x="508.2" y="293" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="511.19" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (15 samples, 0.03%; -0.00%)</title><rect x="41.6" y="453" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="44.58" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%; +0.00%)</title><rect x="659.0" y="453" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="662.05" y="463.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (52 samples, 0.11%; -0.00%)</title><rect x="234.7" y="229" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="237.74" y="239.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (169 samples, 0.36%; +0.01%)</title><rect x="517.2" y="229" width="4.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="520.23" y="239.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (19 samples, 0.04%; +0.00%)</title><rect x="520.5" y="197" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="523.54" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="108.8" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="111.79" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%; -0.01%)</title><rect x="1134.0" y="405" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1137.02" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (10 samples, 0.02%; +0.01%)</title><rect x="1036.3" y="133" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1039.28" y="143.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (18 samples, 0.04%; -0.00%)</title><rect x="420.9" y="229" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="423.90" y="239.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (8 samples, 0.02%; -0.01%)</title><rect x="304.0" y="293" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="306.98" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%; +0.00%)</title><rect x="933.8" y="389" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="936.83" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%; -0.01%)</title><rect x="1036.7" y="133" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1039.71" y="143.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (119 samples, 0.25%; -0.00%)</title><rect x="668.1" y="469" width="3.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="671.14" y="479.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%; 0.00%)</title><rect x="10.3" y="581" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.33" y="591.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%; +0.00%)</title><rect x="534.6" y="325" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="537.63" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.02%; +0.00%)</title><rect x="687.4" y="469" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="690.42" y="479.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%; 0.00%)</title><rect x="1049.4" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1052.39" y="271.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; -0.00%)</title><rect x="629.8" y="421" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="632.77" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (9 samples, 0.02%; +0.00%)</title><rect x="251.2" y="165" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="254.24" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.01%)</title><rect x="870.8" y="437" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="873.81" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (118 samples, 0.25%; -0.01%)</title><rect x="749.4" y="341" width="2.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="752.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; -0.01%)</title><rect x="1005.2" y="229" width="0.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1008.17" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (10 samples, 0.02%; -0.00%)</title><rect x="148.6" y="261" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="151.61" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%; +0.00%)</title><rect x="986.1" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="989.09" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%; +0.01%)</title><rect x="331.6" y="197" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="334.62" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (23 samples, 0.05%; -0.01%)</title><rect x="376.1" y="165" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="379.09" y="175.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (27 samples, 0.06%; +0.04%)</title><rect x="603.2" y="405" width="0.7" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="606.24" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%; +0.00%)</title><rect x="815.2" y="213" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="818.18" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (4 samples, 0.01%; +0.01%)</title><rect x="640.0" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="642.99" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; +0.01%)</title><rect x="811.4" y="261" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="814.44" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (6 samples, 0.01%; +0.01%)</title><rect x="851.8" y="309" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="854.81" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (4 samples, 0.01%; -0.00%)</title><rect x="1125.7" y="405" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1128.71" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%; -0.01%)</title><rect x="340.0" y="165" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="342.96" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (12 samples, 0.03%; +0.03%)</title><rect x="327.3" y="181" width="0.3" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="330.33" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt; (5 samples, 0.01%; +0.01%)</title><rect x="617.6" y="389" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="620.65" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="140.5" y="213" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="143.52" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%; +0.00%)</title><rect x="870.5" y="389" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="873.48" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (21 samples, 0.04%; +0.01%)</title><rect x="462.1" y="277" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="465.07" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; 0.00%)</title><rect x="33.0" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="36.05" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (45,756 samples, 97.35%; -0.01%)</title><rect x="26.3" y="517" width="1148.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="29.32" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (13 samples, 0.03%; 0.00%)</title><rect x="673.0" y="469" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="676.03" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%; +0.01%)</title><rect x="65.9" y="437" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="68.91" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (35 samples, 0.07%; +0.05%)</title><rect x="499.3" y="325" width="0.9" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="502.28" y="335.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.01%; +0.00%)</title><rect x="1168.7" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1171.74" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; 0.00%)</title><rect x="532.1" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="535.14" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%; +0.01%)</title><rect x="868.1" y="389" width="2.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="871.07" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (14 samples, 0.03%; +0.02%)</title><rect x="641.4" y="437" width="0.4" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="644.42" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (6 samples, 0.01%; -0.01%)</title><rect x="601.7" y="373" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="604.71" y="383.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4 samples, 0.01%; 0.00%)</title><rect x="261.0" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="263.95" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; 0.00%)</title><rect x="940.5" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="943.48" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="373" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%; -0.00%)</title><rect x="1064.6" y="261" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1067.60" y="271.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,798 samples, 10.21%; +0.05%)</title><rect x="434.9" y="421" width="120.4" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="437.88" y="431.5" >query::querier_..</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (22 samples, 0.05%; +0.03%)</title><rect x="219.7" y="181" width="0.5" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="222.68" y="191.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (4 samples, 0.01%; +0.01%)</title><rect x="320.8" y="197" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="323.80" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%; +0.03%)</title><rect x="302.4" y="277" width="1.0" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="305.35" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="258.6" y="181" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="261.64" y="191.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (17 samples, 0.04%; +0.01%)</title><rect x="1066.1" y="341" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1069.13" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%; -0.00%)</title><rect x="706.2" y="485" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="709.20" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (124 samples, 0.26%; 0.00%)</title><rect x="656.2" y="485" width="3.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="659.19" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (14 samples, 0.03%; -0.02%)</title><rect x="1130.1" y="373" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1133.10" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (538 samples, 1.14%; +0.01%)</title><rect x="511.2" y="277" width="13.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="514.18" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (46 samples, 0.10%; +0.02%)</title><rect x="166.3" y="229" width="1.1" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="169.26" y="239.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (85 samples, 0.18%; +0.00%)</title><rect x="1113.2" y="389" width="2.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1116.23" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (6 samples, 0.01%; -0.01%)</title><rect x="835.9" y="293" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="838.86" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (24 samples, 0.05%; +0.01%)</title><rect x="151.1" y="245" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="154.09" y="255.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (7 samples, 0.01%; +0.00%)</title><rect x="537.8" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="540.76" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (26 samples, 0.06%; 0.00%)</title><rect x="707.1" y="501" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.10" y="511.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (4 samples, 0.01%; 0.00%)</title><rect x="615.6" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="618.64" y="447.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (11 samples, 0.02%; +0.02%)</title><rect x="620.6" y="389" width="0.2" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="623.56" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1,985 samples, 4.22%; +0.03%)</title><rect x="1006.6" y="309" width="49.8" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1009.61" y="319.5" >servi..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (57 samples, 0.12%; -0.00%)</title><rect x="1156.8" y="405" width="1.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1159.79" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; 0.00%)</title><rect x="592.2" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="595.24" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (122 samples, 0.26%; +0.05%)</title><rect x="62.4" y="453" width="3.1" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="65.39" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (31 samples, 0.07%; +0.05%)</title><rect x="533.8" y="325" width="0.8" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="536.85" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.01%; +0.01%)</title><rect x="63.2" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="66.17" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (4 samples, 0.01%; +0.00%)</title><rect x="293.6" y="357" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="296.59" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.00%)</title><rect x="22.8" y="309" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="25.80" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (48 samples, 0.10%; 0.00%)</title><rect x="341.1" y="181" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="344.11" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; -0.00%)</title><rect x="1031.9" y="181" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1034.89" y="191.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (35 samples, 0.07%; +0.03%)</title><rect x="240.8" y="245" width="0.9" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="243.82" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (63 samples, 0.13%; 0.00%)</title><rect x="17.0" y="357" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.00" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="707.1" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="260.2" y="229" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="263.25" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (13 samples, 0.03%; +0.02%)</title><rect x="280.5" y="341" width="0.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="283.48" y="351.5" ></text>
</g>
<g >
<title>table::query (22 samples, 0.05%; +0.00%)</title><rect x="1174.4" y="501" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1177.36" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (5 samples, 0.01%; +0.01%)</title><rect x="835.6" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="838.61" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="1046.9" y="261" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1049.95" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (24 samples, 0.05%; 0.00%)</title><rect x="707.1" y="421" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (9 samples, 0.02%; +0.01%)</title><rect x="73.3" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="76.32" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (21 samples, 0.04%; +0.01%)</title><rect x="526.4" y="277" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="529.39" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; 0.00%)</title><rect x="833.7" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="836.66" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (34 samples, 0.07%; +0.02%)</title><rect x="123.2" y="309" width="0.9" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="126.20" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%; -0.00%)</title><rect x="162.5" y="229" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="165.54" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (27 samples, 0.06%; 0.00%)</title><rect x="600.7" y="357" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.73" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; +0.01%)</title><rect x="799.6" y="293" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="802.64" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (12 samples, 0.03%; -0.02%)</title><rect x="1095.3" y="293" width="0.3" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="1098.25" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (5 samples, 0.01%; +0.01%)</title><rect x="260.7" y="277" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="263.73" y="287.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.02%)</title><rect x="908.7" y="293" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="911.72" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="517" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (17 samples, 0.04%; -0.01%)</title><rect x="64.5" y="421" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="67.48" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (5 samples, 0.01%; -0.01%)</title><rect x="900.5" y="421" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="903.54" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%; +0.01%)</title><rect x="101.1" y="389" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="104.11" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (24 samples, 0.05%; 0.00%)</title><rect x="22.0" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.95" y="447.5" ></text>
</g>
<g >
<title>operator delete (97 samples, 0.21%; -0.01%)</title><rect x="93.8" y="437" width="2.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="96.83" y="447.5" ></text>
</g>
<g >
<title>schema::column_at (27 samples, 0.06%; -0.07%)</title><rect x="207.8" y="133" width="0.7" height="15.0" fill="rgb(98,98,255)" rx="2" ry="2" />
<text  x="210.80" y="143.5" ></text>
</g>
<g >
<title>row_cache::make_reader (448 samples, 0.95%; +0.02%)</title><rect x="537.9" y="341" width="11.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="540.94" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7 samples, 0.01%; 0.00%)</title><rect x="705.3" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="708.32" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (27 samples, 0.06%; -0.02%)</title><rect x="672.4" y="469" width="0.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="675.35" y="479.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%; -0.00%)</title><rect x="1051.6" y="245" width="1.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1054.59" y="255.5" ></text>
</g>
<g >
<title>schema::column_at (72 samples, 0.15%; +0.02%)</title><rect x="397.3" y="165" width="1.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="400.27" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (6 samples, 0.01%; -0.01%)</title><rect x="24.9" y="517" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="27.91" y="527.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (14 samples, 0.03%; +0.00%)</title><rect x="626.7" y="421" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="629.66" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="1134.3" y="421" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1137.34" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="35.3" y="485" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="38.31" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.00%)</title><rect x="716.8" y="485" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="719.79" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (11 samples, 0.02%; -0.01%)</title><rect x="579.9" y="277" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="582.89" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (6 samples, 0.01%; +0.01%)</title><rect x="995.8" y="309" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="998.79" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (65 samples, 0.14%; +0.01%)</title><rect x="375.2" y="197" width="1.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="378.21" y="207.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (10 samples, 0.02%; -0.00%)</title><rect x="126.3" y="261" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="129.34" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%; +0.01%)</title><rect x="469.0" y="325" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="471.98" y="335.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (15 samples, 0.03%; +0.01%)</title><rect x="1080.3" y="309" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1083.34" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (27 samples, 0.06%; -0.00%)</title><rect x="400.6" y="213" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="403.59" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (15 samples, 0.03%; +0.01%)</title><rect x="463.5" y="277" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="466.53" y="287.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.00%)</title><rect x="430.7" y="373" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="433.69" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%; -0.01%)</title><rect x="590.8" y="293" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="593.84" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,339 samples, 4.98%; -0.06%)</title><rect x="169.2" y="197" width="58.7" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="172.22" y="207.5" >partit..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%; +0.01%)</title><rect x="733.4" y="501" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="736.36" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (67 samples, 0.14%; -0.01%)</title><rect x="253.0" y="213" width="1.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="255.99" y="223.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (36 samples, 0.08%; -0.00%)</title><rect x="486.2" y="277" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="489.22" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (11 samples, 0.02%; -0.00%)</title><rect x="1100.8" y="357" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1103.83" y="367.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.00%)</title><rect x="841.7" y="373" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="844.66" y="383.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (10 samples, 0.02%; +0.01%)</title><rect x="728.4" y="421" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="731.36" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="937.3" y="341" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="940.26" y="351.5" ></text>
</g>
<g >
<title>database::find_schema (237 samples, 0.50%; -0.01%)</title><rect x="843.9" y="373" width="5.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="846.90" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (13 samples, 0.03%; -0.01%)</title><rect x="621.6" y="437" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="624.59" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (4 samples, 0.01%; 0.00%)</title><rect x="227.7" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="230.71" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (65 samples, 0.14%; +0.01%)</title><rect x="745.5" y="421" width="1.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="748.46" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (11 samples, 0.02%; +0.01%)</title><rect x="316.6" y="213" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="319.56" y="223.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%; +0.00%)</title><rect x="1056.3" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1059.29" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%; +0.01%)</title><rect x="240.5" y="245" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="243.54" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; 0.00%)</title><rect x="426.8" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="429.80" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%; -0.01%)</title><rect x="552.5" y="389" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="555.53" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (11 samples, 0.02%; +0.01%)</title><rect x="223.8" y="117" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="226.77" y="127.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.03%)</title><rect x="912.4" y="293" width="0.1" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="915.39" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (41 samples, 0.09%; +0.01%)</title><rect x="829.7" y="245" width="1.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="832.74" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%; +0.01%)</title><rect x="1076.5" y="293" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1079.55" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (4 samples, 0.01%; -0.01%)</title><rect x="542.9" y="309" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="545.86" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="1148.2" y="485" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1151.22" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;utils::UUID&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="1153.4" y="437" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1156.42" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (17 samples, 0.04%; +0.01%)</title><rect x="1150.3" y="485" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1153.28" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (7 samples, 0.01%; +0.01%)</title><rect x="376.7" y="165" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="379.66" y="175.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (7 samples, 0.01%; +0.01%)</title><rect x="1137.9" y="437" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1140.91" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (4 samples, 0.01%; -0.00%)</title><rect x="927.0" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="930.05" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (61 samples, 0.13%; -0.00%)</title><rect x="304.8" y="277" width="1.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="307.81" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (4 samples, 0.01%; -0.01%)</title><rect x="420.4" y="245" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="423.40" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%; +0.00%)</title><rect x="765.1" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="768.14" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%; -0.00%)</title><rect x="781.5" y="357" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="784.49" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (184 samples, 0.39%; -0.00%)</title><rect x="724.4" y="453" width="4.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="727.42" y="463.5" ></text>
</g>
<g >
<title>database::find_column_family (61 samples, 0.13%; +0.00%)</title><rect x="844.4" y="341" width="1.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="847.43" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%; -0.01%)</title><rect x="814.6" y="133" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="817.55" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (12 samples, 0.03%; +0.02%)</title><rect x="549.2" y="341" width="0.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="552.19" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (432 samples, 0.92%; +0.02%)</title><rect x="513.8" y="261" width="10.9" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="516.81" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%; 0.00%)</title><rect x="1139.6" y="309" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.56" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (45 samples, 0.10%; 0.00%)</title><rect x="1053.5" y="245" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1056.53" y="255.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (16 samples, 0.03%; +0.00%)</title><rect x="1138.7" y="277" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1141.71" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (6 samples, 0.01%; +0.01%)</title><rect x="1056.4" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1059.44" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (77 samples, 0.16%; 0.00%)</title><rect x="18.8" y="357" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.84" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (14 samples, 0.03%; +0.01%)</title><rect x="999.5" y="245" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1002.48" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::~statement_restrictions (6 samples, 0.01%; 0.00%)</title><rect x="664.7" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.70" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (58 samples, 0.12%; +0.03%)</title><rect x="543.1" y="309" width="1.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="546.06" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%; +0.01%)</title><rect x="445.5" y="341" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="448.50" y="351.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="597" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="607.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%; 0.00%)</title><rect x="654.6" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="657.63" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%; +0.00%)</title><rect x="715.8" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="718.81" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (31 samples, 0.07%; +0.02%)</title><rect x="250.7" y="181" width="0.8" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="253.68" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (4 samples, 0.01%; +0.01%)</title><rect x="1039.6" y="213" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1042.59" y="223.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (4 samples, 0.01%; +0.00%)</title><rect x="400.3" y="197" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="403.31" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%; -0.01%)</title><rect x="690.0" y="485" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="692.98" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (265 samples, 0.56%; +0.01%)</title><rect x="136.2" y="261" width="6.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="139.18" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (8 samples, 0.02%; +0.01%)</title><rect x="1039.2" y="197" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1042.17" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="611.2" y="373" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="614.25" y="383.5" ></text>
</g>
<g >
<title>operator new (97 samples, 0.21%; 0.00%)</title><rect x="993.1" y="325" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="996.15" y="335.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; +0.00%)</title><rect x="157.2" y="181" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="160.19" y="191.5" ></text>
</g>
<g >
<title>schema::get_sharder (4 samples, 0.01%; +0.00%)</title><rect x="1018.3" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1021.28" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (19 samples, 0.04%; +0.02%)</title><rect x="224.9" y="117" width="0.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="227.90" y="127.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (12 samples, 0.03%; -0.01%)</title><rect x="825.1" y="85" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="828.07" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="1048.1" y="261" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1051.05" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (83 samples, 0.18%; +0.03%)</title><rect x="275.9" y="325" width="2.0" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="278.87" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20 samples, 0.04%; 0.00%)</title><rect x="1166.9" y="469" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1169.85" y="479.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (13 samples, 0.03%; +0.02%)</title><rect x="831.7" y="277" width="0.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="834.72" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%; -0.02%)</title><rect x="512.2" y="261" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="515.18" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (44 samples, 0.09%; -0.01%)</title><rect x="1175.1" y="517" width="1.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1178.14" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (191 samples, 0.41%; +0.03%)</title><rect x="229.6" y="197" width="4.8" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="232.57" y="207.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (5 samples, 0.01%; 0.00%)</title><rect x="22.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%; +0.02%)</title><rect x="943.0" y="405" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="946.04" y="415.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%; +0.01%)</title><rect x="283.6" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="286.60" y="319.5" ></text>
</g>
<g >
<title>free (23 samples, 0.05%; -0.00%)</title><rect x="38.2" y="421" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="41.17" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.01%; +0.00%)</title><rect x="543.0" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="545.96" y="319.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (216 samples, 0.46%; -0.01%)</title><rect x="1071.9" y="325" width="5.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1074.88" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (75 samples, 0.16%; +0.13%)</title><rect x="309.5" y="261" width="1.9" height="15.0" fill="rgb(255,0,0)" rx="2" ry="2" />
<text  x="312.53" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (12 samples, 0.03%; +0.01%)</title><rect x="225.7" y="149" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="228.65" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%; +0.02%)</title><rect x="943.8" y="389" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="946.84" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="843.6" y="373" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="846.60" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (32 samples, 0.07%; +0.02%)</title><rect x="71.9" y="373" width="0.8" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="74.91" y="383.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%; 0.00%)</title><rect x="840.2" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="843.23" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (62 samples, 0.13%; +0.00%)</title><rect x="717.8" y="485" width="1.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="720.84" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; -0.03%)</title><rect x="576.5" y="309" width="0.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="579.45" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (43 samples, 0.09%; -0.01%)</title><rect x="420.7" y="245" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="423.70" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (17 samples, 0.04%; -0.00%)</title><rect x="884.9" y="469" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="887.87" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (9 samples, 0.02%; +0.01%)</title><rect x="1071.6" y="325" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1074.63" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (4 samples, 0.01%; -0.01%)</title><rect x="1152.8" y="421" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1155.84" y="431.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (27 samples, 0.06%; -0.00%)</title><rect x="342.9" y="181" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="345.90" y="191.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (46 samples, 0.10%; +0.00%)</title><rect x="236.0" y="229" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="239.05" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.00%)</title><rect x="259.9" y="213" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="262.92" y="223.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (4 samples, 0.01%; -0.00%)</title><rect x="875.9" y="405" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="878.91" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (24 samples, 0.05%; +0.01%)</title><rect x="580.3" y="293" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="583.29" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (191 samples, 0.41%; -0.03%)</title><rect x="711.5" y="469" width="4.8" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="714.49" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (107 samples, 0.23%; -0.01%)</title><rect x="1155.5" y="453" width="2.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1158.53" y="463.5" ></text>
</g>
<g >
<title>[unknown] (540 samples, 1.15%; 0.00%)</title><rect x="10.0" y="629" width="13.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (73 samples, 0.16%; +0.00%)</title><rect x="501.1" y="325" width="1.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="504.09" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="439.4" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="442.40" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="271.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (5 samples, 0.01%; -0.01%)</title><rect x="840.0" y="309" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="843.01" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (83 samples, 0.18%; +0.01%)</title><rect x="668.6" y="453" width="2.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="671.61" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; +0.01%)</title><rect x="619.5" y="357" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="622.48" y="367.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (5 samples, 0.01%; 0.00%)</title><rect x="698.4" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="701.36" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (105 samples, 0.22%; -0.00%)</title><rect x="868.0" y="405" width="2.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="870.97" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%; -0.00%)</title><rect x="512.0" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="515.03" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (64 samples, 0.14%; +0.03%)</title><rect x="1016.7" y="245" width="1.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1019.67" y="255.5" ></text>
</g>
<g >
<title>database::query (155 samples, 0.33%; +0.01%)</title><rect x="43.4" y="501" width="3.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="46.42" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (79 samples, 0.17%; -0.01%)</title><rect x="587.2" y="277" width="2.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="590.22" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (12 samples, 0.03%; -0.00%)</title><rect x="295.2" y="373" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="298.22" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (16 samples, 0.03%; +0.00%)</title><rect x="748.8" y="309" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="751.80" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (25 samples, 0.05%; -0.01%)</title><rect x="655.1" y="485" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="658.06" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%; -0.00%)</title><rect x="673.8" y="437" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="676.83" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.01%)</title><rect x="546.5" y="229" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="549.48" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%; +0.01%)</title><rect x="686.0" y="469" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="688.96" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (29 samples, 0.06%; -0.00%)</title><rect x="848.8" y="293" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="851.79" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.03%; +0.01%)</title><rect x="1040.9" y="229" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1043.90" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%; +0.00%)</title><rect x="590.4" y="293" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="593.38" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (66 samples, 0.14%; -0.02%)</title><rect x="850.6" y="325" width="1.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="853.63" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,189 samples, 11.04%; +0.01%)</title><rect x="974.2" y="373" width="130.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="977.24" y="383.5" >service::storage..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="293.5" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="296.46" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (253 samples, 0.54%; +0.00%)</title><rect x="228.4" y="229" width="6.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="231.39" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (9 samples, 0.02%; -0.01%)</title><rect x="1077.6" y="325" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1080.63" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (33 samples, 0.07%; 0.00%)</title><rect x="885.6" y="405" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.62" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (17 samples, 0.04%; +0.03%)</title><rect x="61.4" y="453" width="0.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="64.42" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (57 samples, 0.12%; -0.06%)</title><rect x="71.3" y="389" width="1.4" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="74.28" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (50 samples, 0.11%; -0.00%)</title><rect x="452.0" y="277" width="1.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="454.98" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.01%)</title><rect x="833.5" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="836.48" y="271.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous, auth::get_permissions (4 samples, 0.01%; +0.01%)</title><rect x="833.9" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="836.86" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; +0.00%)</title><rect x="710.9" y="453" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="713.89" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (4 samples, 0.01%; 0.00%)</title><rect x="19.8" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.79" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%; +0.01%)</title><rect x="216.9" y="149" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="219.87" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (99 samples, 0.21%; +0.01%)</title><rect x="989.4" y="309" width="2.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="992.36" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (34 samples, 0.07%; +0.02%)</title><rect x="1034.7" y="149" width="0.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1037.75" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (15 samples, 0.03%; +0.03%)</title><rect x="628.9" y="421" width="0.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="631.90" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,260 samples, 15.45%; +0.05%)</title><rect x="112.8" y="389" width="182.3" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="115.83" y="399.5" >merging_reader&lt;mutation..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%; +0.01%)</title><rect x="836.5" y="325" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="839.47" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (39 samples, 0.08%; +0.02%)</title><rect x="415.9" y="213" width="0.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="418.85" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (6 samples, 0.01%; -0.01%)</title><rect x="1062.3" y="309" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1065.31" y="319.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (35 samples, 0.07%; +0.02%)</title><rect x="1119.3" y="405" width="0.8" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="1122.25" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (14 samples, 0.03%; +0.00%)</title><rect x="1088.9" y="277" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1091.88" y="287.5" ></text>
</g>
<g >
<title>validation::validate_column_family (342 samples, 0.73%; 0.00%)</title><rect x="843.7" y="389" width="8.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="846.72" y="399.5" ></text>
</g>
<g >
<title>row::compact_and_expire (894 samples, 1.90%; +0.01%)</title><rect x="377.2" y="213" width="22.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="380.19" y="223.5" >r..</text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.04%)</title><rect x="596.4" y="357" width="0.7" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="599.41" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (12 samples, 0.03%; +0.01%)</title><rect x="331.3" y="197" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="334.32" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (91 samples, 0.19%; +0.00%)</title><rect x="683.7" y="453" width="2.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="686.68" y="463.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (593 samples, 1.26%; -0.01%)</title><rect x="1080.7" y="309" width="14.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1083.72" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.04%; -0.00%)</title><rect x="669.5" y="421" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="672.47" y="431.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%; 0.00%)</title><rect x="10.1" y="613" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (16 samples, 0.03%; +0.01%)</title><rect x="1130.5" y="389" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1133.45" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (34 samples, 0.07%; -0.09%)</title><rect x="68.8" y="405" width="0.9" height="15.0" fill="rgb(63,63,255)" rx="2" ry="2" />
<text  x="71.80" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.02%; 0.00%)</title><rect x="432.1" y="373" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.15" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (48 samples, 0.10%; 0.00%)</title><rect x="550.7" y="341" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="553.72" y="351.5" ></text>
</g>
<g >
<title>__dynamic_cast (9 samples, 0.02%; -0.01%)</title><rect x="667.5" y="469" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="670.46" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (5 samples, 0.01%; +0.01%)</title><rect x="1128.6" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1131.62" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (49 samples, 0.10%; +0.00%)</title><rect x="813.6" y="165" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="816.60" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; -0.00%)</title><rect x="1138.7" y="421" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1141.68" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (4 samples, 0.01%; +0.01%)</title><rect x="1115.6" y="389" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1118.64" y="399.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (14 samples, 0.03%; -0.01%)</title><rect x="586.9" y="277" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="589.87" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (138 samples, 0.29%; +0.06%)</title><rect x="132.4" y="261" width="3.5" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="135.39" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (23 samples, 0.05%; -0.00%)</title><rect x="853.3" y="421" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="856.26" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.01%; +0.00%)</title><rect x="206.9" y="117" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="209.85" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%; 0.00%)</title><rect x="1103.9" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1106.89" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (12 samples, 0.03%; +0.00%)</title><rect x="645.7" y="389" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="648.74" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (26 samples, 0.06%; +0.00%)</title><rect x="854.3" y="405" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="857.34" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (32 samples, 0.07%; +0.03%)</title><rect x="1096.3" y="277" width="0.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1099.33" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%; +0.01%)</title><rect x="173.0" y="149" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="175.98" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.01%; +0.00%)</title><rect x="1121.5" y="389" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1124.46" y="399.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (43 samples, 0.09%; +0.00%)</title><rect x="575.6" y="325" width="1.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="578.60" y="335.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (5 samples, 0.01%; +0.01%)</title><rect x="927.1" y="373" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="930.15" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.01%; +0.00%)</title><rect x="1067.4" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1070.39" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (383 samples, 0.81%; -0.01%)</title><rect x="721.9" y="469" width="9.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="724.89" y="479.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (24 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="325" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="335.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (4 samples, 0.01%; -0.03%)</title><rect x="915.4" y="325" width="0.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="918.45" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.07%; +0.03%)</title><rect x="716.9" y="485" width="0.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="719.89" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (9 samples, 0.02%; +0.00%)</title><rect x="269.3" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="272.29" y="287.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%; +0.00%)</title><rect x="729.3" y="437" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="732.29" y="447.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,616 samples, 9.82%; +0.03%)</title><rect x="307.2" y="293" width="115.9" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="310.25" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (66 samples, 0.14%; -0.01%)</title><rect x="1166.7" y="485" width="1.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1169.68" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.01%; -0.00%)</title><rect x="745.7" y="405" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="748.69" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%; +0.00%)</title><rect x="1106.1" y="389" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1109.12" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (17 samples, 0.04%; +0.03%)</title><rect x="890.8" y="469" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="893.77" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; 0.00%)</title><rect x="277.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="280.72" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%; +0.00%)</title><rect x="228.2" y="213" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="231.22" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (5 samples, 0.01%; +0.00%)</title><rect x="376.8" y="213" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="379.84" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (18 samples, 0.04%; 0.00%)</title><rect x="18.9" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.86" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; +0.01%)</title><rect x="926.8" y="357" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="929.77" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (71 samples, 0.15%; +0.07%)</title><rect x="587.4" y="261" width="1.8" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="590.42" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (62 samples, 0.13%; -0.00%)</title><rect x="775.1" y="389" width="1.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="778.08" y="399.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%; -0.01%)</title><rect x="150.2" y="229" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="153.19" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.01%; 0.00%)</title><rect x="19.3" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.34" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (29 samples, 0.06%; -0.00%)</title><rect x="1064.9" y="277" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1067.90" y="287.5" ></text>
</g>
<g >
<title>schema_registry::get (172 samples, 0.37%; +0.02%)</title><rect x="980.2" y="357" width="4.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="983.25" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (28 samples, 0.06%; 0.00%)</title><rect x="1139.4" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.39" y="335.5" ></text>
</g>
<g >
<title>table::make_reader (4,478 samples, 9.53%; +0.06%)</title><rect x="439.9" y="357" width="112.5" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="442.93" y="367.5" >table::make_r..</text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="1139.7" y="149" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1142.66" y="159.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (35 samples, 0.07%; -0.01%)</title><rect x="646.0" y="405" width="0.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="649.04" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (4 samples, 0.01%; 0.00%)</title><rect x="1175.0" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.04" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%; 0.00%)</title><rect x="431.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="434.87" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (7 samples, 0.01%; 0.00%)</title><rect x="1057.0" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1059.97" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%; 0.00%)</title><rect x="23.4" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (186 samples, 0.40%; +0.01%)</title><rect x="766.6" y="357" width="4.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="769.60" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%; +0.00%)</title><rect x="304.2" y="293" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="307.18" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="826.9" y="181" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="829.85" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (17 samples, 0.04%; -0.01%)</title><rect x="548.0" y="277" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="551.03" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%; +0.03%)</title><rect x="646.9" y="405" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="649.95" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (9 samples, 0.02%; 0.00%)</title><rect x="432.9" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="435.90" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (19 samples, 0.04%; -0.02%)</title><rect x="704.4" y="437" width="0.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="707.41" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (144 samples, 0.31%; +0.00%)</title><rect x="781.8" y="357" width="3.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="784.79" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (13 samples, 0.03%; -0.00%)</title><rect x="726.5" y="421" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="729.48" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (40 samples, 0.09%; -0.00%)</title><rect x="745.8" y="405" width="1.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="748.79" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; 0.00%)</title><rect x="936.4" y="357" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="939.44" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%; -0.00%)</title><rect x="654.5" y="485" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="657.45" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (17 samples, 0.04%; +0.00%)</title><rect x="1055.2" y="293" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1058.18" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (39 samples, 0.08%; -0.02%)</title><rect x="675.5" y="453" width="1.0" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="678.49" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%; -0.02%)</title><rect x="270.5" y="309" width="0.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="273.54" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (125 samples, 0.27%; +0.01%)</title><rect x="861.1" y="389" width="3.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="864.07" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%; 0.00%)</title><rect x="651.6" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="654.62" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (10 samples, 0.02%; +0.02%)</title><rect x="834.4" y="325" width="0.2" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="837.36" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%; +0.00%)</title><rect x="633.6" y="405" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="636.62" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (8 samples, 0.02%; +0.01%)</title><rect x="985.2" y="357" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="988.19" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (16 samples, 0.03%; +0.01%)</title><rect x="398.7" y="149" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="401.68" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%; +0.01%)</title><rect x="1077.4" y="325" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1080.35" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (36 samples, 0.08%; 0.00%)</title><rect x="885.5" y="485" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.55" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.07%; -0.01%)</title><rect x="772.0" y="389" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="775.05" y="399.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (56 samples, 0.12%; -0.01%)</title><rect x="936.0" y="373" width="1.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="938.98" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (111 samples, 0.24%; -0.00%)</title><rect x="659.3" y="501" width="2.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="662.32" y="511.5" ></text>
</g>
<g >
<title>dht::minimum_token (14 samples, 0.03%; +0.02%)</title><rect x="448.3" y="325" width="0.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="451.26" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (18 samples, 0.04%; +0.03%)</title><rect x="534.9" y="325" width="0.4" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="537.88" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="156.8" y="197" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="159.82" y="207.5" ></text>
</g>
<g >
<title>row::external_memory_usage (19 samples, 0.04%; +0.04%)</title><rect x="218.8" y="165" width="0.5" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="221.83" y="175.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (44 samples, 0.09%; -0.00%)</title><rect x="328.9" y="181" width="1.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="331.91" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%; +0.00%)</title><rect x="919.1" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="922.09" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="686.9" y="469" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="689.89" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (8 samples, 0.02%; -0.08%)</title><rect x="592.3" y="373" width="0.2" height="15.0" fill="rgb(73,73,255)" rx="2" ry="2" />
<text  x="595.34" y="383.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%; -0.00%)</title><rect x="425.5" y="261" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="428.47" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (8 samples, 0.02%; +0.01%)</title><rect x="654.8" y="485" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="657.75" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (99 samples, 0.21%; +0.01%)</title><rect x="637.2" y="405" width="2.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="640.18" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%; +0.01%)</title><rect x="670.2" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="673.17" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (5 samples, 0.01%; 0.00%)</title><rect x="22.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.20" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (78 samples, 0.17%; -0.00%)</title><rect x="687.3" y="485" width="1.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="690.29" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (4 samples, 0.01%; +0.01%)</title><rect x="758.6" y="389" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="761.59" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (23 samples, 0.05%; +0.02%)</title><rect x="500.2" y="325" width="0.6" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="503.18" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (55 samples, 0.12%; -0.01%)</title><rect x="512.3" y="261" width="1.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="515.33" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (20 samples, 0.04%; 0.00%)</title><rect x="707.1" y="341" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (40 samples, 0.09%; -0.06%)</title><rect x="329.0" y="165" width="1.0" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="331.96" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="142.6" y="229" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="145.63" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (21 samples, 0.04%; +0.01%)</title><rect x="1076.8" y="309" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1079.78" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (14 samples, 0.03%; -0.00%)</title><rect x="628.2" y="437" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="631.22" y="447.5" ></text>
</g>
<g >
<title>row::compact_and_expire (6 samples, 0.01%; +0.01%)</title><rect x="402.3" y="229" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="405.30" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (33 samples, 0.07%; +0.02%)</title><rect x="863.3" y="341" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="866.28" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (4 samples, 0.01%; 0.00%)</title><rect x="661.3" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="664.31" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%; +0.01%)</title><rect x="692.2" y="469" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="695.19" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (18 samples, 0.04%; +0.01%)</title><rect x="1048.7" y="277" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1051.66" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (16 samples, 0.03%; 0.00%)</title><rect x="614.9" y="405" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="617.86" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (16 samples, 0.03%; +0.02%)</title><rect x="984.6" y="357" width="0.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="987.56" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (23 samples, 0.05%; 0.00%)</title><rect x="702.8" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="705.81" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%; -0.00%)</title><rect x="807.5" y="277" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="810.55" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (20 samples, 0.04%; -0.00%)</title><rect x="955.4" y="373" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="958.42" y="383.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (10 samples, 0.02%; -0.01%)</title><rect x="675.8" y="437" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="678.82" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (216 samples, 0.46%; 0.00%)</title><rect x="995.6" y="325" width="5.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="998.61" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%; +0.01%)</title><rect x="830.9" y="261" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="833.89" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.01%)</title><rect x="79.4" y="453" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="82.37" y="463.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (91 samples, 0.19%; -0.02%)</title><rect x="618.6" y="405" width="2.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="621.55" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (21 samples, 0.04%; +0.01%)</title><rect x="658.8" y="469" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="661.77" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%; +0.00%)</title><rect x="672.1" y="437" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="675.10" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (841 samples, 1.79%; -0.00%)</title><rect x="506.4" y="309" width="21.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="509.43" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (11 samples, 0.02%; +0.02%)</title><rect x="148.9" y="261" width="0.2" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="151.86" y="271.5" ></text>
</g>
<g >
<title>row::row (4 samples, 0.01%; +0.01%)</title><rect x="219.3" y="165" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="222.30" y="175.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (57 samples, 0.12%; +0.01%)</title><rect x="880.6" y="453" width="1.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="883.63" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%; +0.01%)</title><rect x="942.4" y="373" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="945.44" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (135 samples, 0.29%; +0.02%)</title><rect x="1115.7" y="389" width="3.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1118.74" y="399.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (6 samples, 0.01%; +0.00%)</title><rect x="256.2" y="229" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="259.23" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (9 samples, 0.02%; -0.00%)</title><rect x="664.7" y="485" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="667.70" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; -0.00%)</title><rect x="990.9" y="261" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="993.89" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (9 samples, 0.02%; -0.00%)</title><rect x="1103.3" y="341" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1106.29" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (347 samples, 0.74%; +0.00%)</title><rect x="906.9" y="341" width="8.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="909.91" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (25 samples, 0.05%; -0.03%)</title><rect x="300.0" y="373" width="0.7" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="303.04" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (296 samples, 0.63%; +0.07%)</title><rect x="262.1" y="293" width="7.4" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="265.08" y="303.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (7 samples, 0.01%; +0.01%)</title><rect x="763.7" y="325" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="766.71" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (8 samples, 0.02%; +0.00%)</title><rect x="331.0" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="334.00" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.54" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (121 samples, 0.26%; -0.03%)</title><rect x="1015.2" y="261" width="3.1" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="1018.24" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (642 samples, 1.37%; -0.01%)</title><rect x="904.4" y="405" width="16.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="907.43" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (9 samples, 0.02%; +0.00%)</title><rect x="234.1" y="181" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="237.14" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (7 samples, 0.01%; -0.02%)</title><rect x="258.6" y="197" width="0.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="261.57" y="207.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (21 samples, 0.04%; +0.00%)</title><rect x="251.7" y="197" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="254.69" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%; 0.00%)</title><rect x="17.1" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.08" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (24 samples, 0.05%; +0.00%)</title><rect x="1175.6" y="501" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1178.59" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (10 samples, 0.02%; +0.01%)</title><rect x="240.3" y="245" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="243.29" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (6 samples, 0.01%; 0.00%)</title><rect x="330.1" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="333.07" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (43 samples, 0.09%; +0.01%)</title><rect x="671.1" y="469" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="674.12" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (73 samples, 0.16%; +0.02%)</title><rect x="739.4" y="437" width="1.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="742.43" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (14 samples, 0.03%; -0.00%)</title><rect x="20.1" y="293" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="23.09" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (26 samples, 0.06%; +0.04%)</title><rect x="967.4" y="389" width="0.6" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="970.37" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (57 samples, 0.12%; +0.01%)</title><rect x="820.2" y="133" width="1.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="823.22" y="143.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (4 samples, 0.01%; +0.01%)</title><rect x="566.6" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="569.61" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (35 samples, 0.07%; -0.00%)</title><rect x="951.9" y="357" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="954.90" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (8 samples, 0.02%; -0.01%)</title><rect x="625.1" y="437" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="628.06" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (22 samples, 0.05%; +0.00%)</title><rect x="19.9" y="309" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="22.92" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (105 samples, 0.22%; -0.01%)</title><rect x="823.4" y="149" width="2.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="826.41" y="159.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (10 samples, 0.02%; +0.00%)</title><rect x="230.8" y="181" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="233.80" y="191.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (4 samples, 0.01%; +0.01%)</title><rect x="223.2" y="133" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="226.22" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (7 samples, 0.01%; +0.01%)</title><rect x="590.1" y="293" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="593.11" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (12 samples, 0.03%; +0.01%)</title><rect x="444.8" y="341" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="447.85" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (94 samples, 0.20%; 0.00%)</title><rect x="823.7" y="133" width="2.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="826.66" y="143.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%; -0.00%)</title><rect x="862.5" y="357" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="865.50" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (4 samples, 0.01%; -0.01%)</title><rect x="671.3" y="437" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="674.27" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; -0.00%)</title><rect x="561.9" y="341" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="564.87" y="351.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (26 samples, 0.06%; +0.01%)</title><rect x="193.4" y="53" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="196.37" y="63.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%; +0.00%)</title><rect x="113.8" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="116.76" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (11 samples, 0.02%; -0.01%)</title><rect x="582.3" y="293" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="585.33" y="303.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (306 samples, 0.65%; +0.01%)</title><rect x="491.4" y="261" width="7.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="494.37" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%; +0.00%)</title><rect x="723.3" y="453" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="726.34" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (7 samples, 0.01%; +0.00%)</title><rect x="417.8" y="261" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="420.81" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.01%)</title><rect x="219.4" y="165" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="222.40" y="175.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%; +0.00%)</title><rect x="466.3" y="277" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="469.29" y="287.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (8 samples, 0.02%; -0.05%)</title><rect x="1048.2" y="261" width="0.2" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="1051.18" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (9 samples, 0.02%; -0.01%)</title><rect x="521.1" y="213" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="524.14" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (97 samples, 0.21%; 0.00%)</title><rect x="683.5" y="469" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="686.53" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="917.2" y="341" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="920.16" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (9 samples, 0.02%; -0.04%)</title><rect x="96.3" y="421" width="0.2" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="99.31" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,809 samples, 50.66%; -0.04%)</title><rect x="50.7" y="485" width="597.7" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="53.70" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::gate::leave (6 samples, 0.01%; +0.01%)</title><rect x="47.2" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="50.16" y="479.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (34 samples, 0.07%; -0.00%)</title><rect x="1139.3" y="405" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.31" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%; +0.01%)</title><rect x="951.8" y="357" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="954.78" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (44 samples, 0.09%; -0.00%)</title><rect x="925.5" y="341" width="1.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="928.49" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (40 samples, 0.09%; -0.00%)</title><rect x="902.1" y="405" width="1.0" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="905.14" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (30 samples, 0.06%; +0.01%)</title><rect x="1035.8" y="149" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1038.78" y="159.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (11 samples, 0.02%; -0.01%)</title><rect x="991.5" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="994.47" y="303.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (571 samples, 1.21%; -0.00%)</title><rect x="812.7" y="229" width="14.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="815.67" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%; -0.01%)</title><rect x="955.7" y="341" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="958.72" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%; +0.02%)</title><rect x="474.1" y="293" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="477.12" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; -0.00%)</title><rect x="946.5" y="389" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="949.50" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="357" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="367.5" ></text>
</g>
<g >
<title>std::type_info::operator== (16 samples, 0.03%; +0.02%)</title><rect x="1075.0" y="277" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1077.97" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (7 samples, 0.01%; -0.01%)</title><rect x="914.6" y="309" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="917.57" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (7 samples, 0.01%; -0.00%)</title><rect x="886.2" y="309" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="889.18" y="319.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; +0.01%)</title><rect x="676.6" y="485" width="0.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="679.62" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%; -0.02%)</title><rect x="409.0" y="229" width="0.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="411.97" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%; +0.00%)</title><rect x="461.1" y="277" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="464.12" y="287.5" ></text>
</g>
<g >
<title>query::result::result (43 samples, 0.09%; +0.01%)</title><rect x="614.2" y="421" width="1.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="617.23" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,188 samples, 2.53%; 0.00%)</title><rect x="804.5" y="325" width="29.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="807.53" y="335.5" >st..</text>
</g>
<g >
<title>atomic_cell_or_collection::copy (692 samples, 1.47%; +0.05%)</title><rect x="181.5" y="117" width="17.4" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="184.49" y="127.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,496 samples, 9.57%; +0.01%)</title><rect x="147.9" y="277" width="112.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="150.85" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (4 samples, 0.01%; +0.00%)</title><rect x="884.9" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="887.95" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (32 samples, 0.07%; +0.00%)</title><rect x="1122.4" y="405" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1125.37" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (7 samples, 0.01%; +0.01%)</title><rect x="673.4" y="469" width="0.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="676.36" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (29 samples, 0.06%; +0.01%)</title><rect x="223.3" y="149" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="226.32" y="159.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (41 samples, 0.09%; -0.00%)</title><rect x="516.2" y="213" width="1.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="519.17" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%; +0.00%)</title><rect x="467.5" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="470.49" y="319.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (9 samples, 0.02%; +0.00%)</title><rect x="984.2" y="341" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="987.24" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (8 samples, 0.02%; -0.00%)</title><rect x="1173.3" y="501" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1176.30" y="511.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (60 samples, 0.13%; +0.02%)</title><rect x="291.3" y="309" width="1.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="294.33" y="319.5" ></text>
</g>
<g >
<title>query_result_builder::consume (12 samples, 0.03%; 0.00%)</title><rect x="707.2" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.20" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,062 samples, 10.77%; -0.01%)</title><rect x="744.0" y="453" width="127.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="746.95" y="463.5" >single_node_cql..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%; +0.00%)</title><rect x="947.7" y="389" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="950.71" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%; +0.01%)</title><rect x="830.1" y="213" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="833.14" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (12 samples, 0.03%; -0.01%)</title><rect x="294.0" y="357" width="0.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="296.99" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (9 samples, 0.02%; +0.01%)</title><rect x="25.9" y="517" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="28.87" y="527.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (26 samples, 0.06%; +0.03%)</title><rect x="237.7" y="229" width="0.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="240.68" y="239.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; -0.00%)</title><rect x="253.9" y="181" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="256.87" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%; -0.01%)</title><rect x="342.1" y="165" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="345.09" y="175.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%; +0.01%)</title><rect x="519.6" y="197" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="522.61" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (4 samples, 0.01%; -0.00%)</title><rect x="857.9" y="437" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="860.86" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.00%)</title><rect x="833.1" y="261" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="836.08" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (36 samples, 0.08%; 0.00%)</title><rect x="235.1" y="213" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="238.14" y="223.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.08%; +0.00%)</title><rect x="508.3" y="293" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="511.34" y="303.5" ></text>
</g>
<g >
<title>auth::get_permissions (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="383.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (11 samples, 0.02%; -0.00%)</title><rect x="343.6" y="181" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="346.57" y="191.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%; +0.00%)</title><rect x="552.5" y="405" width="1.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="555.45" y="415.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (252 samples, 0.54%; +0.05%)</title><rect x="927.3" y="373" width="6.3" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="930.27" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%; -0.01%)</title><rect x="1128.0" y="373" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1131.04" y="383.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%; -0.01%)</title><rect x="1066.4" y="325" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1069.43" y="335.5" ></text>
</g>
<g >
<title>__dynamic_cast (33 samples, 0.07%; +0.01%)</title><rect x="899.5" y="421" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="902.48" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%; -0.01%)</title><rect x="1158.5" y="421" width="0.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1161.47" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (20 samples, 0.04%; +0.00%)</title><rect x="654.0" y="485" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="656.95" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (34 samples, 0.07%; +0.01%)</title><rect x="827.8" y="229" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="830.78" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (9 samples, 0.02%; +0.00%)</title><rect x="143.9" y="261" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="146.91" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (5 samples, 0.01%; +0.01%)</title><rect x="76.1" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="79.10" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (38 samples, 0.08%; -0.01%)</title><rect x="784.4" y="325" width="0.9" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="787.37" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (18 samples, 0.04%; 0.00%)</title><rect x="1031.3" y="197" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.26" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%; +0.01%)</title><rect x="277.9" y="325" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="280.95" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; +0.00%)</title><rect x="580.2" y="293" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="583.19" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (18 samples, 0.04%; +0.00%)</title><rect x="791.8" y="357" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="794.75" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (34 samples, 0.07%; 0.00%)</title><rect x="800.4" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="803.37" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (165 samples, 0.35%; +0.04%)</title><rect x="248.1" y="213" width="4.1" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="251.07" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (27 samples, 0.06%; -0.01%)</title><rect x="217.7" y="165" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="220.67" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (35 samples, 0.07%; +0.06%)</title><rect x="998.4" y="261" width="0.9" height="15.0" fill="rgb(255,108,108)" rx="2" ry="2" />
<text  x="1001.42" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (35 samples, 0.07%; +0.01%)</title><rect x="33.9" y="485" width="0.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="36.93" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (4 samples, 0.01%; 0.00%)</title><rect x="43.0" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.04" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (9 samples, 0.02%; -0.00%)</title><rect x="1039.7" y="213" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1042.69" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%; 0.00%)</title><rect x="542.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="545.71" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%; -0.00%)</title><rect x="1051.6" y="229" width="1.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1054.59" y="239.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (22 samples, 0.05%; -0.01%)</title><rect x="611.1" y="389" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="614.07" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%; 0.00%)</title><rect x="838.9" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="841.88" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (6 samples, 0.01%; +0.00%)</title><rect x="962.7" y="373" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="965.75" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (97 samples, 0.21%; -0.00%)</title><rect x="761.5" y="357" width="2.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="764.48" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%; -0.02%)</title><rect x="1050.8" y="277" width="0.1" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="1053.77" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (11 samples, 0.02%; -0.02%)</title><rect x="216.1" y="117" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="219.14" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="950.0" y="389" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="952.99" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (15 samples, 0.03%; +0.00%)</title><rect x="1068.1" y="341" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1071.11" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (192 samples, 0.41%; +0.01%)</title><rect x="747.5" y="405" width="4.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="750.52" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (11 samples, 0.02%; +0.01%)</title><rect x="332.1" y="197" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="335.10" y="207.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (4 samples, 0.01%; +0.01%)</title><rect x="354.2" y="165" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="357.17" y="175.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (49 samples, 0.10%; +0.00%)</title><rect x="283.9" y="309" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="286.90" y="319.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (172 samples, 0.37%; +0.03%)</title><rect x="929.3" y="357" width="4.3" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="932.28" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (8 samples, 0.02%; -0.01%)</title><rect x="852.1" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="855.06" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (32 samples, 0.07%; +0.00%)</title><rect x="519.7" y="197" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="522.71" y="207.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (4 samples, 0.01%; -0.01%)</title><rect x="699.6" y="437" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="702.62" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; -0.00%)</title><rect x="1139.3" y="437" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.31" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%; +0.02%)</title><rect x="79.9" y="453" width="0.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="82.89" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%; +0.01%)</title><rect x="1045.8" y="229" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1048.85" y="239.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (130 samples, 0.28%; +0.00%)</title><rect x="1034.0" y="165" width="3.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1037.00" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (29 samples, 0.06%; -0.01%)</title><rect x="504.6" y="309" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="507.62" y="319.5" ></text>
</g>
<g >
<title>auth::resource::resource (99 samples, 0.21%; +0.00%)</title><rect x="790.7" y="389" width="2.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="793.67" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (24 samples, 0.05%; +0.01%)</title><rect x="1172.2" y="421" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1175.20" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%; -0.01%)</title><rect x="41.1" y="437" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="44.06" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (89 samples, 0.19%; +0.02%)</title><rect x="950.6" y="389" width="2.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="953.57" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (5 samples, 0.01%; -0.04%)</title><rect x="785.8" y="405" width="0.1" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="788.75" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (47 samples, 0.10%; -0.00%)</title><rect x="824.8" y="117" width="1.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="827.84" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (7 samples, 0.01%; -0.01%)</title><rect x="853.5" y="389" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="856.54" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%; +0.01%)</title><rect x="204.7" y="117" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="207.72" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%; -0.00%)</title><rect x="454.5" y="229" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="457.51" y="239.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (95 samples, 0.20%; 0.00%)</title><rect x="644.9" y="421" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="647.89" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (35 samples, 0.07%; +0.00%)</title><rect x="866.5" y="421" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="869.47" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (29 samples, 0.06%; -0.00%)</title><rect x="555.8" y="421" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="558.79" y="431.5" ></text>
</g>
<g >
<title>main (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="613" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="623.5" >main</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (16 samples, 0.03%; -0.00%)</title><rect x="882.1" y="485" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="885.08" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.00%)</title><rect x="401.1" y="181" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="404.12" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (28 samples, 0.06%; +0.01%)</title><rect x="1053.9" y="229" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1056.90" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (5 samples, 0.01%; +0.00%)</title><rect x="834.1" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="837.06" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%; -0.01%)</title><rect x="604.7" y="421" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="607.67" y="431.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.18%; -0.00%)</title><rect x="1126.5" y="405" width="2.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1129.53" y="415.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (11 samples, 0.02%; +0.01%)</title><rect x="126.6" y="277" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="129.59" y="287.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (62 samples, 0.13%; -0.01%)</title><rect x="515.6" y="229" width="1.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="518.65" y="239.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="485" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (28 samples, 0.06%; +0.02%)</title><rect x="628.6" y="437" width="0.7" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="631.57" y="447.5" ></text>
</g>
<g >
<title>reader_permit::signal (4 samples, 0.01%; +0.00%)</title><rect x="292.9" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="295.89" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (7 samples, 0.01%; 0.00%)</title><rect x="723.8" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.79" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%; +0.00%)</title><rect x="780.7" y="325" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="783.71" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (28 samples, 0.06%; +0.00%)</title><rect x="952.1" y="341" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="955.08" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (29 samples, 0.06%; -0.04%)</title><rect x="502.2" y="309" width="0.7" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="505.19" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (22 samples, 0.05%; +0.03%)</title><rect x="95.7" y="421" width="0.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="98.71" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (9 samples, 0.02%; -0.01%)</title><rect x="866.2" y="421" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="869.24" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; +0.00%)</title><rect x="703.4" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="706.38" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (38 samples, 0.08%; +0.01%)</title><rect x="682.0" y="485" width="0.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="684.97" y="495.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%; -0.00%)</title><rect x="100.5" y="389" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="103.50" y="399.5" ></text>
</g>
<g >
<title>database::find_uuid (178 samples, 0.38%; -0.01%)</title><rect x="781.2" y="389" width="4.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="784.16" y="399.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (27 samples, 0.06%; +0.03%)</title><rect x="324.9" y="165" width="0.7" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="327.90" y="175.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,646 samples, 3.50%; +0.01%)</title><rect x="332.4" y="197" width="41.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="335.38" y="207.5" >mut..</text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (5 samples, 0.01%; +0.00%)</title><rect x="238.6" y="213" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="241.61" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%; +0.00%)</title><rect x="591.2" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="594.16" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.01%)</title><rect x="831.2" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="834.22" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;range_tombstone*&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="560.9" y="373" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="563.86" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (114 samples, 0.24%; 0.00%)</title><rect x="18.6" y="373" width="2.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.59" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (6 samples, 0.01%; +0.01%)</title><rect x="1067.8" y="341" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1070.79" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="46.1" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="49.13" y="479.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%; -0.01%)</title><rect x="913.6" y="277" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="916.62" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (199 samples, 0.42%; -0.01%)</title><rect x="1126.1" y="421" width="5.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1129.11" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (9 samples, 0.02%; 0.00%)</title><rect x="852.0" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="855.03" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%; -0.01%)</title><rect x="726.3" y="421" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="729.33" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (33 samples, 0.07%; -0.01%)</title><rect x="1106.4" y="389" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1109.37" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%; -0.03%)</title><rect x="431.4" y="357" width="0.3" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="434.37" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (60 samples, 0.13%; -0.02%)</title><rect x="205.3" y="117" width="1.6" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="208.34" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (11 samples, 0.02%; -0.01%)</title><rect x="274.2" y="341" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="277.18" y="351.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (4 samples, 0.01%; +0.01%)</title><rect x="487.3" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="490.25" y="319.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.01%)</title><rect x="684.1" y="437" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="687.13" y="447.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.01%)</title><rect x="468.2" y="325" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="471.22" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%; -0.01%)</title><rect x="54.1" y="469" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="57.08" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (33 samples, 0.07%; -0.00%)</title><rect x="493.4" y="197" width="0.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="496.40" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (466 samples, 0.99%; -0.06%)</title><rect x="187.0" y="101" width="11.7" height="15.0" fill="rgb(108,108,255)" rx="2" ry="2" />
<text  x="189.99" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%; +0.01%)</title><rect x="647.6" y="437" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="650.60" y="447.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%; +0.01%)</title><rect x="257.9" y="213" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="260.94" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (16 samples, 0.03%; 0.00%)</title><rect x="843.0" y="341" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="845.99" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.02%; +0.01%)</title><rect x="933.6" y="389" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="936.60" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.1" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.08" y="271.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (235 samples, 0.50%; +0.03%)</title><rect x="765.6" y="373" width="5.9" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="768.64" y="383.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; -0.04%)</title><rect x="584.8" y="277" width="0.8" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="587.79" y="287.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.18%; -0.00%)</title><rect x="1044.5" y="261" width="2.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1047.51" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (47 samples, 0.10%; 0.00%)</title><rect x="17.3" y="309" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.33" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%; +0.00%)</title><rect x="1146.5" y="469" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1149.49" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (5 samples, 0.01%; +0.00%)</title><rect x="1134.6" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1137.57" y="431.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (10 samples, 0.02%; +0.01%)</title><rect x="445.2" y="341" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="448.15" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%; +0.01%)</title><rect x="528.0" y="325" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="531.00" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (161 samples, 0.34%; +0.01%)</title><rect x="872.1" y="421" width="4.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="875.07" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (4 samples, 0.01%; -0.01%)</title><rect x="426.6" y="245" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="429.57" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (4 samples, 0.01%; -0.00%)</title><rect x="687.6" y="453" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="690.57" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%; -0.00%)</title><rect x="409.2" y="229" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="412.20" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (4 samples, 0.01%; -0.00%)</title><rect x="825.8" y="69" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="828.85" y="79.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%; +0.00%)</title><rect x="316.7" y="197" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="319.71" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.02%; -0.01%)</title><rect x="848.2" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="851.17" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (68 samples, 0.14%; -0.01%)</title><rect x="925.1" y="357" width="1.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="928.06" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%; +0.01%)</title><rect x="221.9" y="149" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="224.86" y="159.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (16 samples, 0.03%; +0.01%)</title><rect x="623.0" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="626.05" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,639 samples, 50.29%; +0.07%)</title><rect x="54.6" y="469" width="593.5" height="15.0" fill="rgb(255,101,101)" rx="2" ry="2" />
<text  x="57.59" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (13 samples, 0.03%; -0.01%)</title><rect x="53.7" y="469" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="56.73" y="479.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (453 samples, 0.96%; -0.01%)</title><rect x="487.8" y="293" width="11.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="490.78" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (124 samples, 0.26%; +0.01%)</title><rect x="700.3" y="485" width="3.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="703.27" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; -0.01%)</title><rect x="218.1" y="133" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="221.12" y="143.5" ></text>
</g>
<g >
<title>auth::resource::parent (105 samples, 0.22%; -0.01%)</title><rect x="801.4" y="325" width="2.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="804.37" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (27 samples, 0.06%; -0.01%)</title><rect x="1049.8" y="277" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1052.76" y="287.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%; -0.00%)</title><rect x="730.7" y="405" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="733.70" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (4 samples, 0.01%; +0.01%)</title><rect x="704.9" y="453" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="707.89" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (427 samples, 0.91%; +0.01%)</title><rect x="282.1" y="325" width="10.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="285.12" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (6 samples, 0.01%; -0.00%)</title><rect x="728.2" y="421" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="731.21" y="431.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (167 samples, 0.36%; +0.03%)</title><rect x="364.1" y="165" width="4.2" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="367.11" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (33 samples, 0.07%; +0.02%)</title><rect x="1061.1" y="293" width="0.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1064.13" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.01%; -0.01%)</title><rect x="864.3" y="405" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="867.28" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; -0.01%)</title><rect x="684.6" y="437" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="687.60" y="447.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (33 samples, 0.07%; -0.01%)</title><rect x="322.1" y="165" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="325.13" y="175.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%; +0.00%)</title><rect x="1032.1" y="181" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1035.06" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.01%; +0.01%)</title><rect x="1143.4" y="501" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1146.38" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (6 samples, 0.01%; +0.01%)</title><rect x="758.9" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="761.92" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.01%; +0.01%)</title><rect x="852.3" y="405" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="855.33" y="415.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (4 samples, 0.01%; 0.00%)</title><rect x="459.6" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="462.64" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="42.9" y="469" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="45.91" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (15 samples, 0.03%; +0.03%)</title><rect x="270.2" y="293" width="0.3" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="273.17" y="303.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%; +0.00%)</title><rect x="302.3" y="293" width="1.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="305.30" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%; -0.01%)</title><rect x="555.0" y="389" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="558.01" y="399.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%; 0.00%)</title><rect x="564.2" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="567.17" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%; +0.01%)</title><rect x="1121.2" y="373" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1124.21" y="383.5" ></text>
</g>
<g >
<title>row::compact_and_expire (4 samples, 0.01%; +0.00%)</title><rect x="707.5" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="710.50" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (6 samples, 0.01%; -0.00%)</title><rect x="24.4" y="517" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="27.41" y="527.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (443 samples, 0.94%; -0.00%)</title><rect x="32.2" y="501" width="11.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="35.17" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%; +0.01%)</title><rect x="1137.4" y="421" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1140.40" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (21 samples, 0.04%; -0.00%)</title><rect x="126.1" y="277" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="129.06" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (36 samples, 0.08%; 0.00%)</title><rect x="885.5" y="469" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.55" y="479.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (150 samples, 0.32%; +0.00%)</title><rect x="544.7" y="293" width="3.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="547.69" y="303.5" ></text>
</g>
<g >
<title>dht::maximum_token (4 samples, 0.01%; 0.00%)</title><rect x="451.8" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="454.78" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%; +0.00%)</title><rect x="135.7" y="245" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="138.68" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (5 samples, 0.01%; -0.01%)</title><rect x="607.1" y="421" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="610.08" y="431.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.01%; +0.00%)</title><rect x="977.9" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="980.94" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (483 samples, 1.03%; +0.02%)</title><rect x="242.6" y="229" width="12.1" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="245.55" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (8 samples, 0.02%; +0.01%)</title><rect x="670.8" y="453" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="673.85" y="463.5" ></text>
</g>
<g >
<title>query::querier&lt; (12 samples, 0.03%; +0.00%)</title><rect x="60.6" y="453" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="63.59" y="463.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (13 samples, 0.03%; +0.01%)</title><rect x="342.6" y="181" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="345.57" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%; -0.00%)</title><rect x="93.3" y="437" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="96.35" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.01%)</title><rect x="685.8" y="405" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="688.81" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; +0.00%)</title><rect x="944.3" y="373" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="947.32" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (12 samples, 0.03%; -0.01%)</title><rect x="877.2" y="453" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="880.16" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; +0.01%)</title><rect x="1146.3" y="469" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1149.34" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (20 samples, 0.04%; +0.00%)</title><rect x="670.0" y="421" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="673.02" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (5 samples, 0.01%; +0.00%)</title><rect x="113.9" y="373" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="116.94" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (13 samples, 0.03%; +0.01%)</title><rect x="865.9" y="421" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="868.92" y="431.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (42 samples, 0.09%; -0.01%)</title><rect x="1162.8" y="453" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1165.84" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; +0.00%)</title><rect x="741.3" y="437" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="744.32" y="447.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (10 samples, 0.02%; +0.01%)</title><rect x="623.4" y="405" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="626.45" y="415.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; +0.00%)</title><rect x="547.2" y="261" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="550.23" y="271.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (7 samples, 0.01%; +0.00%)</title><rect x="1035.6" y="149" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1038.60" y="159.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (470 samples, 1.00%; -0.00%)</title><rect x="487.4" y="309" width="11.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="490.35" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (65 samples, 0.14%; +0.11%)</title><rect x="455.8" y="261" width="1.6" height="15.0" fill="rgb(255,31,31)" rx="2" ry="2" />
<text  x="458.80" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (5 samples, 0.01%; +0.00%)</title><rect x="449.7" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="452.69" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (6 samples, 0.01%; -0.01%)</title><rect x="920.1" y="389" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="923.12" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%; -0.02%)</title><rect x="645.4" y="373" width="0.3" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="648.39" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%; +0.01%)</title><rect x="721.1" y="469" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="724.08" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (87 samples, 0.19%; +0.01%)</title><rect x="642.0" y="437" width="2.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="644.95" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,222 samples, 4.73%; +0.00%)</title><rect x="1001.2" y="341" width="55.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1004.18" y="351.5" >servi..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%; -0.01%)</title><rect x="854.1" y="421" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="857.09" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; -0.00%)</title><rect x="532.4" y="309" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="535.39" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.03%; -0.01%)</title><rect x="218.5" y="149" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="221.50" y="159.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (103 samples, 0.22%; -0.01%)</title><rect x="924.3" y="373" width="2.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="927.34" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (83 samples, 0.18%; 0.00%)</title><rect x="855.6" y="421" width="2.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.65" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (4 samples, 0.01%; -0.01%)</title><rect x="74.6" y="389" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="77.62" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (157 samples, 0.33%; +0.01%)</title><rect x="1062.0" y="325" width="4.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1065.01" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (17 samples, 0.04%; -0.01%)</title><rect x="1118.7" y="357" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1121.70" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (9 samples, 0.02%; -0.01%)</title><rect x="966.9" y="389" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="969.86" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%; +0.01%)</title><rect x="922.3" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="925.30" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (44 samples, 0.09%; +0.06%)</title><rect x="77.4" y="453" width="1.1" height="15.0" fill="rgb(255,108,108)" rx="2" ry="2" />
<text  x="80.36" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.00%)</title><rect x="70.2" y="389" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="73.20" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%; -0.00%)</title><rect x="535.5" y="325" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="538.48" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.01%; 0.00%)</title><rect x="1001.8" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1004.81" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%; +0.00%)</title><rect x="952.2" y="325" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="955.20" y="335.5" ></text>
</g>
<g >
<title>database::has_keyspace (154 samples, 0.33%; -0.02%)</title><rect x="860.6" y="421" width="3.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="863.57" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (165 samples, 0.35%; +0.00%)</title><rect x="996.9" y="293" width="4.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="999.89" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (10 samples, 0.02%; +0.01%)</title><rect x="62.1" y="453" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="65.14" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (6 samples, 0.01%; -0.00%)</title><rect x="973.6" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="976.59" y="383.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (4 samples, 0.01%; -0.01%)</title><rect x="1025.2" y="245" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1028.16" y="255.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (18 samples, 0.04%; +0.02%)</title><rect x="320.4" y="197" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="323.35" y="207.5" ></text>
</g>
<g >
<title>__tls_init (17 samples, 0.04%; +0.01%)</title><rect x="149.4" y="245" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="152.38" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="707.1" y="357" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="367.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%; +0.00%)</title><rect x="645.4" y="389" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="648.37" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (17 samples, 0.04%; 0.00%)</title><rect x="22.1" y="421" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.05" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (18 samples, 0.04%; +0.01%)</title><rect x="25.4" y="517" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="28.39" y="527.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%; -0.00%)</title><rect x="694.8" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="697.82" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (4 samples, 0.01%; +0.00%)</title><rect x="417.6" y="261" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="420.56" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (15 samples, 0.03%; +0.01%)</title><rect x="648.1" y="469" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="651.05" y="479.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (321 samples, 0.68%; -0.00%)</title><rect x="745.3" y="437" width="8.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="748.33" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (20 samples, 0.04%; +0.00%)</title><rect x="890.3" y="453" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="893.27" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (6 samples, 0.01%; +0.01%)</title><rect x="985.0" y="357" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="987.96" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (49 samples, 0.10%; +0.01%)</title><rect x="767.0" y="325" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="770.00" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (10 samples, 0.02%; 0.00%)</title><rect x="22.7" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.73" y="495.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (47 samples, 0.10%; +0.01%)</title><rect x="698.5" y="469" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="701.54" y="479.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%; +0.00%)</title><rect x="541.0" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="544.03" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="973.4" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="976.37" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%; +0.01%)</title><rect x="247.7" y="197" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="250.75" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (10 samples, 0.02%; +0.01%)</title><rect x="65.2" y="437" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="68.21" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (74 samples, 0.16%; -0.04%)</title><rect x="154.1" y="197" width="1.8" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="157.08" y="207.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; +0.00%)</title><rect x="423.3" y="293" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="426.31" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (32 samples, 0.07%; 0.00%)</title><rect x="1031.7" y="197" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1034.71" y="207.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,747 samples, 12.23%; -0.02%)</title><rect x="737.8" y="485" width="144.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="740.78" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.01%)</title><rect x="604.8" y="421" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="607.85" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (145 samples, 0.31%; +0.01%)</title><rect x="860.6" y="405" width="3.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="863.64" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (23 samples, 0.05%; +0.01%)</title><rect x="679.4" y="485" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="682.43" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="45.6" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="48.62" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%; 0.00%)</title><rect x="678.8" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="681.81" y="463.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (46 samples, 0.10%; +0.01%)</title><rect x="759.1" y="389" width="1.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="762.07" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%; +0.00%)</title><rect x="436.5" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="439.54" y="415.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.12%; -0.04%)</title><rect x="945.3" y="405" width="1.4" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="948.27" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%; +0.00%)</title><rect x="704.1" y="469" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="707.14" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="1166.6" y="485" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1169.55" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (22 samples, 0.05%; 0.00%)</title><rect x="152.2" y="229" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="155.17" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (24,094 samples, 51.26%; -0.06%)</title><rect x="48.0" y="501" width="604.8" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="50.96" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (384 samples, 0.82%; +0.02%)</title><rect x="1068.7" y="341" width="9.7" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1071.72" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%; +0.02%)</title><rect x="202.7" y="101" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="205.68" y="111.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (6 samples, 0.01%; -0.08%)</title><rect x="937.5" y="389" width="0.1" height="15.0" fill="rgb(77,77,255)" rx="2" ry="2" />
<text  x="940.49" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (7 samples, 0.01%; -0.00%)</title><rect x="852.1" y="277" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="855.08" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%; -0.00%)</title><rect x="979.8" y="325" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="982.82" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (69 samples, 0.15%; +0.00%)</title><rect x="1060.2" y="325" width="1.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1063.23" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%; -0.01%)</title><rect x="46.6" y="485" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="49.55" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="431.2" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="434.22" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%; +0.01%)</title><rect x="824.7" y="117" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="827.67" y="127.5" ></text>
</g>
<g >
<title>seastar::app_template::run (45,915 samples, 97.69%; 0.00%)</title><rect x="23.6" y="581" width="1152.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.56" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (12 samples, 0.03%; -0.02%)</title><rect x="752.9" y="389" width="0.3" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="755.87" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (80 samples, 0.17%; -0.01%)</title><rect x="700.7" y="453" width="2.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="703.70" y="463.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (25 samples, 0.05%; +0.01%)</title><rect x="1173.6" y="501" width="0.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1176.58" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (8 samples, 0.02%; +0.00%)</title><rect x="1165.1" y="453" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1168.10" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (4 samples, 0.01%; +0.00%)</title><rect x="458.7" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="461.71" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (20 samples, 0.04%; -0.01%)</title><rect x="202.0" y="101" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="204.98" y="111.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (35 samples, 0.07%; 0.00%)</title><rect x="885.6" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.57" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (29 samples, 0.06%; +0.01%)</title><rect x="139.9" y="229" width="0.8" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="142.95" y="239.5" ></text>
</g>
<g >
<title>database::has_keyspace (85 samples, 0.18%; +0.01%)</title><rect x="850.2" y="357" width="2.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="853.17" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (38 samples, 0.08%; +0.00%)</title><rect x="994.6" y="293" width="1.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="997.63" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (44 samples, 0.09%; +0.00%)</title><rect x="827.5" y="245" width="1.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="830.53" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%; +0.02%)</title><rect x="1149.0" y="453" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1151.98" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%; 0.00%)</title><rect x="294.6" y="357" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="297.57" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%; +0.00%)</title><rect x="268.8" y="261" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="271.79" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.01%)</title><rect x="710.4" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="713.41" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (4 samples, 0.01%; +0.01%)</title><rect x="159.4" y="213" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="162.35" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (28 samples, 0.06%; +0.05%)</title><rect x="564.4" y="389" width="0.7" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="567.40" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%; +0.01%)</title><rect x="916.0" y="357" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="919.03" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.03%; +0.00%)</title><rect x="1104.5" y="373" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1107.52" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (14 samples, 0.03%; +0.03%)</title><rect x="602.2" y="389" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="605.23" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%; -0.00%)</title><rect x="167.1" y="213" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="170.13" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%; 0.00%)</title><rect x="707.1" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (43 samples, 0.09%; 0.00%)</title><rect x="863.1" y="373" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="866.10" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (41 samples, 0.09%; -0.03%)</title><rect x="75.0" y="373" width="1.0" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="78.00" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (4 samples, 0.01%; -0.01%)</title><rect x="81.4" y="453" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="84.40" y="463.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (4 samples, 0.01%; -0.00%)</title><rect x="652.9" y="501" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="655.95" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (74 samples, 0.16%; -0.01%)</title><rect x="769.3" y="277" width="1.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="772.34" y="287.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (25 samples, 0.05%; +0.00%)</title><rect x="144.2" y="261" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="147.16" y="271.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%; -0.01%)</title><rect x="686.4" y="485" width="0.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="689.44" y="495.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (166 samples, 0.35%; 0.00%)</title><rect x="937.6" y="389" width="4.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="940.64" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (57 samples, 0.12%; +0.01%)</title><rect x="948.2" y="405" width="1.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="951.21" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%; -0.00%)</title><rect x="417.2" y="213" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="420.23" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (431 samples, 0.92%; +0.00%)</title><rect x="1029.7" y="229" width="10.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1032.70" y="239.5" ></text>
</g>
<g >
<title>__start_context (283 samples, 0.60%; 0.00%)</title><rect x="16.1" y="613" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.10" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%; 0.00%)</title><rect x="707.1" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.01%; +0.01%)</title><rect x="1051.2" y="261" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1054.17" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%; +0.00%)</title><rect x="679.1" y="437" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="682.13" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%; +0.00%)</title><rect x="207.5" y="133" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="210.50" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%; +0.01%)</title><rect x="223.1" y="149" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="226.12" y="159.5" ></text>
</g>
<g >
<title>perf_simple_que (47,002 samples, 100.00%; 0.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>operator new (22 samples, 0.05%; -0.00%)</title><rect x="856.8" y="373" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="859.78" y="383.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%; -0.01%)</title><rect x="224.2" y="133" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="227.22" y="143.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; -0.00%)</title><rect x="99.9" y="405" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="102.90" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.01%; 0.00%)</title><rect x="18.9" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.91" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.01%)</title><rect x="1047.1" y="261" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1050.13" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%; -0.00%)</title><rect x="997.4" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1000.39" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (7 samples, 0.01%; +0.00%)</title><rect x="271.1" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="274.12" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (13 samples, 0.03%; +0.02%)</title><rect x="1135.8" y="421" width="0.3" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1138.77" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="554.6" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="557.58" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (5 samples, 0.01%; -0.00%)</title><rect x="499.2" y="325" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="502.15" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (9,620 samples, 20.47%; -0.04%)</title><rect x="896.1" y="437" width="241.5" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="899.12" y="447.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (7 samples, 0.01%; -0.05%)</title><rect x="681.6" y="485" width="0.2" height="15.0" fill="rgb(133,133,255)" rx="2" ry="2" />
<text  x="684.59" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (7 samples, 0.01%; -0.00%)</title><rect x="882.5" y="485" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="885.49" y="495.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (4 samples, 0.01%; +0.01%)</title><rect x="749.2" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="752.20" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%; -0.00%)</title><rect x="860.8" y="389" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="863.82" y="399.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (208 samples, 0.44%; 0.00%)</title><rect x="16.7" y="453" width="5.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.70" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,499 samples, 11.70%; -0.05%)</title><rect x="968.0" y="389" width="138.1" height="15.0" fill="rgb(126,126,255)" rx="2" ry="2" />
<text  x="971.02" y="399.5" >service::storage_..</text>
</g>
<g >
<title>operator new (21 samples, 0.04%; +0.00%)</title><rect x="673.8" y="453" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="676.78" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (39 samples, 0.08%; -0.03%)</title><rect x="1113.4" y="373" width="1.0" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1116.43" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (34 samples, 0.07%; +0.04%)</title><rect x="693.7" y="437" width="0.9" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="696.74" y="447.5" ></text>
</g>
<g >
<title>operator new (61 samples, 0.13%; -0.00%)</title><rect x="989.9" y="293" width="1.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="992.94" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; 0.00%)</title><rect x="879.2" y="421" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.25" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (21 samples, 0.04%; +0.01%)</title><rect x="330.2" y="213" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="333.22" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (233 samples, 0.50%; -0.01%)</title><rect x="871.3" y="453" width="5.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="874.31" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (32 samples, 0.07%; -0.04%)</title><rect x="522.4" y="229" width="0.8" height="15.0" fill="rgb(140,140,255)" rx="2" ry="2" />
<text  x="525.37" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (4 samples, 0.01%; -0.01%)</title><rect x="732.2" y="485" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="735.23" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (21 samples, 0.04%; -0.02%)</title><rect x="694.6" y="453" width="0.5" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="697.60" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%; 0.00%)</title><rect x="1039.9" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1042.92" y="223.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (972 samples, 2.07%; +0.01%)</title><rect x="807.9" y="293" width="24.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="810.92" y="303.5" >s..</text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (6 samples, 0.01%; +0.01%)</title><rect x="896.0" y="437" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="898.97" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%; -0.01%)</title><rect x="288.3" y="261" width="2.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="291.34" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (30 samples, 0.06%; +0.01%)</title><rect x="803.2" y="277" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="806.15" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (34 samples, 0.07%; +0.02%)</title><rect x="553.6" y="405" width="0.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="556.61" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%; 0.00%)</title><rect x="1055.3" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1058.34" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (12 samples, 0.03%; +0.01%)</title><rect x="224.0" y="149" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="227.05" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%; +0.01%)</title><rect x="746.9" y="389" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="749.89" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (228 samples, 0.49%; +0.00%)</title><rect x="1032.6" y="197" width="5.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1035.64" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (439 samples, 0.93%; -0.01%)</title><rect x="696.0" y="501" width="11.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="699.00" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (15 samples, 0.03%; 0.00%)</title><rect x="652.5" y="469" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="655.47" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%; +0.01%)</title><rect x="877.5" y="469" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="880.51" y="479.5" ></text>
</g>
<g >
<title>compound_type&lt; (153 samples, 0.33%; +0.04%)</title><rect x="937.8" y="373" width="3.9" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="940.84" y="383.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%; -0.00%)</title><rect x="866.7" y="405" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="869.67" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="717.7" y="485" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="720.74" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%; +0.01%)</title><rect x="1106.9" y="357" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1109.93" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr, false&gt;::uninitialized_set&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (9 samples, 0.02%; +0.01%)</title><rect x="763.5" y="325" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="766.49" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (59 samples, 0.13%; -0.00%)</title><rect x="844.5" y="325" width="1.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="847.48" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (4 samples, 0.01%; -0.00%)</title><rect x="129.7" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="132.68" y="287.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,913 samples, 27.47%; +0.05%)</title><rect x="109.0" y="421" width="324.2" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="112.04" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (20 samples, 0.04%; 0.00%)</title><rect x="768.4" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="771.36" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (38 samples, 0.08%; -0.02%)</title><rect x="284.1" y="293" width="1.0" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="287.10" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.03%; +0.02%)</title><rect x="427.5" y="373" width="0.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="430.48" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (22 samples, 0.05%; -0.01%)</title><rect x="669.3" y="437" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="672.34" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (30 samples, 0.06%; -0.03%)</title><rect x="912.9" y="277" width="0.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="915.86" y="287.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (41 samples, 0.09%; -0.05%)</title><rect x="367.3" y="149" width="1.0" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="370.27" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (4 samples, 0.01%; -0.01%)</title><rect x="323.0" y="165" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="325.96" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (6 samples, 0.01%; +0.01%)</title><rect x="328.2" y="181" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="331.18" y="191.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (164 samples, 0.35%; +0.00%)</title><rect x="403.4" y="245" width="4.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="406.43" y="255.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (11 samples, 0.02%; +0.01%)</title><rect x="579.0" y="309" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="581.99" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="1143.0" y="501" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1146.00" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (71 samples, 0.15%; +0.00%)</title><rect x="917.3" y="341" width="1.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="920.31" y="351.5" ></text>
</g>
<g >
<title>local_schema_registry (15 samples, 0.03%; +0.01%)</title><rect x="978.2" y="357" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="981.16" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,051 samples, 10.75%; +0.01%)</title><rect x="300.7" y="373" width="126.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="303.67" y="383.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (54 samples, 0.11%; -0.01%)</title><rect x="856.4" y="389" width="1.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="859.35" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (6 samples, 0.01%; -0.00%)</title><rect x="676.5" y="469" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="679.47" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (10 samples, 0.02%; -0.01%)</title><rect x="378.0" y="197" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="380.97" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%; -0.00%)</title><rect x="681.0" y="485" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="683.99" y="495.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%; -0.01%)</title><rect x="617.9" y="405" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="620.90" y="415.5" ></text>
</g>
<g >
<title>executor&lt;test_read (4 samples, 0.01%; +0.01%)</title><rect x="47.5" y="501" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="50.48" y="511.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (5 samples, 0.01%; 0.00%)</title><rect x="617.8" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="620.77" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%; -0.00%)</title><rect x="914.4" y="309" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="917.44" y="319.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (70 samples, 0.15%; +0.00%)</title><rect x="1132.3" y="405" width="1.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1135.26" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (97 samples, 0.21%; +0.02%)</title><rect x="390.5" y="149" width="2.5" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="393.55" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (329 samples, 0.70%; +0.00%)</title><rect x="907.2" y="325" width="8.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="910.16" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%; -0.00%)</title><rect x="498.7" y="213" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="501.67" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%; -0.00%)</title><rect x="267.0" y="277" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="269.98" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (22 samples, 0.05%; -0.01%)</title><rect x="290.4" y="277" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="293.35" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (15 samples, 0.03%; -0.01%)</title><rect x="724.0" y="453" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="727.05" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; 0.00%)</title><rect x="869.6" y="341" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="872.58" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (4 samples, 0.01%; +0.01%)</title><rect x="445.8" y="341" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="448.83" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (22 samples, 0.05%; -0.01%)</title><rect x="918.5" y="325" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="921.54" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (11 samples, 0.02%; +0.01%)</title><rect x="771.3" y="357" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="774.27" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="444.7" y="341" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="447.70" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="151.7" y="245" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="154.69" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.01%; +0.01%)</title><rect x="151.8" y="245" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="154.82" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%; +0.00%)</title><rect x="845.6" y="293" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="848.58" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (4 samples, 0.01%; -0.01%)</title><rect x="803.9" y="309" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="806.91" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (4 samples, 0.01%; +0.00%)</title><rect x="785.4" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="788.40" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (30 samples, 0.06%; -0.05%)</title><rect x="381.5" y="181" width="0.8" height="15.0" fill="rgb(129,129,255)" rx="2" ry="2" />
<text  x="384.51" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (81 samples, 0.17%; -0.01%)</title><rect x="917.1" y="357" width="2.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="920.06" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="715.3" y="453" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="718.31" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (77 samples, 0.16%; +0.01%)</title><rect x="1044.7" y="245" width="1.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1047.67" y="255.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%; +0.01%)</title><rect x="244.7" y="197" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="247.71" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (102 samples, 0.22%; +0.02%)</title><rect x="855.3" y="437" width="2.6" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="858.30" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%; 0.00%)</title><rect x="655.7" y="485" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="658.68" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="521.5" y="229" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="524.47" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="758.7" y="389" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="761.69" y="399.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (58 samples, 0.12%; +0.03%)</title><rect x="246.2" y="165" width="1.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="249.22" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (58 samples, 0.12%; +0.00%)</title><rect x="815.6" y="213" width="1.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="818.55" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%; -0.00%)</title><rect x="1040.2" y="213" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1043.22" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (8 samples, 0.02%; -0.01%)</title><rect x="25.2" y="517" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="28.19" y="527.5" ></text>
</g>
<g >
<title>sstring_hash::operator (31 samples, 0.07%; 0.00%)</title><rect x="1064.9" y="293" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1067.90" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (67 samples, 0.14%; -0.00%)</title><rect x="789.0" y="373" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="791.97" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%; -0.00%)</title><rect x="19.5" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="22.51" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (10 samples, 0.02%; +0.01%)</title><rect x="72.9" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="75.89" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (153 samples, 0.33%; -0.00%)</title><rect x="560.6" y="389" width="3.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="563.56" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%; -0.00%)</title><rect x="526.9" y="277" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="529.92" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (14 samples, 0.03%; -0.01%)</title><rect x="955.6" y="357" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="958.57" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (16 samples, 0.03%; +0.00%)</title><rect x="1005.7" y="261" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1008.73" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10 samples, 0.02%; +0.01%)</title><rect x="631.7" y="437" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="634.66" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (43 samples, 0.09%; +0.01%)</title><rect x="848.5" y="309" width="1.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="851.49" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%; -0.00%)</title><rect x="518.9" y="181" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="521.88" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (19 samples, 0.04%; +0.01%)</title><rect x="50.2" y="485" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="53.22" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (26 samples, 0.06%; +0.00%)</title><rect x="604.9" y="421" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="607.95" y="431.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (7 samples, 0.01%; +0.00%)</title><rect x="342.3" y="181" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="345.32" y="191.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (14 samples, 0.03%; +0.00%)</title><rect x="824.3" y="117" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="827.32" y="127.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%; +0.01%)</title><rect x="1055.4" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1058.44" y="287.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%; -0.00%)</title><rect x="562.7" y="341" width="1.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="565.74" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (255 samples, 0.54%; -0.00%)</title><rect x="1112.7" y="405" width="6.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1115.73" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,447 samples, 11.59%; -0.02%)</title><rect x="296.1" y="405" width="136.7" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="299.08" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; 0.00%)</title><rect x="613.0" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="615.95" y="399.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%; +0.00%)</title><rect x="561.8" y="357" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="564.81" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%; -0.01%)</title><rect x="175.7" y="133" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="178.75" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (193 samples, 0.41%; +0.01%)</title><rect x="16.9" y="389" width="4.9" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="19.93" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (17 samples, 0.04%; -0.01%)</title><rect x="223.6" y="133" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="226.62" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (25 samples, 0.05%; +0.01%)</title><rect x="586.2" y="277" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="589.24" y="287.5" ></text>
</g>
<g >
<title>query::result::result (14 samples, 0.03%; +0.01%)</title><rect x="630.4" y="421" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="633.38" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (34 samples, 0.07%; -0.01%)</title><rect x="847.6" y="309" width="0.8" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="850.59" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (4 samples, 0.01%; -0.01%)</title><rect x="216.5" y="133" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="219.49" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (17 samples, 0.04%; -0.01%)</title><rect x="555.4" y="421" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="558.36" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,647 samples, 7.76%; -0.03%)</title><rect x="150.3" y="261" width="91.6" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="153.34" y="271.5" >partition_..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (9 samples, 0.02%; -0.02%)</title><rect x="771.7" y="405" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="774.70" y="415.5" ></text>
</g>
<g >
<title>database::find_uuid (5 samples, 0.01%; +0.01%)</title><rect x="785.6" y="405" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="788.63" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (16 samples, 0.03%; -0.01%)</title><rect x="661.0" y="485" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="664.01" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.04%; +0.00%)</title><rect x="1038.7" y="197" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1041.74" y="207.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%; 0.00%)</title><rect x="566.3" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="569.26" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,647 samples, 12.01%; -0.02%)</title><rect x="965.5" y="405" width="141.8" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="968.48" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (119 samples, 0.25%; -0.00%)</title><rect x="597.2" y="357" width="3.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="600.19" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (21 samples, 0.04%; +0.02%)</title><rect x="236.4" y="213" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="239.40" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (5 samples, 0.01%; +0.00%)</title><rect x="437.3" y="389" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="440.29" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.18%; +0.02%)</title><rect x="1126.5" y="389" width="2.1" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1129.53" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="612.8" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="615.78" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (895 samples, 1.90%; -0.01%)</title><rect x="920.5" y="405" width="22.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="923.54" y="415.5" >c..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (8 samples, 0.02%; +0.01%)</title><rect x="466.8" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="469.84" y="287.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (100 samples, 0.21%; +0.01%)</title><rect x="788.2" y="389" width="2.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="791.16" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (12 samples, 0.03%; 0.00%)</title><rect x="1147.8" y="485" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1150.80" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (106 samples, 0.23%; +0.00%)</title><rect x="761.3" y="373" width="2.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="764.25" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (43 samples, 0.09%; -0.01%)</title><rect x="17.4" y="277" width="1.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="20.41" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (34 samples, 0.07%; +0.00%)</title><rect x="764.1" y="357" width="0.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="767.11" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (4 samples, 0.01%; -0.00%)</title><rect x="552.4" y="373" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="555.35" y="383.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (22 samples, 0.05%; +0.03%)</title><rect x="239.3" y="245" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="242.26" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (11 samples, 0.02%; -0.01%)</title><rect x="669.0" y="437" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="671.96" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (4 samples, 0.01%; +0.00%)</title><rect x="234.5" y="197" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="237.52" y="207.5" ></text>
</g>
<g >
<title>operator new (67 samples, 0.14%; -0.00%)</title><rect x="1041.6" y="213" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1044.55" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (23 samples, 0.05%; -0.02%)</title><rect x="279.1" y="357" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="282.05" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (20 samples, 0.04%; -0.02%)</title><rect x="726.9" y="421" width="0.5" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="729.86" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (6 samples, 0.01%; -0.00%)</title><rect x="1105.9" y="373" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1108.92" y="383.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,837 samples, 3.91%; -0.05%)</title><rect x="795.1" y="373" width="46.2" height="15.0" fill="rgb(126,126,255)" rx="2" ry="2" />
<text  x="798.14" y="383.5" >serv..</text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (4 samples, 0.01%; 0.00%)</title><rect x="521.6" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="524.60" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%; +0.00%)</title><rect x="820.8" y="117" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="823.83" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%; -0.01%)</title><rect x="221.7" y="133" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="224.69" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (10 samples, 0.02%; -0.01%)</title><rect x="713.1" y="453" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="716.10" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (27 samples, 0.06%; +0.05%)</title><rect x="438.6" y="357" width="0.7" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="441.57" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (17 samples, 0.04%; -0.01%)</title><rect x="612.5" y="389" width="0.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="615.53" y="399.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.01%; 0.00%)</title><rect x="295.9" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="298.95" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (75 samples, 0.16%; 0.00%)</title><rect x="855.8" y="405" width="1.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="858.85" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; 0.00%)</title><rect x="609.4" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="612.44" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%; -0.01%)</title><rect x="247.7" y="213" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="250.67" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.00%)</title><rect x="935.9" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="938.88" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (4 samples, 0.01%; -0.00%)</title><rect x="237.5" y="229" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="240.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (29 samples, 0.06%; -0.03%)</title><rect x="138.8" y="245" width="0.8" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="141.84" y="255.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (11 samples, 0.02%; 0.00%)</title><rect x="1098.9" y="309" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1101.94" y="319.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (66 samples, 0.14%; +0.01%)</title><rect x="618.8" y="389" width="1.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="621.80" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%; 0.00%)</title><rect x="1064.0" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1066.97" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (18 samples, 0.04%; -0.01%)</title><rect x="295.1" y="389" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="298.10" y="399.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%; +0.00%)</title><rect x="809.4" y="245" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="812.38" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (19 samples, 0.04%; +0.02%)</title><rect x="997.9" y="261" width="0.5" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1000.94" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%; +0.01%)</title><rect x="516.9" y="197" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="519.90" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (99 samples, 0.21%; 0.00%)</title><rect x="749.8" y="309" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="752.75" y="319.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.01%; -0.01%)</title><rect x="542.5" y="277" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="545.48" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (8 samples, 0.02%; 0.00%)</title><rect x="664.7" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.70" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (11 samples, 0.02%; +0.00%)</title><rect x="329.7" y="149" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="332.67" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (68 samples, 0.14%; -0.01%)</title><rect x="834.7" y="325" width="1.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="837.68" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%; -0.00%)</title><rect x="437.2" y="389" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="440.17" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (5 samples, 0.01%; +0.01%)</title><rect x="1168.5" y="485" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1171.48" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (133 samples, 0.28%; -0.01%)</title><rect x="195.3" y="37" width="3.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="198.28" y="47.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (18 samples, 0.04%; 0.00%)</title><rect x="885.9" y="325" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.95" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (29 samples, 0.06%; -0.05%)</title><rect x="203.1" y="69" width="0.8" height="15.0" fill="rgb(126,126,255)" rx="2" ry="2" />
<text  x="206.14" y="79.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (7 samples, 0.01%; -0.01%)</title><rect x="639.4" y="389" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="642.42" y="399.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,541 samples, 3.28%; -0.00%)</title><rect x="798.0" y="341" width="38.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="800.98" y="351.5" >ser..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (4 samples, 0.01%; -0.00%)</title><rect x="827.4" y="245" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="830.38" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (16 samples, 0.03%; +0.03%)</title><rect x="423.8" y="293" width="0.4" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="426.81" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="420.6" y="245" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="423.60" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.02%; +0.00%)</title><rect x="655.9" y="485" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="658.91" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%; +0.00%)</title><rect x="987.0" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="990.05" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%; -0.01%)</title><rect x="162.3" y="197" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="165.29" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (6 samples, 0.01%; +0.01%)</title><rect x="592.0" y="341" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="595.02" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%; 0.00%)</title><rect x="1046.6" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1049.65" y="271.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (26 samples, 0.06%; -0.01%)</title><rect x="594.4" y="373" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="597.35" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (8 samples, 0.02%; 0.00%)</title><rect x="885.7" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.75" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; +0.00%)</title><rect x="253.9" y="165" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="256.90" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="777.8" y="405" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="780.80" y="415.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%; -0.01%)</title><rect x="690.8" y="469" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="693.83" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (11 samples, 0.02%; +0.00%)</title><rect x="567.5" y="421" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="570.49" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (7 samples, 0.01%; 0.00%)</title><rect x="919.7" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="922.72" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (20 samples, 0.04%; +0.00%)</title><rect x="124.1" y="309" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="127.05" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (160 samples, 0.34%; +0.01%)</title><rect x="410.7" y="197" width="4.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="413.73" y="207.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,123 samples, 2.39%; +0.02%)</title><rect x="805.5" y="309" width="28.2" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="808.46" y="319.5" >a..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%; +0.00%)</title><rect x="238.7" y="229" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="241.73" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%; 0.00%)</title><rect x="17.1" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.08" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (84 samples, 0.18%; +0.01%)</title><rect x="774.5" y="405" width="2.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="777.53" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%; +0.00%)</title><rect x="721.7" y="469" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="724.74" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; 0.00%)</title><rect x="879.2" y="437" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.22" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (25 samples, 0.05%; -0.01%)</title><rect x="278.1" y="325" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="281.15" y="335.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (4 samples, 0.01%; 0.00%)</title><rect x="402.4" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="405.45" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (570 samples, 1.21%; -0.01%)</title><rect x="1151.0" y="485" width="14.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1153.99" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%; -0.00%)</title><rect x="857.5" y="357" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="860.46" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (9 samples, 0.02%; -0.01%)</title><rect x="670.3" y="405" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="673.29" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (5 samples, 0.01%; +0.00%)</title><rect x="713.2" y="437" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="716.22" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (98 samples, 0.21%; -0.01%)</title><rect x="522.1" y="245" width="2.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="525.10" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (4 samples, 0.01%; 0.00%)</title><rect x="752.2" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="755.24" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.01%; +0.00%)</title><rect x="527.0" y="293" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="530.02" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (59 samples, 0.13%; +0.10%)</title><rect x="573.0" y="341" width="1.5" height="15.0" fill="rgb(255,42,42)" rx="2" ry="2" />
<text  x="575.99" y="351.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.16%; 0.00%)</title><rect x="1003.9" y="261" width="1.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1006.87" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; -0.00%)</title><rect x="1037.3" y="165" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1040.26" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.01%; -0.01%)</title><rect x="852.7" y="405" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="855.66" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (8 samples, 0.02%; +0.00%)</title><rect x="1095.0" y="293" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1097.95" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%; +0.01%)</title><rect x="840.3" y="277" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="843.28" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (5 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.54" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%; -0.04%)</title><rect x="776.6" y="389" width="0.7" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="779.64" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (6 samples, 0.01%; -0.00%)</title><rect x="364.0" y="165" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="366.96" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%; +0.01%)</title><rect x="221.5" y="149" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="224.51" y="159.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (4 samples, 0.01%; 0.00%)</title><rect x="1174.7" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.66" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (121 samples, 0.26%; +0.01%)</title><rect x="545.0" y="277" width="3.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="547.99" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="630.8" y="437" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="633.83" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (4 samples, 0.01%; +0.00%)</title><rect x="531.1" y="309" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="534.09" y="319.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%; 0.00%)</title><rect x="467.1" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="470.09" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (24 samples, 0.05%; -0.02%)</title><rect x="585.6" y="277" width="0.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="588.64" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (4 samples, 0.01%; +0.01%)</title><rect x="147.5" y="277" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="150.50" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1139.4" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.39" y="319.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (51 samples, 0.11%; +0.01%)</title><rect x="784.1" y="341" width="1.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="787.12" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (4 samples, 0.01%; +0.00%)</title><rect x="505.9" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="508.88" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (11 samples, 0.02%; -0.01%)</title><rect x="312.3" y="245" width="0.3" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="315.29" y="255.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (552 samples, 1.17%; +0.04%)</title><rect x="905.5" y="373" width="13.9" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="908.53" y="383.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (16 samples, 0.03%; -0.00%)</title><rect x="218.4" y="165" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="221.40" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="633.0" y="437" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="636.04" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="941.5" y="357" width="0.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="944.48" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%; +0.01%)</title><rect x="100.0" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="103.03" y="415.5" ></text>
</g>
<g >
<title>query::digester::digester (16 samples, 0.03%; -0.02%)</title><rect x="617.5" y="405" width="0.4" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="620.50" y="415.5" ></text>
</g>
<g >
<title>all (47,002 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (105 samples, 0.22%; +0.00%)</title><rect x="950.2" y="405" width="2.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="953.17" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (151 samples, 0.32%; -0.00%)</title><rect x="418.0" y="261" width="3.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="420.99" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (680 samples, 1.45%; +0.02%)</title><rect x="382.3" y="181" width="17.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="385.26" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (19 samples, 0.04%; +0.04%)</title><rect x="424.7" y="277" width="0.4" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="427.66" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (9 samples, 0.02%; -0.00%)</title><rect x="639.8" y="421" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="642.77" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (36 samples, 0.08%; +0.00%)</title><rect x="885.5" y="453" width="1.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="888.55" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (50 samples, 0.11%; -0.03%)</title><rect x="1165.3" y="485" width="1.3" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1168.30" y="495.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (25 samples, 0.05%; -0.02%)</title><rect x="765.0" y="373" width="0.6" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="768.02" y="383.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (14 samples, 0.03%; 0.00%)</title><rect x="1096.8" y="261" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1099.78" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (77 samples, 0.16%; +0.00%)</title><rect x="1156.3" y="421" width="1.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1159.28" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (62 samples, 0.13%; +0.01%)</title><rect x="813.3" y="181" width="1.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="816.34" y="191.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%; +0.01%)</title><rect x="576.3" y="277" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="579.30" y="287.5" ></text>
</g>
<g >
<title>query::result::builder::build (95 samples, 0.20%; +0.05%)</title><rect x="613.1" y="437" width="2.4" height="15.0" fill="rgb(255,122,122)" rx="2" ry="2" />
<text  x="616.13" y="447.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (33 samples, 0.07%; -0.00%)</title><rect x="476.6" y="293" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="479.61" y="303.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a59683b929e6b30d9803453a6167c92c7df06c25] (4 samples, 0.01%; +0.01%)</title><rect x="97.6" y="421" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="100.64" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%; +0.02%)</title><rect x="1118.1" y="325" width="0.5" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="1121.07" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (18 samples, 0.04%; +0.00%)</title><rect x="579.7" y="293" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="582.74" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (25 samples, 0.05%; +0.04%)</title><rect x="1024.5" y="197" width="0.7" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="1027.53" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.19%; +0.01%)</title><rect x="962.9" y="389" width="2.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="965.90" y="399.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (42 samples, 0.09%; +0.07%)</title><rect x="523.5" y="229" width="1.1" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="526.50" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%; -0.09%)</title><rect x="1135.0" y="421" width="0.2" height="15.0" fill="rgb(63,63,255)" rx="2" ry="2" />
<text  x="1138.02" y="431.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; +0.00%)</title><rect x="948.9" y="373" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="951.86" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (19 samples, 0.04%; 0.00%)</title><rect x="885.9" y="389" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.95" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (52 samples, 0.11%; -0.03%)</title><rect x="311.4" y="261" width="1.3" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="314.41" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%; -0.00%)</title><rect x="644.6" y="437" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="647.64" y="447.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt; (4 samples, 0.01%; -0.00%)</title><rect x="641.9" y="437" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="644.85" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (8 samples, 0.02%; 0.00%)</title><rect x="1139.9" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.89" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (10 samples, 0.02%; 0.00%)</title><rect x="884.9" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.90" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,097 samples, 12.97%; +0.01%)</title><rect x="956.5" y="421" width="153.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="959.52" y="431.5" >cql3::statements::s..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%; -0.01%)</title><rect x="420.0" y="229" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="423.05" y="239.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (14 samples, 0.03%; 0.00%)</title><rect x="402.9" y="229" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="405.90" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%; +0.01%)</title><rect x="689.4" y="485" width="0.5" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="692.43" y="495.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%; -0.00%)</title><rect x="719.7" y="485" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="722.73" y="495.5" ></text>
</g>
<g >
<title>operator delete (75 samples, 0.16%; +0.05%)</title><rect x="582.7" y="293" width="1.9" height="15.0" fill="rgb(255,129,129)" rx="2" ry="2" />
<text  x="585.70" y="303.5" ></text>
</g>
<g >
<title>std::type_info::operator== (11 samples, 0.02%; +0.01%)</title><rect x="1172.5" y="405" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1175.53" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%; +0.01%)</title><rect x="527.5" y="309" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="530.55" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (10 samples, 0.02%; 0.00%)</title><rect x="19.7" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.67" y="319.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (86 samples, 0.18%; +0.01%)</title><rect x="245.5" y="181" width="2.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="248.51" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (4 samples, 0.01%; 0.00%)</title><rect x="950.9" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="953.92" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (27 samples, 0.06%; +0.03%)</title><rect x="568.1" y="421" width="0.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="571.14" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (179 samples, 0.38%; +0.04%)</title><rect x="194.2" y="69" width="4.5" height="15.0" fill="rgb(255,150,150)" rx="2" ry="2" />
<text  x="197.17" y="79.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (189 samples, 0.40%; -0.02%)</title><rect x="773.2" y="421" width="4.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="776.18" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (26 samples, 0.06%; -0.01%)</title><rect x="835.7" y="309" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="838.74" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (15 samples, 0.03%; +0.01%)</title><rect x="66.1" y="437" width="0.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="69.11" y="447.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (33 samples, 0.07%; -0.00%)</title><rect x="224.6" y="133" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="227.63" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,180 samples, 2.51%; -0.03%)</title><rect x="1143.6" y="501" width="29.7" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="1146.63" y="511.5" >se..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%; +0.01%)</title><rect x="657.6" y="453" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="660.64" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (18 samples, 0.04%; +0.03%)</title><rect x="535.7" y="325" width="0.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="538.73" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.01%; +0.00%)</title><rect x="762.1" y="309" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="765.11" y="319.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (54 samples, 0.11%; +0.11%)</title><rect x="1176.4" y="629" width="1.3" height="15.0" fill="rgb(255,35,35)" rx="2" ry="2" />
<text  x="1179.37" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; -0.01%)</title><rect x="504.8" y="277" width="0.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="507.75" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (142 samples, 0.30%; +0.01%)</title><rect x="818.2" y="165" width="3.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="821.24" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (9 samples, 0.02%; -0.00%)</title><rect x="1150.7" y="485" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1153.74" y="495.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (4 samples, 0.01%; +0.00%)</title><rect x="962.3" y="341" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="965.35" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%; +0.00%)</title><rect x="815.7" y="197" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="818.70" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; -0.00%)</title><rect x="912.0" y="293" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="915.03" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (4 samples, 0.01%; -0.00%)</title><rect x="1156.1" y="437" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1159.13" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (10 samples, 0.02%; -0.01%)</title><rect x="627.1" y="437" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="630.06" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="549" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="559.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (13 samples, 0.03%; 0.00%)</title><rect x="608.2" y="405" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="611.16" y="415.5" ></text>
</g>
<g >
<title>schema::partition_key_size (4 samples, 0.01%; +0.00%)</title><rect x="1125.8" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1128.81" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (9 samples, 0.02%; +0.00%)</title><rect x="439.6" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="442.60" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%; -0.00%)</title><rect x="776.2" y="325" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="779.16" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (175 samples, 0.37%; -0.01%)</title><rect x="781.2" y="373" width="4.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="784.21" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%; +0.01%)</title><rect x="986.6" y="357" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="989.60" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.00%)</title><rect x="835.4" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="838.44" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (39 samples, 0.08%; -0.00%)</title><rect x="903.4" y="405" width="1.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="906.45" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (9 samples, 0.02%; -0.03%)</title><rect x="279.4" y="341" width="0.2" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="282.41" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,737 samples, 3.70%; -0.03%)</title><rect x="1057.2" y="357" width="43.6" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1060.22" y="367.5" >serv..</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (47 samples, 0.10%; 0.00%)</title><rect x="782.7" y="341" width="1.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="785.67" y="351.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (551 samples, 1.17%; -0.00%)</title><rect x="1081.1" y="293" width="13.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1084.12" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (12 samples, 0.03%; -0.06%)</title><rect x="293.7" y="357" width="0.3" height="15.0" fill="rgb(119,119,255)" rx="2" ry="2" />
<text  x="296.69" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (6 samples, 0.01%; -0.10%)</title><rect x="914.7" y="309" width="0.2" height="15.0" fill="rgb(49,49,255)" rx="2" ry="2" />
<text  x="917.75" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (20 samples, 0.04%; +0.01%)</title><rect x="450.9" y="293" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="453.87" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%; 0.00%)</title><rect x="661.2" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="664.16" y="479.5" ></text>
</g>
<g >
<title>posix_memalign (31 samples, 0.07%; -0.00%)</title><rect x="203.1" y="85" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="206.08" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.02%; -0.00%)</title><rect x="675.0" y="437" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="678.04" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (21 samples, 0.04%; +0.00%)</title><rect x="213.6" y="101" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="216.63" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%; +0.06%)</title><rect x="429.1" y="325" width="1.3" height="15.0" fill="rgb(255,115,115)" rx="2" ry="2" />
<text  x="432.11" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (89 samples, 0.19%; -0.01%)</title><rect x="697.5" y="485" width="2.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="700.48" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%; +0.01%)</title><rect x="914.2" y="293" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="917.19" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.03%; +0.01%)</title><rect x="1147.5" y="469" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1150.50" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%; -0.00%)</title><rect x="961.7" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="964.69" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (5 samples, 0.01%; -0.09%)</title><rect x="1059.9" y="341" width="0.2" height="15.0" fill="rgb(56,56,255)" rx="2" ry="2" />
<text  x="1062.93" y="351.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (8 samples, 0.02%; -0.01%)</title><rect x="212.5" y="117" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="215.47" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%; +0.00%)</title><rect x="918.9" y="293" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="921.91" y="303.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%; 0.00%)</title><rect x="37.0" y="453" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.04" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (94 samples, 0.20%; -0.03%)</title><rect x="314.5" y="245" width="2.4" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="317.53" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (49 samples, 0.10%; +0.00%)</title><rect x="693.4" y="453" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="696.37" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (6 samples, 0.01%; +0.01%)</title><rect x="917.6" y="325" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="920.61" y="335.5" ></text>
</g>
<g >
<title>auth::resource::resource (55 samples, 0.12%; -0.01%)</title><rect x="790.8" y="373" width="1.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="793.83" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (34 samples, 0.07%; +0.01%)</title><rect x="680.1" y="485" width="0.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="683.14" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,429 samples, 5.17%; -0.01%)</title><rect x="167.4" y="229" width="61.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="170.41" y="239.5" >partit..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%; -0.01%)</title><rect x="1122.2" y="405" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1125.22" y="415.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (6 samples, 0.01%; -0.00%)</title><rect x="18.3" y="245" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="21.31" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (53 samples, 0.11%; -0.01%)</title><rect x="425.4" y="277" width="1.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="428.37" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="389" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (5 samples, 0.01%; +0.00%)</title><rect x="986.9" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="989.92" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (18 samples, 0.04%; 0.00%)</title><rect x="885.9" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.95" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%; +0.01%)</title><rect x="788.4" y="357" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="791.42" y="367.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%; -0.01%)</title><rect x="343.9" y="181" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="346.85" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (98 samples, 0.21%; 0.00%)</title><rect x="873.4" y="373" width="2.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="876.45" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,891 samples, 4.02%; 0.00%)</title><rect x="172.1" y="181" width="47.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="175.13" y="191.5" >muta..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (23 samples, 0.05%; -0.01%)</title><rect x="678.7" y="485" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="681.65" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (5 samples, 0.01%; +0.00%)</title><rect x="624.9" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="627.93" y="447.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%; +0.01%)</title><rect x="645.0" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="647.99" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (13 samples, 0.03%; 0.00%)</title><rect x="765.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="768.32" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (26 samples, 0.06%; 0.00%)</title><rect x="413.7" y="165" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="416.74" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (13 samples, 0.03%; +0.02%)</title><rect x="129.4" y="261" width="0.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="132.35" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="1148.1" y="485" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1151.10" y="495.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%; 0.00%)</title><rect x="917.8" y="325" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="920.76" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (19 samples, 0.04%; +0.01%)</title><rect x="233.0" y="133" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="236.04" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; +0.01%)</title><rect x="731.6" y="485" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="734.60" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (866 samples, 1.84%; +0.04%)</title><rect x="570.5" y="373" width="21.7" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="573.50" y="383.5" >m..</text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (18 samples, 0.04%; -0.01%)</title><rect x="618.1" y="405" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="621.10" y="415.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (33 samples, 0.07%; +0.01%)</title><rect x="652.0" y="485" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="655.02" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (16 samples, 0.03%; +0.03%)</title><rect x="1114.4" y="373" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="1117.41" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (20 samples, 0.04%; -0.00%)</title><rect x="715.5" y="453" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="718.51" y="463.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="469" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%; +0.00%)</title><rect x="546.9" y="245" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="549.93" y="255.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (371 samples, 0.79%; +0.01%)</title><rect x="817.0" y="213" width="9.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="820.01" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (29 samples, 0.06%; -0.00%)</title><rect x="955.2" y="389" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="958.22" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (158 samples, 0.34%; +0.09%)</title><rect x="183.0" y="101" width="4.0" height="15.0" fill="rgb(255,70,70)" rx="2" ry="2" />
<text  x="186.03" y="111.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (146 samples, 0.31%; +0.03%)</title><rect x="980.6" y="341" width="3.6" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="983.57" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%; +0.01%)</title><rect x="947.4" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="950.41" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.02%; +0.00%)</title><rect x="426.9" y="341" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="429.92" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (16 samples, 0.03%; -0.00%)</title><rect x="961.1" y="405" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="964.06" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%; +0.00%)</title><rect x="941.4" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="944.38" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="213" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%; +0.00%)</title><rect x="156.7" y="197" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="159.67" y="207.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (61 samples, 0.13%; -0.01%)</title><rect x="74.5" y="405" width="1.5" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="77.50" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (47 samples, 0.10%; 0.00%)</title><rect x="17.3" y="293" width="1.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.33" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (208 samples, 0.44%; -0.03%)</title><rect x="1089.3" y="277" width="5.2" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="1092.30" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; 0.00%)</title><rect x="36.4" y="453" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="39.44" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (82 samples, 0.17%; 0.00%)</title><rect x="304.5" y="293" width="2.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="307.49" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%; -0.00%)</title><rect x="772.9" y="405" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="775.93" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (53 samples, 0.11%; -0.02%)</title><rect x="932.0" y="325" width="1.4" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="935.04" y="335.5" ></text>
</g>
<g >
<title>operator delete (49 samples, 0.10%; +0.01%)</title><rect x="708.6" y="485" width="1.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="711.63" y="495.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (4 samples, 0.01%; +0.01%)</title><rect x="743.2" y="453" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="746.23" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (6 samples, 0.01%; 0.00%)</title><rect x="691.2" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="694.23" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="942.8" y="357" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="945.84" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%; 0.00%)</title><rect x="17.1" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.08" y="255.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (12 samples, 0.03%; +0.00%)</title><rect x="1139.6" y="181" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1142.59" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (26 samples, 0.06%; -0.01%)</title><rect x="816.3" y="165" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="819.33" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; 0.00%)</title><rect x="603.1" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="606.09" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (29 samples, 0.06%; +0.00%)</title><rect x="862.3" y="373" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="865.25" y="383.5" ></text>
</g>
<g >
<title>posix_memalign (147 samples, 0.31%; -0.02%)</title><rect x="194.9" y="53" width="3.7" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="197.93" y="63.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%; -0.03%)</title><rect x="832.7" y="277" width="0.5" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="835.73" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (17 samples, 0.04%; +0.03%)</title><rect x="643.4" y="389" width="0.5" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="646.43" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (16 samples, 0.03%; +0.01%)</title><rect x="506.0" y="309" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="508.98" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (5 samples, 0.01%; 0.00%)</title><rect x="43.2" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="46.16" y="479.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (18 samples, 0.04%; +0.01%)</title><rect x="340.7" y="181" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="343.66" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%; -0.00%)</title><rect x="868.3" y="373" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="871.28" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,822 samples, 3.88%; +0.07%)</title><rect x="1009.4" y="293" width="45.8" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="1012.44" y="303.5" >serv..</text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="581" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="591.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (7 samples, 0.01%; 0.00%)</title><rect x="885.8" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.77" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; +0.01%)</title><rect x="827.7" y="229" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="830.65" y="239.5" ></text>
</g>
<g >
<title>partition_entry::read (80 samples, 0.17%; +0.05%)</title><rect x="529.1" y="309" width="2.0" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="532.08" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%; +0.01%)</title><rect x="862.7" y="341" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="865.73" y="351.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%; -0.01%)</title><rect x="512.5" y="245" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="515.53" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%; -0.00%)</title><rect x="842.7" y="357" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="845.67" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (6 samples, 0.01%; +0.01%)</title><rect x="242.0" y="261" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="244.97" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%; -0.01%)</title><rect x="830.7" y="197" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="833.67" y="207.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (29 samples, 0.06%; +0.01%)</title><rect x="96.5" y="437" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="99.54" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,773 samples, 5.90%; 0.00%)</title><rect x="987.3" y="357" width="69.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="990.35" y="367.5" >service..</text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (16 samples, 0.03%; -0.01%)</title><rect x="238.3" y="229" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="241.33" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (148 samples, 0.31%; +0.00%)</title><rect x="1050.9" y="277" width="3.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1053.94" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (6 samples, 0.01%; -0.00%)</title><rect x="926.6" y="341" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="929.60" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (5 samples, 0.01%; 0.00%)</title><rect x="797.8" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="800.78" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; 0.00%)</title><rect x="585.5" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="588.51" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%; -0.00%)</title><rect x="123.8" y="293" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="126.80" y="303.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (372 samples, 0.79%; +0.05%)</title><rect x="386.4" y="165" width="9.3" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="389.35" y="175.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.01%)</title><rect x="1145.2" y="485" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1148.16" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (10 samples, 0.02%; -0.02%)</title><rect x="33.6" y="469" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="36.60" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%; +0.01%)</title><rect x="829.3" y="229" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="832.34" y="239.5" ></text>
</g>
<g >
<title>make_combined_reader (927 samples, 1.97%; +0.06%)</title><rect x="446.0" y="341" width="23.2" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="448.95" y="351.5" >m..</text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (4 samples, 0.01%; +0.01%)</title><rect x="834.0" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="836.96" y="319.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (10 samples, 0.02%; +0.00%)</title><rect x="80.7" y="453" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="83.72" y="463.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (9 samples, 0.02%; -0.01%)</title><rect x="1009.2" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1012.22" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (24 samples, 0.05%; +0.00%)</title><rect x="434.3" y="421" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="437.28" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%; -0.02%)</title><rect x="145.9" y="277" width="0.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="148.95" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (7 samples, 0.01%; +0.00%)</title><rect x="643.3" y="389" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="646.26" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (95 samples, 0.20%; +0.04%)</title><rect x="993.2" y="309" width="2.4" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="996.20" y="319.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%; -0.00%)</title><rect x="799.6" y="309" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="802.61" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="485" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="495.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (114 samples, 0.24%; +0.02%)</title><rect x="427.8" y="373" width="2.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="430.80" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (5 samples, 0.01%; +0.00%)</title><rect x="916.9" y="357" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="919.93" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (4 samples, 0.01%; +0.01%)</title><rect x="734.7" y="501" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="737.72" y="511.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (44 samples, 0.09%; -0.00%)</title><rect x="750.5" y="293" width="1.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="753.51" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (10 samples, 0.02%; +0.00%)</title><rect x="687.7" y="469" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="690.72" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (881 samples, 1.87%; +0.01%)</title><rect x="570.4" y="389" width="22.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="573.43" y="399.5" >m..</text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (15 samples, 0.03%; +0.00%)</title><rect x="328.5" y="181" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="331.54" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (7 samples, 0.01%; +0.01%)</title><rect x="600.6" y="357" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="603.55" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (5 samples, 0.01%; 0.00%)</title><rect x="743.8" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="746.80" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (4 samples, 0.01%; +0.01%)</title><rect x="880.3" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="883.33" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.01%; 0.00%)</title><rect x="19.3" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.34" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (5 samples, 0.01%; +0.00%)</title><rect x="1123.3" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1126.30" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 0.02%; 0.00%)</title><rect x="21.0" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="24.00" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%; 0.00%)</title><rect x="707.1" y="437" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="1077.9" y="325" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1080.85" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (4 samples, 0.01%; +0.00%)</title><rect x="567.8" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="570.79" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%; +0.00%)</title><rect x="74.7" y="389" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="77.72" y="399.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (8 samples, 0.02%; 0.00%)</title><rect x="19.0" y="309" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.01" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (109 samples, 0.23%; +0.02%)</title><rect x="738.8" y="469" width="2.7" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="741.81" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%; +0.01%)</title><rect x="862.6" y="341" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="865.55" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%; -0.01%)</title><rect x="204.9" y="117" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="207.94" y="127.5" ></text>
</g>
<g >
<title>table::as_mutation_source (106 samples, 0.23%; -0.01%)</title><rect x="644.8" y="437" width="2.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="647.76" y="447.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (10 samples, 0.02%; +0.00%)</title><rect x="1097.7" y="309" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1100.66" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (45 samples, 0.10%; +0.02%)</title><rect x="640.3" y="437" width="1.1" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="643.29" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (4 samples, 0.01%; -0.01%)</title><rect x="831.5" y="277" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="834.50" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; -0.01%)</title><rect x="1153.5" y="421" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1156.55" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; -0.00%)</title><rect x="1139.3" y="453" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1142.31" y="463.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (44 samples, 0.09%; -0.01%)</title><rect x="1096.0" y="293" width="1.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1099.03" y="303.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%; -0.01%)</title><rect x="908.7" y="309" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="911.69" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (4 samples, 0.01%; +0.01%)</title><rect x="1037.9" y="165" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1040.94" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%; -0.01%)</title><rect x="947.3" y="405" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="950.26" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (14 samples, 0.03%; +0.02%)</title><rect x="76.9" y="453" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="79.91" y="463.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%; 0.00%)</title><rect x="707.1" y="373" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="383.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (73 samples, 0.16%; +0.01%)</title><rect x="819.9" y="149" width="1.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="822.87" y="159.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.01%)</title><rect x="602.6" y="389" width="0.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="605.59" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (13 samples, 0.03%; -0.00%)</title><rect x="715.6" y="437" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="718.61" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (8 samples, 0.02%; -0.00%)</title><rect x="773.0" y="389" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="775.98" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (7 samples, 0.01%; -0.07%)</title><rect x="1113.7" y="357" width="0.2" height="15.0" fill="rgb(87,87,255)" rx="2" ry="2" />
<text  x="1116.68" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (34 samples, 0.07%; -0.02%)</title><rect x="128.8" y="277" width="0.9" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="131.82" y="287.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (15 samples, 0.03%; +0.01%)</title><rect x="581.9" y="293" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="584.95" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (86 samples, 0.18%; +0.01%)</title><rect x="769.0" y="293" width="2.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="772.03" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (20 samples, 0.04%; 0.00%)</title><rect x="498.0" y="197" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="500.97" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.00%)</title><rect x="890.7" y="437" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="893.67" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%; -0.01%)</title><rect x="287.2" y="293" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="290.16" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%; +0.01%)</title><rect x="940.9" y="325" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="943.91" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (8 samples, 0.02%; +0.00%)</title><rect x="877.0" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="879.96" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; -0.01%)</title><rect x="1119.0" y="341" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1122.00" y="351.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (16 samples, 0.03%; -0.00%)</title><rect x="1114.0" y="357" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1117.01" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="880.2" y="405" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="883.18" y="415.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (22 samples, 0.05%; -0.03%)</title><rect x="327.6" y="181" width="0.6" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="330.63" y="191.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (8 samples, 0.02%; -0.00%)</title><rect x="202.3" y="85" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="205.28" y="95.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (14 samples, 0.03%; +0.01%)</title><rect x="792.8" y="357" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="795.81" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.01%; +0.01%)</title><rect x="1143.3" y="501" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1146.25" y="511.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (170 samples, 0.36%; +0.01%)</title><rect x="821.9" y="165" width="4.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="824.91" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%; -0.00%)</title><rect x="936.6" y="357" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="939.56" y="367.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (5 samples, 0.01%; +0.00%)</title><rect x="23.2" y="485" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="26.23" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (42 samples, 0.09%; +0.01%)</title><rect x="1152.0" y="437" width="1.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1154.97" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (37 samples, 0.08%; +0.02%)</title><rect x="789.7" y="341" width="0.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="792.70" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (25 samples, 0.05%; -0.02%)</title><rect x="426.1" y="261" width="0.6" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="429.07" y="271.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (4 samples, 0.01%; +0.00%)</title><rect x="961.8" y="373" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="964.82" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (10 samples, 0.02%; +0.00%)</title><rect x="914.1" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="917.07" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4 samples, 0.01%; -0.00%)</title><rect x="628.1" y="421" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="631.07" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.01%; -0.01%)</title><rect x="912.3" y="293" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="915.29" y="303.5" ></text>
</g>
<g >
<title>operator new (152 samples, 0.32%; 0.00%)</title><rect x="1025.3" y="245" width="3.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1028.26" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; 0.00%)</title><rect x="1145.7" y="469" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1148.69" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (15 samples, 0.03%; -0.01%)</title><rect x="1136.1" y="421" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1139.10" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (157 samples, 0.33%; +0.02%)</title><rect x="222.0" y="165" width="4.0" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="225.01" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%; -0.01%)</title><rect x="1152.6" y="421" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1155.57" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%; -0.00%)</title><rect x="833.3" y="277" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="836.33" y="287.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; -0.00%)</title><rect x="96.3" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="99.26" y="447.5" ></text>
</g>
<g >
<title>database::find_schema (75 samples, 0.16%; -0.01%)</title><rect x="779.3" y="389" width="1.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="782.28" y="399.5" ></text>
</g>
<g >
<title>schema::position (4 samples, 0.01%; 0.00%)</title><rect x="947.1" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="950.06" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; +0.01%)</title><rect x="741.1" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="744.07" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (95 samples, 0.20%; -0.00%)</title><rect x="424.3" y="293" width="2.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="427.31" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.00%)</title><rect x="468.8" y="325" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="471.85" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="1169.3" y="437" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1172.34" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (28 samples, 0.06%; -0.00%)</title><rect x="830.1" y="229" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="833.07" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%; -0.00%)</title><rect x="216.0" y="101" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="218.99" y="111.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%; +0.00%)</title><rect x="1054.3" y="197" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1057.28" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (106 samples, 0.23%; +0.08%)</title><rect x="404.7" y="213" width="2.6" height="15.0" fill="rgb(255,77,77)" rx="2" ry="2" />
<text  x="407.66" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (26 samples, 0.06%; +0.01%)</title><rect x="519.8" y="181" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="522.81" y="191.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (22 samples, 0.05%; -0.00%)</title><rect x="1065.1" y="261" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1068.08" y="271.5" ></text>
</g>
<g >
<title>db::block_for (7 samples, 0.01%; +0.00%)</title><rect x="1067.2" y="325" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1070.21" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (7 samples, 0.01%; +0.01%)</title><rect x="965.1" y="405" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="968.08" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (262 samples, 0.56%; 0.00%)</title><rect x="492.5" y="229" width="6.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="495.47" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="709.7" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="712.66" y="479.5" ></text>
</g>
<g >
<title>utils::array_search_gt (10 samples, 0.02%; +0.01%)</title><rect x="486.0" y="277" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="488.97" y="287.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%; +0.01%)</title><rect x="531.2" y="325" width="1.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="534.19" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.01%; 0.00%)</title><rect x="18.3" y="261" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="21.31" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.05%; +0.00%)</title><rect x="1064.2" y="277" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1067.17" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; +0.00%)</title><rect x="54.2" y="469" width="0.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="57.24" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (5 samples, 0.01%; 0.00%)</title><rect x="22.2" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.20" y="383.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%; +0.00%)</title><rect x="148.8" y="245" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="151.76" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (28 samples, 0.06%; -0.06%)</title><rect x="465.2" y="261" width="0.7" height="15.0" fill="rgb(105,105,255)" rx="2" ry="2" />
<text  x="468.16" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (12 samples, 0.03%; +0.00%)</title><rect x="962.4" y="341" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="965.45" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%; -0.00%)</title><rect x="567.4" y="421" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="570.36" y="431.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%; +0.02%)</title><rect x="813.9" y="149" width="0.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="816.87" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (4 samples, 0.01%; +0.00%)</title><rect x="1006.2" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1009.18" y="287.5" ></text>
</g>
<g >
<title>row::row (29 samples, 0.06%; +0.03%)</title><rect x="258.9" y="197" width="0.7" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="261.89" y="207.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (385 samples, 0.82%; +0.00%)</title><rect x="592.5" y="389" width="9.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="595.54" y="399.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (9 samples, 0.02%; +0.00%)</title><rect x="237.2" y="229" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="240.20" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (4 samples, 0.01%; -0.00%)</title><rect x="988.9" y="341" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="991.86" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%; +0.01%)</title><rect x="705.6" y="485" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="708.64" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; -0.01%)</title><rect x="636.5" y="405" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="639.48" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.01%)</title><rect x="947.2" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="950.16" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (26 samples, 0.06%; -0.01%)</title><rect x="1170.2" y="453" width="0.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1173.19" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%; +0.01%)</title><rect x="740.6" y="389" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="743.59" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6,181 samples, 13.15%; +0.01%)</title><rect x="118.8" y="341" width="155.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="121.76" y="351.5" >mutation_fragment_m..</text>
</g>
<g >
<title>operator new (8 samples, 0.02%; +0.01%)</title><rect x="1125.0" y="421" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1128.03" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%; +0.00%)</title><rect x="527.9" y="325" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="530.87" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (9 samples, 0.02%; +0.01%)</title><rect x="407.3" y="213" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="410.32" y="223.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (12 samples, 0.03%; +0.00%)</title><rect x="746.8" y="405" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="749.79" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="720.4" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="723.43" y="479.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,643 samples, 5.62%; +0.02%)</title><rect x="786.0" y="405" width="66.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="788.98" y="415.5" >service..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%; +0.00%)</title><rect x="434.7" y="405" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="437.73" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%; +0.00%)</title><rect x="217.6" y="165" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="220.57" y="175.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (45 samples, 0.10%; -0.00%)</title><rect x="822.3" y="149" width="1.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="825.28" y="159.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (8 samples, 0.02%; -0.00%)</title><rect x="919.9" y="373" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="922.92" y="383.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (29 samples, 0.06%; -0.00%)</title><rect x="854.3" y="421" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="857.27" y="431.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (11 samples, 0.02%; +0.01%)</title><rect x="428.8" y="341" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="431.81" y="351.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (10 samples, 0.02%; +0.00%)</title><rect x="17.9" y="245" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="20.86" y="255.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="988.7" y="341" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="991.73" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (30 samples, 0.06%; -0.01%)</title><rect x="513.0" y="245" width="0.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="515.96" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.01%; +0.00%)</title><rect x="46.3" y="485" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="49.33" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%; +0.01%)</title><rect x="819.2" y="117" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="822.17" y="127.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (35 samples, 0.07%; +0.01%)</title><rect x="339.8" y="181" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="342.76" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%; -0.01%)</title><rect x="709.9" y="485" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="712.91" y="495.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (279 samples, 0.59%; +0.01%)</title><rect x="492.0" y="245" width="7.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="495.05" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (9 samples, 0.02%; +0.01%)</title><rect x="124.6" y="309" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="127.56" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%; +0.01%)</title><rect x="882.7" y="485" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="885.71" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%; +0.00%)</title><rect x="549.5" y="341" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="552.49" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (112 samples, 0.24%; +0.00%)</title><rect x="244.9" y="213" width="2.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="247.86" y="223.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.00%)</title><rect x="287.0" y="293" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="289.99" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="19.7" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.74" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (4 samples, 0.01%; +0.01%)</title><rect x="428.3" y="357" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="431.33" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (8 samples, 0.02%; -0.01%)</title><rect x="12.6" y="581" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="15.56" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (9,767 samples, 20.78%; +0.02%)</title><rect x="893.3" y="453" width="245.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="896.26" y="463.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%; +0.01%)</title><rect x="162.0" y="181" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="165.04" y="191.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (27 samples, 0.06%; +0.03%)</title><rect x="321.5" y="165" width="0.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="324.46" y="175.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%; +0.00%)</title><rect x="414.6" y="181" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="417.62" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="638.0" y="373" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="641.03" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%; -0.00%)</title><rect x="864.6" y="405" width="1.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="867.58" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (26 samples, 0.06%; 0.00%)</title><rect x="707.1" y="485" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.10" y="495.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (8 samples, 0.02%; +0.01%)</title><rect x="374.3" y="197" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="377.30" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%; +0.01%)</title><rect x="1014.6" y="261" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1017.59" y="271.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (13 samples, 0.03%; -0.00%)</title><rect x="840.8" y="277" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="843.81" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (8 samples, 0.02%; +0.01%)</title><rect x="926.4" y="325" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="929.39" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%; 0.00%)</title><rect x="508.4" y="277" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="511.39" y="287.5" ></text>
</g>
<g >
<title>dht::tri_compare (81 samples, 0.17%; -0.04%)</title><rect x="489.3" y="261" width="2.1" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="492.34" y="271.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%; -0.00%)</title><rect x="516.3" y="197" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="519.32" y="207.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (5 samples, 0.01%; +0.00%)</title><rect x="753.3" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="756.27" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (142 samples, 0.30%; +0.01%)</title><rect x="423.2" y="309" width="3.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="426.16" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%; +0.01%)</title><rect x="676.2" y="421" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="679.19" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (17 samples, 0.04%; -0.03%)</title><rect x="465.9" y="261" width="0.4" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="468.86" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (445 samples, 0.95%; -0.01%)</title><rect x="708.3" y="501" width="11.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="711.30" y="511.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%; -0.00%)</title><rect x="608.7" y="405" width="0.9" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="611.71" y="415.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (323 samples, 0.69%; -0.03%)</title><rect x="208.5" y="165" width="8.1" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="211.48" y="175.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%; 0.00%)</title><rect x="1009.3" y="277" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1012.34" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%; +0.01%)</title><rect x="608.3" y="389" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="611.26" y="399.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (111 samples, 0.24%; -0.03%)</title><rect x="368.3" y="165" width="2.8" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="371.30" y="175.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (95 samples, 0.20%; 0.00%)</title><rect x="1170.9" y="453" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1173.87" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (108 samples, 0.23%; -0.01%)</title><rect x="1003.5" y="277" width="2.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1006.47" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (14 samples, 0.03%; +0.01%)</title><rect x="326.1" y="165" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="329.13" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (7 samples, 0.01%; +0.01%)</title><rect x="253.7" y="181" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="256.70" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%; +0.01%)</title><rect x="309.3" y="261" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="312.31" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="565" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="575.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (16 samples, 0.03%; +0.01%)</title><rect x="1131.6" y="421" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1134.63" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (15 samples, 0.03%; +0.01%)</title><rect x="227.3" y="149" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="230.26" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (144 samples, 0.31%; +0.01%)</title><rect x="846.2" y="341" width="3.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="849.18" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%; +0.01%)</title><rect x="776.5" y="373" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="779.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; +0.01%)</title><rect x="547.3" y="245" width="0.6" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="550.30" y="255.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%; 0.00%)</title><rect x="647.4" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="650.42" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (56 samples, 0.12%; -0.00%)</title><rect x="762.1" y="325" width="1.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="765.08" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%; +0.01%)</title><rect x="97.7" y="421" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="100.74" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (21 samples, 0.04%; 0.00%)</title><rect x="20.8" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="23.77" y="367.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (10 samples, 0.02%; +0.00%)</title><rect x="620.9" y="421" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="623.94" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%; -0.00%)</title><rect x="494.1" y="181" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="497.11" y="191.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (18 samples, 0.04%; +0.03%)</title><rect x="915.0" y="309" width="0.4" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="917.97" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (286 samples, 0.61%; -0.03%)</title><rect x="191.5" y="85" width="7.2" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="194.49" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%; +0.00%)</title><rect x="1043.8" y="245" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1046.84" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (7 samples, 0.01%; +0.01%)</title><rect x="427.3" y="357" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="430.30" y="367.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (37 samples, 0.08%; +0.01%)</title><rect x="158.2" y="213" width="0.9" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="161.20" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (5 samples, 0.01%; +0.01%)</title><rect x="644.0" y="405" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="647.01" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (11 samples, 0.02%; -0.00%)</title><rect x="992.6" y="341" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="995.57" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (258 samples, 0.55%; +0.02%)</title><rect x="710.1" y="485" width="6.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="713.06" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%; -0.01%)</title><rect x="102.0" y="389" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="105.01" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (21 samples, 0.04%; 0.00%)</title><rect x="1139.6" y="229" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.56" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%; +0.01%)</title><rect x="954.2" y="389" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="957.21" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%; 0.00%)</title><rect x="664.1" y="485" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="667.09" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.06%; +0.03%)</title><rect x="433.6" y="405" width="0.7" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="436.63" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (363 samples, 0.77%; -0.00%)</title><rect x="320.9" y="197" width="9.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="323.90" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%; +0.01%)</title><rect x="611.7" y="389" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="614.67" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (542 samples, 1.15%; +0.01%)</title><rect x="1109.7" y="421" width="13.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1112.69" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (9 samples, 0.02%; -0.01%)</title><rect x="1138.5" y="469" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="1141.46" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%; -0.01%)</title><rect x="677.5" y="485" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="680.50" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%; +0.01%)</title><rect x="1075.6" y="277" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1078.62" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (53 samples, 0.11%; -0.01%)</title><rect x="729.6" y="437" width="1.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="732.62" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (33 samples, 0.07%; +0.02%)</title><rect x="883.9" y="501" width="0.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="886.94" y="511.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (10 samples, 0.02%; 0.00%)</title><rect x="1138.8" y="245" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.81" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (10 samples, 0.02%; +0.00%)</title><rect x="903.2" y="405" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="906.20" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (17 samples, 0.04%; -0.02%)</title><rect x="731.1" y="453" width="0.4" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="734.07" y="463.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%; -0.00%)</title><rect x="1153.5" y="437" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1156.52" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.00%)</title><rect x="40.0" y="389" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="42.98" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (16 samples, 0.03%; +0.01%)</title><rect x="268.9" y="277" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="271.89" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="421" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (67 samples, 0.14%; -0.01%)</title><rect x="1060.3" y="309" width="1.7" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1063.28" y="319.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (10 samples, 0.02%; -0.00%)</title><rect x="1078.8" y="325" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1081.81" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (31 samples, 0.07%; +0.02%)</title><rect x="174.2" y="133" width="0.8" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="177.19" y="143.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (6 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.51" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (94 samples, 0.20%; +0.02%)</title><rect x="1101.2" y="357" width="2.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="1104.15" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (186 samples, 0.40%; -0.01%)</title><rect x="462.8" y="309" width="4.7" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="465.82" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%; +0.01%)</title><rect x="147.6" y="277" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="150.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (78 samples, 0.17%; +0.01%)</title><rect x="453.8" y="261" width="2.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="456.84" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%; +0.00%)</title><rect x="45.8" y="485" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="48.80" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%; 0.00%)</title><rect x="273.9" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="276.93" y="351.5" ></text>
</g>
<g >
<title>syscall (5 samples, 0.01%; +0.01%)</title><rect x="1174.2" y="501" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1177.23" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (40 samples, 0.09%; +0.00%)</title><rect x="685.0" y="437" width="1.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="687.96" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%; -0.01%)</title><rect x="974.0" y="373" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="977.04" y="383.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (6 samples, 0.01%; 0.00%)</title><rect x="22.8" y="341" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (85 samples, 0.18%; -0.00%)</title><rect x="828.6" y="261" width="2.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="831.63" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (13 samples, 0.03%; -0.01%)</title><rect x="857.3" y="373" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="860.33" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.01%; +0.01%)</title><rect x="260.5" y="261" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="263.53" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (4 samples, 0.01%; +0.00%)</title><rect x="112.7" y="389" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="115.73" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.01%)</title><rect x="1049.1" y="277" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1052.11" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; +0.01%)</title><rect x="813.0" y="213" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="815.97" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (11 samples, 0.02%; +0.01%)</title><rect x="294.3" y="357" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="297.29" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (123 samples, 0.26%; +0.00%)</title><rect x="610.0" y="405" width="3.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="613.02" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="501" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (29 samples, 0.06%; -0.00%)</title><rect x="337.9" y="181" width="0.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="340.93" y="191.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (46 samples, 0.10%; +0.00%)</title><rect x="493.2" y="213" width="1.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="496.20" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (51 samples, 0.11%; +0.00%)</title><rect x="607.2" y="421" width="1.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="610.21" y="431.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (37 samples, 0.08%; -0.01%)</title><rect x="948.7" y="389" width="0.9" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="951.71" y="399.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (84 samples, 0.18%; -0.02%)</title><rect x="622.2" y="421" width="2.1" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="625.22" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%; +0.00%)</title><rect x="266.8" y="261" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="269.83" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (15 samples, 0.03%; +0.02%)</title><rect x="518.4" y="197" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="521.43" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (6 samples, 0.01%; +0.00%)</title><rect x="643.9" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="646.86" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (41 samples, 0.09%; +0.00%)</title><rect x="983.2" y="309" width="1.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="986.21" y="319.5" ></text>
</g>
<g >
<title>db::filter_for_query (33 samples, 0.07%; +0.01%)</title><rect x="1066.7" y="341" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1069.71" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,185 samples, 2.52%; +0.03%)</title><rect x="1018.7" y="277" width="29.7" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="1021.68" y="287.5" >se..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%; +0.00%)</title><rect x="104.2" y="421" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="107.22" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (7 samples, 0.01%; -0.01%)</title><rect x="273.7" y="325" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="276.68" y="335.5" ></text>
</g>
<g >
<title>seastar::gate::enter (5 samples, 0.01%; +0.01%)</title><rect x="627.5" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="630.49" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (19 samples, 0.04%; +0.00%)</title><rect x="840.7" y="293" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="843.68" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (13 samples, 0.03%; -0.01%)</title><rect x="73.5" y="405" width="0.4" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="76.54" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (17 samples, 0.04%; -0.00%)</title><rect x="916.2" y="357" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="919.20" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (61 samples, 0.13%; +0.01%)</title><rect x="989.9" y="277" width="1.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="992.94" y="287.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%; 0.00%)</title><rect x="1139.3" y="469" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.31" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (126 samples, 0.27%; -0.01%)</title><rect x="1062.5" y="309" width="3.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1065.54" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (304 samples, 0.65%; 0.00%)</title><rect x="1081.2" y="277" width="7.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1084.24" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,330 samples, 15.60%; -0.07%)</title><rect x="111.6" y="405" width="184.0" height="15.0" fill="rgb(94,94,255)" rx="2" ry="2" />
<text  x="114.60" y="415.5" >flat_mutation_reader::p..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (14 samples, 0.03%; +0.00%)</title><rect x="22.1" y="405" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="25.08" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (420 samples, 0.89%; -0.03%)</title><rect x="666.1" y="485" width="10.5" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="669.08" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="229" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (324 samples, 0.69%; +0.01%)</title><rect x="451.5" y="293" width="8.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="454.45" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (14 samples, 0.03%; +0.01%)</title><rect x="239.8" y="245" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="242.81" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (283 samples, 0.60%; 0.00%)</title><rect x="16.1" y="581" width="7.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.10" y="591.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%; 0.00%)</title><rect x="1139.6" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.64" y="175.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%; 0.00%)</title><rect x="978.6" y="357" width="1.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="981.59" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (22 samples, 0.05%; -0.01%)</title><rect x="1125.3" y="421" width="0.5" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1128.25" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (22 samples, 0.05%; +0.00%)</title><rect x="954.7" y="373" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="957.66" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%; +0.01%)</title><rect x="287.3" y="293" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="290.31" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%; -0.00%)</title><rect x="933.4" y="341" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="936.37" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (4 samples, 0.01%; -0.01%)</title><rect x="407.5" y="245" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="410.54" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (13 samples, 0.03%; +0.01%)</title><rect x="1000.7" y="277" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1003.71" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (9,838 samples, 20.93%; +0.05%)</title><rect x="891.5" y="469" width="247.0" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="894.47" y="479.5" >seastar::noncopyable_function&lt;se..</text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%; 0.00%)</title><rect x="233.3" y="117" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="236.34" y="127.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (261 samples, 0.56%; 0.00%)</title><rect x="16.6" y="517" width="6.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.55" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (12 samples, 0.03%; +0.01%)</title><rect x="741.6" y="469" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="744.62" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.01%; +0.00%)</title><rect x="18.9" y="293" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="21.91" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (356 samples, 0.76%; +0.02%)</title><rect x="604.2" y="437" width="8.9" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="607.19" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (8 samples, 0.02%; 0.00%)</title><rect x="19.0" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.01" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (4 samples, 0.01%; -0.00%)</title><rect x="169.0" y="197" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="172.04" y="207.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%; -0.00%)</title><rect x="125.3" y="293" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="128.31" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;long, std::allocator&lt;long&gt; &gt;::_M_range_check (4 samples, 0.01%; +0.01%)</title><rect x="1163.9" y="453" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1166.89" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (6 samples, 0.01%; 0.00%)</title><rect x="517.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="520.40" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (36 samples, 0.08%; +0.03%)</title><rect x="102.5" y="421" width="0.9" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="105.46" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.01%; -0.00%)</title><rect x="996.4" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="999.36" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; 0.00%)</title><rect x="660.2" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="663.18" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (13 samples, 0.03%; 0.00%)</title><rect x="461.0" y="293" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="463.99" y="303.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (4 samples, 0.01%; -0.03%)</title><rect x="270.7" y="309" width="0.1" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="273.67" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (27 samples, 0.06%; -0.02%)</title><rect x="890.1" y="469" width="0.7" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="893.09" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (12 samples, 0.03%; +0.02%)</title><rect x="374.9" y="197" width="0.3" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="377.91" y="207.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (75 samples, 0.16%; +0.00%)</title><rect x="799.4" y="325" width="1.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="802.44" y="335.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%; +0.01%)</title><rect x="864.4" y="421" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="867.43" y="431.5" ></text>
</g>
<g >
<title>row::row (1,394 samples, 2.97%; +0.01%)</title><rect x="173.5" y="149" width="35.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="176.49" y="159.5" >ro..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%; 0.00%)</title><rect x="19.1" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.09" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.01%; -0.00%)</title><rect x="579.3" y="309" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="582.26" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%; -0.00%)</title><rect x="846.5" y="325" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="849.51" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%; -0.01%)</title><rect x="783.7" y="309" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="786.75" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (11 samples, 0.02%; +0.00%)</title><rect x="716.0" y="453" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="719.01" y="463.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (10 samples, 0.02%; -0.01%)</title><rect x="1044.2" y="245" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1047.16" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; -0.00%)</title><rect x="677.3" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="680.30" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%; 0.00%)</title><rect x="859.1" y="421" width="0.8" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="862.14" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%; -0.01%)</title><rect x="423.0" y="277" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="426.03" y="287.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (183 samples, 0.39%; +0.01%)</title><rect x="481.4" y="277" width="4.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="484.38" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%; +0.00%)</title><rect x="255.5" y="229" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="258.45" y="239.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%; +0.00%)</title><rect x="1169.0" y="453" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1172.04" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%; +0.01%)</title><rect x="1040.7" y="229" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1043.72" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (50 samples, 0.11%; -0.00%)</title><rect x="1158.2" y="453" width="1.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1161.22" y="463.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (653 samples, 1.39%; +0.02%)</title><rect x="756.8" y="421" width="16.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="759.78" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (718 samples, 1.53%; +0.04%)</title><rect x="1079.1" y="325" width="18.0" height="15.0" fill="rgb(255,143,143)" rx="2" ry="2" />
<text  x="1082.11" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (5 samples, 0.01%; 0.00%)</title><rect x="280.4" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="283.36" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="556.1" y="405" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="559.09" y="415.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (18 samples, 0.04%; +0.02%)</title><rect x="448.6" y="325" width="0.5" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="451.61" y="335.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (11 samples, 0.02%; -0.01%)</title><rect x="920.3" y="389" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="923.27" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%; -0.01%)</title><rect x="1068.6" y="341" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1071.57" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (6 samples, 0.01%; +0.00%)</title><rect x="138.3" y="245" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="141.29" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%; +0.01%)</title><rect x="856.8" y="357" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="859.80" y="367.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;cql3::raw_value&gt;::allocate (5 samples, 0.01%; +0.01%)</title><rect x="879.1" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="882.10" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%; +0.01%)</title><rect x="683.1" y="469" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="686.15" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (6 samples, 0.01%; 0.00%)</title><rect x="23.4" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.36" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; -0.00%)</title><rect x="157.2" y="165" width="0.8" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="160.24" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (42 samples, 0.09%; +0.01%)</title><rect x="433.2" y="421" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="436.23" y="431.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (6 samples, 0.01%; +0.00%)</title><rect x="908.5" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="911.54" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%; +0.00%)</title><rect x="40.8" y="437" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="43.80" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (9 samples, 0.02%; +0.00%)</title><rect x="624.7" y="421" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="627.70" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (153 samples, 0.33%; -0.02%)</title><rect x="463.2" y="293" width="3.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="466.23" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%; -0.01%)</title><rect x="100.5" y="373" width="0.6" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="103.50" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (5 samples, 0.01%; +0.01%)</title><rect x="891.3" y="469" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="894.35" y="479.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (49 samples, 0.10%; -0.01%)</title><rect x="912.5" y="293" width="1.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="915.54" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (12 samples, 0.03%; -0.00%)</title><rect x="947.6" y="405" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="950.58" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (135 samples, 0.29%; +0.01%)</title><rect x="561.0" y="373" width="3.4" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="564.01" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.04%; 0.00%)</title><rect x="705.0" y="453" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="708.04" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%; -0.00%)</title><rect x="718.3" y="469" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="721.32" y="479.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (23 samples, 0.05%; -0.00%)</title><rect x="541.9" y="277" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="544.91" y="287.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (10 samples, 0.02%; -0.01%)</title><rect x="839.8" y="309" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="842.76" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%; +0.01%)</title><rect x="76.7" y="453" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="79.65" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%; -0.00%)</title><rect x="79.7" y="453" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="82.72" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%; +0.01%)</title><rect x="41.2" y="453" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="44.18" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (4 samples, 0.01%; -0.02%)</title><rect x="70.1" y="389" width="0.1" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="73.10" y="399.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (40 samples, 0.09%; -0.01%)</title><rect x="775.4" y="373" width="1.0" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="778.36" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%; +0.01%)</title><rect x="851.4" y="293" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="854.43" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (67 samples, 0.14%; +0.00%)</title><rect x="592.7" y="373" width="1.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="595.67" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,171 samples, 4.62%; +0.00%)</title><rect x="1002.1" y="325" width="54.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1005.11" y="335.5" >servi..</text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (111 samples, 0.24%; +0.00%)</title><rect x="248.7" y="197" width="2.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="251.68" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (4 samples, 0.01%; -0.01%)</title><rect x="445.4" y="341" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="448.40" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (6 samples, 0.01%; -0.00%)</title><rect x="402.1" y="229" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="405.09" y="239.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%; +0.00%)</title><rect x="536.7" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="539.66" y="351.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (83 samples, 0.18%; -0.01%)</title><rect x="156.0" y="213" width="2.1" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="159.01" y="223.5" ></text>
</g>
<g >
<title>seastar::gate::leave (4 samples, 0.01%; 0.00%)</title><rect x="64.8" y="405" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="67.80" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (11 samples, 0.02%; 0.00%)</title><rect x="600.3" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="603.28" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (135 samples, 0.29%; +0.00%)</title><rect x="872.5" y="405" width="3.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="875.52" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (38 samples, 0.08%; -0.01%)</title><rect x="800.3" y="309" width="0.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="803.27" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (763 samples, 1.62%; -0.01%)</title><rect x="127.0" y="293" width="19.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="130.02" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%; -0.01%)</title><rect x="1105.0" y="357" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1107.99" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%; -0.02%)</title><rect x="564.0" y="309" width="0.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="567.02" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (18 samples, 0.04%; -0.00%)</title><rect x="569.4" y="421" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="572.40" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (50 samples, 0.11%; -0.02%)</title><rect x="541.5" y="293" width="1.2" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="544.45" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (513 samples, 1.09%; +0.00%)</title><rect x="719.5" y="501" width="12.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="722.48" y="511.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (9 samples, 0.02%; 0.00%)</title><rect x="16.3" y="517" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.30" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="330.7" y="213" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="333.75" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.04%; -0.00%)</title><rect x="678.8" y="469" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="681.78" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%; +0.01%)</title><rect x="1037.7" y="149" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1040.71" y="159.5" ></text>
</g>
<g >
<title>query_state::query_state (215 samples, 0.46%; 0.00%)</title><rect x="615.8" y="437" width="5.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="618.79" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (10 samples, 0.02%; -0.00%)</title><rect x="1174.5" y="453" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1177.51" y="463.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%; +0.00%)</title><rect x="551.0" y="325" width="0.8" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="553.99" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (316 samples, 0.67%; -0.02%)</title><rect x="1154.2" y="469" width="7.9" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="1157.17" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (6 samples, 0.01%; -0.00%)</title><rect x="716.3" y="469" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="719.29" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%; -0.00%)</title><rect x="1048.5" y="277" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1051.51" y="287.5" ></text>
</g>
<g >
<title>do_cql_test (276 samples, 0.59%; 0.00%)</title><rect x="16.3" y="549" width="6.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.28" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (23 samples, 0.05%; 0.00%)</title><rect x="78.5" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="81.51" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%; +0.01%)</title><rect x="358.8" y="149" width="0.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="361.76" y="159.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (911 samples, 1.94%; +0.03%)</title><rect x="808.3" y="277" width="22.8" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="811.27" y="287.5" >a..</text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,988 samples, 10.61%; +0.02%)</title><rect x="301.5" y="325" width="125.2" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="304.50" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%; +0.00%)</title><rect x="848.0" y="261" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="850.99" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (45,914 samples, 97.69%; -0.00%)</title><rect x="23.6" y="533" width="1152.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="26.56" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (31 samples, 0.07%; -0.01%)</title><rect x="767.3" y="309" width="0.8" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="770.33" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (60 samples, 0.13%; -0.00%)</title><rect x="232.0" y="165" width="1.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="235.01" y="175.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (8 samples, 0.02%; +0.01%)</title><rect x="293.0" y="325" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="295.99" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%; +0.01%)</title><rect x="792.6" y="357" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="795.56" y="367.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (9 samples, 0.02%; +0.01%)</title><rect x="1056.7" y="325" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1059.74" y="335.5" ></text>
</g>
<g >
<title>free (114 samples, 0.24%; +0.02%)</title><rect x="411.5" y="181" width="2.9" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="414.53" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (21 samples, 0.04%; +0.01%)</title><rect x="826.5" y="197" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="829.48" y="207.5" ></text>
</g>
<g >
<title>service::client_state::has_access (7 samples, 0.01%; 0.00%)</title><rect x="22.8" y="437" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.80" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (114 samples, 0.24%; +0.01%)</title><rect x="1085.9" y="229" width="2.9" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1088.91" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (21 samples, 0.04%; -0.01%)</title><rect x="459.0" y="277" width="0.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="462.03" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (92 samples, 0.20%; -0.01%)</title><rect x="1041.4" y="229" width="2.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1044.38" y="239.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%; +0.00%)</title><rect x="648.4" y="485" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="651.43" y="495.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%; -0.00%)</title><rect x="52.0" y="469" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="54.95" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (4 samples, 0.01%; +0.00%)</title><rect x="1152.8" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1155.84" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%; -0.00%)</title><rect x="1103.6" y="357" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1106.61" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (18 samples, 0.04%; +0.01%)</title><rect x="671.7" y="421" width="0.4" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="674.65" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="915.8" y="357" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="918.85" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (19 samples, 0.04%; -0.00%)</title><rect x="949.6" y="405" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="952.64" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (29 samples, 0.06%; +0.02%)</title><rect x="415.1" y="197" width="0.8" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="418.12" y="207.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%; 0.00%)</title><rect x="399.6" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="402.63" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (19 samples, 0.04%; +0.03%)</title><rect x="407.6" y="245" width="0.5" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="410.64" y="255.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (58 samples, 0.12%; +0.01%)</title><rect x="473.0" y="325" width="1.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="476.04" y="335.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (14 samples, 0.03%; -0.03%)</title><rect x="572.6" y="341" width="0.4" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="575.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (11 samples, 0.02%; -0.00%)</title><rect x="723.7" y="453" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="726.69" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%; +0.00%)</title><rect x="1115.5" y="389" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1118.46" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%; +0.01%)</title><rect x="270.8" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="273.84" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (13 samples, 0.03%; +0.01%)</title><rect x="467.8" y="325" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="470.80" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%; +0.01%)</title><rect x="548.6" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="551.56" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (16 samples, 0.03%; +0.01%)</title><rect x="271.3" y="325" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="274.35" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (143 samples, 0.30%; -0.01%)</title><rect x="952.9" y="421" width="3.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="955.86" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (79 samples, 0.17%; +0.00%)</title><rect x="1156.2" y="437" width="2.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1159.23" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (25 samples, 0.05%; +0.03%)</title><rect x="73.9" y="405" width="0.6" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="76.87" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (10 samples, 0.02%; 0.00%)</title><rect x="556.3" y="405" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="559.27" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (581 samples, 1.24%; +0.01%)</title><rect x="1029.1" y="245" width="14.6" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1032.10" y="255.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (6 samples, 0.01%; -0.00%)</title><rect x="872.8" y="389" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="875.82" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (13 samples, 0.03%; +0.00%)</title><rect x="1148.6" y="469" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1151.58" y="479.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (23 samples, 0.05%; +0.02%)</title><rect x="622.5" y="405" width="0.5" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="625.47" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (145 samples, 0.31%; +0.03%)</title><rect x="1185.2" y="613" width="3.6" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1188.20" y="623.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (244 samples, 0.52%; +0.01%)</title><rect x="1082.6" y="245" width="6.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1085.65" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (25 samples, 0.05%; 0.00%)</title><rect x="826.4" y="213" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.37" y="223.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (5 samples, 0.01%; +0.01%)</title><rect x="403.2" y="245" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="406.25" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (54 samples, 0.11%; -0.00%)</title><rect x="943.3" y="405" width="1.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="946.32" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (373 samples, 0.79%; +0.03%)</title><rect x="556.9" y="405" width="9.4" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="559.89" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (247 samples, 0.53%; -0.01%)</title><rect x="409.7" y="213" width="6.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="412.65" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (7 samples, 0.01%; +0.01%)</title><rect x="712.9" y="453" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="715.92" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (6 samples, 0.01%; +0.01%)</title><rect x="571.5" y="357" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="574.48" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%; -0.03%)</title><rect x="951.0" y="357" width="0.3" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="954.02" y="367.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (58 samples, 0.12%; +0.00%)</title><rect x="827.2" y="261" width="1.4" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="830.18" y="271.5" ></text>
</g>
<g >
<title>database::apply_in_memory (16 samples, 0.03%; 0.00%)</title><rect x="1138.7" y="293" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.71" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (100 samples, 0.21%; +0.00%)</title><rect x="245.2" y="197" width="2.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="248.16" y="207.5" ></text>
</g>
<g >
<title>free (23 samples, 0.05%; -0.03%)</title><rect x="416.3" y="197" width="0.5" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="419.25" y="207.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (17 samples, 0.04%; +0.00%)</title><rect x="1036.8" y="133" width="0.5" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1039.83" y="143.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (25 samples, 0.05%; -0.01%)</title><rect x="593.7" y="357" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="596.72" y="367.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (19 samples, 0.04%; 0.00%)</title><rect x="879.9" y="437" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="882.95" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (74 samples, 0.16%; +0.01%)</title><rect x="878.6" y="469" width="1.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="881.57" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (42 samples, 0.09%; +0.01%)</title><rect x="103.4" y="437" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="106.37" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (88 samples, 0.19%; +0.01%)</title><rect x="761.7" y="341" width="2.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="764.70" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%; -0.00%)</title><rect x="292.5" y="277" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="295.49" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%; +0.00%)</title><rect x="851.2" y="309" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="854.20" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%; +0.00%)</title><rect x="813.7" y="149" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="816.72" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (10 samples, 0.02%; +0.01%)</title><rect x="273.0" y="309" width="0.3" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="276.00" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (12 samples, 0.03%; +0.00%)</title><rect x="1078.1" y="325" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1081.06" y="335.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%; +0.01%)</title><rect x="657.2" y="469" width="0.7" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="660.16" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (2,986 samples, 6.35%; +0.02%)</title><rect x="777.9" y="421" width="75.0" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="780.92" y="431.5" >cql3::st..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%; -0.01%)</title><rect x="141.8" y="245" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="144.80" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="305.3" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="308.29" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (42 samples, 0.09%; -0.01%)</title><rect x="299.0" y="373" width="1.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="301.99" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (36 samples, 0.08%; +0.01%)</title><rect x="733.5" y="501" width="0.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="736.51" y="511.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; -0.02%)</title><rect x="580.5" y="277" width="0.4" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="583.49" y="287.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (4 samples, 0.01%; 0.00%)</title><rect x="26.1" y="517" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="29.14" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (46 samples, 0.10%; +0.00%)</title><rect x="149.1" y="261" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="152.13" y="271.5" ></text>
</g>
<g >
<title>database::query (5 samples, 0.01%; +0.00%)</title><rect x="1013.4" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1016.36" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%; +0.00%)</title><rect x="879.7" y="405" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="882.67" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (19 samples, 0.04%; -0.00%)</title><rect x="1075.4" y="293" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1078.37" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; -0.00%)</title><rect x="693.5" y="437" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="696.52" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%; -0.01%)</title><rect x="293.2" y="325" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="296.19" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (133 samples, 0.28%; -0.03%)</title><rect x="287.6" y="293" width="3.3" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="290.59" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (78 samples, 0.17%; -0.00%)</title><rect x="850.4" y="341" width="1.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="853.35" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.01%; 0.00%)</title><rect x="266.7" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="269.73" y="271.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (612 samples, 1.30%; -0.01%)</title><rect x="811.7" y="245" width="15.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="814.74" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%; -0.00%)</title><rect x="268.6" y="277" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="271.56" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%; +0.00%)</title><rect x="748.9" y="293" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="751.87" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%; -0.00%)</title><rect x="527.3" y="293" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="530.32" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (4 samples, 0.01%; -0.00%)</title><rect x="777.4" y="405" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="780.42" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (22 samples, 0.05%; +0.02%)</title><rect x="1114.8" y="373" width="0.6" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1117.81" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%; -0.04%)</title><rect x="1066.0" y="325" width="0.1" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1068.95" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (57 samples, 0.12%; -0.01%)</title><rect x="605.6" y="421" width="1.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="608.60" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (19 samples, 0.04%; +0.01%)</title><rect x="699.8" y="485" width="0.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="702.79" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (25 samples, 0.05%; +0.01%)</title><rect x="825.4" y="101" width="0.6" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="828.40" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%; +0.01%)</title><rect x="1142.8" y="501" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1145.75" y="511.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (90 samples, 0.19%; -0.00%)</title><rect x="558.1" y="373" width="2.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="561.15" y="383.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%; +0.00%)</title><rect x="739.9" y="421" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="742.89" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (31 samples, 0.07%; +0.01%)</title><rect x="39.4" y="421" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="42.42" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%; +0.00%)</title><rect x="1168.1" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1171.13" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (19 samples, 0.04%; +0.01%)</title><rect x="883.2" y="501" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="886.19" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (28 samples, 0.06%; -0.00%)</title><rect x="593.0" y="357" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="596.00" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (94 samples, 0.20%; +0.01%)</title><rect x="201.5" y="117" width="2.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="204.50" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,031 samples, 10.70%; +0.02%)</title><rect x="300.9" y="357" width="126.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="303.87" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::reactor::del_timer (9 samples, 0.02%; -0.02%)</title><rect x="727.6" y="405" width="0.2" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="730.56" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (105 samples, 0.22%; -0.02%)</title><rect x="198.9" y="117" width="2.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="201.87" y="127.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%; +0.00%)</title><rect x="252.2" y="213" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="255.22" y="223.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (26 samples, 0.06%; +0.00%)</title><rect x="344.0" y="181" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="346.98" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt; &gt;::~unique_ptr (6 samples, 0.01%; +0.01%)</title><rect x="1039.4" y="197" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1042.44" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (4 samples, 0.01%; 0.00%)</title><rect x="640.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="643.19" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (31 samples, 0.07%; +0.01%)</title><rect x="589.3" y="293" width="0.8" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="592.31" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (12 samples, 0.03%; -0.07%)</title><rect x="1141.3" y="501" width="0.3" height="15.0" fill="rgb(101,101,255)" rx="2" ry="2" />
<text  x="1144.35" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (14 samples, 0.03%; +0.01%)</title><rect x="452.9" y="261" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="455.88" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%; 0.00%)</title><rect x="1139.6" y="293" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1142.56" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (402 samples, 0.86%; +0.00%)</title><rect x="152.9" y="245" width="10.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="155.90" y="255.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%; +0.01%)</title><rect x="706.8" y="485" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="709.77" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (4 samples, 0.01%; -0.04%)</title><rect x="590.0" y="261" width="0.1" height="15.0" fill="rgb(147,147,255)" rx="2" ry="2" />
<text  x="592.98" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (61 samples, 0.13%; -0.01%)</title><rect x="258.1" y="213" width="1.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="261.12" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (13 samples, 0.03%; +0.01%)</title><rect x="24.1" y="517" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="27.08" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (64 samples, 0.14%; -0.01%)</title><rect x="1108.0" y="405" width="1.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1110.98" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%; -0.01%)</title><rect x="306.1" y="229" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="309.14" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (15 samples, 0.03%; +0.02%)</title><rect x="472.1" y="325" width="0.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="475.09" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%; -0.01%)</title><rect x="168.6" y="197" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="171.57" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (13 samples, 0.03%; +0.02%)</title><rect x="102.1" y="421" width="0.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="105.14" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (9 samples, 0.02%; +0.01%)</title><rect x="946.7" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="949.65" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (50 samples, 0.11%; +0.00%)</title><rect x="704.2" y="469" width="1.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="707.24" y="479.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%; +0.01%)</title><rect x="1099.4" y="325" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1102.37" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (67 samples, 0.14%; 0.00%)</title><rect x="813.2" y="197" width="1.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="816.22" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (111 samples, 0.24%; -0.00%)</title><rect x="873.1" y="389" width="2.8" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="876.12" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (10 samples, 0.02%; -0.00%)</title><rect x="904.1" y="389" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="907.13" y="399.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.10%; +0.01%)</title><rect x="1123.9" y="421" width="1.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1126.90" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%; +0.01%)</title><rect x="944.6" y="389" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="947.57" y="399.5" ></text>
</g>
<g >
<title>row::~row (5 samples, 0.01%; +0.01%)</title><rect x="417.7" y="261" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="420.66" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (12 samples, 0.03%; +0.01%)</title><rect x="460.7" y="293" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="463.67" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (257 samples, 0.55%; -0.00%)</title><rect x="16.6" y="501" width="6.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="19.55" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%; -0.00%)</title><rect x="500.8" y="325" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="503.76" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (235 samples, 0.50%; +0.01%)</title><rect x="220.2" y="181" width="5.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="223.23" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (696 samples, 1.48%; +0.04%)</title><rect x="574.5" y="341" width="17.4" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="577.47" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (4 samples, 0.01%; +0.01%)</title><rect x="1168.4" y="485" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1171.38" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (13 samples, 0.03%; +0.02%)</title><rect x="402.5" y="229" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="405.55" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (6 samples, 0.01%; -0.01%)</title><rect x="796.8" y="357" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="799.78" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%; +0.00%)</title><rect x="851.7" y="277" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="854.66" y="287.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (982 samples, 2.09%; +0.03%)</title><rect x="474.5" y="325" width="24.7" height="15.0" fill="rgb(255,154,154)" rx="2" ry="2" />
<text  x="477.50" y="335.5" >d..</text>
</g>
<g >
<title>seastar::memory::stats (4 samples, 0.01%; -0.01%)</title><rect x="535.4" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="538.38" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5,868 samples, 12.48%; +0.03%)</title><rect x="735.8" y="501" width="147.3" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="738.82" y="511.5" >seastar::internal:..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.00%)</title><rect x="416.7" y="181" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="419.71" y="191.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (17 samples, 0.04%; +0.02%)</title><rect x="727.8" y="421" width="0.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="730.79" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (17 samples, 0.04%; 0.00%)</title><rect x="870.0" y="357" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="873.03" y="367.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%; -0.03%)</title><rect x="35.7" y="469" width="0.9" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="38.73" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (6 samples, 0.01%; +0.01%)</title><rect x="320.7" y="181" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="323.65" y="191.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (123 samples, 0.26%; +0.09%)</title><rect x="934.4" y="389" width="3.1" height="15.0" fill="rgb(255,59,59)" rx="2" ry="2" />
<text  x="937.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%; +0.00%)</title><rect x="554.5" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="557.48" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (5 samples, 0.01%; -0.01%)</title><rect x="1056.6" y="325" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1059.62" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (35 samples, 0.07%; 0.00%)</title><rect x="885.6" y="437" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="888.57" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%; +0.01%)</title><rect x="841.0" y="261" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="844.04" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%; -0.00%)</title><rect x="1172.9" y="421" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1175.85" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (241 samples, 0.51%; 0.00%)</title><rect x="16.7" y="485" width="6.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.65" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (54 samples, 0.11%; 0.00%)</title><rect x="951.4" y="373" width="1.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="954.45" y="383.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%; +0.00%)</title><rect x="1157.0" y="389" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1159.96" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (44 samples, 0.09%; -0.03%)</title><rect x="909.0" y="309" width="1.1" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="912.02" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="1055.7" y="293" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1058.66" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (86 samples, 0.18%; -0.01%)</title><rect x="700.5" y="469" width="2.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="703.55" y="479.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (8 samples, 0.02%; 0.00%)</title><rect x="832.4" y="293" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="835.40" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%; +0.01%)</title><rect x="605.2" y="405" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="608.20" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="303.5" ></text>
</g>
<g >
<title>free (4 samples, 0.01%; +0.01%)</title><rect x="410.6" y="197" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="413.63" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%; -0.01%)</title><rect x="858.9" y="437" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="861.86" y="447.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.01%; -0.01%)</title><rect x="767.7" y="277" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="770.65" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; 0.00%)</title><rect x="858.0" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="860.96" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%; -0.00%)</title><rect x="1053.0" y="213" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1055.98" y="223.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.01%; +0.01%)</title><rect x="492.3" y="229" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="495.30" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; +0.00%)</title><rect x="138.4" y="245" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="141.44" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (4 samples, 0.01%; +0.00%)</title><rect x="743.4" y="453" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="746.43" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (17 samples, 0.04%; -0.02%)</title><rect x="1043.3" y="213" width="0.4" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="1046.26" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%; +0.01%)</title><rect x="452.7" y="245" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="455.66" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; -0.01%)</title><rect x="812.4" y="229" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="815.44" y="239.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (12 samples, 0.03%; +0.01%)</title><rect x="168.7" y="197" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="171.74" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%; -0.00%)</title><rect x="1119.1" y="405" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1122.13" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; 0.00%)</title><rect x="1006.0" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1009.00" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%; +0.01%)</title><rect x="801.7" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="804.70" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (229 samples, 0.49%; +0.02%)</title><rect x="229.0" y="213" width="5.7" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="231.99" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (4 samples, 0.01%; +0.00%)</title><rect x="984.5" y="341" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="987.46" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%; -0.01%)</title><rect x="527.4" y="293" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="530.42" y="303.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (59 samples, 0.13%; -0.01%)</title><rect x="1162.5" y="469" width="1.5" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1165.51" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (4 samples, 0.01%; +0.00%)</title><rect x="730.8" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="733.82" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (114 samples, 0.24%; +0.01%)</title><rect x="37.3" y="453" width="2.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="40.34" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.01%; 0.00%)</title><rect x="1174.5" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1177.51" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.04%; -0.00%)</title><rect x="366.8" y="149" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="369.85" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.00%)</title><rect x="934.0" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="936.98" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%; 0.00%)</title><rect x="23.2" y="533" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="26.23" y="543.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%; -0.00%)</title><rect x="791.5" y="325" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="794.50" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (37 samples, 0.08%; +0.00%)</title><rect x="461.7" y="293" width="0.9" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="464.67" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%; +0.00%)</title><rect x="810.7" y="213" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="813.73" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (4 samples, 0.01%; 0.00%)</title><rect x="125.5" y="293" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="128.51" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (3,038 samples, 6.46%; -0.01%)</title><rect x="163.0" y="245" width="76.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="165.99" y="255.5" >partitio..</text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (618 samples, 1.31%; +0.00%)</title><rect x="811.6" y="261" width="15.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="814.59" y="271.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%; +0.01%)</title><rect x="692.6" y="453" width="0.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="695.59" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (4 samples, 0.01%; +0.00%)</title><rect x="564.2" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="567.20" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (8 samples, 0.02%; +0.01%)</title><rect x="202.5" y="101" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="205.48" y="111.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (11 samples, 0.02%; -0.00%)</title><rect x="985.4" y="357" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="988.39" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%; 0.00%)</title><rect x="792.1" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="795.08" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%; +0.00%)</title><rect x="730.4" y="421" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="733.42" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%; -0.03%)</title><rect x="404.2" y="229" width="0.3" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="407.15" y="239.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (4 samples, 0.01%; +0.00%)</title><rect x="962.6" y="325" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="965.57" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,001 samples, 10.64%; 0.00%)</title><rect x="301.2" y="341" width="125.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="304.25" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (10 samples, 0.02%; +0.01%)</title><rect x="400.1" y="181" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="403.06" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="858.1" y="437" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="861.06" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%; -0.01%)</title><rect x="915.6" y="357" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="918.62" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (80 samples, 0.17%; +0.01%)</title><rect x="841.4" y="389" width="2.0" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="844.44" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (111 samples, 0.24%; -0.01%)</title><rect x="725.8" y="437" width="2.8" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="728.83" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (24 samples, 0.05%; +0.00%)</title><rect x="819.0" y="133" width="0.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="822.02" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (7 samples, 0.01%; -0.00%)</title><rect x="81.2" y="453" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="84.17" y="463.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%; -0.00%)</title><rect x="250.5" y="165" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="253.53" y="175.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; -0.01%)</title><rect x="505.8" y="309" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="508.75" y="319.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (5 samples, 0.01%; 0.00%)</title><rect x="1038.1" y="165" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.14" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (6 samples, 0.01%; 0.00%)</title><rect x="884.9" y="389" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.92" y="399.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (4 samples, 0.01%; 0.00%)</title><rect x="22.1" y="373" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.10" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (201 samples, 0.43%; 0.00%)</title><rect x="16.9" y="421" width="5.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="19.85" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (5 samples, 0.01%; -0.00%)</title><rect x="639.5" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="642.47" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%; -0.02%)</title><rect x="247.9" y="213" width="0.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="250.95" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%; -0.03%)</title><rect x="1032.3" y="165" width="0.2" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="1035.34" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (5 samples, 0.01%; -0.04%)</title><rect x="472.0" y="325" width="0.1" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="474.96" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%; +0.01%)</title><rect x="198.7" y="101" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="201.69" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (17 samples, 0.04%; -0.00%)</title><rect x="452.5" y="261" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="455.46" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (19 samples, 0.04%; +0.01%)</title><rect x="1076.3" y="309" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1079.27" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%; -0.01%)</title><rect x="294.7" y="357" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="297.72" y="367.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.03%; -0.00%)</title><rect x="15.8" y="613" width="0.3" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="18.80" y="623.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (96 samples, 0.20%; -0.03%)</title><rect x="621.9" y="437" width="2.4" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="624.92" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (136 samples, 0.29%; -0.04%)</title><rect x="159.1" y="229" width="3.4" height="15.0" fill="rgb(150,150,255)" rx="2" ry="2" />
<text  x="162.13" y="239.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (121 samples, 0.26%; +0.01%)</title><rect x="12.8" y="581" width="3.0" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="15.76" y="591.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,536 samples, 9.65%; -0.02%)</title><rect x="147.1" y="293" width="113.9" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="150.08" y="303.5" >seastar::do_un..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.04%; -0.01%)</title><rect x="421.4" y="229" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="424.35" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.01%; 0.00%)</title><rect x="17.2" y="261" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="20.18" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,440 samples, 7.32%; -0.01%)</title><rect x="316.9" y="245" width="86.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="319.89" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (145 samples, 0.31%; +0.00%)</title><rect x="36.7" y="469" width="3.6" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="39.69" y="479.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (4 samples, 0.01%; +0.01%)</title><rect x="674.9" y="453" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="677.91" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; +0.01%)</title><rect x="45.4" y="469" width="0.1" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="48.37" y="479.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (66 samples, 0.14%; +0.00%)</title><rect x="806.1" y="293" width="1.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="809.06" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (50 samples, 0.11%; +0.01%)</title><rect x="1151.8" y="453" width="1.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1154.79" y="463.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%; -0.01%)</title><rect x="108.9" y="421" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="111.94" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (12 samples, 0.03%; +0.01%)</title><rect x="725.2" y="437" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="728.20" y="447.5" ></text>
</g>
<g >
<title>row::external_memory_usage (296 samples, 0.63%; +0.01%)</title><rect x="209.2" y="149" width="7.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="212.16" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.01%)</title><rect x="578.6" y="309" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="581.56" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.03%; -0.01%)</title><rect x="399.3" y="181" width="0.3" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="402.33" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,756 samples, 10.12%; -0.02%)</title><rect x="303.7" y="309" width="119.4" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="306.73" y="319.5" >std::__invoke_..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (4 samples, 0.01%; 0.00%)</title><rect x="729.5" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="732.47" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; -0.00%)</title><rect x="891.2" y="469" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="894.20" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (93 samples, 0.20%; -0.04%)</title><rect x="1128.8" y="405" width="2.3" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1131.77" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.04%; +0.01%)</title><rect x="1109.1" y="389" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1112.11" y="399.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (989 samples, 2.10%; -0.01%)</title><rect x="503.0" y="325" width="24.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="506.04" y="335.5" >m..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (16 samples, 0.03%; -0.01%)</title><rect x="830.4" y="213" width="0.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="833.37" y="223.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (37 samples, 0.08%; +0.05%)</title><rect x="1141.8" y="501" width="1.0" height="15.0" fill="rgb(255,133,133)" rx="2" ry="2" />
<text  x="1144.82" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (14 samples, 0.03%; +0.02%)</title><rect x="70.8" y="389" width="0.3" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="73.78" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (26 samples, 0.06%; -0.01%)</title><rect x="39.5" y="405" width="0.7" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="42.52" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%; -0.01%)</title><rect x="697.8" y="469" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="700.79" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%; 0.00%)</title><rect x="884.9" y="437" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="887.90" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (42 samples, 0.09%; +0.01%)</title><rect x="396.2" y="165" width="1.1" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="399.22" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%; -0.01%)</title><rect x="560.1" y="357" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="563.13" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (53 samples, 0.11%; +0.00%)</title><rect x="629.5" y="437" width="1.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="632.47" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (4 samples, 0.01%; +0.01%)</title><rect x="1006.5" y="309" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1009.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%; +0.00%)</title><rect x="591.8" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="594.77" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (5 samples, 0.01%; 0.00%)</title><rect x="73.2" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="76.16" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%; 0.00%)</title><rect x="815.8" y="181" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.81" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (51 samples, 0.11%; +0.01%)</title><rect x="690.2" y="485" width="1.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="693.18" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (23 samples, 0.05%; -0.00%)</title><rect x="884.8" y="501" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="887.84" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%; +0.01%)</title><rect x="816.1" y="181" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="819.08" y="191.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (7 samples, 0.01%; +0.01%)</title><rect x="718.8" y="453" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="721.80" y="463.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (9 samples, 0.02%; +0.01%)</title><rect x="1078.6" y="325" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1081.58" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (14 samples, 0.03%; -0.01%)</title><rect x="233.5" y="165" width="0.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="236.51" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (130 samples, 0.28%; +0.01%)</title><rect x="1073.0" y="309" width="3.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1075.96" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (31 samples, 0.07%; +0.01%)</title><rect x="142.1" y="245" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="145.05" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (79 samples, 0.17%; +0.02%)</title><rect x="801.9" y="309" width="2.0" height="15.0" fill="rgb(255,171,171)" rx="2" ry="2" />
<text  x="804.92" y="319.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%; -0.01%)</title><rect x="32.5" y="485" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="35.54" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (28 samples, 0.06%; +0.00%)</title><rect x="21.9" y="469" width="0.7" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="24.93" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (7 samples, 0.01%; -0.01%)</title><rect x="1049.5" y="277" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="1052.51" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (4 samples, 0.01%; -0.01%)</title><rect x="462.7" y="309" width="0.1" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="465.72" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%; -0.01%)</title><rect x="676.1" y="437" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="679.07" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (323 samples, 0.69%; -0.01%)</title><rect x="818.1" y="181" width="8.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="821.06" y="191.5" ></text>
</g>
<g >
<title>database::do_apply (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="341" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="351.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (4 samples, 0.01%; 0.00%)</title><rect x="707.9" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.85" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.16%; +0.00%)</title><rect x="1003.9" y="245" width="1.8" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1006.89" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (17 samples, 0.04%; -0.00%)</title><rect x="273.3" y="325" width="0.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="276.25" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%; -0.00%)</title><rect x="1040.4" y="213" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1043.40" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="389" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="399.5" ></text>
</g>
<g >
<title>__tls_init (19 samples, 0.04%; +0.01%)</title><rect x="501.6" y="309" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="504.59" y="319.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%; +0.01%)</title><rect x="234.4" y="197" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="237.37" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (92 samples, 0.20%; +0.02%)</title><rect x="997.5" y="277" width="2.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="1000.52" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (95 samples, 0.20%; 0.00%)</title><rect x="463.9" y="277" width="2.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="466.90" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (87 samples, 0.19%; -0.01%)</title><rect x="1132.0" y="421" width="2.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1135.03" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (9 samples, 0.02%; +0.01%)</title><rect x="291.1" y="309" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="294.10" y="319.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (45 samples, 0.10%; +0.00%)</title><rect x="1074.2" y="293" width="1.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1077.24" y="303.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (12 samples, 0.03%; +0.00%)</title><rect x="776.0" y="357" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="778.99" y="367.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,397 samples, 11.48%; +0.01%)</title><rect x="742.0" y="469" width="135.5" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="745.02" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (21 samples, 0.04%; -0.03%)</title><rect x="821.1" y="117" width="0.6" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="824.13" y="127.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (614 samples, 1.31%; -0.00%)</title><rect x="129.8" y="277" width="15.4" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="132.78" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (4 samples, 0.01%; 0.00%)</title><rect x="22.2" y="325" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.23" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (86 samples, 0.18%; -0.01%)</title><rect x="428.4" y="357" width="2.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="431.43" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (8 samples, 0.02%; +0.00%)</title><rect x="233.9" y="181" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="236.94" y="191.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (22 samples, 0.05%; +0.00%)</title><rect x="52.6" y="469" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="55.58" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (112 samples, 0.24%; -0.03%)</title><rect x="231.1" y="181" width="2.8" height="15.0" fill="rgb(168,168,255)" rx="2" ry="2" />
<text  x="234.05" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (4 samples, 0.01%; +0.01%)</title><rect x="601.4" y="357" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="604.41" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (24 samples, 0.05%; -0.00%)</title><rect x="842.8" y="357" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="845.79" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::build (14 samples, 0.03%; +0.03%)</title><rect x="61.1" y="453" width="0.3" height="15.0" fill="rgb(255,164,164)" rx="2" ry="2" />
<text  x="64.06" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (36 samples, 0.08%; -0.03%)</title><rect x="101.2" y="405" width="0.9" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="104.23" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%; +0.01%)</title><rect x="944.7" y="405" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="947.67" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (38 samples, 0.08%; -0.00%)</title><rect x="713.9" y="437" width="1.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="716.90" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (37 samples, 0.08%; +0.01%)</title><rect x="249.1" y="181" width="0.9" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="252.08" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.01%; -0.00%)</title><rect x="632.9" y="437" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="635.89" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%; -0.00%)</title><rect x="1064.3" y="261" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1067.32" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (42 samples, 0.09%; -0.00%)</title><rect x="232.5" y="149" width="1.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="235.46" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%; +0.01%)</title><rect x="597.4" y="341" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="600.44" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (39 samples, 0.08%; +0.00%)</title><rect x="631.9" y="437" width="1.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="634.91" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (10 samples, 0.02%; +0.01%)</title><rect x="947.9" y="405" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="950.88" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%; -0.01%)</title><rect x="602.0" y="373" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="605.03" y="383.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (23 samples, 0.05%; +0.04%)</title><rect x="472.5" y="325" width="0.5" height="15.0" fill="rgb(255,136,136)" rx="2" ry="2" />
<text  x="475.47" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.01%; -0.01%)</title><rect x="526.0" y="277" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="528.96" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (112 samples, 0.24%; -0.03%)</title><rect x="662.1" y="501" width="2.8" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="665.11" y="511.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (184 samples, 0.39%; -0.01%)</title><rect x="747.7" y="389" width="4.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="750.72" y="399.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.12%; -0.01%)</title><rect x="454.4" y="245" width="1.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="457.41" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (37 samples, 0.08%; -0.00%)</title><rect x="803.0" y="293" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="805.98" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (6 samples, 0.01%; +0.00%)</title><rect x="417.1" y="213" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="420.08" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (5 samples, 0.01%; +0.01%)</title><rect x="1099.5" y="341" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1102.50" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%; 0.00%)</title><rect x="815.4" y="213" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="818.35" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,409 samples, 5.13%; -0.06%)</title><rect x="167.7" y="213" width="60.4" height="15.0" fill="rgb(115,115,255)" rx="2" ry="2" />
<text  x="170.66" y="223.5" >logall..</text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (22 samples, 0.05%; +0.04%)</title><rect x="135.1" y="245" width="0.6" height="15.0" fill="rgb(255,147,147)" rx="2" ry="2" />
<text  x="138.12" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%; +0.00%)</title><rect x="811.6" y="245" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="814.64" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%; +0.00%)</title><rect x="791.9" y="341" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="794.91" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (16 samples, 0.03%; +0.01%)</title><rect x="554.8" y="405" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="557.76" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (59 samples, 0.13%; +0.02%)</title><rect x="1095.7" y="309" width="1.4" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="1098.65" y="319.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (9 samples, 0.02%; +0.00%)</title><rect x="1175.9" y="469" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1178.89" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; -0.01%)</title><rect x="33.4" y="485" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="36.42" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%; 0.00%)</title><rect x="530.4" y="261" width="0.7" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="533.38" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (27 samples, 0.06%; -0.00%)</title><rect x="625.3" y="437" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="628.26" y="447.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (7 samples, 0.01%; +0.01%)</title><rect x="512.8" y="245" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="515.78" y="255.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (9 samples, 0.02%; +0.01%)</title><rect x="819.4" y="117" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="822.40" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (139 samples, 0.30%; -0.01%)</title><rect x="517.6" y="213" width="3.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="520.55" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%; +0.01%)</title><rect x="1050.4" y="277" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="1053.44" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%; -0.01%)</title><rect x="918.6" y="309" width="0.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="921.64" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume (12 samples, 0.03%; 0.00%)</title><rect x="707.2" y="277" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.20" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (5 samples, 0.01%; +0.01%)</title><rect x="23.8" y="517" width="0.2" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="26.83" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (21 samples, 0.04%; +0.01%)</title><rect x="828.1" y="213" width="0.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="831.11" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (9 samples, 0.02%; -0.00%)</title><rect x="955.0" y="357" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="957.99" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%; -0.01%)</title><rect x="750.3" y="293" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="753.33" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (6 samples, 0.01%; +0.01%)</title><rect x="900.4" y="421" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="903.36" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (372 samples, 0.79%; -0.06%)</title><rect x="66.8" y="421" width="9.3" height="15.0" fill="rgb(115,115,255)" rx="2" ry="2" />
<text  x="69.76" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (16 samples, 0.03%; +0.02%)</title><rect x="134.7" y="229" width="0.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="137.67" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (19 samples, 0.04%; -0.00%)</title><rect x="161.7" y="213" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="164.74" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (4 samples, 0.01%; +0.00%)</title><rect x="785.5" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="788.50" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (13 samples, 0.03%; -0.02%)</title><rect x="737.5" y="485" width="0.3" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="740.45" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%; +0.00%)</title><rect x="1038.6" y="197" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1041.56" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (62 samples, 0.13%; -0.01%)</title><rect x="394.1" y="133" width="1.6" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="397.14" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (4 samples, 0.01%; 0.00%)</title><rect x="1153.1" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1156.12" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%; +0.00%)</title><rect x="599.8" y="325" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="602.82" y="335.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,393 samples, 2.96%; +0.00%)</title><rect x="569.1" y="437" width="35.0" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="572.15" y="447.5" >qu..</text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (10 samples, 0.02%; +0.01%)</title><rect x="1037.6" y="165" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1040.61" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%; -0.02%)</title><rect x="596.3" y="341" width="0.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="599.28" y="351.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%; -0.00%)</title><rect x="1158.5" y="437" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1161.47" y="447.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.03%; -0.00%)</title><rect x="431.4" y="373" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="434.37" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (209 samples, 0.44%; +0.00%)</title><rect x="16.7" y="469" width="5.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="19.68" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (38 samples, 0.08%; +0.06%)</title><rect x="565.3" y="389" width="0.9" height="15.0" fill="rgb(255,119,119)" rx="2" ry="2" />
<text  x="568.28" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%; -0.00%)</title><rect x="421.9" y="277" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="424.88" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (24 samples, 0.05%; +0.03%)</title><rect x="593.0" y="341" width="0.6" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="596.05" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%; +0.00%)</title><rect x="849.6" y="325" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="852.57" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (136 samples, 0.29%; -0.01%)</title><rect x="257.0" y="245" width="3.4" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="259.99" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (447 samples, 0.95%; -0.01%)</title><rect x="760.3" y="389" width="11.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="763.32" y="399.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (25 samples, 0.05%; +0.01%)</title><rect x="751.6" y="293" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="754.61" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (88 samples, 0.19%; +0.01%)</title><rect x="159.5" y="197" width="2.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="162.48" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (171 samples, 0.36%; -0.01%)</title><rect x="748.0" y="373" width="4.3" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="751.05" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (40 samples, 0.09%; -0.01%)</title><rect x="863.1" y="357" width="1.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="866.10" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (56 samples, 0.12%; -0.01%)</title><rect x="779.7" y="341" width="1.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="782.70" y="351.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (46 samples, 0.10%; +0.02%)</title><rect x="762.3" y="309" width="1.1" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="765.28" y="319.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%; -0.01%)</title><rect x="971.3" y="373" width="2.0" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="974.26" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (75 samples, 0.16%; +0.03%)</title><rect x="63.3" y="437" width="1.9" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="66.32" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (63 samples, 0.13%; +0.01%)</title><rect x="10.5" y="581" width="1.5" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="13.45" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::make_conjunction (4 samples, 0.01%; 0.00%)</title><rect x="22.2" y="309" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.23" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%; -0.00%)</title><rect x="836.2" y="277" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="839.17" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (4 samples, 0.01%; 0.00%)</title><rect x="1175.3" y="501" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1178.26" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%; -0.01%)</title><rect x="493.0" y="213" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="495.95" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%; -0.00%)</title><rect x="1049.9" y="261" width="0.5" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1052.94" y="271.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%; +0.01%)</title><rect x="698.1" y="453" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="701.09" y="463.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (4 samples, 0.01%; -0.00%)</title><rect x="258.8" y="197" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="261.79" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (19 samples, 0.04%; +0.00%)</title><rect x="1054.1" y="213" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1057.13" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%; -0.01%)</title><rect x="323.1" y="165" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="326.06" y="175.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (23 samples, 0.05%; -0.00%)</title><rect x="1099.8" y="341" width="0.6" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1102.80" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (4 samples, 0.01%; -0.00%)</title><rect x="1109.6" y="421" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1112.59" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (386 samples, 0.82%; -0.03%)</title><rect x="477.4" y="293" width="9.7" height="15.0" fill="rgb(157,157,255)" rx="2" ry="2" />
<text  x="480.44" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (13 samples, 0.03%; +0.02%)</title><rect x="644.1" y="437" width="0.4" height="15.0" fill="rgb(255,178,178)" rx="2" ry="2" />
<text  x="647.14" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (13 samples, 0.03%; +0.00%)</title><rect x="697.2" y="485" width="0.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="700.16" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (26 samples, 0.06%; +0.01%)</title><rect x="791.1" y="341" width="0.7" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="794.10" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%; +0.01%)</title><rect x="679.9" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="682.86" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; +0.01%)</title><rect x="723.6" y="437" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="726.59" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (77 samples, 0.16%; +0.00%)</title><rect x="868.5" y="373" width="2.0" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="871.53" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (12 samples, 0.03%; -0.01%)</title><rect x="853.4" y="405" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="856.41" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%; +0.00%)</title><rect x="735.0" y="501" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="737.99" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (34 samples, 0.07%; -0.01%)</title><rect x="792.3" y="373" width="0.9" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="795.31" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (97 samples, 0.21%; -0.01%)</title><rect x="953.7" y="405" width="2.4" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="956.66" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (35 samples, 0.07%; +0.00%)</title><rect x="305.4" y="261" width="0.9" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="308.39" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (92 samples, 0.20%; +0.01%)</title><rect x="768.9" y="309" width="2.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="771.88" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (9 samples, 0.02%; -0.01%)</title><rect x="1137.7" y="437" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1140.68" y="447.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%; +0.01%)</title><rect x="653.5" y="485" width="0.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="656.52" y="495.5" ></text>
</g>
<g >
<title>row_cache::make_reader (6 samples, 0.01%; -0.01%)</title><rect x="439.3" y="357" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="442.25" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%; 0.00%)</title><rect x="679.2" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="682.23" y="495.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (103 samples, 0.22%; +0.00%)</title><rect x="528.6" y="325" width="2.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="531.60" y="335.5" ></text>
</g>
<g >
<title>compound_type&lt; (90 samples, 0.19%; -0.02%)</title><rect x="939.2" y="357" width="2.3" height="15.0" fill="rgb(175,175,255)" rx="2" ry="2" />
<text  x="942.22" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%; -0.01%)</title><rect x="161.1" y="181" width="0.6" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="164.13" y="191.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; +0.01%)</title><rect x="158.3" y="197" width="0.8" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="161.32" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (18 samples, 0.04%; +0.01%)</title><rect x="217.8" y="149" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="220.85" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%; +0.00%)</title><rect x="1109.4" y="373" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1112.36" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (396 samples, 0.84%; -0.01%)</title><rect x="449.8" y="309" width="10.0" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="452.82" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (311 samples, 0.66%; +0.01%)</title><rect x="35.5" y="485" width="7.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="38.48" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%; -0.02%)</title><rect x="235.5" y="197" width="0.5" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="238.50" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (4 samples, 0.01%; 0.00%)</title><rect x="992.2" y="341" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="995.17" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (21 samples, 0.04%; +0.00%)</title><rect x="962.2" y="357" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="965.22" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%; 0.00%)</title><rect x="22.8" y="469" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.78" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (10 samples, 0.02%; +0.01%)</title><rect x="191.2" y="85" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="194.24" y="95.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%; 0.00%)</title><rect x="19.5" y="245" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="22.51" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (4 samples, 0.01%; +0.00%)</title><rect x="663.7" y="469" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="666.69" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (55 samples, 0.12%; -0.02%)</title><rect x="789.2" y="357" width="1.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="792.24" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (79 samples, 0.17%; +0.01%)</title><rect x="703.5" y="485" width="2.0" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="706.51" y="495.5" ></text>
</g>
<g >
<title>make_combined_reader (746 samples, 1.59%; -0.01%)</title><rect x="449.1" y="325" width="18.7" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="452.07" y="335.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (8 samples, 0.02%; +0.01%)</title><rect x="774.3" y="405" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="777.33" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (21 samples, 0.04%; +0.01%)</title><rect x="625.9" y="437" width="0.6" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="628.93" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (66 samples, 0.14%; -0.00%)</title><rect x="40.3" y="469" width="1.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="43.33" y="479.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (66 samples, 0.14%; -0.03%)</title><rect x="362.3" y="165" width="1.7" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="365.30" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (104 samples, 0.22%; +0.01%)</title><rect x="495.4" y="197" width="2.6" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="498.36" y="207.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (8 samples, 0.02%; +0.01%)</title><rect x="620.2" y="373" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="623.18" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (33 samples, 0.07%; +0.01%)</title><rect x="961.9" y="373" width="0.8" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="964.92" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%; +0.01%)</title><rect x="104.0" y="421" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="107.02" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (11 samples, 0.02%; -0.03%)</title><rect x="325.6" y="165" width="0.2" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="328.57" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (230 samples, 0.49%; +0.03%)</title><rect x="634.4" y="437" width="5.8" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="637.39" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%; -0.00%)</title><rect x="842.2" y="357" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="845.22" y="367.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (382 samples, 0.81%; -0.02%)</title><rect x="539.1" y="325" width="9.6" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="542.09" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%; +0.01%)</title><rect x="145.8" y="277" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="148.77" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%; +0.00%)</title><rect x="663.1" y="485" width="0.7" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="666.11" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%; -0.02%)</title><rect x="498.3" y="181" width="0.2" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="501.30" y="191.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (18 samples, 0.04%; 0.00%)</title><rect x="1138.7" y="309" width="0.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.71" y="319.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%; +0.00%)</title><rect x="675.0" y="453" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="678.01" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%; 0.00%)</title><rect x="850.4" y="325" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="853.43" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (556 samples, 1.18%; -0.03%)</title><rect x="279.6" y="357" width="14.0" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="282.63" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (12 samples, 0.03%; +0.01%)</title><rect x="1161.8" y="453" width="0.3" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1164.81" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (43 samples, 0.09%; -0.00%)</title><rect x="224.4" y="149" width="1.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="227.40" y="159.5" ></text>
</g>
<g >
<title>database::find_schema (268 samples, 0.57%; +0.01%)</title><rect x="778.9" y="405" width="6.7" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="781.90" y="415.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (4 samples, 0.01%; 0.00%)</title><rect x="22.1" y="389" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="25.10" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.09%; 0.00%)</title><rect x="809.9" y="245" width="1.0" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="812.86" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (9 samples, 0.02%; 0.00%)</title><rect x="37.8" y="421" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="40.79" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (4 samples, 0.01%; +0.00%)</title><rect x="747.4" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="750.42" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (29 samples, 0.06%; +0.01%)</title><rect x="1145.9" y="485" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="1148.89" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (124 samples, 0.26%; +0.00%)</title><rect x="1003.2" y="293" width="3.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="1006.24" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_value (4 samples, 0.01%; +0.00%)</title><rect x="32.4" y="469" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="35.44" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%; -0.03%)</title><rect x="660.4" y="485" width="0.3" height="15.0" fill="rgb(164,164,255)" rx="2" ry="2" />
<text  x="663.43" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (6 samples, 0.01%; +0.00%)</title><rect x="245.0" y="197" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="248.01" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%; +0.00%)</title><rect x="1136.3" y="405" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1139.35" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (519 samples, 1.10%; +0.01%)</title><rect x="578.7" y="325" width="13.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="581.69" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (37 samples, 0.08%; -0.01%)</title><rect x="1024.2" y="213" width="1.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="1027.23" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (11 samples, 0.02%; -0.01%)</title><rect x="464.6" y="261" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="467.61" y="271.5" ></text>
</g>
<g >
<title>row_tombstone::apply (26 samples, 0.06%; -0.00%)</title><rect x="399.8" y="213" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="402.76" y="223.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%; +0.01%)</title><rect x="1116.1" y="373" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1119.09" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (9 samples, 0.02%; -0.01%)</title><rect x="377.0" y="213" width="0.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="379.96" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (405 samples, 0.86%; 0.00%)</title><rect x="66.5" y="437" width="10.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="69.49" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%; +0.01%)</title><rect x="520.1" y="165" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="523.06" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%; -0.00%)</title><rect x="510.9" y="261" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="513.90" y="271.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (39 samples, 0.08%; -0.01%)</title><rect x="840.2" y="309" width="1.0" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="843.18" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%; -0.01%)</title><rect x="867.8" y="405" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="870.82" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (20 samples, 0.04%; +0.03%)</title><rect x="1135.3" y="421" width="0.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="1138.27" y="431.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (145 samples, 0.31%; -0.01%)</title><rect x="910.1" y="309" width="3.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="913.13" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (15 samples, 0.03%; -0.01%)</title><rect x="268.2" y="277" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="271.18" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%; +0.01%)</title><rect x="296.7" y="389" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="299.73" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.04%; -0.00%)</title><rect x="707.1" y="309" width="0.5" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="710.15" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%; -0.01%)</title><rect x="777.7" y="405" width="0.1" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="780.67" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%; +0.01%)</title><rect x="594.2" y="325" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="597.18" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (28 samples, 0.06%; +0.05%)</title><rect x="306.5" y="293" width="0.7" height="15.0" fill="rgb(255,126,126)" rx="2" ry="2" />
<text  x="309.54" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (170 samples, 0.36%; +0.03%)</title><rect x="481.7" y="261" width="4.3" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="484.70" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (169 samples, 0.36%; -0.01%)</title><rect x="748.1" y="357" width="4.2" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="751.10" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (11 samples, 0.02%; -0.00%)</title><rect x="64.9" y="421" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="67.91" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (9 samples, 0.02%; +0.01%)</title><rect x="549.0" y="325" width="0.2" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="551.96" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (14 samples, 0.03%; -0.02%)</title><rect x="727.4" y="421" width="0.4" height="15.0" fill="rgb(182,182,255)" rx="2" ry="2" />
<text  x="730.43" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%; +0.01%)</title><rect x="663.8" y="485" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="666.82" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%; +0.01%)</title><rect x="705.1" y="437" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="708.09" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,525 samples, 9.63%; +0.03%)</title><rect x="308.2" y="277" width="113.6" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="311.18" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>seastar::reactor::add_task (18 samples, 0.04%; +0.01%)</title><rect x="34.8" y="485" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="37.80" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (7 samples, 0.01%; -0.00%)</title><rect x="162.2" y="213" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="165.21" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (14 samples, 0.03%; +0.03%)</title><rect x="525.6" y="277" width="0.4" height="15.0" fill="rgb(255,168,168)" rx="2" ry="2" />
<text  x="528.61" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%; +0.01%)</title><rect x="1094.5" y="277" width="0.5" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1097.55" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%; -0.00%)</title><rect x="468.2" y="309" width="0.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="471.22" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (8 samples, 0.02%; +0.01%)</title><rect x="629.3" y="437" width="0.2" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="632.27" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (34 samples, 0.07%; +0.01%)</title><rect x="1129.6" y="389" width="0.9" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="1132.60" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%; 0.00%)</title><rect x="723.2" y="453" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="726.24" y="463.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (34 samples, 0.07%; 0.00%)</title><rect x="203.0" y="101" width="0.9" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="206.01" y="111.5" ></text>
</g>
<g >
<title>schema::get_partitioner (5 samples, 0.01%; -0.01%)</title><rect x="946.9" y="405" width="0.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="949.88" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (122 samples, 0.26%; -0.01%)</title><rect x="404.5" y="229" width="3.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="407.48" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (12 samples, 0.03%; -0.00%)</title><rect x="646.6" y="389" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="649.62" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.11%; -0.02%)</title><rect x="806.3" y="261" width="1.2" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="809.29" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%; -0.00%)</title><rect x="1156.5" y="405" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="1159.48" y="415.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (50 samples, 0.11%; -0.04%)</title><rect x="1132.8" y="389" width="1.2" height="15.0" fill="rgb(136,136,255)" rx="2" ry="2" />
<text  x="1135.76" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (26 samples, 0.06%; -0.00%)</title><rect x="748.6" y="325" width="0.7" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="751.65" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%; -0.01%)</title><rect x="230.6" y="181" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="233.63" y="191.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; +0.01%)</title><rect x="691.5" y="469" width="0.7" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="694.53" y="479.5" ></text>
</g>
<g >
<title>[unknown] (218 samples, 0.46%; 0.00%)</title><rect x="10.3" y="597" width="5.5" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="13.33" y="607.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (27 samples, 0.06%; +0.01%)</title><rect x="250.0" y="181" width="0.7" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="253.01" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (22 samples, 0.05%; +0.03%)</title><rect x="207.0" y="117" width="0.5" height="15.0" fill="rgb(255,161,161)" rx="2" ry="2" />
<text  x="209.95" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%; +0.01%)</title><rect x="844.5" y="309" width="0.1" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="847.48" y="319.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (8 samples, 0.02%; +0.00%)</title><rect x="374.5" y="197" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="377.50" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%; +0.00%)</title><rect x="853.7" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="856.71" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%; +0.03%)</title><rect x="917.8" y="309" width="0.7" height="15.0" fill="rgb(255,157,157)" rx="2" ry="2" />
<text  x="920.78" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (9 samples, 0.02%; -0.00%)</title><rect x="880.1" y="421" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="883.10" y="431.5" ></text>
</g>
<g >
<title>memtable::apply (15 samples, 0.03%; 0.00%)</title><rect x="1138.7" y="261" width="0.4" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.73" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (9 samples, 0.02%; +0.00%)</title><rect x="856.1" y="389" width="0.3" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="859.12" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%; +0.00%)</title><rect x="952.6" y="309" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="955.58" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (12 samples, 0.03%; -0.01%)</title><rect x="1140.2" y="485" width="0.3" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="1143.17" y="495.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (17 samples, 0.04%; -0.01%)</title><rect x="870.0" y="341" width="0.5" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="873.03" y="351.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (101 samples, 0.21%; +0.00%)</title><rect x="557.9" y="389" width="2.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="560.92" y="399.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,047 samples, 8.61%; +0.06%)</title><rect x="753.5" y="437" width="101.6" height="15.0" fill="rgb(255,105,105)" rx="2" ry="2" />
<text  x="756.52" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (5 samples, 0.01%; -0.00%)</title><rect x="919.3" y="357" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="922.26" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (13 samples, 0.03%; +0.02%)</title><rect x="135.9" y="261" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="138.85" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.01%; 0.00%)</title><rect x="679.3" y="485" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="682.33" y="495.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%; -0.02%)</title><rect x="59.7" y="453" width="0.8" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="62.68" y="463.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (4 samples, 0.01%; -0.03%)</title><rect x="941.8" y="389" width="0.1" height="15.0" fill="rgb(154,154,255)" rx="2" ry="2" />
<text  x="944.81" y="399.5" ></text>
</g>
<g >
<title>schema::column_at (16 samples, 0.03%; -0.00%)</title><rect x="373.9" y="197" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="376.85" y="207.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (6 samples, 0.01%; -0.01%)</title><rect x="631.5" y="437" width="0.2" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="634.51" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (39 samples, 0.08%; -0.00%)</title><rect x="1024.2" y="229" width="1.0" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1027.18" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (14 samples, 0.03%; +0.01%)</title><rect x="457.4" y="261" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="460.43" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (9 samples, 0.02%; -0.01%)</title><rect x="671.9" y="405" width="0.2" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="674.88" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%; +0.00%)</title><rect x="693.1" y="437" width="0.2" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="696.12" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%; -0.00%)</title><rect x="783.0" y="309" width="0.4" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="786.02" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (358 samples, 0.76%; +0.02%)</title><rect x="906.6" y="357" width="9.0" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="909.64" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (4 samples, 0.01%; -0.00%)</title><rect x="432.0" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="435.05" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%; +0.00%)</title><rect x="60.3" y="437" width="0.2" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="63.29" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (21 samples, 0.04%; +0.00%)</title><rect x="143.4" y="261" width="0.5" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="146.38" y="271.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (7 samples, 0.01%; -0.00%)</title><rect x="698.3" y="469" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="701.31" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%; +0.00%)</title><rect x="256.9" y="245" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="259.86" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (6 samples, 0.01%; +0.00%)</title><rect x="1176.0" y="453" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="1178.97" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%; +0.00%)</title><rect x="853.9" y="421" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="856.89" y="431.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%; -0.00%)</title><rect x="40.4" y="453" width="0.3" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="43.40" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.01%; -0.00%)</title><rect x="591.6" y="309" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="594.61" y="319.5" ></text>
</g>
<g >
<title>make_combined_reader (4 samples, 0.01%; +0.00%)</title><rect x="438.4" y="357" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="441.45" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (17 samples, 0.04%; +0.00%)</title><rect x="719.0" y="469" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="721.97" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%; 0.00%)</title><rect x="611.4" y="373" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="614.45" y="383.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%; -0.02%)</title><rect x="291.7" y="293" width="1.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="294.71" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (26 samples, 0.06%; -0.02%)</title><rect x="476.8" y="277" width="0.6" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="479.78" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (37 samples, 0.08%; -0.00%)</title><rect x="671.3" y="453" width="0.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="674.27" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (6 samples, 0.01%; -0.00%)</title><rect x="431.7" y="373" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="434.69" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (34 samples, 0.07%; +0.01%)</title><rect x="42.1" y="469" width="0.8" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="45.06" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (845 samples, 1.80%; -0.04%)</title><rect x="664.9" y="501" width="21.2" height="15.0" fill="rgb(143,143,255)" rx="2" ry="2" />
<text  x="667.92" y="511.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%; +0.01%)</title><rect x="783.4" y="325" width="0.4" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="786.39" y="335.5" ></text>
</g>
<g >
<title>partition_entry::read (36 samples, 0.08%; +0.07%)</title><rect x="532.9" y="325" width="0.9" height="15.0" fill="rgb(255,91,91)" rx="2" ry="2" />
<text  x="535.94" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (4 samples, 0.01%; +0.00%)</title><rect x="900.9" y="421" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="903.94" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (29 samples, 0.06%; -0.01%)</title><rect x="473.7" y="309" width="0.8" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="476.75" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%; +0.01%)</title><rect x="862.3" y="357" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="865.33" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%; +0.01%)</title><rect x="79.5" y="453" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="82.49" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (29 samples, 0.06%; -0.01%)</title><rect x="671.4" y="437" width="0.7" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="674.37" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%; 0.00%)</title><rect x="707.1" y="453" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="710.12" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (4 samples, 0.01%; 0.00%)</title><rect x="634.2" y="437" width="0.1" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="637.17" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (7 samples, 0.01%; -0.03%)</title><rect x="76.3" y="421" width="0.2" height="15.0" fill="rgb(161,161,255)" rx="2" ry="2" />
<text  x="79.33" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (14 samples, 0.03%; 0.00%)</title><rect x="924.0" y="357" width="0.3" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="926.98" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (18 samples, 0.04%; +0.00%)</title><rect x="869.5" y="357" width="0.4" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="872.48" y="367.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,169 samples, 21.64%; +0.00%)</title><rect x="885.4" y="501" width="255.3" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="888.42" y="511.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>partition_snapshot::get_change_mark (48 samples, 0.10%; +0.02%)</title><rect x="220.8" y="165" width="1.2" height="15.0" fill="rgb(255,175,175)" rx="2" ry="2" />
<text  x="223.78" y="175.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (7 samples, 0.01%; -0.00%)</title><rect x="913.8" y="309" width="0.1" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="916.77" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%; -0.01%)</title><rect x="467.1" y="277" width="0.4" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="470.14" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (63 samples, 0.13%; -0.00%)</title><rect x="17.0" y="373" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="20.00" y="383.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (6 samples, 0.01%; +0.01%)</title><rect x="669.6" y="405" width="0.1" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="672.59" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (5 samples, 0.01%; +0.01%)</title><rect x="877.8" y="469" width="0.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="880.82" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%; +0.00%)</title><rect x="783.6" y="309" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="786.60" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%; +0.00%)</title><rect x="451.9" y="277" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="454.88" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.03%; +0.02%)</title><rect x="870.2" y="325" width="0.3" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="873.16" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (24 samples, 0.05%; -0.01%)</title><rect x="315.9" y="213" width="0.6" height="15.0" fill="rgb(185,185,255)" rx="2" ry="2" />
<text  x="318.91" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (42 samples, 0.09%; +0.01%)</title><rect x="1159.5" y="453" width="1.0" height="15.0" fill="rgb(255,189,189)" rx="2" ry="2" />
<text  x="1162.47" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (60 samples, 0.13%; -0.00%)</title><rect x="271.7" y="325" width="1.6" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="274.75" y="335.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (60 samples, 0.13%; -0.01%)</title><rect x="302.1" y="309" width="1.5" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="305.13" y="319.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.01%; +0.00%)</title><rect x="158.1" y="213" width="0.1" height="15.0" fill="rgb(255,206,206)" rx="2" ry="2" />
<text  x="161.10" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%; +0.00%)</title><rect x="777.3" y="405" width="0.1" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="780.29" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (5 samples, 0.01%; 0.00%)</title><rect x="826.0" y="149" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="829.05" y="159.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (9 samples, 0.02%; +0.01%)</title><rect x="16.3" y="501" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="19.30" y="511.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (111 samples, 0.24%; -0.02%)</title><rect x="359.5" y="165" width="2.8" height="15.0" fill="rgb(171,171,255)" rx="2" ry="2" />
<text  x="362.52" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (374 samples, 0.80%; +0.01%)</title><rect x="408.1" y="261" width="9.4" height="15.0" fill="rgb(255,192,192)" rx="2" ry="2" />
<text  x="411.12" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%; +0.01%)</title><rect x="731.9" y="485" width="0.3" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="734.88" y="495.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%; -0.01%)</title><rect x="638.4" y="373" width="1.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="641.44" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%; +0.02%)</title><rect x="807.1" y="245" width="0.4" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="810.09" y="255.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%; -0.00%)</title><rect x="260.0" y="229" width="0.2" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="263.05" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%; -0.00%)</title><rect x="777.5" y="405" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="780.52" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (45 samples, 0.10%; -0.02%)</title><rect x="530.0" y="293" width="1.1" height="15.0" fill="rgb(178,178,255)" rx="2" ry="2" />
<text  x="532.96" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.02%; +0.01%)</title><rect x="1103.1" y="341" width="0.2" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1106.09" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.02%; 0.00%)</title><rect x="1038.1" y="181" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1041.06" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (35 samples, 0.07%; -0.01%)</title><rect x="695.1" y="453" width="0.9" height="15.0" fill="rgb(192,192,255)" rx="2" ry="2" />
<text  x="698.12" y="463.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%; -0.00%)</title><rect x="216.9" y="165" width="0.7" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="219.87" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (21 samples, 0.04%; +0.01%)</title><rect x="999.3" y="261" width="0.5" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1002.30" y="271.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (439 samples, 0.93%; +0.01%)</title><rect x="65.6" y="453" width="11.1" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="68.63" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,452 samples, 13.73%; -0.01%)</title><rect x="117.1" y="357" width="162.0" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="120.07" y="367.5" >mutation_fragment_me..</text>
</g>
<g >
<title>operator new (23 samples, 0.05%; 0.00%)</title><rect x="504.7" y="293" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="507.70" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (9 samples, 0.02%; 0.00%)</title><rect x="458.8" y="277" width="0.2" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="461.81" y="287.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (25 samples, 0.05%; 0.00%)</title><rect x="1138.7" y="405" width="0.6" height="15.0" fill="rgb(255,255,255)" rx="2" ry="2" />
<text  x="1141.68" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (7 samples, 0.01%; -0.01%)</title><rect x="600.4" y="341" width="0.2" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="603.38" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (4 samples, 0.01%; -0.01%)</title><rect x="705.5" y="485" width="0.1" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="708.49" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (37 samples, 0.08%; +0.02%)</title><rect x="677.7" y="485" width="0.9" height="15.0" fill="rgb(255,182,182)" rx="2" ry="2" />
<text  x="680.65" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (18 samples, 0.04%; +0.01%)</title><rect x="1008.6" y="293" width="0.4" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="1011.56" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (22 samples, 0.05%; +0.00%)</title><rect x="589.5" y="277" width="0.6" height="15.0" fill="rgb(255,203,203)" rx="2" ry="2" />
<text  x="592.53" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (6 samples, 0.01%; +0.01%)</title><rect x="992.0" y="341" width="0.2" height="15.0" fill="rgb(255,196,196)" rx="2" ry="2" />
<text  x="995.02" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (11 samples, 0.02%; +0.01%)</title><rect x="236.9" y="213" width="0.3" height="15.0" fill="rgb(255,199,199)" rx="2" ry="2" />
<text  x="239.93" y="223.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (6 samples, 0.01%; -0.00%)</title><rect x="596.1" y="341" width="0.2" height="15.0" fill="rgb(206,206,255)" rx="2" ry="2" />
<text  x="599.13" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%; -0.01%)</title><rect x="1075.9" y="293" width="0.3" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="1078.90" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (11 samples, 0.02%; +0.01%)</title><rect x="674.4" y="453" width="0.3" height="15.0" fill="rgb(255,185,185)" rx="2" ry="2" />
<text  x="677.39" y="463.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%; -0.01%)</title><rect x="662.5" y="485" width="0.4" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="665.49" y="495.5" ></text>
</g>
<g >
<title>database::find_column_family (76 samples, 0.16%; -0.00%)</title><rect x="1060.1" y="341" width="1.9" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1063.05" y="351.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%; -0.01%)</title><rect x="457.8" y="277" width="0.6" height="15.0" fill="rgb(199,199,255)" rx="2" ry="2" />
<text  x="460.78" y="287.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (444 samples, 0.94%; -0.01%)</title><rect x="922.5" y="389" width="11.1" height="15.0" fill="rgb(196,196,255)" rx="2" ry="2" />
<text  x="925.45" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%; -0.00%)</title><rect x="1106.8" y="373" width="0.1" height="15.0" fill="rgb(203,203,255)" rx="2" ry="2" />
<text  x="1109.75" y="383.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (6 samples, 0.01%; -0.01%)</title><rect x="301.3" y="325" width="0.2" height="15.0" fill="rgb(189,189,255)" rx="2" ry="2" />
<text  x="304.35" y="335.5" ></text>
</g>
</g>
</svg>
