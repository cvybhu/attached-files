<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>managed_bytes::~managed_bytes (20 samples, 0.04%)</title><rect x="901.9" y="309" width="0.5" height="15.0" fill="rgb(209,9,40)" rx="2" ry="2" />
<text  x="904.86" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (143 samples, 0.30%)</title><rect x="923.2" y="341" width="3.5" height="15.0" fill="rgb(225,190,54)" rx="2" ry="2" />
<text  x="926.17" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (34 samples, 0.07%)</title><rect x="331.1" y="181" width="0.9" height="15.0" fill="rgb(219,169,40)" rx="2" ry="2" />
<text  x="334.12" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (20 samples, 0.04%)</title><rect x="1177.4" y="453" width="0.5" height="15.0" fill="rgb(212,191,51)" rx="2" ry="2" />
<text  x="1180.41" y="463.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="1119.1" y="357" width="1.9" height="15.0" fill="rgb(205,136,48)" rx="2" ry="2" />
<text  x="1122.06" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (29 samples, 0.06%)</title><rect x="834.5" y="293" width="0.7" height="15.0" fill="rgb(241,164,14)" rx="2" ry="2" />
<text  x="837.51" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (216 samples, 0.45%)</title><rect x="1090.6" y="277" width="5.4" height="15.0" fill="rgb(224,156,43)" rx="2" ry="2" />
<text  x="1093.64" y="287.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (285 samples, 0.60%)</title><rect x="483.2" y="245" width="7.1" height="15.0" fill="rgb(251,108,14)" rx="2" ry="2" />
<text  x="486.23" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (34 samples, 0.07%)</title><rect x="677.3" y="453" width="0.9" height="15.0" fill="rgb(220,151,29)" rx="2" ry="2" />
<text  x="680.34" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (8 samples, 0.02%)</title><rect x="1175.6" y="357" width="0.2" height="15.0" fill="rgb(237,207,32)" rx="2" ry="2" />
<text  x="1178.63" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (69 samples, 0.14%)</title><rect x="1062.0" y="293" width="1.7" height="15.0" fill="rgb(244,129,36)" rx="2" ry="2" />
<text  x="1065.02" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (213 samples, 0.45%)</title><rect x="749.1" y="341" width="5.3" height="15.0" fill="rgb(231,91,46)" rx="2" ry="2" />
<text  x="752.10" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%)</title><rect x="786.1" y="277" width="0.5" height="15.0" fill="rgb(208,152,34)" rx="2" ry="2" />
<text  x="789.14" y="287.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (15 samples, 0.03%)</title><rect x="134.2" y="261" width="0.4" height="15.0" fill="rgb(208,48,41)" rx="2" ry="2" />
<text  x="137.21" y="271.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="963.5" y="373" width="1.7" height="15.0" fill="rgb(248,222,18)" rx="2" ry="2" />
<text  x="966.46" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="928.1" y="357" width="0.1" height="15.0" fill="rgb(247,61,5)" rx="2" ry="2" />
<text  x="931.07" y="367.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="540.1" y="325" width="0.6" height="15.0" fill="rgb(227,13,53)" rx="2" ry="2" />
<text  x="543.07" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (157 samples, 0.33%)</title><rect x="1092.1" y="261" width="3.9" height="15.0" fill="rgb(214,199,10)" rx="2" ry="2" />
<text  x="1095.10" y="271.5" ></text>
</g>
<g >
<title>schema::position (5 samples, 0.01%)</title><rect x="1127.0" y="421" width="0.1" height="15.0" fill="rgb(229,116,33)" rx="2" ry="2" />
<text  x="1129.96" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (65 samples, 0.14%)</title><rect x="269.2" y="309" width="1.6" height="15.0" fill="rgb(209,100,23)" rx="2" ry="2" />
<text  x="272.20" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (16 samples, 0.03%)</title><rect x="72.7" y="453" width="0.4" height="15.0" fill="rgb(246,220,25)" rx="2" ry="2" />
<text  x="75.69" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="54.3" y="469" width="0.2" height="15.0" fill="rgb(209,36,39)" rx="2" ry="2" />
<text  x="57.33" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%)</title><rect x="853.3" y="389" width="1.0" height="15.0" fill="rgb(220,179,53)" rx="2" ry="2" />
<text  x="856.27" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (19 samples, 0.04%)</title><rect x="711.5" y="405" width="0.5" height="15.0" fill="rgb(236,61,36)" rx="2" ry="2" />
<text  x="714.51" y="415.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,842 samples, 3.87%)</title><rect x="318.4" y="197" width="45.7" height="15.0" fill="rgb(231,205,52)" rx="2" ry="2" />
<text  x="321.41" y="207.5" >muta..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (40 samples, 0.08%)</title><rect x="697.6" y="437" width="1.0" height="15.0" fill="rgb(211,228,7)" rx="2" ry="2" />
<text  x="700.64" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (90 samples, 0.19%)</title><rect x="1070.1" y="309" width="2.2" height="15.0" fill="rgb(240,115,6)" rx="2" ry="2" />
<text  x="1073.10" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="686.1" y="485" width="0.1" height="15.0" fill="rgb(214,41,40)" rx="2" ry="2" />
<text  x="689.07" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="611.0" y="437" width="0.1" height="15.0" fill="rgb(227,102,53)" rx="2" ry="2" />
<text  x="613.99" y="447.5" ></text>
</g>
<g >
<title>schema::column_at (19 samples, 0.04%)</title><rect x="388.9" y="181" width="0.5" height="15.0" fill="rgb(225,136,27)" rx="2" ry="2" />
<text  x="391.88" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="704.3" y="485" width="0.1" height="15.0" fill="rgb(226,90,48)" rx="2" ry="2" />
<text  x="707.30" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (50 samples, 0.10%)</title><rect x="533.4" y="293" width="1.2" height="15.0" fill="rgb(249,14,47)" rx="2" ry="2" />
<text  x="536.36" y="303.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (355 samples, 0.75%)</title><rect x="63.3" y="453" width="8.8" height="15.0" fill="rgb(251,138,34)" rx="2" ry="2" />
<text  x="66.27" y="463.5" ></text>
</g>
<g >
<title>query::result::result (37 samples, 0.08%)</title><rect x="599.4" y="421" width="0.9" height="15.0" fill="rgb(247,156,49)" rx="2" ry="2" />
<text  x="602.42" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (100 samples, 0.21%)</title><rect x="975.5" y="325" width="2.5" height="15.0" fill="rgb(224,11,17)" rx="2" ry="2" />
<text  x="978.47" y="335.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="593.5" y="405" width="0.4" height="15.0" fill="rgb(210,159,43)" rx="2" ry="2" />
<text  x="596.47" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (28 samples, 0.06%)</title><rect x="603.6" y="405" width="0.7" height="15.0" fill="rgb(252,143,37)" rx="2" ry="2" />
<text  x="606.58" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (57 samples, 0.12%)</title><rect x="506.2" y="261" width="1.4" height="15.0" fill="rgb(211,153,37)" rx="2" ry="2" />
<text  x="509.15" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (98 samples, 0.21%)</title><rect x="682.7" y="469" width="2.4" height="15.0" fill="rgb(221,38,48)" rx="2" ry="2" />
<text  x="685.67" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (10 samples, 0.02%)</title><rect x="887.5" y="421" width="0.3" height="15.0" fill="rgb(209,29,38)" rx="2" ry="2" />
<text  x="890.54" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="716.4" y="485" width="0.2" height="15.0" fill="rgb(231,1,6)" rx="2" ry="2" />
<text  x="719.44" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%)</title><rect x="222.9" y="197" width="0.6" height="15.0" fill="rgb(238,79,53)" rx="2" ry="2" />
<text  x="225.89" y="207.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (435 samples, 0.91%)</title><rect x="705.3" y="469" width="10.7" height="15.0" fill="rgb(251,150,39)" rx="2" ry="2" />
<text  x="708.27" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (15 samples, 0.03%)</title><rect x="239.5" y="181" width="0.4" height="15.0" fill="rgb(235,90,48)" rx="2" ry="2" />
<text  x="242.52" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (13 samples, 0.03%)</title><rect x="1175.6" y="389" width="0.3" height="15.0" fill="rgb(236,220,48)" rx="2" ry="2" />
<text  x="1178.55" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="584.9" y="325" width="0.3" height="15.0" fill="rgb(252,222,39)" rx="2" ry="2" />
<text  x="587.95" y="335.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="643.1" y="485" width="0.5" height="15.0" fill="rgb(214,205,11)" rx="2" ry="2" />
<text  x="646.05" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.02%)</title><rect x="18.4" y="261" width="0.2" height="15.0" fill="rgb(212,90,27)" rx="2" ry="2" />
<text  x="21.42" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="489.4" y="181" width="0.4" height="15.0" fill="rgb(241,19,3)" rx="2" ry="2" />
<text  x="492.43" y="191.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (21 samples, 0.04%)</title><rect x="240.6" y="229" width="0.5" height="15.0" fill="rgb(216,93,15)" rx="2" ry="2" />
<text  x="243.56" y="239.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (5 samples, 0.01%)</title><rect x="895.8" y="309" width="0.2" height="15.0" fill="rgb(223,133,52)" rx="2" ry="2" />
<text  x="898.84" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (12 samples, 0.03%)</title><rect x="873.9" y="389" width="0.3" height="15.0" fill="rgb(242,28,41)" rx="2" ry="2" />
<text  x="876.93" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (710 samples, 1.49%)</title><rect x="892.6" y="373" width="17.6" height="15.0" fill="rgb(252,19,42)" rx="2" ry="2" />
<text  x="895.57" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="782.8" y="293" width="0.4" height="15.0" fill="rgb(233,213,44)" rx="2" ry="2" />
<text  x="785.77" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="1013.7" y="277" width="0.1" height="15.0" fill="rgb(240,65,16)" rx="2" ry="2" />
<text  x="1016.66" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;reader_permit::impl, boost::intrusive::list_node_traits&lt;void*&gt;,  (6 samples, 0.01%)</title><rect x="1038.9" y="181" width="0.1" height="15.0" fill="rgb(226,38,15)" rx="2" ry="2" />
<text  x="1041.85" y="191.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (12 samples, 0.03%)</title><rect x="520.4" y="325" width="0.3" height="15.0" fill="rgb(220,122,50)" rx="2" ry="2" />
<text  x="523.43" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="1136.1" y="421" width="0.6" height="15.0" fill="rgb(249,220,7)" rx="2" ry="2" />
<text  x="1139.13" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1043.9" y="261" width="0.1" height="15.0" fill="rgb(220,7,6)" rx="2" ry="2" />
<text  x="1046.91" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (7 samples, 0.01%)</title><rect x="258.8" y="341" width="0.2" height="15.0" fill="rgb(218,63,24)" rx="2" ry="2" />
<text  x="261.84" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (10 samples, 0.02%)</title><rect x="852.7" y="421" width="0.3" height="15.0" fill="rgb(242,86,26)" rx="2" ry="2" />
<text  x="855.72" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.08%)</title><rect x="729.5" y="405" width="0.8" height="15.0" fill="rgb(206,214,53)" rx="2" ry="2" />
<text  x="732.45" y="415.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (8 samples, 0.02%)</title><rect x="1140.2" y="245" width="0.2" height="15.0" fill="rgb(232,76,42)" rx="2" ry="2" />
<text  x="1143.20" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="561.3" y="293" width="0.2" height="15.0" fill="rgb(254,101,6)" rx="2" ry="2" />
<text  x="564.31" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1078.6" y="325" width="0.2" height="15.0" fill="rgb(218,144,7)" rx="2" ry="2" />
<text  x="1081.57" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (83 samples, 0.17%)</title><rect x="796.8" y="197" width="2.0" height="15.0" fill="rgb(212,22,13)" rx="2" ry="2" />
<text  x="799.77" y="207.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%)</title><rect x="118.1" y="277" width="0.2" height="15.0" fill="rgb(240,104,18)" rx="2" ry="2" />
<text  x="121.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="597.1" y="373" width="0.1" height="15.0" fill="rgb(210,133,28)" rx="2" ry="2" />
<text  x="600.11" y="383.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,749 samples, 5.77%)</title><rect x="769.8" y="405" width="68.2" height="15.0" fill="rgb(251,163,51)" rx="2" ry="2" />
<text  x="772.84" y="415.5" >service..</text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="522.3" y="277" width="0.7" height="15.0" fill="rgb(240,121,24)" rx="2" ry="2" />
<text  x="525.28" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (36 samples, 0.08%)</title><rect x="1160.3" y="453" width="0.9" height="15.0" fill="rgb(253,20,4)" rx="2" ry="2" />
<text  x="1163.27" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.04%)</title><rect x="88.6" y="421" width="0.5" height="15.0" fill="rgb(244,9,27)" rx="2" ry="2" />
<text  x="91.65" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="466.9" y="293" width="0.2" height="15.0" fill="rgb(215,172,44)" rx="2" ry="2" />
<text  x="469.91" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="931.8" y="341" width="0.2" height="15.0" fill="rgb(208,66,12)" rx="2" ry="2" />
<text  x="934.81" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (84 samples, 0.18%)</title><rect x="818.4" y="325" width="2.1" height="15.0" fill="rgb(210,85,40)" rx="2" ry="2" />
<text  x="821.43" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (10 samples, 0.02%)</title><rect x="1038.1" y="213" width="0.2" height="15.0" fill="rgb(218,60,8)" rx="2" ry="2" />
<text  x="1041.09" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="499.1" y="309" width="0.1" height="15.0" fill="rgb(229,73,31)" rx="2" ry="2" />
<text  x="502.09" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (7 samples, 0.01%)</title><rect x="212.4" y="149" width="0.2" height="15.0" fill="rgb(226,17,4)" rx="2" ry="2" />
<text  x="215.39" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (299 samples, 0.63%)</title><rect x="1155.3" y="469" width="7.4" height="15.0" fill="rgb(241,150,18)" rx="2" ry="2" />
<text  x="1158.34" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (5 samples, 0.01%)</title><rect x="182.2" y="85" width="0.1" height="15.0" fill="rgb(230,212,27)" rx="2" ry="2" />
<text  x="185.21" y="95.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="585.5" y="357" width="0.2" height="15.0" fill="rgb(225,86,14)" rx="2" ry="2" />
<text  x="588.47" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (79 samples, 0.17%)</title><rect x="418.7" y="357" width="1.9" height="15.0" fill="rgb(213,172,9)" rx="2" ry="2" />
<text  x="421.66" y="367.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (28 samples, 0.06%)</title><rect x="435.8" y="341" width="0.7" height="15.0" fill="rgb(247,147,12)" rx="2" ry="2" />
<text  x="438.76" y="351.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.10%)</title><rect x="549.5" y="357" width="1.3" height="15.0" fill="rgb(227,7,31)" rx="2" ry="2" />
<text  x="552.51" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (48 samples, 0.10%)</title><rect x="890.8" y="405" width="1.2" height="15.0" fill="rgb(253,67,41)" rx="2" ry="2" />
<text  x="893.81" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (48 samples, 0.10%)</title><rect x="1149.6" y="485" width="1.2" height="15.0" fill="rgb(235,23,53)" rx="2" ry="2" />
<text  x="1152.56" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%)</title><rect x="855.5" y="373" width="2.4" height="15.0" fill="rgb(214,195,21)" rx="2" ry="2" />
<text  x="858.52" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="457.0" y="261" width="0.4" height="15.0" fill="rgb(234,29,25)" rx="2" ry="2" />
<text  x="460.02" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (76 samples, 0.16%)</title><rect x="238.0" y="197" width="1.9" height="15.0" fill="rgb(235,135,5)" rx="2" ry="2" />
<text  x="241.01" y="207.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (212 samples, 0.45%)</title><rect x="18.0" y="453" width="5.2" height="15.0" fill="rgb(229,118,2)" rx="2" ry="2" />
<text  x="20.98" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (12 samples, 0.03%)</title><rect x="212.1" y="117" width="0.3" height="15.0" fill="rgb(247,145,17)" rx="2" ry="2" />
<text  x="215.09" y="127.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="40.8" y="453" width="0.4" height="15.0" fill="rgb(211,48,30)" rx="2" ry="2" />
<text  x="43.80" y="463.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (5 samples, 0.01%)</title><rect x="47.8" y="485" width="0.1" height="15.0" fill="rgb(254,179,30)" rx="2" ry="2" />
<text  x="50.79" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (56 samples, 0.12%)</title><rect x="1152.8" y="437" width="1.3" height="15.0" fill="rgb(215,164,53)" rx="2" ry="2" />
<text  x="1155.76" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1077.9" y="325" width="0.2" height="15.0" fill="rgb(225,22,16)" rx="2" ry="2" />
<text  x="1080.86" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (54 samples, 0.11%)</title><rect x="193.8" y="85" width="1.3" height="15.0" fill="rgb(215,57,2)" rx="2" ry="2" />
<text  x="196.80" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (40 samples, 0.08%)</title><rect x="1158.0" y="405" width="1.0" height="15.0" fill="rgb(240,4,54)" rx="2" ry="2" />
<text  x="1160.99" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,524 samples, 7.40%)</title><rect x="303.5" y="229" width="87.3" height="15.0" fill="rgb(231,106,3)" rx="2" ry="2" />
<text  x="306.47" y="239.5" >compact_mu..</text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="1170.6" y="453" width="0.4" height="15.0" fill="rgb(228,50,31)" rx="2" ry="2" />
<text  x="1173.60" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (877 samples, 1.84%)</title><rect x="1079.0" y="341" width="21.8" height="15.0" fill="rgb(250,156,0)" rx="2" ry="2" />
<text  x="1082.04" y="351.5" >s..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (12 samples, 0.03%)</title><rect x="279.4" y="357" width="0.3" height="15.0" fill="rgb(218,14,35)" rx="2" ry="2" />
<text  x="282.36" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="838.3" y="405" width="0.2" height="15.0" fill="rgb(215,141,2)" rx="2" ry="2" />
<text  x="841.28" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (121 samples, 0.25%)</title><rect x="492.5" y="325" width="2.9" height="15.0" fill="rgb(245,188,47)" rx="2" ry="2" />
<text  x="495.45" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="775.6" y="341" width="0.1" height="15.0" fill="rgb(211,71,27)" rx="2" ry="2" />
<text  x="778.56" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (32 samples, 0.07%)</title><rect x="873.8" y="469" width="0.8" height="15.0" fill="rgb(219,207,50)" rx="2" ry="2" />
<text  x="876.83" y="479.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (325 samples, 0.68%)</title><rect x="482.2" y="261" width="8.1" height="15.0" fill="rgb(227,133,20)" rx="2" ry="2" />
<text  x="485.24" y="271.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%)</title><rect x="24.7" y="597" width="0.3" height="15.0" fill="rgb(246,48,3)" rx="2" ry="2" />
<text  x="27.69" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%)</title><rect x="575.7" y="309" width="0.2" height="15.0" fill="rgb(224,204,3)" rx="2" ry="2" />
<text  x="578.66" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1123.0" y="389" width="0.4" height="15.0" fill="rgb(250,137,33)" rx="2" ry="2" />
<text  x="1126.03" y="399.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (580 samples, 1.22%)</title><rect x="1081.9" y="293" width="14.4" height="15.0" fill="rgb(246,99,39)" rx="2" ry="2" />
<text  x="1084.89" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (5 samples, 0.01%)</title><rect x="888.7" y="421" width="0.1" height="15.0" fill="rgb(210,141,42)" rx="2" ry="2" />
<text  x="891.68" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%)</title><rect x="759.0" y="389" width="1.3" height="15.0" fill="rgb(243,226,2)" rx="2" ry="2" />
<text  x="762.04" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (72 samples, 0.15%)</title><rect x="230.7" y="197" width="1.8" height="15.0" fill="rgb(236,27,28)" rx="2" ry="2" />
<text  x="233.75" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%)</title><rect x="195.4" y="117" width="0.5" height="15.0" fill="rgb(210,125,34)" rx="2" ry="2" />
<text  x="198.36" y="127.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1108.1" y="373" width="0.1" height="15.0" fill="rgb(232,219,17)" rx="2" ry="2" />
<text  x="1111.06" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="696.1" y="453" width="0.2" height="15.0" fill="rgb(218,70,32)" rx="2" ry="2" />
<text  x="699.08" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%)</title><rect x="717.1" y="501" width="0.6" height="15.0" fill="rgb(248,154,22)" rx="2" ry="2" />
<text  x="720.06" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="427.5" y="405" width="0.2" height="15.0" fill="rgb(227,140,47)" rx="2" ry="2" />
<text  x="430.53" y="415.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="613.2" y="421" width="0.5" height="15.0" fill="rgb(206,38,9)" rx="2" ry="2" />
<text  x="616.24" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,969 samples, 8.33%)</title><rect x="298.4" y="261" width="98.4" height="15.0" fill="rgb(241,163,44)" rx="2" ry="2" />
<text  x="301.44" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (78 samples, 0.16%)</title><rect x="230.6" y="213" width="1.9" height="15.0" fill="rgb(240,87,33)" rx="2" ry="2" />
<text  x="233.60" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%)</title><rect x="610.2" y="421" width="0.2" height="15.0" fill="rgb(231,189,51)" rx="2" ry="2" />
<text  x="613.20" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (165 samples, 0.35%)</title><rect x="929.3" y="389" width="4.1" height="15.0" fill="rgb(226,136,36)" rx="2" ry="2" />
<text  x="932.26" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (11 samples, 0.02%)</title><rect x="600.0" y="405" width="0.3" height="15.0" fill="rgb(209,172,1)" rx="2" ry="2" />
<text  x="603.04" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (574 samples, 1.21%)</title><rect x="1024.9" y="245" width="14.2" height="15.0" fill="rgb(222,149,8)" rx="2" ry="2" />
<text  x="1027.90" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="980.8" y="357" width="0.1" height="15.0" fill="rgb(212,66,14)" rx="2" ry="2" />
<text  x="983.80" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="222.2" y="213" width="0.4" height="15.0" fill="rgb(235,147,11)" rx="2" ry="2" />
<text  x="225.25" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="291.8" y="261" width="0.1" height="15.0" fill="rgb(222,19,19)" rx="2" ry="2" />
<text  x="294.77" y="271.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (5 samples, 0.01%)</title><rect x="754.4" y="341" width="0.1" height="15.0" fill="rgb(244,64,10)" rx="2" ry="2" />
<text  x="757.38" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="598.2" y="389" width="0.2" height="15.0" fill="rgb(213,114,19)" rx="2" ry="2" />
<text  x="601.20" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (30 samples, 0.06%)</title><rect x="800.5" y="181" width="0.7" height="15.0" fill="rgb(228,131,16)" rx="2" ry="2" />
<text  x="803.47" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (22 samples, 0.05%)</title><rect x="828.1" y="341" width="0.6" height="15.0" fill="rgb(214,12,46)" rx="2" ry="2" />
<text  x="831.14" y="351.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (16 samples, 0.03%)</title><rect x="1002.7" y="293" width="0.4" height="15.0" fill="rgb(220,204,27)" rx="2" ry="2" />
<text  x="1005.70" y="303.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (14 samples, 0.03%)</title><rect x="1139.6" y="309" width="0.3" height="15.0" fill="rgb(246,99,33)" rx="2" ry="2" />
<text  x="1142.60" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (24 samples, 0.05%)</title><rect x="631.8" y="469" width="0.6" height="15.0" fill="rgb(236,35,32)" rx="2" ry="2" />
<text  x="634.83" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (32 samples, 0.07%)</title><rect x="93.6" y="405" width="0.8" height="15.0" fill="rgb(235,36,47)" rx="2" ry="2" />
<text  x="96.58" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (75 samples, 0.16%)</title><rect x="20.4" y="357" width="1.8" height="15.0" fill="rgb(214,166,16)" rx="2" ry="2" />
<text  x="23.36" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="1060.1" y="309" width="0.4" height="15.0" fill="rgb(226,87,15)" rx="2" ry="2" />
<text  x="1063.14" y="319.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (101 samples, 0.21%)</title><rect x="361.5" y="165" width="2.6" height="15.0" fill="rgb(205,138,18)" rx="2" ry="2" />
<text  x="364.55" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (38 samples, 0.08%)</title><rect x="34.2" y="485" width="0.9" height="15.0" fill="rgb(250,54,16)" rx="2" ry="2" />
<text  x="37.16" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (5 samples, 0.01%)</title><rect x="1034.7" y="197" width="0.2" height="15.0" fill="rgb(240,10,5)" rx="2" ry="2" />
<text  x="1037.74" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="702.0" y="469" width="0.2" height="15.0" fill="rgb(233,201,30)" rx="2" ry="2" />
<text  x="704.97" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.03%)</title><rect x="567.4" y="293" width="0.3" height="15.0" fill="rgb(226,126,10)" rx="2" ry="2" />
<text  x="570.36" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (26 samples, 0.05%)</title><rect x="324.1" y="181" width="0.6" height="15.0" fill="rgb(238,185,33)" rx="2" ry="2" />
<text  x="327.06" y="191.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="594.6" y="405" width="1.0" height="15.0" fill="rgb(221,54,28)" rx="2" ry="2" />
<text  x="597.56" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%)</title><rect x="788.7" y="261" width="1.6" height="15.0" fill="rgb(214,30,31)" rx="2" ry="2" />
<text  x="791.72" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (7 samples, 0.01%)</title><rect x="673.2" y="469" width="0.1" height="15.0" fill="rgb(207,76,14)" rx="2" ry="2" />
<text  x="676.16" y="479.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="1146.4" y="485" width="0.5" height="15.0" fill="rgb(224,206,10)" rx="2" ry="2" />
<text  x="1149.39" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (28 samples, 0.06%)</title><rect x="585.8" y="357" width="0.7" height="15.0" fill="rgb(249,6,11)" rx="2" ry="2" />
<text  x="588.77" y="367.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1051.2" y="277" width="0.1" height="15.0" fill="rgb(223,172,32)" rx="2" ry="2" />
<text  x="1054.19" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (342 samples, 0.72%)</title><rect x="1026.1" y="213" width="8.4" height="15.0" fill="rgb(254,81,28)" rx="2" ry="2" />
<text  x="1029.07" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="423.2" y="373" width="0.2" height="15.0" fill="rgb(227,66,36)" rx="2" ry="2" />
<text  x="426.22" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (179 samples, 0.38%)</title><rect x="764.4" y="357" width="4.5" height="15.0" fill="rgb(229,182,0)" rx="2" ry="2" />
<text  x="767.44" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="1106.7" y="357" width="0.2" height="15.0" fill="rgb(229,146,9)" rx="2" ry="2" />
<text  x="1109.67" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (355 samples, 0.75%)</title><rect x="397.4" y="245" width="8.8" height="15.0" fill="rgb(231,133,33)" rx="2" ry="2" />
<text  x="400.38" y="255.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%)</title><rect x="607.5" y="405" width="0.1" height="15.0" fill="rgb(217,34,11)" rx="2" ry="2" />
<text  x="610.50" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="21.9" y="245" width="0.2" height="15.0" fill="rgb(231,15,30)" rx="2" ry="2" />
<text  x="24.94" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="935.4" y="373" width="0.2" height="15.0" fill="rgb(240,156,21)" rx="2" ry="2" />
<text  x="938.36" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (48 samples, 0.10%)</title><rect x="749.6" y="309" width="1.2" height="15.0" fill="rgb(247,128,32)" rx="2" ry="2" />
<text  x="752.62" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1047.4" y="277" width="0.1" height="15.0" fill="rgb(245,71,51)" rx="2" ry="2" />
<text  x="1050.38" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="525.7" y="325" width="0.2" height="15.0" fill="rgb(208,85,26)" rx="2" ry="2" />
<text  x="528.65" y="335.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (12 samples, 0.03%)</title><rect x="927.0" y="389" width="0.3" height="15.0" fill="rgb(221,62,46)" rx="2" ry="2" />
<text  x="929.96" y="399.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (28 samples, 0.06%)</title><rect x="824.4" y="293" width="0.7" height="15.0" fill="rgb(254,216,3)" rx="2" ry="2" />
<text  x="827.43" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%)</title><rect x="965.4" y="373" width="0.2" height="15.0" fill="rgb(249,128,24)" rx="2" ry="2" />
<text  x="968.44" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (69 samples, 0.14%)</title><rect x="765.3" y="341" width="1.7" height="15.0" fill="rgb(221,63,44)" rx="2" ry="2" />
<text  x="768.33" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="69.8" y="373" width="0.2" height="15.0" fill="rgb(250,200,28)" rx="2" ry="2" />
<text  x="72.76" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (37 samples, 0.08%)</title><rect x="1149.8" y="469" width="1.0" height="15.0" fill="rgb(230,90,20)" rx="2" ry="2" />
<text  x="1152.83" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (6 samples, 0.01%)</title><rect x="456.9" y="261" width="0.1" height="15.0" fill="rgb(224,118,48)" rx="2" ry="2" />
<text  x="459.87" y="271.5" ></text>
</g>
<g >
<title>std::type_info::operator== (15 samples, 0.03%)</title><rect x="1075.9" y="277" width="0.3" height="15.0" fill="rgb(214,205,18)" rx="2" ry="2" />
<text  x="1078.87" y="287.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (414 samples, 0.87%)</title><rect x="467.8" y="309" width="10.3" height="15.0" fill="rgb(239,85,19)" rx="2" ry="2" />
<text  x="470.82" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,524 samples, 9.50%)</title><rect x="429.1" y="373" width="112.1" height="15.0" fill="rgb(219,18,20)" rx="2" ry="2" />
<text  x="432.09" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="1154.6" y="421" width="0.7" height="15.0" fill="rgb(239,186,46)" rx="2" ry="2" />
<text  x="1157.64" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (10 samples, 0.02%)</title><rect x="873.1" y="373" width="0.2" height="15.0" fill="rgb(253,135,48)" rx="2" ry="2" />
<text  x="876.09" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (22 samples, 0.05%)</title><rect x="947.0" y="357" width="0.5" height="15.0" fill="rgb(221,81,49)" rx="2" ry="2" />
<text  x="950.00" y="367.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (32 samples, 0.07%)</title><rect x="357.9" y="149" width="0.8" height="15.0" fill="rgb(229,203,24)" rx="2" ry="2" />
<text  x="360.93" y="159.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%)</title><rect x="755.1" y="405" width="1.0" height="15.0" fill="rgb(253,75,31)" rx="2" ry="2" />
<text  x="758.15" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%)</title><rect x="716.6" y="485" width="0.2" height="15.0" fill="rgb(216,70,14)" rx="2" ry="2" />
<text  x="719.59" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (20 samples, 0.04%)</title><rect x="661.1" y="469" width="0.5" height="15.0" fill="rgb(208,186,26)" rx="2" ry="2" />
<text  x="664.14" y="479.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.17%)</title><rect x="149.8" y="213" width="2.1" height="15.0" fill="rgb(210,225,35)" rx="2" ry="2" />
<text  x="152.85" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="537.4" y="277" width="0.2" height="15.0" fill="rgb(211,162,28)" rx="2" ry="2" />
<text  x="540.40" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%)</title><rect x="290.6" y="293" width="0.6" height="15.0" fill="rgb(250,124,40)" rx="2" ry="2" />
<text  x="293.59" y="303.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (10 samples, 0.02%)</title><rect x="224.9" y="229" width="0.3" height="15.0" fill="rgb(242,165,9)" rx="2" ry="2" />
<text  x="227.95" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="675.0" y="437" width="0.4" height="15.0" fill="rgb(233,137,12)" rx="2" ry="2" />
<text  x="678.04" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (12 samples, 0.03%)</title><rect x="215.3" y="181" width="0.3" height="15.0" fill="rgb(232,57,51)" rx="2" ry="2" />
<text  x="218.26" y="191.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (14 samples, 0.03%)</title><rect x="409.9" y="229" width="0.3" height="15.0" fill="rgb(218,95,39)" rx="2" ry="2" />
<text  x="412.89" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="459.1" y="277" width="0.2" height="15.0" fill="rgb(234,105,23)" rx="2" ry="2" />
<text  x="462.15" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="858.2" y="437" width="0.1" height="15.0" fill="rgb(243,201,31)" rx="2" ry="2" />
<text  x="861.22" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (8 samples, 0.02%)</title><rect x="862.9" y="357" width="0.2" height="15.0" fill="rgb(242,12,1)" rx="2" ry="2" />
<text  x="865.91" y="367.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1140.5" y="149" width="0.1" height="15.0" fill="rgb(227,46,29)" rx="2" ry="2" />
<text  x="1143.52" y="159.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (40 samples, 0.08%)</title><rect x="223.5" y="229" width="1.0" height="15.0" fill="rgb(212,194,35)" rx="2" ry="2" />
<text  x="226.49" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="538.5" y="341" width="0.5" height="15.0" fill="rgb(209,81,16)" rx="2" ry="2" />
<text  x="541.46" y="351.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,687 samples, 22.44%)</title><rect x="874.6" y="485" width="264.8" height="15.0" fill="rgb(209,96,48)" rx="2" ry="2" />
<text  x="877.63" y="495.5" >seastar::concrete_execution_stage&lt;s..</text>
</g>
<g >
<title>service::shared_mutation::apply_locally (8 samples, 0.02%)</title><rect x="1140.2" y="229" width="0.2" height="15.0" fill="rgb(240,122,20)" rx="2" ry="2" />
<text  x="1143.20" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1139.4" y="421" width="0.7" height="15.0" fill="rgb(251,16,40)" rx="2" ry="2" />
<text  x="1142.43" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="637.9" y="453" width="0.2" height="15.0" fill="rgb(221,72,14)" rx="2" ry="2" />
<text  x="640.87" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (14 samples, 0.03%)</title><rect x="1138.2" y="437" width="0.3" height="15.0" fill="rgb(230,126,51)" rx="2" ry="2" />
<text  x="1141.19" y="447.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="840.4" y="421" width="0.3" height="15.0" fill="rgb(221,106,50)" rx="2" ry="2" />
<text  x="843.41" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="491.6" y="325" width="0.2" height="15.0" fill="rgb(241,100,17)" rx="2" ry="2" />
<text  x="494.56" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%)</title><rect x="935.6" y="405" width="0.4" height="15.0" fill="rgb(208,95,45)" rx="2" ry="2" />
<text  x="938.60" y="415.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (45 samples, 0.09%)</title><rect x="807.1" y="149" width="1.1" height="15.0" fill="rgb(245,40,40)" rx="2" ry="2" />
<text  x="810.13" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="578.9" y="325" width="0.1" height="15.0" fill="rgb(222,110,49)" rx="2" ry="2" />
<text  x="581.90" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1047.3" y="229" width="0.1" height="15.0" fill="rgb(244,47,37)" rx="2" ry="2" />
<text  x="1050.25" y="239.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="459.5" y="293" width="0.6" height="15.0" fill="rgb(250,106,24)" rx="2" ry="2" />
<text  x="462.47" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (29 samples, 0.06%)</title><rect x="565.1" y="293" width="0.7" height="15.0" fill="rgb(234,76,20)" rx="2" ry="2" />
<text  x="568.05" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="555.5" y="421" width="0.1" height="15.0" fill="rgb(230,91,38)" rx="2" ry="2" />
<text  x="558.49" y="431.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (6 samples, 0.01%)</title><rect x="23.5" y="373" width="0.1" height="15.0" fill="rgb(252,133,44)" rx="2" ry="2" />
<text  x="26.45" y="383.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (5 samples, 0.01%)</title><rect x="750.6" y="277" width="0.1" height="15.0" fill="rgb(252,199,27)" rx="2" ry="2" />
<text  x="753.59" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="1106.4" y="357" width="0.3" height="15.0" fill="rgb(209,161,41)" rx="2" ry="2" />
<text  x="1109.40" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (7 samples, 0.01%)</title><rect x="609.9" y="437" width="0.2" height="15.0" fill="rgb(215,47,5)" rx="2" ry="2" />
<text  x="612.90" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (42 samples, 0.09%)</title><rect x="657.7" y="453" width="1.1" height="15.0" fill="rgb(242,166,13)" rx="2" ry="2" />
<text  x="660.72" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (5 samples, 0.01%)</title><rect x="316.8" y="213" width="0.1" height="15.0" fill="rgb(221,49,50)" rx="2" ry="2" />
<text  x="319.75" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (14 samples, 0.03%)</title><rect x="240.2" y="229" width="0.4" height="15.0" fill="rgb(251,68,37)" rx="2" ry="2" />
<text  x="243.21" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (5 samples, 0.01%)</title><rect x="815.6" y="277" width="0.2" height="15.0" fill="rgb(215,137,12)" rx="2" ry="2" />
<text  x="818.63" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (9 samples, 0.02%)</title><rect x="953.7" y="373" width="0.2" height="15.0" fill="rgb(244,222,39)" rx="2" ry="2" />
<text  x="956.67" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="828.7" y="373" width="0.1" height="15.0" fill="rgb(254,132,7)" rx="2" ry="2" />
<text  x="831.69" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (205 samples, 0.43%)</title><rect x="694.9" y="469" width="5.0" height="15.0" fill="rgb(210,101,5)" rx="2" ry="2" />
<text  x="697.86" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="543.2" y="389" width="0.3" height="15.0" fill="rgb(246,65,54)" rx="2" ry="2" />
<text  x="546.25" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="704.2" y="485" width="0.1" height="15.0" fill="rgb(243,160,6)" rx="2" ry="2" />
<text  x="707.18" y="495.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (13 samples, 0.03%)</title><rect x="615.1" y="437" width="0.3" height="15.0" fill="rgb(244,70,17)" rx="2" ry="2" />
<text  x="618.13" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (9 samples, 0.02%)</title><rect x="279.7" y="357" width="0.2" height="15.0" fill="rgb(217,83,18)" rx="2" ry="2" />
<text  x="282.66" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%)</title><rect x="564.2" y="309" width="0.5" height="15.0" fill="rgb(215,79,54)" rx="2" ry="2" />
<text  x="567.21" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="686.9" y="469" width="0.1" height="15.0" fill="rgb(213,15,40)" rx="2" ry="2" />
<text  x="689.88" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (15 samples, 0.03%)</title><rect x="105.7" y="373" width="0.4" height="15.0" fill="rgb(230,78,50)" rx="2" ry="2" />
<text  x="108.72" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="905.7" y="341" width="0.2" height="15.0" fill="rgb(243,13,20)" rx="2" ry="2" />
<text  x="908.72" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="901.4" y="261" width="0.2" height="15.0" fill="rgb(236,143,29)" rx="2" ry="2" />
<text  x="904.39" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (109 samples, 0.23%)</title><rect x="855.2" y="389" width="2.7" height="15.0" fill="rgb(236,158,30)" rx="2" ry="2" />
<text  x="858.23" y="399.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (71 samples, 0.15%)</title><rect x="530.5" y="309" width="1.8" height="15.0" fill="rgb(223,34,16)" rx="2" ry="2" />
<text  x="533.54" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%)</title><rect x="793.0" y="229" width="0.8" height="15.0" fill="rgb(205,228,29)" rx="2" ry="2" />
<text  x="796.01" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,277 samples, 11.08%)</title><rect x="287.3" y="373" width="130.7" height="15.0" fill="rgb(239,22,21)" rx="2" ry="2" />
<text  x="290.29" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (31 samples, 0.07%)</title><rect x="1098.0" y="277" width="0.8" height="15.0" fill="rgb(237,25,19)" rx="2" ry="2" />
<text  x="1101.00" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.01%)</title><rect x="642.4" y="485" width="0.1" height="15.0" fill="rgb(217,72,32)" rx="2" ry="2" />
<text  x="645.41" y="495.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (24 samples, 0.05%)</title><rect x="130.7" y="229" width="0.6" height="15.0" fill="rgb(230,223,14)" rx="2" ry="2" />
<text  x="133.74" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1122.6" y="373" width="0.2" height="15.0" fill="rgb(238,75,3)" rx="2" ry="2" />
<text  x="1125.63" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="709.9" y="421" width="0.2" height="15.0" fill="rgb(205,171,28)" rx="2" ry="2" />
<text  x="712.88" y="431.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.02%)</title><rect x="24.7" y="549" width="0.3" height="15.0" fill="rgb(226,107,14)" rx="2" ry="2" />
<text  x="27.69" y="559.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (46 samples, 0.10%)</title><rect x="92.4" y="405" width="1.2" height="15.0" fill="rgb(235,41,14)" rx="2" ry="2" />
<text  x="95.44" y="415.5" ></text>
</g>
<g >
<title>database::query (147 samples, 0.31%)</title><rect x="44.3" y="501" width="3.6" height="15.0" fill="rgb(217,64,34)" rx="2" ry="2" />
<text  x="47.27" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (334 samples, 0.70%)</title><rect x="397.9" y="229" width="8.2" height="15.0" fill="rgb(245,139,2)" rx="2" ry="2" />
<text  x="400.87" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%)</title><rect x="675.5" y="437" width="0.3" height="15.0" fill="rgb(242,21,22)" rx="2" ry="2" />
<text  x="678.46" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (19 samples, 0.04%)</title><rect x="196.0" y="117" width="0.4" height="15.0" fill="rgb(241,49,37)" rx="2" ry="2" />
<text  x="198.96" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (57 samples, 0.12%)</title><rect x="843.0" y="389" width="1.4" height="15.0" fill="rgb(245,226,42)" rx="2" ry="2" />
<text  x="846.01" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (17 samples, 0.04%)</title><rect x="330.4" y="181" width="0.4" height="15.0" fill="rgb(233,199,53)" rx="2" ry="2" />
<text  x="333.38" y="191.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (796 samples, 1.67%)</title><rect x="557.3" y="389" width="19.7" height="15.0" fill="rgb(234,106,32)" rx="2" ry="2" />
<text  x="560.30" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="513.4" y="181" width="0.4" height="15.0" fill="rgb(228,171,30)" rx="2" ry="2" />
<text  x="516.36" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="776.5" y="357" width="0.4" height="15.0" fill="rgb(221,62,49)" rx="2" ry="2" />
<text  x="779.51" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%)</title><rect x="492.1" y="325" width="0.3" height="15.0" fill="rgb(229,201,22)" rx="2" ry="2" />
<text  x="495.13" y="335.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (5 samples, 0.01%)</title><rect x="712.5" y="421" width="0.2" height="15.0" fill="rgb(230,36,21)" rx="2" ry="2" />
<text  x="715.53" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="785.6" y="293" width="0.1" height="15.0" fill="rgb(207,100,29)" rx="2" ry="2" />
<text  x="788.57" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (7 samples, 0.01%)</title><rect x="694.4" y="469" width="0.2" height="15.0" fill="rgb(231,170,30)" rx="2" ry="2" />
<text  x="697.39" y="479.5" ></text>
</g>
<g >
<title>free (14 samples, 0.03%)</title><rect x="399.0" y="197" width="0.4" height="15.0" fill="rgb(250,72,37)" rx="2" ry="2" />
<text  x="402.01" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="274.5" y="261" width="2.0" height="15.0" fill="rgb(247,100,4)" rx="2" ry="2" />
<text  x="277.53" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="458.9" y="277" width="0.1" height="15.0" fill="rgb(254,125,35)" rx="2" ry="2" />
<text  x="461.85" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.03%)</title><rect x="798.9" y="213" width="0.4" height="15.0" fill="rgb(249,113,36)" rx="2" ry="2" />
<text  x="801.90" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="412.3" y="277" width="0.1" height="15.0" fill="rgb(221,16,51)" rx="2" ry="2" />
<text  x="415.27" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (127 samples, 0.27%)</title><rect x="636.4" y="485" width="3.1" height="15.0" fill="rgb(229,163,12)" rx="2" ry="2" />
<text  x="639.36" y="495.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="530.3" y="309" width="0.2" height="15.0" fill="rgb(223,48,11)" rx="2" ry="2" />
<text  x="533.29" y="319.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (5 samples, 0.01%)</title><rect x="493.7" y="309" width="0.1" height="15.0" fill="rgb(214,98,47)" rx="2" ry="2" />
<text  x="496.72" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (79 samples, 0.17%)</title><rect x="842.6" y="405" width="2.0" height="15.0" fill="rgb(226,123,50)" rx="2" ry="2" />
<text  x="845.64" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="221.3" y="181" width="0.1" height="15.0" fill="rgb(248,89,32)" rx="2" ry="2" />
<text  x="224.28" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (34 samples, 0.07%)</title><rect x="846.5" y="421" width="0.9" height="15.0" fill="rgb(231,90,37)" rx="2" ry="2" />
<text  x="849.53" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,315 samples, 21.66%)</title><rect x="882.1" y="437" width="255.6" height="15.0" fill="rgb(249,199,44)" rx="2" ry="2" />
<text  x="885.11" y="447.5" >cql3::statements::select_statement..</text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (678 samples, 1.42%)</title><rect x="794.4" y="261" width="16.8" height="15.0" fill="rgb(218,46,36)" rx="2" ry="2" />
<text  x="797.37" y="271.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (27 samples, 0.06%)</title><rect x="65.5" y="405" width="0.6" height="15.0" fill="rgb(252,9,48)" rx="2" ry="2" />
<text  x="68.48" y="415.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (5 samples, 0.01%)</title><rect x="606.8" y="421" width="0.2" height="15.0" fill="rgb(242,106,8)" rx="2" ry="2" />
<text  x="609.83" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (9 samples, 0.02%)</title><rect x="718.7" y="501" width="0.2" height="15.0" fill="rgb(247,67,41)" rx="2" ry="2" />
<text  x="721.72" y="511.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (52 samples, 0.11%)</title><rect x="535.4" y="261" width="1.3" height="15.0" fill="rgb(253,117,25)" rx="2" ry="2" />
<text  x="538.37" y="271.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="633.0" y="485" width="0.5" height="15.0" fill="rgb(211,63,27)" rx="2" ry="2" />
<text  x="636.02" y="495.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (13 samples, 0.03%)</title><rect x="909.8" y="357" width="0.4" height="15.0" fill="rgb(219,226,5)" rx="2" ry="2" />
<text  x="912.84" y="367.5" ></text>
</g>
<g >
<title>operator delete (91 samples, 0.19%)</title><rect x="86.8" y="437" width="2.3" height="15.0" fill="rgb(219,81,26)" rx="2" ry="2" />
<text  x="89.81" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (31 samples, 0.07%)</title><rect x="125.3" y="245" width="0.8" height="15.0" fill="rgb(245,189,14)" rx="2" ry="2" />
<text  x="128.32" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="257.5" y="309" width="0.2" height="15.0" fill="rgb(238,219,48)" rx="2" ry="2" />
<text  x="260.53" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1143.9" y="501" width="0.1" height="15.0" fill="rgb(209,25,2)" rx="2" ry="2" />
<text  x="1146.91" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="840.7" y="421" width="0.2" height="15.0" fill="rgb(213,111,46)" rx="2" ry="2" />
<text  x="843.66" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="38.8" y="405" width="0.2" height="15.0" fill="rgb(234,173,31)" rx="2" ry="2" />
<text  x="41.79" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="417.9" y="357" width="0.1" height="15.0" fill="rgb(253,32,25)" rx="2" ry="2" />
<text  x="420.92" y="367.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (6 samples, 0.01%)</title><rect x="527.7" y="325" width="0.2" height="15.0" fill="rgb(228,8,40)" rx="2" ry="2" />
<text  x="530.71" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1174.6" y="437" width="0.1" height="15.0" fill="rgb(214,2,23)" rx="2" ry="2" />
<text  x="1177.59" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (20 samples, 0.04%)</title><rect x="249.9" y="277" width="0.5" height="15.0" fill="rgb(226,52,9)" rx="2" ry="2" />
<text  x="252.92" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1135.9" y="421" width="0.1" height="15.0" fill="rgb(232,194,36)" rx="2" ry="2" />
<text  x="1138.86" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (49 samples, 0.10%)</title><rect x="797.3" y="165" width="1.2" height="15.0" fill="rgb(236,21,9)" rx="2" ry="2" />
<text  x="800.27" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="864.8" y="437" width="0.3" height="15.0" fill="rgb(234,213,48)" rx="2" ry="2" />
<text  x="867.84" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (108 samples, 0.23%)</title><rect x="1029.9" y="165" width="2.7" height="15.0" fill="rgb(213,113,21)" rx="2" ry="2" />
<text  x="1032.91" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (7 samples, 0.01%)</title><rect x="944.8" y="405" width="0.2" height="15.0" fill="rgb(241,91,33)" rx="2" ry="2" />
<text  x="947.80" y="415.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (5 samples, 0.01%)</title><rect x="24.3" y="357" width="0.1" height="15.0" fill="rgb(251,222,0)" rx="2" ry="2" />
<text  x="27.27" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (160 samples, 0.34%)</title><rect x="1117.7" y="389" width="4.0" height="15.0" fill="rgb(240,229,20)" rx="2" ry="2" />
<text  x="1120.70" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="810.8" y="197" width="0.1" height="15.0" fill="rgb(241,74,0)" rx="2" ry="2" />
<text  x="813.77" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="598.4" y="389" width="0.3" height="15.0" fill="rgb(224,48,54)" rx="2" ry="2" />
<text  x="601.40" y="399.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (261 samples, 0.55%)</title><rect x="1083.6" y="245" width="6.5" height="15.0" fill="rgb(224,9,3)" rx="2" ry="2" />
<text  x="1086.60" y="255.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%)</title><rect x="220.4" y="101" width="0.1" height="15.0" fill="rgb(218,101,38)" rx="2" ry="2" />
<text  x="223.39" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%)</title><rect x="687.3" y="437" width="0.7" height="15.0" fill="rgb(251,43,34)" rx="2" ry="2" />
<text  x="690.28" y="447.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.19%)</title><rect x="1070.1" y="325" width="2.2" height="15.0" fill="rgb(242,8,0)" rx="2" ry="2" />
<text  x="1073.10" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (187 samples, 0.39%)</title><rect x="730.9" y="405" width="4.6" height="15.0" fill="rgb(241,17,45)" rx="2" ry="2" />
<text  x="733.86" y="415.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (405 samples, 0.85%)</title><rect x="527.9" y="325" width="10.0" height="15.0" fill="rgb(214,18,17)" rx="2" ry="2" />
<text  x="530.91" y="335.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="937.2" y="405" width="0.2" height="15.0" fill="rgb(207,191,28)" rx="2" ry="2" />
<text  x="940.24" y="415.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (24 samples, 0.05%)</title><rect x="451.0" y="293" width="0.6" height="15.0" fill="rgb(227,123,44)" rx="2" ry="2" />
<text  x="454.02" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (283 samples, 0.59%)</title><rect x="508.7" y="245" width="7.0" height="15.0" fill="rgb(226,163,38)" rx="2" ry="2" />
<text  x="511.73" y="255.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (262 samples, 0.55%)</title><rect x="483.8" y="229" width="6.5" height="15.0" fill="rgb(212,189,4)" rx="2" ry="2" />
<text  x="486.80" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (462 samples, 0.97%)</title><rect x="692.0" y="501" width="11.4" height="15.0" fill="rgb(222,213,36)" rx="2" ry="2" />
<text  x="694.99" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%)</title><rect x="1037.8" y="181" width="0.3" height="15.0" fill="rgb(220,130,46)" rx="2" ry="2" />
<text  x="1040.79" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (27 samples, 0.06%)</title><rect x="117.4" y="277" width="0.7" height="15.0" fill="rgb(206,1,36)" rx="2" ry="2" />
<text  x="120.39" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="314.2" y="181" width="0.2" height="15.0" fill="rgb(205,118,12)" rx="2" ry="2" />
<text  x="317.22" y="191.5" ></text>
</g>
<g >
<title>seastar::gate::leave (6 samples, 0.01%)</title><rect x="611.4" y="437" width="0.1" height="15.0" fill="rgb(206,214,34)" rx="2" ry="2" />
<text  x="614.36" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (11 samples, 0.02%)</title><rect x="833.8" y="277" width="0.3" height="15.0" fill="rgb(212,110,40)" rx="2" ry="2" />
<text  x="836.82" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (199 samples, 0.42%)</title><rect x="18.3" y="421" width="4.9" height="15.0" fill="rgb(219,191,44)" rx="2" ry="2" />
<text  x="21.28" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (74 samples, 0.16%)</title><rect x="808.4" y="133" width="1.9" height="15.0" fill="rgb(209,45,8)" rx="2" ry="2" />
<text  x="811.44" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (6 samples, 0.01%)</title><rect x="696.3" y="453" width="0.1" height="15.0" fill="rgb(217,37,9)" rx="2" ry="2" />
<text  x="699.30" y="463.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="908.3" y="325" width="0.7" height="15.0" fill="rgb(224,193,46)" rx="2" ry="2" />
<text  x="911.25" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,196 samples, 4.61%)</title><rect x="888.8" y="421" width="54.4" height="15.0" fill="rgb(252,137,15)" rx="2" ry="2" />
<text  x="891.80" y="431.5" >cql3:..</text>
</g>
<g >
<title>operator delete (10 samples, 0.02%)</title><rect x="37.4" y="453" width="0.3" height="15.0" fill="rgb(220,227,1)" rx="2" ry="2" />
<text  x="40.43" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (14 samples, 0.03%)</title><rect x="72.3" y="453" width="0.4" height="15.0" fill="rgb(235,5,54)" rx="2" ry="2" />
<text  x="75.32" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (5 samples, 0.01%)</title><rect x="910.2" y="373" width="0.1" height="15.0" fill="rgb(211,118,44)" rx="2" ry="2" />
<text  x="913.16" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="849.3" y="357" width="0.1" height="15.0" fill="rgb(224,192,35)" rx="2" ry="2" />
<text  x="852.28" y="367.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (61 samples, 0.13%)</title><rect x="18.4" y="357" width="1.5" height="15.0" fill="rgb(227,80,45)" rx="2" ry="2" />
<text  x="21.37" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (12 samples, 0.03%)</title><rect x="1131.3" y="389" width="0.3" height="15.0" fill="rgb(224,186,1)" rx="2" ry="2" />
<text  x="1134.28" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="543.1" y="405" width="0.4" height="15.0" fill="rgb(218,224,47)" rx="2" ry="2" />
<text  x="546.15" y="415.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (41 samples, 0.09%)</title><rect x="735.5" y="405" width="1.0" height="15.0" fill="rgb(235,150,15)" rx="2" ry="2" />
<text  x="738.50" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.01%)</title><rect x="1033.0" y="165" width="0.1" height="15.0" fill="rgb(253,176,14)" rx="2" ry="2" />
<text  x="1035.96" y="175.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.01%)</title><rect x="707.6" y="453" width="0.2" height="15.0" fill="rgb(215,4,34)" rx="2" ry="2" />
<text  x="710.65" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (50 samples, 0.10%)</title><rect x="832.9" y="309" width="1.2" height="15.0" fill="rgb(228,2,30)" rx="2" ry="2" />
<text  x="835.85" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (12 samples, 0.03%)</title><rect x="26.5" y="517" width="0.3" height="15.0" fill="rgb(212,209,23)" rx="2" ry="2" />
<text  x="29.48" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="576.3" y="325" width="0.1" height="15.0" fill="rgb(210,156,46)" rx="2" ry="2" />
<text  x="579.28" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (19 samples, 0.04%)</title><rect x="769.3" y="405" width="0.5" height="15.0" fill="rgb(252,181,23)" rx="2" ry="2" />
<text  x="772.30" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="890.5" y="405" width="0.3" height="15.0" fill="rgb(210,193,22)" rx="2" ry="2" />
<text  x="893.48" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (135 samples, 0.28%)</title><rect x="997.2" y="309" width="3.3" height="15.0" fill="rgb(215,73,38)" rx="2" ry="2" />
<text  x="1000.20" y="319.5" ></text>
</g>
<g >
<title>tracing::add_table_name (15 samples, 0.03%)</title><rect x="1138.7" y="437" width="0.4" height="15.0" fill="rgb(212,151,33)" rx="2" ry="2" />
<text  x="1141.68" y="447.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (29 samples, 0.06%)</title><rect x="579.0" y="373" width="0.7" height="15.0" fill="rgb(251,102,20)" rx="2" ry="2" />
<text  x="582.03" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (14 samples, 0.03%)</title><rect x="524.6" y="325" width="0.4" height="15.0" fill="rgb(244,211,35)" rx="2" ry="2" />
<text  x="527.64" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (50 samples, 0.10%)</title><rect x="139.7" y="245" width="1.3" height="15.0" fill="rgb(223,121,10)" rx="2" ry="2" />
<text  x="142.71" y="255.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (67 samples, 0.14%)</title><rect x="622.7" y="437" width="1.6" height="15.0" fill="rgb(209,95,44)" rx="2" ry="2" />
<text  x="625.68" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (64 samples, 0.13%)</title><rect x="564.7" y="309" width="1.6" height="15.0" fill="rgb(217,184,45)" rx="2" ry="2" />
<text  x="567.70" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="1136.5" y="405" width="0.2" height="15.0" fill="rgb(205,114,32)" rx="2" ry="2" />
<text  x="1139.45" y="415.5" ></text>
</g>
<g >
<title>table::set_hit_rate (74 samples, 0.16%)</title><rect x="713.6" y="453" width="1.9" height="15.0" fill="rgb(243,161,23)" rx="2" ry="2" />
<text  x="716.64" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (768 samples, 1.61%)</title><rect x="892.3" y="389" width="19.0" height="15.0" fill="rgb(242,54,26)" rx="2" ry="2" />
<text  x="895.29" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="262.7" y="325" width="0.5" height="15.0" fill="rgb(248,78,36)" rx="2" ry="2" />
<text  x="265.66" y="335.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%)</title><rect x="1099.4" y="309" width="0.2" height="15.0" fill="rgb(211,8,46)" rx="2" ry="2" />
<text  x="1102.44" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (64 samples, 0.13%)</title><rect x="1109.5" y="405" width="1.6" height="15.0" fill="rgb(214,39,40)" rx="2" ry="2" />
<text  x="1112.50" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (252 samples, 0.53%)</title><rect x="18.0" y="485" width="6.2" height="15.0" fill="rgb(227,198,45)" rx="2" ry="2" />
<text  x="20.98" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (79 samples, 0.17%)</title><rect x="550.8" y="357" width="1.9" height="15.0" fill="rgb(214,129,14)" rx="2" ry="2" />
<text  x="553.75" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (68 samples, 0.14%)</title><rect x="193.7" y="101" width="1.7" height="15.0" fill="rgb(241,78,24)" rx="2" ry="2" />
<text  x="196.68" y="111.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (157 samples, 0.33%)</title><rect x="854.3" y="421" width="3.9" height="15.0" fill="rgb(209,92,20)" rx="2" ry="2" />
<text  x="857.33" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (31 samples, 0.07%)</title><rect x="192.5" y="101" width="0.8" height="15.0" fill="rgb(230,143,40)" rx="2" ry="2" />
<text  x="195.49" y="111.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="840.3" y="421" width="0.1" height="15.0" fill="rgb(212,19,15)" rx="2" ry="2" />
<text  x="843.26" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (6 samples, 0.01%)</title><rect x="874.4" y="309" width="0.1" height="15.0" fill="rgb(205,208,17)" rx="2" ry="2" />
<text  x="877.35" y="319.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (6 samples, 0.01%)</title><rect x="1134.1" y="405" width="0.1" height="15.0" fill="rgb(206,69,23)" rx="2" ry="2" />
<text  x="1137.08" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="403.1" y="197" width="0.3" height="15.0" fill="rgb(229,19,13)" rx="2" ry="2" />
<text  x="406.08" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (69 samples, 0.14%)</title><rect x="124.6" y="261" width="1.7" height="15.0" fill="rgb(254,90,2)" rx="2" ry="2" />
<text  x="127.62" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,362 samples, 9.16%)</title><rect x="137.6" y="277" width="108.1" height="15.0" fill="rgb(218,90,40)" rx="2" ry="2" />
<text  x="140.61" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,216 samples, 10.95%)</title><rect x="288.0" y="325" width="129.2" height="15.0" fill="rgb(208,12,29)" rx="2" ry="2" />
<text  x="290.96" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="690.6" y="421" width="0.9" height="15.0" fill="rgb(221,111,32)" rx="2" ry="2" />
<text  x="693.60" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (121 samples, 0.25%)</title><rect x="186.2" y="37" width="3.0" height="15.0" fill="rgb(240,62,27)" rx="2" ry="2" />
<text  x="189.20" y="47.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (113 samples, 0.24%)</title><rect x="342.0" y="165" width="2.8" height="15.0" fill="rgb(226,39,39)" rx="2" ry="2" />
<text  x="345.05" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="24.7" y="485" width="0.3" height="15.0" fill="rgb(210,5,18)" rx="2" ry="2" />
<text  x="27.69" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="844.3" y="357" width="0.1" height="15.0" fill="rgb(221,218,48)" rx="2" ry="2" />
<text  x="847.27" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.01%)</title><rect x="616.3" y="437" width="0.2" height="15.0" fill="rgb(249,183,15)" rx="2" ry="2" />
<text  x="619.32" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1046.4" y="277" width="0.1" height="15.0" fill="rgb(216,122,19)" rx="2" ry="2" />
<text  x="1049.41" y="287.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (305 samples, 0.64%)</title><rect x="729.2" y="437" width="7.5" height="15.0" fill="rgb(220,191,26)" rx="2" ry="2" />
<text  x="732.16" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="402.9" y="181" width="0.1" height="15.0" fill="rgb(218,18,52)" rx="2" ry="2" />
<text  x="405.85" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="437" width="0.9" height="15.0" fill="rgb(225,206,20)" rx="2" ry="2" />
<text  x="1143.12" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (26 samples, 0.05%)</title><rect x="775.3" y="357" width="0.7" height="15.0" fill="rgb(235,44,46)" rx="2" ry="2" />
<text  x="778.34" y="367.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,780 samples, 10.04%)</title><rect x="294.0" y="293" width="118.4" height="15.0" fill="rgb(211,187,47)" rx="2" ry="2" />
<text  x="296.96" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="554.5" y="421" width="0.3" height="15.0" fill="rgb(254,103,16)" rx="2" ry="2" />
<text  x="557.52" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="702.3" y="469" width="0.2" height="15.0" fill="rgb(244,125,20)" rx="2" ry="2" />
<text  x="705.30" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (85 samples, 0.18%)</title><rect x="665.9" y="453" width="2.1" height="15.0" fill="rgb(245,37,52)" rx="2" ry="2" />
<text  x="668.92" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="820.2" y="277" width="0.2" height="15.0" fill="rgb(234,9,39)" rx="2" ry="2" />
<text  x="823.21" y="287.5" ></text>
</g>
<g >
<title>database::find_schema (249 samples, 0.52%)</title><rect x="829.3" y="373" width="6.2" height="15.0" fill="rgb(237,29,0)" rx="2" ry="2" />
<text  x="832.28" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.03%)</title><rect x="608.7" y="421" width="0.3" height="15.0" fill="rgb(253,112,44)" rx="2" ry="2" />
<text  x="611.66" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (19 samples, 0.04%)</title><rect x="21.6" y="293" width="0.5" height="15.0" fill="rgb(219,110,15)" rx="2" ry="2" />
<text  x="24.65" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,949 samples, 4.09%)</title><rect x="777.1" y="389" width="48.2" height="15.0" fill="rgb(218,186,15)" rx="2" ry="2" />
<text  x="780.05" y="399.5" >std:..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.03%)</title><rect x="682.2" y="485" width="0.2" height="15.0" fill="rgb(245,68,2)" rx="2" ry="2" />
<text  x="685.15" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (68 samples, 0.14%)</title><rect x="387.0" y="165" width="1.7" height="15.0" fill="rgb(233,146,38)" rx="2" ry="2" />
<text  x="390.00" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (7 samples, 0.01%)</title><rect x="368.9" y="213" width="0.2" height="15.0" fill="rgb(245,225,31)" rx="2" ry="2" />
<text  x="371.91" y="223.5" ></text>
</g>
<g >
<title>compound_type&lt; (171 samples, 0.36%)</title><rect x="485.6" y="213" width="4.2" height="15.0" fill="rgb(221,46,41)" rx="2" ry="2" />
<text  x="488.61" y="223.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="915.5" y="357" width="0.4" height="15.0" fill="rgb(225,183,23)" rx="2" ry="2" />
<text  x="918.49" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="749.9" y="277" width="0.1" height="15.0" fill="rgb(211,2,30)" rx="2" ry="2" />
<text  x="752.87" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (7 samples, 0.01%)</title><rect x="1153.8" y="421" width="0.2" height="15.0" fill="rgb(218,91,11)" rx="2" ry="2" />
<text  x="1156.85" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (19 samples, 0.04%)</title><rect x="745.7" y="293" width="0.4" height="15.0" fill="rgb(241,165,40)" rx="2" ry="2" />
<text  x="748.66" y="303.5" ></text>
</g>
<g >
<title>database::query (12 samples, 0.03%)</title><rect x="1007.8" y="277" width="0.3" height="15.0" fill="rgb(232,26,44)" rx="2" ry="2" />
<text  x="1010.78" y="287.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="100.0" y="421" width="0.2" height="15.0" fill="rgb(227,138,29)" rx="2" ry="2" />
<text  x="102.99" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (14 samples, 0.03%)</title><rect x="449.7" y="277" width="0.4" height="15.0" fill="rgb(208,64,18)" rx="2" ry="2" />
<text  x="452.71" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="42.8" y="453" width="0.2" height="15.0" fill="rgb(227,55,50)" rx="2" ry="2" />
<text  x="45.78" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="390.5" y="181" width="0.2" height="15.0" fill="rgb(206,97,34)" rx="2" ry="2" />
<text  x="393.49" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (43 samples, 0.09%)</title><rect x="813.9" y="245" width="1.1" height="15.0" fill="rgb(208,224,52)" rx="2" ry="2" />
<text  x="816.90" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%)</title><rect x="525.0" y="325" width="0.2" height="15.0" fill="rgb(214,65,8)" rx="2" ry="2" />
<text  x="527.98" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (12 samples, 0.03%)</title><rect x="1175.6" y="373" width="0.3" height="15.0" fill="rgb(250,62,34)" rx="2" ry="2" />
<text  x="1178.58" y="383.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (41 samples, 0.09%)</title><rect x="846.4" y="437" width="1.0" height="15.0" fill="rgb(249,23,54)" rx="2" ry="2" />
<text  x="849.35" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (6 samples, 0.01%)</title><rect x="793.8" y="245" width="0.1" height="15.0" fill="rgb(225,157,9)" rx="2" ry="2" />
<text  x="796.80" y="255.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%)</title><rect x="213.2" y="101" width="0.1" height="15.0" fill="rgb(223,39,54)" rx="2" ry="2" />
<text  x="216.18" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%)</title><rect x="498.2" y="309" width="0.2" height="15.0" fill="rgb(248,19,20)" rx="2" ry="2" />
<text  x="501.22" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (22 samples, 0.05%)</title><rect x="505.4" y="261" width="0.5" height="15.0" fill="rgb(223,166,21)" rx="2" ry="2" />
<text  x="508.39" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (24 samples, 0.05%)</title><rect x="1032.0" y="149" width="0.6" height="15.0" fill="rgb(234,142,11)" rx="2" ry="2" />
<text  x="1034.99" y="159.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.04%)</title><rect x="946.2" y="373" width="0.5" height="15.0" fill="rgb(218,216,10)" rx="2" ry="2" />
<text  x="949.23" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (28 samples, 0.06%)</title><rect x="199.3" y="133" width="0.7" height="15.0" fill="rgb(216,93,23)" rx="2" ry="2" />
<text  x="202.33" y="143.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="274.5" y="277" width="2.0" height="15.0" fill="rgb(225,197,38)" rx="2" ry="2" />
<text  x="277.48" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="926.7" y="341" width="0.3" height="15.0" fill="rgb(221,154,13)" rx="2" ry="2" />
<text  x="929.71" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,115 samples, 14.94%)</title><rect x="104.6" y="389" width="176.3" height="15.0" fill="rgb(209,224,38)" rx="2" ry="2" />
<text  x="107.58" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (184 samples, 0.39%)</title><rect x="412.6" y="309" width="4.6" height="15.0" fill="rgb(236,228,8)" rx="2" ry="2" />
<text  x="415.64" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="575.3" y="309" width="0.1" height="15.0" fill="rgb(251,193,13)" rx="2" ry="2" />
<text  x="578.26" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="296.4" y="261" width="0.3" height="15.0" fill="rgb(226,149,44)" rx="2" ry="2" />
<text  x="299.41" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="388.7" y="165" width="0.2" height="15.0" fill="rgb(214,35,37)" rx="2" ry="2" />
<text  x="391.68" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%)</title><rect x="831.0" y="293" width="0.3" height="15.0" fill="rgb(216,187,1)" rx="2" ry="2" />
<text  x="833.99" y="303.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="221.5" y="197" width="0.2" height="15.0" fill="rgb(227,221,28)" rx="2" ry="2" />
<text  x="224.53" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="1049.3" y="213" width="0.3" height="15.0" fill="rgb(228,99,25)" rx="2" ry="2" />
<text  x="1052.29" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.01%)</title><rect x="525.3" y="325" width="0.2" height="15.0" fill="rgb(233,192,52)" rx="2" ry="2" />
<text  x="528.31" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (362 samples, 0.76%)</title><rect x="545.3" y="421" width="8.9" height="15.0" fill="rgb(221,76,20)" rx="2" ry="2" />
<text  x="548.25" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (23 samples, 0.05%)</title><rect x="1140.4" y="293" width="0.6" height="15.0" fill="rgb(231,48,43)" rx="2" ry="2" />
<text  x="1143.39" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%)</title><rect x="204.9" y="85" width="0.3" height="15.0" fill="rgb(218,206,10)" rx="2" ry="2" />
<text  x="207.93" y="95.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="803.8" y="117" width="0.2" height="15.0" fill="rgb(234,124,40)" rx="2" ry="2" />
<text  x="806.81" y="127.5" ></text>
</g>
<g >
<title>posix_memalign (140 samples, 0.29%)</title><rect x="185.7" y="53" width="3.5" height="15.0" fill="rgb(225,136,19)" rx="2" ry="2" />
<text  x="188.73" y="63.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (34 samples, 0.07%)</title><rect x="939.0" y="389" width="0.8" height="15.0" fill="rgb(252,51,40)" rx="2" ry="2" />
<text  x="941.97" y="399.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (7 samples, 0.01%)</title><rect x="619.5" y="405" width="0.2" height="15.0" fill="rgb(236,162,42)" rx="2" ry="2" />
<text  x="622.51" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="849.5" y="341" width="0.2" height="15.0" fill="rgb(220,85,19)" rx="2" ry="2" />
<text  x="852.50" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="873.1" y="357" width="0.2" height="15.0" fill="rgb(237,32,27)" rx="2" ry="2" />
<text  x="876.09" y="367.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (5 samples, 0.01%)</title><rect x="564.1" y="309" width="0.1" height="15.0" fill="rgb(216,64,53)" rx="2" ry="2" />
<text  x="567.08" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (25 samples, 0.05%)</title><rect x="667.4" y="437" width="0.6" height="15.0" fill="rgb(212,201,20)" rx="2" ry="2" />
<text  x="670.41" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (69 samples, 0.14%)</title><rect x="836.1" y="325" width="1.7" height="15.0" fill="rgb(224,170,21)" rx="2" ry="2" />
<text  x="839.12" y="335.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (7 samples, 0.01%)</title><rect x="732.6" y="293" width="0.2" height="15.0" fill="rgb(236,163,9)" rx="2" ry="2" />
<text  x="735.62" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (38 samples, 0.08%)</title><rect x="404.6" y="213" width="0.9" height="15.0" fill="rgb(211,183,10)" rx="2" ry="2" />
<text  x="407.59" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (23 samples, 0.05%)</title><rect x="858.4" y="453" width="0.6" height="15.0" fill="rgb(244,220,25)" rx="2" ry="2" />
<text  x="861.40" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (98 samples, 0.21%)</title><rect x="771.6" y="389" width="2.5" height="15.0" fill="rgb(225,10,16)" rx="2" ry="2" />
<text  x="774.65" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (256 samples, 0.54%)</title><rect x="270.8" y="309" width="6.4" height="15.0" fill="rgb(239,225,54)" rx="2" ry="2" />
<text  x="273.84" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,959 samples, 12.51%)</title><rect x="959.6" y="389" width="147.6" height="15.0" fill="rgb(218,34,3)" rx="2" ry="2" />
<text  x="962.57" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="536.8" y="261" width="0.5" height="15.0" fill="rgb(237,75,38)" rx="2" ry="2" />
<text  x="539.78" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (79 samples, 0.17%)</title><rect x="583.3" y="357" width="2.0" height="15.0" fill="rgb(214,132,27)" rx="2" ry="2" />
<text  x="586.31" y="367.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%)</title><rect x="582.1" y="357" width="1.2" height="15.0" fill="rgb(246,216,10)" rx="2" ry="2" />
<text  x="585.15" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,945 samples, 10.38%)</title><rect x="289.9" y="309" width="122.5" height="15.0" fill="rgb(235,41,30)" rx="2" ry="2" />
<text  x="292.87" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.01%)</title><rect x="23.3" y="405" width="0.1" height="15.0" fill="rgb(244,7,48)" rx="2" ry="2" />
<text  x="26.26" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (5 samples, 0.01%)</title><rect x="26.1" y="517" width="0.1" height="15.0" fill="rgb(219,125,36)" rx="2" ry="2" />
<text  x="29.08" y="527.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="357" width="0.9" height="15.0" fill="rgb(254,186,47)" rx="2" ry="2" />
<text  x="1143.12" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (50 samples, 0.10%)</title><rect x="927.9" y="373" width="1.3" height="15.0" fill="rgb(224,168,51)" rx="2" ry="2" />
<text  x="930.92" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (12 samples, 0.03%)</title><rect x="509.6" y="229" width="0.3" height="15.0" fill="rgb(254,149,54)" rx="2" ry="2" />
<text  x="512.62" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (198 samples, 0.42%)</title><rect x="673.4" y="485" width="4.9" height="15.0" fill="rgb(248,70,45)" rx="2" ry="2" />
<text  x="676.36" y="495.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (114 samples, 0.24%)</title><rect x="348.7" y="165" width="2.8" height="15.0" fill="rgb(233,114,34)" rx="2" ry="2" />
<text  x="351.66" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (6 samples, 0.01%)</title><rect x="574.9" y="309" width="0.2" height="15.0" fill="rgb(227,180,43)" rx="2" ry="2" />
<text  x="577.91" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (42 samples, 0.09%)</title><rect x="18.6" y="293" width="1.1" height="15.0" fill="rgb(240,154,15)" rx="2" ry="2" />
<text  x="21.65" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="24.2" y="453" width="0.2" height="15.0" fill="rgb(223,54,40)" rx="2" ry="2" />
<text  x="27.22" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (58 samples, 0.12%)</title><rect x="20.8" y="341" width="1.4" height="15.0" fill="rgb(212,140,25)" rx="2" ry="2" />
<text  x="23.75" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (7 samples, 0.01%)</title><rect x="779.9" y="357" width="0.1" height="15.0" fill="rgb(220,107,8)" rx="2" ry="2" />
<text  x="782.85" y="367.5" ></text>
</g>
<g >
<title>memtable::apply (12 samples, 0.03%)</title><rect x="1139.6" y="261" width="0.3" height="15.0" fill="rgb(236,100,40)" rx="2" ry="2" />
<text  x="1142.63" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (13 samples, 0.03%)</title><rect x="237.7" y="197" width="0.3" height="15.0" fill="rgb(250,197,31)" rx="2" ry="2" />
<text  x="240.68" y="207.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (7 samples, 0.01%)</title><rect x="117.9" y="261" width="0.2" height="15.0" fill="rgb(225,38,7)" rx="2" ry="2" />
<text  x="120.88" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="827.5" y="357" width="0.2" height="15.0" fill="rgb(224,15,49)" rx="2" ry="2" />
<text  x="830.47" y="367.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="680.4" y="469" width="0.1" height="15.0" fill="rgb(236,12,30)" rx="2" ry="2" />
<text  x="683.37" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (5 samples, 0.01%)</title><rect x="576.5" y="341" width="0.1" height="15.0" fill="rgb(232,95,3)" rx="2" ry="2" />
<text  x="579.47" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (776 samples, 1.63%)</title><rect x="557.4" y="373" width="19.2" height="15.0" fill="rgb(241,39,43)" rx="2" ry="2" />
<text  x="560.42" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (201 samples, 0.42%)</title><rect x="764.0" y="373" width="5.0" height="15.0" fill="rgb(225,133,0)" rx="2" ry="2" />
<text  x="767.02" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (8 samples, 0.02%)</title><rect x="143.4" y="245" width="0.2" height="15.0" fill="rgb(227,74,54)" rx="2" ry="2" />
<text  x="146.35" y="255.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (20 samples, 0.04%)</title><rect x="1139.6" y="325" width="0.4" height="15.0" fill="rgb(248,39,16)" rx="2" ry="2" />
<text  x="1142.55" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (21 samples, 0.04%)</title><rect x="22.2" y="357" width="0.5" height="15.0" fill="rgb(209,47,28)" rx="2" ry="2" />
<text  x="25.22" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (130 samples, 0.27%)</title><rect x="825.6" y="389" width="3.2" height="15.0" fill="rgb(240,57,13)" rx="2" ry="2" />
<text  x="828.59" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (578 samples, 1.21%)</title><rect x="1151.9" y="485" width="14.3" height="15.0" fill="rgb(241,14,50)" rx="2" ry="2" />
<text  x="1154.87" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (10 samples, 0.02%)</title><rect x="435.5" y="341" width="0.3" height="15.0" fill="rgb(226,158,13)" rx="2" ry="2" />
<text  x="438.51" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume (14 samples, 0.03%)</title><rect x="514.7" y="181" width="0.3" height="15.0" fill="rgb(246,82,14)" rx="2" ry="2" />
<text  x="517.65" y="191.5" ></text>
</g>
<g >
<title>database::query (990 samples, 2.08%)</title><rect x="1015.4" y="261" width="24.6" height="15.0" fill="rgb(253,184,46)" rx="2" ry="2" />
<text  x="1018.44" y="271.5" >d..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (5 samples, 0.01%)</title><rect x="1157.3" y="437" width="0.1" height="15.0" fill="rgb(224,187,29)" rx="2" ry="2" />
<text  x="1160.32" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="652.7" y="453" width="0.1" height="15.0" fill="rgb(236,133,29)" rx="2" ry="2" />
<text  x="655.72" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (42 samples, 0.09%)</title><rect x="613.0" y="437" width="1.1" height="15.0" fill="rgb(245,70,41)" rx="2" ry="2" />
<text  x="616.05" y="447.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (210 samples, 0.44%)</title><rect x="18.0" y="437" width="5.2" height="15.0" fill="rgb(239,109,39)" rx="2" ry="2" />
<text  x="21.00" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%)</title><rect x="1063.7" y="293" width="0.2" height="15.0" fill="rgb(238,73,49)" rx="2" ry="2" />
<text  x="1066.73" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (79 samples, 0.17%)</title><rect x="744.4" y="357" width="1.9" height="15.0" fill="rgb(239,109,22)" rx="2" ry="2" />
<text  x="747.37" y="367.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="1154.5" y="437" width="0.8" height="15.0" fill="rgb(245,110,53)" rx="2" ry="2" />
<text  x="1157.52" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="47.0" y="485" width="0.4" height="15.0" fill="rgb(224,196,35)" rx="2" ry="2" />
<text  x="50.02" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (151 samples, 0.32%)</title><rect x="241.4" y="261" width="3.8" height="15.0" fill="rgb(229,4,28)" rx="2" ry="2" />
<text  x="244.43" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="518.9" y="277" width="0.4" height="15.0" fill="rgb(224,92,36)" rx="2" ry="2" />
<text  x="521.94" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (10 samples, 0.02%)</title><rect x="938.7" y="389" width="0.2" height="15.0" fill="rgb(238,46,53)" rx="2" ry="2" />
<text  x="941.70" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="422.9" y="357" width="0.1" height="15.0" fill="rgb(220,160,4)" rx="2" ry="2" />
<text  x="425.87" y="367.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (166 samples, 0.35%)</title><rect x="1029.1" y="181" width="4.1" height="15.0" fill="rgb(247,151,1)" rx="2" ry="2" />
<text  x="1032.12" y="191.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="465.5" y="325" width="0.2" height="15.0" fill="rgb(229,29,16)" rx="2" ry="2" />
<text  x="468.49" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="667.0" y="437" width="0.4" height="15.0" fill="rgb(209,198,54)" rx="2" ry="2" />
<text  x="669.96" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (308 samples, 0.65%)</title><rect x="1082.4" y="261" width="7.7" height="15.0" fill="rgb(232,62,22)" rx="2" ry="2" />
<text  x="1085.44" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (52 samples, 0.11%)</title><rect x="830.0" y="309" width="1.3" height="15.0" fill="rgb(215,181,5)" rx="2" ry="2" />
<text  x="833.03" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%)</title><rect x="210.2" y="133" width="0.2" height="15.0" fill="rgb(242,101,38)" rx="2" ry="2" />
<text  x="213.16" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="642.0" y="469" width="0.1" height="15.0" fill="rgb(214,39,30)" rx="2" ry="2" />
<text  x="644.96" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (13 samples, 0.03%)</title><rect x="491.8" y="325" width="0.3" height="15.0" fill="rgb(213,184,36)" rx="2" ry="2" />
<text  x="494.81" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (16 samples, 0.03%)</title><rect x="610.5" y="437" width="0.4" height="15.0" fill="rgb(220,63,3)" rx="2" ry="2" />
<text  x="613.52" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (24 samples, 0.05%)</title><rect x="1110.5" y="389" width="0.6" height="15.0" fill="rgb(206,175,13)" rx="2" ry="2" />
<text  x="1113.46" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (550 samples, 1.15%)</title><rect x="1111.2" y="421" width="13.7" height="15.0" fill="rgb(221,208,3)" rx="2" ry="2" />
<text  x="1114.23" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (19 samples, 0.04%)</title><rect x="302.5" y="213" width="0.4" height="15.0" fill="rgb(253,24,42)" rx="2" ry="2" />
<text  x="305.48" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (22 samples, 0.05%)</title><rect x="591.1" y="405" width="0.5" height="15.0" fill="rgb(240,50,29)" rx="2" ry="2" />
<text  x="594.09" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (826 samples, 1.73%)</title><rect x="115.7" y="309" width="20.5" height="15.0" fill="rgb(209,111,52)" rx="2" ry="2" />
<text  x="118.73" y="319.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (98 samples, 0.21%)</title><rect x="835.5" y="373" width="2.4" height="15.0" fill="rgb(214,169,26)" rx="2" ry="2" />
<text  x="838.50" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,910 samples, 6.11%)</title><rect x="981.1" y="357" width="72.2" height="15.0" fill="rgb(243,100,40)" rx="2" ry="2" />
<text  x="984.15" y="367.5" >service:..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (71 samples, 0.15%)</title><rect x="1057.8" y="309" width="1.7" height="15.0" fill="rgb(249,162,53)" rx="2" ry="2" />
<text  x="1060.78" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,532 samples, 97.71%)</title><rect x="25.1" y="549" width="1153.0" height="15.0" fill="rgb(210,101,22)" rx="2" ry="2" />
<text  x="28.09" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (9 samples, 0.02%)</title><rect x="626.0" y="389" width="0.2" height="15.0" fill="rgb(226,207,6)" rx="2" ry="2" />
<text  x="628.95" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (27 samples, 0.06%)</title><rect x="953.9" y="373" width="0.7" height="15.0" fill="rgb(217,147,49)" rx="2" ry="2" />
<text  x="956.94" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (15 samples, 0.03%)</title><rect x="281.1" y="373" width="0.4" height="15.0" fill="rgb(217,71,49)" rx="2" ry="2" />
<text  x="284.10" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (20 samples, 0.04%)</title><rect x="979.8" y="357" width="0.5" height="15.0" fill="rgb(238,67,27)" rx="2" ry="2" />
<text  x="982.76" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (166 samples, 0.35%)</title><rect x="185.3" y="69" width="4.1" height="15.0" fill="rgb(223,17,17)" rx="2" ry="2" />
<text  x="188.28" y="79.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (6 samples, 0.01%)</title><rect x="1024.8" y="245" width="0.1" height="15.0" fill="rgb(250,135,38)" rx="2" ry="2" />
<text  x="1027.76" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (27 samples, 0.06%)</title><rect x="752.2" y="261" width="0.6" height="15.0" fill="rgb(221,72,0)" rx="2" ry="2" />
<text  x="755.17" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (12 samples, 0.03%)</title><rect x="73.8" y="453" width="0.3" height="15.0" fill="rgb(205,147,52)" rx="2" ry="2" />
<text  x="76.83" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (19 samples, 0.04%)</title><rect x="873.0" y="485" width="0.4" height="15.0" fill="rgb(229,208,49)" rx="2" ry="2" />
<text  x="875.97" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (17 samples, 0.04%)</title><rect x="945.3" y="389" width="0.4" height="15.0" fill="rgb(207,168,28)" rx="2" ry="2" />
<text  x="948.29" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="273.5" y="293" width="0.3" height="15.0" fill="rgb(213,25,17)" rx="2" ry="2" />
<text  x="276.49" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (66 samples, 0.14%)</title><rect x="415.5" y="277" width="1.7" height="15.0" fill="rgb(240,184,18)" rx="2" ry="2" />
<text  x="418.52" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="800.1" y="181" width="0.1" height="15.0" fill="rgb(205,118,11)" rx="2" ry="2" />
<text  x="803.07" y="191.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,364 samples, 2.86%)</title><rect x="556.2" y="437" width="33.8" height="15.0" fill="rgb(227,98,1)" rx="2" ry="2" />
<text  x="559.18" y="447.5" >qu..</text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="986.1" y="341" width="0.2" height="15.0" fill="rgb(236,73,46)" rx="2" ry="2" />
<text  x="989.10" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (14 samples, 0.03%)</title><rect x="51.0" y="485" width="0.4" height="15.0" fill="rgb(227,168,0)" rx="2" ry="2" />
<text  x="54.03" y="495.5" ></text>
</g>
<g >
<title>database::find_schema (78 samples, 0.16%)</title><rect x="761.9" y="389" width="1.9" height="15.0" fill="rgb(250,118,32)" rx="2" ry="2" />
<text  x="764.89" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1046.3" y="277" width="0.1" height="15.0" fill="rgb(249,82,33)" rx="2" ry="2" />
<text  x="1049.29" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (59 samples, 0.12%)</title><rect x="1157.5" y="421" width="1.5" height="15.0" fill="rgb(242,177,15)" rx="2" ry="2" />
<text  x="1160.52" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (93 samples, 0.20%)</title><rect x="812.7" y="261" width="2.3" height="15.0" fill="rgb(208,176,52)" rx="2" ry="2" />
<text  x="815.71" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="964.8" y="341" width="0.4" height="15.0" fill="rgb(222,86,44)" rx="2" ry="2" />
<text  x="967.79" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1122.9" y="389" width="0.1" height="15.0" fill="rgb(222,203,16)" rx="2" ry="2" />
<text  x="1125.88" y="399.5" ></text>
</g>
<g >
<title>freeze (15 samples, 0.03%)</title><rect x="1140.4" y="197" width="0.4" height="15.0" fill="rgb(233,222,34)" rx="2" ry="2" />
<text  x="1143.42" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.01%)</title><rect x="688.5" y="485" width="0.1" height="15.0" fill="rgb(214,46,41)" rx="2" ry="2" />
<text  x="691.52" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (777 samples, 1.63%)</title><rect x="1079.5" y="325" width="19.3" height="15.0" fill="rgb(242,37,22)" rx="2" ry="2" />
<text  x="1082.54" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (25 samples, 0.05%)</title><rect x="765.7" y="309" width="0.6" height="15.0" fill="rgb(237,209,2)" rx="2" ry="2" />
<text  x="768.70" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (75 samples, 0.16%)</title><rect x="480.4" y="261" width="1.8" height="15.0" fill="rgb(219,153,10)" rx="2" ry="2" />
<text  x="483.38" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="450.6" y="277" width="0.4" height="15.0" fill="rgb(230,24,10)" rx="2" ry="2" />
<text  x="453.60" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (15 samples, 0.03%)</title><rect x="691.5" y="501" width="0.4" height="15.0" fill="rgb(225,199,16)" rx="2" ry="2" />
<text  x="694.52" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (5 samples, 0.01%)</title><rect x="440.6" y="309" width="0.1" height="15.0" fill="rgb(245,79,49)" rx="2" ry="2" />
<text  x="443.57" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (60 samples, 0.13%)</title><rect x="367.0" y="181" width="1.5" height="15.0" fill="rgb(234,0,2)" rx="2" ry="2" />
<text  x="369.98" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (8 samples, 0.02%)</title><rect x="159.7" y="197" width="0.2" height="15.0" fill="rgb(251,28,31)" rx="2" ry="2" />
<text  x="162.73" y="207.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (32 samples, 0.07%)</title><rect x="873.8" y="485" width="0.8" height="15.0" fill="rgb(236,187,36)" rx="2" ry="2" />
<text  x="876.83" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (12 samples, 0.03%)</title><rect x="368.2" y="165" width="0.3" height="15.0" fill="rgb(247,47,35)" rx="2" ry="2" />
<text  x="371.17" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="456.1" y="261" width="0.1" height="15.0" fill="rgb(209,206,9)" rx="2" ry="2" />
<text  x="459.08" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="605.4" y="373" width="0.2" height="15.0" fill="rgb(226,159,34)" rx="2" ry="2" />
<text  x="608.44" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (14 samples, 0.03%)</title><rect x="623.9" y="389" width="0.4" height="15.0" fill="rgb(252,114,25)" rx="2" ry="2" />
<text  x="626.92" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (86 samples, 0.18%)</title><rect x="907.5" y="357" width="2.1" height="15.0" fill="rgb(230,67,10)" rx="2" ry="2" />
<text  x="910.46" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="657.5" y="453" width="0.1" height="15.0" fill="rgb(244,87,23)" rx="2" ry="2" />
<text  x="660.50" y="463.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (52 samples, 0.11%)</title><rect x="560.7" y="325" width="1.3" height="15.0" fill="rgb(242,99,34)" rx="2" ry="2" />
<text  x="563.69" y="335.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (160 samples, 0.34%)</title><rect x="859.4" y="437" width="3.9" height="15.0" fill="rgb(210,76,42)" rx="2" ry="2" />
<text  x="862.36" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="555.9" y="421" width="0.2" height="15.0" fill="rgb(243,108,49)" rx="2" ry="2" />
<text  x="558.93" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (80 samples, 0.17%)</title><rect x="306.9" y="181" width="2.0" height="15.0" fill="rgb(221,145,54)" rx="2" ry="2" />
<text  x="309.94" y="191.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (17 samples, 0.04%)</title><rect x="1178.1" y="629" width="0.5" height="15.0" fill="rgb(234,89,37)" rx="2" ry="2" />
<text  x="1181.13" y="639.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1140.1" y="309" width="0.3" height="15.0" fill="rgb(206,83,38)" rx="2" ry="2" />
<text  x="1143.15" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (14 samples, 0.03%)</title><rect x="1175.5" y="421" width="0.4" height="15.0" fill="rgb(230,3,54)" rx="2" ry="2" />
<text  x="1178.53" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="549.6" y="341" width="1.2" height="15.0" fill="rgb(230,204,9)" rx="2" ry="2" />
<text  x="552.61" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="589.5" y="373" width="0.2" height="15.0" fill="rgb(248,22,51)" rx="2" ry="2" />
<text  x="592.53" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (10 samples, 0.02%)</title><rect x="992.4" y="261" width="0.3" height="15.0" fill="rgb(242,184,41)" rx="2" ry="2" />
<text  x="995.42" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1052.3" y="293" width="0.2" height="15.0" fill="rgb(234,130,33)" rx="2" ry="2" />
<text  x="1055.28" y="303.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="845.3" y="437" width="0.1" height="15.0" fill="rgb(214,205,3)" rx="2" ry="2" />
<text  x="848.29" y="447.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="516.1" y="229" width="0.2" height="15.0" fill="rgb(237,78,7)" rx="2" ry="2" />
<text  x="519.14" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="54.5" y="469" width="0.4" height="15.0" fill="rgb(241,86,5)" rx="2" ry="2" />
<text  x="57.53" y="479.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (5 samples, 0.01%)</title><rect x="736.5" y="405" width="0.1" height="15.0" fill="rgb(224,94,50)" rx="2" ry="2" />
<text  x="739.51" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="1033.5" y="197" width="0.2" height="15.0" fill="rgb(211,85,43)" rx="2" ry="2" />
<text  x="1036.53" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="937.8" y="405" width="0.3" height="15.0" fill="rgb(231,103,10)" rx="2" ry="2" />
<text  x="940.83" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (15 samples, 0.03%)</title><rect x="42.4" y="437" width="0.4" height="15.0" fill="rgb(212,28,32)" rx="2" ry="2" />
<text  x="45.41" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (30 samples, 0.06%)</title><rect x="690.7" y="357" width="0.7" height="15.0" fill="rgb(223,84,41)" rx="2" ry="2" />
<text  x="693.70" y="367.5" ></text>
</g>
<g >
<title>table::query (22,239 samples, 46.70%)</title><rect x="76.4" y="453" width="551.0" height="15.0" fill="rgb(232,179,33)" rx="2" ry="2" />
<text  x="79.40" y="463.5" >table::query</text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="501.7" y="293" width="1.0" height="15.0" fill="rgb(244,184,27)" rx="2" ry="2" />
<text  x="504.69" y="303.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="36.0" y="469" width="0.9" height="15.0" fill="rgb(215,202,32)" rx="2" ry="2" />
<text  x="38.97" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="677.2" y="437" width="0.1" height="15.0" fill="rgb(205,150,41)" rx="2" ry="2" />
<text  x="680.22" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (17 samples, 0.04%)</title><rect x="22.3" y="341" width="0.4" height="15.0" fill="rgb(227,11,45)" rx="2" ry="2" />
<text  x="25.27" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (9 samples, 0.02%)</title><rect x="940.4" y="405" width="0.2" height="15.0" fill="rgb(224,63,39)" rx="2" ry="2" />
<text  x="943.39" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="790.6" y="293" width="0.1" height="15.0" fill="rgb(251,209,8)" rx="2" ry="2" />
<text  x="793.58" y="303.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="782.7" y="309" width="0.5" height="15.0" fill="rgb(249,133,36)" rx="2" ry="2" />
<text  x="785.72" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (140 samples, 0.29%)</title><rect x="649.4" y="469" width="3.5" height="15.0" fill="rgb(242,115,26)" rx="2" ry="2" />
<text  x="652.39" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (29 samples, 0.06%)</title><rect x="1117.0" y="389" width="0.7" height="15.0" fill="rgb(248,166,28)" rx="2" ry="2" />
<text  x="1119.98" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (103 samples, 0.22%)</title><rect x="649.9" y="453" width="2.6" height="15.0" fill="rgb(243,122,40)" rx="2" ry="2" />
<text  x="652.94" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="937.0" y="389" width="0.2" height="15.0" fill="rgb(250,181,8)" rx="2" ry="2" />
<text  x="940.04" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (218 samples, 0.46%)</title><rect x="1059.8" y="325" width="5.4" height="15.0" fill="rgb(240,168,33)" rx="2" ry="2" />
<text  x="1062.79" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="298.1" y="245" width="0.3" height="15.0" fill="rgb(222,94,41)" rx="2" ry="2" />
<text  x="301.14" y="255.5" ></text>
</g>
<g >
<title>query::result::builder::build (73 samples, 0.15%)</title><rect x="598.7" y="437" width="1.9" height="15.0" fill="rgb(241,110,47)" rx="2" ry="2" />
<text  x="601.75" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="317.7" y="197" width="0.3" height="15.0" fill="rgb(213,139,4)" rx="2" ry="2" />
<text  x="320.69" y="207.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="523.8" y="325" width="0.8" height="15.0" fill="rgb(250,36,33)" rx="2" ry="2" />
<text  x="526.84" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (180 samples, 0.38%)</title><rect x="594.3" y="421" width="4.4" height="15.0" fill="rgb(249,120,39)" rx="2" ry="2" />
<text  x="597.29" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="453" width="0.9" height="15.0" fill="rgb(248,124,54)" rx="2" ry="2" />
<text  x="1143.12" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%)</title><rect x="1000.0" y="245" width="0.3" height="15.0" fill="rgb(222,136,14)" rx="2" ry="2" />
<text  x="1003.03" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="24.7" y="453" width="0.3" height="15.0" fill="rgb(235,165,32)" rx="2" ry="2" />
<text  x="27.69" y="463.5" ></text>
</g>
<g >
<title>[[vdso]] (234 samples, 0.49%)</title><rect x="1179.4" y="613" width="5.8" height="15.0" fill="rgb(205,209,34)" rx="2" ry="2" />
<text  x="1182.42" y="623.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (23 samples, 0.05%)</title><rect x="1140.4" y="229" width="0.6" height="15.0" fill="rgb(219,15,32)" rx="2" ry="2" />
<text  x="1143.39" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="1158.3" y="373" width="0.6" height="15.0" fill="rgb(229,138,34)" rx="2" ry="2" />
<text  x="1161.33" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (58 samples, 0.12%)</title><rect x="938.4" y="405" width="1.4" height="15.0" fill="rgb(219,155,13)" rx="2" ry="2" />
<text  x="941.38" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%)</title><rect x="966.1" y="373" width="0.1" height="15.0" fill="rgb(205,128,41)" rx="2" ry="2" />
<text  x="969.08" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (14 samples, 0.03%)</title><rect x="228.1" y="229" width="0.4" height="15.0" fill="rgb(245,53,17)" rx="2" ry="2" />
<text  x="231.15" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,974 samples, 12.54%)</title><rect x="110.4" y="341" width="148.0" height="15.0" fill="rgb(231,151,3)" rx="2" ry="2" />
<text  x="113.38" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="661.4" y="453" width="0.2" height="15.0" fill="rgb(212,135,31)" rx="2" ry="2" />
<text  x="664.44" y="463.5" ></text>
</g>
<g >
<title>__tls_init (19 samples, 0.04%)</title><rect x="534.1" y="277" width="0.5" height="15.0" fill="rgb(252,207,4)" rx="2" ry="2" />
<text  x="537.13" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="820.6" y="325" width="0.1" height="15.0" fill="rgb(231,198,35)" rx="2" ry="2" />
<text  x="823.56" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (25 samples, 0.05%)</title><rect x="455.6" y="277" width="0.6" height="15.0" fill="rgb(246,170,31)" rx="2" ry="2" />
<text  x="458.58" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (18 samples, 0.04%)</title><rect x="220.2" y="133" width="0.4" height="15.0" fill="rgb(250,51,54)" rx="2" ry="2" />
<text  x="223.17" y="143.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (12 samples, 0.03%)</title><rect x="392.3" y="229" width="0.3" height="15.0" fill="rgb(207,162,30)" rx="2" ry="2" />
<text  x="395.27" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (31 samples, 0.07%)</title><rect x="416.4" y="261" width="0.8" height="15.0" fill="rgb(238,8,48)" rx="2" ry="2" />
<text  x="419.38" y="271.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (53 samples, 0.11%)</title><rect x="70.5" y="405" width="1.3" height="15.0" fill="rgb(210,101,43)" rx="2" ry="2" />
<text  x="73.48" y="415.5" ></text>
</g>
<g >
<title>make_combined_reader (828 samples, 1.74%)</title><rect x="440.1" y="325" width="20.5" height="15.0" fill="rgb(219,78,34)" rx="2" ry="2" />
<text  x="443.12" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (23 samples, 0.05%)</title><rect x="1140.4" y="245" width="0.6" height="15.0" fill="rgb(250,110,52)" rx="2" ry="2" />
<text  x="1143.39" y="255.5" ></text>
</g>
<g >
<title>database::find_uuid (6 samples, 0.01%)</title><rect x="769.1" y="405" width="0.2" height="15.0" fill="rgb(226,118,24)" rx="2" ry="2" />
<text  x="772.15" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="415.3" y="277" width="0.2" height="15.0" fill="rgb(254,188,53)" rx="2" ry="2" />
<text  x="418.32" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="786.6" y="309" width="0.2" height="15.0" fill="rgb(224,218,25)" rx="2" ry="2" />
<text  x="789.59" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1033.4" y="197" width="0.1" height="15.0" fill="rgb(228,137,24)" rx="2" ry="2" />
<text  x="1036.40" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="642.1" y="485" width="0.3" height="15.0" fill="rgb(236,95,27)" rx="2" ry="2" />
<text  x="645.09" y="495.5" ></text>
</g>
<g >
<title>schema::registry_entry (5 samples, 0.01%)</title><rect x="1013.5" y="277" width="0.2" height="15.0" fill="rgb(222,15,0)" rx="2" ry="2" />
<text  x="1016.53" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (15 samples, 0.03%)</title><rect x="142.0" y="245" width="0.4" height="15.0" fill="rgb(212,217,38)" rx="2" ry="2" />
<text  x="145.02" y="255.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (16 samples, 0.03%)</title><rect x="918.0" y="341" width="0.4" height="15.0" fill="rgb(246,224,42)" rx="2" ry="2" />
<text  x="921.01" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="878.7" y="437" width="0.1" height="15.0" fill="rgb(214,206,3)" rx="2" ry="2" />
<text  x="881.67" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (49 samples, 0.10%)</title><rect x="183.8" y="69" width="1.3" height="15.0" fill="rgb(224,73,0)" rx="2" ry="2" />
<text  x="186.84" y="79.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="706.8" y="453" width="0.4" height="15.0" fill="rgb(217,7,13)" rx="2" ry="2" />
<text  x="709.78" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="72.1" y="453" width="0.2" height="15.0" fill="rgb(243,219,43)" rx="2" ry="2" />
<text  x="75.07" y="463.5" ></text>
</g>
<g >
<title>service::client_state::has_access (6 samples, 0.01%)</title><rect x="24.3" y="437" width="0.1" height="15.0" fill="rgb(245,31,43)" rx="2" ry="2" />
<text  x="27.27" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="574.2" y="293" width="0.3" height="15.0" fill="rgb(247,198,45)" rx="2" ry="2" />
<text  x="577.24" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="703.1" y="469" width="0.2" height="15.0" fill="rgb(250,161,16)" rx="2" ry="2" />
<text  x="706.09" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="273.0" y="293" width="0.2" height="15.0" fill="rgb(245,45,29)" rx="2" ry="2" />
<text  x="276.02" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (20 samples, 0.04%)</title><rect x="909.1" y="325" width="0.5" height="15.0" fill="rgb(239,152,40)" rx="2" ry="2" />
<text  x="912.09" y="335.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (27 samples, 0.06%)</title><rect x="236.0" y="197" width="0.7" height="15.0" fill="rgb(213,218,34)" rx="2" ry="2" />
<text  x="239.05" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="815.8" y="261" width="0.1" height="15.0" fill="rgb(216,186,45)" rx="2" ry="2" />
<text  x="818.80" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.02%)</title><rect x="636.1" y="485" width="0.2" height="15.0" fill="rgb(253,87,24)" rx="2" ry="2" />
<text  x="639.06" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (78 samples, 0.16%)</title><rect x="972.0" y="341" width="1.9" height="15.0" fill="rgb(212,81,4)" rx="2" ry="2" />
<text  x="974.95" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1035.1" y="213" width="0.1" height="15.0" fill="rgb(236,33,0)" rx="2" ry="2" />
<text  x="1038.06" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (27 samples, 0.06%)</title><rect x="570.8" y="277" width="0.7" height="15.0" fill="rgb(223,177,46)" rx="2" ry="2" />
<text  x="573.80" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (11 samples, 0.02%)</title><rect x="544.1" y="421" width="0.3" height="15.0" fill="rgb(238,14,8)" rx="2" ry="2" />
<text  x="547.11" y="431.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (25 samples, 0.05%)</title><rect x="329.8" y="181" width="0.6" height="15.0" fill="rgb(229,206,19)" rx="2" ry="2" />
<text  x="332.76" y="191.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%)</title><rect x="268.9" y="309" width="0.2" height="15.0" fill="rgb(229,202,2)" rx="2" ry="2" />
<text  x="271.90" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%)</title><rect x="1048.0" y="229" width="1.6" height="15.0" fill="rgb(247,210,18)" rx="2" ry="2" />
<text  x="1051.05" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,871 samples, 3.93%)</title><rect x="162.0" y="181" width="46.4" height="15.0" fill="rgb(249,217,6)" rx="2" ry="2" />
<text  x="165.04" y="191.5" >muta..</text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="673.5" y="469" width="0.4" height="15.0" fill="rgb(211,127,1)" rx="2" ry="2" />
<text  x="676.48" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (11 samples, 0.02%)</title><rect x="593.0" y="421" width="0.3" height="15.0" fill="rgb(238,83,4)" rx="2" ry="2" />
<text  x="596.03" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (83 samples, 0.17%)</title><rect x="291.6" y="277" width="2.0" height="15.0" fill="rgb(240,138,50)" rx="2" ry="2" />
<text  x="294.55" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (85 samples, 0.18%)</title><rect x="913.9" y="373" width="2.1" height="15.0" fill="rgb(245,64,51)" rx="2" ry="2" />
<text  x="916.87" y="383.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (34 samples, 0.07%)</title><rect x="1065.5" y="341" width="0.9" height="15.0" fill="rgb(250,167,17)" rx="2" ry="2" />
<text  x="1068.52" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="726.9" y="453" width="0.2" height="15.0" fill="rgb(238,62,9)" rx="2" ry="2" />
<text  x="729.88" y="463.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (14 samples, 0.03%)</title><rect x="1175.5" y="405" width="0.4" height="15.0" fill="rgb(218,131,41)" rx="2" ry="2" />
<text  x="1178.53" y="415.5" ></text>
</g>
<g >
<title>partition_entry::read (76 samples, 0.16%)</title><rect x="521.1" y="309" width="1.9" height="15.0" fill="rgb(236,158,27)" rx="2" ry="2" />
<text  x="524.09" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (5 samples, 0.01%)</title><rect x="804.4" y="149" width="0.1" height="15.0" fill="rgb(216,55,40)" rx="2" ry="2" />
<text  x="807.36" y="159.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="654.2" y="469" width="0.2" height="15.0" fill="rgb(240,145,25)" rx="2" ry="2" />
<text  x="657.23" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (10 samples, 0.02%)</title><rect x="954.4" y="341" width="0.2" height="15.0" fill="rgb(220,49,54)" rx="2" ry="2" />
<text  x="957.36" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (9 samples, 0.02%)</title><rect x="422.8" y="373" width="0.2" height="15.0" fill="rgb(231,106,3)" rx="2" ry="2" />
<text  x="425.78" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (28 samples, 0.06%)</title><rect x="660.9" y="485" width="0.7" height="15.0" fill="rgb(237,11,11)" rx="2" ry="2" />
<text  x="663.94" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (25 samples, 0.05%)</title><rect x="942.5" y="357" width="0.7" height="15.0" fill="rgb(228,95,8)" rx="2" ry="2" />
<text  x="945.54" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (30 samples, 0.06%)</title><rect x="315.8" y="165" width="0.7" height="15.0" fill="rgb(248,61,27)" rx="2" ry="2" />
<text  x="318.76" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (15 samples, 0.03%)</title><rect x="586.1" y="341" width="0.4" height="15.0" fill="rgb(222,20,29)" rx="2" ry="2" />
<text  x="589.09" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (9 samples, 0.02%)</title><rect x="152.1" y="197" width="0.2" height="15.0" fill="rgb(244,84,37)" rx="2" ry="2" />
<text  x="155.13" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="243.4" y="213" width="0.1" height="15.0" fill="rgb(229,196,52)" rx="2" ry="2" />
<text  x="246.38" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (138 samples, 0.29%)</title><rect x="191.9" y="117" width="3.5" height="15.0" fill="rgb(241,193,33)" rx="2" ry="2" />
<text  x="194.94" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.02%)</title><rect x="1156.6" y="453" width="0.2" height="15.0" fill="rgb(241,75,41)" rx="2" ry="2" />
<text  x="1159.65" y="463.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (5 samples, 0.01%)</title><rect x="873.1" y="293" width="0.1" height="15.0" fill="rgb(242,215,52)" rx="2" ry="2" />
<text  x="876.11" y="303.5" ></text>
</g>
<g >
<title>dht::shard_of (39 samples, 0.08%)</title><rect x="1008.1" y="277" width="0.9" height="15.0" fill="rgb(222,118,36)" rx="2" ry="2" />
<text  x="1011.08" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (26 samples, 0.05%)</title><rect x="849.2" y="373" width="0.6" height="15.0" fill="rgb(213,140,34)" rx="2" ry="2" />
<text  x="852.20" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (41 samples, 0.09%)</title><rect x="1075.2" y="293" width="1.0" height="15.0" fill="rgb(234,55,52)" rx="2" ry="2" />
<text  x="1078.23" y="303.5" ></text>
</g>
<g >
<title>db::block_for (9 samples, 0.02%)</title><rect x="1066.4" y="341" width="0.2" height="15.0" fill="rgb(217,35,3)" rx="2" ry="2" />
<text  x="1069.36" y="351.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (15 samples, 0.03%)</title><rect x="517.4" y="229" width="0.3" height="15.0" fill="rgb(253,206,19)" rx="2" ry="2" />
<text  x="520.35" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="694.0" y="469" width="0.3" height="15.0" fill="rgb(252,190,48)" rx="2" ry="2" />
<text  x="697.02" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (40 samples, 0.08%)</title><rect x="251.0" y="277" width="1.0" height="15.0" fill="rgb(235,40,7)" rx="2" ry="2" />
<text  x="253.99" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (30 samples, 0.06%)</title><rect x="131.3" y="229" width="0.8" height="15.0" fill="rgb(207,45,13)" rx="2" ry="2" />
<text  x="134.34" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1144.2" y="501" width="0.2" height="15.0" fill="rgb(221,85,33)" rx="2" ry="2" />
<text  x="1147.24" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="657.0" y="437" width="0.5" height="15.0" fill="rgb(236,101,44)" rx="2" ry="2" />
<text  x="660.00" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (73 samples, 0.15%)</title><rect x="1114.9" y="389" width="1.8" height="15.0" fill="rgb(235,99,33)" rx="2" ry="2" />
<text  x="1117.92" y="399.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="896.0" y="293" width="0.4" height="15.0" fill="rgb(242,159,9)" rx="2" ry="2" />
<text  x="899.03" y="303.5" ></text>
</g>
<g >
<title>tracing::add_table_name (31 samples, 0.07%)</title><rect x="1136.7" y="421" width="0.7" height="15.0" fill="rgb(211,190,50)" rx="2" ry="2" />
<text  x="1139.68" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="810.6" y="213" width="0.5" height="15.0" fill="rgb(207,104,36)" rx="2" ry="2" />
<text  x="813.65" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (8 samples, 0.02%)</title><rect x="573.8" y="293" width="0.2" height="15.0" fill="rgb(246,34,11)" rx="2" ry="2" />
<text  x="576.80" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="690.8" y="325" width="0.5" height="15.0" fill="rgb(231,121,8)" rx="2" ry="2" />
<text  x="693.77" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="819.8" y="293" width="0.2" height="15.0" fill="rgb(220,77,11)" rx="2" ry="2" />
<text  x="822.82" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1115.7" y="357" width="0.1" height="15.0" fill="rgb(241,209,39)" rx="2" ry="2" />
<text  x="1118.69" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%)</title><rect x="863.3" y="421" width="1.5" height="15.0" fill="rgb(254,84,31)" rx="2" ry="2" />
<text  x="866.33" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;void&gt;  (5 samples, 0.01%)</title><rect x="23.7" y="389" width="0.2" height="15.0" fill="rgb(253,21,2)" rx="2" ry="2" />
<text  x="26.73" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%)</title><rect x="419.6" y="325" width="1.0" height="15.0" fill="rgb(212,23,20)" rx="2" ry="2" />
<text  x="422.58" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (11 samples, 0.02%)</title><rect x="27.0" y="517" width="0.2" height="15.0" fill="rgb(209,202,10)" rx="2" ry="2" />
<text  x="29.97" y="527.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (110 samples, 0.23%)</title><rect x="60.4" y="453" width="2.7" height="15.0" fill="rgb(220,44,6)" rx="2" ry="2" />
<text  x="63.42" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (61 samples, 0.13%)</title><rect x="116.7" y="293" width="1.6" height="15.0" fill="rgb(237,140,41)" rx="2" ry="2" />
<text  x="119.74" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="839.1" y="421" width="0.2" height="15.0" fill="rgb(225,137,13)" rx="2" ry="2" />
<text  x="842.07" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (796 samples, 1.67%)</title><rect x="892.0" y="405" width="19.7" height="15.0" fill="rgb(229,190,46)" rx="2" ry="2" />
<text  x="895.00" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (36 samples, 0.08%)</title><rect x="1130.4" y="389" width="0.9" height="15.0" fill="rgb(216,33,21)" rx="2" ry="2" />
<text  x="1133.38" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (55 samples, 0.12%)</title><rect x="409.5" y="245" width="1.4" height="15.0" fill="rgb(225,76,6)" rx="2" ry="2" />
<text  x="412.52" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="617.4" y="437" width="0.3" height="15.0" fill="rgb(235,92,22)" rx="2" ry="2" />
<text  x="620.38" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (105 samples, 0.22%)</title><rect x="842.2" y="437" width="2.6" height="15.0" fill="rgb(229,101,2)" rx="2" ry="2" />
<text  x="845.22" y="447.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.13%)</title><rect x="788.7" y="277" width="1.6" height="15.0" fill="rgb(249,197,19)" rx="2" ry="2" />
<text  x="791.72" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="716.8" y="485" width="0.1" height="15.0" fill="rgb(248,194,47)" rx="2" ry="2" />
<text  x="719.77" y="495.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="818.6" y="309" width="0.8" height="15.0" fill="rgb(228,88,12)" rx="2" ry="2" />
<text  x="821.60" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%)</title><rect x="632.1" y="453" width="0.2" height="15.0" fill="rgb(233,73,0)" rx="2" ry="2" />
<text  x="635.10" y="463.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (34 samples, 0.07%)</title><rect x="442.1" y="293" width="0.9" height="15.0" fill="rgb(249,170,50)" rx="2" ry="2" />
<text  x="445.13" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (38 samples, 0.08%)</title><rect x="914.5" y="357" width="1.0" height="15.0" fill="rgb(222,8,31)" rx="2" ry="2" />
<text  x="917.54" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="550.9" y="325" width="1.8" height="15.0" fill="rgb(223,55,31)" rx="2" ry="2" />
<text  x="553.93" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="412.4" y="309" width="0.2" height="15.0" fill="rgb(205,32,9)" rx="2" ry="2" />
<text  x="415.39" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (62 samples, 0.13%)</title><rect x="1152.7" y="453" width="1.5" height="15.0" fill="rgb(213,134,36)" rx="2" ry="2" />
<text  x="1155.66" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (5 samples, 0.01%)</title><rect x="1064.0" y="293" width="0.2" height="15.0" fill="rgb(216,30,38)" rx="2" ry="2" />
<text  x="1067.03" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="612.4" y="437" width="0.2" height="15.0" fill="rgb(254,190,18)" rx="2" ry="2" />
<text  x="615.38" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="574.0" y="293" width="0.1" height="15.0" fill="rgb(213,145,6)" rx="2" ry="2" />
<text  x="577.00" y="303.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="1125.2" y="421" width="0.8" height="15.0" fill="rgb(249,68,53)" rx="2" ry="2" />
<text  x="1128.18" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (6 samples, 0.01%)</title><rect x="311.7" y="165" width="0.2" height="15.0" fill="rgb(228,122,30)" rx="2" ry="2" />
<text  x="314.75" y="175.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (13 samples, 0.03%)</title><rect x="603.1" y="389" width="0.3" height="15.0" fill="rgb(205,149,44)" rx="2" ry="2" />
<text  x="606.06" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (173 samples, 0.36%)</title><rect x="1060.5" y="309" width="4.3" height="15.0" fill="rgb(214,114,53)" rx="2" ry="2" />
<text  x="1063.54" y="319.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="288.4" y="293" width="0.9" height="15.0" fill="rgb(251,21,50)" rx="2" ry="2" />
<text  x="291.36" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (12 samples, 0.03%)</title><rect x="839.5" y="405" width="0.3" height="15.0" fill="rgb(217,55,30)" rx="2" ry="2" />
<text  x="842.47" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="932.5" y="325" width="0.6" height="15.0" fill="rgb(225,38,41)" rx="2" ry="2" />
<text  x="935.48" y="335.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (58 samples, 0.12%)</title><rect x="604.3" y="405" width="1.4" height="15.0" fill="rgb(221,220,48)" rx="2" ry="2" />
<text  x="607.27" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (41 samples, 0.09%)</title><rect x="212.6" y="149" width="1.0" height="15.0" fill="rgb(229,92,16)" rx="2" ry="2" />
<text  x="215.56" y="159.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="386.0" y="165" width="0.4" height="15.0" fill="rgb(212,52,31)" rx="2" ry="2" />
<text  x="388.98" y="175.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (10 samples, 0.02%)</title><rect x="712.0" y="421" width="0.2" height="15.0" fill="rgb(234,34,16)" rx="2" ry="2" />
<text  x="714.98" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (5 samples, 0.01%)</title><rect x="887.8" y="421" width="0.1" height="15.0" fill="rgb(240,161,43)" rx="2" ry="2" />
<text  x="890.78" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (15 samples, 0.03%)</title><rect x="837.5" y="309" width="0.3" height="15.0" fill="rgb(235,226,28)" rx="2" ry="2" />
<text  x="840.46" y="319.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,746 samples, 9.97%)</title><rect x="426.4" y="421" width="117.6" height="15.0" fill="rgb(249,117,3)" rx="2" ry="2" />
<text  x="429.39" y="431.5" >query::querier..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%)</title><rect x="671.7" y="485" width="0.5" height="15.0" fill="rgb(219,135,10)" rx="2" ry="2" />
<text  x="674.69" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="833.6" y="261" width="0.1" height="15.0" fill="rgb(205,209,43)" rx="2" ry="2" />
<text  x="836.57" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="934.2" y="373" width="0.2" height="15.0" fill="rgb(233,175,12)" rx="2" ry="2" />
<text  x="937.19" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (21 samples, 0.04%)</title><rect x="710.7" y="421" width="0.5" height="15.0" fill="rgb(205,39,0)" rx="2" ry="2" />
<text  x="713.67" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (12 samples, 0.03%)</title><rect x="308.6" y="165" width="0.3" height="15.0" fill="rgb(239,196,32)" rx="2" ry="2" />
<text  x="311.62" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="24.7" y="469" width="0.3" height="15.0" fill="rgb(246,98,24)" rx="2" ry="2" />
<text  x="27.69" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (19 samples, 0.04%)</title><rect x="800.7" y="165" width="0.5" height="15.0" fill="rgb(218,162,52)" rx="2" ry="2" />
<text  x="803.74" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (187 samples, 0.39%)</title><rect x="90.4" y="437" width="4.6" height="15.0" fill="rgb(216,143,13)" rx="2" ry="2" />
<text  x="93.38" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%)</title><rect x="316.2" y="149" width="0.2" height="15.0" fill="rgb(227,68,15)" rx="2" ry="2" />
<text  x="319.18" y="159.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (86 samples, 0.18%)</title><rect x="723.0" y="437" width="2.1" height="15.0" fill="rgb(251,156,2)" rx="2" ry="2" />
<text  x="726.01" y="447.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (14 samples, 0.03%)</title><rect x="658.1" y="437" width="0.3" height="15.0" fill="rgb(250,143,51)" rx="2" ry="2" />
<text  x="661.09" y="447.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.01%)</title><rect x="24.3" y="373" width="0.1" height="15.0" fill="rgb(235,29,41)" rx="2" ry="2" />
<text  x="27.27" y="383.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="422.0" y="373" width="0.6" height="15.0" fill="rgb(213,180,48)" rx="2" ry="2" />
<text  x="424.96" y="383.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="238.7" y="181" width="0.7" height="15.0" fill="rgb(246,175,16)" rx="2" ry="2" />
<text  x="241.70" y="191.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (542 samples, 1.14%)</title><rect x="478.1" y="309" width="13.4" height="15.0" fill="rgb(237,64,44)" rx="2" ry="2" />
<text  x="481.08" y="319.5" ></text>
</g>
<g >
<title>operator delete (50 samples, 0.10%)</title><rect x="936.0" y="405" width="1.2" height="15.0" fill="rgb(230,220,26)" rx="2" ry="2" />
<text  x="939.00" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (5 samples, 0.01%)</title><rect x="1140.6" y="165" width="0.2" height="15.0" fill="rgb(239,152,33)" rx="2" ry="2" />
<text  x="1143.64" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (7 samples, 0.01%)</title><rect x="1176.9" y="501" width="0.2" height="15.0" fill="rgb(220,202,11)" rx="2" ry="2" />
<text  x="1179.92" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,267 samples, 48.86%)</title><rect x="51.4" y="485" width="576.5" height="15.0" fill="rgb(207,111,13)" rx="2" ry="2" />
<text  x="54.38" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (27 samples, 0.06%)</title><rect x="1147.0" y="485" width="0.6" height="15.0" fill="rgb(240,206,44)" rx="2" ry="2" />
<text  x="1149.96" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="250.4" y="277" width="0.6" height="15.0" fill="rgb(208,161,7)" rx="2" ry="2" />
<text  x="253.45" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (20 samples, 0.04%)</title><rect x="1101.1" y="341" width="0.5" height="15.0" fill="rgb(225,60,31)" rx="2" ry="2" />
<text  x="1104.07" y="351.5" ></text>
</g>
<g >
<title>compound_type&lt; (60 samples, 0.13%)</title><rect x="546.6" y="357" width="1.5" height="15.0" fill="rgb(233,61,31)" rx="2" ry="2" />
<text  x="549.62" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (92 samples, 0.19%)</title><rect x="38.4" y="437" width="2.3" height="15.0" fill="rgb(217,187,18)" rx="2" ry="2" />
<text  x="41.37" y="447.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (35 samples, 0.07%)</title><rect x="531.2" y="277" width="0.8" height="15.0" fill="rgb(236,175,9)" rx="2" ry="2" />
<text  x="534.15" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (21 samples, 0.04%)</title><rect x="207.1" y="149" width="0.5" height="15.0" fill="rgb(217,112,38)" rx="2" ry="2" />
<text  x="210.08" y="159.5" ></text>
</g>
<g >
<title>query_result_builder::consume (10 samples, 0.02%)</title><rect x="690.9" y="293" width="0.2" height="15.0" fill="rgb(214,89,45)" rx="2" ry="2" />
<text  x="693.87" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (335 samples, 0.70%)</title><rect x="35.6" y="485" width="8.3" height="15.0" fill="rgb(230,174,13)" rx="2" ry="2" />
<text  x="38.65" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (23 samples, 0.05%)</title><rect x="913.1" y="389" width="0.6" height="15.0" fill="rgb(210,75,54)" rx="2" ry="2" />
<text  x="916.13" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="835.8" y="325" width="0.3" height="15.0" fill="rgb(206,86,12)" rx="2" ry="2" />
<text  x="838.85" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="1047.0" y="245" width="0.4" height="15.0" fill="rgb(211,146,17)" rx="2" ry="2" />
<text  x="1050.01" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="620.4" y="373" width="0.1" height="15.0" fill="rgb(229,35,7)" rx="2" ry="2" />
<text  x="623.36" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="1171.0" y="453" width="0.5" height="15.0" fill="rgb(249,109,52)" rx="2" ry="2" />
<text  x="1174.02" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (45 samples, 0.09%)</title><rect x="1049.7" y="245" width="1.1" height="15.0" fill="rgb(235,142,0)" rx="2" ry="2" />
<text  x="1052.71" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (5 samples, 0.01%)</title><rect x="622.0" y="373" width="0.1" height="15.0" fill="rgb(250,97,17)" rx="2" ry="2" />
<text  x="625.02" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1126.8" y="405" width="0.1" height="15.0" fill="rgb(225,31,36)" rx="2" ry="2" />
<text  x="1129.82" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (49 samples, 0.10%)</title><rect x="263.4" y="357" width="1.2" height="15.0" fill="rgb(205,119,6)" rx="2" ry="2" />
<text  x="266.43" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (293 samples, 0.62%)</title><rect x="1114.4" y="405" width="7.3" height="15.0" fill="rgb(243,67,36)" rx="2" ry="2" />
<text  x="1117.40" y="415.5" ></text>
</g>
<g >
<title>sstring_hash::operator (26 samples, 0.05%)</title><rect x="1064.2" y="293" width="0.6" height="15.0" fill="rgb(207,37,51)" rx="2" ry="2" />
<text  x="1067.15" y="303.5" ></text>
</g>
<g >
<title>free (24 samples, 0.05%)</title><rect x="38.4" y="421" width="0.6" height="15.0" fill="rgb(244,18,33)" rx="2" ry="2" />
<text  x="41.42" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (50 samples, 0.10%)</title><rect x="811.5" y="261" width="1.2" height="15.0" fill="rgb(243,65,24)" rx="2" ry="2" />
<text  x="814.47" y="271.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.09%)</title><rect x="419.5" y="341" width="1.1" height="15.0" fill="rgb(205,85,30)" rx="2" ry="2" />
<text  x="422.48" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="910.6" y="373" width="0.1" height="15.0" fill="rgb(226,115,35)" rx="2" ry="2" />
<text  x="913.55" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (6 samples, 0.01%)</title><rect x="396.6" y="245" width="0.2" height="15.0" fill="rgb(222,73,35)" rx="2" ry="2" />
<text  x="399.64" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="1126.4" y="405" width="0.4" height="15.0" fill="rgb(243,219,48)" rx="2" ry="2" />
<text  x="1129.40" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (13 samples, 0.03%)</title><rect x="253.8" y="309" width="0.3" height="15.0" fill="rgb(232,148,3)" rx="2" ry="2" />
<text  x="256.81" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (673 samples, 1.41%)</title><rect x="502.7" y="293" width="16.6" height="15.0" fill="rgb(253,37,28)" rx="2" ry="2" />
<text  x="505.66" y="303.5" ></text>
</g>
<g >
<title>make_combined_reader (11 samples, 0.02%)</title><rect x="430.0" y="357" width="0.2" height="15.0" fill="rgb(218,50,18)" rx="2" ry="2" />
<text  x="432.96" y="367.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (16 samples, 0.03%)</title><rect x="307.2" y="165" width="0.4" height="15.0" fill="rgb(233,222,14)" rx="2" ry="2" />
<text  x="310.24" y="175.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,252 samples, 2.63%)</title><rect x="787.2" y="325" width="31.0" height="15.0" fill="rgb(225,133,44)" rx="2" ry="2" />
<text  x="790.16" y="335.5" >st..</text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (18 samples, 0.04%)</title><rect x="223.8" y="213" width="0.5" height="15.0" fill="rgb(229,213,28)" rx="2" ry="2" />
<text  x="226.81" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (35 samples, 0.07%)</title><rect x="23.2" y="453" width="0.9" height="15.0" fill="rgb(218,215,19)" rx="2" ry="2" />
<text  x="26.23" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (23 samples, 0.05%)</title><rect x="128.9" y="245" width="0.5" height="15.0" fill="rgb(231,10,4)" rx="2" ry="2" />
<text  x="131.86" y="255.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (13 samples, 0.03%)</title><rect x="1079.2" y="325" width="0.3" height="15.0" fill="rgb(221,119,32)" rx="2" ry="2" />
<text  x="1082.22" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="282.8" y="389" width="0.5" height="15.0" fill="rgb(210,55,14)" rx="2" ry="2" />
<text  x="285.76" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="235.9" y="197" width="0.1" height="15.0" fill="rgb(245,113,25)" rx="2" ry="2" />
<text  x="238.90" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (314 samples, 0.66%)</title><rect x="802.7" y="181" width="7.8" height="15.0" fill="rgb(247,1,23)" rx="2" ry="2" />
<text  x="805.72" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="905.2" y="325" width="0.2" height="15.0" fill="rgb(252,213,54)" rx="2" ry="2" />
<text  x="908.18" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (54 samples, 0.11%)</title><rect x="209.1" y="165" width="1.4" height="15.0" fill="rgb(251,148,25)" rx="2" ry="2" />
<text  x="212.12" y="175.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (44 samples, 0.09%)</title><rect x="484.5" y="213" width="1.1" height="15.0" fill="rgb(230,91,46)" rx="2" ry="2" />
<text  x="487.52" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%)</title><rect x="148.6" y="181" width="0.3" height="15.0" fill="rgb(224,56,37)" rx="2" ry="2" />
<text  x="151.61" y="191.5" ></text>
</g>
<g >
<title>std::type_info::operator== (8 samples, 0.02%)</title><rect x="1004.4" y="277" width="0.2" height="15.0" fill="rgb(207,190,1)" rx="2" ry="2" />
<text  x="1007.41" y="287.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (9 samples, 0.02%)</title><rect x="17.7" y="517" width="0.2" height="15.0" fill="rgb(230,193,2)" rx="2" ry="2" />
<text  x="20.68" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="817.1" y="261" width="0.1" height="15.0" fill="rgb(212,97,53)" rx="2" ry="2" />
<text  x="820.09" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="151.4" y="181" width="0.5" height="15.0" fill="rgb(233,216,27)" rx="2" ry="2" />
<text  x="154.38" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (14 samples, 0.03%)</title><rect x="874.3" y="373" width="0.3" height="15.0" fill="rgb(205,140,7)" rx="2" ry="2" />
<text  x="877.25" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (57 samples, 0.12%)</title><rect x="620.5" y="389" width="1.4" height="15.0" fill="rgb(234,74,23)" rx="2" ry="2" />
<text  x="623.48" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="663.6" y="485" width="0.5" height="15.0" fill="rgb(238,16,15)" rx="2" ry="2" />
<text  x="666.59" y="495.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (10 samples, 0.02%)</title><rect x="621.9" y="389" width="0.2" height="15.0" fill="rgb(228,87,18)" rx="2" ry="2" />
<text  x="624.89" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%)</title><rect x="809.3" y="85" width="0.5" height="15.0" fill="rgb(235,43,9)" rx="2" ry="2" />
<text  x="812.31" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="846.2" y="437" width="0.2" height="15.0" fill="rgb(251,51,51)" rx="2" ry="2" />
<text  x="849.16" y="447.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (13 samples, 0.03%)</title><rect x="952.6" y="405" width="0.3" height="15.0" fill="rgb(223,228,19)" rx="2" ry="2" />
<text  x="955.55" y="415.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (10 samples, 0.02%)</title><rect x="691.6" y="485" width="0.3" height="15.0" fill="rgb(231,221,47)" rx="2" ry="2" />
<text  x="694.64" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (25 samples, 0.05%)</title><rect x="133.4" y="261" width="0.6" height="15.0" fill="rgb(224,167,47)" rx="2" ry="2" />
<text  x="136.39" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (13 samples, 0.03%)</title><rect x="253.0" y="277" width="0.3" height="15.0" fill="rgb(215,195,10)" rx="2" ry="2" />
<text  x="256.00" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%)</title><rect x="651.9" y="389" width="0.2" height="15.0" fill="rgb(236,16,7)" rx="2" ry="2" />
<text  x="654.92" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (106 samples, 0.22%)</title><rect x="983.2" y="309" width="2.7" height="15.0" fill="rgb(244,156,37)" rx="2" ry="2" />
<text  x="986.23" y="319.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (39 samples, 0.08%)</title><rect x="364.8" y="197" width="0.9" height="15.0" fill="rgb(249,81,40)" rx="2" ry="2" />
<text  x="367.77" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (8 samples, 0.02%)</title><rect x="142.5" y="245" width="0.2" height="15.0" fill="rgb(210,119,40)" rx="2" ry="2" />
<text  x="145.46" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (775 samples, 1.63%)</title><rect x="370.1" y="197" width="19.3" height="15.0" fill="rgb(252,148,5)" rx="2" ry="2" />
<text  x="373.15" y="207.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (73 samples, 0.15%)</title><rect x="301.2" y="229" width="1.8" height="15.0" fill="rgb(244,203,54)" rx="2" ry="2" />
<text  x="304.19" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (8 samples, 0.02%)</title><rect x="707.4" y="437" width="0.2" height="15.0" fill="rgb(223,78,21)" rx="2" ry="2" />
<text  x="710.38" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (28 samples, 0.06%)</title><rect x="554.8" y="421" width="0.7" height="15.0" fill="rgb(244,223,22)" rx="2" ry="2" />
<text  x="557.79" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="872.2" y="501" width="0.7" height="15.0" fill="rgb(222,203,53)" rx="2" ry="2" />
<text  x="875.25" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="934.5" y="405" width="0.1" height="15.0" fill="rgb(216,16,11)" rx="2" ry="2" />
<text  x="937.49" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="122.1" y="261" width="0.1" height="15.0" fill="rgb(249,115,2)" rx="2" ry="2" />
<text  x="125.07" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1157.8" y="405" width="0.1" height="15.0" fill="rgb(250,71,32)" rx="2" ry="2" />
<text  x="1160.79" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (134 samples, 0.28%)</title><rect x="445.2" y="277" width="3.4" height="15.0" fill="rgb(210,71,11)" rx="2" ry="2" />
<text  x="448.25" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (19 samples, 0.04%)</title><rect x="1173.8" y="421" width="0.4" height="15.0" fill="rgb(211,31,13)" rx="2" ry="2" />
<text  x="1176.77" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (66 samples, 0.14%)</title><rect x="785.0" y="309" width="1.6" height="15.0" fill="rgb(252,74,31)" rx="2" ry="2" />
<text  x="787.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (29 samples, 0.06%)</title><rect x="1050.1" y="229" width="0.7" height="15.0" fill="rgb(248,45,12)" rx="2" ry="2" />
<text  x="1053.10" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="43.9" y="485" width="0.2" height="15.0" fill="rgb(236,169,19)" rx="2" ry="2" />
<text  x="46.95" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="957.0" y="405" width="0.1" height="15.0" fill="rgb(240,141,14)" rx="2" ry="2" />
<text  x="959.99" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="639.2" y="453" width="0.3" height="15.0" fill="rgb(253,169,44)" rx="2" ry="2" />
<text  x="642.24" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (31 samples, 0.07%)</title><rect x="774.6" y="357" width="0.7" height="15.0" fill="rgb(223,21,17)" rx="2" ry="2" />
<text  x="777.57" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="576.0" y="325" width="0.2" height="15.0" fill="rgb(236,193,11)" rx="2" ry="2" />
<text  x="578.95" y="335.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (56 samples, 0.12%)</title><rect x="625.3" y="421" width="1.4" height="15.0" fill="rgb(226,167,38)" rx="2" ry="2" />
<text  x="628.34" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (10 samples, 0.02%)</title><rect x="907.1" y="357" width="0.2" height="15.0" fill="rgb(247,41,40)" rx="2" ry="2" />
<text  x="910.06" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (18 samples, 0.04%)</title><rect x="62.2" y="421" width="0.5" height="15.0" fill="rgb(253,30,20)" rx="2" ry="2" />
<text  x="65.21" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (147 samples, 0.31%)</title><rect x="929.7" y="373" width="3.6" height="15.0" fill="rgb(217,183,43)" rx="2" ry="2" />
<text  x="932.68" y="383.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%)</title><rect x="1040.1" y="261" width="2.0" height="15.0" fill="rgb(248,117,26)" rx="2" ry="2" />
<text  x="1043.09" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="536.8" y="245" width="0.5" height="15.0" fill="rgb(232,142,29)" rx="2" ry="2" />
<text  x="539.83" y="255.5" ></text>
</g>
<g >
<title>__tls_init (35 samples, 0.07%)</title><rect x="492.8" y="309" width="0.9" height="15.0" fill="rgb(246,177,49)" rx="2" ry="2" />
<text  x="495.85" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="909.6" y="357" width="0.2" height="15.0" fill="rgb(241,21,52)" rx="2" ry="2" />
<text  x="912.59" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (52 samples, 0.11%)</title><rect x="372.3" y="181" width="1.3" height="15.0" fill="rgb(206,10,15)" rx="2" ry="2" />
<text  x="375.28" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="868.1" y="405" width="0.1" height="15.0" fill="rgb(245,68,17)" rx="2" ry="2" />
<text  x="871.08" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (31 samples, 0.07%)</title><rect x="1177.2" y="501" width="0.8" height="15.0" fill="rgb(247,180,22)" rx="2" ry="2" />
<text  x="1180.21" y="511.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (59 samples, 0.12%)</title><rect x="799.8" y="213" width="1.5" height="15.0" fill="rgb(247,120,41)" rx="2" ry="2" />
<text  x="802.82" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="206.3" y="149" width="0.6" height="15.0" fill="rgb(252,159,39)" rx="2" ry="2" />
<text  x="209.34" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (12 samples, 0.03%)</title><rect x="874.3" y="357" width="0.3" height="15.0" fill="rgb(207,184,31)" rx="2" ry="2" />
<text  x="877.25" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (198 samples, 0.42%)</title><rect x="18.3" y="405" width="4.9" height="15.0" fill="rgb(243,44,34)" rx="2" ry="2" />
<text  x="21.30" y="415.5" ></text>
</g>
<g >
<title>row::compact_and_expire (818 samples, 1.72%)</title><rect x="369.1" y="213" width="20.3" height="15.0" fill="rgb(216,5,46)" rx="2" ry="2" />
<text  x="372.08" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (159 samples, 0.33%)</title><rect x="731.4" y="357" width="4.0" height="15.0" fill="rgb(250,20,53)" rx="2" ry="2" />
<text  x="734.43" y="367.5" ></text>
</g>
<g >
<title>database::has_keyspace (116 samples, 0.24%)</title><rect x="855.2" y="405" width="2.8" height="15.0" fill="rgb(244,70,47)" rx="2" ry="2" />
<text  x="858.15" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (45 samples, 0.09%)</title><rect x="853.2" y="421" width="1.1" height="15.0" fill="rgb(208,78,5)" rx="2" ry="2" />
<text  x="856.22" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="725.3" y="437" width="0.2" height="15.0" fill="rgb(233,104,35)" rx="2" ry="2" />
<text  x="728.26" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="428.9" y="373" width="0.2" height="15.0" fill="rgb(252,19,19)" rx="2" ry="2" />
<text  x="431.95" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="890.1" y="405" width="0.2" height="15.0" fill="rgb(218,112,41)" rx="2" ry="2" />
<text  x="893.11" y="415.5" ></text>
</g>
<g >
<title>database::find_uuid (215 samples, 0.45%)</title><rect x="763.8" y="389" width="5.3" height="15.0" fill="rgb(226,88,20)" rx="2" ry="2" />
<text  x="766.82" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (33 samples, 0.07%)</title><rect x="1140.1" y="325" width="0.9" height="15.0" fill="rgb(243,213,27)" rx="2" ry="2" />
<text  x="1143.15" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="795.6" y="229" width="0.2" height="15.0" fill="rgb(240,31,18)" rx="2" ry="2" />
<text  x="798.63" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (102 samples, 0.21%)</title><rect x="1102.3" y="357" width="2.5" height="15.0" fill="rgb(254,194,41)" rx="2" ry="2" />
<text  x="1105.31" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (36 samples, 0.08%)</title><rect x="690.6" y="437" width="0.9" height="15.0" fill="rgb(235,49,15)" rx="2" ry="2" />
<text  x="693.60" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (7 samples, 0.01%)</title><rect x="1095.8" y="245" width="0.2" height="15.0" fill="rgb(233,124,12)" rx="2" ry="2" />
<text  x="1098.82" y="255.5" ></text>
</g>
<g >
<title>tombstone::apply (10 samples, 0.02%)</title><rect x="389.8" y="197" width="0.3" height="15.0" fill="rgb(218,149,16)" rx="2" ry="2" />
<text  x="392.82" y="207.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (65 samples, 0.14%)</title><rect x="918.6" y="373" width="1.6" height="15.0" fill="rgb(234,191,20)" rx="2" ry="2" />
<text  x="921.58" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%)</title><rect x="200.1" y="149" width="0.3" height="15.0" fill="rgb(230,229,49)" rx="2" ry="2" />
<text  x="203.15" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1045.0" y="277" width="0.1" height="15.0" fill="rgb(210,119,37)" rx="2" ry="2" />
<text  x="1048.00" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="114.5" y="293" width="0.1" height="15.0" fill="rgb(250,216,25)" rx="2" ry="2" />
<text  x="117.46" y="303.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (979 samples, 2.06%)</title><rect x="791.1" y="277" width="24.2" height="15.0" fill="rgb(250,62,45)" rx="2" ry="2" />
<text  x="794.08" y="287.5" >a..</text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (9 samples, 0.02%)</title><rect x="915.3" y="341" width="0.2" height="15.0" fill="rgb(215,29,31)" rx="2" ry="2" />
<text  x="918.26" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (84 samples, 0.18%)</title><rect x="808.2" y="149" width="2.1" height="15.0" fill="rgb(233,210,15)" rx="2" ry="2" />
<text  x="811.25" y="159.5" ></text>
</g>
<g >
<title>database::find_schema (68 samples, 0.14%)</title><rect x="829.7" y="357" width="1.6" height="15.0" fill="rgb(215,171,31)" rx="2" ry="2" />
<text  x="832.65" y="367.5" ></text>
</g>
<g >
<title>compound_type&lt; (109 samples, 0.23%)</title><rect x="930.5" y="357" width="2.7" height="15.0" fill="rgb(210,63,29)" rx="2" ry="2" />
<text  x="933.48" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.01%)</title><rect x="519.3" y="293" width="0.2" height="15.0" fill="rgb(224,14,27)" rx="2" ry="2" />
<text  x="522.34" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="724.9" y="421" width="0.2" height="15.0" fill="rgb(237,28,2)" rx="2" ry="2" />
<text  x="727.89" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%)</title><rect x="272.7" y="293" width="0.1" height="15.0" fill="rgb(217,112,34)" rx="2" ry="2" />
<text  x="275.70" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1134.5" y="421" width="0.1" height="15.0" fill="rgb(231,159,25)" rx="2" ry="2" />
<text  x="1137.47" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (26 samples, 0.05%)</title><rect x="878.1" y="469" width="0.7" height="15.0" fill="rgb(207,25,32)" rx="2" ry="2" />
<text  x="881.14" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (18 samples, 0.04%)</title><rect x="114.2" y="309" width="0.5" height="15.0" fill="rgb(239,88,3)" rx="2" ry="2" />
<text  x="117.22" y="319.5" ></text>
</g>
<g >
<title>row::row (17 samples, 0.04%)</title><rect x="244.3" y="197" width="0.4" height="15.0" fill="rgb(233,206,5)" rx="2" ry="2" />
<text  x="247.30" y="207.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (19 samples, 0.04%)</title><rect x="283.3" y="389" width="0.4" height="15.0" fill="rgb(240,105,19)" rx="2" ry="2" />
<text  x="286.28" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (10 samples, 0.02%)</title><rect x="232.6" y="197" width="0.3" height="15.0" fill="rgb(247,221,11)" rx="2" ry="2" />
<text  x="235.61" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="274.3" y="277" width="0.2" height="15.0" fill="rgb(254,124,26)" rx="2" ry="2" />
<text  x="277.33" y="287.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (17 samples, 0.04%)</title><rect x="164.1" y="133" width="0.4" height="15.0" fill="rgb(219,179,48)" rx="2" ry="2" />
<text  x="167.07" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="420.6" y="357" width="0.2" height="15.0" fill="rgb(249,55,46)" rx="2" ry="2" />
<text  x="423.62" y="367.5" ></text>
</g>
<g >
<title>__strlen_avx2 (89 samples, 0.19%)</title><rect x="1016.9" y="245" width="2.2" height="15.0" fill="rgb(248,72,44)" rx="2" ry="2" />
<text  x="1019.93" y="255.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (8 samples, 0.02%)</title><rect x="1003.1" y="293" width="0.2" height="15.0" fill="rgb(253,94,31)" rx="2" ry="2" />
<text  x="1006.10" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (5 samples, 0.01%)</title><rect x="646.7" y="485" width="0.1" height="15.0" fill="rgb(234,214,7)" rx="2" ry="2" />
<text  x="649.72" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1101.7" y="341" width="0.2" height="15.0" fill="rgb(205,59,54)" rx="2" ry="2" />
<text  x="1104.72" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (9 samples, 0.02%)</title><rect x="195.1" y="85" width="0.3" height="15.0" fill="rgb(208,226,2)" rx="2" ry="2" />
<text  x="198.14" y="95.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (24 samples, 0.05%)</title><rect x="367.6" y="149" width="0.6" height="15.0" fill="rgb(211,77,20)" rx="2" ry="2" />
<text  x="370.57" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (32 samples, 0.07%)</title><rect x="616.6" y="437" width="0.8" height="15.0" fill="rgb(248,123,51)" rx="2" ry="2" />
<text  x="619.59" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="843.6" y="357" width="0.5" height="15.0" fill="rgb(215,89,51)" rx="2" ry="2" />
<text  x="846.63" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (5 samples, 0.01%)</title><rect x="982.7" y="341" width="0.1" height="15.0" fill="rgb(226,119,13)" rx="2" ry="2" />
<text  x="985.68" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="819.3" y="293" width="0.1" height="15.0" fill="rgb(225,137,52)" rx="2" ry="2" />
<text  x="822.32" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (32 samples, 0.07%)</title><rect x="503.7" y="277" width="0.8" height="15.0" fill="rgb(253,79,48)" rx="2" ry="2" />
<text  x="506.68" y="287.5" ></text>
</g>
<g >
<title>perf_simple_que (47,622 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(215,99,25)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,098 samples, 4.41%)</title><rect x="1000.8" y="309" width="52.0" height="15.0" fill="rgb(225,139,23)" rx="2" ry="2" />
<text  x="1003.77" y="319.5" >servi..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (15 samples, 0.03%)</title><rect x="75.1" y="453" width="0.3" height="15.0" fill="rgb(252,63,3)" rx="2" ry="2" />
<text  x="78.07" y="463.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="510.9" y="197" width="0.7" height="15.0" fill="rgb(242,149,32)" rx="2" ry="2" />
<text  x="513.86" y="207.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (547 samples, 1.15%)</title><rect x="265.7" y="341" width="13.6" height="15.0" fill="rgb(251,214,25)" rx="2" ry="2" />
<text  x="268.73" y="351.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (14 samples, 0.03%)</title><rect x="1140.4" y="181" width="0.4" height="15.0" fill="rgb(242,52,6)" rx="2" ry="2" />
<text  x="1143.42" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (18 samples, 0.04%)</title><rect x="1010.0" y="261" width="0.4" height="15.0" fill="rgb(246,119,39)" rx="2" ry="2" />
<text  x="1012.96" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (24 samples, 0.05%)</title><rect x="1100.0" y="309" width="0.6" height="15.0" fill="rgb(232,19,0)" rx="2" ry="2" />
<text  x="1102.96" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.01%)</title><rect x="702.5" y="469" width="0.2" height="15.0" fill="rgb(226,121,6)" rx="2" ry="2" />
<text  x="705.54" y="479.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (12 samples, 0.03%)</title><rect x="290.3" y="293" width="0.3" height="15.0" fill="rgb(245,19,5)" rx="2" ry="2" />
<text  x="293.29" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (93 samples, 0.20%)</title><rect x="796.6" y="213" width="2.3" height="15.0" fill="rgb(207,126,23)" rx="2" ry="2" />
<text  x="799.60" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="856.7" y="325" width="0.2" height="15.0" fill="rgb(245,195,51)" rx="2" ry="2" />
<text  x="859.69" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (5 samples, 0.01%)</title><rect x="792.9" y="229" width="0.1" height="15.0" fill="rgb(238,65,3)" rx="2" ry="2" />
<text  x="795.88" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,615 samples, 7.59%)</title><rect x="303.0" y="245" width="89.6" height="15.0" fill="rgb(234,26,0)" rx="2" ry="2" />
<text  x="306.00" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (5 samples, 0.01%)</title><rect x="626.6" y="389" width="0.1" height="15.0" fill="rgb(210,19,18)" rx="2" ry="2" />
<text  x="629.60" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (100 samples, 0.21%)</title><rect x="732.9" y="325" width="2.4" height="15.0" fill="rgb(235,93,31)" rx="2" ry="2" />
<text  x="735.87" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (52 samples, 0.11%)</title><rect x="729.3" y="421" width="1.2" height="15.0" fill="rgb(223,139,15)" rx="2" ry="2" />
<text  x="732.25" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="995.7" y="325" width="0.3" height="15.0" fill="rgb(254,148,12)" rx="2" ry="2" />
<text  x="998.72" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (8 samples, 0.02%)</title><rect x="1102.1" y="357" width="0.2" height="15.0" fill="rgb(220,20,27)" rx="2" ry="2" />
<text  x="1105.11" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (8 samples, 0.02%)</title><rect x="515.2" y="213" width="0.2" height="15.0" fill="rgb(235,168,5)" rx="2" ry="2" />
<text  x="518.17" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="634.2" y="485" width="0.2" height="15.0" fill="rgb(213,173,30)" rx="2" ry="2" />
<text  x="637.21" y="495.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,507 samples, 3.16%)</title><rect x="162.7" y="165" width="37.3" height="15.0" fill="rgb(224,119,42)" rx="2" ry="2" />
<text  x="165.68" y="175.5" >clu..</text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="505.2" y="261" width="0.2" height="15.0" fill="rgb(221,187,21)" rx="2" ry="2" />
<text  x="508.16" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (347 samples, 0.73%)</title><rect x="566.3" y="309" width="8.6" height="15.0" fill="rgb(230,17,42)" rx="2" ry="2" />
<text  x="569.31" y="319.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%)</title><rect x="20.5" y="309" width="0.2" height="15.0" fill="rgb(252,214,22)" rx="2" ry="2" />
<text  x="23.51" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (5 samples, 0.01%)</title><rect x="978.8" y="357" width="0.1" height="15.0" fill="rgb(205,181,32)" rx="2" ry="2" />
<text  x="981.79" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (44 samples, 0.09%)</title><rect x="675.4" y="453" width="1.1" height="15.0" fill="rgb(212,204,27)" rx="2" ry="2" />
<text  x="678.41" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (7 samples, 0.01%)</title><rect x="810.3" y="149" width="0.2" height="15.0" fill="rgb(247,39,19)" rx="2" ry="2" />
<text  x="813.33" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="670.9" y="469" width="0.4" height="15.0" fill="rgb(244,163,3)" rx="2" ry="2" />
<text  x="673.93" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%)</title><rect x="903.1" y="309" width="0.2" height="15.0" fill="rgb(254,135,13)" rx="2" ry="2" />
<text  x="906.10" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (43 samples, 0.09%)</title><rect x="792.7" y="245" width="1.1" height="15.0" fill="rgb(240,135,20)" rx="2" ry="2" />
<text  x="795.74" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="263.2" y="341" width="0.2" height="15.0" fill="rgb(229,23,15)" rx="2" ry="2" />
<text  x="266.18" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="906.3" y="357" width="0.1" height="15.0" fill="rgb(239,172,40)" rx="2" ry="2" />
<text  x="909.29" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (355 samples, 0.75%)</title><rect x="377.2" y="165" width="8.8" height="15.0" fill="rgb(250,31,43)" rx="2" ry="2" />
<text  x="380.18" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.03%)</title><rect x="1064.5" y="261" width="0.2" height="15.0" fill="rgb(222,116,19)" rx="2" ry="2" />
<text  x="1067.45" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (22 samples, 0.05%)</title><rect x="565.1" y="277" width="0.6" height="15.0" fill="rgb(205,57,1)" rx="2" ry="2" />
<text  x="568.15" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (484 samples, 1.02%)</title><rect x="646.9" y="485" width="12.0" height="15.0" fill="rgb(250,168,2)" rx="2" ry="2" />
<text  x="649.89" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="540.8" y="341" width="0.3" height="15.0" fill="rgb(231,104,43)" rx="2" ry="2" />
<text  x="543.82" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="504.3" y="261" width="0.2" height="15.0" fill="rgb(206,73,16)" rx="2" ry="2" />
<text  x="507.27" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (9 samples, 0.02%)</title><rect x="74.8" y="453" width="0.2" height="15.0" fill="rgb(245,81,51)" rx="2" ry="2" />
<text  x="77.82" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (18 samples, 0.04%)</title><rect x="1108.2" y="373" width="0.5" height="15.0" fill="rgb(215,225,21)" rx="2" ry="2" />
<text  x="1111.21" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (28 samples, 0.06%)</title><rect x="766.3" y="325" width="0.7" height="15.0" fill="rgb(242,47,52)" rx="2" ry="2" />
<text  x="769.35" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,442 samples, 21.93%)</title><rect x="880.3" y="453" width="258.8" height="15.0" fill="rgb(206,72,43)" rx="2" ry="2" />
<text  x="883.33" y="463.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%)</title><rect x="740.9" y="389" width="0.1" height="15.0" fill="rgb(247,64,44)" rx="2" ry="2" />
<text  x="743.90" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="631.1" y="485" width="0.3" height="15.0" fill="rgb(235,43,41)" rx="2" ry="2" />
<text  x="634.06" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="558.0" y="357" width="0.1" height="15.0" fill="rgb(238,153,43)" rx="2" ry="2" />
<text  x="560.96" y="367.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (130 samples, 0.27%)</title><rect x="1152.1" y="469" width="3.2" height="15.0" fill="rgb(237,175,31)" rx="2" ry="2" />
<text  x="1155.11" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (5 samples, 0.01%)</title><rect x="501.5" y="293" width="0.1" height="15.0" fill="rgb(234,154,3)" rx="2" ry="2" />
<text  x="504.50" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (67 samples, 0.14%)</title><rect x="256.0" y="325" width="1.7" height="15.0" fill="rgb(236,11,48)" rx="2" ry="2" />
<text  x="259.04" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.02%)</title><rect x="24.7" y="533" width="0.3" height="15.0" fill="rgb(209,86,27)" rx="2" ry="2" />
<text  x="27.69" y="543.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (14 samples, 0.03%)</title><rect x="978.2" y="357" width="0.4" height="15.0" fill="rgb(207,14,6)" rx="2" ry="2" />
<text  x="981.25" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (32 samples, 0.07%)</title><rect x="608.3" y="437" width="0.8" height="15.0" fill="rgb(221,210,9)" rx="2" ry="2" />
<text  x="611.34" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (32 samples, 0.07%)</title><rect x="873.8" y="437" width="0.8" height="15.0" fill="rgb(211,55,16)" rx="2" ry="2" />
<text  x="876.83" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="538.0" y="325" width="0.2" height="15.0" fill="rgb(216,203,46)" rx="2" ry="2" />
<text  x="541.02" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="466.6" y="309" width="0.5" height="15.0" fill="rgb(217,86,34)" rx="2" ry="2" />
<text  x="469.56" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (9 samples, 0.02%)</title><rect x="253.5" y="293" width="0.3" height="15.0" fill="rgb(241,154,32)" rx="2" ry="2" />
<text  x="256.54" y="303.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (14 samples, 0.03%)</title><rect x="192.9" y="85" width="0.4" height="15.0" fill="rgb(227,163,46)" rx="2" ry="2" />
<text  x="195.91" y="95.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (5 samples, 0.01%)</title><rect x="193.3" y="101" width="0.1" height="15.0" fill="rgb(240,68,21)" rx="2" ry="2" />
<text  x="196.26" y="111.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (24 samples, 0.05%)</title><rect x="1177.4" y="469" width="0.6" height="15.0" fill="rgb(226,45,1)" rx="2" ry="2" />
<text  x="1180.36" y="479.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (130 samples, 0.27%)</title><rect x="308.9" y="181" width="3.2" height="15.0" fill="rgb(234,74,42)" rx="2" ry="2" />
<text  x="311.92" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%)</title><rect x="1108.5" y="357" width="0.2" height="15.0" fill="rgb(230,152,12)" rx="2" ry="2" />
<text  x="1111.46" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (51 samples, 0.11%)</title><rect x="193.9" y="69" width="1.2" height="15.0" fill="rgb(209,134,9)" rx="2" ry="2" />
<text  x="196.88" y="79.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="635.4" y="469" width="0.1" height="15.0" fill="rgb(233,117,27)" rx="2" ry="2" />
<text  x="638.37" y="479.5" ></text>
</g>
<g >
<title>database::find_keyspace (241 samples, 0.51%)</title><rect x="1059.5" y="341" width="6.0" height="15.0" fill="rgb(253,51,34)" rx="2" ry="2" />
<text  x="1062.54" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="293.8" y="293" width="0.2" height="15.0" fill="rgb(221,95,22)" rx="2" ry="2" />
<text  x="296.76" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,098 samples, 12.80%)</title><rect x="957.7" y="405" width="151.1" height="15.0" fill="rgb(215,165,39)" rx="2" ry="2" />
<text  x="960.66" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (191 samples, 0.40%)</title><rect x="201.0" y="133" width="4.7" height="15.0" fill="rgb(221,60,37)" rx="2" ry="2" />
<text  x="203.96" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="147.8" y="165" width="0.8" height="15.0" fill="rgb(245,45,42)" rx="2" ry="2" />
<text  x="150.81" y="175.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (10 samples, 0.02%)</title><rect x="517.7" y="245" width="0.3" height="15.0" fill="rgb(209,137,36)" rx="2" ry="2" />
<text  x="520.72" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6 samples, 0.01%)</title><rect x="27.2" y="517" width="0.2" height="15.0" fill="rgb(246,53,41)" rx="2" ry="2" />
<text  x="30.25" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (31 samples, 0.07%)</title><rect x="634.8" y="485" width="0.7" height="15.0" fill="rgb(236,152,7)" rx="2" ry="2" />
<text  x="637.78" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (23 samples, 0.05%)</title><rect x="21.5" y="309" width="0.6" height="15.0" fill="rgb(213,131,15)" rx="2" ry="2" />
<text  x="24.55" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (48 samples, 0.10%)</title><rect x="1012.3" y="245" width="1.2" height="15.0" fill="rgb(233,167,51)" rx="2" ry="2" />
<text  x="1015.27" y="255.5" ></text>
</g>
<g >
<title>query::result::result (12 samples, 0.03%)</title><rect x="613.7" y="421" width="0.3" height="15.0" fill="rgb(220,156,3)" rx="2" ry="2" />
<text  x="616.74" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (7 samples, 0.01%)</title><rect x="1163.1" y="469" width="0.1" height="15.0" fill="rgb(253,54,32)" rx="2" ry="2" />
<text  x="1166.07" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (27 samples, 0.06%)</title><rect x="741.3" y="389" width="0.6" height="15.0" fill="rgb(226,168,5)" rx="2" ry="2" />
<text  x="744.27" y="399.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (11 samples, 0.02%)</title><rect x="680.5" y="469" width="0.3" height="15.0" fill="rgb(208,21,30)" rx="2" ry="2" />
<text  x="683.52" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (14 samples, 0.03%)</title><rect x="874.3" y="389" width="0.3" height="15.0" fill="rgb(210,11,43)" rx="2" ry="2" />
<text  x="877.25" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (17 samples, 0.04%)</title><rect x="733.5" y="293" width="0.4" height="15.0" fill="rgb(248,113,39)" rx="2" ry="2" />
<text  x="736.47" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (25 samples, 0.05%)</title><rect x="1177.4" y="485" width="0.6" height="15.0" fill="rgb(247,47,50)" rx="2" ry="2" />
<text  x="1180.36" y="495.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (11 samples, 0.02%)</title><rect x="874.3" y="325" width="0.3" height="15.0" fill="rgb(244,203,16)" rx="2" ry="2" />
<text  x="877.28" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="393.1" y="229" width="0.1" height="15.0" fill="rgb(244,145,16)" rx="2" ry="2" />
<text  x="396.12" y="239.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (129 samples, 0.27%)</title><rect x="534.6" y="309" width="3.2" height="15.0" fill="rgb(237,25,23)" rx="2" ry="2" />
<text  x="537.65" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (432 samples, 0.91%)</title><rect x="894.2" y="325" width="10.7" height="15.0" fill="rgb(229,31,43)" rx="2" ry="2" />
<text  x="897.20" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (11 samples, 0.02%)</title><rect x="928.9" y="341" width="0.3" height="15.0" fill="rgb(236,4,33)" rx="2" ry="2" />
<text  x="931.89" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%)</title><rect x="1104.6" y="341" width="0.2" height="15.0" fill="rgb(228,49,18)" rx="2" ry="2" />
<text  x="1107.59" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (6 samples, 0.01%)</title><rect x="70.0" y="389" width="0.1" height="15.0" fill="rgb(231,123,16)" rx="2" ry="2" />
<text  x="72.96" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="627.5" y="469" width="0.4" height="15.0" fill="rgb(223,32,41)" rx="2" ry="2" />
<text  x="630.49" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (19 samples, 0.04%)</title><rect x="611.9" y="437" width="0.5" height="15.0" fill="rgb(224,218,20)" rx="2" ry="2" />
<text  x="614.91" y="447.5" ></text>
</g>
<g >
<title>validation::validate_column_family (354 samples, 0.74%)</title><rect x="829.2" y="389" width="8.7" height="15.0" fill="rgb(231,12,33)" rx="2" ry="2" />
<text  x="832.16" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (62 samples, 0.13%)</title><rect x="530.8" y="293" width="1.5" height="15.0" fill="rgb(228,82,17)" rx="2" ry="2" />
<text  x="533.76" y="303.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (9 samples, 0.02%)</title><rect x="860.8" y="389" width="0.2" height="15.0" fill="rgb(238,193,6)" rx="2" ry="2" />
<text  x="863.75" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (73 samples, 0.15%)</title><rect x="1098.8" y="325" width="1.8" height="15.0" fill="rgb(250,219,1)" rx="2" ry="2" />
<text  x="1101.79" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="54.0" y="469" width="0.3" height="15.0" fill="rgb(211,206,24)" rx="2" ry="2" />
<text  x="57.01" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (28 samples, 0.06%)</title><rect x="212.8" y="133" width="0.7" height="15.0" fill="rgb(233,26,0)" rx="2" ry="2" />
<text  x="215.81" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (106 samples, 0.22%)</title><rect x="202.6" y="117" width="2.7" height="15.0" fill="rgb(239,181,6)" rx="2" ry="2" />
<text  x="205.62" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (19 samples, 0.04%)</title><rect x="1050.4" y="213" width="0.4" height="15.0" fill="rgb(242,188,2)" rx="2" ry="2" />
<text  x="1053.35" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="658.4" y="437" width="0.3" height="15.0" fill="rgb(251,127,24)" rx="2" ry="2" />
<text  x="661.44" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (38 samples, 0.08%)</title><rect x="18.7" y="277" width="1.0" height="15.0" fill="rgb(238,15,46)" rx="2" ry="2" />
<text  x="21.75" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="873.0" y="437" width="0.4" height="15.0" fill="rgb(209,107,14)" rx="2" ry="2" />
<text  x="876.04" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (18 samples, 0.04%)</title><rect x="812.2" y="229" width="0.5" height="15.0" fill="rgb(231,136,7)" rx="2" ry="2" />
<text  x="815.24" y="239.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,023 samples, 2.15%)</title><rect x="790.8" y="293" width="25.4" height="15.0" fill="rgb(239,29,54)" rx="2" ry="2" />
<text  x="793.83" y="303.5" >s..</text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="52.8" y="469" width="0.5" height="15.0" fill="rgb(208,223,25)" rx="2" ry="2" />
<text  x="55.77" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="775.7" y="341" width="0.3" height="15.0" fill="rgb(227,134,31)" rx="2" ry="2" />
<text  x="778.74" y="351.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.01%)</title><rect x="24.3" y="421" width="0.1" height="15.0" fill="rgb(234,158,27)" rx="2" ry="2" />
<text  x="27.27" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (37 samples, 0.08%)</title><rect x="742.2" y="373" width="1.0" height="15.0" fill="rgb(205,110,21)" rx="2" ry="2" />
<text  x="745.24" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (264 samples, 0.55%)</title><rect x="398.0" y="213" width="6.6" height="15.0" fill="rgb(239,102,36)" rx="2" ry="2" />
<text  x="401.05" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (35 samples, 0.07%)</title><rect x="614.3" y="437" width="0.8" height="15.0" fill="rgb(245,189,10)" rx="2" ry="2" />
<text  x="617.26" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::stats (65 samples, 0.14%)</title><rect x="493.8" y="309" width="1.6" height="15.0" fill="rgb(235,85,52)" rx="2" ry="2" />
<text  x="496.84" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="900.9" y="277" width="0.7" height="15.0" fill="rgb(238,20,41)" rx="2" ry="2" />
<text  x="903.94" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (10 samples, 0.02%)</title><rect x="669.9" y="453" width="0.3" height="15.0" fill="rgb(206,71,27)" rx="2" ry="2" />
<text  x="672.94" y="463.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (15 samples, 0.03%)</title><rect x="1175.0" y="501" width="0.4" height="15.0" fill="rgb(242,105,30)" rx="2" ry="2" />
<text  x="1178.01" y="511.5" ></text>
</g>
<g >
<title>sstables::noop_write_monitor::~noop_write_monitor (11 samples, 0.02%)</title><rect x="24.7" y="613" width="0.3" height="15.0" fill="rgb(230,163,21)" rx="2" ry="2" />
<text  x="27.69" y="623.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (18 samples, 0.04%)</title><rect x="357.5" y="149" width="0.4" height="15.0" fill="rgb(205,99,21)" rx="2" ry="2" />
<text  x="360.49" y="159.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,549 samples, 9.55%)</title><rect x="428.6" y="389" width="112.7" height="15.0" fill="rgb(232,82,13)" rx="2" ry="2" />
<text  x="431.62" y="399.5" >std::function..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (30 samples, 0.06%)</title><rect x="356.7" y="149" width="0.8" height="15.0" fill="rgb(222,59,39)" rx="2" ry="2" />
<text  x="359.74" y="159.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="678.7" y="485" width="0.6" height="15.0" fill="rgb(214,30,50)" rx="2" ry="2" />
<text  x="681.71" y="495.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (32 samples, 0.07%)</title><rect x="581.4" y="357" width="0.7" height="15.0" fill="rgb(217,214,40)" rx="2" ry="2" />
<text  x="584.35" y="367.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%)</title><rect x="283.7" y="389" width="0.2" height="15.0" fill="rgb(229,151,47)" rx="2" ry="2" />
<text  x="286.75" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (18 samples, 0.04%)</title><rect x="922.0" y="357" width="0.5" height="15.0" fill="rgb(248,166,41)" rx="2" ry="2" />
<text  x="925.03" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (73 samples, 0.15%)</title><rect x="907.8" y="341" width="1.8" height="15.0" fill="rgb(229,37,6)" rx="2" ry="2" />
<text  x="910.78" y="351.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="894.0" y="325" width="0.2" height="15.0" fill="rgb(252,217,15)" rx="2" ry="2" />
<text  x="897.03" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%)</title><rect x="138.6" y="261" width="0.1" height="15.0" fill="rgb(213,11,11)" rx="2" ry="2" />
<text  x="141.57" y="271.5" ></text>
</g>
<g >
<title>database::apply_in_memory (14 samples, 0.03%)</title><rect x="1139.6" y="293" width="0.3" height="15.0" fill="rgb(246,143,12)" rx="2" ry="2" />
<text  x="1142.60" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (91 samples, 0.19%)</title><rect x="138.7" y="261" width="2.3" height="15.0" fill="rgb(219,5,13)" rx="2" ry="2" />
<text  x="141.70" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (45 samples, 0.09%)</title><rect x="866.5" y="421" width="1.1" height="15.0" fill="rgb(220,162,52)" rx="2" ry="2" />
<text  x="869.50" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (68 samples, 0.14%)</title><rect x="366.8" y="197" width="1.7" height="15.0" fill="rgb(241,208,9)" rx="2" ry="2" />
<text  x="369.78" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (545 samples, 1.14%)</title><rect x="703.4" y="501" width="13.5" height="15.0" fill="rgb(238,83,25)" rx="2" ry="2" />
<text  x="706.44" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (116 samples, 0.24%)</title><rect x="945.0" y="405" width="2.9" height="15.0" fill="rgb(227,148,3)" rx="2" ry="2" />
<text  x="948.00" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%)</title><rect x="992.7" y="261" width="0.2" height="15.0" fill="rgb(242,5,27)" rx="2" ry="2" />
<text  x="995.67" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (32 samples, 0.07%)</title><rect x="662.2" y="485" width="0.8" height="15.0" fill="rgb(210,215,54)" rx="2" ry="2" />
<text  x="665.18" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.01%)</title><rect x="735.4" y="357" width="0.1" height="15.0" fill="rgb(252,87,16)" rx="2" ry="2" />
<text  x="738.37" y="367.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="21.0" y="277" width="0.1" height="15.0" fill="rgb(217,36,54)" rx="2" ry="2" />
<text  x="23.95" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (7 samples, 0.01%)</title><rect x="623.0" y="421" width="0.1" height="15.0" fill="rgb(221,105,25)" rx="2" ry="2" />
<text  x="625.96" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (8 samples, 0.02%)</title><rect x="26.8" y="517" width="0.2" height="15.0" fill="rgb(207,27,13)" rx="2" ry="2" />
<text  x="29.77" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (34 samples, 0.07%)</title><rect x="572.4" y="277" width="0.9" height="15.0" fill="rgb(205,96,18)" rx="2" ry="2" />
<text  x="575.43" y="287.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="20.1" y="357" width="0.1" height="15.0" fill="rgb(241,135,51)" rx="2" ry="2" />
<text  x="23.06" y="367.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (31 samples, 0.07%)</title><rect x="39.8" y="405" width="0.8" height="15.0" fill="rgb(217,220,28)" rx="2" ry="2" />
<text  x="42.83" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (12 samples, 0.03%)</title><rect x="623.6" y="389" width="0.3" height="15.0" fill="rgb(226,113,38)" rx="2" ry="2" />
<text  x="626.63" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.04%)</title><rect x="1153.4" y="421" width="0.4" height="15.0" fill="rgb(219,200,30)" rx="2" ry="2" />
<text  x="1156.43" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (76 samples, 0.16%)</title><rect x="796.9" y="181" width="1.9" height="15.0" fill="rgb(237,8,54)" rx="2" ry="2" />
<text  x="799.95" y="191.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (37 samples, 0.08%)</title><rect x="1080.7" y="309" width="0.9" height="15.0" fill="rgb(222,10,20)" rx="2" ry="2" />
<text  x="1083.73" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (93 samples, 0.20%)</title><rect x="804.5" y="149" width="2.3" height="15.0" fill="rgb(245,119,10)" rx="2" ry="2" />
<text  x="807.48" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="1123.4" y="405" width="0.2" height="15.0" fill="rgb(217,59,49)" rx="2" ry="2" />
<text  x="1126.45" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (30 samples, 0.06%)</title><rect x="675.8" y="437" width="0.7" height="15.0" fill="rgb(242,207,27)" rx="2" ry="2" />
<text  x="678.76" y="447.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (11 samples, 0.02%)</title><rect x="389.4" y="213" width="0.2" height="15.0" fill="rgb(225,58,7)" rx="2" ry="2" />
<text  x="392.35" y="223.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (103 samples, 0.22%)</title><rect x="916.0" y="373" width="2.5" height="15.0" fill="rgb(238,144,42)" rx="2" ry="2" />
<text  x="918.98" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (96 samples, 0.20%)</title><rect x="628.6" y="485" width="2.3" height="15.0" fill="rgb(215,105,13)" rx="2" ry="2" />
<text  x="631.56" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (491 samples, 1.03%)</title><rect x="678.3" y="501" width="12.1" height="15.0" fill="rgb(215,83,54)" rx="2" ry="2" />
<text  x="681.26" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1174.5" y="421" width="0.1" height="15.0" fill="rgb(243,105,30)" rx="2" ry="2" />
<text  x="1177.46" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (34 samples, 0.07%)</title><rect x="222.6" y="213" width="0.9" height="15.0" fill="rgb(228,206,8)" rx="2" ry="2" />
<text  x="225.64" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="574.1" y="293" width="0.1" height="15.0" fill="rgb(228,118,1)" rx="2" ry="2" />
<text  x="577.12" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="523.9" y="309" width="0.7" height="15.0" fill="rgb(221,84,25)" rx="2" ry="2" />
<text  x="526.89" y="319.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (23 samples, 0.05%)</title><rect x="436.6" y="341" width="0.5" height="15.0" fill="rgb(251,25,11)" rx="2" ry="2" />
<text  x="439.55" y="351.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (37 samples, 0.08%)</title><rect x="1140.1" y="405" width="0.9" height="15.0" fill="rgb(242,219,48)" rx="2" ry="2" />
<text  x="1143.12" y="415.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,026 samples, 14.75%)</title><rect x="106.8" y="373" width="174.0" height="15.0" fill="rgb(250,21,3)" rx="2" ry="2" />
<text  x="109.76" y="383.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="973.4" y="325" width="0.5" height="15.0" fill="rgb(219,103,8)" rx="2" ry="2" />
<text  x="976.39" y="335.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (160 samples, 0.34%)</title><rect x="66.1" y="405" width="4.0" height="15.0" fill="rgb(245,17,32)" rx="2" ry="2" />
<text  x="69.15" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1140.1" y="293" width="0.3" height="15.0" fill="rgb(222,29,28)" rx="2" ry="2" />
<text  x="1143.15" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="690.6" y="389" width="0.8" height="15.0" fill="rgb(214,16,44)" rx="2" ry="2" />
<text  x="693.60" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (13 samples, 0.03%)</title><rect x="353.5" y="165" width="0.3" height="15.0" fill="rgb(238,41,18)" rx="2" ry="2" />
<text  x="356.47" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (12 samples, 0.03%)</title><rect x="611.6" y="437" width="0.3" height="15.0" fill="rgb(247,69,18)" rx="2" ry="2" />
<text  x="614.61" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.03%)</title><rect x="90.9" y="421" width="0.3" height="15.0" fill="rgb(234,34,20)" rx="2" ry="2" />
<text  x="93.88" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (7 samples, 0.01%)</title><rect x="26.2" y="517" width="0.2" height="15.0" fill="rgb(254,40,26)" rx="2" ry="2" />
<text  x="29.20" y="527.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (14 samples, 0.03%)</title><rect x="19.1" y="261" width="0.4" height="15.0" fill="rgb(254,61,17)" rx="2" ry="2" />
<text  x="22.12" y="271.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (181 samples, 0.38%)</title><rect x="922.5" y="357" width="4.5" height="15.0" fill="rgb(245,74,11)" rx="2" ry="2" />
<text  x="925.47" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (21 samples, 0.04%)</title><rect x="1062.9" y="261" width="0.6" height="15.0" fill="rgb(244,35,17)" rx="2" ry="2" />
<text  x="1065.94" y="271.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (14 samples, 0.03%)</title><rect x="236.9" y="213" width="0.3" height="15.0" fill="rgb(239,202,28)" rx="2" ry="2" />
<text  x="239.89" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (919 samples, 1.93%)</title><rect x="911.7" y="405" width="22.8" height="15.0" fill="rgb(249,19,23)" rx="2" ry="2" />
<text  x="914.72" y="415.5" >c..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (32 samples, 0.07%)</title><rect x="164.6" y="133" width="0.8" height="15.0" fill="rgb(226,195,36)" rx="2" ry="2" />
<text  x="167.64" y="143.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%)</title><rect x="807.4" y="117" width="0.7" height="15.0" fill="rgb(211,112,41)" rx="2" ry="2" />
<text  x="810.40" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="1078.1" y="325" width="0.4" height="15.0" fill="rgb(249,144,43)" rx="2" ry="2" />
<text  x="1081.10" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%)</title><rect x="1052.1" y="293" width="0.1" height="15.0" fill="rgb(248,2,39)" rx="2" ry="2" />
<text  x="1055.09" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (24 samples, 0.05%)</title><rect x="867.7" y="437" width="0.6" height="15.0" fill="rgb(249,174,41)" rx="2" ry="2" />
<text  x="870.69" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (191 samples, 0.40%)</title><rect x="18.4" y="389" width="4.7" height="15.0" fill="rgb(230,186,8)" rx="2" ry="2" />
<text  x="21.35" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (78 samples, 0.16%)</title><rect x="446.0" y="261" width="2.0" height="15.0" fill="rgb(227,95,17)" rx="2" ry="2" />
<text  x="449.02" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (21 samples, 0.04%)</title><rect x="714.8" y="421" width="0.5" height="15.0" fill="rgb(237,82,52)" rx="2" ry="2" />
<text  x="717.81" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (65 samples, 0.14%)</title><rect x="291.9" y="261" width="1.6" height="15.0" fill="rgb(246,38,54)" rx="2" ry="2" />
<text  x="294.92" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,808 samples, 12.20%)</title><rect x="111.8" y="325" width="143.9" height="15.0" fill="rgb(234,26,48)" rx="2" ry="2" />
<text  x="114.84" y="335.5" >mutation_reader_me..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="405.9" y="213" width="0.2" height="15.0" fill="rgb(222,6,47)" rx="2" ry="2" />
<text  x="408.93" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.01%)</title><rect x="691.2" y="277" width="0.1" height="15.0" fill="rgb(248,217,41)" rx="2" ry="2" />
<text  x="694.17" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (27 samples, 0.06%)</title><rect x="1169.0" y="469" width="0.7" height="15.0" fill="rgb(236,166,0)" rx="2" ry="2" />
<text  x="1172.04" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="489.2" y="197" width="0.6" height="15.0" fill="rgb(213,53,39)" rx="2" ry="2" />
<text  x="492.21" y="207.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (15 samples, 0.03%)</title><rect x="1140.4" y="213" width="0.4" height="15.0" fill="rgb(223,116,20)" rx="2" ry="2" />
<text  x="1143.42" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="799.6" y="213" width="0.2" height="15.0" fill="rgb(242,73,3)" rx="2" ry="2" />
<text  x="802.65" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="619.1" y="405" width="0.2" height="15.0" fill="rgb(245,208,20)" rx="2" ry="2" />
<text  x="622.14" y="415.5" ></text>
</g>
<g >
<title>query::querier&lt; (6 samples, 0.01%)</title><rect x="59.7" y="453" width="0.1" height="15.0" fill="rgb(234,8,25)" rx="2" ry="2" />
<text  x="62.65" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (380 samples, 0.80%)</title><rect x="396.8" y="261" width="9.4" height="15.0" fill="rgb(217,13,5)" rx="2" ry="2" />
<text  x="399.78" y="271.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="230.5" y="197" width="0.1" height="15.0" fill="rgb(221,97,5)" rx="2" ry="2" />
<text  x="233.47" y="207.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (52 samples, 0.11%)</title><rect x="444.0" y="277" width="1.2" height="15.0" fill="rgb(232,12,0)" rx="2" ry="2" />
<text  x="446.96" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (20 samples, 0.04%)</title><rect x="106.1" y="373" width="0.5" height="15.0" fill="rgb(249,81,49)" rx="2" ry="2" />
<text  x="109.09" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (42 samples, 0.09%)</title><rect x="156.9" y="229" width="1.0" height="15.0" fill="rgb(253,134,45)" rx="2" ry="2" />
<text  x="159.88" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="873.1" y="325" width="0.2" height="15.0" fill="rgb(239,207,34)" rx="2" ry="2" />
<text  x="876.09" y="335.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="506.5" y="245" width="0.2" height="15.0" fill="rgb(253,203,16)" rx="2" ry="2" />
<text  x="509.48" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%)</title><rect x="1034.9" y="213" width="0.1" height="15.0" fill="rgb(238,45,1)" rx="2" ry="2" />
<text  x="1037.87" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (432 samples, 0.91%)</title><rect x="847.5" y="437" width="10.7" height="15.0" fill="rgb(225,211,13)" rx="2" ry="2" />
<text  x="850.52" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="639.1" y="469" width="0.4" height="15.0" fill="rgb(232,10,24)" rx="2" ry="2" />
<text  x="642.06" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (25 samples, 0.05%)</title><rect x="235.3" y="181" width="0.6" height="15.0" fill="rgb(240,110,46)" rx="2" ry="2" />
<text  x="238.28" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="418.5" y="357" width="0.2" height="15.0" fill="rgb(247,2,50)" rx="2" ry="2" />
<text  x="421.54" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="954.5" y="325" width="0.1" height="15.0" fill="rgb(216,205,10)" rx="2" ry="2" />
<text  x="957.46" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%)</title><rect x="766.1" y="293" width="0.2" height="15.0" fill="rgb(228,110,5)" rx="2" ry="2" />
<text  x="769.10" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1106.9" y="373" width="0.1" height="15.0" fill="rgb(230,20,18)" rx="2" ry="2" />
<text  x="1109.92" y="383.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (70 samples, 0.15%)</title><rect x="546.5" y="373" width="1.7" height="15.0" fill="rgb(222,204,30)" rx="2" ry="2" />
<text  x="549.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="553.5" y="389" width="0.7" height="15.0" fill="rgb(234,35,2)" rx="2" ry="2" />
<text  x="556.50" y="399.5" ></text>
</g>
<g >
<title>operator delete (81 samples, 0.17%)</title><rect x="407.1" y="245" width="2.0" height="15.0" fill="rgb(213,45,40)" rx="2" ry="2" />
<text  x="410.12" y="255.5" ></text>
</g>
<g >
<title>row_cache::make_reader (471 samples, 0.99%)</title><rect x="526.6" y="341" width="11.7" height="15.0" fill="rgb(209,136,39)" rx="2" ry="2" />
<text  x="529.62" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="603.4" y="405" width="0.2" height="15.0" fill="rgb(207,145,17)" rx="2" ry="2" />
<text  x="606.38" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (28 samples, 0.06%)</title><rect x="578.3" y="357" width="0.7" height="15.0" fill="rgb(220,207,10)" rx="2" ry="2" />
<text  x="581.33" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (89 samples, 0.19%)</title><rect x="733.1" y="309" width="2.2" height="15.0" fill="rgb(249,56,2)" rx="2" ry="2" />
<text  x="736.14" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (108 samples, 0.23%)</title><rect x="1036.5" y="229" width="2.6" height="15.0" fill="rgb(247,152,20)" rx="2" ry="2" />
<text  x="1039.45" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (88 samples, 0.18%)</title><rect x="1132.1" y="421" width="2.2" height="15.0" fill="rgb(246,3,20)" rx="2" ry="2" />
<text  x="1135.12" y="431.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (19 samples, 0.04%)</title><rect x="1098.1" y="261" width="0.5" height="15.0" fill="rgb(254,53,11)" rx="2" ry="2" />
<text  x="1101.10" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (7 samples, 0.01%)</title><rect x="589.7" y="405" width="0.2" height="15.0" fill="rgb(208,103,0)" rx="2" ry="2" />
<text  x="592.73" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%)</title><rect x="226.8" y="245" width="0.2" height="15.0" fill="rgb(239,81,47)" rx="2" ry="2" />
<text  x="229.83" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (25 samples, 0.05%)</title><rect x="805.3" y="117" width="0.6" height="15.0" fill="rgb(224,36,13)" rx="2" ry="2" />
<text  x="808.32" y="127.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.01%)</title><rect x="185.1" y="69" width="0.2" height="15.0" fill="rgb(226,19,33)" rx="2" ry="2" />
<text  x="188.13" y="79.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (144 samples, 0.30%)</title><rect x="806.9" y="165" width="3.6" height="15.0" fill="rgb(254,31,54)" rx="2" ry="2" />
<text  x="809.93" y="175.5" ></text>
</g>
<g >
<title>main (46,533 samples, 97.71%)</title><rect x="25.1" y="613" width="1153.0" height="15.0" fill="rgb(226,104,9)" rx="2" ry="2" />
<text  x="28.09" y="623.5" >main</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (54 samples, 0.11%)</title><rect x="521.6" y="293" width="1.4" height="15.0" fill="rgb(243,41,17)" rx="2" ry="2" />
<text  x="524.64" y="303.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.01%)</title><rect x="70.1" y="405" width="0.2" height="15.0" fill="rgb(231,114,50)" rx="2" ry="2" />
<text  x="73.11" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (48 samples, 0.10%)</title><rect x="243.5" y="213" width="1.2" height="15.0" fill="rgb(235,187,48)" rx="2" ry="2" />
<text  x="246.53" y="223.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (46 samples, 0.10%)</title><rect x="681.0" y="453" width="1.1" height="15.0" fill="rgb(248,72,50)" rx="2" ry="2" />
<text  x="683.99" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%)</title><rect x="634.4" y="485" width="0.2" height="15.0" fill="rgb(234,10,24)" rx="2" ry="2" />
<text  x="637.38" y="495.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (173 samples, 0.36%)</title><rect x="455.1" y="293" width="4.3" height="15.0" fill="rgb(238,89,18)" rx="2" ry="2" />
<text  x="458.14" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (9 samples, 0.02%)</title><rect x="1149.6" y="469" width="0.2" height="15.0" fill="rgb(227,178,0)" rx="2" ry="2" />
<text  x="1152.61" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (6 samples, 0.01%)</title><rect x="849.8" y="373" width="0.2" height="15.0" fill="rgb(227,134,28)" rx="2" ry="2" />
<text  x="852.85" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (129 samples, 0.27%)</title><rect x="149.5" y="229" width="3.2" height="15.0" fill="rgb(209,114,24)" rx="2" ry="2" />
<text  x="152.55" y="239.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (128 samples, 0.27%)</title><rect x="860.1" y="421" width="3.2" height="15.0" fill="rgb(208,46,17)" rx="2" ry="2" />
<text  x="863.11" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (5 samples, 0.01%)</title><rect x="817.9" y="309" width="0.1" height="15.0" fill="rgb(245,71,27)" rx="2" ry="2" />
<text  x="820.91" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="593.7" y="389" width="0.2" height="15.0" fill="rgb(218,156,14)" rx="2" ry="2" />
<text  x="596.74" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (22 samples, 0.05%)</title><rect x="542.5" y="405" width="0.5" height="15.0" fill="rgb(206,127,37)" rx="2" ry="2" />
<text  x="545.48" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (135 samples, 0.28%)</title><rect x="1073.8" y="309" width="3.4" height="15.0" fill="rgb(243,18,24)" rx="2" ry="2" />
<text  x="1076.84" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="457.4" y="261" width="0.5" height="15.0" fill="rgb(206,141,42)" rx="2" ry="2" />
<text  x="460.39" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="1105.2" y="341" width="0.2" height="15.0" fill="rgb(230,224,11)" rx="2" ry="2" />
<text  x="1108.19" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (21 samples, 0.04%)</title><rect x="653.6" y="421" width="0.5" height="15.0" fill="rgb(229,79,36)" rx="2" ry="2" />
<text  x="656.61" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (17 samples, 0.04%)</title><rect x="1122.4" y="389" width="0.4" height="15.0" fill="rgb(227,92,47)" rx="2" ry="2" />
<text  x="1125.41" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="1050.8" y="277" width="0.4" height="15.0" fill="rgb(205,199,15)" rx="2" ry="2" />
<text  x="1053.82" y="287.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (53 samples, 0.11%)</title><rect x="1097.5" y="309" width="1.3" height="15.0" fill="rgb(230,142,26)" rx="2" ry="2" />
<text  x="1100.48" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="670.2" y="469" width="0.3" height="15.0" fill="rgb(234,80,17)" rx="2" ry="2" />
<text  x="673.21" y="479.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (242 samples, 0.51%)</title><rect x="200.0" y="165" width="6.0" height="15.0" fill="rgb(233,37,52)" rx="2" ry="2" />
<text  x="203.02" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="163.7" y="133" width="0.1" height="15.0" fill="rgb(250,59,51)" rx="2" ry="2" />
<text  x="166.67" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="937.9" y="389" width="0.2" height="15.0" fill="rgb(206,157,40)" rx="2" ry="2" />
<text  x="940.93" y="399.5" ></text>
</g>
<g >
<title>[unknown] (12 samples, 0.03%)</title><rect x="10.0" y="613" width="0.3" height="15.0" fill="rgb(241,156,47)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>__dynamic_cast (11 samples, 0.02%)</title><rect x="648.7" y="469" width="0.3" height="15.0" fill="rgb(221,171,13)" rx="2" ry="2" />
<text  x="651.73" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (39 samples, 0.08%)</title><rect x="70.8" y="373" width="1.0" height="15.0" fill="rgb(254,81,24)" rx="2" ry="2" />
<text  x="73.83" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (6 samples, 0.01%)</title><rect x="1147.5" y="469" width="0.1" height="15.0" fill="rgb(221,221,8)" rx="2" ry="2" />
<text  x="1150.48" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (102 samples, 0.21%)</title><rect x="732.8" y="341" width="2.6" height="15.0" fill="rgb(230,119,17)" rx="2" ry="2" />
<text  x="735.85" y="351.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (29 samples, 0.06%)</title><rect x="184.3" y="53" width="0.8" height="15.0" fill="rgb(217,128,50)" rx="2" ry="2" />
<text  x="187.34" y="63.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="1003.8" y="293" width="0.2" height="15.0" fill="rgb(209,181,47)" rx="2" ry="2" />
<text  x="1006.77" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (18 samples, 0.04%)</title><rect x="953.0" y="405" width="0.4" height="15.0" fill="rgb(245,68,20)" rx="2" ry="2" />
<text  x="955.97" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (15 samples, 0.03%)</title><rect x="696.4" y="453" width="0.4" height="15.0" fill="rgb(225,149,38)" rx="2" ry="2" />
<text  x="699.45" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="625.6" y="373" width="0.3" height="15.0" fill="rgb(214,178,53)" rx="2" ry="2" />
<text  x="628.56" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="214.1" y="133" width="0.2" height="15.0" fill="rgb(208,64,13)" rx="2" ry="2" />
<text  x="217.10" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="645.3" y="485" width="0.1" height="15.0" fill="rgb(211,176,29)" rx="2" ry="2" />
<text  x="648.28" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (45 samples, 0.09%)</title><rect x="1097.7" y="293" width="1.1" height="15.0" fill="rgb(218,159,35)" rx="2" ry="2" />
<text  x="1100.65" y="303.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (39 samples, 0.08%)</title><rect x="733.9" y="293" width="1.0" height="15.0" fill="rgb(247,0,7)" rx="2" ry="2" />
<text  x="736.89" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="485.3" y="181" width="0.1" height="15.0" fill="rgb(247,192,5)" rx="2" ry="2" />
<text  x="488.27" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (27 samples, 0.06%)</title><rect x="425.7" y="421" width="0.7" height="15.0" fill="rgb(239,112,49)" rx="2" ry="2" />
<text  x="428.72" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (670 samples, 1.41%)</title><rect x="794.6" y="245" width="16.6" height="15.0" fill="rgb(223,73,24)" rx="2" ry="2" />
<text  x="797.57" y="255.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (43 samples, 0.09%)</title><rect x="254.1" y="309" width="1.1" height="15.0" fill="rgb(209,31,51)" rx="2" ry="2" />
<text  x="257.14" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="856.5" y="341" width="0.2" height="15.0" fill="rgb(212,133,49)" rx="2" ry="2" />
<text  x="859.54" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (37 samples, 0.08%)</title><rect x="314.7" y="181" width="0.9" height="15.0" fill="rgb(225,193,35)" rx="2" ry="2" />
<text  x="317.72" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (18 samples, 0.04%)</title><rect x="132.2" y="245" width="0.4" height="15.0" fill="rgb(251,138,7)" rx="2" ry="2" />
<text  x="135.16" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%)</title><rect x="116.6" y="293" width="0.1" height="15.0" fill="rgb(243,15,36)" rx="2" ry="2" />
<text  x="119.57" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (9 samples, 0.02%)</title><rect x="1059.9" y="309" width="0.2" height="15.0" fill="rgb(243,80,13)" rx="2" ry="2" />
<text  x="1062.92" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (54 samples, 0.11%)</title><rect x="446.5" y="229" width="1.4" height="15.0" fill="rgb(216,37,35)" rx="2" ry="2" />
<text  x="449.54" y="239.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.02%)</title><rect x="48.1" y="501" width="0.3" height="15.0" fill="rgb(249,39,38)" rx="2" ry="2" />
<text  x="51.11" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="852.6" y="421" width="0.1" height="15.0" fill="rgb(214,221,21)" rx="2" ry="2" />
<text  x="855.60" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (59 samples, 0.12%)</title><rect x="231.1" y="181" width="1.4" height="15.0" fill="rgb(224,205,6)" rx="2" ry="2" />
<text  x="234.07" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (36 samples, 0.08%)</title><rect x="690.6" y="453" width="0.9" height="15.0" fill="rgb(244,134,18)" rx="2" ry="2" />
<text  x="693.60" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="1057.7" y="309" width="0.1" height="15.0" fill="rgb(252,164,36)" rx="2" ry="2" />
<text  x="1060.66" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (13 samples, 0.03%)</title><rect x="844.1" y="373" width="0.3" height="15.0" fill="rgb(248,9,3)" rx="2" ry="2" />
<text  x="847.10" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (14 samples, 0.03%)</title><rect x="62.8" y="437" width="0.3" height="15.0" fill="rgb(226,208,1)" rx="2" ry="2" />
<text  x="65.80" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="1019.9" y="197" width="0.3" height="15.0" fill="rgb(236,89,3)" rx="2" ry="2" />
<text  x="1022.95" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1149.4" y="485" width="0.1" height="15.0" fill="rgb(231,156,28)" rx="2" ry="2" />
<text  x="1152.41" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (137 samples, 0.29%)</title><rect x="273.8" y="293" width="3.4" height="15.0" fill="rgb(240,18,49)" rx="2" ry="2" />
<text  x="276.79" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (29 samples, 0.06%)</title><rect x="326.4" y="165" width="0.8" height="15.0" fill="rgb(242,195,33)" rx="2" ry="2" />
<text  x="329.44" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (92 samples, 0.19%)</title><rect x="456.2" y="277" width="2.3" height="15.0" fill="rgb(212,26,2)" rx="2" ry="2" />
<text  x="459.20" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (23 samples, 0.05%)</title><rect x="535.8" y="245" width="0.6" height="15.0" fill="rgb(221,10,10)" rx="2" ry="2" />
<text  x="538.81" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (55 samples, 0.12%)</title><rect x="1176.6" y="517" width="1.4" height="15.0" fill="rgb(248,34,19)" rx="2" ry="2" />
<text  x="1179.64" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (38 samples, 0.08%)</title><rect x="23.2" y="469" width="1.0" height="15.0" fill="rgb(212,223,12)" rx="2" ry="2" />
<text  x="26.23" y="479.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%)</title><rect x="1028.2" y="181" width="0.4" height="15.0" fill="rgb(248,139,28)" rx="2" ry="2" />
<text  x="1031.15" y="191.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (23 samples, 0.05%)</title><rect x="1033.8" y="197" width="0.6" height="15.0" fill="rgb(234,210,26)" rx="2" ry="2" />
<text  x="1036.85" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (37 samples, 0.08%)</title><rect x="1019.3" y="213" width="0.9" height="15.0" fill="rgb(254,187,20)" rx="2" ry="2" />
<text  x="1022.30" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (23 samples, 0.05%)</title><rect x="390.1" y="213" width="0.6" height="15.0" fill="rgb(243,218,14)" rx="2" ry="2" />
<text  x="393.12" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="719.1" y="501" width="0.1" height="15.0" fill="rgb(244,173,36)" rx="2" ry="2" />
<text  x="722.12" y="511.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="656.1" y="453" width="0.5" height="15.0" fill="rgb(250,224,27)" rx="2" ry="2" />
<text  x="659.08" y="463.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%)</title><rect x="92.5" y="389" width="1.0" height="15.0" fill="rgb(211,110,16)" rx="2" ry="2" />
<text  x="95.54" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (8 samples, 0.02%)</title><rect x="410.9" y="277" width="0.2" height="15.0" fill="rgb(205,122,22)" rx="2" ry="2" />
<text  x="413.88" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="21.0" y="293" width="0.1" height="15.0" fill="rgb(239,87,2)" rx="2" ry="2" />
<text  x="23.95" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (398 samples, 0.84%)</title><rect x="143.6" y="245" width="9.8" height="15.0" fill="rgb(238,95,47)" rx="2" ry="2" />
<text  x="146.55" y="255.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (8 samples, 0.02%)</title><rect x="730.3" y="405" width="0.2" height="15.0" fill="rgb(240,34,12)" rx="2" ry="2" />
<text  x="733.34" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (11 samples, 0.02%)</title><rect x="396.3" y="213" width="0.3" height="15.0" fill="rgb(240,226,28)" rx="2" ry="2" />
<text  x="399.34" y="223.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (126 samples, 0.26%)</title><rect x="382.9" y="149" width="3.1" height="15.0" fill="rgb(215,149,33)" rx="2" ry="2" />
<text  x="385.86" y="159.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (988 samples, 2.07%)</title><rect x="495.7" y="325" width="24.5" height="15.0" fill="rgb(221,68,35)" rx="2" ry="2" />
<text  x="498.72" y="335.5" >m..</text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%)</title><rect x="831.7" y="325" width="0.2" height="15.0" fill="rgb(210,10,38)" rx="2" ry="2" />
<text  x="834.69" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (14 samples, 0.03%)</title><rect x="318.1" y="197" width="0.3" height="15.0" fill="rgb(248,43,34)" rx="2" ry="2" />
<text  x="321.06" y="207.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%)</title><rect x="53.9" y="469" width="0.1" height="15.0" fill="rgb(253,228,23)" rx="2" ry="2" />
<text  x="56.88" y="479.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="218.0" y="181" width="0.2" height="15.0" fill="rgb(205,205,12)" rx="2" ry="2" />
<text  x="221.04" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="581.9" y="341" width="0.2" height="15.0" fill="rgb(247,110,6)" rx="2" ry="2" />
<text  x="584.90" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (61 samples, 0.13%)</title><rect x="61.3" y="437" width="1.5" height="15.0" fill="rgb(207,60,6)" rx="2" ry="2" />
<text  x="64.29" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (5 samples, 0.01%)</title><rect x="947.9" y="405" width="0.1" height="15.0" fill="rgb(231,38,24)" rx="2" ry="2" />
<text  x="950.87" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,750 samples, 12.07%)</title><rect x="282.1" y="405" width="142.5" height="15.0" fill="rgb(232,23,27)" rx="2" ry="2" />
<text  x="285.09" y="415.5" >seastar::future&lt;mu..</text>
</g>
<g >
<title>range_tombstone_list::slice (9 samples, 0.02%)</title><rect x="240.0" y="229" width="0.2" height="15.0" fill="rgb(241,183,4)" rx="2" ry="2" />
<text  x="242.99" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (24 samples, 0.05%)</title><rect x="423.8" y="389" width="0.6" height="15.0" fill="rgb(211,55,12)" rx="2" ry="2" />
<text  x="426.82" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="444.9" y="261" width="0.3" height="15.0" fill="rgb(242,20,36)" rx="2" ry="2" />
<text  x="447.85" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="280.4" y="357" width="0.4" height="15.0" fill="rgb(207,90,23)" rx="2" ry="2" />
<text  x="283.35" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (103 samples, 0.22%)</title><rect x="291.2" y="293" width="2.6" height="15.0" fill="rgb(246,140,41)" rx="2" ry="2" />
<text  x="294.20" y="303.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="1036.7" y="213" width="1.4" height="15.0" fill="rgb(238,64,8)" rx="2" ry="2" />
<text  x="1039.75" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5 samples, 0.01%)</title><rect x="258.7" y="341" width="0.1" height="15.0" fill="rgb(254,98,28)" rx="2" ry="2" />
<text  x="261.72" y="351.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="626.3" y="389" width="0.3" height="15.0" fill="rgb(237,229,0)" rx="2" ry="2" />
<text  x="629.28" y="399.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="24.3" y="341" width="0.1" height="15.0" fill="rgb(208,222,12)" rx="2" ry="2" />
<text  x="27.27" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (79 samples, 0.17%)</title><rect x="804.8" y="133" width="2.0" height="15.0" fill="rgb(245,198,40)" rx="2" ry="2" />
<text  x="807.80" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="555.2" y="405" width="0.3" height="15.0" fill="rgb(250,113,21)" rx="2" ry="2" />
<text  x="558.21" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (120 samples, 0.25%)</title><rect x="37.7" y="453" width="3.0" height="15.0" fill="rgb(224,77,8)" rx="2" ry="2" />
<text  x="40.68" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="214.3" y="165" width="0.1" height="15.0" fill="rgb(229,147,3)" rx="2" ry="2" />
<text  x="217.27" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="280.1" y="357" width="0.2" height="15.0" fill="rgb(223,36,45)" rx="2" ry="2" />
<text  x="283.13" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (8 samples, 0.02%)</title><rect x="514.1" y="165" width="0.2" height="15.0" fill="rgb(235,49,51)" rx="2" ry="2" />
<text  x="517.11" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="423.1" y="373" width="0.1" height="15.0" fill="rgb(215,99,49)" rx="2" ry="2" />
<text  x="426.07" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,293 samples, 4.81%)</title><rect x="996.1" y="325" width="56.8" height="15.0" fill="rgb(208,193,37)" rx="2" ry="2" />
<text  x="999.06" y="335.5" >servic..</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (7 samples, 0.01%)</title><rect x="430.6" y="357" width="0.2" height="15.0" fill="rgb(228,62,21)" rx="2" ry="2" />
<text  x="433.61" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (14 samples, 0.03%)</title><rect x="1032.2" y="133" width="0.4" height="15.0" fill="rgb(253,20,34)" rx="2" ry="2" />
<text  x="1035.24" y="143.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (91 samples, 0.19%)</title><rect x="146.7" y="213" width="2.2" height="15.0" fill="rgb(239,204,19)" rx="2" ry="2" />
<text  x="149.68" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (7 samples, 0.01%)</title><rect x="838.7" y="421" width="0.1" height="15.0" fill="rgb(229,22,33)" rx="2" ry="2" />
<text  x="841.67" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (14 samples, 0.03%)</title><rect x="712.7" y="437" width="0.4" height="15.0" fill="rgb(209,151,50)" rx="2" ry="2" />
<text  x="715.73" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (25 samples, 0.05%)</title><rect x="130.1" y="229" width="0.6" height="15.0" fill="rgb(213,8,43)" rx="2" ry="2" />
<text  x="133.12" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (18 samples, 0.04%)</title><rect x="878.3" y="453" width="0.5" height="15.0" fill="rgb(227,102,40)" rx="2" ry="2" />
<text  x="881.34" y="463.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (8 samples, 0.02%)</title><rect x="758.6" y="357" width="0.2" height="15.0" fill="rgb(231,12,32)" rx="2" ry="2" />
<text  x="761.59" y="367.5" ></text>
</g>
<g >
<title>db::block_for (12 samples, 0.03%)</title><rect x="1067.7" y="325" width="0.3" height="15.0" fill="rgb(236,127,8)" rx="2" ry="2" />
<text  x="1070.72" y="335.5" ></text>
</g>
<g >
<title>__tls_init (17 samples, 0.04%)</title><rect x="495.0" y="293" width="0.4" height="15.0" fill="rgb(231,144,11)" rx="2" ry="2" />
<text  x="498.03" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="575.1" y="309" width="0.2" height="15.0" fill="rgb(222,97,44)" rx="2" ry="2" />
<text  x="578.09" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="36.6" y="453" width="0.3" height="15.0" fill="rgb(240,57,46)" rx="2" ry="2" />
<text  x="39.64" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="1104.9" y="357" width="0.5" height="15.0" fill="rgb(226,96,36)" rx="2" ry="2" />
<text  x="1107.89" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="1131.4" y="373" width="0.2" height="15.0" fill="rgb(238,217,47)" rx="2" ry="2" />
<text  x="1134.42" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.02%)</title><rect x="24.2" y="485" width="0.2" height="15.0" fill="rgb(216,3,28)" rx="2" ry="2" />
<text  x="27.22" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%)</title><rect x="848.4" y="389" width="2.4" height="15.0" fill="rgb(210,178,46)" rx="2" ry="2" />
<text  x="851.44" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1139.4" y="453" width="0.7" height="15.0" fill="rgb(231,153,33)" rx="2" ry="2" />
<text  x="1142.43" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="966.2" y="373" width="0.2" height="15.0" fill="rgb(252,211,7)" rx="2" ry="2" />
<text  x="969.21" y="383.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="45.7" y="485" width="0.6" height="15.0" fill="rgb(225,121,0)" rx="2" ry="2" />
<text  x="48.73" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (19 samples, 0.04%)</title><rect x="1117.9" y="373" width="0.5" height="15.0" fill="rgb(211,150,11)" rx="2" ry="2" />
<text  x="1120.90" y="383.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (288 samples, 0.60%)</title><rect x="17.5" y="597" width="7.1" height="15.0" fill="rgb(237,186,53)" rx="2" ry="2" />
<text  x="20.46" y="607.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,643 samples, 11.85%)</title><rect x="283.9" y="389" width="139.8" height="15.0" fill="rgb(234,73,17)" rx="2" ry="2" />
<text  x="286.90" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,541 samples, 13.73%)</title><rect x="949.0" y="421" width="162.1" height="15.0" fill="rgb(216,114,52)" rx="2" ry="2" />
<text  x="952.01" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="673.9" y="469" width="0.3" height="15.0" fill="rgb(250,114,29)" rx="2" ry="2" />
<text  x="676.95" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (41 samples, 0.09%)</title><rect x="21.2" y="325" width="1.0" height="15.0" fill="rgb(232,56,28)" rx="2" ry="2" />
<text  x="24.17" y="335.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="495.4" y="325" width="0.2" height="15.0" fill="rgb(209,202,46)" rx="2" ry="2" />
<text  x="498.45" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (33 samples, 0.07%)</title><rect x="347.7" y="149" width="0.8" height="15.0" fill="rgb(214,37,38)" rx="2" ry="2" />
<text  x="350.67" y="159.5" ></text>
</g>
<g >
<title>row::compact_and_expire (6 samples, 0.01%)</title><rect x="691.1" y="293" width="0.2" height="15.0" fill="rgb(232,207,51)" rx="2" ry="2" />
<text  x="694.15" y="303.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="469" width="0.9" height="15.0" fill="rgb(248,183,53)" rx="2" ry="2" />
<text  x="1143.12" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,348 samples, 4.93%)</title><rect x="158.0" y="229" width="58.2" height="15.0" fill="rgb(228,92,31)" rx="2" ry="2" />
<text  x="161.00" y="239.5" >partit..</text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.02%)</title><rect x="498.7" y="309" width="0.3" height="15.0" fill="rgb(213,51,41)" rx="2" ry="2" />
<text  x="501.74" y="319.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="667.5" y="421" width="0.5" height="15.0" fill="rgb(205,188,49)" rx="2" ry="2" />
<text  x="670.53" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.01%)</title><rect x="20.2" y="357" width="0.2" height="15.0" fill="rgb(219,183,34)" rx="2" ry="2" />
<text  x="23.23" y="367.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%)</title><rect x="541.3" y="405" width="1.2" height="15.0" fill="rgb(233,78,15)" rx="2" ry="2" />
<text  x="544.34" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (10 samples, 0.02%)</title><rect x="454.4" y="309" width="0.3" height="15.0" fill="rgb(237,183,11)" rx="2" ry="2" />
<text  x="457.44" y="319.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,280 samples, 2.69%)</title><rect x="332.3" y="181" width="31.8" height="15.0" fill="rgb(246,35,10)" rx="2" ry="2" />
<text  x="335.34" y="191.5" >wr..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="547.9" y="341" width="0.2" height="15.0" fill="rgb(239,12,19)" rx="2" ry="2" />
<text  x="550.90" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (7 samples, 0.01%)</title><rect x="948.2" y="405" width="0.2" height="15.0" fill="rgb(216,14,23)" rx="2" ry="2" />
<text  x="951.19" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (13 samples, 0.03%)</title><rect x="867.9" y="421" width="0.3" height="15.0" fill="rgb(206,53,0)" rx="2" ry="2" />
<text  x="870.91" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (14 samples, 0.03%)</title><rect x="20.4" y="341" width="0.4" height="15.0" fill="rgb(215,116,19)" rx="2" ry="2" />
<text  x="23.41" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (29 samples, 0.06%)</title><rect x="1058.8" y="293" width="0.7" height="15.0" fill="rgb(213,32,12)" rx="2" ry="2" />
<text  x="1061.83" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (479 samples, 1.01%)</title><rect x="704.4" y="485" width="11.9" height="15.0" fill="rgb(211,130,6)" rx="2" ry="2" />
<text  x="707.43" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (438 samples, 0.92%)</title><rect x="305.9" y="213" width="10.9" height="15.0" fill="rgb(248,67,34)" rx="2" ry="2" />
<text  x="308.90" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="747.6" y="357" width="0.1" height="15.0" fill="rgb(222,114,12)" rx="2" ry="2" />
<text  x="750.59" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="1050.4" y="197" width="0.4" height="15.0" fill="rgb(246,214,36)" rx="2" ry="2" />
<text  x="1053.40" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="624.3" y="437" width="0.3" height="15.0" fill="rgb(225,163,32)" rx="2" ry="2" />
<text  x="627.34" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="62.5" y="405" width="0.1" height="15.0" fill="rgb(234,96,18)" rx="2" ry="2" />
<text  x="65.45" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="555.6" y="421" width="0.2" height="15.0" fill="rgb(238,33,46)" rx="2" ry="2" />
<text  x="558.64" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (410 samples, 0.86%)</title><rect x="668.1" y="501" width="10.2" height="15.0" fill="rgb(247,43,54)" rx="2" ry="2" />
<text  x="671.10" y="511.5" ></text>
</g>
<g >
<title>auth::resource::parent (103 samples, 0.22%)</title><rect x="784.3" y="325" width="2.5" height="15.0" fill="rgb(232,162,52)" rx="2" ry="2" />
<text  x="787.26" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="59.2" y="437" width="0.2" height="15.0" fill="rgb(231,35,44)" rx="2" ry="2" />
<text  x="62.23" y="447.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%)</title><rect x="517.2" y="229" width="0.2" height="15.0" fill="rgb(205,13,44)" rx="2" ry="2" />
<text  x="520.20" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (66 samples, 0.14%)</title><rect x="827.1" y="373" width="1.6" height="15.0" fill="rgb(210,180,40)" rx="2" ry="2" />
<text  x="830.05" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (38 samples, 0.08%)</title><rect x="946.7" y="389" width="0.9" height="15.0" fill="rgb(225,204,28)" rx="2" ry="2" />
<text  x="949.66" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (21 samples, 0.04%)</title><rect x="1175.5" y="453" width="0.6" height="15.0" fill="rgb(237,8,51)" rx="2" ry="2" />
<text  x="1178.53" y="463.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (727 samples, 1.53%)</title><rect x="171.6" y="117" width="18.0" height="15.0" fill="rgb(212,8,14)" rx="2" ry="2" />
<text  x="174.55" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="793.7" y="213" width="0.1" height="15.0" fill="rgb(214,122,32)" rx="2" ry="2" />
<text  x="796.65" y="223.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.01%)</title><rect x="17.7" y="501" width="0.2" height="15.0" fill="rgb(232,109,28)" rx="2" ry="2" />
<text  x="20.68" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="1123.6" y="405" width="0.4" height="15.0" fill="rgb(217,91,50)" rx="2" ry="2" />
<text  x="1126.62" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (96 samples, 0.20%)</title><rect x="242.5" y="229" width="2.4" height="15.0" fill="rgb(235,177,15)" rx="2" ry="2" />
<text  x="245.54" y="239.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (23 samples, 0.05%)</title><rect x="468.7" y="277" width="0.6" height="15.0" fill="rgb(231,151,19)" rx="2" ry="2" />
<text  x="471.74" y="287.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (9 samples, 0.02%)</title><rect x="224.3" y="213" width="0.2" height="15.0" fill="rgb(209,137,26)" rx="2" ry="2" />
<text  x="227.25" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (59 samples, 0.12%)</title><rect x="219.2" y="165" width="1.5" height="15.0" fill="rgb(229,84,33)" rx="2" ry="2" />
<text  x="222.25" y="175.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,579 samples, 39.01%)</title><rect x="95.8" y="437" width="460.4" height="15.0" fill="rgb(246,114,32)" rx="2" ry="2" />
<text  x="98.83" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,251 samples, 13.13%)</title><rect x="108.5" y="357" width="154.9" height="15.0" fill="rgb(205,170,42)" rx="2" ry="2" />
<text  x="111.54" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>cql3::expr::evaluate (480 samples, 1.01%)</title><rect x="893.6" y="357" width="11.9" height="15.0" fill="rgb(232,120,4)" rx="2" ry="2" />
<text  x="896.56" y="367.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_3b4dc39eb84df2f30b1642770599338655846644] (6 samples, 0.01%)</title><rect x="995.2" y="325" width="0.1" height="15.0" fill="rgb(234,216,10)" rx="2" ry="2" />
<text  x="998.20" y="335.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,403 samples, 9.25%)</title><rect x="136.9" y="293" width="109.1" height="15.0" fill="rgb(251,5,10)" rx="2" ry="2" />
<text  x="139.86" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.01%)</title><rect x="392.6" y="245" width="0.2" height="15.0" fill="rgb(237,160,36)" rx="2" ry="2" />
<text  x="395.62" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (7 samples, 0.01%)</title><rect x="452.9" y="277" width="0.2" height="15.0" fill="rgb(218,162,29)" rx="2" ry="2" />
<text  x="455.91" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (88 samples, 0.18%)</title><rect x="941.0" y="389" width="2.2" height="15.0" fill="rgb(209,192,17)" rx="2" ry="2" />
<text  x="943.98" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (13 samples, 0.03%)</title><rect x="857.5" y="325" width="0.3" height="15.0" fill="rgb(247,107,0)" rx="2" ry="2" />
<text  x="860.50" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.02%)</title><rect x="18.4" y="309" width="0.2" height="15.0" fill="rgb(216,218,45)" rx="2" ry="2" />
<text  x="21.37" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (279 samples, 0.59%)</title><rect x="17.7" y="565" width="6.9" height="15.0" fill="rgb(232,216,2)" rx="2" ry="2" />
<text  x="20.68" y="575.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (17 samples, 0.04%)</title><rect x="655.3" y="469" width="0.5" height="15.0" fill="rgb(249,120,19)" rx="2" ry="2" />
<text  x="658.34" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="604.9" y="357" width="0.5" height="15.0" fill="rgb(254,189,34)" rx="2" ry="2" />
<text  x="607.94" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (6 samples, 0.01%)</title><rect x="313.2" y="181" width="0.2" height="15.0" fill="rgb(219,226,26)" rx="2" ry="2" />
<text  x="316.23" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.02%)</title><rect x="810.0" y="69" width="0.3" height="15.0" fill="rgb(247,111,44)" rx="2" ry="2" />
<text  x="813.03" y="79.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (124 samples, 0.26%)</title><rect x="982.9" y="325" width="3.1" height="15.0" fill="rgb(216,75,4)" rx="2" ry="2" />
<text  x="985.93" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (17 samples, 0.04%)</title><rect x="23.4" y="405" width="0.5" height="15.0" fill="rgb(234,65,25)" rx="2" ry="2" />
<text  x="26.43" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (128 samples, 0.27%)</title><rect x="1118.5" y="373" width="3.2" height="15.0" fill="rgb(218,162,5)" rx="2" ry="2" />
<text  x="1121.49" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="900.0" y="293" width="0.3" height="15.0" fill="rgb(208,123,0)" rx="2" ry="2" />
<text  x="903.02" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="460.2" y="309" width="0.3" height="15.0" fill="rgb(239,154,26)" rx="2" ry="2" />
<text  x="463.24" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%)</title><rect x="833.2" y="277" width="0.5" height="15.0" fill="rgb(230,202,54)" rx="2" ry="2" />
<text  x="836.22" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="490.0" y="213" width="0.2" height="15.0" fill="rgb(205,55,14)" rx="2" ry="2" />
<text  x="493.00" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="927.3" y="389" width="0.2" height="15.0" fill="rgb(210,106,33)" rx="2" ry="2" />
<text  x="930.25" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (163 samples, 0.34%)</title><rect x="831.4" y="341" width="4.0" height="15.0" fill="rgb(217,140,4)" rx="2" ry="2" />
<text  x="834.39" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (7 samples, 0.01%)</title><rect x="70.3" y="405" width="0.2" height="15.0" fill="rgb(247,153,42)" rx="2" ry="2" />
<text  x="73.31" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (8 samples, 0.02%)</title><rect x="839.6" y="389" width="0.2" height="15.0" fill="rgb(221,30,14)" rx="2" ry="2" />
<text  x="842.57" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (29 samples, 0.06%)</title><rect x="586.7" y="373" width="0.7" height="15.0" fill="rgb(242,76,7)" rx="2" ry="2" />
<text  x="589.68" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1135.7" y="421" width="0.2" height="15.0" fill="rgb(232,8,35)" rx="2" ry="2" />
<text  x="1138.74" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (10 samples, 0.02%)</title><rect x="73.4" y="453" width="0.3" height="15.0" fill="rgb(213,186,11)" rx="2" ry="2" />
<text  x="76.43" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.01%)</title><rect x="465.7" y="325" width="0.1" height="15.0" fill="rgb(213,92,28)" rx="2" ry="2" />
<text  x="468.72" y="335.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="272.8" y="293" width="0.2" height="15.0" fill="rgb(225,79,39)" rx="2" ry="2" />
<text  x="275.82" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (23 samples, 0.05%)</title><rect x="1140.4" y="277" width="0.6" height="15.0" fill="rgb(251,12,53)" rx="2" ry="2" />
<text  x="1143.39" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (192 samples, 0.40%)</title><rect x="1170.1" y="485" width="4.7" height="15.0" fill="rgb(233,69,4)" rx="2" ry="2" />
<text  x="1173.05" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (49 samples, 0.10%)</title><rect x="903.3" y="309" width="1.3" height="15.0" fill="rgb(236,229,30)" rx="2" ry="2" />
<text  x="906.34" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="852.5" y="421" width="0.1" height="15.0" fill="rgb(222,216,38)" rx="2" ry="2" />
<text  x="855.47" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (461 samples, 0.97%)</title><rect x="743.4" y="389" width="11.4" height="15.0" fill="rgb(233,95,21)" rx="2" ry="2" />
<text  x="746.38" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="1071.8" y="293" width="0.5" height="15.0" fill="rgb(245,213,32)" rx="2" ry="2" />
<text  x="1074.76" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (9 samples, 0.02%)</title><rect x="1064.8" y="309" width="0.2" height="15.0" fill="rgb(225,202,51)" rx="2" ry="2" />
<text  x="1067.82" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="868.3" y="469" width="0.2" height="15.0" fill="rgb(226,1,54)" rx="2" ry="2" />
<text  x="871.28" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.04%)</title><rect x="751.0" y="277" width="0.5" height="15.0" fill="rgb(240,113,40)" rx="2" ry="2" />
<text  x="754.03" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (393 samples, 0.83%)</title><rect x="1069.1" y="341" width="9.7" height="15.0" fill="rgb(240,33,45)" rx="2" ry="2" />
<text  x="1072.06" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (496 samples, 1.04%)</title><rect x="563.7" y="325" width="12.3" height="15.0" fill="rgb(233,97,3)" rx="2" ry="2" />
<text  x="566.66" y="335.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="578.4" y="341" width="0.6" height="15.0" fill="rgb(225,43,12)" rx="2" ry="2" />
<text  x="581.41" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1169.7" y="469" width="0.1" height="15.0" fill="rgb(221,127,33)" rx="2" ry="2" />
<text  x="1172.71" y="479.5" ></text>
</g>
<g >
<title>query_state::query_state (201 samples, 0.42%)</title><rect x="600.9" y="437" width="5.0" height="15.0" fill="rgb(254,75,27)" rx="2" ry="2" />
<text  x="603.93" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (5 samples, 0.01%)</title><rect x="947.6" y="389" width="0.1" height="15.0" fill="rgb(238,32,21)" rx="2" ry="2" />
<text  x="950.60" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (7 samples, 0.01%)</title><rect x="1101.9" y="357" width="0.2" height="15.0" fill="rgb(249,198,13)" rx="2" ry="2" />
<text  x="1104.94" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (128 samples, 0.27%)</title><rect x="997.3" y="293" width="3.2" height="15.0" fill="rgb(223,37,24)" rx="2" ry="2" />
<text  x="1000.30" y="303.5" ></text>
</g>
<g >
<title>__start_context (288 samples, 0.60%)</title><rect x="17.5" y="613" width="7.1" height="15.0" fill="rgb(208,61,36)" rx="2" ry="2" />
<text  x="20.46" y="623.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (29 samples, 0.06%)</title><rect x="651.5" y="421" width="0.7" height="15.0" fill="rgb(213,180,22)" rx="2" ry="2" />
<text  x="654.50" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.02%)</title><rect x="1140.1" y="277" width="0.3" height="15.0" fill="rgb(228,124,43)" rx="2" ry="2" />
<text  x="1143.15" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (6 samples, 0.01%)</title><rect x="1162.6" y="453" width="0.1" height="15.0" fill="rgb(237,65,10)" rx="2" ry="2" />
<text  x="1165.60" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="461.2" y="309" width="0.7" height="15.0" fill="rgb(240,138,49)" rx="2" ry="2" />
<text  x="464.21" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="685.4" y="453" width="0.2" height="15.0" fill="rgb(230,41,12)" rx="2" ry="2" />
<text  x="688.40" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%)</title><rect x="956.1" y="373" width="0.9" height="15.0" fill="rgb(222,60,2)" rx="2" ry="2" />
<text  x="959.12" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (10 samples, 0.02%)</title><rect x="948.8" y="421" width="0.2" height="15.0" fill="rgb(211,7,49)" rx="2" ry="2" />
<text  x="951.76" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (28 samples, 0.06%)</title><rect x="134.6" y="261" width="0.7" height="15.0" fill="rgb(245,41,2)" rx="2" ry="2" />
<text  x="137.58" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (37 samples, 0.08%)</title><rect x="1168.1" y="469" width="0.9" height="15.0" fill="rgb(205,171,38)" rx="2" ry="2" />
<text  x="1171.12" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (104 samples, 0.22%)</title><rect x="596.1" y="405" width="2.6" height="15.0" fill="rgb(212,104,32)" rx="2" ry="2" />
<text  x="599.12" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1116.8" y="389" width="0.2" height="15.0" fill="rgb(244,20,20)" rx="2" ry="2" />
<text  x="1119.81" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (24 samples, 0.05%)</title><rect x="539.2" y="341" width="0.6" height="15.0" fill="rgb(251,55,25)" rx="2" ry="2" />
<text  x="542.18" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,572 samples, 49.50%)</title><rect x="48.4" y="501" width="584.0" height="15.0" fill="rgb(226,132,23)" rx="2" ry="2" />
<text  x="51.36" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="627.2" y="437" width="0.2" height="15.0" fill="rgb(254,168,18)" rx="2" ry="2" />
<text  x="630.24" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume (23 samples, 0.05%)</title><rect x="393.3" y="229" width="0.6" height="15.0" fill="rgb(244,110,4)" rx="2" ry="2" />
<text  x="396.31" y="239.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (21 samples, 0.04%)</title><rect x="477.5" y="277" width="0.5" height="15.0" fill="rgb(248,197,14)" rx="2" ry="2" />
<text  x="480.46" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (691 samples, 1.45%)</title><rect x="739.2" y="421" width="17.1" height="15.0" fill="rgb(222,69,31)" rx="2" ry="2" />
<text  x="742.21" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (271 samples, 0.57%)</title><rect x="10.4" y="613" width="6.7" height="15.0" fill="rgb(244,228,47)" rx="2" ry="2" />
<text  x="13.37" y="623.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (27 samples, 0.06%)</title><rect x="1027.9" y="197" width="0.7" height="15.0" fill="rgb(214,81,4)" rx="2" ry="2" />
<text  x="1030.93" y="207.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (5 samples, 0.01%)</title><rect x="1040.0" y="261" width="0.1" height="15.0" fill="rgb(209,213,22)" rx="2" ry="2" />
<text  x="1042.97" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (18 samples, 0.04%)</title><rect x="368.5" y="213" width="0.4" height="15.0" fill="rgb(244,188,11)" rx="2" ry="2" />
<text  x="371.46" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%)</title><rect x="35.1" y="485" width="0.3" height="15.0" fill="rgb(211,31,4)" rx="2" ry="2" />
<text  x="38.10" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="836.9" y="293" width="0.4" height="15.0" fill="rgb(229,100,28)" rx="2" ry="2" />
<text  x="839.86" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (59 samples, 0.12%)</title><rect x="18.4" y="325" width="1.4" height="15.0" fill="rgb(215,34,47)" rx="2" ry="2" />
<text  x="21.37" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="225.0" y="213" width="0.2" height="15.0" fill="rgb(211,48,10)" rx="2" ry="2" />
<text  x="228.05" y="223.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (199 samples, 0.42%)</title><rect x="353.8" y="165" width="4.9" height="15.0" fill="rgb(230,118,17)" rx="2" ry="2" />
<text  x="356.79" y="175.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="792.0" y="245" width="0.7" height="15.0" fill="rgb(245,185,28)" rx="2" ry="2" />
<text  x="795.04" y="255.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%)</title><rect x="1048.0" y="245" width="1.6" height="15.0" fill="rgb(237,210,50)" rx="2" ry="2" />
<text  x="1051.02" y="255.5" ></text>
</g>
<g >
<title>database::find_column_family (58 samples, 0.12%)</title><rect x="762.3" y="373" width="1.4" height="15.0" fill="rgb(231,224,54)" rx="2" ry="2" />
<text  x="765.28" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (97 samples, 0.20%)</title><rect x="486.8" y="197" width="2.4" height="15.0" fill="rgb(205,13,31)" rx="2" ry="2" />
<text  x="489.80" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="792.1" y="229" width="0.6" height="15.0" fill="rgb(230,103,47)" rx="2" ry="2" />
<text  x="795.09" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15 samples, 0.03%)</title><rect x="824.0" y="277" width="0.4" height="15.0" fill="rgb(232,219,19)" rx="2" ry="2" />
<text  x="827.03" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (17 samples, 0.04%)</title><rect x="707.2" y="453" width="0.4" height="15.0" fill="rgb(235,103,33)" rx="2" ry="2" />
<text  x="710.15" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (10 samples, 0.02%)</title><rect x="326.1" y="165" width="0.2" height="15.0" fill="rgb(243,88,30)" rx="2" ry="2" />
<text  x="329.07" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (460 samples, 0.97%)</title><rect x="228.5" y="229" width="11.4" height="15.0" fill="rgb(254,96,0)" rx="2" ry="2" />
<text  x="231.49" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.02%)</title><rect x="874.3" y="341" width="0.3" height="15.0" fill="rgb(226,89,42)" rx="2" ry="2" />
<text  x="877.28" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%)</title><rect x="1045.6" y="277" width="0.3" height="15.0" fill="rgb(244,222,43)" rx="2" ry="2" />
<text  x="1048.64" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="986.8" y="341" width="0.6" height="15.0" fill="rgb(252,169,10)" rx="2" ry="2" />
<text  x="989.80" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (6 samples, 0.01%)</title><rect x="742.0" y="389" width="0.2" height="15.0" fill="rgb(222,206,11)" rx="2" ry="2" />
<text  x="745.01" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (168 samples, 0.35%)</title><rect x="406.7" y="261" width="4.2" height="15.0" fill="rgb(216,114,6)" rx="2" ry="2" />
<text  x="409.72" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (13 samples, 0.03%)</title><rect x="839.9" y="421" width="0.3" height="15.0" fill="rgb(205,228,21)" rx="2" ry="2" />
<text  x="842.86" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="871.2" y="485" width="0.2" height="15.0" fill="rgb(223,6,33)" rx="2" ry="2" />
<text  x="874.23" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (28 samples, 0.06%)</title><rect x="1139.4" y="485" width="0.7" height="15.0" fill="rgb(247,5,35)" rx="2" ry="2" />
<text  x="1142.43" y="495.5" ></text>
</g>
<g >
<title>table::as_mutation_source (74 samples, 0.16%)</title><rect x="625.2" y="437" width="1.8" height="15.0" fill="rgb(219,34,8)" rx="2" ry="2" />
<text  x="628.19" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="942.7" y="341" width="0.5" height="15.0" fill="rgb(231,42,37)" rx="2" ry="2" />
<text  x="945.74" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (33 samples, 0.07%)</title><rect x="785.7" y="293" width="0.9" height="15.0" fill="rgb(253,36,34)" rx="2" ry="2" />
<text  x="788.75" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (9 samples, 0.02%)</title><rect x="653.2" y="437" width="0.2" height="15.0" fill="rgb(253,161,20)" rx="2" ry="2" />
<text  x="656.16" y="447.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (608 samples, 1.28%)</title><rect x="796.1" y="229" width="15.0" height="15.0" fill="rgb(232,47,0)" rx="2" ry="2" />
<text  x="799.08" y="239.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (634 samples, 1.33%)</title><rect x="1081.6" y="309" width="15.8" height="15.0" fill="rgb(224,134,9)" rx="2" ry="2" />
<text  x="1084.65" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (58 samples, 0.12%)</title><rect x="203.7" y="101" width="1.5" height="15.0" fill="rgb(251,194,44)" rx="2" ry="2" />
<text  x="206.71" y="111.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="620.0" y="389" width="0.5" height="15.0" fill="rgb(208,98,32)" rx="2" ry="2" />
<text  x="623.03" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (27 samples, 0.06%)</title><rect x="814.3" y="229" width="0.7" height="15.0" fill="rgb(233,3,27)" rx="2" ry="2" />
<text  x="817.29" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (30 samples, 0.06%)</title><rect x="544.4" y="421" width="0.7" height="15.0" fill="rgb(246,164,48)" rx="2" ry="2" />
<text  x="547.39" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,375 samples, 4.99%)</title><rect x="994.4" y="341" width="58.9" height="15.0" fill="rgb(235,202,15)" rx="2" ry="2" />
<text  x="997.40" y="351.5" >servic..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="617.2" y="389" width="0.2" height="15.0" fill="rgb(247,62,51)" rx="2" ry="2" />
<text  x="620.23" y="399.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="206.3" y="165" width="0.6" height="15.0" fill="rgb(235,221,29)" rx="2" ry="2" />
<text  x="209.32" y="175.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (22 samples, 0.05%)</title><rect x="933.4" y="389" width="0.5" height="15.0" fill="rgb(210,17,49)" rx="2" ry="2" />
<text  x="936.35" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (12 samples, 0.03%)</title><rect x="708.8" y="437" width="0.3" height="15.0" fill="rgb(216,167,49)" rx="2" ry="2" />
<text  x="711.79" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (15 samples, 0.03%)</title><rect x="978.9" y="357" width="0.4" height="15.0" fill="rgb(248,75,1)" rx="2" ry="2" />
<text  x="981.92" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="815.4" y="277" width="0.2" height="15.0" fill="rgb(254,60,50)" rx="2" ry="2" />
<text  x="818.41" y="287.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="618.8" y="421" width="0.5" height="15.0" fill="rgb(215,0,5)" rx="2" ry="2" />
<text  x="621.82" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%)</title><rect x="388.4" y="149" width="0.3" height="15.0" fill="rgb(216,68,9)" rx="2" ry="2" />
<text  x="391.43" y="159.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (11 samples, 0.02%)</title><rect x="159.5" y="197" width="0.2" height="15.0" fill="rgb(232,58,16)" rx="2" ry="2" />
<text  x="162.46" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (57 samples, 0.12%)</title><rect x="816.3" y="293" width="1.4" height="15.0" fill="rgb(226,49,14)" rx="2" ry="2" />
<text  x="819.30" y="303.5" ></text>
</g>
<g >
<title>query::digester::digester (27 samples, 0.06%)</title><rect x="602.7" y="405" width="0.7" height="15.0" fill="rgb(252,111,48)" rx="2" ry="2" />
<text  x="605.71" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.14%)</title><rect x="1127.7" y="389" width="1.6" height="15.0" fill="rgb(210,220,12)" rx="2" ry="2" />
<text  x="1130.66" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="693.3" y="469" width="0.2" height="15.0" fill="rgb(210,142,50)" rx="2" ry="2" />
<text  x="696.30" y="479.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (19 samples, 0.04%)</title><rect x="1090.2" y="277" width="0.4" height="15.0" fill="rgb(251,210,16)" rx="2" ry="2" />
<text  x="1093.17" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (26 samples, 0.05%)</title><rect x="850.1" y="373" width="0.7" height="15.0" fill="rgb(217,102,28)" rx="2" ry="2" />
<text  x="853.15" y="383.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="821.0" y="341" width="0.2" height="15.0" fill="rgb(236,4,6)" rx="2" ry="2" />
<text  x="824.01" y="351.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="533.1" y="293" width="0.2" height="15.0" fill="rgb(251,168,31)" rx="2" ry="2" />
<text  x="536.14" y="303.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="448.6" y="277" width="0.8" height="15.0" fill="rgb(211,22,4)" rx="2" ry="2" />
<text  x="451.57" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="544.9" y="405" width="0.2" height="15.0" fill="rgb(239,218,42)" rx="2" ry="2" />
<text  x="547.86" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (15 samples, 0.03%)</title><rect x="798.1" y="133" width="0.4" height="15.0" fill="rgb(236,162,15)" rx="2" ry="2" />
<text  x="801.11" y="143.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (78 samples, 0.16%)</title><rect x="144.7" y="197" width="1.9" height="15.0" fill="rgb(215,228,5)" rx="2" ry="2" />
<text  x="147.67" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="454.2" y="309" width="0.2" height="15.0" fill="rgb(221,23,50)" rx="2" ry="2" />
<text  x="457.24" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (15 samples, 0.03%)</title><rect x="128.5" y="245" width="0.4" height="15.0" fill="rgb(206,77,54)" rx="2" ry="2" />
<text  x="131.49" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="328.9" y="165" width="0.4" height="15.0" fill="rgb(205,30,39)" rx="2" ry="2" />
<text  x="331.92" y="175.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (73 samples, 0.15%)</title><rect x="868.5" y="469" width="1.8" height="15.0" fill="rgb(228,15,21)" rx="2" ry="2" />
<text  x="871.46" y="479.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (18 samples, 0.04%)</title><rect x="1096.3" y="293" width="0.4" height="15.0" fill="rgb(241,203,42)" rx="2" ry="2" />
<text  x="1099.27" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (26 samples, 0.05%)</title><rect x="794.9" y="229" width="0.7" height="15.0" fill="rgb(231,132,5)" rx="2" ry="2" />
<text  x="797.94" y="239.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (26 samples, 0.05%)</title><rect x="607.7" y="405" width="0.6" height="15.0" fill="rgb(232,11,41)" rx="2" ry="2" />
<text  x="610.69" y="415.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(237,119,14)" rx="2" ry="2" />
<text  x="1191.84" y="639.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (21 samples, 0.04%)</title><rect x="552.9" y="389" width="0.5" height="15.0" fill="rgb(239,120,1)" rx="2" ry="2" />
<text  x="555.88" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (25 samples, 0.05%)</title><rect x="1139.5" y="373" width="0.6" height="15.0" fill="rgb(252,69,4)" rx="2" ry="2" />
<text  x="1142.50" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (14 samples, 0.03%)</title><rect x="610.1" y="437" width="0.3" height="15.0" fill="rgb(221,219,10)" rx="2" ry="2" />
<text  x="613.07" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (115 samples, 0.24%)</title><rect x="642.6" y="501" width="2.8" height="15.0" fill="rgb(212,52,17)" rx="2" ry="2" />
<text  x="645.56" y="511.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="532.0" y="277" width="0.2" height="15.0" fill="rgb(208,37,41)" rx="2" ry="2" />
<text  x="535.02" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (10 samples, 0.02%)</title><rect x="227.0" y="245" width="0.3" height="15.0" fill="rgb(242,96,45)" rx="2" ry="2" />
<text  x="230.01" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="523.7" y="309" width="0.1" height="15.0" fill="rgb(216,199,24)" rx="2" ry="2" />
<text  x="526.72" y="319.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (12 samples, 0.03%)</title><rect x="712.2" y="421" width="0.3" height="15.0" fill="rgb(254,3,15)" rx="2" ry="2" />
<text  x="715.23" y="431.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="674.4" y="453" width="1.0" height="15.0" fill="rgb(207,224,44)" rx="2" ry="2" />
<text  x="677.40" y="463.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (410 samples, 0.86%)</title><rect x="306.4" y="197" width="10.2" height="15.0" fill="rgb(228,91,39)" rx="2" ry="2" />
<text  x="309.42" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (12 samples, 0.03%)</title><rect x="224.7" y="229" width="0.2" height="15.0" fill="rgb(206,208,38)" rx="2" ry="2" />
<text  x="227.65" y="239.5" ></text>
</g>
<g >
<title>database::find_column_family (44 samples, 0.09%)</title><rect x="1019.1" y="245" width="1.1" height="15.0" fill="rgb(237,206,8)" rx="2" ry="2" />
<text  x="1022.13" y="255.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (5 samples, 0.01%)</title><rect x="560.6" y="325" width="0.1" height="15.0" fill="rgb(233,173,31)" rx="2" ry="2" />
<text  x="563.57" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (55 samples, 0.12%)</title><rect x="652.9" y="469" width="1.3" height="15.0" fill="rgb(237,163,35)" rx="2" ry="2" />
<text  x="655.86" y="479.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (12 samples, 0.03%)</title><rect x="366.3" y="213" width="0.3" height="15.0" fill="rgb(222,181,9)" rx="2" ry="2" />
<text  x="369.26" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="522.4" y="261" width="0.6" height="15.0" fill="rgb(216,103,44)" rx="2" ry="2" />
<text  x="525.38" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (20 samples, 0.04%)</title><rect x="715.5" y="453" width="0.5" height="15.0" fill="rgb(241,53,32)" rx="2" ry="2" />
<text  x="718.53" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="1040.2" y="245" width="1.9" height="15.0" fill="rgb(209,56,14)" rx="2" ry="2" />
<text  x="1043.24" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (10 samples, 0.02%)</title><rect x="115.5" y="309" width="0.2" height="15.0" fill="rgb(208,10,20)" rx="2" ry="2" />
<text  x="118.48" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (42 samples, 0.09%)</title><rect x="18.6" y="309" width="1.1" height="15.0" fill="rgb(215,175,46)" rx="2" ry="2" />
<text  x="21.65" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="870.9" y="485" width="0.2" height="15.0" fill="rgb(208,209,31)" rx="2" ry="2" />
<text  x="873.93" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="373" width="0.9" height="15.0" fill="rgb(225,9,52)" rx="2" ry="2" />
<text  x="1143.12" y="383.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (6 samples, 0.01%)</title><rect x="1068.3" y="341" width="0.1" height="15.0" fill="rgb(231,113,54)" rx="2" ry="2" />
<text  x="1071.27" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="908.3" y="309" width="0.7" height="15.0" fill="rgb(252,105,5)" rx="2" ry="2" />
<text  x="911.32" y="319.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%)</title><rect x="866.5" y="437" width="1.1" height="15.0" fill="rgb(213,164,50)" rx="2" ry="2" />
<text  x="869.47" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (5 samples, 0.01%)</title><rect x="981.0" y="357" width="0.1" height="15.0" fill="rgb(251,108,18)" rx="2" ry="2" />
<text  x="984.02" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (27 samples, 0.06%)</title><rect x="68.8" y="373" width="0.7" height="15.0" fill="rgb(253,140,32)" rx="2" ry="2" />
<text  x="71.85" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%)</title><rect x="20.1" y="293" width="0.1" height="15.0" fill="rgb(216,143,25)" rx="2" ry="2" />
<text  x="23.06" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (11 samples, 0.02%)</title><rect x="302.7" y="197" width="0.2" height="15.0" fill="rgb(212,86,37)" rx="2" ry="2" />
<text  x="305.68" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%)</title><rect x="1169.5" y="453" width="0.2" height="15.0" fill="rgb(242,40,8)" rx="2" ry="2" />
<text  x="1172.53" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="848.2" y="389" width="0.2" height="15.0" fill="rgb(229,132,25)" rx="2" ry="2" />
<text  x="851.24" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.01%)</title><rect x="142.7" y="245" width="0.1" height="15.0" fill="rgb(249,39,17)" rx="2" ry="2" />
<text  x="145.66" y="255.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,568 samples, 5.39%)</title><rect x="462.3" y="341" width="63.6" height="15.0" fill="rgb(249,74,6)" rx="2" ry="2" />
<text  x="465.27" y="351.5" >memtab..</text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (90 samples, 0.19%)</title><rect x="822.9" y="325" width="2.2" height="15.0" fill="rgb(208,64,41)" rx="2" ry="2" />
<text  x="825.89" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,339 samples, 2.81%)</title><rect x="165.8" y="133" width="33.2" height="15.0" fill="rgb(245,178,46)" rx="2" ry="2" />
<text  x="168.78" y="143.5" >co..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (32 samples, 0.07%)</title><rect x="641.3" y="485" width="0.8" height="15.0" fill="rgb(240,199,41)" rx="2" ry="2" />
<text  x="644.29" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="506.0" y="261" width="0.2" height="15.0" fill="rgb(250,202,45)" rx="2" ry="2" />
<text  x="509.00" y="271.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (12 samples, 0.03%)</title><rect x="1051.3" y="277" width="0.3" height="15.0" fill="rgb(247,213,21)" rx="2" ry="2" />
<text  x="1054.32" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="627.1" y="437" width="0.1" height="15.0" fill="rgb(205,47,38)" rx="2" ry="2" />
<text  x="630.12" y="447.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="62.7" y="421" width="0.1" height="15.0" fill="rgb(248,224,35)" rx="2" ry="2" />
<text  x="65.68" y="431.5" ></text>
</g>
<g >
<title>operator delete (48 samples, 0.10%)</title><rect x="277.5" y="293" width="1.2" height="15.0" fill="rgb(211,97,18)" rx="2" ry="2" />
<text  x="280.50" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (5 samples, 0.01%)</title><rect x="973.8" y="293" width="0.1" height="15.0" fill="rgb(237,20,21)" rx="2" ry="2" />
<text  x="976.76" y="303.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (141 samples, 0.30%)</title><rect x="750.8" y="325" width="3.5" height="15.0" fill="rgb(230,168,4)" rx="2" ry="2" />
<text  x="753.84" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (84 samples, 0.18%)</title><rect x="866.2" y="453" width="2.1" height="15.0" fill="rgb(248,117,30)" rx="2" ry="2" />
<text  x="869.20" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%)</title><rect x="854.1" y="373" width="0.2" height="15.0" fill="rgb(222,9,48)" rx="2" ry="2" />
<text  x="857.06" y="383.5" ></text>
</g>
<g >
<title>table::query (32 samples, 0.07%)</title><rect x="1175.5" y="501" width="0.8" height="15.0" fill="rgb(215,179,16)" rx="2" ry="2" />
<text  x="1178.48" y="511.5" ></text>
</g>
<g >
<title>seastar::gate::enter (10 samples, 0.02%)</title><rect x="1039.7" y="229" width="0.3" height="15.0" fill="rgb(215,147,36)" rx="2" ry="2" />
<text  x="1042.72" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="498.4" y="309" width="0.1" height="15.0" fill="rgb(208,187,51)" rx="2" ry="2" />
<text  x="501.40" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (29 samples, 0.06%)</title><rect x="75.6" y="453" width="0.7" height="15.0" fill="rgb(227,41,6)" rx="2" ry="2" />
<text  x="78.56" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (58 samples, 0.12%)</title><rect x="68.1" y="389" width="1.4" height="15.0" fill="rgb(217,183,16)" rx="2" ry="2" />
<text  x="71.08" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="716.3" y="485" width="0.1" height="15.0" fill="rgb(224,189,47)" rx="2" ry="2" />
<text  x="719.30" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (25 samples, 0.05%)</title><rect x="198.3" y="117" width="0.7" height="15.0" fill="rgb(207,199,46)" rx="2" ry="2" />
<text  x="201.34" y="127.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="536.4" y="245" width="0.2" height="15.0" fill="rgb(238,45,41)" rx="2" ry="2" />
<text  x="539.38" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (17 samples, 0.04%)</title><rect x="702.7" y="469" width="0.4" height="15.0" fill="rgb(222,192,14)" rx="2" ry="2" />
<text  x="705.67" y="479.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (7 samples, 0.01%)</title><rect x="1031.1" y="149" width="0.2" height="15.0" fill="rgb(221,160,23)" rx="2" ry="2" />
<text  x="1034.10" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (39 samples, 0.08%)</title><rect x="664.3" y="485" width="1.0" height="15.0" fill="rgb(240,146,0)" rx="2" ry="2" />
<text  x="667.34" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (12 samples, 0.03%)</title><rect x="1027.6" y="197" width="0.3" height="15.0" fill="rgb(254,140,17)" rx="2" ry="2" />
<text  x="1030.63" y="207.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (93 samples, 0.20%)</title><rect x="520.7" y="325" width="2.3" height="15.0" fill="rgb(206,143,29)" rx="2" ry="2" />
<text  x="523.72" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (227 samples, 0.48%)</title><rect x="143.9" y="229" width="5.6" height="15.0" fill="rgb(222,71,21)" rx="2" ry="2" />
<text  x="146.92" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="288.4" y="277" width="0.9" height="15.0" fill="rgb(232,28,45)" rx="2" ry="2" />
<text  x="291.38" y="287.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%)</title><rect x="851.1" y="421" width="1.4" height="15.0" fill="rgb(216,95,43)" rx="2" ry="2" />
<text  x="854.09" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (17 samples, 0.04%)</title><rect x="713.1" y="453" width="0.5" height="15.0" fill="rgb(238,12,42)" rx="2" ry="2" />
<text  x="716.15" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="706.6" y="453" width="0.2" height="15.0" fill="rgb(234,203,54)" rx="2" ry="2" />
<text  x="709.63" y="463.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (223 samples, 0.47%)</title><rect x="454.7" y="309" width="5.5" height="15.0" fill="rgb(221,51,47)" rx="2" ry="2" />
<text  x="457.69" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%)</title><rect x="210.1" y="149" width="0.3" height="15.0" fill="rgb(232,79,29)" rx="2" ry="2" />
<text  x="213.06" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="773.3" y="341" width="0.6" height="15.0" fill="rgb(253,58,50)" rx="2" ry="2" />
<text  x="776.28" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="1077.2" y="309" width="0.4" height="15.0" fill="rgb(231,21,12)" rx="2" ry="2" />
<text  x="1080.24" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (12 samples, 0.03%)</title><rect x="938.1" y="405" width="0.3" height="15.0" fill="rgb(226,151,51)" rx="2" ry="2" />
<text  x="941.06" y="415.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="596.2" y="389" width="1.0" height="15.0" fill="rgb(213,229,5)" rx="2" ry="2" />
<text  x="599.25" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="679.4" y="485" width="0.1" height="15.0" fill="rgb(214,202,3)" rx="2" ry="2" />
<text  x="682.38" y="495.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (8 samples, 0.02%)</title><rect x="152.4" y="213" width="0.2" height="15.0" fill="rgb(246,10,28)" rx="2" ry="2" />
<text  x="155.45" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (11 samples, 0.02%)</title><rect x="143.0" y="229" width="0.3" height="15.0" fill="rgb(228,105,51)" rx="2" ry="2" />
<text  x="145.98" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (34 samples, 0.07%)</title><rect x="1124.0" y="405" width="0.8" height="15.0" fill="rgb(225,167,42)" rx="2" ry="2" />
<text  x="1126.97" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (19 samples, 0.04%)</title><rect x="887.9" y="421" width="0.5" height="15.0" fill="rgb(219,139,32)" rx="2" ry="2" />
<text  x="890.93" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (5 samples, 0.01%)</title><rect x="536.7" y="261" width="0.1" height="15.0" fill="rgb(213,67,22)" rx="2" ry="2" />
<text  x="539.66" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (180 samples, 0.38%)</title><rect x="897.3" y="309" width="4.4" height="15.0" fill="rgb(221,188,1)" rx="2" ry="2" />
<text  x="900.27" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (5 samples, 0.01%)</title><rect x="1149.0" y="469" width="0.2" height="15.0" fill="rgb(224,202,8)" rx="2" ry="2" />
<text  x="1152.04" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (32 samples, 0.07%)</title><rect x="873.8" y="453" width="0.8" height="15.0" fill="rgb(217,2,12)" rx="2" ry="2" />
<text  x="876.83" y="463.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="759.0" y="405" width="1.3" height="15.0" fill="rgb(240,194,17)" rx="2" ry="2" />
<text  x="761.99" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (11 samples, 0.02%)</title><rect x="18.4" y="277" width="0.2" height="15.0" fill="rgb(244,71,24)" rx="2" ry="2" />
<text  x="21.37" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="959.2" y="389" width="0.2" height="15.0" fill="rgb(248,197,9)" rx="2" ry="2" />
<text  x="962.17" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="862.0" y="341" width="0.8" height="15.0" fill="rgb(237,116,22)" rx="2" ry="2" />
<text  x="864.96" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (594 samples, 1.25%)</title><rect x="264.6" y="357" width="14.8" height="15.0" fill="rgb(214,69,34)" rx="2" ry="2" />
<text  x="267.64" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%)</title><rect x="278.4" y="277" width="0.3" height="15.0" fill="rgb(217,47,21)" rx="2" ry="2" />
<text  x="281.37" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (123 samples, 0.26%)</title><rect x="300.0" y="245" width="3.0" height="15.0" fill="rgb(222,218,35)" rx="2" ry="2" />
<text  x="302.95" y="255.5" ></text>
</g>
<g >
<title>dht::tri_compare (17 samples, 0.04%)</title><rect x="490.5" y="277" width="0.5" height="15.0" fill="rgb(208,48,7)" rx="2" ry="2" />
<text  x="493.54" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (75 samples, 0.16%)</title><rect x="381.0" y="149" width="1.9" height="15.0" fill="rgb(224,108,48)" rx="2" ry="2" />
<text  x="384.00" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (19 samples, 0.04%)</title><rect x="747.5" y="373" width="0.4" height="15.0" fill="rgb(212,66,11)" rx="2" ry="2" />
<text  x="750.47" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (5 samples, 0.01%)</title><rect x="405.8" y="213" width="0.1" height="15.0" fill="rgb(215,78,34)" rx="2" ry="2" />
<text  x="408.80" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="1128.6" y="373" width="0.7" height="15.0" fill="rgb(222,66,17)" rx="2" ry="2" />
<text  x="1131.55" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (175 samples, 0.37%)</title><rect x="989.9" y="325" width="4.3" height="15.0" fill="rgb(233,135,13)" rx="2" ry="2" />
<text  x="992.89" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (23 samples, 0.05%)</title><rect x="939.8" y="405" width="0.6" height="15.0" fill="rgb(250,4,18)" rx="2" ry="2" />
<text  x="942.82" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (33 samples, 0.07%)</title><rect x="95.0" y="437" width="0.8" height="15.0" fill="rgb(209,153,51)" rx="2" ry="2" />
<text  x="98.01" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (12 samples, 0.03%)</title><rect x="992.9" y="261" width="0.3" height="15.0" fill="rgb(248,4,31)" rx="2" ry="2" />
<text  x="995.89" y="271.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (29 samples, 0.06%)</title><rect x="89.7" y="437" width="0.7" height="15.0" fill="rgb(229,86,12)" rx="2" ry="2" />
<text  x="92.66" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (11 samples, 0.02%)</title><rect x="25.5" y="517" width="0.3" height="15.0" fill="rgb(209,41,44)" rx="2" ry="2" />
<text  x="28.54" y="527.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (222 samples, 0.47%)</title><rect x="943.2" y="421" width="5.5" height="15.0" fill="rgb(210,203,22)" rx="2" ry="2" />
<text  x="946.21" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="640.5" y="485" width="0.4" height="15.0" fill="rgb(231,129,19)" rx="2" ry="2" />
<text  x="643.55" y="495.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (7 samples, 0.01%)</title><rect x="525.9" y="341" width="0.2" height="15.0" fill="rgb(205,8,52)" rx="2" ry="2" />
<text  x="528.90" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (93 samples, 0.20%)</title><rect x="40.7" y="469" width="2.3" height="15.0" fill="rgb(231,226,47)" rx="2" ry="2" />
<text  x="43.70" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (32 samples, 0.07%)</title><rect x="783.4" y="293" width="0.8" height="15.0" fill="rgb(225,132,15)" rx="2" ry="2" />
<text  x="786.39" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (36 samples, 0.08%)</title><rect x="773.0" y="357" width="0.9" height="15.0" fill="rgb(238,125,39)" rx="2" ry="2" />
<text  x="776.04" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (10 samples, 0.02%)</title><rect x="206.1" y="165" width="0.2" height="15.0" fill="rgb(230,199,6)" rx="2" ry="2" />
<text  x="209.07" y="175.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (57 samples, 0.12%)</title><rect x="277.3" y="309" width="1.4" height="15.0" fill="rgb(220,202,10)" rx="2" ry="2" />
<text  x="280.33" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (177 samples, 0.37%)</title><rect x="1170.4" y="469" width="4.4" height="15.0" fill="rgb(236,105,52)" rx="2" ry="2" />
<text  x="1173.43" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (17 samples, 0.04%)</title><rect x="965.6" y="373" width="0.5" height="15.0" fill="rgb(211,65,29)" rx="2" ry="2" />
<text  x="968.64" y="383.5" ></text>
</g>
<g >
<title>database::has_keyspace (92 samples, 0.19%)</title><rect x="835.7" y="357" width="2.2" height="15.0" fill="rgb(223,47,9)" rx="2" ry="2" />
<text  x="838.65" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="314.4" y="181" width="0.3" height="15.0" fill="rgb(218,168,24)" rx="2" ry="2" />
<text  x="317.45" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (42 samples, 0.09%)</title><rect x="1154.3" y="453" width="1.0" height="15.0" fill="rgb(252,13,42)" rx="2" ry="2" />
<text  x="1157.29" y="463.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%)</title><rect x="853.3" y="405" width="1.0" height="15.0" fill="rgb(244,150,44)" rx="2" ry="2" />
<text  x="856.27" y="415.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="236.7" y="213" width="0.2" height="15.0" fill="rgb(222,186,12)" rx="2" ry="2" />
<text  x="239.72" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (14 samples, 0.03%)</title><rect x="814.6" y="213" width="0.4" height="15.0" fill="rgb(220,225,23)" rx="2" ry="2" />
<text  x="817.61" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="157.6" y="213" width="0.3" height="15.0" fill="rgb(246,150,27)" rx="2" ry="2" />
<text  x="160.63" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (7 samples, 0.01%)</title><rect x="609.0" y="421" width="0.1" height="15.0" fill="rgb(245,143,14)" rx="2" ry="2" />
<text  x="611.96" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (42 samples, 0.09%)</title><rect x="539.8" y="341" width="1.0" height="15.0" fill="rgb(241,105,36)" rx="2" ry="2" />
<text  x="542.78" y="351.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="421.0" y="373" width="1.0" height="15.0" fill="rgb(251,224,24)" rx="2" ry="2" />
<text  x="424.04" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="289.3" y="293" width="0.3" height="15.0" fill="rgb(243,54,9)" rx="2" ry="2" />
<text  x="292.32" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (13 samples, 0.03%)</title><rect x="661.8" y="485" width="0.3" height="15.0" fill="rgb(222,87,43)" rx="2" ry="2" />
<text  x="664.78" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="570.7" y="261" width="0.1" height="15.0" fill="rgb(213,101,31)" rx="2" ry="2" />
<text  x="573.68" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%)</title><rect x="159.2" y="197" width="0.3" height="15.0" fill="rgb(225,85,33)" rx="2" ry="2" />
<text  x="162.19" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%)</title><rect x="20.1" y="261" width="0.1" height="15.0" fill="rgb(229,164,30)" rx="2" ry="2" />
<text  x="23.06" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (275 samples, 0.58%)</title><rect x="579.7" y="373" width="6.9" height="15.0" fill="rgb(251,71,45)" rx="2" ry="2" />
<text  x="582.74" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (49 samples, 0.10%)</title><rect x="623.1" y="421" width="1.2" height="15.0" fill="rgb(210,75,17)" rx="2" ry="2" />
<text  x="626.13" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (13 samples, 0.03%)</title><rect x="576.7" y="373" width="0.3" height="15.0" fill="rgb(206,229,43)" rx="2" ry="2" />
<text  x="579.70" y="383.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="816.4" y="277" width="0.8" height="15.0" fill="rgb(222,57,33)" rx="2" ry="2" />
<text  x="819.40" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (16 samples, 0.03%)</title><rect x="803.7" y="133" width="0.4" height="15.0" fill="rgb(218,148,35)" rx="2" ry="2" />
<text  x="806.74" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (51 samples, 0.11%)</title><rect x="1159.0" y="453" width="1.3" height="15.0" fill="rgb(208,192,49)" rx="2" ry="2" />
<text  x="1162.00" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (85 samples, 0.18%)</title><rect x="788.4" y="293" width="2.1" height="15.0" fill="rgb(212,185,50)" rx="2" ry="2" />
<text  x="791.40" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (32 samples, 0.07%)</title><rect x="313.4" y="181" width="0.8" height="15.0" fill="rgb(240,43,49)" rx="2" ry="2" />
<text  x="316.43" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (96 samples, 0.20%)</title><rect x="189.6" y="117" width="2.3" height="15.0" fill="rgb(223,131,31)" rx="2" ry="2" />
<text  x="192.57" y="127.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (63 samples, 0.13%)</title><rect x="757.4" y="389" width="1.6" height="15.0" fill="rgb(254,6,23)" rx="2" ry="2" />
<text  x="760.40" y="399.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1076.7" y="293" width="0.1" height="15.0" fill="rgb(245,14,33)" rx="2" ry="2" />
<text  x="1079.69" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (54 samples, 0.11%)</title><rect x="591.6" y="421" width="1.4" height="15.0" fill="rgb(248,10,25)" rx="2" ry="2" />
<text  x="594.64" y="431.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.01%)</title><rect x="873.1" y="277" width="0.1" height="15.0" fill="rgb(215,53,23)" rx="2" ry="2" />
<text  x="876.11" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (6 samples, 0.01%)</title><rect x="1035.7" y="229" width="0.2" height="15.0" fill="rgb(236,70,47)" rx="2" ry="2" />
<text  x="1038.73" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,249 samples, 4.72%)</title><rect x="160.0" y="197" width="55.7" height="15.0" fill="rgb(229,108,37)" rx="2" ry="2" />
<text  x="162.98" y="207.5" >parti..</text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%)</title><rect x="317.2" y="213" width="0.1" height="15.0" fill="rgb(213,109,11)" rx="2" ry="2" />
<text  x="320.20" y="223.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (38 samples, 0.08%)</title><rect x="1140.1" y="485" width="1.0" height="15.0" fill="rgb(239,64,11)" rx="2" ry="2" />
<text  x="1143.12" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="849.5" y="357" width="0.3" height="15.0" fill="rgb(214,89,20)" rx="2" ry="2" />
<text  x="852.48" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (411 samples, 0.86%)</title><rect x="1178.7" y="629" width="10.1" height="15.0" fill="rgb(236,51,19)" rx="2" ry="2" />
<text  x="1181.65" y="639.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (62 samples, 0.13%)</title><rect x="222.0" y="229" width="1.5" height="15.0" fill="rgb(252,146,40)" rx="2" ry="2" />
<text  x="224.95" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (101 samples, 0.21%)</title><rect x="237.4" y="213" width="2.5" height="15.0" fill="rgb(242,54,54)" rx="2" ry="2" />
<text  x="240.39" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (29 samples, 0.06%)</title><rect x="774.6" y="341" width="0.7" height="15.0" fill="rgb(234,59,2)" rx="2" ry="2" />
<text  x="777.62" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (11 samples, 0.02%)</title><rect x="990.9" y="293" width="0.3" height="15.0" fill="rgb(207,26,54)" rx="2" ry="2" />
<text  x="993.91" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (20 samples, 0.04%)</title><rect x="565.8" y="293" width="0.5" height="15.0" fill="rgb(229,70,14)" rx="2" ry="2" />
<text  x="568.79" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (13 samples, 0.03%)</title><rect x="699.6" y="453" width="0.3" height="15.0" fill="rgb(241,81,39)" rx="2" ry="2" />
<text  x="702.62" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (19 samples, 0.04%)</title><rect x="1135.2" y="421" width="0.5" height="15.0" fill="rgb(250,217,45)" rx="2" ry="2" />
<text  x="1138.24" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="836.8" y="309" width="0.5" height="15.0" fill="rgb(207,194,23)" rx="2" ry="2" />
<text  x="839.77" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (72 samples, 0.15%)</title><rect x="916.6" y="357" width="1.8" height="15.0" fill="rgb(242,17,16)" rx="2" ry="2" />
<text  x="919.62" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (230 samples, 0.48%)</title><rect x="208.8" y="181" width="5.7" height="15.0" fill="rgb(246,73,12)" rx="2" ry="2" />
<text  x="211.79" y="191.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (6 samples, 0.01%)</title><rect x="600.6" y="437" width="0.2" height="15.0" fill="rgb(227,206,24)" rx="2" ry="2" />
<text  x="603.61" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (52 samples, 0.11%)</title><rect x="757.6" y="373" width="1.3" height="15.0" fill="rgb(212,11,52)" rx="2" ry="2" />
<text  x="760.58" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="822.3" y="341" width="0.2" height="15.0" fill="rgb(244,8,34)" rx="2" ry="2" />
<text  x="825.30" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (83 samples, 0.17%)</title><rect x="669.4" y="485" width="2.0" height="15.0" fill="rgb(246,88,39)" rx="2" ry="2" />
<text  x="672.37" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="135.9" y="277" width="0.3" height="15.0" fill="rgb(219,70,21)" rx="2" ry="2" />
<text  x="138.87" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::take_value (6 samples, 0.01%)</title><rect x="746.4" y="373" width="0.1" height="15.0" fill="rgb(247,135,50)" rx="2" ry="2" />
<text  x="749.35" y="383.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (5 samples, 0.01%)</title><rect x="817.8" y="309" width="0.1" height="15.0" fill="rgb(207,148,32)" rx="2" ry="2" />
<text  x="820.79" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (8 samples, 0.02%)</title><rect x="1028.6" y="197" width="0.2" height="15.0" fill="rgb(215,146,3)" rx="2" ry="2" />
<text  x="1031.60" y="207.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (81 samples, 0.17%)</title><rect x="792.0" y="261" width="2.0" height="15.0" fill="rgb(241,82,8)" rx="2" ry="2" />
<text  x="794.97" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%)</title><rect x="165.4" y="133" width="0.4" height="15.0" fill="rgb(234,103,37)" rx="2" ry="2" />
<text  x="168.43" y="143.5" ></text>
</g>
<g >
<title>schema_registry::get (176 samples, 0.37%)</title><rect x="973.9" y="357" width="4.3" height="15.0" fill="rgb(250,205,4)" rx="2" ry="2" />
<text  x="976.89" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (11 samples, 0.02%)</title><rect x="24.7" y="501" width="0.3" height="15.0" fill="rgb(218,209,19)" rx="2" ry="2" />
<text  x="27.69" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="41.4" y="437" width="0.4" height="15.0" fill="rgb(208,29,49)" rx="2" ry="2" />
<text  x="44.44" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (122 samples, 0.26%)</title><rect x="1047.8" y="277" width="3.0" height="15.0" fill="rgb(251,60,51)" rx="2" ry="2" />
<text  x="1050.80" y="287.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1140.5" y="165" width="0.1" height="15.0" fill="rgb(242,137,1)" rx="2" ry="2" />
<text  x="1143.49" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="597.4" y="373" width="0.2" height="15.0" fill="rgb(229,104,28)" rx="2" ry="2" />
<text  x="600.44" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (92 samples, 0.19%)</title><rect x="1172.3" y="437" width="2.3" height="15.0" fill="rgb(227,106,18)" rx="2" ry="2" />
<text  x="1175.31" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="1035.9" y="229" width="0.2" height="15.0" fill="rgb(252,228,29)" rx="2" ry="2" />
<text  x="1038.91" y="239.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="873.0" y="421" width="0.4" height="15.0" fill="rgb(209,107,5)" rx="2" ry="2" />
<text  x="876.04" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (5 samples, 0.01%)</title><rect x="818.3" y="325" width="0.1" height="15.0" fill="rgb(220,200,26)" rx="2" ry="2" />
<text  x="821.31" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="799.5" y="213" width="0.1" height="15.0" fill="rgb(249,124,4)" rx="2" ry="2" />
<text  x="802.45" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (18 samples, 0.04%)</title><rect x="669.8" y="469" width="0.4" height="15.0" fill="rgb(224,229,31)" rx="2" ry="2" />
<text  x="672.76" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="540.1" y="309" width="0.6" height="15.0" fill="rgb(236,78,52)" rx="2" ry="2" />
<text  x="543.12" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (180 samples, 0.38%)</title><rect x="617.8" y="437" width="4.5" height="15.0" fill="rgb(222,78,28)" rx="2" ry="2" />
<text  x="620.83" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,108 samples, 12.83%)</title><rect x="720.1" y="501" width="151.4" height="15.0" fill="rgb(250,151,36)" rx="2" ry="2" />
<text  x="723.11" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%)</title><rect x="207.2" y="133" width="0.4" height="15.0" fill="rgb(253,109,44)" rx="2" ry="2" />
<text  x="210.23" y="143.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (19 samples, 0.04%)</title><rect x="873.0" y="469" width="0.4" height="15.0" fill="rgb(228,119,11)" rx="2" ry="2" />
<text  x="875.97" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (46 samples, 0.10%)</title><rect x="992.0" y="277" width="1.2" height="15.0" fill="rgb(223,133,27)" rx="2" ry="2" />
<text  x="995.05" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (12 samples, 0.03%)</title><rect x="891.6" y="389" width="0.3" height="15.0" fill="rgb(221,222,30)" rx="2" ry="2" />
<text  x="894.57" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.07%)</title><rect x="989.1" y="293" width="0.7" height="15.0" fill="rgb(250,124,48)" rx="2" ry="2" />
<text  x="992.05" y="303.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,533 samples, 97.71%)</title><rect x="25.1" y="565" width="1153.0" height="15.0" fill="rgb(242,58,7)" rx="2" ry="2" />
<text  x="28.09" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (10 samples, 0.02%)</title><rect x="1141.1" y="485" width="0.2" height="15.0" fill="rgb(251,18,54)" rx="2" ry="2" />
<text  x="1144.06" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.02%)</title><rect x="547.7" y="341" width="0.2" height="15.0" fill="rgb(206,22,44)" rx="2" ry="2" />
<text  x="550.68" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (81 samples, 0.17%)</title><rect x="861.1" y="389" width="2.0" height="15.0" fill="rgb(226,114,34)" rx="2" ry="2" />
<text  x="864.10" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%)</title><rect x="655.1" y="453" width="0.2" height="15.0" fill="rgb(215,185,14)" rx="2" ry="2" />
<text  x="658.12" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.03%)</title><rect x="437.2" y="341" width="0.3" height="15.0" fill="rgb(214,137,35)" rx="2" ry="2" />
<text  x="440.17" y="351.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="461.1" y="325" width="0.8" height="15.0" fill="rgb(207,146,35)" rx="2" ry="2" />
<text  x="464.13" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (58 samples, 0.12%)</title><rect x="687.0" y="469" width="1.5" height="15.0" fill="rgb(220,57,41)" rx="2" ry="2" />
<text  x="690.03" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (11 samples, 0.02%)</title><rect x="1003.5" y="293" width="0.3" height="15.0" fill="rgb(213,104,24)" rx="2" ry="2" />
<text  x="1006.50" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,254 samples, 2.63%)</title><rect x="1013.9" y="277" width="31.1" height="15.0" fill="rgb(237,108,0)" rx="2" ry="2" />
<text  x="1016.93" y="287.5" >se..</text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (51 samples, 0.11%)</title><rect x="680.9" y="469" width="1.2" height="15.0" fill="rgb(220,35,41)" rx="2" ry="2" />
<text  x="683.86" y="479.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%)</title><rect x="20.5" y="325" width="0.2" height="15.0" fill="rgb(216,131,30)" rx="2" ry="2" />
<text  x="23.51" y="335.5" ></text>
</g>
<g >
<title>free (111 samples, 0.23%)</title><rect x="400.1" y="181" width="2.8" height="15.0" fill="rgb(205,165,34)" rx="2" ry="2" />
<text  x="403.10" y="191.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="445.9" y="261" width="0.1" height="15.0" fill="rgb(250,29,17)" rx="2" ry="2" />
<text  x="448.89" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (40 samples, 0.08%)</title><rect x="934.6" y="405" width="1.0" height="15.0" fill="rgb(210,53,15)" rx="2" ry="2" />
<text  x="937.61" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (47 samples, 0.10%)</title><rect x="1107.5" y="389" width="1.2" height="15.0" fill="rgb(225,77,51)" rx="2" ry="2" />
<text  x="1110.54" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (15 samples, 0.03%)</title><rect x="53.3" y="469" width="0.4" height="15.0" fill="rgb(251,79,3)" rx="2" ry="2" />
<text  x="56.34" y="479.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (28 samples, 0.06%)</title><rect x="1139.4" y="405" width="0.7" height="15.0" fill="rgb(229,171,2)" rx="2" ry="2" />
<text  x="1142.43" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (160 samples, 0.34%)</title><rect x="674.2" y="469" width="4.0" height="15.0" fill="rgb(224,8,54)" rx="2" ry="2" />
<text  x="677.22" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,918 samples, 6.13%)</title><rect x="153.4" y="245" width="72.3" height="15.0" fill="rgb(233,18,27)" rx="2" ry="2" />
<text  x="156.41" y="255.5" >partitio..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (22 samples, 0.05%)</title><rect x="999.8" y="261" width="0.5" height="15.0" fill="rgb(238,149,17)" rx="2" ry="2" />
<text  x="1002.78" y="271.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%)</title><rect x="1159.1" y="437" width="1.1" height="15.0" fill="rgb(234,146,35)" rx="2" ry="2" />
<text  x="1162.10" y="447.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.17%)</title><rect x="971.9" y="357" width="2.0" height="15.0" fill="rgb(252,85,41)" rx="2" ry="2" />
<text  x="974.93" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (137 samples, 0.29%)</title><rect x="413.8" y="293" width="3.4" height="15.0" fill="rgb(235,95,11)" rx="2" ry="2" />
<text  x="416.76" y="303.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (13 samples, 0.03%)</title><rect x="449.4" y="277" width="0.3" height="15.0" fill="rgb(245,128,26)" rx="2" ry="2" />
<text  x="452.36" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (29 samples, 0.06%)</title><rect x="653.4" y="437" width="0.7" height="15.0" fill="rgb(207,106,46)" rx="2" ry="2" />
<text  x="656.41" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (87 samples, 0.18%)</title><rect x="835.7" y="341" width="2.2" height="15.0" fill="rgb(219,88,54)" rx="2" ry="2" />
<text  x="838.72" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (17 samples, 0.04%)</title><rect x="870.3" y="485" width="0.4" height="15.0" fill="rgb(208,117,39)" rx="2" ry="2" />
<text  x="873.29" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="1036.1" y="229" width="0.1" height="15.0" fill="rgb(213,151,16)" rx="2" ry="2" />
<text  x="1039.10" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (122 samples, 0.26%)</title><rect x="639.5" y="501" width="3.1" height="15.0" fill="rgb(208,192,33)" rx="2" ry="2" />
<text  x="642.53" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (27 samples, 0.06%)</title><rect x="676.7" y="453" width="0.6" height="15.0" fill="rgb(210,167,46)" rx="2" ry="2" />
<text  x="679.68" y="463.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (184 samples, 0.39%)</title><rect x="730.9" y="389" width="4.6" height="15.0" fill="rgb(248,24,9)" rx="2" ry="2" />
<text  x="733.94" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="1041.5" y="229" width="0.6" height="15.0" fill="rgb(241,158,2)" rx="2" ry="2" />
<text  x="1044.51" y="239.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (11 samples, 0.02%)</title><rect x="1063.5" y="261" width="0.2" height="15.0" fill="rgb(232,103,11)" rx="2" ry="2" />
<text  x="1066.46" y="271.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%)</title><rect x="152.8" y="229" width="0.2" height="15.0" fill="rgb(235,29,24)" rx="2" ry="2" />
<text  x="155.77" y="239.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (14 samples, 0.03%)</title><rect x="1045.9" y="277" width="0.4" height="15.0" fill="rgb(220,28,15)" rx="2" ry="2" />
<text  x="1048.94" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (30 samples, 0.06%)</title><rect x="643.8" y="485" width="0.7" height="15.0" fill="rgb(208,74,46)" rx="2" ry="2" />
<text  x="646.80" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%)</title><rect x="633.5" y="485" width="0.5" height="15.0" fill="rgb(246,121,18)" rx="2" ry="2" />
<text  x="636.54" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="310.5" y="165" width="0.1" height="15.0" fill="rgb(223,161,4)" rx="2" ry="2" />
<text  x="313.51" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (19 samples, 0.04%)</title><rect x="577.7" y="341" width="0.5" height="15.0" fill="rgb(214,125,44)" rx="2" ry="2" />
<text  x="580.74" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5 samples, 0.01%)</title><rect x="957.5" y="405" width="0.2" height="15.0" fill="rgb(222,119,48)" rx="2" ry="2" />
<text  x="960.53" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (26 samples, 0.05%)</title><rect x="425.1" y="421" width="0.6" height="15.0" fill="rgb(212,176,3)" rx="2" ry="2" />
<text  x="428.08" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (36 samples, 0.08%)</title><rect x="654.4" y="469" width="0.9" height="15.0" fill="rgb(246,208,42)" rx="2" ry="2" />
<text  x="657.45" y="479.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (35 samples, 0.07%)</title><rect x="1115.2" y="373" width="0.9" height="15.0" fill="rgb(254,229,41)" rx="2" ry="2" />
<text  x="1118.20" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%)</title><rect x="92.6" y="373" width="0.9" height="15.0" fill="rgb(226,224,44)" rx="2" ry="2" />
<text  x="95.61" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (15 samples, 0.03%)</title><rect x="837.5" y="293" width="0.3" height="15.0" fill="rgb(234,73,13)" rx="2" ry="2" />
<text  x="840.46" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="453.1" y="293" width="0.1" height="15.0" fill="rgb(212,162,35)" rx="2" ry="2" />
<text  x="456.08" y="303.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%)</title><rect x="978.0" y="341" width="0.1" height="15.0" fill="rgb(230,17,29)" rx="2" ry="2" />
<text  x="980.95" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="53.2" y="453" width="0.1" height="15.0" fill="rgb(243,163,35)" rx="2" ry="2" />
<text  x="56.16" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%)</title><rect x="870.7" y="485" width="0.2" height="15.0" fill="rgb(237,133,11)" rx="2" ry="2" />
<text  x="873.71" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (21 samples, 0.04%)</title><rect x="311.2" y="165" width="0.5" height="15.0" fill="rgb(216,183,10)" rx="2" ry="2" />
<text  x="314.23" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="225.2" y="229" width="0.5" height="15.0" fill="rgb(228,149,17)" rx="2" ry="2" />
<text  x="228.20" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (14 samples, 0.03%)</title><rect x="688.1" y="453" width="0.4" height="15.0" fill="rgb(245,38,7)" rx="2" ry="2" />
<text  x="691.12" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (33 samples, 0.07%)</title><rect x="114.7" y="309" width="0.8" height="15.0" fill="rgb(222,201,5)" rx="2" ry="2" />
<text  x="117.66" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (11 samples, 0.02%)</title><rect x="1034.6" y="213" width="0.3" height="15.0" fill="rgb(237,27,1)" rx="2" ry="2" />
<text  x="1037.59" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (441 samples, 0.93%)</title><rect x="440.7" y="309" width="10.9" height="15.0" fill="rgb(211,58,49)" rx="2" ry="2" />
<text  x="443.69" y="319.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="998.0" y="261" width="1.8" height="15.0" fill="rgb(254,109,9)" rx="2" ry="2" />
<text  x="1001.00" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (505 samples, 1.06%)</title><rect x="177.0" y="101" width="12.5" height="15.0" fill="rgb(222,69,40)" rx="2" ry="2" />
<text  x="179.95" y="111.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (106 samples, 0.22%)</title><rect x="129.5" y="245" width="2.6" height="15.0" fill="rgb(219,11,15)" rx="2" ry="2" />
<text  x="132.45" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (10 samples, 0.02%)</title><rect x="594.0" y="405" width="0.3" height="15.0" fill="rgb(217,7,47)" rx="2" ry="2" />
<text  x="597.04" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (527 samples, 1.11%)</title><rect x="122.3" y="277" width="13.0" height="15.0" fill="rgb(211,218,19)" rx="2" ry="2" />
<text  x="125.27" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%)</title><rect x="242.1" y="245" width="0.2" height="15.0" fill="rgb(244,221,15)" rx="2" ry="2" />
<text  x="245.07" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="773.8" y="325" width="0.1" height="15.0" fill="rgb(242,16,51)" rx="2" ry="2" />
<text  x="776.80" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%)</title><rect x="1150.0" y="453" width="0.8" height="15.0" fill="rgb(250,72,29)" rx="2" ry="2" />
<text  x="1152.98" y="463.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (350 samples, 0.73%)</title><rect x="469.3" y="293" width="8.7" height="15.0" fill="rgb(239,165,29)" rx="2" ry="2" />
<text  x="472.31" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (32 samples, 0.07%)</title><rect x="873.8" y="405" width="0.8" height="15.0" fill="rgb(212,117,28)" rx="2" ry="2" />
<text  x="876.83" y="415.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (8 samples, 0.02%)</title><rect x="1142.4" y="501" width="0.2" height="15.0" fill="rgb(221,194,43)" rx="2" ry="2" />
<text  x="1145.43" y="511.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (164 samples, 0.34%)</title><rect x="990.2" y="309" width="4.0" height="15.0" fill="rgb(217,138,48)" rx="2" ry="2" />
<text  x="993.17" y="319.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="147.8" y="181" width="0.8" height="15.0" fill="rgb(241,162,7)" rx="2" ry="2" />
<text  x="150.77" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="1125.8" y="405" width="0.2" height="15.0" fill="rgb(238,101,54)" rx="2" ry="2" />
<text  x="1128.85" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (155 samples, 0.33%)</title><rect x="392.8" y="245" width="3.8" height="15.0" fill="rgb(234,25,53)" rx="2" ry="2" />
<text  x="395.77" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (20 samples, 0.04%)</title><rect x="628.1" y="469" width="0.5" height="15.0" fill="rgb(251,185,33)" rx="2" ry="2" />
<text  x="631.06" y="479.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (62 samples, 0.13%)</title><rect x="927.7" y="389" width="1.5" height="15.0" fill="rgb(215,214,54)" rx="2" ry="2" />
<text  x="930.70" y="399.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (64 samples, 0.13%)</title><rect x="868.7" y="453" width="1.6" height="15.0" fill="rgb(240,212,16)" rx="2" ry="2" />
<text  x="871.68" y="463.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="812.9" y="245" width="0.8" height="15.0" fill="rgb(248,1,47)" rx="2" ry="2" />
<text  x="815.85" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="497.5" y="277" width="0.7" height="15.0" fill="rgb(247,96,31)" rx="2" ry="2" />
<text  x="500.51" y="287.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="20.1" y="309" width="0.1" height="15.0" fill="rgb(243,88,9)" rx="2" ry="2" />
<text  x="23.06" y="319.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%)</title><rect x="24.7" y="581" width="0.3" height="15.0" fill="rgb(213,43,20)" rx="2" ry="2" />
<text  x="27.69" y="591.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (52 samples, 0.11%)</title><rect x="465.8" y="325" width="1.3" height="15.0" fill="rgb(219,204,23)" rx="2" ry="2" />
<text  x="468.84" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (12 samples, 0.03%)</title><rect x="993.9" y="277" width="0.3" height="15.0" fill="rgb(247,194,9)" rx="2" ry="2" />
<text  x="996.93" y="287.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="513.3" y="197" width="0.5" height="15.0" fill="rgb(223,124,40)" rx="2" ry="2" />
<text  x="516.26" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (915 samples, 1.92%)</title><rect x="645.4" y="501" width="22.7" height="15.0" fill="rgb(210,215,34)" rx="2" ry="2" />
<text  x="648.41" y="511.5" >s..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="800.0" y="197" width="0.2" height="15.0" fill="rgb(242,207,36)" rx="2" ry="2" />
<text  x="802.97" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (12 samples, 0.03%)</title><rect x="255.3" y="309" width="0.2" height="15.0" fill="rgb(205,216,20)" rx="2" ry="2" />
<text  x="258.25" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (24 samples, 0.05%)</title><rect x="457.9" y="261" width="0.6" height="15.0" fill="rgb(205,144,9)" rx="2" ry="2" />
<text  x="460.89" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="1068.0" y="325" width="0.2" height="15.0" fill="rgb(212,210,14)" rx="2" ry="2" />
<text  x="1071.02" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="1121.5" y="341" width="0.2" height="15.0" fill="rgb(213,190,21)" rx="2" ry="2" />
<text  x="1124.51" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="799.3" y="213" width="0.1" height="15.0" fill="rgb(208,159,25)" rx="2" ry="2" />
<text  x="802.25" y="223.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="515.6" y="229" width="0.1" height="15.0" fill="rgb(241,182,4)" rx="2" ry="2" />
<text  x="518.59" y="239.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="553.5" y="405" width="0.7" height="15.0" fill="rgb(250,23,30)" rx="2" ry="2" />
<text  x="556.48" y="415.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (6 samples, 0.01%)</title><rect x="1170.3" y="469" width="0.1" height="15.0" fill="rgb(228,135,28)" rx="2" ry="2" />
<text  x="1173.28" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="130.4" y="213" width="0.3" height="15.0" fill="rgb(230,204,44)" rx="2" ry="2" />
<text  x="133.40" y="223.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (21 samples, 0.04%)</title><rect x="753.8" y="261" width="0.5" height="15.0" fill="rgb(230,178,17)" rx="2" ry="2" />
<text  x="756.81" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="942.8" y="325" width="0.4" height="15.0" fill="rgb(217,213,36)" rx="2" ry="2" />
<text  x="945.82" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="909.1" y="309" width="0.5" height="15.0" fill="rgb(242,171,19)" rx="2" ry="2" />
<text  x="912.14" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (146 samples, 0.31%)</title><rect x="682.4" y="485" width="3.7" height="15.0" fill="rgb(231,167,13)" rx="2" ry="2" />
<text  x="685.45" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (19 samples, 0.04%)</title><rect x="571.5" y="277" width="0.4" height="15.0" fill="rgb(237,215,24)" rx="2" ry="2" />
<text  x="574.47" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,234 samples, 10.99%)</title><rect x="287.8" y="341" width="129.7" height="15.0" fill="rgb(222,135,13)" rx="2" ry="2" />
<text  x="290.84" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (10 samples, 0.02%)</title><rect x="1078.8" y="341" width="0.2" height="15.0" fill="rgb(220,98,18)" rx="2" ry="2" />
<text  x="1081.80" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="397.5" y="229" width="0.3" height="15.0" fill="rgb(212,54,34)" rx="2" ry="2" />
<text  x="400.50" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="747.8" y="341" width="0.1" height="15.0" fill="rgb(223,201,30)" rx="2" ry="2" />
<text  x="750.79" y="351.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (73 samples, 0.15%)</title><rect x="1132.3" y="405" width="1.8" height="15.0" fill="rgb(245,6,21)" rx="2" ry="2" />
<text  x="1135.27" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (150 samples, 0.31%)</title><rect x="974.2" y="341" width="3.8" height="15.0" fill="rgb(224,38,0)" rx="2" ry="2" />
<text  x="977.23" y="351.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,653 samples, 3.47%)</title><rect x="780.3" y="357" width="41.0" height="15.0" fill="rgb(215,200,4)" rx="2" ry="2" />
<text  x="783.30" y="367.5" >ser..</text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,957 samples, 4.11%)</title><rect x="1053.4" y="357" width="48.5" height="15.0" fill="rgb(246,82,9)" rx="2" ry="2" />
<text  x="1056.45" y="367.5" >serv..</text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (535 samples, 1.12%)</title><rect x="913.7" y="389" width="13.3" height="15.0" fill="rgb(245,121,20)" rx="2" ry="2" />
<text  x="916.70" y="399.5" ></text>
</g>
<g >
<title>operator new (94 samples, 0.20%)</title><rect x="954.7" y="405" width="2.3" height="15.0" fill="rgb(247,69,12)" rx="2" ry="2" />
<text  x="957.66" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (175 samples, 0.37%)</title><rect x="731.2" y="373" width="4.3" height="15.0" fill="rgb(230,137,12)" rx="2" ry="2" />
<text  x="734.16" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (22 samples, 0.05%)</title><rect x="626.2" y="405" width="0.5" height="15.0" fill="rgb(239,159,36)" rx="2" ry="2" />
<text  x="629.18" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="425.3" y="405" width="0.4" height="15.0" fill="rgb(251,4,22)" rx="2" ry="2" />
<text  x="428.25" y="415.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (39 samples, 0.08%)</title><rect x="840.9" y="421" width="1.0" height="15.0" fill="rgb(253,226,34)" rx="2" ry="2" />
<text  x="843.93" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%)</title><rect x="86.3" y="437" width="0.4" height="15.0" fill="rgb(249,131,8)" rx="2" ry="2" />
<text  x="89.29" y="447.5" ></text>
</g>
<g >
<title>make_combined_reader (985 samples, 2.07%)</title><rect x="437.8" y="341" width="24.4" height="15.0" fill="rgb(252,113,54)" rx="2" ry="2" />
<text  x="440.77" y="351.5" >m..</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (35 samples, 0.07%)</title><rect x="827.8" y="357" width="0.9" height="15.0" fill="rgb(228,223,17)" rx="2" ry="2" />
<text  x="830.82" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (15 samples, 0.03%)</title><rect x="1099.6" y="309" width="0.4" height="15.0" fill="rgb(210,120,25)" rx="2" ry="2" />
<text  x="1102.59" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (21 samples, 0.04%)</title><rect x="491.0" y="293" width="0.5" height="15.0" fill="rgb(212,142,40)" rx="2" ry="2" />
<text  x="493.99" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (57 samples, 0.12%)</title><rect x="823.7" y="309" width="1.4" height="15.0" fill="rgb(216,80,38)" rx="2" ry="2" />
<text  x="826.71" y="319.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (20 samples, 0.04%)</title><rect x="751.0" y="309" width="0.5" height="15.0" fill="rgb(207,155,44)" rx="2" ry="2" />
<text  x="753.96" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="544.0" y="421" width="0.1" height="15.0" fill="rgb(218,203,9)" rx="2" ry="2" />
<text  x="546.99" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="484.3" y="213" width="0.2" height="15.0" fill="rgb(243,31,50)" rx="2" ry="2" />
<text  x="487.27" y="223.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (142 samples, 0.30%)</title><rect x="512.0" y="229" width="3.5" height="15.0" fill="rgb(210,135,13)" rx="2" ry="2" />
<text  x="515.00" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (168 samples, 0.35%)</title><rect x="259.0" y="341" width="4.2" height="15.0" fill="rgb(238,108,13)" rx="2" ry="2" />
<text  x="262.02" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="963.5" y="357" width="1.7" height="15.0" fill="rgb(226,113,18)" rx="2" ry="2" />
<text  x="966.50" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="1150.9" y="485" width="0.4" height="15.0" fill="rgb(235,17,11)" rx="2" ry="2" />
<text  x="1153.88" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,213 samples, 2.55%)</title><rect x="1144.8" y="501" width="30.0" height="15.0" fill="rgb(233,109,22)" rx="2" ry="2" />
<text  x="1147.76" y="511.5" >se..</text>
</g>
<g >
<title>row::external_memory_usage (213 samples, 0.45%)</title><rect x="200.7" y="149" width="5.3" height="15.0" fill="rgb(244,84,51)" rx="2" ry="2" />
<text  x="203.74" y="159.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (146 samples, 0.31%)</title><rect x="1185.2" y="613" width="3.6" height="15.0" fill="rgb(229,187,27)" rx="2" ry="2" />
<text  x="1188.22" y="623.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (61 samples, 0.13%)</title><rect x="18.4" y="341" width="1.5" height="15.0" fill="rgb(226,217,3)" rx="2" ry="2" />
<text  x="21.37" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (6 samples, 0.01%)</title><rect x="498.6" y="309" width="0.1" height="15.0" fill="rgb(214,220,40)" rx="2" ry="2" />
<text  x="501.60" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (44 samples, 0.09%)</title><rect x="953.6" y="389" width="1.1" height="15.0" fill="rgb(212,14,18)" rx="2" ry="2" />
<text  x="956.57" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (33 samples, 0.07%)</title><rect x="917.2" y="341" width="0.8" height="15.0" fill="rgb(252,225,7)" rx="2" ry="2" />
<text  x="920.19" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="41.9" y="453" width="0.3" height="15.0" fill="rgb(220,50,17)" rx="2" ry="2" />
<text  x="44.86" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (6 samples, 0.01%)</title><rect x="46.9" y="469" width="0.1" height="15.0" fill="rgb(246,209,49)" rx="2" ry="2" />
<text  x="49.87" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%)</title><rect x="689.1" y="485" width="0.5" height="15.0" fill="rgb(223,48,17)" rx="2" ry="2" />
<text  x="692.09" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (5 samples, 0.01%)</title><rect x="645.3" y="469" width="0.1" height="15.0" fill="rgb(249,87,36)" rx="2" ry="2" />
<text  x="648.28" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="672.3" y="485" width="0.2" height="15.0" fill="rgb(239,76,11)" rx="2" ry="2" />
<text  x="675.29" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="676.9" y="437" width="0.3" height="15.0" fill="rgb(249,60,12)" rx="2" ry="2" />
<text  x="679.95" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (158 samples, 0.33%)</title><rect x="803.0" y="165" width="3.9" height="15.0" fill="rgb(248,222,21)" rx="2" ry="2" />
<text  x="805.97" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (94 samples, 0.20%)</title><rect x="744.0" y="373" width="2.4" height="15.0" fill="rgb(246,173,49)" rx="2" ry="2" />
<text  x="747.02" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (32 samples, 0.07%)</title><rect x="367.4" y="165" width="0.8" height="15.0" fill="rgb(231,178,7)" rx="2" ry="2" />
<text  x="370.37" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="783.6" y="277" width="0.6" height="15.0" fill="rgb(244,132,22)" rx="2" ry="2" />
<text  x="786.57" y="287.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (9 samples, 0.02%)</title><rect x="808.9" y="117" width="0.2" height="15.0" fill="rgb(242,31,34)" rx="2" ry="2" />
<text  x="811.87" y="127.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (14 samples, 0.03%)</title><rect x="61.8" y="421" width="0.4" height="15.0" fill="rgb(209,200,26)" rx="2" ry="2" />
<text  x="64.84" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (150 samples, 0.31%)</title><rect x="210.6" y="165" width="3.7" height="15.0" fill="rgb(214,136,7)" rx="2" ry="2" />
<text  x="213.55" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (7 samples, 0.01%)</title><rect x="945.7" y="389" width="0.2" height="15.0" fill="rgb(238,26,52)" rx="2" ry="2" />
<text  x="948.71" y="399.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (8 samples, 0.02%)</title><rect x="911.5" y="389" width="0.2" height="15.0" fill="rgb(226,82,27)" rx="2" ry="2" />
<text  x="914.52" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="39.1" y="421" width="0.7" height="15.0" fill="rgb(247,71,17)" rx="2" ry="2" />
<text  x="42.06" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="574.5" y="293" width="0.2" height="15.0" fill="rgb(229,118,35)" rx="2" ry="2" />
<text  x="577.49" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="199.0" y="133" width="0.3" height="15.0" fill="rgb(215,176,8)" rx="2" ry="2" />
<text  x="201.96" y="143.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1139.5" y="389" width="0.6" height="15.0" fill="rgb(212,21,52)" rx="2" ry="2" />
<text  x="1142.45" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (10 samples, 0.02%)</title><rect x="61.0" y="437" width="0.3" height="15.0" fill="rgb(228,81,23)" rx="2" ry="2" />
<text  x="64.04" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="942.3" y="357" width="0.2" height="15.0" fill="rgb(242,68,35)" rx="2" ry="2" />
<text  x="945.34" y="367.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (11 samples, 0.02%)</title><rect x="225.7" y="245" width="0.3" height="15.0" fill="rgb(228,172,15)" rx="2" ry="2" />
<text  x="228.72" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="905.9" y="357" width="0.2" height="15.0" fill="rgb(227,52,47)" rx="2" ry="2" />
<text  x="908.90" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="899.9" y="293" width="0.1" height="15.0" fill="rgb(217,187,5)" rx="2" ry="2" />
<text  x="902.88" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (34 samples, 0.07%)</title><rect x="755.2" y="389" width="0.9" height="15.0" fill="rgb(250,196,26)" rx="2" ry="2" />
<text  x="758.22" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::close (22 samples, 0.05%)</title><rect x="1175.5" y="485" width="0.6" height="15.0" fill="rgb(224,55,1)" rx="2" ry="2" />
<text  x="1178.53" y="495.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="58.3" y="453" width="1.1" height="15.0" fill="rgb(218,68,13)" rx="2" ry="2" />
<text  x="61.34" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="747.3" y="373" width="0.2" height="15.0" fill="rgb(235,165,45)" rx="2" ry="2" />
<text  x="750.32" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (35 samples, 0.07%)</title><rect x="819.5" y="309" width="0.9" height="15.0" fill="rgb(231,109,42)" rx="2" ry="2" />
<text  x="822.54" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="513.0" y="197" width="0.1" height="15.0" fill="rgb(224,168,35)" rx="2" ry="2" />
<text  x="516.02" y="207.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="843.6" y="373" width="0.5" height="15.0" fill="rgb(241,126,38)" rx="2" ry="2" />
<text  x="846.55" y="383.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="941.3" y="373" width="0.7" height="15.0" fill="rgb(212,164,39)" rx="2" ry="2" />
<text  x="944.33" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="597.6" y="373" width="0.3" height="15.0" fill="rgb(205,43,31)" rx="2" ry="2" />
<text  x="600.56" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (30 samples, 0.06%)</title><rect x="711.2" y="421" width="0.8" height="15.0" fill="rgb(226,87,7)" rx="2" ry="2" />
<text  x="714.24" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (7 samples, 0.01%)</title><rect x="1151.3" y="485" width="0.2" height="15.0" fill="rgb(207,121,29)" rx="2" ry="2" />
<text  x="1154.35" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (15 samples, 0.03%)</title><rect x="1139.1" y="469" width="0.3" height="15.0" fill="rgb(208,105,53)" rx="2" ry="2" />
<text  x="1142.06" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (110 samples, 0.23%)</title><rect x="997.7" y="277" width="2.7" height="15.0" fill="rgb(229,191,29)" rx="2" ry="2" />
<text  x="1000.67" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="661.2" y="453" width="0.2" height="15.0" fill="rgb(253,115,47)" rx="2" ry="2" />
<text  x="664.24" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="635.5" y="485" width="0.6" height="15.0" fill="rgb(215,197,53)" rx="2" ry="2" />
<text  x="638.54" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="73.1" y="453" width="0.1" height="15.0" fill="rgb(218,140,47)" rx="2" ry="2" />
<text  x="76.11" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="430.3" y="357" width="0.1" height="15.0" fill="rgb(220,194,53)" rx="2" ry="2" />
<text  x="433.31" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="724.4" y="389" width="0.5" height="15.0" fill="rgb(211,80,44)" rx="2" ry="2" />
<text  x="727.42" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="663.0" y="485" width="0.4" height="15.0" fill="rgb(207,62,29)" rx="2" ry="2" />
<text  x="665.97" y="495.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (39 samples, 0.08%)</title><rect x="797.5" y="149" width="1.0" height="15.0" fill="rgb(241,69,0)" rx="2" ry="2" />
<text  x="800.52" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1159.6" y="405" width="0.6" height="15.0" fill="rgb(239,223,29)" rx="2" ry="2" />
<text  x="1162.60" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (6 samples, 0.01%)</title><rect x="25.8" y="517" width="0.2" height="15.0" fill="rgb(225,46,23)" rx="2" ry="2" />
<text  x="28.81" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="817.3" y="277" width="0.4" height="15.0" fill="rgb(216,167,15)" rx="2" ry="2" />
<text  x="820.31" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (39 samples, 0.08%)</title><rect x="690.5" y="485" width="1.0" height="15.0" fill="rgb(226,44,22)" rx="2" ry="2" />
<text  x="693.53" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="135.4" y="277" width="0.3" height="15.0" fill="rgb(234,96,24)" rx="2" ry="2" />
<text  x="138.40" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (5 samples, 0.01%)</title><rect x="224.5" y="229" width="0.1" height="15.0" fill="rgb(243,119,14)" rx="2" ry="2" />
<text  x="227.50" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (11 samples, 0.02%)</title><rect x="719.4" y="501" width="0.3" height="15.0" fill="rgb(216,191,15)" rx="2" ry="2" />
<text  x="722.42" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (92 samples, 0.19%)</title><rect x="686.2" y="485" width="2.3" height="15.0" fill="rgb(250,128,15)" rx="2" ry="2" />
<text  x="689.24" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (267 samples, 0.56%)</title><rect x="693.6" y="485" width="6.7" height="15.0" fill="rgb(206,12,10)" rx="2" ry="2" />
<text  x="696.65" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (27 samples, 0.06%)</title><rect x="746.6" y="357" width="0.7" height="15.0" fill="rgb(254,132,23)" rx="2" ry="2" />
<text  x="749.62" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (5 samples, 0.01%)</title><rect x="703.0" y="453" width="0.1" height="15.0" fill="rgb(214,168,54)" rx="2" ry="2" />
<text  x="705.96" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (6 samples, 0.01%)</title><rect x="1039.2" y="245" width="0.1" height="15.0" fill="rgb(229,74,24)" rx="2" ry="2" />
<text  x="1042.15" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="815.2" y="245" width="0.1" height="15.0" fill="rgb(253,72,0)" rx="2" ry="2" />
<text  x="818.21" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (12 samples, 0.03%)</title><rect x="1038.8" y="197" width="0.3" height="15.0" fill="rgb(227,123,25)" rx="2" ry="2" />
<text  x="1041.76" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (76 samples, 0.16%)</title><rect x="1057.7" y="325" width="1.8" height="15.0" fill="rgb(234,123,3)" rx="2" ry="2" />
<text  x="1060.66" y="335.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (10 samples, 0.02%)</title><rect x="332.0" y="181" width="0.2" height="15.0" fill="rgb(241,108,21)" rx="2" ry="2" />
<text  x="334.96" y="191.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (24 samples, 0.05%)</title><rect x="386.4" y="165" width="0.6" height="15.0" fill="rgb(244,187,3)" rx="2" ry="2" />
<text  x="389.40" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (36 samples, 0.08%)</title><rect x="687.2" y="453" width="0.8" height="15.0" fill="rgb(230,185,23)" rx="2" ry="2" />
<text  x="690.16" y="463.5" ></text>
</g>
<g >
<title>table::make_reader (6 samples, 0.01%)</title><rect x="541.2" y="373" width="0.1" height="15.0" fill="rgb(232,227,11)" rx="2" ry="2" />
<text  x="544.19" y="383.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="690.6" y="373" width="0.8" height="15.0" fill="rgb(222,61,50)" rx="2" ry="2" />
<text  x="693.60" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (6 samples, 0.01%)</title><rect x="612.9" y="421" width="0.1" height="15.0" fill="rgb(250,156,23)" rx="2" ry="2" />
<text  x="615.87" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.04%)</title><rect x="324.7" y="181" width="0.5" height="15.0" fill="rgb(230,16,13)" rx="2" ry="2" />
<text  x="327.70" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="444.7" y="245" width="0.2" height="15.0" fill="rgb(226,134,12)" rx="2" ry="2" />
<text  x="447.73" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (88 samples, 0.18%)</title><rect x="1167.7" y="485" width="2.1" height="15.0" fill="rgb(229,84,37)" rx="2" ry="2" />
<text  x="1170.65" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (23 samples, 0.05%)</title><rect x="587.7" y="373" width="0.6" height="15.0" fill="rgb(245,203,5)" rx="2" ry="2" />
<text  x="590.72" y="383.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (18 samples, 0.04%)</title><rect x="1039.5" y="245" width="0.5" height="15.0" fill="rgb(225,171,26)" rx="2" ry="2" />
<text  x="1042.52" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="846.0" y="437" width="0.2" height="15.0" fill="rgb(221,155,49)" rx="2" ry="2" />
<text  x="848.96" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="606.0" y="437" width="0.3" height="15.0" fill="rgb(221,107,28)" rx="2" ry="2" />
<text  x="609.01" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.01%)</title><rect x="990.7" y="293" width="0.2" height="15.0" fill="rgb(226,163,45)" rx="2" ry="2" />
<text  x="993.71" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (11 samples, 0.02%)</title><rect x="888.4" y="421" width="0.3" height="15.0" fill="rgb(235,229,26)" rx="2" ry="2" />
<text  x="891.40" y="431.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (984 samples, 2.07%)</title><rect x="467.1" y="325" width="24.4" height="15.0" fill="rgb(221,90,38)" rx="2" ry="2" />
<text  x="470.13" y="335.5" >d..</text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (12 samples, 0.03%)</title><rect x="258.0" y="325" width="0.3" height="15.0" fill="rgb(234,221,19)" rx="2" ry="2" />
<text  x="260.98" y="335.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (317 samples, 0.67%)</title><rect x="545.6" y="405" width="7.9" height="15.0" fill="rgb(221,149,51)" rx="2" ry="2" />
<text  x="548.62" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (186 samples, 0.39%)</title><rect x="1028.8" y="197" width="4.6" height="15.0" fill="rgb(217,197,5)" rx="2" ry="2" />
<text  x="1031.79" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,337 samples, 4.91%)</title><rect x="158.1" y="213" width="57.9" height="15.0" fill="rgb(251,167,51)" rx="2" ry="2" />
<text  x="161.10" y="223.5" >logall..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%)</title><rect x="973.8" y="309" width="0.1" height="15.0" fill="rgb(224,7,37)" rx="2" ry="2" />
<text  x="976.76" y="319.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (12 samples, 0.03%)</title><rect x="995.3" y="325" width="0.3" height="15.0" fill="rgb(208,118,39)" rx="2" ry="2" />
<text  x="998.34" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="641.8" y="469" width="0.2" height="15.0" fill="rgb(234,164,25)" rx="2" ry="2" />
<text  x="644.76" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (13 samples, 0.03%)</title><rect x="699.9" y="469" width="0.4" height="15.0" fill="rgb(222,194,25)" rx="2" ry="2" />
<text  x="702.94" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%)</title><rect x="644.7" y="485" width="0.4" height="15.0" fill="rgb(235,101,0)" rx="2" ry="2" />
<text  x="647.74" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (132 samples, 0.28%)</title><rect x="709.4" y="437" width="3.3" height="15.0" fill="rgb(228,142,2)" rx="2" ry="2" />
<text  x="712.38" y="447.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (352 samples, 0.74%)</title><rect x="590.0" y="437" width="8.7" height="15.0" fill="rgb(248,219,17)" rx="2" ry="2" />
<text  x="593.03" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="89.3" y="421" width="0.4" height="15.0" fill="rgb(254,51,34)" rx="2" ry="2" />
<text  x="92.26" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (17 samples, 0.04%)</title><rect x="651.8" y="405" width="0.4" height="15.0" fill="rgb(234,93,54)" rx="2" ry="2" />
<text  x="654.77" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="905.5" y="357" width="0.4" height="15.0" fill="rgb(206,214,17)" rx="2" ry="2" />
<text  x="908.45" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="836.9" y="277" width="0.2" height="15.0" fill="rgb(232,130,15)" rx="2" ry="2" />
<text  x="839.94" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="665.4" y="469" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="668.43" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (8 samples, 0.02%)</title><rect x="873.9" y="373" width="0.2" height="15.0" fill="rgb(238,117,50)" rx="2" ry="2" />
<text  x="876.93" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="227.3" y="245" width="0.2" height="15.0" fill="rgb(222,31,29)" rx="2" ry="2" />
<text  x="230.25" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (35 samples, 0.07%)</title><rect x="650.5" y="437" width="0.8" height="15.0" fill="rgb(254,15,21)" rx="2" ry="2" />
<text  x="653.46" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (36 samples, 0.08%)</title><rect x="1062.8" y="277" width="0.9" height="15.0" fill="rgb(221,18,9)" rx="2" ry="2" />
<text  x="1065.84" y="287.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1044.8" y="261" width="0.1" height="15.0" fill="rgb(233,119,5)" rx="2" ry="2" />
<text  x="1047.80" y="271.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (23 samples, 0.05%)</title><rect x="910.8" y="373" width="0.5" height="15.0" fill="rgb(212,199,48)" rx="2" ry="2" />
<text  x="913.75" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (17 samples, 0.04%)</title><rect x="488.8" y="181" width="0.4" height="15.0" fill="rgb(218,149,20)" rx="2" ry="2" />
<text  x="491.78" y="191.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (17 samples, 0.04%)</title><rect x="845.4" y="437" width="0.5" height="15.0" fill="rgb(246,9,2)" rx="2" ry="2" />
<text  x="848.44" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%)</title><rect x="1100.4" y="293" width="0.2" height="15.0" fill="rgb(222,201,44)" rx="2" ry="2" />
<text  x="1103.35" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (6 samples, 0.01%)</title><rect x="873.1" y="309" width="0.2" height="15.0" fill="rgb(217,170,3)" rx="2" ry="2" />
<text  x="876.11" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (9 samples, 0.02%)</title><rect x="208.6" y="181" width="0.2" height="15.0" fill="rgb(225,66,28)" rx="2" ry="2" />
<text  x="211.57" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="624.6" y="437" width="0.2" height="15.0" fill="rgb(235,39,3)" rx="2" ry="2" />
<text  x="627.59" y="447.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (20 samples, 0.04%)</title><rect x="857.3" y="341" width="0.5" height="15.0" fill="rgb(208,193,47)" rx="2" ry="2" />
<text  x="860.33" y="351.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="891.9" y="389" width="0.1" height="15.0" fill="rgb(253,91,16)" rx="2" ry="2" />
<text  x="894.87" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (247 samples, 0.52%)</title><rect x="859.0" y="453" width="6.1" height="15.0" fill="rgb(227,224,22)" rx="2" ry="2" />
<text  x="861.97" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="332.2" y="181" width="0.1" height="15.0" fill="rgb(218,104,12)" rx="2" ry="2" />
<text  x="335.21" y="191.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (11 samples, 0.02%)</title><rect x="947.2" y="341" width="0.3" height="15.0" fill="rgb(206,226,47)" rx="2" ry="2" />
<text  x="950.20" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%)</title><rect x="867.4" y="405" width="0.2" height="15.0" fill="rgb(210,22,16)" rx="2" ry="2" />
<text  x="870.39" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="420.8" y="373" width="0.2" height="15.0" fill="rgb(244,194,18)" rx="2" ry="2" />
<text  x="423.77" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%)</title><rect x="292.8" y="245" width="0.6" height="15.0" fill="rgb(218,54,18)" rx="2" ry="2" />
<text  x="295.82" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (10 samples, 0.02%)</title><rect x="1153.6" y="405" width="0.2" height="15.0" fill="rgb(216,126,24)" rx="2" ry="2" />
<text  x="1156.60" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (54 samples, 0.11%)</title><rect x="147.6" y="197" width="1.3" height="15.0" fill="rgb(246,200,2)" rx="2" ry="2" />
<text  x="150.59" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (414 samples, 0.87%)</title><rect x="507.7" y="261" width="10.3" height="15.0" fill="rgb(245,198,42)" rx="2" ry="2" />
<text  x="510.74" y="271.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (25 samples, 0.05%)</title><rect x="1044.1" y="261" width="0.6" height="15.0" fill="rgb(222,46,28)" rx="2" ry="2" />
<text  x="1047.08" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (113 samples, 0.24%)</title><rect x="751.5" y="293" width="2.8" height="15.0" fill="rgb(220,41,34)" rx="2" ry="2" />
<text  x="754.53" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (21 samples, 0.04%)</title><rect x="23.4" y="421" width="0.5" height="15.0" fill="rgb(230,110,4)" rx="2" ry="2" />
<text  x="26.38" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (5 samples, 0.01%)</title><rect x="1053.3" y="357" width="0.1" height="15.0" fill="rgb(214,147,12)" rx="2" ry="2" />
<text  x="1056.25" y="367.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%)</title><rect x="983.7" y="293" width="1.7" height="15.0" fill="rgb(238,153,50)" rx="2" ry="2" />
<text  x="986.67" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (275 samples, 0.58%)</title><rect x="987.5" y="341" width="6.8" height="15.0" fill="rgb(248,36,27)" rx="2" ry="2" />
<text  x="990.47" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (108 samples, 0.23%)</title><rect x="822.5" y="341" width="2.7" height="15.0" fill="rgb(225,135,46)" rx="2" ry="2" />
<text  x="825.54" y="351.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,882 samples, 3.95%)</title><rect x="778.6" y="373" width="46.7" height="15.0" fill="rgb(230,76,39)" rx="2" ry="2" />
<text  x="781.64" y="383.5" >serv..</text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="567.1" y="293" width="0.3" height="15.0" fill="rgb(247,115,53)" rx="2" ry="2" />
<text  x="570.13" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="574.7" y="293" width="0.2" height="15.0" fill="rgb(207,160,31)" rx="2" ry="2" />
<text  x="577.66" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (25 samples, 0.05%)</title><rect x="1083.0" y="245" width="0.6" height="15.0" fill="rgb(232,37,51)" rx="2" ry="2" />
<text  x="1085.98" y="255.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="24.3" y="405" width="0.1" height="15.0" fill="rgb(207,120,35)" rx="2" ry="2" />
<text  x="27.27" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (580 samples, 1.22%)</title><rect x="740.4" y="405" width="14.4" height="15.0" fill="rgb(213,146,25)" rx="2" ry="2" />
<text  x="743.43" y="415.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.13%)</title><rect x="863.3" y="437" width="1.5" height="15.0" fill="rgb(206,130,26)" rx="2" ry="2" />
<text  x="866.33" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (324 samples, 0.68%)</title><rect x="1082.1" y="277" width="8.1" height="15.0" fill="rgb(220,52,42)" rx="2" ry="2" />
<text  x="1085.14" y="287.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (49 samples, 0.10%)</title><rect x="1163.6" y="453" width="1.3" height="15.0" fill="rgb(218,172,7)" rx="2" ry="2" />
<text  x="1166.64" y="463.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (5 samples, 0.01%)</title><rect x="20.1" y="325" width="0.1" height="15.0" fill="rgb(217,165,18)" rx="2" ry="2" />
<text  x="23.06" y="335.5" ></text>
</g>
<g >
<title>database::find_column_family (14 samples, 0.03%)</title><rect x="970.4" y="357" width="0.4" height="15.0" fill="rgb(245,29,26)" rx="2" ry="2" />
<text  x="973.42" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="633.9" y="469" width="0.1" height="15.0" fill="rgb(225,179,38)" rx="2" ry="2" />
<text  x="636.86" y="479.5" ></text>
</g>
<g >
<title>mutation_querier::consume (8 samples, 0.02%)</title><rect x="690.9" y="277" width="0.2" height="15.0" fill="rgb(240,167,42)" rx="2" ry="2" />
<text  x="693.87" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="251.9" y="261" width="0.1" height="15.0" fill="rgb(231,8,52)" rx="2" ry="2" />
<text  x="254.86" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (21 samples, 0.04%)</title><rect x="609.4" y="437" width="0.5" height="15.0" fill="rgb(219,155,9)" rx="2" ry="2" />
<text  x="612.38" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (71 samples, 0.15%)</title><rect x="384.2" y="133" width="1.8" height="15.0" fill="rgb(206,83,44)" rx="2" ry="2" />
<text  x="387.22" y="143.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="679.9" y="469" width="0.5" height="15.0" fill="rgb(253,76,51)" rx="2" ry="2" />
<text  x="682.95" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="95.7" y="421" width="0.1" height="15.0" fill="rgb(220,140,10)" rx="2" ry="2" />
<text  x="98.71" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="164.5" y="133" width="0.1" height="15.0" fill="rgb(252,70,43)" rx="2" ry="2" />
<text  x="167.49" y="143.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="873.1" y="341" width="0.2" height="15.0" fill="rgb(224,183,19)" rx="2" ry="2" />
<text  x="876.09" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="766.8" y="309" width="0.2" height="15.0" fill="rgb(211,138,13)" rx="2" ry="2" />
<text  x="769.84" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="644.4" y="469" width="0.1" height="15.0" fill="rgb(235,48,40)" rx="2" ry="2" />
<text  x="647.36" y="479.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="620.9" y="373" width="0.9" height="15.0" fill="rgb(241,36,33)" rx="2" ry="2" />
<text  x="623.88" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (152 samples, 0.32%)</title><rect x="233.0" y="213" width="3.7" height="15.0" fill="rgb(219,131,50)" rx="2" ry="2" />
<text  x="235.95" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (232 samples, 0.49%)</title><rect x="748.8" y="357" width="5.7" height="15.0" fill="rgb(223,225,1)" rx="2" ry="2" />
<text  x="751.75" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (9 samples, 0.02%)</title><rect x="754.8" y="405" width="0.3" height="15.0" fill="rgb(225,181,6)" rx="2" ry="2" />
<text  x="757.85" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.03%)</title><rect x="750.3" y="277" width="0.3" height="15.0" fill="rgb(205,138,15)" rx="2" ry="2" />
<text  x="753.27" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (12 samples, 0.03%)</title><rect x="612.7" y="437" width="0.3" height="15.0" fill="rgb(246,144,4)" rx="2" ry="2" />
<text  x="615.72" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (6 samples, 0.01%)</title><rect x="60.9" y="437" width="0.1" height="15.0" fill="rgb(219,47,54)" rx="2" ry="2" />
<text  x="63.89" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (45 samples, 0.09%)</title><rect x="70.7" y="389" width="1.1" height="15.0" fill="rgb(208,141,21)" rx="2" ry="2" />
<text  x="73.68" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="904.6" y="309" width="0.2" height="15.0" fill="rgb(247,42,9)" rx="2" ry="2" />
<text  x="907.56" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (85 samples, 0.18%)</title><rect x="683.0" y="453" width="2.1" height="15.0" fill="rgb(239,126,39)" rx="2" ry="2" />
<text  x="685.99" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="918.3" y="325" width="0.1" height="15.0" fill="rgb(221,153,32)" rx="2" ry="2" />
<text  x="921.29" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1036.2" y="229" width="0.2" height="15.0" fill="rgb(245,54,25)" rx="2" ry="2" />
<text  x="1039.23" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="984.9" y="261" width="0.5" height="15.0" fill="rgb(224,214,50)" rx="2" ry="2" />
<text  x="987.86" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (6 samples, 0.01%)</title><rect x="1144.6" y="501" width="0.2" height="15.0" fill="rgb(210,166,31)" rx="2" ry="2" />
<text  x="1147.61" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="205.3" y="117" width="0.1" height="15.0" fill="rgb(243,119,4)" rx="2" ry="2" />
<text  x="208.25" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (39 samples, 0.08%)</title><rect x="765.4" y="325" width="0.9" height="15.0" fill="rgb(237,62,0)" rx="2" ry="2" />
<text  x="768.36" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="50.7" y="485" width="0.3" height="15.0" fill="rgb(251,54,39)" rx="2" ry="2" />
<text  x="53.69" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (12 samples, 0.03%)</title><rect x="1051.6" y="293" width="0.3" height="15.0" fill="rgb(250,109,34)" rx="2" ry="2" />
<text  x="1054.62" y="303.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="584.0" y="341" width="1.2" height="15.0" fill="rgb(209,226,48)" rx="2" ry="2" />
<text  x="586.96" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,248 samples, 8.92%)</title><rect x="736.8" y="437" width="105.2" height="15.0" fill="rgb(235,50,16)" rx="2" ry="2" />
<text  x="739.79" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (48 samples, 0.10%)</title><rect x="1132.9" y="389" width="1.2" height="15.0" fill="rgb(240,169,22)" rx="2" ry="2" />
<text  x="1135.89" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="511.8" y="229" width="0.2" height="15.0" fill="rgb(205,220,17)" rx="2" ry="2" />
<text  x="514.80" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (125 samples, 0.26%)</title><rect x="91.3" y="421" width="3.1" height="15.0" fill="rgb(228,226,24)" rx="2" ry="2" />
<text  x="94.27" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (10 samples, 0.02%)</title><rect x="243.9" y="197" width="0.3" height="15.0" fill="rgb(209,68,22)" rx="2" ry="2" />
<text  x="246.93" y="207.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%)</title><rect x="804.1" y="133" width="0.2" height="15.0" fill="rgb(214,71,15)" rx="2" ry="2" />
<text  x="807.13" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="278.8" y="325" width="0.4" height="15.0" fill="rgb(219,123,36)" rx="2" ry="2" />
<text  x="281.79" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="1050.7" y="181" width="0.1" height="15.0" fill="rgb(245,143,52)" rx="2" ry="2" />
<text  x="1053.67" y="191.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (147 samples, 0.31%)</title><rect x="344.8" y="165" width="3.7" height="15.0" fill="rgb(213,81,48)" rx="2" ry="2" />
<text  x="347.85" y="175.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (120 samples, 0.25%)</title><rect x="722.6" y="469" width="2.9" height="15.0" fill="rgb(210,100,51)" rx="2" ry="2" />
<text  x="725.56" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%)</title><rect x="411.7" y="261" width="0.4" height="15.0" fill="rgb(228,41,40)" rx="2" ry="2" />
<text  x="414.75" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (83 samples, 0.17%)</title><rect x="394.3" y="213" width="2.0" height="15.0" fill="rgb(240,130,46)" rx="2" ry="2" />
<text  x="397.28" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="1159.1" y="421" width="1.1" height="15.0" fill="rgb(222,142,44)" rx="2" ry="2" />
<text  x="1162.13" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (11 samples, 0.02%)</title><rect x="612.1" y="421" width="0.3" height="15.0" fill="rgb(209,16,9)" rx="2" ry="2" />
<text  x="615.10" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="1110.2" y="389" width="0.3" height="15.0" fill="rgb(233,209,20)" rx="2" ry="2" />
<text  x="1113.19" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="660.6" y="469" width="0.1" height="15.0" fill="rgb(253,92,35)" rx="2" ry="2" />
<text  x="663.59" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (24 samples, 0.05%)</title><rect x="276.5" y="277" width="0.6" height="15.0" fill="rgb(230,63,10)" rx="2" ry="2" />
<text  x="279.49" y="287.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (33 samples, 0.07%)</title><rect x="896.5" y="309" width="0.8" height="15.0" fill="rgb(244,191,5)" rx="2" ry="2" />
<text  x="899.46" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (110 samples, 0.23%)</title><rect x="665.3" y="485" width="2.8" height="15.0" fill="rgb(229,129,39)" rx="2" ry="2" />
<text  x="668.33" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%)</title><rect x="1172.2" y="437" width="0.1" height="15.0" fill="rgb(253,5,23)" rx="2" ry="2" />
<text  x="1175.18" y="447.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="569.9" y="277" width="0.9" height="15.0" fill="rgb(253,124,3)" rx="2" ry="2" />
<text  x="572.86" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="616.9" y="421" width="0.5" height="15.0" fill="rgb(221,139,31)" rx="2" ry="2" />
<text  x="619.86" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (25 samples, 0.05%)</title><rect x="252.0" y="277" width="0.6" height="15.0" fill="rgb(251,217,52)" rx="2" ry="2" />
<text  x="254.98" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (8 samples, 0.02%)</title><rect x="1121.7" y="405" width="0.2" height="15.0" fill="rgb(205,209,15)" rx="2" ry="2" />
<text  x="1124.66" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (5 samples, 0.01%)</title><rect x="649.0" y="469" width="0.1" height="15.0" fill="rgb(248,221,21)" rx="2" ry="2" />
<text  x="652.00" y="479.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (24 samples, 0.05%)</title><rect x="850.2" y="357" width="0.6" height="15.0" fill="rgb(229,218,34)" rx="2" ry="2" />
<text  x="853.17" y="367.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (5 samples, 0.01%)</title><rect x="329.4" y="181" width="0.1" height="15.0" fill="rgb(221,97,1)" rx="2" ry="2" />
<text  x="332.41" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="507.6" y="261" width="0.1" height="15.0" fill="rgb(245,221,2)" rx="2" ry="2" />
<text  x="510.59" y="271.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (32 samples, 0.07%)</title><rect x="623.5" y="405" width="0.8" height="15.0" fill="rgb(253,0,3)" rx="2" ry="2" />
<text  x="626.48" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (65 samples, 0.14%)</title><rect x="767.3" y="341" width="1.6" height="15.0" fill="rgb(253,158,30)" rx="2" ry="2" />
<text  x="770.26" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="575.4" y="309" width="0.3" height="15.0" fill="rgb(206,92,45)" rx="2" ry="2" />
<text  x="578.43" y="319.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="526.1" y="341" width="0.2" height="15.0" fill="rgb(242,90,22)" rx="2" ry="2" />
<text  x="529.12" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (30 samples, 0.06%)</title><rect x="638.2" y="469" width="0.8" height="15.0" fill="rgb(207,151,13)" rx="2" ry="2" />
<text  x="641.22" y="479.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (55 samples, 0.12%)</title><rect x="1009.0" y="277" width="1.4" height="15.0" fill="rgb(221,205,15)" rx="2" ry="2" />
<text  x="1012.05" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (82 samples, 0.17%)</title><rect x="149.9" y="197" width="2.0" height="15.0" fill="rgb(223,171,23)" rx="2" ry="2" />
<text  x="152.87" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="598.0" y="389" width="0.2" height="15.0" fill="rgb(241,43,15)" rx="2" ry="2" />
<text  x="600.96" y="399.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="507.4" y="229" width="0.2" height="15.0" fill="rgb(250,2,1)" rx="2" ry="2" />
<text  x="510.37" y="239.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (5 samples, 0.01%)</title><rect x="53.8" y="469" width="0.1" height="15.0" fill="rgb(234,92,15)" rx="2" ry="2" />
<text  x="56.76" y="479.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="497.5" y="293" width="0.7" height="15.0" fill="rgb(252,134,22)" rx="2" ry="2" />
<text  x="500.48" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="94.5" y="421" width="0.5" height="15.0" fill="rgb(229,32,54)" rx="2" ry="2" />
<text  x="97.54" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (344 samples, 0.72%)</title><rect x="63.5" y="437" width="8.6" height="15.0" fill="rgb(229,26,4)" rx="2" ry="2" />
<text  x="66.55" y="447.5" ></text>
</g>
<g >
<title>[unknown] (607 samples, 1.27%)</title><rect x="10.0" y="629" width="15.1" height="15.0" fill="rgb(222,31,52)" rx="2" ry="2" />
<text  x="13.05" y="639.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (20 samples, 0.04%)</title><rect x="809.8" y="101" width="0.5" height="15.0" fill="rgb(236,106,12)" rx="2" ry="2" />
<text  x="812.78" y="111.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (16 samples, 0.03%)</title><rect x="920.2" y="373" width="0.4" height="15.0" fill="rgb(246,43,42)" rx="2" ry="2" />
<text  x="923.19" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (48 samples, 0.10%)</title><rect x="403.4" y="197" width="1.2" height="15.0" fill="rgb(225,10,5)" rx="2" ry="2" />
<text  x="406.40" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%)</title><rect x="855.3" y="373" width="0.2" height="15.0" fill="rgb(225,61,15)" rx="2" ry="2" />
<text  x="858.32" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="1032.3" y="117" width="0.3" height="15.0" fill="rgb(238,43,35)" rx="2" ry="2" />
<text  x="1035.34" y="127.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (263 samples, 0.55%)</title><rect x="17.9" y="501" width="6.5" height="15.0" fill="rgb(239,163,32)" rx="2" ry="2" />
<text  x="20.90" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (15 samples, 0.03%)</title><rect x="142.9" y="245" width="0.4" height="15.0" fill="rgb(248,215,40)" rx="2" ry="2" />
<text  x="145.88" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="937.5" y="405" width="0.2" height="15.0" fill="rgb(232,169,41)" rx="2" ry="2" />
<text  x="940.54" y="415.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (6 samples, 0.01%)</title><rect x="329.3" y="181" width="0.1" height="15.0" fill="rgb(253,136,47)" rx="2" ry="2" />
<text  x="332.26" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="24.3" y="389" width="0.1" height="15.0" fill="rgb(211,217,31)" rx="2" ry="2" />
<text  x="27.27" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (33 samples, 0.07%)</title><rect x="390.9" y="229" width="0.9" height="15.0" fill="rgb(240,47,1)" rx="2" ry="2" />
<text  x="393.94" y="239.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,594 samples, 3.35%)</title><rect x="781.2" y="341" width="39.5" height="15.0" fill="rgb(237,180,25)" rx="2" ry="2" />
<text  x="784.24" y="351.5" >ser..</text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (114 samples, 0.24%)</title><rect x="512.2" y="213" width="2.9" height="15.0" fill="rgb(236,49,45)" rx="2" ry="2" />
<text  x="515.25" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="542.7" y="389" width="0.3" height="15.0" fill="rgb(245,127,8)" rx="2" ry="2" />
<text  x="545.73" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (5 samples, 0.01%)</title><rect x="25.4" y="517" width="0.1" height="15.0" fill="rgb(244,197,14)" rx="2" ry="2" />
<text  x="28.36" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="784.7" y="309" width="0.1" height="15.0" fill="rgb(226,171,33)" rx="2" ry="2" />
<text  x="787.66" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (719 samples, 1.51%)</title><rect x="118.4" y="293" width="17.8" height="15.0" fill="rgb(223,228,49)" rx="2" ry="2" />
<text  x="121.38" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="837.1" y="277" width="0.2" height="15.0" fill="rgb(227,13,13)" rx="2" ry="2" />
<text  x="840.11" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (86 samples, 0.18%)</title><rect x="987.7" y="309" width="2.1" height="15.0" fill="rgb(211,47,46)" rx="2" ry="2" />
<text  x="990.69" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (179 samples, 0.38%)</title><rect x="756.3" y="421" width="4.5" height="15.0" fill="rgb(240,139,47)" rx="2" ry="2" />
<text  x="759.34" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="74.4" y="453" width="0.3" height="15.0" fill="rgb(216,8,40)" rx="2" ry="2" />
<text  x="77.40" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (38 samples, 0.08%)</title><rect x="315.6" y="181" width="1.0" height="15.0" fill="rgb(224,183,33)" rx="2" ry="2" />
<text  x="318.64" y="191.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (24 samples, 0.05%)</title><rect x="514.4" y="197" width="0.6" height="15.0" fill="rgb(241,209,30)" rx="2" ry="2" />
<text  x="517.40" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (150 samples, 0.31%)</title><rect x="37.0" y="469" width="3.7" height="15.0" fill="rgb(246,3,5)" rx="2" ry="2" />
<text  x="39.98" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (77 samples, 0.16%)</title><rect x="366.6" y="213" width="1.9" height="15.0" fill="rgb(227,37,38)" rx="2" ry="2" />
<text  x="369.55" y="223.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.02%)</title><rect x="20.9" y="309" width="0.3" height="15.0" fill="rgb(210,223,12)" rx="2" ry="2" />
<text  x="23.93" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="790.3" y="277" width="0.2" height="15.0" fill="rgb(225,149,43)" rx="2" ry="2" />
<text  x="793.31" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (40 samples, 0.08%)</title><rect x="742.2" y="389" width="1.0" height="15.0" fill="rgb(213,69,8)" rx="2" ry="2" />
<text  x="745.16" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,203 samples, 2.53%)</title><rect x="787.9" y="309" width="29.8" height="15.0" fill="rgb(222,209,50)" rx="2" ry="2" />
<text  x="790.90" y="319.5" >au..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (11 samples, 0.02%)</title><rect x="200.4" y="149" width="0.3" height="15.0" fill="rgb(210,206,29)" rx="2" ry="2" />
<text  x="203.44" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (29 samples, 0.06%)</title><rect x="577.5" y="357" width="0.8" height="15.0" fill="rgb(229,174,48)" rx="2" ry="2" />
<text  x="580.54" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,974 samples, 4.15%)</title><rect x="317.3" y="213" width="49.0" height="15.0" fill="rgb(221,107,22)" rx="2" ry="2" />
<text  x="320.35" y="223.5" >quer..</text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (7 samples, 0.01%)</title><rect x="611.2" y="437" width="0.1" height="15.0" fill="rgb(216,204,46)" rx="2" ry="2" />
<text  x="614.16" y="447.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (80 samples, 0.17%)</title><rect x="351.5" y="165" width="2.0" height="15.0" fill="rgb(213,50,38)" rx="2" ry="2" />
<text  x="354.49" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="756.2" y="405" width="0.1" height="15.0" fill="rgb(220,96,29)" rx="2" ry="2" />
<text  x="759.16" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="426.1" y="405" width="0.3" height="15.0" fill="rgb(212,178,36)" rx="2" ry="2" />
<text  x="429.12" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (33 samples, 0.07%)</title><rect x="312.1" y="181" width="0.9" height="15.0" fill="rgb(242,145,28)" rx="2" ry="2" />
<text  x="315.14" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (150 samples, 0.31%)</title><rect x="399.4" y="197" width="3.7" height="15.0" fill="rgb(233,97,1)" rx="2" ry="2" />
<text  x="402.36" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1096.0" y="277" width="0.3" height="15.0" fill="rgb(228,176,1)" rx="2" ry="2" />
<text  x="1099.04" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="963.3" y="373" width="0.2" height="15.0" fill="rgb(245,146,36)" rx="2" ry="2" />
<text  x="966.28" y="383.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="625.5" y="389" width="0.4" height="15.0" fill="rgb(242,212,11)" rx="2" ry="2" />
<text  x="628.53" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (11 samples, 0.02%)</title><rect x="810.0" y="85" width="0.3" height="15.0" fill="rgb(221,4,13)" rx="2" ry="2" />
<text  x="812.98" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (35 samples, 0.07%)</title><rect x="690.6" y="405" width="0.9" height="15.0" fill="rgb(228,120,52)" rx="2" ry="2" />
<text  x="693.60" y="415.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="415.8" y="261" width="0.5" height="15.0" fill="rgb(237,51,18)" rx="2" ry="2" />
<text  x="418.76" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (27 samples, 0.06%)</title><rect x="627.9" y="485" width="0.7" height="15.0" fill="rgb(233,228,34)" rx="2" ry="2" />
<text  x="630.89" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="126.1" y="245" width="0.2" height="15.0" fill="rgb(223,114,9)" rx="2" ry="2" />
<text  x="129.13" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="878.8" y="469" width="0.3" height="15.0" fill="rgb(205,207,22)" rx="2" ry="2" />
<text  x="881.79" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (6 samples, 0.01%)</title><rect x="815.8" y="277" width="0.1" height="15.0" fill="rgb(246,30,33)" rx="2" ry="2" />
<text  x="818.78" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (109 samples, 0.23%)</title><rect x="233.2" y="197" width="2.7" height="15.0" fill="rgb(236,190,1)" rx="2" ry="2" />
<text  x="236.20" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (14 samples, 0.03%)</title><rect x="670.6" y="469" width="0.3" height="15.0" fill="rgb(224,225,21)" rx="2" ry="2" />
<text  x="673.58" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (12 samples, 0.03%)</title><rect x="710.2" y="421" width="0.3" height="15.0" fill="rgb(215,110,46)" rx="2" ry="2" />
<text  x="713.25" y="431.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (8 samples, 0.02%)</title><rect x="1099.2" y="309" width="0.2" height="15.0" fill="rgb(241,110,31)" rx="2" ry="2" />
<text  x="1102.24" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (30 samples, 0.06%)</title><rect x="1043.1" y="261" width="0.7" height="15.0" fill="rgb(234,150,8)" rx="2" ry="2" />
<text  x="1046.09" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (12 samples, 0.03%)</title><rect x="948.4" y="405" width="0.3" height="15.0" fill="rgb(231,137,26)" rx="2" ry="2" />
<text  x="951.37" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%)</title><rect x="390.1" y="197" width="0.6" height="15.0" fill="rgb(232,227,2)" rx="2" ry="2" />
<text  x="393.14" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (28 samples, 0.06%)</title><rect x="211.7" y="149" width="0.7" height="15.0" fill="rgb(235,88,22)" rx="2" ry="2" />
<text  x="214.69" y="159.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="523.0" y="325" width="0.8" height="15.0" fill="rgb(215,66,21)" rx="2" ry="2" />
<text  x="526.03" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (14 samples, 0.03%)</title><rect x="1105.6" y="357" width="0.4" height="15.0" fill="rgb(206,123,12)" rx="2" ry="2" />
<text  x="1108.63" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%)</title><rect x="814.4" y="213" width="0.2" height="15.0" fill="rgb(245,188,13)" rx="2" ry="2" />
<text  x="817.39" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (10 samples, 0.02%)</title><rect x="226.5" y="245" width="0.3" height="15.0" fill="rgb(214,94,26)" rx="2" ry="2" />
<text  x="229.53" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (7 samples, 0.01%)</title><rect x="424.6" y="405" width="0.2" height="15.0" fill="rgb(215,193,45)" rx="2" ry="2" />
<text  x="427.58" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (12 samples, 0.03%)</title><rect x="409.1" y="245" width="0.3" height="15.0" fill="rgb(242,229,5)" rx="2" ry="2" />
<text  x="412.12" y="255.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (6 samples, 0.01%)</title><rect x="392.1" y="229" width="0.2" height="15.0" fill="rgb(254,136,37)" rx="2" ry="2" />
<text  x="395.13" y="239.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="21.9" y="261" width="0.2" height="15.0" fill="rgb(208,172,30)" rx="2" ry="2" />
<text  x="24.94" y="271.5" ></text>
</g>
<g >
<title>database::find_uuid (166 samples, 0.35%)</title><rect x="831.3" y="357" width="4.2" height="15.0" fill="rgb(226,203,4)" rx="2" ry="2" />
<text  x="834.34" y="367.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="896.0" y="309" width="0.4" height="15.0" fill="rgb(237,160,32)" rx="2" ry="2" />
<text  x="898.96" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (23 samples, 0.05%)</title><rect x="1140.4" y="261" width="0.6" height="15.0" fill="rgb(208,79,34)" rx="2" ry="2" />
<text  x="1143.39" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="824.8" y="261" width="0.3" height="15.0" fill="rgb(243,189,29)" rx="2" ry="2" />
<text  x="827.80" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (8 samples, 0.02%)</title><rect x="511.6" y="197" width="0.2" height="15.0" fill="rgb(220,205,46)" rx="2" ry="2" />
<text  x="514.56" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (95 samples, 0.20%)</title><rect x="260.2" y="325" width="2.4" height="15.0" fill="rgb(232,175,4)" rx="2" ry="2" />
<text  x="263.21" y="335.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1139.4" y="469" width="0.7" height="15.0" fill="rgb(224,97,41)" rx="2" ry="2" />
<text  x="1142.43" y="479.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,533 samples, 97.71%)</title><rect x="25.1" y="597" width="1153.0" height="15.0" fill="rgb(235,175,41)" rx="2" ry="2" />
<text  x="28.09" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (19 samples, 0.04%)</title><rect x="460.6" y="325" width="0.5" height="15.0" fill="rgb(237,4,8)" rx="2" ry="2" />
<text  x="463.64" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (117 samples, 0.25%)</title><rect x="218.3" y="181" width="2.9" height="15.0" fill="rgb(238,203,21)" rx="2" ry="2" />
<text  x="221.28" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1139.4" y="437" width="0.7" height="15.0" fill="rgb(207,97,48)" rx="2" ry="2" />
<text  x="1142.43" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (212 samples, 0.45%)</title><rect x="707.8" y="453" width="5.3" height="15.0" fill="rgb(254,50,51)" rx="2" ry="2" />
<text  x="710.82" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (98 samples, 0.21%)</title><rect x="1129.4" y="405" width="2.4" height="15.0" fill="rgb(241,4,30)" rx="2" ry="2" />
<text  x="1132.39" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (49 samples, 0.10%)</title><rect x="1023.5" y="213" width="1.3" height="15.0" fill="rgb(206,71,47)" rx="2" ry="2" />
<text  x="1026.54" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="871.6" y="501" width="0.3" height="15.0" fill="rgb(223,25,48)" rx="2" ry="2" />
<text  x="874.55" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="462.0" y="325" width="0.2" height="15.0" fill="rgb(237,221,18)" rx="2" ry="2" />
<text  x="465.02" y="335.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="149.0" y="197" width="0.5" height="15.0" fill="rgb(214,31,29)" rx="2" ry="2" />
<text  x="151.98" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,198 samples, 15.11%)</title><rect x="103.4" y="405" width="178.4" height="15.0" fill="rgb(243,20,6)" rx="2" ry="2" />
<text  x="106.41" y="415.5" >flat_mutation_reader::p..</text>
</g>
<g >
<title>[unknown] (271 samples, 0.57%)</title><rect x="10.4" y="597" width="6.7" height="15.0" fill="rgb(231,195,32)" rx="2" ry="2" />
<text  x="13.37" y="607.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (25 samples, 0.05%)</title><rect x="41.2" y="453" width="0.6" height="15.0" fill="rgb(254,102,10)" rx="2" ry="2" />
<text  x="44.17" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="915.7" y="341" width="0.2" height="15.0" fill="rgb(221,32,38)" rx="2" ry="2" />
<text  x="918.66" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (9 samples, 0.02%)</title><rect x="205.7" y="133" width="0.2" height="15.0" fill="rgb(233,110,54)" rx="2" ry="2" />
<text  x="208.70" y="143.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (180 samples, 0.38%)</title><rect x="473.0" y="277" width="4.4" height="15.0" fill="rgb(219,213,46)" rx="2" ry="2" />
<text  x="475.98" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="659.7" y="469" width="0.3" height="15.0" fill="rgb(221,73,12)" rx="2" ry="2" />
<text  x="662.68" y="479.5" ></text>
</g>
<g >
<title>local_schema_registry (5 samples, 0.01%)</title><rect x="963.2" y="373" width="0.1" height="15.0" fill="rgb(232,197,25)" rx="2" ry="2" />
<text  x="966.16" y="383.5" ></text>
</g>
<g >
<title>dht::shard_of (6 samples, 0.01%)</title><rect x="1002.6" y="293" width="0.1" height="15.0" fill="rgb(213,46,39)" rx="2" ry="2" />
<text  x="1005.55" y="303.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="330.8" y="181" width="0.2" height="15.0" fill="rgb(210,150,52)" rx="2" ry="2" />
<text  x="333.80" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (25 samples, 0.05%)</title><rect x="1096.7" y="293" width="0.7" height="15.0" fill="rgb(211,217,7)" rx="2" ry="2" />
<text  x="1099.74" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="519.7" y="293" width="0.2" height="15.0" fill="rgb(236,134,34)" rx="2" ry="2" />
<text  x="522.71" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (46 samples, 0.10%)</title><rect x="942.0" y="373" width="1.2" height="15.0" fill="rgb(238,161,37)" rx="2" ry="2" />
<text  x="945.02" y="383.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="672.7" y="469" width="0.5" height="15.0" fill="rgb(213,56,47)" rx="2" ry="2" />
<text  x="675.74" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (52 samples, 0.11%)</title><rect x="762.4" y="341" width="1.3" height="15.0" fill="rgb(253,207,2)" rx="2" ry="2" />
<text  x="765.43" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (61 samples, 0.13%)</title><rect x="18.4" y="373" width="1.5" height="15.0" fill="rgb(254,144,41)" rx="2" ry="2" />
<text  x="21.37" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (17 samples, 0.04%)</title><rect x="696.8" y="453" width="0.4" height="15.0" fill="rgb(232,52,31)" rx="2" ry="2" />
<text  x="699.82" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (23 samples, 0.05%)</title><rect x="944.2" y="405" width="0.6" height="15.0" fill="rgb(252,135,29)" rx="2" ry="2" />
<text  x="947.23" y="415.5" ></text>
</g>
<g >
<title>row_tombstone::apply (19 samples, 0.04%)</title><rect x="389.6" y="213" width="0.5" height="15.0" fill="rgb(227,59,50)" rx="2" ry="2" />
<text  x="392.62" y="223.5" ></text>
</g>
<g >
<title>operator delete (52 samples, 0.11%)</title><rect x="692.2" y="485" width="1.3" height="15.0" fill="rgb(226,143,36)" rx="2" ry="2" />
<text  x="695.19" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (6 samples, 0.01%)</title><rect x="818.0" y="309" width="0.2" height="15.0" fill="rgb(228,40,15)" rx="2" ry="2" />
<text  x="821.03" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (556 samples, 1.17%)</title><rect x="227.6" y="261" width="13.8" height="15.0" fill="rgb(215,109,42)" rx="2" ry="2" />
<text  x="230.65" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="1076.2" y="293" width="0.5" height="15.0" fill="rgb(228,4,50)" rx="2" ry="2" />
<text  x="1079.24" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (288 samples, 0.60%)</title><rect x="17.5" y="581" width="7.1" height="15.0" fill="rgb(246,171,10)" rx="2" ry="2" />
<text  x="20.46" y="591.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (280 samples, 0.59%)</title><rect x="632.6" y="501" width="6.9" height="15.0" fill="rgb(234,54,50)" rx="2" ry="2" />
<text  x="635.60" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (41 samples, 0.09%)</title><rect x="690.5" y="501" width="1.0" height="15.0" fill="rgb(238,47,12)" rx="2" ry="2" />
<text  x="693.48" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="511.0" y="181" width="0.6" height="15.0" fill="rgb(213,159,24)" rx="2" ry="2" />
<text  x="513.96" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="459.5" y="277" width="0.6" height="15.0" fill="rgb(241,110,53)" rx="2" ry="2" />
<text  x="462.52" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%)</title><rect x="826.8" y="373" width="0.2" height="15.0" fill="rgb(210,18,29)" rx="2" ry="2" />
<text  x="829.80" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (455 samples, 0.96%)</title><rect x="577.0" y="389" width="11.3" height="15.0" fill="rgb(224,111,36)" rx="2" ry="2" />
<text  x="580.02" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (19 samples, 0.04%)</title><rect x="751.0" y="293" width="0.5" height="15.0" fill="rgb(217,113,9)" rx="2" ry="2" />
<text  x="753.98" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1077.5" y="293" width="0.1" height="15.0" fill="rgb(215,64,32)" rx="2" ry="2" />
<text  x="1080.48" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="760.5" y="405" width="0.2" height="15.0" fill="rgb(208,22,23)" rx="2" ry="2" />
<text  x="763.50" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1076.8" y="293" width="0.4" height="15.0" fill="rgb(205,204,2)" rx="2" ry="2" />
<text  x="1079.81" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (11 samples, 0.02%)</title><rect x="18.4" y="293" width="0.2" height="15.0" fill="rgb(228,49,7)" rx="2" ry="2" />
<text  x="21.37" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (40 samples, 0.08%)</title><rect x="593.3" y="421" width="1.0" height="15.0" fill="rgb(218,47,34)" rx="2" ry="2" />
<text  x="596.30" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.07%)</title><rect x="841.1" y="405" width="0.8" height="15.0" fill="rgb(213,133,25)" rx="2" ry="2" />
<text  x="844.13" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="616.5" y="437" width="0.1" height="15.0" fill="rgb(249,174,43)" rx="2" ry="2" />
<text  x="619.46" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (11 samples, 0.02%)</title><rect x="727.1" y="453" width="0.3" height="15.0" fill="rgb(248,87,5)" rx="2" ry="2" />
<text  x="730.15" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (6 samples, 0.01%)</title><rect x="245.8" y="277" width="0.2" height="15.0" fill="rgb(228,80,6)" rx="2" ry="2" />
<text  x="248.81" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (35 samples, 0.07%)</title><rect x="66.7" y="389" width="0.8" height="15.0" fill="rgb(230,159,52)" rx="2" ry="2" />
<text  x="69.67" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,483 samples, 22.01%)</title><rect x="879.3" y="469" width="259.8" height="15.0" fill="rgb(247,117,37)" rx="2" ry="2" />
<text  x="882.31" y="479.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (32 samples, 0.07%)</title><rect x="873.8" y="421" width="0.8" height="15.0" fill="rgb(247,167,15)" rx="2" ry="2" />
<text  x="876.83" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (7 samples, 0.01%)</title><rect x="317.5" y="197" width="0.2" height="15.0" fill="rgb(229,83,7)" rx="2" ry="2" />
<text  x="320.52" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (7 samples, 0.01%)</title><rect x="241.3" y="245" width="0.1" height="15.0" fill="rgb(227,206,45)" rx="2" ry="2" />
<text  x="244.25" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="935.1" y="389" width="0.5" height="15.0" fill="rgb(239,8,25)" rx="2" ry="2" />
<text  x="938.08" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,532 samples, 97.71%)</title><rect x="25.1" y="533" width="1153.0" height="15.0" fill="rgb(246,162,2)" rx="2" ry="2" />
<text  x="28.09" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (104 samples, 0.22%)</title><rect x="679.5" y="485" width="2.6" height="15.0" fill="rgb(233,120,13)" rx="2" ry="2" />
<text  x="682.55" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="786.9" y="325" width="0.2" height="15.0" fill="rgb(253,213,27)" rx="2" ry="2" />
<text  x="789.94" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (12 samples, 0.03%)</title><rect x="754.5" y="357" width="0.3" height="15.0" fill="rgb(205,41,42)" rx="2" ry="2" />
<text  x="757.50" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (25 samples, 0.05%)</title><rect x="873.0" y="501" width="0.6" height="15.0" fill="rgb(252,199,27)" rx="2" ry="2" />
<text  x="875.97" y="511.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%)</title><rect x="1099.3" y="293" width="0.1" height="15.0" fill="rgb(250,160,30)" rx="2" ry="2" />
<text  x="1102.29" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="644.5" y="485" width="0.2" height="15.0" fill="rgb(224,228,10)" rx="2" ry="2" />
<text  x="647.54" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="20.1" y="341" width="0.1" height="15.0" fill="rgb(221,111,38)" rx="2" ry="2" />
<text  x="23.06" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (285 samples, 0.60%)</title><rect x="182.3" y="85" width="7.1" height="15.0" fill="rgb(218,110,7)" rx="2" ry="2" />
<text  x="185.33" y="95.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.01%)</title><rect x="23.5" y="389" width="0.1" height="15.0" fill="rgb(232,192,20)" rx="2" ry="2" />
<text  x="26.45" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (133 samples, 0.28%)</title><rect x="982.8" y="341" width="3.3" height="15.0" fill="rgb(212,208,14)" rx="2" ry="2" />
<text  x="985.81" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="760.3" y="405" width="0.1" height="15.0" fill="rgb(205,215,47)" rx="2" ry="2" />
<text  x="763.28" y="415.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="589.0" y="389" width="0.7" height="15.0" fill="rgb(236,165,32)" rx="2" ry="2" />
<text  x="591.96" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="583.7" y="341" width="0.3" height="15.0" fill="rgb(231,76,47)" rx="2" ry="2" />
<text  x="586.71" y="351.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="637.5" y="469" width="0.6" height="15.0" fill="rgb(230,65,43)" rx="2" ry="2" />
<text  x="640.50" y="479.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="32.8" y="485" width="0.6" height="15.0" fill="rgb(237,33,43)" rx="2" ry="2" />
<text  x="35.80" y="495.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (13 samples, 0.03%)</title><rect x="235.0" y="165" width="0.3" height="15.0" fill="rgb(213,85,13)" rx="2" ry="2" />
<text  x="237.96" y="175.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (49 samples, 0.10%)</title><rect x="510.6" y="213" width="1.2" height="15.0" fill="rgb(233,179,42)" rx="2" ry="2" />
<text  x="513.59" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%)</title><rect x="326.3" y="165" width="0.1" height="15.0" fill="rgb(212,168,33)" rx="2" ry="2" />
<text  x="329.32" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (7 samples, 0.01%)</title><rect x="537.6" y="293" width="0.1" height="15.0" fill="rgb(225,43,28)" rx="2" ry="2" />
<text  x="540.57" y="303.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (7 samples, 0.01%)</title><rect x="313.0" y="181" width="0.1" height="15.0" fill="rgb(219,142,28)" rx="2" ry="2" />
<text  x="315.96" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1115.9" y="341" width="0.2" height="15.0" fill="rgb(246,215,25)" rx="2" ry="2" />
<text  x="1118.94" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (21 samples, 0.04%)</title><rect x="518.0" y="277" width="0.5" height="15.0" fill="rgb(231,118,48)" rx="2" ry="2" />
<text  x="521.00" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (6 samples, 0.01%)</title><rect x="1030.2" y="149" width="0.2" height="15.0" fill="rgb(209,16,14)" rx="2" ry="2" />
<text  x="1033.23" y="159.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (19 samples, 0.04%)</title><rect x="214.8" y="165" width="0.4" height="15.0" fill="rgb(251,12,48)" rx="2" ry="2" />
<text  x="217.76" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (103 samples, 0.22%)</title><rect x="940.6" y="405" width="2.6" height="15.0" fill="rgb(252,31,7)" rx="2" ry="2" />
<text  x="943.61" y="415.5" ></text>
</g>
<g >
<title>dht::tri_compare (118 samples, 0.25%)</title><rect x="1087.1" y="229" width="3.0" height="15.0" fill="rgb(234,205,13)" rx="2" ry="2" />
<text  x="1090.15" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (251 samples, 0.53%)</title><rect x="126.4" y="261" width="6.2" height="15.0" fill="rgb(251,94,30)" rx="2" ry="2" />
<text  x="129.38" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (12 samples, 0.03%)</title><rect x="1042.7" y="261" width="0.3" height="15.0" fill="rgb(246,83,4)" rx="2" ry="2" />
<text  x="1045.72" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.03%)</title><rect x="854.9" y="405" width="0.3" height="15.0" fill="rgb(240,70,37)" rx="2" ry="2" />
<text  x="857.85" y="415.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%)</title><rect x="389.9" y="181" width="0.2" height="15.0" fill="rgb(253,64,12)" rx="2" ry="2" />
<text  x="392.94" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (117 samples, 0.25%)</title><rect x="619.3" y="421" width="2.9" height="15.0" fill="rgb(244,61,26)" rx="2" ry="2" />
<text  x="622.26" y="431.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,587 samples, 9.63%)</title><rect x="427.7" y="405" width="113.6" height="15.0" fill="rgb(212,96,31)" rx="2" ry="2" />
<text  x="430.68" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (16 samples, 0.03%)</title><rect x="33.8" y="469" width="0.4" height="15.0" fill="rgb(209,19,12)" rx="2" ry="2" />
<text  x="36.76" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (48 samples, 0.10%)</title><rect x="1147.6" y="485" width="1.2" height="15.0" fill="rgb(229,159,24)" rx="2" ry="2" />
<text  x="1150.63" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (38 samples, 0.08%)</title><rect x="301.5" y="213" width="1.0" height="15.0" fill="rgb(215,152,0)" rx="2" ry="2" />
<text  x="304.54" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (413 samples, 0.87%)</title><rect x="1025.5" y="229" width="10.2" height="15.0" fill="rgb(231,225,38)" rx="2" ry="2" />
<text  x="1028.50" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="986.4" y="341" width="0.4" height="15.0" fill="rgb(238,113,26)" rx="2" ry="2" />
<text  x="989.45" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="417.3" y="325" width="0.2" height="15.0" fill="rgb(208,178,36)" rx="2" ry="2" />
<text  x="420.25" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (49 samples, 0.10%)</title><rect x="697.4" y="453" width="1.2" height="15.0" fill="rgb(224,87,6)" rx="2" ry="2" />
<text  x="700.41" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="626.3" y="373" width="0.3" height="15.0" fill="rgb(227,44,3)" rx="2" ry="2" />
<text  x="629.30" y="383.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%)</title><rect x="446.5" y="245" width="1.4" height="15.0" fill="rgb(228,19,25)" rx="2" ry="2" />
<text  x="449.46" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (27 samples, 0.06%)</title><rect x="776.2" y="373" width="0.7" height="15.0" fill="rgb(208,22,20)" rx="2" ry="2" />
<text  x="779.21" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="501.7" y="277" width="1.0" height="15.0" fill="rgb(216,71,25)" rx="2" ry="2" />
<text  x="504.72" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (6 samples, 0.01%)</title><rect x="1065.0" y="309" width="0.2" height="15.0" fill="rgb(248,69,25)" rx="2" ry="2" />
<text  x="1068.04" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (11 samples, 0.02%)</title><rect x="38.1" y="421" width="0.2" height="15.0" fill="rgb(240,28,39)" rx="2" ry="2" />
<text  x="41.07" y="431.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (5 samples, 0.01%)</title><rect x="306.3" y="197" width="0.1" height="15.0" fill="rgb(207,55,13)" rx="2" ry="2" />
<text  x="309.29" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.01%)</title><rect x="105.6" y="373" width="0.1" height="15.0" fill="rgb(244,37,41)" rx="2" ry="2" />
<text  x="108.59" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (29 samples, 0.06%)</title><rect x="946.9" y="373" width="0.7" height="15.0" fill="rgb(253,182,5)" rx="2" ry="2" />
<text  x="949.85" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="864.3" y="405" width="0.5" height="15.0" fill="rgb(227,102,14)" rx="2" ry="2" />
<text  x="867.27" y="415.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.12%)</title><rect x="723.5" y="421" width="1.4" height="15.0" fill="rgb(213,93,41)" rx="2" ry="2" />
<text  x="726.53" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (30 samples, 0.06%)</title><rect x="700.7" y="485" width="0.8" height="15.0" fill="rgb(248,167,4)" rx="2" ry="2" />
<text  x="703.71" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="484.7" y="197" width="0.7" height="15.0" fill="rgb(218,41,53)" rx="2" ry="2" />
<text  x="487.70" y="207.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (446 samples, 0.94%)</title><rect x="479.5" y="277" width="11.0" height="15.0" fill="rgb(215,43,6)" rx="2" ry="2" />
<text  x="482.49" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (68 samples, 0.14%)</title><rect x="296.7" y="261" width="1.7" height="15.0" fill="rgb(237,212,24)" rx="2" ry="2" />
<text  x="299.68" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="764.2" y="357" width="0.2" height="15.0" fill="rgb(252,141,25)" rx="2" ry="2" />
<text  x="767.19" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (7 samples, 0.01%)</title><rect x="18.4" y="229" width="0.2" height="15.0" fill="rgb(237,118,23)" rx="2" ry="2" />
<text  x="21.45" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (532 samples, 1.12%)</title><rect x="228.1" y="245" width="13.2" height="15.0" fill="rgb(207,39,32)" rx="2" ry="2" />
<text  x="231.07" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (72 samples, 0.15%)</title><rect x="577.2" y="373" width="1.8" height="15.0" fill="rgb(224,91,6)" rx="2" ry="2" />
<text  x="580.24" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (32 samples, 0.07%)</title><rect x="453.2" y="293" width="0.8" height="15.0" fill="rgb(216,168,7)" rx="2" ry="2" />
<text  x="456.20" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="856.7" y="341" width="0.4" height="15.0" fill="rgb(241,96,49)" rx="2" ry="2" />
<text  x="859.66" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (6 samples, 0.01%)</title><rect x="993.0" y="245" width="0.2" height="15.0" fill="rgb(250,126,29)" rx="2" ry="2" />
<text  x="996.04" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="548.1" y="357" width="0.1" height="15.0" fill="rgb(253,206,47)" rx="2" ry="2" />
<text  x="551.10" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1144.1" y="501" width="0.1" height="15.0" fill="rgb(231,216,22)" rx="2" ry="2" />
<text  x="1147.11" y="511.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (8 samples, 0.02%)</title><rect x="1131.9" y="421" width="0.2" height="15.0" fill="rgb(229,74,4)" rx="2" ry="2" />
<text  x="1134.92" y="431.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="640.0" y="485" width="0.4" height="15.0" fill="rgb(243,168,48)" rx="2" ry="2" />
<text  x="642.95" y="495.5" ></text>
</g>
<g >
<title>operator delete (67 samples, 0.14%)</title><rect x="567.9" y="293" width="1.7" height="15.0" fill="rgb(209,26,35)" rx="2" ry="2" />
<text  x="570.92" y="303.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%)</title><rect x="715.1" y="405" width="0.2" height="15.0" fill="rgb(239,214,18)" rx="2" ry="2" />
<text  x="718.13" y="415.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (6 samples, 0.01%)</title><rect x="995.0" y="325" width="0.2" height="15.0" fill="rgb(208,215,26)" rx="2" ry="2" />
<text  x="998.05" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (53 samples, 0.11%)</title><rect x="762.4" y="357" width="1.3" height="15.0" fill="rgb(246,177,50)" rx="2" ry="2" />
<text  x="765.41" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (13 samples, 0.03%)</title><rect x="1065.2" y="325" width="0.3" height="15.0" fill="rgb(236,191,13)" rx="2" ry="2" />
<text  x="1068.19" y="335.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.02%)</title><rect x="838.0" y="405" width="0.2" height="15.0" fill="rgb(229,154,40)" rx="2" ry="2" />
<text  x="840.95" y="415.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (11 samples, 0.02%)</title><rect x="419.2" y="341" width="0.3" height="15.0" fill="rgb(250,164,25)" rx="2" ry="2" />
<text  x="422.21" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,362 samples, 97.35%)</title><rect x="27.6" y="517" width="1148.8" height="15.0" fill="rgb(246,199,0)" rx="2" ry="2" />
<text  x="30.62" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (11 samples, 0.02%)</title><rect x="562.0" y="325" width="0.3" height="15.0" fill="rgb(215,39,27)" rx="2" ry="2" />
<text  x="564.98" y="335.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (13,112 samples, 27.53%)</title><rect x="100.2" y="421" width="324.9" height="15.0" fill="rgb(226,121,0)" rx="2" ry="2" />
<text  x="103.19" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%)</title><rect x="163.2" y="149" width="0.6" height="15.0" fill="rgb(233,185,16)" rx="2" ry="2" />
<text  x="166.23" y="159.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (22 samples, 0.05%)</title><rect x="559.3" y="341" width="0.5" height="15.0" fill="rgb(248,174,21)" rx="2" ry="2" />
<text  x="562.25" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="656.2" y="437" width="0.4" height="15.0" fill="rgb(214,131,41)" rx="2" ry="2" />
<text  x="659.18" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (30 samples, 0.06%)</title><rect x="1126.2" y="421" width="0.7" height="15.0" fill="rgb(237,131,49)" rx="2" ry="2" />
<text  x="1129.20" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (18 samples, 0.04%)</title><rect x="685.6" y="453" width="0.5" height="15.0" fill="rgb(248,69,47)" rx="2" ry="2" />
<text  x="688.62" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (29 samples, 0.06%)</title><rect x="286.6" y="373" width="0.7" height="15.0" fill="rgb(205,48,37)" rx="2" ry="2" />
<text  x="289.57" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="348.5" y="165" width="0.2" height="15.0" fill="rgb(240,81,24)" rx="2" ry="2" />
<text  x="351.49" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (47 samples, 0.10%)</title><rect x="219.5" y="149" width="1.2" height="15.0" fill="rgb(208,142,36)" rx="2" ry="2" />
<text  x="222.55" y="159.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (116 samples, 0.24%)</title><rect x="534.7" y="293" width="2.9" height="15.0" fill="rgb(232,69,39)" rx="2" ry="2" />
<text  x="537.70" y="303.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (39 samples, 0.08%)</title><rect x="752.8" y="261" width="1.0" height="15.0" fill="rgb(245,85,42)" rx="2" ry="2" />
<text  x="755.84" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (58 samples, 0.12%)</title><rect x="1161.2" y="453" width="1.4" height="15.0" fill="rgb(236,192,9)" rx="2" ry="2" />
<text  x="1164.16" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (303 samples, 0.64%)</title><rect x="443.5" y="293" width="7.5" height="15.0" fill="rgb(209,104,21)" rx="2" ry="2" />
<text  x="446.49" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.01%)</title><rect x="153.1" y="229" width="0.2" height="15.0" fill="rgb(242,197,7)" rx="2" ry="2" />
<text  x="156.12" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (37 samples, 0.08%)</title><rect x="590.7" y="421" width="0.9" height="15.0" fill="rgb(235,157,14)" rx="2" ry="2" />
<text  x="593.72" y="431.5" ></text>
</g>
<g >
<title>free (26 samples, 0.05%)</title><rect x="404.9" y="197" width="0.6" height="15.0" fill="rgb(217,106,1)" rx="2" ry="2" />
<text  x="407.89" y="207.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (20 samples, 0.04%)</title><rect x="151.9" y="213" width="0.5" height="15.0" fill="rgb(218,147,26)" rx="2" ry="2" />
<text  x="154.93" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (14 samples, 0.03%)</title><rect x="1057.1" y="341" width="0.3" height="15.0" fill="rgb(211,11,5)" rx="2" ry="2" />
<text  x="1060.07" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.01%)</title><rect x="699.4" y="437" width="0.2" height="15.0" fill="rgb(251,9,11)" rx="2" ry="2" />
<text  x="702.42" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (20 samples, 0.04%)</title><rect x="1116.2" y="373" width="0.5" height="15.0" fill="rgb(249,109,31)" rx="2" ry="2" />
<text  x="1119.16" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (16 samples, 0.03%)</title><rect x="902.5" y="309" width="0.3" height="15.0" fill="rgb(211,105,10)" rx="2" ry="2" />
<text  x="905.45" y="319.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.18%)</title><rect x="987.7" y="325" width="2.1" height="15.0" fill="rgb(211,147,15)" rx="2" ry="2" />
<text  x="990.66" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (76 samples, 0.16%)</title><rect x="1119.1" y="341" width="1.9" height="15.0" fill="rgb(209,1,27)" rx="2" ry="2" />
<text  x="1122.09" y="351.5" ></text>
</g>
<g >
<title>all (47,623 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(222,167,22)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,897 samples, 3.98%)</title><rect x="1004.6" y="293" width="47.0" height="15.0" fill="rgb(226,57,32)" rx="2" ry="2" />
<text  x="1007.61" y="303.5" >serv..</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (16 samples, 0.03%)</title><rect x="444.5" y="261" width="0.4" height="15.0" fill="rgb(213,193,21)" rx="2" ry="2" />
<text  x="447.46" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (62 samples, 0.13%)</title><rect x="1121.9" y="405" width="1.5" height="15.0" fill="rgb(206,159,33)" rx="2" ry="2" />
<text  x="1124.89" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (20 samples, 0.04%)</title><rect x="556.3" y="421" width="0.5" height="15.0" fill="rgb(230,94,18)" rx="2" ry="2" />
<text  x="559.30" y="431.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (266 samples, 0.56%)</title><rect x="17.9" y="517" width="6.6" height="15.0" fill="rgb(228,222,1)" rx="2" ry="2" />
<text  x="20.90" y="527.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (12 samples, 0.03%)</title><rect x="1139.6" y="277" width="0.3" height="15.0" fill="rgb(218,214,1)" rx="2" ry="2" />
<text  x="1142.63" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (26 samples, 0.05%)</title><rect x="410.2" y="229" width="0.7" height="15.0" fill="rgb(215,102,5)" rx="2" ry="2" />
<text  x="413.24" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="640.4" y="485" width="0.1" height="15.0" fill="rgb(206,139,16)" rx="2" ry="2" />
<text  x="643.43" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%)</title><rect x="311.9" y="165" width="0.2" height="15.0" fill="rgb(254,158,19)" rx="2" ry="2" />
<text  x="314.89" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (5 samples, 0.01%)</title><rect x="501.4" y="293" width="0.1" height="15.0" fill="rgb(233,146,45)" rx="2" ry="2" />
<text  x="504.37" y="303.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (28 samples, 0.06%)</title><rect x="468.6" y="293" width="0.7" height="15.0" fill="rgb(235,168,30)" rx="2" ry="2" />
<text  x="471.61" y="303.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="703.7" y="485" width="0.5" height="15.0" fill="rgb(237,57,31)" rx="2" ry="2" />
<text  x="706.66" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="428.8" y="373" width="0.1" height="15.0" fill="rgb(248,16,0)" rx="2" ry="2" />
<text  x="431.77" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (46 samples, 0.10%)</title><rect x="653.1" y="453" width="1.1" height="15.0" fill="rgb(227,163,49)" rx="2" ry="2" />
<text  x="656.09" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (64 samples, 0.13%)</title><rect x="749.2" y="325" width="1.6" height="15.0" fill="rgb(211,23,32)" rx="2" ry="2" />
<text  x="752.25" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="33.2" y="469" width="0.2" height="15.0" fill="rgb(239,173,15)" rx="2" ry="2" />
<text  x="36.24" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="452.9" y="293" width="0.2" height="15.0" fill="rgb(247,164,31)" rx="2" ry="2" />
<text  x="455.88" y="303.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="771.9" y="373" width="0.8" height="15.0" fill="rgb(252,124,48)" rx="2" ry="2" />
<text  x="774.92" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (9 samples, 0.02%)</title><rect x="198.1" y="117" width="0.2" height="15.0" fill="rgb(247,1,17)" rx="2" ry="2" />
<text  x="201.11" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (53 samples, 0.11%)</title><rect x="744.9" y="325" width="1.3" height="15.0" fill="rgb(245,131,52)" rx="2" ry="2" />
<text  x="747.86" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="991.9" y="277" width="0.1" height="15.0" fill="rgb(238,54,53)" rx="2" ry="2" />
<text  x="994.93" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%)</title><rect x="812.4" y="213" width="0.3" height="15.0" fill="rgb(243,84,27)" rx="2" ry="2" />
<text  x="815.36" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="609.2" y="437" width="0.2" height="15.0" fill="rgb(213,103,31)" rx="2" ry="2" />
<text  x="612.23" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (15 samples, 0.03%)</title><rect x="213.9" y="149" width="0.4" height="15.0" fill="rgb(235,183,19)" rx="2" ry="2" />
<text  x="216.90" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (94 samples, 0.20%)</title><rect x="954.7" y="389" width="2.3" height="15.0" fill="rgb(234,185,0)" rx="2" ry="2" />
<text  x="957.66" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (32 samples, 0.07%)</title><rect x="307.6" y="165" width="0.8" height="15.0" fill="rgb(233,132,19)" rx="2" ry="2" />
<text  x="310.63" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="906.1" y="357" width="0.2" height="15.0" fill="rgb(243,141,48)" rx="2" ry="2" />
<text  x="909.14" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="526.3" y="341" width="0.2" height="15.0" fill="rgb(205,5,20)" rx="2" ry="2" />
<text  x="529.32" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="688.7" y="485" width="0.4" height="15.0" fill="rgb(222,165,26)" rx="2" ry="2" />
<text  x="691.69" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="422.0" y="357" width="0.6" height="15.0" fill="rgb(245,83,15)" rx="2" ry="2" />
<text  x="424.96" y="367.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (13 samples, 0.03%)</title><rect x="561.5" y="293" width="0.3" height="15.0" fill="rgb(228,154,31)" rx="2" ry="2" />
<text  x="564.46" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (7 samples, 0.01%)</title><rect x="147.4" y="197" width="0.1" height="15.0" fill="rgb(207,208,28)" rx="2" ry="2" />
<text  x="150.37" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="669.0" y="469" width="0.1" height="15.0" fill="rgb(209,195,17)" rx="2" ry="2" />
<text  x="671.99" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="518.7" y="277" width="0.2" height="15.0" fill="rgb(235,51,5)" rx="2" ry="2" />
<text  x="521.69" y="287.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (10 samples, 0.02%)</title><rect x="1115.8" y="357" width="0.3" height="15.0" fill="rgb(234,85,16)" rx="2" ry="2" />
<text  x="1118.81" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="741.1" y="389" width="0.2" height="15.0" fill="rgb(232,16,17)" rx="2" ry="2" />
<text  x="744.07" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="548.2" y="373" width="0.3" height="15.0" fill="rgb(212,72,42)" rx="2" ry="2" />
<text  x="551.23" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (114 samples, 0.24%)</title><rect x="358.7" y="165" width="2.8" height="15.0" fill="rgb(252,153,5)" rx="2" ry="2" />
<text  x="361.72" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (14 samples, 0.03%)</title><rect x="1148.8" y="485" width="0.4" height="15.0" fill="rgb(205,119,11)" rx="2" ry="2" />
<text  x="1151.82" y="495.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="208.4" y="181" width="0.2" height="15.0" fill="rgb(222,119,50)" rx="2" ry="2" />
<text  x="211.45" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,640 samples, 11.84%)</title><rect x="725.8" y="469" width="139.7" height="15.0" fill="rgb(221,42,11)" rx="2" ry="2" />
<text  x="728.76" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (14 samples, 0.03%)</title><rect x="423.4" y="373" width="0.3" height="15.0" fill="rgb(206,139,46)" rx="2" ry="2" />
<text  x="426.37" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (20 samples, 0.04%)</title><rect x="698.6" y="453" width="0.5" height="15.0" fill="rgb(246,84,9)" rx="2" ry="2" />
<text  x="701.63" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (14 samples, 0.03%)</title><rect x="850.4" y="341" width="0.4" height="15.0" fill="rgb(218,160,12)" rx="2" ry="2" />
<text  x="853.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (39 samples, 0.08%)</title><rect x="1019.3" y="229" width="0.9" height="15.0" fill="rgb(242,218,50)" rx="2" ry="2" />
<text  x="1022.26" y="239.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (6 samples, 0.01%)</title><rect x="215.1" y="149" width="0.1" height="15.0" fill="rgb(209,157,51)" rx="2" ry="2" />
<text  x="218.09" y="159.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="825.8" y="373" width="0.9" height="15.0" fill="rgb(219,197,47)" rx="2" ry="2" />
<text  x="828.79" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (11 samples, 0.02%)</title><rect x="364.2" y="197" width="0.3" height="15.0" fill="rgb(232,84,29)" rx="2" ry="2" />
<text  x="367.20" y="207.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (20 samples, 0.04%)</title><rect x="573.3" y="293" width="0.5" height="15.0" fill="rgb(230,140,30)" rx="2" ry="2" />
<text  x="576.28" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (58 samples, 0.12%)</title><rect x="285.1" y="373" width="1.5" height="15.0" fill="rgb(222,100,49)" rx="2" ry="2" />
<text  x="288.13" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.04%)</title><rect x="774.9" y="325" width="0.4" height="15.0" fill="rgb(226,161,29)" rx="2" ry="2" />
<text  x="777.92" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (323 samples, 0.68%)</title><rect x="63.8" y="421" width="8.0" height="15.0" fill="rgb(252,106,17)" rx="2" ry="2" />
<text  x="66.79" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="437.5" y="341" width="0.1" height="15.0" fill="rgb(253,226,3)" rx="2" ry="2" />
<text  x="440.52" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (119 samples, 0.25%)</title><rect x="1010.5" y="261" width="3.0" height="15.0" fill="rgb(249,70,15)" rx="2" ry="2" />
<text  x="1013.51" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (5 samples, 0.01%)</title><rect x="573.6" y="261" width="0.2" height="15.0" fill="rgb(237,11,11)" rx="2" ry="2" />
<text  x="576.65" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (31 samples, 0.07%)</title><rect x="656.0" y="469" width="0.7" height="15.0" fill="rgb(243,169,45)" rx="2" ry="2" />
<text  x="658.96" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (18 samples, 0.04%)</title><rect x="69.5" y="389" width="0.5" height="15.0" fill="rgb(216,194,24)" rx="2" ry="2" />
<text  x="72.52" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (14 samples, 0.03%)</title><rect x="213.0" y="117" width="0.3" height="15.0" fill="rgb(240,120,38)" rx="2" ry="2" />
<text  x="215.98" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (6 samples, 0.01%)</title><rect x="448.0" y="261" width="0.1" height="15.0" fill="rgb(225,168,38)" rx="2" ry="2" />
<text  x="450.95" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (12 samples, 0.03%)</title><rect x="873.0" y="389" width="0.3" height="15.0" fill="rgb(253,63,3)" rx="2" ry="2" />
<text  x="876.04" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="43.1" y="469" width="0.5" height="15.0" fill="rgb(208,45,21)" rx="2" ry="2" />
<text  x="46.08" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (83 samples, 0.17%)</title><rect x="656.7" y="469" width="2.1" height="15.0" fill="rgb(241,107,47)" rx="2" ry="2" />
<text  x="659.73" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="421.8" y="357" width="0.2" height="15.0" fill="rgb(245,59,20)" rx="2" ry="2" />
<text  x="424.83" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (74 samples, 0.16%)</title><rect x="757.1" y="405" width="1.9" height="15.0" fill="rgb(239,17,30)" rx="2" ry="2" />
<text  x="760.13" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="450.8" y="261" width="0.2" height="15.0" fill="rgb(213,161,38)" rx="2" ry="2" />
<text  x="453.85" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%)</title><rect x="24.8" y="437" width="0.1" height="15.0" fill="rgb(233,218,21)" rx="2" ry="2" />
<text  x="27.79" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%)</title><rect x="24.7" y="517" width="0.3" height="15.0" fill="rgb(251,132,23)" rx="2" ry="2" />
<text  x="27.69" y="527.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%)</title><rect x="957.2" y="405" width="0.3" height="15.0" fill="rgb(219,169,33)" rx="2" ry="2" />
<text  x="960.16" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="856.9" y="325" width="0.2" height="15.0" fill="rgb(236,196,14)" rx="2" ry="2" />
<text  x="859.91" y="335.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="804.0" y="117" width="0.1" height="15.0" fill="rgb(229,121,43)" rx="2" ry="2" />
<text  x="806.98" y="127.5" ></text>
</g>
<g >
<title>do_cql_test (279 samples, 0.59%)</title><rect x="17.7" y="549" width="6.9" height="15.0" fill="rgb(230,140,30)" rx="2" ry="2" />
<text  x="20.68" y="559.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="489.8" y="213" width="0.2" height="15.0" fill="rgb(253,78,16)" rx="2" ry="2" />
<text  x="492.85" y="223.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (245 samples, 0.51%)</title><rect x="730.6" y="421" width="6.0" height="15.0" fill="rgb(231,130,0)" rx="2" ry="2" />
<text  x="733.57" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (23 samples, 0.05%)</title><rect x="857.3" y="357" width="0.6" height="15.0" fill="rgb(225,120,5)" rx="2" ry="2" />
<text  x="860.31" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (12 samples, 0.03%)</title><rect x="252.7" y="277" width="0.3" height="15.0" fill="rgb(223,115,23)" rx="2" ry="2" />
<text  x="255.70" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (30 samples, 0.06%)</title><rect x="945.9" y="389" width="0.8" height="15.0" fill="rgb(243,90,12)" rx="2" ry="2" />
<text  x="948.91" y="399.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (43 samples, 0.09%)</title><rect x="834.2" y="309" width="1.1" height="15.0" fill="rgb(233,149,20)" rx="2" ry="2" />
<text  x="837.24" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="660.8" y="485" width="0.1" height="15.0" fill="rgb(235,110,42)" rx="2" ry="2" />
<text  x="663.77" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="998.0" y="245" width="1.8" height="15.0" fill="rgb(223,173,28)" rx="2" ry="2" />
<text  x="1001.02" y="255.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (30 samples, 0.06%)</title><rect x="746.5" y="373" width="0.8" height="15.0" fill="rgb(215,29,33)" rx="2" ry="2" />
<text  x="749.55" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (151 samples, 0.32%)</title><rect x="549.0" y="373" width="3.7" height="15.0" fill="rgb(230,123,32)" rx="2" ry="2" />
<text  x="551.97" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (24 samples, 0.05%)</title><rect x="402.3" y="165" width="0.6" height="15.0" fill="rgb(242,103,7)" rx="2" ry="2" />
<text  x="405.26" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="567.8" y="293" width="0.1" height="15.0" fill="rgb(231,215,44)" rx="2" ry="2" />
<text  x="570.78" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%)</title><rect x="213.6" y="149" width="0.2" height="15.0" fill="rgb(219,18,46)" rx="2" ry="2" />
<text  x="216.58" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (11 samples, 0.02%)</title><rect x="453.7" y="277" width="0.3" height="15.0" fill="rgb(249,225,31)" rx="2" ry="2" />
<text  x="456.72" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (74 samples, 0.16%)</title><rect x="861.3" y="373" width="1.8" height="15.0" fill="rgb(235,169,49)" rx="2" ry="2" />
<text  x="864.27" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (45 samples, 0.09%)</title><rect x="604.4" y="389" width="1.2" height="15.0" fill="rgb(212,163,8)" rx="2" ry="2" />
<text  x="607.45" y="399.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (5 samples, 0.01%)</title><rect x="1124.9" y="421" width="0.1" height="15.0" fill="rgb(219,58,4)" rx="2" ry="2" />
<text  x="1127.88" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="673.0" y="453" width="0.2" height="15.0" fill="rgb(252,5,27)" rx="2" ry="2" />
<text  x="676.03" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="1072.3" y="325" width="0.3" height="15.0" fill="rgb(251,140,46)" rx="2" ry="2" />
<text  x="1075.33" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (19 samples, 0.04%)</title><rect x="573.3" y="277" width="0.5" height="15.0" fill="rgb(248,114,19)" rx="2" ry="2" />
<text  x="576.30" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (618 samples, 1.30%)</title><rect x="373.6" y="181" width="15.3" height="15.0" fill="rgb(236,92,32)" rx="2" ry="2" />
<text  x="376.57" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="141.0" y="261" width="0.1" height="15.0" fill="rgb(249,98,21)" rx="2" ry="2" />
<text  x="144.03" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (31 samples, 0.07%)</title><rect x="803.6" y="149" width="0.8" height="15.0" fill="rgb(236,4,10)" rx="2" ry="2" />
<text  x="806.59" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="939.1" y="357" width="0.7" height="15.0" fill="rgb(248,111,51)" rx="2" ry="2" />
<text  x="942.15" y="367.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="89.1" y="437" width="0.6" height="15.0" fill="rgb(246,137,48)" rx="2" ry="2" />
<text  x="92.07" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="590.6" y="421" width="0.1" height="15.0" fill="rgb(229,203,2)" rx="2" ry="2" />
<text  x="593.60" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (16 samples, 0.03%)</title><rect x="67.7" y="389" width="0.4" height="15.0" fill="rgb(218,4,35)" rx="2" ry="2" />
<text  x="70.68" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (135 samples, 0.28%)</title><rect x="832.0" y="325" width="3.3" height="15.0" fill="rgb(232,4,35)" rx="2" ry="2" />
<text  x="834.96" y="335.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="138.0" y="261" width="0.2" height="15.0" fill="rgb(230,210,31)" rx="2" ry="2" />
<text  x="141.03" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (110 samples, 0.23%)</title><rect x="722.7" y="453" width="2.8" height="15.0" fill="rgb(222,62,21)" rx="2" ry="2" />
<text  x="725.74" y="463.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (53 samples, 0.11%)</title><rect x="900.4" y="293" width="1.3" height="15.0" fill="rgb(245,127,48)" rx="2" ry="2" />
<text  x="903.42" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%)</title><rect x="810.9" y="197" width="0.2" height="15.0" fill="rgb(250,164,35)" rx="2" ry="2" />
<text  x="813.90" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (55 samples, 0.12%)</title><rect x="1166.2" y="485" width="1.4" height="15.0" fill="rgb(248,20,18)" rx="2" ry="2" />
<text  x="1169.19" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (8 samples, 0.02%)</title><rect x="1140.2" y="213" width="0.2" height="15.0" fill="rgb(227,110,12)" rx="2" ry="2" />
<text  x="1143.20" y="223.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="465.2" y="325" width="0.1" height="15.0" fill="rgb(231,104,26)" rx="2" ry="2" />
<text  x="468.17" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (86 samples, 0.18%)</title><rect x="144.5" y="213" width="2.2" height="15.0" fill="rgb(206,34,41)" rx="2" ry="2" />
<text  x="147.54" y="223.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (20 samples, 0.04%)</title><rect x="571.9" y="277" width="0.5" height="15.0" fill="rgb(240,138,26)" rx="2" ry="2" />
<text  x="574.94" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (35 samples, 0.07%)</title><rect x="685.2" y="469" width="0.9" height="15.0" fill="rgb(211,130,45)" rx="2" ry="2" />
<text  x="688.20" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (23 samples, 0.05%)</title><rect x="588.4" y="389" width="0.6" height="15.0" fill="rgb(229,70,22)" rx="2" ry="2" />
<text  x="591.39" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (14 samples, 0.03%)</title><rect x="17.1" y="613" width="0.3" height="15.0" fill="rgb(238,4,27)" rx="2" ry="2" />
<text  x="20.09" y="623.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="42.2" y="453" width="0.6" height="15.0" fill="rgb(217,60,35)" rx="2" ry="2" />
<text  x="45.24" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="488.7" y="181" width="0.1" height="15.0" fill="rgb(245,134,54)" rx="2" ry="2" />
<text  x="491.66" y="191.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="668.5" y="485" width="0.6" height="15.0" fill="rgb(226,107,45)" rx="2" ry="2" />
<text  x="671.47" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,486 samples, 7.32%)</title><rect x="141.1" y="261" width="86.4" height="15.0" fill="rgb(236,49,32)" rx="2" ry="2" />
<text  x="144.15" y="271.5" >partition_..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (8 samples, 0.02%)</title><rect x="138.4" y="261" width="0.2" height="15.0" fill="rgb(238,79,17)" rx="2" ry="2" />
<text  x="141.37" y="271.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (24 samples, 0.05%)</title><rect x="310.6" y="165" width="0.6" height="15.0" fill="rgb(252,44,19)" rx="2" ry="2" />
<text  x="313.63" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (13 samples, 0.03%)</title><rect x="205.4" y="117" width="0.3" height="15.0" fill="rgb(218,190,21)" rx="2" ry="2" />
<text  x="208.37" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,109 samples, 48.52%)</title><rect x="54.9" y="469" width="572.6" height="15.0" fill="rgb(229,33,25)" rx="2" ry="2" />
<text  x="57.90" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="759.9" y="373" width="0.4" height="15.0" fill="rgb(238,86,49)" rx="2" ry="2" />
<text  x="762.90" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (17 samples, 0.04%)</title><rect x="369.7" y="197" width="0.4" height="15.0" fill="rgb(233,168,40)" rx="2" ry="2" />
<text  x="372.73" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%)</title><rect x="1142.7" y="501" width="0.3" height="15.0" fill="rgb(249,48,19)" rx="2" ry="2" />
<text  x="1145.67" y="511.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (6 samples, 0.01%)</title><rect x="682.0" y="437" width="0.1" height="15.0" fill="rgb(223,79,18)" rx="2" ry="2" />
<text  x="684.98" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (5 samples, 0.01%)</title><rect x="910.0" y="341" width="0.2" height="15.0" fill="rgb(210,127,40)" rx="2" ry="2" />
<text  x="913.03" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (7 samples, 0.01%)</title><rect x="412.1" y="277" width="0.2" height="15.0" fill="rgb(243,101,47)" rx="2" ry="2" />
<text  x="415.10" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (17 samples, 0.04%)</title><rect x="327.2" y="181" width="0.4" height="15.0" fill="rgb(213,158,30)" rx="2" ry="2" />
<text  x="330.21" y="191.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.03%)</title><rect x="837.5" y="277" width="0.3" height="15.0" fill="rgb(226,24,29)" rx="2" ry="2" />
<text  x="840.53" y="287.5" ></text>
</g>
<g >
<title>auth::resource::resource (113 samples, 0.24%)</title><rect x="774.1" y="389" width="2.8" height="15.0" fill="rgb(209,218,13)" rx="2" ry="2" />
<text  x="777.08" y="399.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (86 samples, 0.18%)</title><rect x="546.3" y="389" width="2.2" height="15.0" fill="rgb(251,22,19)" rx="2" ry="2" />
<text  x="549.34" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (110 samples, 0.23%)</title><rect x="393.9" y="229" width="2.7" height="15.0" fill="rgb(232,154,31)" rx="2" ry="2" />
<text  x="396.88" y="239.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (29 samples, 0.06%)</title><rect x="1038.3" y="213" width="0.8" height="15.0" fill="rgb(234,163,9)" rx="2" ry="2" />
<text  x="1041.33" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (51 samples, 0.11%)</title><rect x="1164.9" y="469" width="1.3" height="15.0" fill="rgb(251,135,21)" rx="2" ry="2" />
<text  x="1167.92" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="688.3" y="437" width="0.1" height="15.0" fill="rgb(223,141,11)" rx="2" ry="2" />
<text  x="691.32" y="447.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="485.4" y="197" width="0.2" height="15.0" fill="rgb(232,20,8)" rx="2" ry="2" />
<text  x="488.41" y="207.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (38 samples, 0.08%)</title><rect x="690.6" y="469" width="0.9" height="15.0" fill="rgb(241,165,13)" rx="2" ry="2" />
<text  x="693.55" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (26 samples, 0.05%)</title><rect x="325.2" y="181" width="0.7" height="15.0" fill="rgb(206,167,25)" rx="2" ry="2" />
<text  x="328.22" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (22 samples, 0.05%)</title><rect x="1175.5" y="469" width="0.6" height="15.0" fill="rgb(239,5,34)" rx="2" ry="2" />
<text  x="1178.53" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,257 samples, 11.04%)</title><rect x="287.5" y="357" width="130.3" height="15.0" fill="rgb(233,55,32)" rx="2" ry="2" />
<text  x="290.54" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (58 samples, 0.12%)</title><rect x="288.2" y="309" width="1.5" height="15.0" fill="rgb(209,147,18)" rx="2" ry="2" />
<text  x="291.23" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1136.0" y="421" width="0.1" height="15.0" fill="rgb(231,130,35)" rx="2" ry="2" />
<text  x="1139.01" y="431.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (33 samples, 0.07%)</title><rect x="805.9" y="117" width="0.9" height="15.0" fill="rgb(245,118,32)" rx="2" ry="2" />
<text  x="808.94" y="127.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (212 samples, 0.45%)</title><rect x="18.0" y="469" width="5.2" height="15.0" fill="rgb(225,189,40)" rx="2" ry="2" />
<text  x="20.98" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (29 samples, 0.06%)</title><rect x="856.4" y="357" width="0.7" height="15.0" fill="rgb(248,112,0)" rx="2" ry="2" />
<text  x="859.36" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="24.2" y="469" width="0.2" height="15.0" fill="rgb(252,80,48)" rx="2" ry="2" />
<text  x="27.22" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (167 samples, 0.35%)</title><rect x="548.6" y="389" width="4.1" height="15.0" fill="rgb(234,201,12)" rx="2" ry="2" />
<text  x="551.57" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="707.0" y="437" width="0.2" height="15.0" fill="rgb(235,92,54)" rx="2" ry="2" />
<text  x="710.03" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (10 samples, 0.02%)</title><rect x="279.9" y="357" width="0.2" height="15.0" fill="rgb(218,8,22)" rx="2" ry="2" />
<text  x="282.88" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%)</title><rect x="197.9" y="101" width="0.2" height="15.0" fill="rgb(230,18,18)" rx="2" ry="2" />
<text  x="200.89" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="999.0" y="229" width="0.8" height="15.0" fill="rgb(216,183,23)" rx="2" ry="2" />
<text  x="1002.04" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="865.9" y="469" width="0.1" height="15.0" fill="rgb(225,52,25)" rx="2" ry="2" />
<text  x="868.90" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (104 samples, 0.22%)</title><rect x="860.5" y="405" width="2.6" height="15.0" fill="rgb(248,217,28)" rx="2" ry="2" />
<text  x="863.53" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%)</title><rect x="623.8" y="373" width="0.1" height="15.0" fill="rgb(229,94,25)" rx="2" ry="2" />
<text  x="626.80" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%)</title><rect x="651.0" y="405" width="0.3" height="15.0" fill="rgb(251,41,2)" rx="2" ry="2" />
<text  x="653.98" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (41 samples, 0.09%)</title><rect x="800.3" y="197" width="1.0" height="15.0" fill="rgb(239,172,13)" rx="2" ry="2" />
<text  x="803.27" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (25 samples, 0.05%)</title><rect x="1139.5" y="357" width="0.6" height="15.0" fill="rgb(241,1,29)" rx="2" ry="2" />
<text  x="1142.50" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%)</title><rect x="1158.6" y="357" width="0.3" height="15.0" fill="rgb(228,155,33)" rx="2" ry="2" />
<text  x="1161.63" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (10 samples, 0.02%)</title><rect x="46.8" y="485" width="0.2" height="15.0" fill="rgb(254,153,35)" rx="2" ry="2" />
<text  x="49.77" y="495.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (52 samples, 0.11%)</title><rect x="607.0" y="421" width="1.3" height="15.0" fill="rgb(218,32,32)" rx="2" ry="2" />
<text  x="610.05" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%)</title><rect x="47.4" y="485" width="0.4" height="15.0" fill="rgb(217,159,33)" rx="2" ry="2" />
<text  x="50.41" y="495.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (9 samples, 0.02%)</title><rect x="329.5" y="181" width="0.3" height="15.0" fill="rgb(249,136,13)" rx="2" ry="2" />
<text  x="332.54" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="858.0" y="405" width="0.2" height="15.0" fill="rgb(226,181,24)" rx="2" ry="2" />
<text  x="861.03" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,669 samples, 9.80%)</title><rect x="295.2" y="277" width="115.7" height="15.0" fill="rgb(240,80,38)" rx="2" ry="2" />
<text  x="298.19" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>service::storage_proxy::do_mutate (33 samples, 0.07%)</title><rect x="1140.1" y="341" width="0.9" height="15.0" fill="rgb(244,219,11)" rx="2" ry="2" />
<text  x="1143.15" y="351.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (8 samples, 0.02%)</title><rect x="306.1" y="197" width="0.2" height="15.0" fill="rgb(215,68,46)" rx="2" ry="2" />
<text  x="309.10" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (178 samples, 0.37%)</title><rect x="1127.4" y="421" width="4.4" height="15.0" fill="rgb(225,199,26)" rx="2" ry="2" />
<text  x="1130.41" y="431.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (17 samples, 0.04%)</title><rect x="12.6" y="581" width="0.4" height="15.0" fill="rgb(222,110,40)" rx="2" ry="2" />
<text  x="15.63" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (28 samples, 0.06%)</title><rect x="732.1" y="309" width="0.7" height="15.0" fill="rgb(211,28,33)" rx="2" ry="2" />
<text  x="735.10" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (25 samples, 0.05%)</title><rect x="906.4" y="357" width="0.7" height="15.0" fill="rgb(250,47,2)" rx="2" ry="2" />
<text  x="909.44" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (33 samples, 0.07%)</title><rect x="506.7" y="245" width="0.9" height="15.0" fill="rgb(206,42,49)" rx="2" ry="2" />
<text  x="509.75" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1077.6" y="309" width="0.3" height="15.0" fill="rgb(213,159,28)" rx="2" ry="2" />
<text  x="1080.63" y="319.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="657.0" y="453" width="0.5" height="15.0" fill="rgb(254,167,31)" rx="2" ry="2" />
<text  x="659.98" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="663.5" y="485" width="0.1" height="15.0" fill="rgb(235,192,0)" rx="2" ry="2" />
<text  x="666.47" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (27 samples, 0.06%)</title><rect x="1030.4" y="149" width="0.7" height="15.0" fill="rgb(239,93,43)" rx="2" ry="2" />
<text  x="1033.43" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (324 samples, 0.68%)</title><rect x="802.5" y="197" width="8.0" height="15.0" fill="rgb(218,78,40)" rx="2" ry="2" />
<text  x="805.50" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.01%)</title><rect x="691.7" y="453" width="0.1" height="15.0" fill="rgb(213,193,33)" rx="2" ry="2" />
<text  x="694.67" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="723.6" y="405" width="1.3" height="15.0" fill="rgb(232,208,15)" rx="2" ry="2" />
<text  x="726.60" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (20 samples, 0.04%)</title><rect x="297.6" y="245" width="0.5" height="15.0" fill="rgb(241,12,12)" rx="2" ry="2" />
<text  x="300.65" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%)</title><rect x="1052.9" y="325" width="0.2" height="15.0" fill="rgb(228,79,39)" rx="2" ry="2" />
<text  x="1055.88" y="335.5" ></text>
</g>
<g >
<title>database::find_schema (304 samples, 0.64%)</title><rect x="761.6" y="405" width="7.5" height="15.0" fill="rgb(210,58,35)" rx="2" ry="2" />
<text  x="764.61" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (11 samples, 0.02%)</title><rect x="710.3" y="405" width="0.2" height="15.0" fill="rgb(245,112,47)" rx="2" ry="2" />
<text  x="713.27" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (40 samples, 0.08%)</title><rect x="783.2" y="309" width="1.0" height="15.0" fill="rgb(248,55,41)" rx="2" ry="2" />
<text  x="786.25" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (10 samples, 0.02%)</title><rect x="230.4" y="213" width="0.2" height="15.0" fill="rgb(242,209,13)" rx="2" ry="2" />
<text  x="233.35" y="223.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (5 samples, 0.01%)</title><rect x="23.3" y="421" width="0.1" height="15.0" fill="rgb(219,2,52)" rx="2" ry="2" />
<text  x="26.26" y="431.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (20 samples, 0.04%)</title><rect x="689.9" y="485" width="0.5" height="15.0" fill="rgb(246,135,12)" rx="2" ry="2" />
<text  x="692.93" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="704.8" y="469" width="0.2" height="15.0" fill="rgb(210,205,18)" rx="2" ry="2" />
<text  x="707.82" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="221.4" y="181" width="0.1" height="15.0" fill="rgb(246,133,9)" rx="2" ry="2" />
<text  x="224.41" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (101 samples, 0.21%)</title><rect x="751.8" y="277" width="2.5" height="15.0" fill="rgb(236,30,35)" rx="2" ry="2" />
<text  x="754.83" y="287.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="798.6" y="165" width="0.2" height="15.0" fill="rgb(222,28,16)" rx="2" ry="2" />
<text  x="801.56" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (28 samples, 0.06%)</title><rect x="660.0" y="485" width="0.7" height="15.0" fill="rgb(249,173,20)" rx="2" ry="2" />
<text  x="663.05" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (5 samples, 0.01%)</title><rect x="612.0" y="405" width="0.1" height="15.0" fill="rgb(252,188,27)" rx="2" ry="2" />
<text  x="614.98" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (22 samples, 0.05%)</title><rect x="513.9" y="181" width="0.5" height="15.0" fill="rgb(251,175,7)" rx="2" ry="2" />
<text  x="516.86" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="308.4" y="165" width="0.2" height="15.0" fill="rgb(214,29,28)" rx="2" ry="2" />
<text  x="311.43" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="223.3" y="181" width="0.2" height="15.0" fill="rgb(222,100,4)" rx="2" ry="2" />
<text  x="226.26" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (21 samples, 0.04%)</title><rect x="1171.5" y="453" width="0.5" height="15.0" fill="rgb(215,217,52)" rx="2" ry="2" />
<text  x="1174.49" y="463.5" ></text>
</g>
<g >
<title>db::filter_for_query (65 samples, 0.14%)</title><rect x="1066.6" y="341" width="1.6" height="15.0" fill="rgb(206,95,3)" rx="2" ry="2" />
<text  x="1069.58" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (10 samples, 0.02%)</title><rect x="217.8" y="181" width="0.2" height="15.0" fill="rgb(207,203,51)" rx="2" ry="2" />
<text  x="220.79" y="191.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (5 samples, 0.01%)</title><rect x="823.5" y="309" width="0.1" height="15.0" fill="rgb(207,204,45)" rx="2" ry="2" />
<text  x="826.46" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (68 samples, 0.14%)</title><rect x="196.4" y="117" width="1.7" height="15.0" fill="rgb(229,229,28)" rx="2" ry="2" />
<text  x="199.43" y="127.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.03%)</title><rect x="732.3" y="293" width="0.3" height="15.0" fill="rgb(241,130,10)" rx="2" ry="2" />
<text  x="735.28" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (30 samples, 0.06%)</title><rect x="717.9" y="501" width="0.8" height="15.0" fill="rgb(238,122,4)" rx="2" ry="2" />
<text  x="720.93" y="511.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="1068.4" y="341" width="0.2" height="15.0" fill="rgb(237,166,15)" rx="2" ry="2" />
<text  x="1071.41" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (9 samples, 0.02%)</title><rect x="1127.1" y="421" width="0.2" height="15.0" fill="rgb(217,225,3)" rx="2" ry="2" />
<text  x="1130.09" y="431.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (64 samples, 0.13%)</title><rect x="782.7" y="325" width="1.5" height="15.0" fill="rgb(237,42,11)" rx="2" ry="2" />
<text  x="785.65" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (14 samples, 0.03%)</title><rect x="327.3" y="165" width="0.3" height="15.0" fill="rgb(230,20,26)" rx="2" ry="2" />
<text  x="330.28" y="175.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (42 samples, 0.09%)</title><rect x="932.1" y="341" width="1.1" height="15.0" fill="rgb(225,137,39)" rx="2" ry="2" />
<text  x="935.14" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (9 samples, 0.02%)</title><rect x="600.3" y="421" width="0.3" height="15.0" fill="rgb(237,19,7)" rx="2" ry="2" />
<text  x="603.33" y="431.5" ></text>
</g>
<g >
<title>__tls_init (20 samples, 0.04%)</title><rect x="139.1" y="245" width="0.5" height="15.0" fill="rgb(223,15,54)" rx="2" ry="2" />
<text  x="142.12" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="389" width="0.9" height="15.0" fill="rgb(216,220,43)" rx="2" ry="2" />
<text  x="1143.12" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (24 samples, 0.05%)</title><rect x="1062.2" y="277" width="0.6" height="15.0" fill="rgb(232,157,16)" rx="2" ry="2" />
<text  x="1065.17" y="287.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (67 samples, 0.14%)</title><rect x="606.7" y="437" width="1.6" height="15.0" fill="rgb(228,195,29)" rx="2" ry="2" />
<text  x="609.68" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (7 samples, 0.01%)</title><rect x="94.4" y="421" width="0.1" height="15.0" fill="rgb(254,54,42)" rx="2" ry="2" />
<text  x="97.37" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (148 samples, 0.31%)</title><rect x="569.6" y="293" width="3.7" height="15.0" fill="rgb(208,11,11)" rx="2" ry="2" />
<text  x="572.61" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (19 samples, 0.04%)</title><rect x="448.1" y="261" width="0.5" height="15.0" fill="rgb(224,88,26)" rx="2" ry="2" />
<text  x="451.10" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="255.8" y="325" width="0.2" height="15.0" fill="rgb(213,14,7)" rx="2" ry="2" />
<text  x="258.82" y="335.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%)</title><rect x="1127.7" y="405" width="1.6" height="15.0" fill="rgb(210,115,1)" rx="2" ry="2" />
<text  x="1130.66" y="415.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (5 samples, 0.01%)</title><rect x="1139.8" y="245" width="0.1" height="15.0" fill="rgb(218,119,46)" rx="2" ry="2" />
<text  x="1142.78" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (21 samples, 0.04%)</title><rect x="443.0" y="293" width="0.5" height="15.0" fill="rgb(215,91,52)" rx="2" ry="2" />
<text  x="445.97" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (35 samples, 0.07%)</title><rect x="516.3" y="229" width="0.9" height="15.0" fill="rgb(249,184,6)" rx="2" ry="2" />
<text  x="519.34" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (29 samples, 0.06%)</title><rect x="411.4" y="277" width="0.7" height="15.0" fill="rgb(222,50,36)" rx="2" ry="2" />
<text  x="414.38" y="287.5" ></text>
</g>
<g >
<title>malloc (17 samples, 0.04%)</title><rect x="604.9" y="373" width="0.5" height="15.0" fill="rgb(217,144,26)" rx="2" ry="2" />
<text  x="607.94" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (7 samples, 0.01%)</title><rect x="1047.6" y="277" width="0.2" height="15.0" fill="rgb(210,187,40)" rx="2" ry="2" />
<text  x="1050.63" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (31 samples, 0.07%)</title><rect x="615.5" y="437" width="0.8" height="15.0" fill="rgb(206,154,47)" rx="2" ry="2" />
<text  x="618.55" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (10 samples, 0.02%)</title><rect x="853.0" y="421" width="0.2" height="15.0" fill="rgb(226,205,24)" rx="2" ry="2" />
<text  x="855.97" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (5 samples, 0.01%)</title><rect x="245.2" y="261" width="0.1" height="15.0" fill="rgb(240,33,22)" rx="2" ry="2" />
<text  x="248.17" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="941.4" y="357" width="0.6" height="15.0" fill="rgb(205,99,38)" rx="2" ry="2" />
<text  x="944.38" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%)</title><rect x="697.1" y="437" width="0.1" height="15.0" fill="rgb(248,214,2)" rx="2" ry="2" />
<text  x="700.09" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="845.0" y="437" width="0.2" height="15.0" fill="rgb(220,182,21)" rx="2" ry="2" />
<text  x="847.99" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="408.9" y="229" width="0.2" height="15.0" fill="rgb(230,98,30)" rx="2" ry="2" />
<text  x="411.85" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (39 samples, 0.08%)</title><rect x="560.8" y="309" width="1.0" height="15.0" fill="rgb(240,30,39)" rx="2" ry="2" />
<text  x="563.81" y="319.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_3b4dc39eb84df2f30b1642770599338655846644] (5 samples, 0.01%)</title><rect x="172.8" y="101" width="0.1" height="15.0" fill="rgb(213,127,45)" rx="2" ry="2" />
<text  x="175.79" y="111.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="281.6" y="389" width="0.2" height="15.0" fill="rgb(226,133,22)" rx="2" ry="2" />
<text  x="284.64" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (26 samples, 0.05%)</title><rect x="1106.3" y="373" width="0.6" height="15.0" fill="rgb(245,119,45)" rx="2" ry="2" />
<text  x="1109.28" y="383.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.12%)</title><rect x="562.3" y="325" width="1.3" height="15.0" fill="rgb(249,24,33)" rx="2" ry="2" />
<text  x="565.25" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="909.5" y="293" width="0.1" height="15.0" fill="rgb(218,176,10)" rx="2" ry="2" />
<text  x="912.46" y="303.5" ></text>
</g>
<g >
<title>operator new (181 samples, 0.38%)</title><rect x="1020.3" y="245" width="4.5" height="15.0" fill="rgb(249,76,19)" rx="2" ry="2" />
<text  x="1023.27" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (26 samples, 0.05%)</title><rect x="207.0" y="165" width="0.6" height="15.0" fill="rgb(211,6,2)" rx="2" ry="2" />
<text  x="209.96" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (34 samples, 0.07%)</title><rect x="580.5" y="357" width="0.9" height="15.0" fill="rgb(254,100,7)" rx="2" ry="2" />
<text  x="583.51" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (23 samples, 0.05%)</title><rect x="1140.4" y="309" width="0.6" height="15.0" fill="rgb(236,36,29)" rx="2" ry="2" />
<text  x="1143.39" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%)</title><rect x="1139.1" y="453" width="0.3" height="15.0" fill="rgb(214,124,29)" rx="2" ry="2" />
<text  x="1142.13" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (31 samples, 0.07%)</title><rect x="832.9" y="293" width="0.8" height="15.0" fill="rgb(226,15,48)" rx="2" ry="2" />
<text  x="835.95" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (9 samples, 0.02%)</title><rect x="650.2" y="437" width="0.2" height="15.0" fill="rgb(227,7,24)" rx="2" ry="2" />
<text  x="653.19" y="447.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (7 samples, 0.01%)</title><rect x="953.2" y="389" width="0.2" height="15.0" fill="rgb(208,170,2)" rx="2" ry="2" />
<text  x="956.25" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (9 samples, 0.02%)</title><rect x="691.7" y="469" width="0.2" height="15.0" fill="rgb(232,98,27)" rx="2" ry="2" />
<text  x="694.67" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="20.1" y="277" width="0.1" height="15.0" fill="rgb(214,76,43)" rx="2" ry="2" />
<text  x="23.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="613.3" y="405" width="0.4" height="15.0" fill="rgb(235,49,37)" rx="2" ry="2" />
<text  x="616.29" y="415.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (10 samples, 0.02%)</title><rect x="490.3" y="261" width="0.2" height="15.0" fill="rgb(224,117,16)" rx="2" ry="2" />
<text  x="493.30" y="271.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (64 samples, 0.13%)</title><rect x="1163.3" y="469" width="1.6" height="15.0" fill="rgb(226,192,41)" rx="2" ry="2" />
<text  x="1166.29" y="479.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="412.9" y="293" width="0.7" height="15.0" fill="rgb(209,13,46)" rx="2" ry="2" />
<text  x="415.94" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (30 samples, 0.06%)</title><rect x="993.2" y="277" width="0.7" height="15.0" fill="rgb(222,168,9)" rx="2" ry="2" />
<text  x="996.19" y="287.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1174.1" y="405" width="0.1" height="15.0" fill="rgb(253,125,46)" rx="2" ry="2" />
<text  x="1177.09" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="417.7" y="341" width="0.1" height="15.0" fill="rgb(221,38,21)" rx="2" ry="2" />
<text  x="420.67" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="902.7" y="293" width="0.1" height="15.0" fill="rgb(253,227,11)" rx="2" ry="2" />
<text  x="905.70" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (16 samples, 0.03%)</title><rect x="1031.6" y="133" width="0.4" height="15.0" fill="rgb(224,151,28)" rx="2" ry="2" />
<text  x="1034.59" y="143.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (465 samples, 0.98%)</title><rect x="32.5" y="501" width="11.6" height="15.0" fill="rgb(215,42,17)" rx="2" ry="2" />
<text  x="35.55" y="511.5" ></text>
</g>
<g >
<title>__dynamic_cast (40 samples, 0.08%)</title><rect x="886.4" y="421" width="1.0" height="15.0" fill="rgb(238,41,32)" rx="2" ry="2" />
<text  x="889.37" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (22 samples, 0.05%)</title><rect x="823.9" y="293" width="0.5" height="15.0" fill="rgb(210,75,45)" rx="2" ry="2" />
<text  x="826.86" y="303.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (41 samples, 0.09%)</title><rect x="231.5" y="165" width="1.0" height="15.0" fill="rgb(236,23,8)" rx="2" ry="2" />
<text  x="234.51" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%)</title><rect x="685.9" y="437" width="0.2" height="15.0" fill="rgb(241,183,47)" rx="2" ry="2" />
<text  x="688.87" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="135.7" y="277" width="0.2" height="15.0" fill="rgb(221,135,0)" rx="2" ry="2" />
<text  x="138.72" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="983.7" y="277" width="1.7" height="15.0" fill="rgb(234,190,46)" rx="2" ry="2" />
<text  x="986.70" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="595.5" y="389" width="0.1" height="15.0" fill="rgb(246,165,2)" rx="2" ry="2" />
<text  x="598.48" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (9 samples, 0.02%)</title><rect x="316.9" y="213" width="0.2" height="15.0" fill="rgb(217,157,5)" rx="2" ry="2" />
<text  x="319.87" y="223.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (21 samples, 0.04%)</title><rect x="690.8" y="309" width="0.5" height="15.0" fill="rgb(229,46,5)" rx="2" ry="2" />
<text  x="693.77" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (31 samples, 0.07%)</title><rect x="572.5" y="261" width="0.8" height="15.0" fill="rgb(243,142,36)" rx="2" ry="2" />
<text  x="575.51" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (26 samples, 0.05%)</title><rect x="234.6" y="181" width="0.7" height="15.0" fill="rgb(251,209,8)" rx="2" ry="2" />
<text  x="237.64" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="828.9" y="389" width="0.3" height="15.0" fill="rgb(249,120,44)" rx="2" ry="2" />
<text  x="831.89" y="399.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (7 samples, 0.01%)</title><rect x="743.2" y="389" width="0.2" height="15.0" fill="rgb(230,22,5)" rx="2" ry="2" />
<text  x="746.20" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%)</title><rect x="513.1" y="197" width="0.2" height="15.0" fill="rgb(212,188,18)" rx="2" ry="2" />
<text  x="516.14" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (10 samples, 0.02%)</title><rect x="60.2" y="453" width="0.2" height="15.0" fill="rgb(220,118,42)" rx="2" ry="2" />
<text  x="63.18" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="946.5" y="357" width="0.2" height="15.0" fill="rgb(207,146,11)" rx="2" ry="2" />
<text  x="949.48" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (4,454 samples, 9.35%)</title><rect x="430.8" y="357" width="110.4" height="15.0" fill="rgb(225,66,23)" rx="2" ry="2" />
<text  x="433.83" y="367.5" >table::make_r..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (119 samples, 0.25%)</title><rect x="1047.9" y="261" width="2.9" height="15.0" fill="rgb(253,89,46)" rx="2" ry="2" />
<text  x="1050.87" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (66 samples, 0.14%)</title><rect x="327.6" y="181" width="1.7" height="15.0" fill="rgb(235,159,24)" rx="2" ry="2" />
<text  x="330.63" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="424.4" y="389" width="0.2" height="15.0" fill="rgb(249,13,38)" rx="2" ry="2" />
<text  x="427.41" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="927.4" y="373" width="0.1" height="15.0" fill="rgb(244,163,13)" rx="2" ry="2" />
<text  x="930.38" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="815.1" y="261" width="0.2" height="15.0" fill="rgb(220,64,25)" rx="2" ry="2" />
<text  x="818.08" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="710.5" y="421" width="0.2" height="15.0" fill="rgb(230,138,30)" rx="2" ry="2" />
<text  x="713.55" y="431.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.08%)</title><rect x="861.9" y="357" width="0.9" height="15.0" fill="rgb(229,29,13)" rx="2" ry="2" />
<text  x="864.94" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="587.4" y="373" width="0.3" height="15.0" fill="rgb(225,50,25)" rx="2" ry="2" />
<text  x="590.45" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="238.7" y="165" width="0.7" height="15.0" fill="rgb(205,229,11)" rx="2" ry="2" />
<text  x="241.73" y="175.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (29 samples, 0.06%)</title><rect x="1031.3" y="149" width="0.7" height="15.0" fill="rgb(220,34,21)" rx="2" ry="2" />
<text  x="1034.27" y="159.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (25 samples, 0.05%)</title><rect x="1004.0" y="293" width="0.6" height="15.0" fill="rgb(243,43,35)" rx="2" ry="2" />
<text  x="1006.99" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="624.8" y="437" width="0.1" height="15.0" fill="rgb(208,32,2)" rx="2" ry="2" />
<text  x="627.77" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (5 samples, 0.01%)</title><rect x="844.9" y="437" width="0.1" height="15.0" fill="rgb(228,26,27)" rx="2" ry="2" />
<text  x="847.87" y="447.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%)</title><rect x="550.9" y="341" width="1.8" height="15.0" fill="rgb(209,99,35)" rx="2" ry="2" />
<text  x="553.88" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.02%)</title><rect x="20.9" y="325" width="0.3" height="15.0" fill="rgb(213,92,46)" rx="2" ry="2" />
<text  x="23.93" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (6 samples, 0.01%)</title><rect x="850.9" y="405" width="0.2" height="15.0" fill="rgb(234,149,0)" rx="2" ry="2" />
<text  x="853.94" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (66 samples, 0.14%)</title><rect x="744.7" y="341" width="1.6" height="15.0" fill="rgb(246,73,15)" rx="2" ry="2" />
<text  x="747.69" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (157 samples, 0.33%)</title><rect x="821.3" y="357" width="3.9" height="15.0" fill="rgb(226,86,0)" rx="2" ry="2" />
<text  x="824.33" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (7 samples, 0.01%)</title><rect x="213.3" y="117" width="0.2" height="15.0" fill="rgb(226,74,43)" rx="2" ry="2" />
<text  x="216.33" y="127.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (27 samples, 0.06%)</title><rect x="625.5" y="405" width="0.7" height="15.0" fill="rgb(228,109,53)" rx="2" ry="2" />
<text  x="628.51" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="1151.5" y="485" width="0.3" height="15.0" fill="rgb(210,137,41)" rx="2" ry="2" />
<text  x="1154.52" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="617.0" y="405" width="0.4" height="15.0" fill="rgb(241,65,34)" rx="2" ry="2" />
<text  x="619.96" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (496 samples, 1.04%)</title><rect x="478.7" y="293" width="12.3" height="15.0" fill="rgb(235,63,41)" rx="2" ry="2" />
<text  x="481.70" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (15 samples, 0.03%)</title><rect x="458.5" y="277" width="0.4" height="15.0" fill="rgb(241,183,51)" rx="2" ry="2" />
<text  x="461.48" y="287.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,013 samples, 12.63%)</title><rect x="721.3" y="485" width="149.0" height="15.0" fill="rgb(242,85,52)" rx="2" ry="2" />
<text  x="724.28" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (13 samples, 0.03%)</title><rect x="1177.5" y="437" width="0.3" height="15.0" fill="rgb(239,54,6)" rx="2" ry="2" />
<text  x="1180.46" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="865.1" y="453" width="0.3" height="15.0" fill="rgb(216,126,49)" rx="2" ry="2" />
<text  x="868.09" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="673.8" y="453" width="0.1" height="15.0" fill="rgb(229,229,3)" rx="2" ry="2" />
<text  x="676.78" y="463.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (277 samples, 0.58%)</title><rect x="747.9" y="373" width="6.9" height="15.0" fill="rgb(227,134,32)" rx="2" ry="2" />
<text  x="750.94" y="383.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (5 samples, 0.01%)</title><rect x="630.9" y="485" width="0.2" height="15.0" fill="rgb(238,19,42)" rx="2" ry="2" />
<text  x="633.94" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="902.8" y="309" width="0.3" height="15.0" fill="rgb(221,71,11)" rx="2" ry="2" />
<text  x="905.85" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (88 samples, 0.18%)</title><rect x="866.1" y="469" width="2.2" height="15.0" fill="rgb(222,207,39)" rx="2" ry="2" />
<text  x="869.10" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (377 samples, 0.79%)</title><rect x="801.3" y="213" width="9.3" height="15.0" fill="rgb(220,45,10)" rx="2" ry="2" />
<text  x="804.28" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (98 samples, 0.21%)</title><rect x="665.6" y="469" width="2.4" height="15.0" fill="rgb(241,151,16)" rx="2" ry="2" />
<text  x="668.60" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (56 samples, 0.12%)</title><rect x="976.6" y="309" width="1.4" height="15.0" fill="rgb(207,123,45)" rx="2" ry="2" />
<text  x="979.56" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (15 samples, 0.03%)</title><rect x="1175.5" y="437" width="0.4" height="15.0" fill="rgb(212,32,31)" rx="2" ry="2" />
<text  x="1178.53" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.01%)</title><rect x="1106.0" y="373" width="0.2" height="15.0" fill="rgb(235,79,37)" rx="2" ry="2" />
<text  x="1109.00" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (40 samples, 0.08%)</title><rect x="807.2" y="133" width="1.0" height="15.0" fill="rgb(232,150,10)" rx="2" ry="2" />
<text  x="810.21" y="143.5" ></text>
</g>
<g >
<title>database::has_keyspace (129 samples, 0.27%)</title><rect x="847.9" y="421" width="3.2" height="15.0" fill="rgb(211,178,6)" rx="2" ry="2" />
<text  x="850.89" y="431.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (110 samples, 0.23%)</title><rect x="1172.1" y="453" width="2.7" height="15.0" fill="rgb(233,46,1)" rx="2" ry="2" />
<text  x="1175.09" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (50 samples, 0.10%)</title><rect x="898.6" y="293" width="1.3" height="15.0" fill="rgb(215,35,35)" rx="2" ry="2" />
<text  x="901.64" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="844.4" y="389" width="0.2" height="15.0" fill="rgb(220,145,35)" rx="2" ry="2" />
<text  x="847.42" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="265.6" y="341" width="0.1" height="15.0" fill="rgb(237,20,50)" rx="2" ry="2" />
<text  x="268.58" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="563.4" y="309" width="0.2" height="15.0" fill="rgb(205,24,37)" rx="2" ry="2" />
<text  x="566.37" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (12 samples, 0.03%)</title><rect x="230.0" y="213" width="0.3" height="15.0" fill="rgb(251,199,13)" rx="2" ry="2" />
<text  x="232.95" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (233 samples, 0.49%)</title><rect x="216.2" y="229" width="5.8" height="15.0" fill="rgb(216,44,50)" rx="2" ry="2" />
<text  x="219.18" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.03%)</title><rect x="700.3" y="485" width="0.3" height="15.0" fill="rgb(209,61,1)" rx="2" ry="2" />
<text  x="703.26" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (21 samples, 0.04%)</title><rect x="33.6" y="485" width="0.6" height="15.0" fill="rgb(225,17,41)" rx="2" ry="2" />
<text  x="36.64" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (179 samples, 0.38%)</title><rect x="1020.3" y="229" width="4.5" height="15.0" fill="rgb(247,179,3)" rx="2" ry="2" />
<text  x="1023.32" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume (16 samples, 0.03%)</title><rect x="207.9" y="149" width="0.3" height="15.0" fill="rgb(211,127,53)" rx="2" ry="2" />
<text  x="210.85" y="159.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (31 samples, 0.07%)</title><rect x="497.5" y="309" width="0.7" height="15.0" fill="rgb(225,40,2)" rx="2" ry="2" />
<text  x="500.46" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="585.3" y="357" width="0.1" height="15.0" fill="rgb(217,175,12)" rx="2" ry="2" />
<text  x="588.27" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (111 samples, 0.23%)</title><rect x="242.4" y="245" width="2.8" height="15.0" fill="rgb(225,70,12)" rx="2" ry="2" />
<text  x="245.42" y="255.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (38 samples, 0.08%)</title><rect x="928.2" y="357" width="1.0" height="15.0" fill="rgb(244,38,12)" rx="2" ry="2" />
<text  x="931.22" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%)</title><rect x="237.2" y="213" width="0.2" height="15.0" fill="rgb(254,141,14)" rx="2" ry="2" />
<text  x="240.24" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (8 samples, 0.02%)</title><rect x="189.2" y="53" width="0.2" height="15.0" fill="rgb(208,169,28)" rx="2" ry="2" />
<text  x="192.19" y="63.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (13 samples, 0.03%)</title><rect x="1134.9" y="421" width="0.3" height="15.0" fill="rgb(240,222,6)" rx="2" ry="2" />
<text  x="1137.87" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (30 samples, 0.06%)</title><rect x="64.7" y="405" width="0.8" height="15.0" fill="rgb(251,149,44)" rx="2" ry="2" />
<text  x="67.73" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (7 samples, 0.01%)</title><rect x="465.3" y="325" width="0.2" height="15.0" fill="rgb(235,49,50)" rx="2" ry="2" />
<text  x="468.32" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%)</title><rect x="1035.4" y="213" width="0.2" height="15.0" fill="rgb(245,140,34)" rx="2" ry="2" />
<text  x="1038.41" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (6 samples, 0.01%)</title><rect x="694.6" y="469" width="0.2" height="15.0" fill="rgb(228,105,45)" rx="2" ry="2" />
<text  x="697.61" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="1130.6" y="373" width="0.7" height="15.0" fill="rgb(253,45,34)" rx="2" ry="2" />
<text  x="1133.63" y="383.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (8 samples, 0.02%)</title><rect x="581.7" y="341" width="0.2" height="15.0" fill="rgb(229,127,5)" rx="2" ry="2" />
<text  x="584.70" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (671 samples, 1.41%)</title><rect x="559.8" y="341" width="16.6" height="15.0" fill="rgb(215,139,42)" rx="2" ry="2" />
<text  x="562.80" y="351.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (22 samples, 0.05%)</title><rect x="809.2" y="101" width="0.6" height="15.0" fill="rgb(240,90,50)" rx="2" ry="2" />
<text  x="812.24" y="111.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (213 samples, 0.45%)</title><rect x="1072.6" y="325" width="5.3" height="15.0" fill="rgb(249,42,20)" rx="2" ry="2" />
<text  x="1075.58" y="335.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1051.5" y="261" width="0.1" height="15.0" fill="rgb(207,48,37)" rx="2" ry="2" />
<text  x="1054.49" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (35 samples, 0.07%)</title><rect x="672.5" y="485" width="0.9" height="15.0" fill="rgb(235,118,52)" rx="2" ry="2" />
<text  x="675.49" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (13 samples, 0.03%)</title><rect x="699.3" y="453" width="0.3" height="15.0" fill="rgb(210,31,2)" rx="2" ry="2" />
<text  x="702.30" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (6 samples, 0.01%)</title><rect x="626.7" y="421" width="0.2" height="15.0" fill="rgb(252,27,37)" rx="2" ry="2" />
<text  x="629.72" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1138.6" y="437" width="0.1" height="15.0" fill="rgb(244,67,52)" rx="2" ry="2" />
<text  x="1141.56" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (91 samples, 0.19%)</title><rect x="842.4" y="421" width="2.3" height="15.0" fill="rgb(205,184,35)" rx="2" ry="2" />
<text  x="845.42" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (13 samples, 0.03%)</title><rect x="270.5" y="293" width="0.3" height="15.0" fill="rgb(248,62,0)" rx="2" ry="2" />
<text  x="273.49" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (538 samples, 1.13%)</title><rect x="504.7" y="277" width="13.3" height="15.0" fill="rgb(231,135,29)" rx="2" ry="2" />
<text  x="507.67" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (13 samples, 0.03%)</title><rect x="1148.5" y="469" width="0.3" height="15.0" fill="rgb(206,43,3)" rx="2" ry="2" />
<text  x="1151.50" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="569.4" y="277" width="0.2" height="15.0" fill="rgb(239,138,49)" rx="2" ry="2" />
<text  x="572.36" y="287.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="666.6" y="437" width="0.4" height="15.0" fill="rgb(225,40,45)" rx="2" ry="2" />
<text  x="669.59" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (172 samples, 0.36%)</title><rect x="473.2" y="261" width="4.2" height="15.0" fill="rgb(211,223,39)" rx="2" ry="2" />
<text  x="476.17" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (66 samples, 0.14%)</title><rect x="713.8" y="437" width="1.7" height="15.0" fill="rgb(254,209,42)" rx="2" ry="2" />
<text  x="716.82" y="447.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.08%)</title><rect x="745.1" y="309" width="1.0" height="15.0" fill="rgb(221,155,9)" rx="2" ry="2" />
<text  x="748.14" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (26 samples, 0.05%)</title><rect x="1108.8" y="405" width="0.6" height="15.0" fill="rgb(205,53,51)" rx="2" ry="2" />
<text  x="1111.75" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="820.1" y="293" width="0.3" height="15.0" fill="rgb(237,166,39)" rx="2" ry="2" />
<text  x="823.11" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="281.8" y="405" width="0.2" height="15.0" fill="rgb(225,81,40)" rx="2" ry="2" />
<text  x="284.76" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (11 samples, 0.02%)</title><rect x="257.7" y="325" width="0.3" height="15.0" fill="rgb(234,102,24)" rx="2" ry="2" />
<text  x="260.71" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="513.8" y="197" width="0.6" height="15.0" fill="rgb(248,51,29)" rx="2" ry="2" />
<text  x="516.79" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (16 samples, 0.03%)</title><rect x="452.5" y="293" width="0.4" height="15.0" fill="rgb(217,97,34)" rx="2" ry="2" />
<text  x="455.48" y="303.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="939.1" y="373" width="0.7" height="15.0" fill="rgb(233,33,6)" rx="2" ry="2" />
<text  x="942.12" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%)</title><rect x="595.6" y="405" width="0.5" height="15.0" fill="rgb(206,70,28)" rx="2" ry="2" />
<text  x="598.63" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="46.6" y="485" width="0.1" height="15.0" fill="rgb(228,100,34)" rx="2" ry="2" />
<text  x="49.57" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (26 samples, 0.05%)</title><rect x="1042.1" y="261" width="0.6" height="15.0" fill="rgb(229,20,26)" rx="2" ry="2" />
<text  x="1045.08" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="811.6" y="245" width="0.3" height="15.0" fill="rgb(237,209,30)" rx="2" ry="2" />
<text  x="814.62" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (93 samples, 0.20%)</title><rect x="619.9" y="405" width="2.3" height="15.0" fill="rgb(223,9,51)" rx="2" ry="2" />
<text  x="622.86" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.02%)</title><rect x="18.4" y="245" width="0.2" height="15.0" fill="rgb(209,153,24)" rx="2" ry="2" />
<text  x="21.42" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (9 samples, 0.02%)</title><rect x="424.8" y="405" width="0.2" height="15.0" fill="rgb(251,1,38)" rx="2" ry="2" />
<text  x="427.76" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (14 samples, 0.03%)</title><rect x="13.0" y="581" width="0.4" height="15.0" fill="rgb(243,196,8)" rx="2" ry="2" />
<text  x="16.05" y="591.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (8 samples, 0.02%)</title><rect x="364.5" y="197" width="0.2" height="15.0" fill="rgb(234,229,40)" rx="2" ry="2" />
<text  x="367.47" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (33 samples, 0.07%)</title><rect x="263.8" y="341" width="0.8" height="15.0" fill="rgb(234,115,48)" rx="2" ry="2" />
<text  x="266.83" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (116 samples, 0.24%)</title><rect x="19.9" y="373" width="2.9" height="15.0" fill="rgb(215,25,50)" rx="2" ry="2" />
<text  x="22.91" y="383.5" ></text>
</g>
<g >
<title>database::do_apply (23 samples, 0.05%)</title><rect x="1139.5" y="341" width="0.6" height="15.0" fill="rgb(250,128,0)" rx="2" ry="2" />
<text  x="1142.50" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (62 samples, 0.13%)</title><rect x="1157.4" y="437" width="1.6" height="15.0" fill="rgb(219,71,28)" rx="2" ry="2" />
<text  x="1160.44" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%)</title><rect x="1028.2" y="165" width="0.4" height="15.0" fill="rgb(221,208,45)" rx="2" ry="2" />
<text  x="1031.25" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (33 samples, 0.07%)</title><rect x="23.2" y="437" width="0.8" height="15.0" fill="rgb(230,80,52)" rx="2" ry="2" />
<text  x="26.23" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (42 samples, 0.09%)</title><rect x="233.6" y="181" width="1.0" height="15.0" fill="rgb(231,219,47)" rx="2" ry="2" />
<text  x="236.60" y="191.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (24 samples, 0.05%)</title><rect x="207.7" y="165" width="0.5" height="15.0" fill="rgb(235,139,10)" rx="2" ry="2" />
<text  x="210.65" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (12 samples, 0.03%)</title><rect x="532.4" y="309" width="0.3" height="15.0" fill="rgb(252,82,11)" rx="2" ry="2" />
<text  x="535.39" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (13 samples, 0.03%)</title><rect x="258.4" y="341" width="0.3" height="15.0" fill="rgb(238,89,30)" rx="2" ry="2" />
<text  x="261.40" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (33 samples, 0.07%)</title><rect x="729.5" y="389" width="0.8" height="15.0" fill="rgb(207,37,12)" rx="2" ry="2" />
<text  x="732.53" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (8 samples, 0.02%)</title><rect x="411.2" y="277" width="0.2" height="15.0" fill="rgb(248,54,16)" rx="2" ry="2" />
<text  x="414.18" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (18 samples, 0.04%)</title><rect x="873.0" y="453" width="0.4" height="15.0" fill="rgb(227,224,8)" rx="2" ry="2" />
<text  x="875.99" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (10 samples, 0.02%)</title><rect x="21.8" y="277" width="0.3" height="15.0" fill="rgb(236,163,29)" rx="2" ry="2" />
<text  x="24.84" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%)</title><rect x="422.6" y="373" width="0.2" height="15.0" fill="rgb(235,68,6)" rx="2" ry="2" />
<text  x="425.60" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (53 samples, 0.11%)</title><rect x="830.0" y="325" width="1.3" height="15.0" fill="rgb(224,59,4)" rx="2" ry="2" />
<text  x="833.00" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (317 samples, 0.67%)</title><rect x="246.0" y="309" width="7.8" height="15.0" fill="rgb(218,21,36)" rx="2" ry="2" />
<text  x="248.96" y="319.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (255 samples, 0.54%)</title><rect x="920.6" y="373" width="6.4" height="15.0" fill="rgb(216,68,49)" rx="2" ry="2" />
<text  x="923.64" y="383.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (72 samples, 0.15%)</title><rect x="510.0" y="229" width="1.8" height="15.0" fill="rgb(254,220,11)" rx="2" ry="2" />
<text  x="513.02" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (24 samples, 0.05%)</title><rect x="558.7" y="341" width="0.6" height="15.0" fill="rgb(205,91,22)" rx="2" ry="2" />
<text  x="561.66" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1137.6" y="421" width="0.1" height="15.0" fill="rgb(252,138,14)" rx="2" ry="2" />
<text  x="1140.57" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (61 samples, 0.13%)</title><rect x="829.8" y="341" width="1.5" height="15.0" fill="rgb(222,29,54)" rx="2" ry="2" />
<text  x="832.80" y="351.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.01%)</title><rect x="825.3" y="389" width="0.2" height="15.0" fill="rgb(242,125,13)" rx="2" ry="2" />
<text  x="828.34" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%)</title><rect x="1036.8" y="197" width="1.3" height="15.0" fill="rgb(242,98,20)" rx="2" ry="2" />
<text  x="1039.77" y="207.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="565.9" y="277" width="0.4" height="15.0" fill="rgb(251,211,17)" rx="2" ry="2" />
<text  x="568.92" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="948.0" y="405" width="0.2" height="15.0" fill="rgb(233,70,46)" rx="2" ry="2" />
<text  x="951.04" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.01%)</title><rect x="744.9" y="309" width="0.2" height="15.0" fill="rgb(207,38,45)" rx="2" ry="2" />
<text  x="747.94" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (13 samples, 0.03%)</title><rect x="232.5" y="213" width="0.4" height="15.0" fill="rgb(238,185,38)" rx="2" ry="2" />
<text  x="235.53" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (70 samples, 0.15%)</title><rect x="701.6" y="485" width="1.7" height="15.0" fill="rgb(251,38,45)" rx="2" ry="2" />
<text  x="704.60" y="495.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (26 samples, 0.05%)</title><rect x="1143.1" y="501" width="0.7" height="15.0" fill="rgb(205,178,18)" rx="2" ry="2" />
<text  x="1146.12" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (11 samples, 0.02%)</title><rect x="749.8" y="293" width="0.3" height="15.0" fill="rgb(236,113,1)" rx="2" ry="2" />
<text  x="752.84" y="303.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (18 samples, 0.04%)</title><rect x="37.9" y="437" width="0.4" height="15.0" fill="rgb(205,217,28)" rx="2" ry="2" />
<text  x="40.90" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="927.5" y="389" width="0.2" height="15.0" fill="rgb(236,156,54)" rx="2" ry="2" />
<text  x="930.53" y="399.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (149 samples, 0.31%)</title><rect x="13.4" y="581" width="3.7" height="15.0" fill="rgb(249,1,18)" rx="2" ry="2" />
<text  x="16.39" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%)</title><rect x="851.2" y="405" width="1.3" height="15.0" fill="rgb(241,176,21)" rx="2" ry="2" />
<text  x="854.16" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%)</title><rect x="220.3" y="117" width="0.2" height="15.0" fill="rgb(208,101,5)" rx="2" ry="2" />
<text  x="223.34" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (32 samples, 0.07%)</title><rect x="132.6" y="261" width="0.8" height="15.0" fill="rgb(205,124,48)" rx="2" ry="2" />
<text  x="135.60" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%)</title><rect x="1045.2" y="277" width="0.4" height="15.0" fill="rgb(218,79,40)" rx="2" ry="2" />
<text  x="1048.22" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (93 samples, 0.20%)</title><rect x="535.1" y="277" width="2.3" height="15.0" fill="rgb(245,226,51)" rx="2" ry="2" />
<text  x="538.09" y="287.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.01%)</title><rect x="820.7" y="341" width="0.2" height="15.0" fill="rgb(211,108,9)" rx="2" ry="2" />
<text  x="823.73" y="351.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%)</title><rect x="716.1" y="469" width="0.2" height="15.0" fill="rgb(233,188,15)" rx="2" ry="2" />
<text  x="719.15" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (6 samples, 0.01%)</title><rect x="18.5" y="213" width="0.1" height="15.0" fill="rgb(216,16,54)" rx="2" ry="2" />
<text  x="21.47" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="460.5" y="309" width="0.1" height="15.0" fill="rgb(223,106,14)" rx="2" ry="2" />
<text  x="463.46" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="293.3" y="229" width="0.1" height="15.0" fill="rgb(251,93,14)" rx="2" ry="2" />
<text  x="296.26" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1140.1" y="421" width="0.9" height="15.0" fill="rgb(224,102,16)" rx="2" ry="2" />
<text  x="1143.12" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="865.5" y="469" width="0.2" height="15.0" fill="rgb(205,163,26)" rx="2" ry="2" />
<text  x="868.53" y="479.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%)</title><rect x="733.0" y="309" width="0.1" height="15.0" fill="rgb(212,183,26)" rx="2" ry="2" />
<text  x="735.97" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (46 samples, 0.10%)</title><rect x="731.7" y="341" width="1.1" height="15.0" fill="rgb(250,56,11)" rx="2" ry="2" />
<text  x="734.66" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.04%)</title><rect x="766.4" y="309" width="0.4" height="15.0" fill="rgb(236,116,4)" rx="2" ry="2" />
<text  x="769.42" y="319.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (8 samples, 0.02%)</title><rect x="607.3" y="405" width="0.2" height="15.0" fill="rgb(231,43,35)" rx="2" ry="2" />
<text  x="610.30" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (258 samples, 0.54%)</title><rect x="246.9" y="293" width="6.4" height="15.0" fill="rgb(214,181,52)" rx="2" ry="2" />
<text  x="249.93" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="653.8" y="405" width="0.3" height="15.0" fill="rgb(254,18,37)" rx="2" ry="2" />
<text  x="656.81" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (6 samples, 0.01%)</title><rect x="239.4" y="181" width="0.1" height="15.0" fill="rgb(209,39,29)" rx="2" ry="2" />
<text  x="242.37" y="191.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="824.6" y="277" width="0.5" height="15.0" fill="rgb(206,120,28)" rx="2" ry="2" />
<text  x="827.65" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (5 samples, 0.01%)</title><rect x="656.6" y="453" width="0.1" height="15.0" fill="rgb(250,124,13)" rx="2" ry="2" />
<text  x="659.61" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="772.0" y="357" width="0.7" height="15.0" fill="rgb(245,152,5)" rx="2" ry="2" />
<text  x="774.97" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (36 samples, 0.08%)</title><rect x="39.8" y="421" width="0.9" height="15.0" fill="rgb(230,138,32)" rx="2" ry="2" />
<text  x="42.76" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="833.7" y="293" width="0.4" height="15.0" fill="rgb(229,71,15)" rx="2" ry="2" />
<text  x="836.74" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (75 samples, 0.16%)</title><rect x="515.9" y="245" width="1.8" height="15.0" fill="rgb(237,126,17)" rx="2" ry="2" />
<text  x="518.87" y="255.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="933.1" y="325" width="0.1" height="15.0" fill="rgb(225,176,41)" rx="2" ry="2" />
<text  x="936.05" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (12 samples, 0.03%)</title><rect x="273.2" y="293" width="0.3" height="15.0" fill="rgb(229,85,34)" rx="2" ry="2" />
<text  x="276.19" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="520.3" y="325" width="0.1" height="15.0" fill="rgb(222,18,43)" rx="2" ry="2" />
<text  x="523.25" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (21 samples, 0.04%)</title><rect x="211.9" y="133" width="0.5" height="15.0" fill="rgb(209,196,53)" rx="2" ry="2" />
<text  x="214.87" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (31 samples, 0.07%)</title><rect x="280.9" y="389" width="0.7" height="15.0" fill="rgb(232,35,30)" rx="2" ry="2" />
<text  x="283.87" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%)</title><rect x="1120.8" y="325" width="0.2" height="15.0" fill="rgb(221,43,28)" rx="2" ry="2" />
<text  x="1123.77" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,140 samples, 6.59%)</title><rect x="760.8" y="421" width="77.8" height="15.0" fill="rgb(250,167,49)" rx="2" ry="2" />
<text  x="763.77" y="431.5" >cql3::st..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="789.9" y="245" width="0.4" height="15.0" fill="rgb(234,127,10)" rx="2" ry="2" />
<text  x="792.94" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (30 samples, 0.06%)</title><rect x="650.6" y="421" width="0.7" height="15.0" fill="rgb(235,88,14)" rx="2" ry="2" />
<text  x="653.58" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (52 samples, 0.11%)</title><rect x="772.7" y="373" width="1.3" height="15.0" fill="rgb(241,95,21)" rx="2" ry="2" />
<text  x="775.74" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1046.7" y="261" width="0.1" height="15.0" fill="rgb(245,82,26)" rx="2" ry="2" />
<text  x="1049.66" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="1154.0" y="421" width="0.1" height="15.0" fill="rgb(250,135,10)" rx="2" ry="2" />
<text  x="1157.02" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="552.1" y="309" width="0.6" height="15.0" fill="rgb(215,49,15)" rx="2" ry="2" />
<text  x="555.09" y="319.5" ></text>
</g>
<g >
<title>database::find_keyspace (25 samples, 0.05%)</title><rect x="970.8" y="357" width="0.6" height="15.0" fill="rgb(232,225,2)" rx="2" ry="2" />
<text  x="973.76" y="367.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="1098.4" y="245" width="0.2" height="15.0" fill="rgb(206,201,0)" rx="2" ry="2" />
<text  x="1101.40" y="255.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (32 samples, 0.07%)</title><rect x="531.2" y="261" width="0.8" height="15.0" fill="rgb(221,191,34)" rx="2" ry="2" />
<text  x="534.23" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (23 samples, 0.05%)</title><rect x="839.3" y="421" width="0.6" height="15.0" fill="rgb(218,170,22)" rx="2" ry="2" />
<text  x="842.29" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (15 samples, 0.03%)</title><rect x="606.3" y="437" width="0.4" height="15.0" fill="rgb(244,9,32)" rx="2" ry="2" />
<text  x="609.31" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (86 samples, 0.18%)</title><rect x="1057.4" y="341" width="2.1" height="15.0" fill="rgb(223,221,20)" rx="2" ry="2" />
<text  x="1060.41" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%)</title><rect x="281.5" y="373" width="0.1" height="15.0" fill="rgb(231,26,51)" rx="2" ry="2" />
<text  x="284.47" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1174.9" y="501" width="0.1" height="15.0" fill="rgb(246,31,20)" rx="2" ry="2" />
<text  x="1177.86" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (11 samples, 0.02%)</title><rect x="1110.8" y="373" width="0.3" height="15.0" fill="rgb(253,79,8)" rx="2" ry="2" />
<text  x="1113.78" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (123 samples, 0.26%)</title><rect x="991.2" y="293" width="3.0" height="15.0" fill="rgb(230,20,7)" rx="2" ry="2" />
<text  x="994.18" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%)</title><rect x="74.2" y="453" width="0.2" height="15.0" fill="rgb(218,63,44)" rx="2" ry="2" />
<text  x="77.17" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (22 samples, 0.05%)</title><rect x="450.1" y="277" width="0.5" height="15.0" fill="rgb(219,104,48)" rx="2" ry="2" />
<text  x="453.06" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,328 samples, 2.79%)</title><rect x="556.8" y="405" width="32.9" height="15.0" fill="rgb(219,68,45)" rx="2" ry="2" />
<text  x="559.82" y="415.5" >fl..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="747.7" y="357" width="0.2" height="15.0" fill="rgb(254,104,13)" rx="2" ry="2" />
<text  x="750.71" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (5 samples, 0.01%)</title><rect x="405.6" y="213" width="0.2" height="15.0" fill="rgb(222,4,53)" rx="2" ry="2" />
<text  x="408.63" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (76 samples, 0.16%)</title><rect x="532.7" y="309" width="1.9" height="15.0" fill="rgb(234,228,36)" rx="2" ry="2" />
<text  x="535.72" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%)</title><rect x="1107.3" y="389" width="0.2" height="15.0" fill="rgb(235,159,46)" rx="2" ry="2" />
<text  x="1110.29" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (178 samples, 0.37%)</title><rect x="217.1" y="197" width="4.4" height="15.0" fill="rgb(212,66,40)" rx="2" ry="2" />
<text  x="220.12" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="262.4" y="309" width="0.2" height="15.0" fill="rgb(215,159,3)" rx="2" ry="2" />
<text  x="265.36" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1033.7" y="197" width="0.1" height="15.0" fill="rgb(247,104,19)" rx="2" ry="2" />
<text  x="1036.70" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (8 samples, 0.02%)</title><rect x="1053.1" y="325" width="0.2" height="15.0" fill="rgb(235,85,51)" rx="2" ry="2" />
<text  x="1056.05" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="828.5" y="325" width="0.2" height="15.0" fill="rgb(218,159,23)" rx="2" ry="2" />
<text  x="831.54" y="335.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%)</title><rect x="140.7" y="229" width="0.3" height="15.0" fill="rgb(238,200,33)" rx="2" ry="2" />
<text  x="143.65" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (8 samples, 0.02%)</title><rect x="1140.2" y="197" width="0.2" height="15.0" fill="rgb(227,196,11)" rx="2" ry="2" />
<text  x="1143.20" y="207.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (22 samples, 0.05%)</title><rect x="226.0" y="245" width="0.5" height="15.0" fill="rgb(254,196,13)" rx="2" ry="2" />
<text  x="228.99" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="416.2" y="245" width="0.1" height="15.0" fill="rgb(213,194,53)" rx="2" ry="2" />
<text  x="419.16" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (115 samples, 0.24%)</title><rect x="848.1" y="405" width="2.8" height="15.0" fill="rgb(244,17,17)" rx="2" ry="2" />
<text  x="851.09" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (87 samples, 0.18%)</title><rect x="10.5" y="581" width="2.1" height="15.0" fill="rgb(234,33,35)" rx="2" ry="2" />
<text  x="13.47" y="591.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,282 samples, 11.09%)</title><rect x="727.5" y="453" width="130.9" height="15.0" fill="rgb(229,163,11)" rx="2" ry="2" />
<text  x="730.52" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%)</title><rect x="690.7" y="341" width="0.6" height="15.0" fill="rgb(223,130,14)" rx="2" ry="2" />
<text  x="693.72" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="519.9" y="309" width="0.3" height="15.0" fill="rgb(220,224,18)" rx="2" ry="2" />
<text  x="522.88" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (833 samples, 1.75%)</title><rect x="499.2" y="309" width="20.7" height="15.0" fill="rgb(227,195,25)" rx="2" ry="2" />
<text  x="502.24" y="319.5" ></text>
</g>
<g >
<title>database::query (5 samples, 0.01%)</title><rect x="25.2" y="517" width="0.2" height="15.0" fill="rgb(231,114,47)" rx="2" ry="2" />
<text  x="28.24" y="527.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (48 samples, 0.10%)</title><rect x="925.5" y="325" width="1.2" height="15.0" fill="rgb(216,223,26)" rx="2" ry="2" />
<text  x="928.52" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (25 samples, 0.05%)</title><rect x="148.9" y="213" width="0.6" height="15.0" fill="rgb(219,186,31)" rx="2" ry="2" />
<text  x="151.93" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (27 samples, 0.06%)</title><rect x="1141.3" y="485" width="0.7" height="15.0" fill="rgb(253,171,20)" rx="2" ry="2" />
<text  x="1144.31" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (23 samples, 0.05%)</title><rect x="121.6" y="277" width="0.6" height="15.0" fill="rgb(216,189,24)" rx="2" ry="2" />
<text  x="124.62" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="541.3" y="389" width="1.2" height="15.0" fill="rgb(237,218,4)" rx="2" ry="2" />
<text  x="544.34" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="555.8" y="421" width="0.1" height="15.0" fill="rgb(223,34,52)" rx="2" ry="2" />
<text  x="558.78" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (7 samples, 0.01%)</title><rect x="1140.8" y="213" width="0.2" height="15.0" fill="rgb(246,196,47)" rx="2" ry="2" />
<text  x="1143.79" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="106.6" y="373" width="0.2" height="15.0" fill="rgb(226,4,26)" rx="2" ry="2" />
<text  x="109.58" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (27 samples, 0.06%)</title><rect x="597.2" y="389" width="0.7" height="15.0" fill="rgb(254,97,36)" rx="2" ry="2" />
<text  x="600.24" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (9 samples, 0.02%)</title><rect x="1140.2" y="261" width="0.2" height="15.0" fill="rgb(237,57,43)" rx="2" ry="2" />
<text  x="1143.17" y="271.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="1158.3" y="389" width="0.7" height="15.0" fill="rgb(210,86,50)" rx="2" ry="2" />
<text  x="1161.26" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (7 samples, 0.01%)</title><rect x="781.0" y="341" width="0.1" height="15.0" fill="rgb(216,67,51)" rx="2" ry="2" />
<text  x="783.97" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (446 samples, 0.94%)</title><rect x="267.7" y="325" width="11.0" height="15.0" fill="rgb(225,149,6)" rx="2" ry="2" />
<text  x="270.69" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (20 samples, 0.04%)</title><rect x="763.2" y="325" width="0.5" height="15.0" fill="rgb(253,198,9)" rx="2" ry="2" />
<text  x="766.22" y="335.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,840 samples, 22.76%)</title><rect x="873.6" y="501" width="268.6" height="15.0" fill="rgb(233,205,26)" rx="2" ry="2" />
<text  x="876.61" y="511.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="841.9" y="421" width="0.1" height="15.0" fill="rgb(226,22,53)" rx="2" ry="2" />
<text  x="844.89" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (50 samples, 0.10%)</title><rect x="953.4" y="405" width="1.3" height="15.0" fill="rgb(212,129,9)" rx="2" ry="2" />
<text  x="956.42" y="415.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (8 samples, 0.02%)</title><rect x="751.6" y="277" width="0.2" height="15.0" fill="rgb(227,18,21)" rx="2" ry="2" />
<text  x="754.63" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (34 samples, 0.07%)</title><rect x="1046.5" y="277" width="0.9" height="15.0" fill="rgb(223,100,21)" rx="2" ry="2" />
<text  x="1049.54" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="826.7" y="373" width="0.1" height="15.0" fill="rgb(242,53,2)" rx="2" ry="2" />
<text  x="829.66" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (33 samples, 0.07%)</title><rect x="732.0" y="325" width="0.8" height="15.0" fill="rgb(254,152,52)" rx="2" ry="2" />
<text  x="734.98" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%)</title><rect x="734.9" y="293" width="0.4" height="15.0" fill="rgb(234,37,3)" rx="2" ry="2" />
<text  x="737.85" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (24 samples, 0.05%)</title><rect x="1046.8" y="261" width="0.6" height="15.0" fill="rgb(207,47,1)" rx="2" ry="2" />
<text  x="1049.78" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (23 samples, 0.05%)</title><rect x="1121.1" y="357" width="0.6" height="15.0" fill="rgb(221,8,37)" rx="2" ry="2" />
<text  x="1124.09" y="367.5" ></text>
</g>
<g >
<title>local_schema_registry (12 samples, 0.03%)</title><rect x="971.6" y="357" width="0.3" height="15.0" fill="rgb(213,99,48)" rx="2" ry="2" />
<text  x="974.61" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (16 samples, 0.03%)</title><rect x="985.4" y="293" width="0.4" height="15.0" fill="rgb(230,100,30)" rx="2" ry="2" />
<text  x="988.43" y="303.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (748 samples, 1.57%)</title><rect x="558.1" y="357" width="18.5" height="15.0" fill="rgb(213,130,12)" rx="2" ry="2" />
<text  x="561.11" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (59 samples, 0.12%)</title><rect x="767.3" y="325" width="1.5" height="15.0" fill="rgb(220,150,46)" rx="2" ry="2" />
<text  x="770.34" y="335.5" ></text>
</g>
<g >
<title>query::result::builder::builder (141 samples, 0.30%)</title><rect x="602.3" y="421" width="3.5" height="15.0" fill="rgb(233,69,34)" rx="2" ry="2" />
<text  x="605.29" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (24 samples, 0.05%)</title><rect x="750.1" y="293" width="0.6" height="15.0" fill="rgb(240,218,18)" rx="2" ry="2" />
<text  x="753.12" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (11 samples, 0.02%)</title><rect x="203.4" y="101" width="0.3" height="15.0" fill="rgb(220,202,38)" rx="2" ry="2" />
<text  x="206.44" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (19 samples, 0.04%)</title><rect x="954.1" y="357" width="0.5" height="15.0" fill="rgb(221,19,0)" rx="2" ry="2" />
<text  x="957.14" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (12 samples, 0.03%)</title><rect x="1068.6" y="341" width="0.3" height="15.0" fill="rgb(236,225,45)" rx="2" ry="2" />
<text  x="1071.64" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="611.9" y="421" width="0.2" height="15.0" fill="rgb(209,149,1)" rx="2" ry="2" />
<text  x="614.93" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="635.2" y="469" width="0.2" height="15.0" fill="rgb(228,49,21)" rx="2" ry="2" />
<text  x="638.25" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (204 samples, 0.43%)</title><rect x="216.8" y="213" width="5.1" height="15.0" fill="rgb(227,135,19)" rx="2" ry="2" />
<text  x="219.85" y="223.5" ></text>
</g>
<g >
<title>operator new (123 samples, 0.26%)</title><rect x="1010.4" y="277" width="3.1" height="15.0" fill="rgb(223,91,17)" rx="2" ry="2" />
<text  x="1013.41" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (45 samples, 0.09%)</title><rect x="809.2" y="117" width="1.1" height="15.0" fill="rgb(239,52,14)" rx="2" ry="2" />
<text  x="812.16" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1142.3" y="501" width="0.1" height="15.0" fill="rgb(225,120,26)" rx="2" ry="2" />
<text  x="1145.25" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (22 samples, 0.05%)</title><rect x="414.7" y="277" width="0.6" height="15.0" fill="rgb(243,104,44)" rx="2" ry="2" />
<text  x="417.75" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (24 samples, 0.05%)</title><rect x="735.9" y="389" width="0.6" height="15.0" fill="rgb(211,88,50)" rx="2" ry="2" />
<text  x="738.92" y="399.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="1137.9" y="437" width="0.3" height="15.0" fill="rgb(247,8,3)" rx="2" ry="2" />
<text  x="1140.89" y="447.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%)</title><rect x="1175.9" y="437" width="0.1" height="15.0" fill="rgb(233,44,12)" rx="2" ry="2" />
<text  x="1178.90" y="447.5" ></text>
</g>
<g >
<title>create_partitions (279 samples, 0.59%)</title><rect x="17.7" y="533" width="6.9" height="15.0" fill="rgb(226,105,34)" rx="2" ry="2" />
<text  x="20.68" y="543.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (13 samples, 0.03%)</title><rect x="235.6" y="165" width="0.3" height="15.0" fill="rgb(254,68,23)" rx="2" ry="2" />
<text  x="238.58" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,430 samples, 9.30%)</title><rect x="136.2" y="309" width="109.8" height="15.0" fill="rgb(230,26,13)" rx="2" ry="2" />
<text  x="139.19" y="319.5" >partition_sna..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1149.2" y="485" width="0.1" height="15.0" fill="rgb(254,43,24)" rx="2" ry="2" />
<text  x="1152.17" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (8 samples, 0.02%)</title><rect x="911.3" y="389" width="0.2" height="15.0" fill="rgb(237,30,51)" rx="2" ry="2" />
<text  x="914.32" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="873.0" y="405" width="0.4" height="15.0" fill="rgb(235,6,53)" rx="2" ry="2" />
<text  x="876.04" y="415.5" ></text>
</g>
<g >
<title>row::row (1,460 samples, 3.07%)</title><rect x="163.8" y="149" width="36.2" height="15.0" fill="rgb(242,4,19)" rx="2" ry="2" />
<text  x="166.85" y="159.5" >row..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%)</title><rect x="193.4" y="101" width="0.2" height="15.0" fill="rgb(228,24,4)" rx="2" ry="2" />
<text  x="196.38" y="111.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (21 samples, 0.04%)</title><rect x="365.7" y="197" width="0.6" height="15.0" fill="rgb(239,198,15)" rx="2" ry="2" />
<text  x="368.74" y="207.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="658.9" y="485" width="1.1" height="15.0" fill="rgb(246,22,40)" rx="2" ry="2" />
<text  x="661.88" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (116 samples, 0.24%)</title><rect x="751.5" y="309" width="2.8" height="15.0" fill="rgb(227,58,38)" rx="2" ry="2" />
<text  x="754.46" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (163 samples, 0.34%)</title><rect x="172.9" y="101" width="4.1" height="15.0" fill="rgb(222,189,26)" rx="2" ry="2" />
<text  x="175.91" y="111.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (6 samples, 0.01%)</title><rect x="1111.1" y="421" width="0.1" height="15.0" fill="rgb(237,128,12)" rx="2" ry="2" />
<text  x="1114.08" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (86 samples, 0.18%)</title><rect x="1156.8" y="453" width="2.2" height="15.0" fill="rgb(220,173,15)" rx="2" ry="2" />
<text  x="1159.85" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (5 samples, 0.01%)</title><rect x="369.0" y="197" width="0.1" height="15.0" fill="rgb(243,54,34)" rx="2" ry="2" />
<text  x="371.96" y="207.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="765.9" y="293" width="0.2" height="15.0" fill="rgb(241,116,2)" rx="2" ry="2" />
<text  x="768.85" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%)</title><rect x="24.8" y="421" width="0.1" height="15.0" fill="rgb(235,35,5)" rx="2" ry="2" />
<text  x="27.79" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.01%)</title><rect x="21.4" y="309" width="0.1" height="15.0" fill="rgb(205,84,31)" rx="2" ry="2" />
<text  x="24.40" y="319.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,533 samples, 97.71%)</title><rect x="25.1" y="581" width="1153.0" height="15.0" fill="rgb(205,106,1)" rx="2" ry="2" />
<text  x="28.09" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (18 samples, 0.04%)</title><rect x="543.5" y="405" width="0.5" height="15.0" fill="rgb(251,20,7)" rx="2" ry="2" />
<text  x="546.52" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (16 samples, 0.03%)</title><rect x="720.9" y="485" width="0.4" height="15.0" fill="rgb(253,29,2)" rx="2" ry="2" />
<text  x="723.88" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (42 samples, 0.09%)</title><rect x="269.4" y="293" width="1.1" height="15.0" fill="rgb(234,166,42)" rx="2" ry="2" />
<text  x="272.45" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (29 samples, 0.06%)</title><rect x="812.0" y="245" width="0.7" height="15.0" fill="rgb(210,47,52)" rx="2" ry="2" />
<text  x="814.99" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="934.0" y="389" width="0.4" height="15.0" fill="rgb(226,189,1)" rx="2" ry="2" />
<text  x="937.02" y="399.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1126.0" y="421" width="0.1" height="15.0" fill="rgb(251,74,48)" rx="2" ry="2" />
<text  x="1128.97" y="431.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (40 samples, 0.08%)</title><rect x="631.4" y="485" width="1.0" height="15.0" fill="rgb(243,100,37)" rx="2" ry="2" />
<text  x="634.43" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (52 samples, 0.11%)</title><rect x="325.9" y="181" width="1.3" height="15.0" fill="rgb(216,57,1)" rx="2" ry="2" />
<text  x="328.87" y="191.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (11 samples, 0.02%)</title><rect x="904.9" y="325" width="0.3" height="15.0" fill="rgb(232,34,48)" rx="2" ry="2" />
<text  x="907.90" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,621 samples, 11.80%)</title><rect x="966.7" y="373" width="139.3" height="15.0" fill="rgb(225,199,51)" rx="2" ry="2" />
<text  x="969.73" y="383.5" >service::storage_..</text>
</g>
<g >
<title>__libc_start_main (46,533 samples, 97.71%)</title><rect x="25.1" y="629" width="1153.0" height="15.0" fill="rgb(233,141,30)" rx="2" ry="2" />
<text  x="28.09" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (21 samples, 0.04%)</title><rect x="439.6" y="325" width="0.5" height="15.0" fill="rgb(239,90,46)" rx="2" ry="2" />
<text  x="442.60" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (8 samples, 0.02%)</title><rect x="406.5" y="261" width="0.2" height="15.0" fill="rgb(248,201,43)" rx="2" ry="2" />
<text  x="409.52" y="271.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (108 samples, 0.23%)</title><rect x="418.1" y="373" width="2.7" height="15.0" fill="rgb(240,54,25)" rx="2" ry="2" />
<text  x="421.09" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="833.3" y="261" width="0.3" height="15.0" fill="rgb(228,99,10)" rx="2" ry="2" />
<text  x="836.35" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (100 samples, 0.21%)</title><rect x="451.6" y="309" width="2.5" height="15.0" fill="rgb(217,200,3)" rx="2" ry="2" />
<text  x="454.62" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%)</title><rect x="24.7" y="565" width="0.3" height="15.0" fill="rgb(235,44,3)" rx="2" ry="2" />
<text  x="27.69" y="575.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (466 samples, 0.98%)</title><rect x="893.9" y="341" width="11.6" height="15.0" fill="rgb(230,205,23)" rx="2" ry="2" />
<text  x="896.90" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (24 samples, 0.05%)</title><rect x="1064.2" y="277" width="0.5" height="15.0" fill="rgb(228,141,33)" rx="2" ry="2" />
<text  x="1067.15" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (19 samples, 0.04%)</title><rect x="220.7" y="165" width="0.5" height="15.0" fill="rgb(217,77,15)" rx="2" ry="2" />
<text  x="223.71" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (38 samples, 0.08%)</title><rect x="651.3" y="437" width="1.0" height="15.0" fill="rgb(205,110,40)" rx="2" ry="2" />
<text  x="654.33" y="447.5" ></text>
</g>
<g >
<title>auth::resource::resource (69 samples, 0.14%)</title><rect x="774.3" y="373" width="1.7" height="15.0" fill="rgb(243,204,17)" rx="2" ry="2" />
<text  x="777.28" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="41.2" y="437" width="0.2" height="15.0" fill="rgb(236,24,21)" rx="2" ry="2" />
<text  x="44.20" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (7 samples, 0.01%)</title><rect x="585.5" y="341" width="0.2" height="15.0" fill="rgb(226,110,20)" rx="2" ry="2" />
<text  x="588.52" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (30 samples, 0.06%)</title><rect x="214.5" y="181" width="0.7" height="15.0" fill="rgb(210,221,36)" rx="2" ry="2" />
<text  x="217.49" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,339 samples, 2.81%)</title><rect x="556.8" y="421" width="33.2" height="15.0" fill="rgb(221,36,18)" rx="2" ry="2" />
<text  x="559.80" y="431.5" >st..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="980.3" y="357" width="0.4" height="15.0" fill="rgb(237,77,4)" rx="2" ry="2" />
<text  x="983.33" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%)</title><rect x="985.5" y="277" width="0.3" height="15.0" fill="rgb(244,174,1)" rx="2" ry="2" />
<text  x="988.53" y="287.5" ></text>
</g>
</g>
</svg>
