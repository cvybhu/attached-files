<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>reader_permit::consume_memory (15 samples, 0.03%)</title><rect x="211.4" y="165" width="0.3" height="15.0" fill="rgb(217,171,49)" rx="2" ry="2" />
<text  x="214.35" y="175.5" ></text>
</g>
<g >
<title>dht::tri_compare (24 samples, 0.05%)</title><rect x="1088.0" y="245" width="0.6" height="15.0" fill="rgb(254,197,48)" rx="2" ry="2" />
<text  x="1091.01" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (124 samples, 0.26%)</title><rect x="1018.4" y="261" width="3.1" height="15.0" fill="rgb(240,138,35)" rx="2" ry="2" />
<text  x="1021.43" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (10 samples, 0.02%)</title><rect x="230.7" y="245" width="0.3" height="15.0" fill="rgb(216,70,27)" rx="2" ry="2" />
<text  x="233.72" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="574.2" y="309" width="0.2" height="15.0" fill="rgb(213,145,2)" rx="2" ry="2" />
<text  x="577.22" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1169.7" y="453" width="0.1" height="15.0" fill="rgb(222,216,19)" rx="2" ry="2" />
<text  x="1172.66" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (17 samples, 0.04%)</title><rect x="654.3" y="389" width="0.5" height="15.0" fill="rgb(233,186,27)" rx="2" ry="2" />
<text  x="657.34" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (113 samples, 0.24%)</title><rect x="993.3" y="325" width="2.8" height="15.0" fill="rgb(243,214,26)" rx="2" ry="2" />
<text  x="996.27" y="335.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="1049.3" y="261" width="2.0" height="15.0" fill="rgb(212,108,1)" rx="2" ry="2" />
<text  x="1052.33" y="271.5" ></text>
</g>
<g >
<title>database::has_keyspace (175 samples, 0.37%)</title><rect x="861.8" y="421" width="4.4" height="15.0" fill="rgb(239,160,16)" rx="2" ry="2" />
<text  x="864.80" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,185 samples, 21.54%)</title><rect x="887.5" y="485" width="254.2" height="15.0" fill="rgb(232,194,3)" rx="2" ry="2" />
<text  x="890.51" y="495.5" >seastar::concrete_execution_stage..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="226.8" y="213" width="0.3" height="15.0" fill="rgb(214,116,23)" rx="2" ry="2" />
<text  x="229.75" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (216 samples, 0.46%)</title><rect x="250.1" y="293" width="5.4" height="15.0" fill="rgb(222,131,47)" rx="2" ry="2" />
<text  x="253.06" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (29 samples, 0.06%)</title><rect x="1142.6" y="325" width="0.8" height="15.0" fill="rgb(213,11,22)" rx="2" ry="2" />
<text  x="1145.63" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,260 samples, 2.67%)</title><rect x="557.4" y="421" width="31.4" height="15.0" fill="rgb(213,154,52)" rx="2" ry="2" />
<text  x="560.39" y="431.5" >st..</text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (9 samples, 0.02%)</title><rect x="858.6" y="437" width="0.2" height="15.0" fill="rgb(234,24,22)" rx="2" ry="2" />
<text  x="861.61" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (51 samples, 0.11%)</title><rect x="1162.7" y="453" width="1.3" height="15.0" fill="rgb(248,55,9)" rx="2" ry="2" />
<text  x="1165.72" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (6 samples, 0.01%)</title><rect x="851.5" y="405" width="0.2" height="15.0" fill="rgb(235,84,23)" rx="2" ry="2" />
<text  x="854.52" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (206 samples, 0.44%)</title><rect x="16.0" y="405" width="5.2" height="15.0" fill="rgb(213,142,33)" rx="2" ry="2" />
<text  x="19.04" y="415.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="1104.1" y="309" width="0.2" height="15.0" fill="rgb(214,45,46)" rx="2" ry="2" />
<text  x="1107.09" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%)</title><rect x="914.3" y="309" width="0.1" height="15.0" fill="rgb(229,61,22)" rx="2" ry="2" />
<text  x="917.27" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (7 samples, 0.01%)</title><rect x="946.5" y="405" width="0.2" height="15.0" fill="rgb(220,77,10)" rx="2" ry="2" />
<text  x="949.54" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (34 samples, 0.07%)</title><rect x="252.8" y="277" width="0.8" height="15.0" fill="rgb(219,14,35)" rx="2" ry="2" />
<text  x="255.78" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (64 samples, 0.14%)</title><rect x="16.1" y="325" width="1.6" height="15.0" fill="rgb(243,114,12)" rx="2" ry="2" />
<text  x="19.14" y="335.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (6 samples, 0.01%)</title><rect x="886.7" y="293" width="0.2" height="15.0" fill="rgb(232,87,32)" rx="2" ry="2" />
<text  x="889.71" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (18 samples, 0.04%)</title><rect x="633.3" y="469" width="0.5" height="15.0" fill="rgb(234,106,5)" rx="2" ry="2" />
<text  x="636.35" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (17 samples, 0.04%)</title><rect x="242.5" y="245" width="0.4" height="15.0" fill="rgb(221,18,30)" rx="2" ry="2" />
<text  x="245.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (23 samples, 0.05%)</title><rect x="455.4" y="261" width="0.6" height="15.0" fill="rgb(228,86,15)" rx="2" ry="2" />
<text  x="458.41" y="271.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (12 samples, 0.03%)</title><rect x="222.4" y="181" width="0.3" height="15.0" fill="rgb(236,47,35)" rx="2" ry="2" />
<text  x="225.36" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (17 samples, 0.04%)</title><rect x="589.4" y="405" width="0.4" height="15.0" fill="rgb(208,106,46)" rx="2" ry="2" />
<text  x="592.42" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (14 samples, 0.03%)</title><rect x="373.7" y="181" width="0.3" height="15.0" fill="rgb(237,141,37)" rx="2" ry="2" />
<text  x="376.66" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.04%)</title><rect x="810.0" y="133" width="0.5" height="15.0" fill="rgb(247,75,47)" rx="2" ry="2" />
<text  x="813.04" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (29 samples, 0.06%)</title><rect x="579.1" y="357" width="0.7" height="15.0" fill="rgb(218,187,31)" rx="2" ry="2" />
<text  x="582.08" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (23 samples, 0.05%)</title><rect x="641.7" y="485" width="0.5" height="15.0" fill="rgb(222,212,46)" rx="2" ry="2" />
<text  x="644.66" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="291.7" y="245" width="0.3" height="15.0" fill="rgb(239,81,46)" rx="2" ry="2" />
<text  x="294.70" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (5 samples, 0.01%)</title><rect x="71.2" y="389" width="0.1" height="15.0" fill="rgb(251,54,19)" rx="2" ry="2" />
<text  x="74.15" y="399.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (10 samples, 0.02%)</title><rect x="1142.8" y="165" width="0.3" height="15.0" fill="rgb(231,104,36)" rx="2" ry="2" />
<text  x="1145.83" y="175.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="490.0" y="213" width="0.1" height="15.0" fill="rgb(213,156,21)" rx="2" ry="2" />
<text  x="492.98" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (71 samples, 0.15%)</title><rect x="772.5" y="341" width="1.7" height="15.0" fill="rgb(251,166,5)" rx="2" ry="2" />
<text  x="775.47" y="351.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (33 samples, 0.07%)</title><rect x="228.0" y="229" width="0.8" height="15.0" fill="rgb(218,73,38)" rx="2" ry="2" />
<text  x="231.02" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (44 samples, 0.09%)</title><rect x="951.2" y="357" width="1.1" height="15.0" fill="rgb(247,34,43)" rx="2" ry="2" />
<text  x="954.23" y="367.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="1159.4" y="389" width="0.8" height="15.0" fill="rgb(237,106,13)" rx="2" ry="2" />
<text  x="1162.45" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="277.7" y="325" width="0.3" height="15.0" fill="rgb(216,117,13)" rx="2" ry="2" />
<text  x="280.67" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="879.4" y="469" width="0.2" height="15.0" fill="rgb(217,41,40)" rx="2" ry="2" />
<text  x="882.43" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.03%)</title><rect x="565.6" y="277" width="0.3" height="15.0" fill="rgb(242,135,48)" rx="2" ry="2" />
<text  x="568.61" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="61.5" y="437" width="0.2" height="15.0" fill="rgb(216,154,7)" rx="2" ry="2" />
<text  x="64.54" y="447.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (14 samples, 0.03%)</title><rect x="281.4" y="405" width="0.3" height="15.0" fill="rgb(253,88,7)" rx="2" ry="2" />
<text  x="284.39" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="1168.1" y="485" width="0.2" height="15.0" fill="rgb(222,174,24)" rx="2" ry="2" />
<text  x="1171.09" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (71 samples, 0.15%)</title><rect x="421.5" y="357" width="1.8" height="15.0" fill="rgb(220,214,16)" rx="2" ry="2" />
<text  x="424.54" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,219 samples, 2.58%)</title><rect x="557.6" y="405" width="30.4" height="15.0" fill="rgb(214,3,48)" rx="2" ry="2" />
<text  x="560.57" y="415.5" >fl..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (11 samples, 0.02%)</title><rect x="426.7" y="405" width="0.3" height="15.0" fill="rgb(244,179,34)" rx="2" ry="2" />
<text  x="429.70" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (143 samples, 0.30%)</title><rect x="550.5" y="389" width="3.6" height="15.0" fill="rgb(207,92,32)" rx="2" ry="2" />
<text  x="553.53" y="399.5" ></text>
</g>
<g >
<title>query::querier&lt; (11 samples, 0.02%)</title><rect x="62.0" y="453" width="0.3" height="15.0" fill="rgb(245,93,44)" rx="2" ry="2" />
<text  x="65.02" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%)</title><rect x="316.9" y="197" width="0.2" height="15.0" fill="rgb(243,104,47)" rx="2" ry="2" />
<text  x="319.86" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (8 samples, 0.02%)</title><rect x="1142.6" y="293" width="0.2" height="15.0" fill="rgb(235,43,19)" rx="2" ry="2" />
<text  x="1145.63" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="841.0" y="357" width="0.1" height="15.0" fill="rgb(247,211,47)" rx="2" ry="2" />
<text  x="843.96" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (10 samples, 0.02%)</title><rect x="718.1" y="453" width="0.2" height="15.0" fill="rgb(213,168,14)" rx="2" ry="2" />
<text  x="721.06" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="807.0" y="229" width="0.1" height="15.0" fill="rgb(229,217,42)" rx="2" ry="2" />
<text  x="809.97" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (83 samples, 0.18%)</title><rect x="832.3" y="325" width="2.1" height="15.0" fill="rgb(237,63,46)" rx="2" ry="2" />
<text  x="835.30" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (68 samples, 0.14%)</title><rect x="445.5" y="261" width="1.7" height="15.0" fill="rgb(250,114,8)" rx="2" ry="2" />
<text  x="448.52" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="952.0" y="309" width="0.3" height="15.0" fill="rgb(209,227,22)" rx="2" ry="2" />
<text  x="955.01" y="319.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="857.1" y="373" width="0.6" height="15.0" fill="rgb(252,222,28)" rx="2" ry="2" />
<text  x="860.09" y="383.5" ></text>
</g>
<g >
<title>std::type_info::operator== (12 samples, 0.03%)</title><rect x="1082.1" y="277" width="0.3" height="15.0" fill="rgb(242,37,16)" rx="2" ry="2" />
<text  x="1085.07" y="287.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1175.9" y="405" width="0.2" height="15.0" fill="rgb(241,198,38)" rx="2" ry="2" />
<text  x="1178.90" y="415.5" ></text>
</g>
<g >
<title>seastar::gate::enter (10 samples, 0.02%)</title><rect x="1048.1" y="181" width="0.2" height="15.0" fill="rgb(249,112,42)" rx="2" ry="2" />
<text  x="1051.05" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,909 samples, 48.46%)</title><rect x="57.7" y="469" width="571.9" height="15.0" fill="rgb(246,189,46)" rx="2" ry="2" />
<text  x="60.75" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (73 samples, 0.15%)</title><rect x="752.4" y="325" width="1.8" height="15.0" fill="rgb(239,172,38)" rx="2" ry="2" />
<text  x="755.38" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="705.5" y="485" width="0.2" height="15.0" fill="rgb(221,175,15)" rx="2" ry="2" />
<text  x="708.53" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (17 samples, 0.04%)</title><rect x="282.8" y="389" width="0.4" height="15.0" fill="rgb(254,223,30)" rx="2" ry="2" />
<text  x="285.81" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,937 samples, 6.21%)</title><rect x="990.7" y="357" width="73.3" height="15.0" fill="rgb(214,185,53)" rx="2" ry="2" />
<text  x="993.70" y="367.5" >service:..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.04%)</title><rect x="323.6" y="181" width="0.6" height="15.0" fill="rgb(226,21,32)" rx="2" ry="2" />
<text  x="326.64" y="191.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%)</title><rect x="273.6" y="277" width="1.7" height="15.0" fill="rgb(244,20,29)" rx="2" ry="2" />
<text  x="276.55" y="287.5" ></text>
</g>
<g >
<title>database::query (149 samples, 0.32%)</title><rect x="44.4" y="501" width="3.7" height="15.0" fill="rgb(236,128,48)" rx="2" ry="2" />
<text  x="47.42" y="511.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,726 samples, 10.00%)</title><rect x="428.5" y="421" width="117.9" height="15.0" fill="rgb(212,80,0)" rx="2" ry="2" />
<text  x="431.45" y="431.5" >query::querier..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (409 samples, 0.87%)</title><rect x="399.7" y="229" width="10.2" height="15.0" fill="rgb(212,225,31)" rx="2" ry="2" />
<text  x="402.70" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="635.1" y="469" width="0.2" height="15.0" fill="rgb(211,194,10)" rx="2" ry="2" />
<text  x="638.12" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1084.2" y="325" width="0.3" height="15.0" fill="rgb(222,202,19)" rx="2" ry="2" />
<text  x="1087.22" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="681.0" y="437" width="0.2" height="15.0" fill="rgb(239,82,9)" rx="2" ry="2" />
<text  x="684.04" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (74 samples, 0.16%)</title><rect x="870.6" y="373" width="1.9" height="15.0" fill="rgb(215,221,10)" rx="2" ry="2" />
<text  x="873.64" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="451.4" y="293" width="0.2" height="15.0" fill="rgb(211,83,25)" rx="2" ry="2" />
<text  x="454.41" y="303.5" ></text>
</g>
<g >
<title>operator new (160 samples, 0.34%)</title><rect x="1028.6" y="245" width="4.0" height="15.0" fill="rgb(205,39,41)" rx="2" ry="2" />
<text  x="1031.61" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="1155.1" y="405" width="0.2" height="15.0" fill="rgb(229,45,9)" rx="2" ry="2" />
<text  x="1158.08" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="877.7" y="421" width="0.2" height="15.0" fill="rgb(226,113,28)" rx="2" ry="2" />
<text  x="880.73" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="420.9" y="357" width="0.1" height="15.0" fill="rgb(232,55,14)" rx="2" ry="2" />
<text  x="423.89" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (34 samples, 0.07%)</title><rect x="682.5" y="453" width="0.8" height="15.0" fill="rgb(232,36,43)" rx="2" ry="2" />
<text  x="685.49" y="463.5" ></text>
</g>
<g >
<title>free (25 samples, 0.05%)</title><rect x="38.0" y="421" width="0.6" height="15.0" fill="rgb(210,152,51)" rx="2" ry="2" />
<text  x="40.98" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="943.3" y="389" width="0.5" height="15.0" fill="rgb(246,37,3)" rx="2" ry="2" />
<text  x="946.32" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="69.8" y="389" width="0.1" height="15.0" fill="rgb(228,25,17)" rx="2" ry="2" />
<text  x="72.75" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="465.4" y="325" width="0.1" height="15.0" fill="rgb(214,108,9)" rx="2" ry="2" />
<text  x="468.37" y="335.5" ></text>
</g>
<g >
<title>__tls_init (16 samples, 0.03%)</title><rect x="494.4" y="293" width="0.4" height="15.0" fill="rgb(229,137,10)" rx="2" ry="2" />
<text  x="497.42" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (8 samples, 0.02%)</title><rect x="837.7" y="309" width="0.2" height="15.0" fill="rgb(220,53,40)" rx="2" ry="2" />
<text  x="840.69" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (29 samples, 0.06%)</title><rect x="681.2" y="437" width="0.7" height="15.0" fill="rgb(246,208,6)" rx="2" ry="2" />
<text  x="684.17" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%)</title><rect x="95.9" y="421" width="0.3" height="15.0" fill="rgb(225,194,15)" rx="2" ry="2" />
<text  x="98.86" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (25 samples, 0.05%)</title><rect x="817.6" y="117" width="0.6" height="15.0" fill="rgb(254,77,11)" rx="2" ry="2" />
<text  x="820.60" y="127.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (217 samples, 0.46%)</title><rect x="270.4" y="309" width="5.4" height="15.0" fill="rgb(241,192,7)" rx="2" ry="2" />
<text  x="273.43" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="768.9" y="389" width="1.3" height="15.0" fill="rgb(246,101,3)" rx="2" ry="2" />
<text  x="771.88" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="809.3" y="149" width="0.1" height="15.0" fill="rgb(215,217,46)" rx="2" ry="2" />
<text  x="812.31" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="1007.1" y="245" width="1.7" height="15.0" fill="rgb(246,196,39)" rx="2" ry="2" />
<text  x="1010.09" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="555.6" y="421" width="0.2" height="15.0" fill="rgb(214,20,23)" rx="2" ry="2" />
<text  x="558.65" y="431.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (220 samples, 0.47%)</title><rect x="712.5" y="453" width="5.5" height="15.0" fill="rgb(208,168,38)" rx="2" ry="2" />
<text  x="715.54" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="491.4" y="325" width="0.1" height="15.0" fill="rgb(245,40,49)" rx="2" ry="2" />
<text  x="494.37" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (33 samples, 0.07%)</title><rect x="1141.7" y="485" width="0.9" height="15.0" fill="rgb(244,11,47)" rx="2" ry="2" />
<text  x="1144.73" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (7 samples, 0.01%)</title><rect x="225.1" y="117" width="0.2" height="15.0" fill="rgb(221,190,16)" rx="2" ry="2" />
<text  x="228.10" y="127.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (208 samples, 0.44%)</title><rect x="16.0" y="421" width="5.2" height="15.0" fill="rgb(246,114,43)" rx="2" ry="2" />
<text  x="18.99" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (17 samples, 0.04%)</title><rect x="515.0" y="213" width="0.4" height="15.0" fill="rgb(252,226,11)" rx="2" ry="2" />
<text  x="517.99" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (16 samples, 0.03%)</title><rect x="823.4" y="197" width="0.4" height="15.0" fill="rgb(254,27,19)" rx="2" ry="2" />
<text  x="826.44" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (26 samples, 0.05%)</title><rect x="21.6" y="421" width="0.6" height="15.0" fill="rgb(211,183,46)" rx="2" ry="2" />
<text  x="24.56" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (35 samples, 0.07%)</title><rect x="55.3" y="469" width="0.8" height="15.0" fill="rgb(235,8,43)" rx="2" ry="2" />
<text  x="58.25" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="47.2" y="485" width="0.3" height="15.0" fill="rgb(226,18,14)" rx="2" ry="2" />
<text  x="50.22" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="592.8" y="389" width="0.1" height="15.0" fill="rgb(231,93,33)" rx="2" ry="2" />
<text  x="595.76" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="453" width="0.8" height="15.0" fill="rgb(220,71,2)" rx="2" ry="2" />
<text  x="1145.58" y="463.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (24 samples, 0.05%)</title><rect x="468.5" y="277" width="0.6" height="15.0" fill="rgb(211,42,22)" rx="2" ry="2" />
<text  x="471.54" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (16 samples, 0.03%)</title><rect x="557.0" y="421" width="0.4" height="15.0" fill="rgb(237,95,7)" rx="2" ry="2" />
<text  x="559.99" y="431.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (12 samples, 0.03%)</title><rect x="287.2" y="325" width="0.3" height="15.0" fill="rgb(246,106,43)" rx="2" ry="2" />
<text  x="290.15" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (9 samples, 0.02%)</title><rect x="1175.9" y="389" width="0.2" height="15.0" fill="rgb(205,13,31)" rx="2" ry="2" />
<text  x="1178.92" y="399.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (39 samples, 0.08%)</title><rect x="437.0" y="341" width="1.0" height="15.0" fill="rgb(238,114,6)" rx="2" ry="2" />
<text  x="440.04" y="351.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (56 samples, 0.12%)</title><rect x="275.9" y="309" width="1.4" height="15.0" fill="rgb(240,89,26)" rx="2" ry="2" />
<text  x="278.95" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (7 samples, 0.01%)</title><rect x="1175.4" y="501" width="0.2" height="15.0" fill="rgb(217,68,17)" rx="2" ry="2" />
<text  x="1178.42" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (12 samples, 0.03%)</title><rect x="368.8" y="149" width="0.3" height="15.0" fill="rgb(254,48,32)" rx="2" ry="2" />
<text  x="371.77" y="159.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (16 samples, 0.03%)</title><rect x="56.4" y="469" width="0.3" height="15.0" fill="rgb(237,179,10)" rx="2" ry="2" />
<text  x="59.35" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (10 samples, 0.02%)</title><rect x="141.2" y="277" width="0.2" height="15.0" fill="rgb(226,45,3)" rx="2" ry="2" />
<text  x="144.16" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (21 samples, 0.04%)</title><rect x="886.5" y="485" width="0.5" height="15.0" fill="rgb(221,113,11)" rx="2" ry="2" />
<text  x="889.51" y="495.5" ></text>
</g>
<g >
<title>make_combined_reader (864 samples, 1.83%)</title><rect x="439.1" y="341" width="21.6" height="15.0" fill="rgb(236,66,33)" rx="2" ry="2" />
<text  x="442.13" y="351.5" >m..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="643.1" y="469" width="0.2" height="15.0" fill="rgb(227,3,39)" rx="2" ry="2" />
<text  x="646.06" y="479.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%)</title><rect x="800.5" y="277" width="1.4" height="15.0" fill="rgb(243,126,21)" rx="2" ry="2" />
<text  x="803.53" y="287.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (295 samples, 0.62%)</title><rect x="1087.6" y="261" width="7.4" height="15.0" fill="rgb(209,70,54)" rx="2" ry="2" />
<text  x="1090.64" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (69 samples, 0.15%)</title><rect x="1129.7" y="389" width="1.7" height="15.0" fill="rgb(253,27,46)" rx="2" ry="2" />
<text  x="1132.70" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (9 samples, 0.02%)</title><rect x="25.4" y="517" width="0.2" height="15.0" fill="rgb(228,188,40)" rx="2" ry="2" />
<text  x="28.43" y="527.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (51 samples, 0.11%)</title><rect x="686.2" y="469" width="1.3" height="15.0" fill="rgb(223,222,27)" rx="2" ry="2" />
<text  x="689.24" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1053.7" y="277" width="0.2" height="15.0" fill="rgb(236,148,13)" rx="2" ry="2" />
<text  x="1056.74" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="99.9" y="405" width="0.2" height="15.0" fill="rgb(218,144,39)" rx="2" ry="2" />
<text  x="102.93" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%)</title><rect x="801.7" y="245" width="0.2" height="15.0" fill="rgb(241,199,37)" rx="2" ry="2" />
<text  x="804.73" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (21 samples, 0.04%)</title><rect x="1002.3" y="277" width="0.5" height="15.0" fill="rgb(225,12,28)" rx="2" ry="2" />
<text  x="1005.30" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="519.5" y="277" width="0.2" height="15.0" fill="rgb(245,73,25)" rx="2" ry="2" />
<text  x="522.53" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="519.7" y="277" width="0.5" height="15.0" fill="rgb(213,58,29)" rx="2" ry="2" />
<text  x="522.70" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,177 samples, 38.45%)</title><rect x="103.2" y="437" width="453.7" height="15.0" fill="rgb(219,211,39)" rx="2" ry="2" />
<text  x="106.20" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>all (47,276 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(242,224,17)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="659.9" y="437" width="0.3" height="15.0" fill="rgb(251,192,0)" rx="2" ry="2" />
<text  x="662.88" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="943.6" y="373" width="0.2" height="15.0" fill="rgb(223,93,4)" rx="2" ry="2" />
<text  x="946.60" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (22 samples, 0.05%)</title><rect x="170.8" y="133" width="0.5" height="15.0" fill="rgb(233,85,38)" rx="2" ry="2" />
<text  x="173.77" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="947.8" y="357" width="0.5" height="15.0" fill="rgb(247,51,52)" rx="2" ry="2" />
<text  x="950.79" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (30 samples, 0.06%)</title><rect x="695.0" y="437" width="0.7" height="15.0" fill="rgb(244,13,39)" rx="2" ry="2" />
<text  x="698.00" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="257.3" y="309" width="0.1" height="15.0" fill="rgb(212,165,18)" rx="2" ry="2" />
<text  x="260.25" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (197 samples, 0.42%)</title><rect x="10.2" y="613" width="4.9" height="15.0" fill="rgb(233,143,43)" rx="2" ry="2" />
<text  x="13.22" y="623.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%)</title><rect x="1111.9" y="389" width="0.1" height="15.0" fill="rgb(239,200,43)" rx="2" ry="2" />
<text  x="1114.85" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,265 samples, 2.68%)</title><rect x="800.0" y="309" width="31.6" height="15.0" fill="rgb(226,14,26)" rx="2" ry="2" />
<text  x="803.03" y="319.5" >au..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="916.8" y="357" width="0.3" height="15.0" fill="rgb(223,72,13)" rx="2" ry="2" />
<text  x="919.76" y="367.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,287 samples, 9.07%)</title><rect x="141.9" y="293" width="107.0" height="15.0" fill="rgb(229,180,4)" rx="2" ry="2" />
<text  x="144.89" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="665.4" y="453" width="0.2" height="15.0" fill="rgb(234,159,29)" rx="2" ry="2" />
<text  x="668.42" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (64 samples, 0.14%)</title><rect x="849.1" y="325" width="1.6" height="15.0" fill="rgb(211,14,23)" rx="2" ry="2" />
<text  x="852.07" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1001.1" y="277" width="0.1" height="15.0" fill="rgb(236,225,37)" rx="2" ry="2" />
<text  x="1004.05" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (173 samples, 0.37%)</title><rect x="1069.6" y="325" width="4.3" height="15.0" fill="rgb(225,105,48)" rx="2" ry="2" />
<text  x="1072.57" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (99 samples, 0.21%)</title><rect x="340.5" y="165" width="2.4" height="15.0" fill="rgb(218,18,10)" rx="2" ry="2" />
<text  x="343.47" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (13 samples, 0.03%)</title><rect x="962.1" y="405" width="0.3" height="15.0" fill="rgb(238,64,52)" rx="2" ry="2" />
<text  x="965.12" y="415.5" ></text>
</g>
<g >
<title>create_partitions (295 samples, 0.62%)</title><rect x="15.6" y="533" width="7.3" height="15.0" fill="rgb(225,30,17)" rx="2" ry="2" />
<text  x="18.57" y="543.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="490.2" y="213" width="0.4" height="15.0" fill="rgb(243,169,42)" rx="2" ry="2" />
<text  x="493.18" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (63 samples, 0.13%)</title><rect x="950.8" y="373" width="1.5" height="15.0" fill="rgb(252,222,10)" rx="2" ry="2" />
<text  x="953.76" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (266 samples, 0.56%)</title><rect x="697.9" y="485" width="6.6" height="15.0" fill="rgb(241,74,39)" rx="2" ry="2" />
<text  x="700.89" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (17 samples, 0.04%)</title><rect x="720.6" y="453" width="0.4" height="15.0" fill="rgb(250,31,20)" rx="2" ry="2" />
<text  x="723.58" y="463.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (6 samples, 0.01%)</title><rect x="1011.0" y="293" width="0.2" height="15.0" fill="rgb(222,119,33)" rx="2" ry="2" />
<text  x="1014.04" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="503.4" y="261" width="0.2" height="15.0" fill="rgb(225,183,4)" rx="2" ry="2" />
<text  x="506.43" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (130 samples, 0.27%)</title><rect x="416.9" y="309" width="3.3" height="15.0" fill="rgb(241,38,52)" rx="2" ry="2" />
<text  x="419.94" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (16 samples, 0.03%)</title><rect x="1177.4" y="485" width="0.4" height="15.0" fill="rgb(229,191,26)" rx="2" ry="2" />
<text  x="1180.37" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (36 samples, 0.08%)</title><rect x="227.1" y="213" width="0.9" height="15.0" fill="rgb(214,154,13)" rx="2" ry="2" />
<text  x="230.13" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,249 samples, 4.76%)</title><rect x="163.8" y="213" width="56.1" height="15.0" fill="rgb(210,109,48)" rx="2" ry="2" />
<text  x="166.80" y="223.5" >logal..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="18.6" y="309" width="0.1" height="15.0" fill="rgb(219,208,23)" rx="2" ry="2" />
<text  x="21.56" y="319.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (8 samples, 0.02%)</title><rect x="238.8" y="165" width="0.2" height="15.0" fill="rgb(246,46,17)" rx="2" ry="2" />
<text  x="241.83" y="175.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (27 samples, 0.06%)</title><rect x="514.2" y="197" width="0.7" height="15.0" fill="rgb(242,102,33)" rx="2" ry="2" />
<text  x="517.21" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (10 samples, 0.02%)</title><rect x="886.7" y="389" width="0.2" height="15.0" fill="rgb(248,111,12)" rx="2" ry="2" />
<text  x="889.66" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="869.1" y="373" width="0.3" height="15.0" fill="rgb(244,21,3)" rx="2" ry="2" />
<text  x="872.07" y="383.5" ></text>
</g>
<g >
<title>database::find_column_family (46 samples, 0.10%)</title><rect x="842.6" y="341" width="1.2" height="15.0" fill="rgb(244,88,28)" rx="2" ry="2" />
<text  x="845.61" y="351.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (6 samples, 0.01%)</title><rect x="615.6" y="437" width="0.2" height="15.0" fill="rgb(241,2,25)" rx="2" ry="2" />
<text  x="618.65" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (434 samples, 0.92%)</title><rect x="399.1" y="245" width="10.9" height="15.0" fill="rgb(241,2,21)" rx="2" ry="2" />
<text  x="402.12" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (52 samples, 0.11%)</title><rect x="652.0" y="421" width="1.3" height="15.0" fill="rgb(247,155,2)" rx="2" ry="2" />
<text  x="655.04" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1104.6" y="341" width="0.1" height="15.0" fill="rgb(220,35,42)" rx="2" ry="2" />
<text  x="1107.56" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="711.7" y="437" width="0.2" height="15.0" fill="rgb(233,176,1)" rx="2" ry="2" />
<text  x="714.75" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (44 samples, 0.09%)</title><rect x="21.2" y="453" width="1.1" height="15.0" fill="rgb(225,93,21)" rx="2" ry="2" />
<text  x="24.21" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (94 samples, 0.20%)</title><rect x="901.5" y="405" width="2.4" height="15.0" fill="rgb(213,46,27)" rx="2" ry="2" />
<text  x="904.51" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,236 samples, 6.84%)</title><rect x="770.9" y="421" width="80.8" height="15.0" fill="rgb(233,116,29)" rx="2" ry="2" />
<text  x="773.90" y="431.5" >cql3::sta..</text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (6 samples, 0.01%)</title><rect x="25.7" y="517" width="0.2" height="15.0" fill="rgb(217,151,45)" rx="2" ry="2" />
<text  x="28.72" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (323 samples, 0.68%)</title><rect x="184.5" y="85" width="8.1" height="15.0" fill="rgb(209,6,38)" rx="2" ry="2" />
<text  x="187.49" y="95.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (80 samples, 0.17%)</title><rect x="820.9" y="133" width="2.0" height="15.0" fill="rgb(242,129,30)" rx="2" ry="2" />
<text  x="823.89" y="143.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (19 samples, 0.04%)</title><rect x="716.4" y="421" width="0.4" height="15.0" fill="rgb(206,43,5)" rx="2" ry="2" />
<text  x="719.36" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (42 samples, 0.09%)</title><rect x="795.2" y="309" width="1.0" height="15.0" fill="rgb(251,159,17)" rx="2" ry="2" />
<text  x="798.19" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="17.9" y="357" width="0.1" height="15.0" fill="rgb(234,227,31)" rx="2" ry="2" />
<text  x="20.89" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="834.2" y="277" width="0.1" height="15.0" fill="rgb(248,87,49)" rx="2" ry="2" />
<text  x="837.20" y="287.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%)</title><rect x="821.7" y="117" width="0.1" height="15.0" fill="rgb(231,17,37)" rx="2" ry="2" />
<text  x="824.69" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (8 samples, 0.02%)</title><rect x="833.9" y="293" width="0.2" height="15.0" fill="rgb(247,85,43)" rx="2" ry="2" />
<text  x="836.87" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1141.6" y="453" width="0.1" height="15.0" fill="rgb(247,10,32)" rx="2" ry="2" />
<text  x="1144.58" y="463.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (36 samples, 0.08%)</title><rect x="16.6" y="277" width="0.9" height="15.0" fill="rgb(246,171,50)" rx="2" ry="2" />
<text  x="19.61" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (7 samples, 0.01%)</title><rect x="964.6" y="373" width="0.1" height="15.0" fill="rgb(221,211,28)" rx="2" ry="2" />
<text  x="967.56" y="383.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (31 samples, 0.07%)</title><rect x="328.8" y="181" width="0.7" height="15.0" fill="rgb(226,43,44)" rx="2" ry="2" />
<text  x="331.76" y="191.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (13 samples, 0.03%)</title><rect x="575.3" y="373" width="0.3" height="15.0" fill="rgb(206,221,44)" rx="2" ry="2" />
<text  x="578.26" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (67 samples, 0.14%)</title><rect x="516.3" y="245" width="1.7" height="15.0" fill="rgb(212,141,42)" rx="2" ry="2" />
<text  x="519.31" y="255.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,271 samples, 2.69%)</title><rect x="1021.8" y="277" width="31.7" height="15.0" fill="rgb(227,164,30)" rx="2" ry="2" />
<text  x="1024.82" y="287.5" >se..</text>
</g>
<g >
<title>operator delete (115 samples, 0.24%)</title><rect x="410.7" y="245" width="2.9" height="15.0" fill="rgb(247,37,53)" rx="2" ry="2" />
<text  x="413.70" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (253 samples, 0.54%)</title><rect x="1116.4" y="405" width="6.3" height="15.0" fill="rgb(250,106,25)" rx="2" ry="2" />
<text  x="1119.39" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (5 samples, 0.01%)</title><rect x="712.0" y="437" width="0.1" height="15.0" fill="rgb(211,168,32)" rx="2" ry="2" />
<text  x="714.99" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (8 samples, 0.02%)</title><rect x="970.1" y="389" width="0.2" height="15.0" fill="rgb(240,18,7)" rx="2" ry="2" />
<text  x="973.13" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%)</title><rect x="704.1" y="437" width="0.1" height="15.0" fill="rgb(253,6,37)" rx="2" ry="2" />
<text  x="707.06" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (68 samples, 0.14%)</title><rect x="565.2" y="309" width="1.7" height="15.0" fill="rgb(249,199,25)" rx="2" ry="2" />
<text  x="568.23" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="547.1" y="405" width="0.3" height="15.0" fill="rgb(219,101,24)" rx="2" ry="2" />
<text  x="550.09" y="415.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="60.8" y="453" width="0.9" height="15.0" fill="rgb(249,132,45)" rx="2" ry="2" />
<text  x="63.82" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (27 samples, 0.06%)</title><rect x="693.8" y="485" width="0.7" height="15.0" fill="rgb(250,79,15)" rx="2" ry="2" />
<text  x="696.82" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="886.4" y="501" width="0.1" height="15.0" fill="rgb(249,92,24)" rx="2" ry="2" />
<text  x="889.39" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (7 samples, 0.01%)</title><rect x="43.8" y="469" width="0.1" height="15.0" fill="rgb(214,87,51)" rx="2" ry="2" />
<text  x="46.77" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.02%)</title><rect x="1002.1" y="261" width="0.2" height="15.0" fill="rgb(215,91,12)" rx="2" ry="2" />
<text  x="1005.08" y="271.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (18 samples, 0.04%)</title><rect x="1048.7" y="245" width="0.5" height="15.0" fill="rgb(253,212,53)" rx="2" ry="2" />
<text  x="1051.73" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (21 samples, 0.04%)</title><rect x="668.2" y="485" width="0.5" height="15.0" fill="rgb(214,38,51)" rx="2" ry="2" />
<text  x="671.19" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (41 samples, 0.09%)</title><rect x="847.0" y="309" width="1.0" height="15.0" fill="rgb(212,213,26)" rx="2" ry="2" />
<text  x="849.98" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="219.7" y="197" width="0.1" height="15.0" fill="rgb(228,224,13)" rx="2" ry="2" />
<text  x="222.69" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="457.0" y="261" width="0.6" height="15.0" fill="rgb(220,79,54)" rx="2" ry="2" />
<text  x="459.98" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="141.4" y="277" width="0.3" height="15.0" fill="rgb(232,129,18)" rx="2" ry="2" />
<text  x="144.41" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1101.0" y="277" width="0.2" height="15.0" fill="rgb(253,149,5)" rx="2" ry="2" />
<text  x="1104.02" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (7 samples, 0.01%)</title><rect x="850.4" y="293" width="0.2" height="15.0" fill="rgb(214,11,29)" rx="2" ry="2" />
<text  x="853.45" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1159.7" y="357" width="0.5" height="15.0" fill="rgb(240,111,0)" rx="2" ry="2" />
<text  x="1162.70" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (136 samples, 0.29%)</title><rect x="992.7" y="341" width="3.4" height="15.0" fill="rgb(240,54,9)" rx="2" ry="2" />
<text  x="995.72" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (737 samples, 1.56%)</title><rect x="501.9" y="293" width="18.4" height="15.0" fill="rgb(207,22,11)" rx="2" ry="2" />
<text  x="504.86" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="833.7" y="293" width="0.2" height="15.0" fill="rgb(252,225,47)" rx="2" ry="2" />
<text  x="836.72" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (17 samples, 0.04%)</title><rect x="1108.9" y="357" width="0.5" height="15.0" fill="rgb(218,109,6)" rx="2" ry="2" />
<text  x="1111.93" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,533 samples, 9.59%)</title><rect x="431.0" y="373" width="113.2" height="15.0" fill="rgb(236,196,36)" rx="2" ry="2" />
<text  x="434.05" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (18 samples, 0.04%)</title><rect x="310.4" y="165" width="0.5" height="15.0" fill="rgb(243,59,33)" rx="2" ry="2" />
<text  x="313.44" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.18%)</title><rect x="979.8" y="341" width="2.1" height="15.0" fill="rgb(212,73,43)" rx="2" ry="2" />
<text  x="982.81" y="351.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (313 samples, 0.66%)</title><rect x="1087.5" y="277" width="7.8" height="15.0" fill="rgb(240,144,31)" rx="2" ry="2" />
<text  x="1090.47" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (47 samples, 0.10%)</title><rect x="152.0" y="197" width="1.1" height="15.0" fill="rgb(240,137,53)" rx="2" ry="2" />
<text  x="154.97" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (12 samples, 0.03%)</title><rect x="723.8" y="501" width="0.3" height="15.0" fill="rgb(239,157,2)" rx="2" ry="2" />
<text  x="726.83" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (13 samples, 0.03%)</title><rect x="314.0" y="181" width="0.3" height="15.0" fill="rgb(220,176,40)" rx="2" ry="2" />
<text  x="316.96" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (251 samples, 0.53%)</title><rect x="220.4" y="229" width="6.3" height="15.0" fill="rgb(231,221,37)" rx="2" ry="2" />
<text  x="223.39" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="313.7" y="181" width="0.3" height="15.0" fill="rgb(217,102,2)" rx="2" ry="2" />
<text  x="316.71" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (209 samples, 0.44%)</title><rect x="1169.9" y="485" width="5.2" height="15.0" fill="rgb(222,39,32)" rx="2" ry="2" />
<text  x="1172.91" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="583.9" y="325" width="0.1" height="15.0" fill="rgb(231,119,30)" rx="2" ry="2" />
<text  x="586.85" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="911.6" y="293" width="0.1" height="15.0" fill="rgb(252,148,45)" rx="2" ry="2" />
<text  x="914.60" y="303.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (7 samples, 0.01%)</title><rect x="230.3" y="245" width="0.2" height="15.0" fill="rgb(221,58,42)" rx="2" ry="2" />
<text  x="233.32" y="255.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,305 samples, 21.80%)</title><rect x="887.0" y="501" width="257.2" height="15.0" fill="rgb(248,149,10)" rx="2" ry="2" />
<text  x="890.04" y="511.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (225 samples, 0.48%)</title><rect x="148.5" y="229" width="5.6" height="15.0" fill="rgb(231,168,8)" rx="2" ry="2" />
<text  x="151.50" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (26 samples, 0.05%)</title><rect x="555.8" y="421" width="0.7" height="15.0" fill="rgb(252,90,5)" rx="2" ry="2" />
<text  x="558.82" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="803.5" y="229" width="0.4" height="15.0" fill="rgb(220,226,21)" rx="2" ry="2" />
<text  x="806.47" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (82 samples, 0.17%)</title><rect x="18.2" y="357" width="2.0" height="15.0" fill="rgb(246,142,24)" rx="2" ry="2" />
<text  x="21.19" y="367.5" ></text>
</g>
<g >
<title>operator new (129 samples, 0.27%)</title><rect x="1018.3" y="277" width="3.2" height="15.0" fill="rgb(235,130,39)" rx="2" ry="2" />
<text  x="1021.30" y="287.5" ></text>
</g>
<g >
<title>row_tombstone::apply (28 samples, 0.06%)</title><rect x="390.8" y="213" width="0.7" height="15.0" fill="rgb(247,125,9)" rx="2" ry="2" />
<text  x="393.76" y="223.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="701.1" y="437" width="0.1" height="15.0" fill="rgb(210,112,45)" rx="2" ry="2" />
<text  x="704.11" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (25 samples, 0.05%)</title><rect x="237.2" y="181" width="0.6" height="15.0" fill="rgb(250,33,19)" rx="2" ry="2" />
<text  x="240.16" y="191.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (69 samples, 0.15%)</title><rect x="300.0" y="229" width="1.7" height="15.0" fill="rgb(217,41,19)" rx="2" ry="2" />
<text  x="302.96" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (67 samples, 0.14%)</title><rect x="824.1" y="261" width="1.7" height="15.0" fill="rgb(215,131,52)" rx="2" ry="2" />
<text  x="827.11" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (7 samples, 0.01%)</title><rect x="708.7" y="469" width="0.2" height="15.0" fill="rgb(229,33,45)" rx="2" ry="2" />
<text  x="711.72" y="479.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (70 samples, 0.15%)</title><rect x="783.7" y="357" width="1.8" height="15.0" fill="rgb(229,26,28)" rx="2" ry="2" />
<text  x="786.70" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="663.6" y="469" width="0.2" height="15.0" fill="rgb(213,220,3)" rx="2" ry="2" />
<text  x="666.65" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (26 samples, 0.05%)</title><rect x="571.8" y="261" width="0.7" height="15.0" fill="rgb(209,131,20)" rx="2" ry="2" />
<text  x="574.82" y="271.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%)</title><rect x="1074.4" y="325" width="0.1" height="15.0" fill="rgb(228,104,20)" rx="2" ry="2" />
<text  x="1077.36" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (72 samples, 0.15%)</title><rect x="201.1" y="117" width="1.8" height="15.0" fill="rgb(215,70,7)" rx="2" ry="2" />
<text  x="204.09" y="127.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,891 samples, 12.46%)</title><rect x="732.3" y="469" width="147.1" height="15.0" fill="rgb(214,101,28)" rx="2" ry="2" />
<text  x="735.31" y="479.5" >single_node_cql_en..</text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (5 samples, 0.01%)</title><rect x="228.7" y="213" width="0.1" height="15.0" fill="rgb(212,41,46)" rx="2" ry="2" />
<text  x="231.72" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (50 samples, 0.11%)</title><rect x="1031.3" y="213" width="1.3" height="15.0" fill="rgb(225,40,17)" rx="2" ry="2" />
<text  x="1034.33" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="811.6" y="181" width="0.2" height="15.0" fill="rgb(242,229,17)" rx="2" ry="2" />
<text  x="814.63" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%)</title><rect x="111.6" y="373" width="0.2" height="15.0" fill="rgb(234,12,44)" rx="2" ry="2" />
<text  x="114.64" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (140 samples, 0.30%)</title><rect x="819.6" y="165" width="3.5" height="15.0" fill="rgb(209,225,37)" rx="2" ry="2" />
<text  x="822.57" y="175.5" ></text>
</g>
<g >
<title>free (118 samples, 0.25%)</title><rect x="403.3" y="181" width="2.9" height="15.0" fill="rgb(220,176,7)" rx="2" ry="2" />
<text  x="406.27" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="942.7" y="405" width="0.1" height="15.0" fill="rgb(232,160,10)" rx="2" ry="2" />
<text  x="945.70" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="776.9" y="309" width="0.4" height="15.0" fill="rgb(209,220,46)" rx="2" ry="2" />
<text  x="779.87" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="640.0" y="453" width="0.4" height="15.0" fill="rgb(220,52,17)" rx="2" ry="2" />
<text  x="643.01" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%)</title><rect x="23.0" y="517" width="0.3" height="15.0" fill="rgb(236,203,16)" rx="2" ry="2" />
<text  x="26.03" y="527.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="795.5" y="277" width="0.1" height="15.0" fill="rgb(215,219,39)" rx="2" ry="2" />
<text  x="798.46" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (9 samples, 0.02%)</title><rect x="850.4" y="309" width="0.3" height="15.0" fill="rgb(253,229,39)" rx="2" ry="2" />
<text  x="853.45" y="319.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="544.3" y="405" width="0.9" height="15.0" fill="rgb(223,5,39)" rx="2" ry="2" />
<text  x="547.31" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (18 samples, 0.04%)</title><rect x="1047.9" y="197" width="0.4" height="15.0" fill="rgb(225,177,39)" rx="2" ry="2" />
<text  x="1050.85" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (9 samples, 0.02%)</title><rect x="792.9" y="341" width="0.3" height="15.0" fill="rgb(220,35,36)" rx="2" ry="2" />
<text  x="795.94" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="100.2" y="373" width="0.7" height="15.0" fill="rgb(218,13,29)" rx="2" ry="2" />
<text  x="103.23" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="784.4" y="341" width="0.1" height="15.0" fill="rgb(222,103,52)" rx="2" ry="2" />
<text  x="787.35" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="701.2" y="453" width="0.4" height="15.0" fill="rgb(210,150,10)" rx="2" ry="2" />
<text  x="704.24" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (11 samples, 0.02%)</title><rect x="784.1" y="341" width="0.3" height="15.0" fill="rgb(221,44,27)" rx="2" ry="2" />
<text  x="787.08" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,371 samples, 11.36%)</title><rect x="286.7" y="357" width="134.0" height="15.0" fill="rgb(206,138,44)" rx="2" ry="2" />
<text  x="289.65" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (120 samples, 0.25%)</title><rect x="1006.4" y="293" width="3.0" height="15.0" fill="rgb(247,5,17)" rx="2" ry="2" />
<text  x="1009.37" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="881.0" y="405" width="0.3" height="15.0" fill="rgb(248,114,13)" rx="2" ry="2" />
<text  x="884.05" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (17 samples, 0.04%)</title><rect x="1175.9" y="453" width="0.4" height="15.0" fill="rgb(237,61,43)" rx="2" ry="2" />
<text  x="1178.87" y="463.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (8 samples, 0.02%)</title><rect x="17.5" y="309" width="0.2" height="15.0" fill="rgb(217,131,2)" rx="2" ry="2" />
<text  x="20.54" y="319.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (48 samples, 0.10%)</title><rect x="686.3" y="453" width="1.2" height="15.0" fill="rgb(235,225,48)" rx="2" ry="2" />
<text  x="689.31" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (59 samples, 0.12%)</title><rect x="388.5" y="165" width="1.5" height="15.0" fill="rgb(249,3,1)" rx="2" ry="2" />
<text  x="391.54" y="175.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (30 samples, 0.06%)</title><rect x="695.0" y="421" width="0.7" height="15.0" fill="rgb(230,33,0)" rx="2" ry="2" />
<text  x="698.00" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (9,977 samples, 21.10%)</title><rect x="892.5" y="453" width="249.0" height="15.0" fill="rgb(214,218,13)" rx="2" ry="2" />
<text  x="895.48" y="463.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (88 samples, 0.19%)</title><rect x="40.8" y="469" width="2.2" height="15.0" fill="rgb(241,218,21)" rx="2" ry="2" />
<text  x="43.80" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (49 samples, 0.10%)</title><rect x="749.7" y="373" width="1.3" height="15.0" fill="rgb(238,13,14)" rx="2" ry="2" />
<text  x="752.73" y="383.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,965 samples, 10.50%)</title><rect x="292.9" y="293" width="123.9" height="15.0" fill="rgb(238,21,39)" rx="2" ry="2" />
<text  x="295.92" y="303.5" >seastar::repeat..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="872.5" y="389" width="0.2" height="15.0" fill="rgb(219,142,44)" rx="2" ry="2" />
<text  x="875.49" y="399.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (6 samples, 0.01%)</title><rect x="1102.2" y="277" width="0.2" height="15.0" fill="rgb(223,115,27)" rx="2" ry="2" />
<text  x="1105.24" y="287.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (7 samples, 0.01%)</title><rect x="920.8" y="389" width="0.1" height="15.0" fill="rgb(226,33,26)" rx="2" ry="2" />
<text  x="923.76" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,017 samples, 21.19%)</title><rect x="891.5" y="469" width="250.0" height="15.0" fill="rgb(231,191,6)" rx="2" ry="2" />
<text  x="894.48" y="479.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="541.0" y="325" width="0.4" height="15.0" fill="rgb(242,93,16)" rx="2" ry="2" />
<text  x="544.04" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (31 samples, 0.07%)</title><rect x="169.5" y="133" width="0.8" height="15.0" fill="rgb(228,130,48)" rx="2" ry="2" />
<text  x="172.52" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (38 samples, 0.08%)</title><rect x="677.6" y="485" width="0.9" height="15.0" fill="rgb(217,57,14)" rx="2" ry="2" />
<text  x="680.60" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1051.4" y="261" width="0.1" height="15.0" fill="rgb(228,32,40)" rx="2" ry="2" />
<text  x="1054.42" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (145 samples, 0.31%)</title><rect x="188.7" y="37" width="3.7" height="15.0" fill="rgb(254,76,9)" rx="2" ry="2" />
<text  x="191.74" y="47.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="886.4" y="485" width="0.1" height="15.0" fill="rgb(243,216,46)" rx="2" ry="2" />
<text  x="889.39" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (145 samples, 0.31%)</title><rect x="999.5" y="309" width="3.6" height="15.0" fill="rgb(222,201,31)" rx="2" ry="2" />
<text  x="1002.51" y="319.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="489.2" y="197" width="0.7" height="15.0" fill="rgb(246,138,30)" rx="2" ry="2" />
<text  x="492.18" y="207.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="527.8" y="341" width="0.1" height="15.0" fill="rgb(209,225,33)" rx="2" ry="2" />
<text  x="530.77" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (11 samples, 0.02%)</title><rect x="612.6" y="437" width="0.3" height="15.0" fill="rgb(233,86,39)" rx="2" ry="2" />
<text  x="615.63" y="447.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%)</title><rect x="741.2" y="309" width="0.1" height="15.0" fill="rgb(253,35,5)" rx="2" ry="2" />
<text  x="744.17" y="319.5" ></text>
</g>
<g >
<title>query::querier_base::close (18 samples, 0.04%)</title><rect x="1175.9" y="485" width="0.4" height="15.0" fill="rgb(226,64,43)" rx="2" ry="2" />
<text  x="1178.87" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (9 samples, 0.02%)</title><rect x="1141.5" y="469" width="0.2" height="15.0" fill="rgb(239,62,4)" rx="2" ry="2" />
<text  x="1144.50" y="479.5" ></text>
</g>
<g >
<title>table::query (21,958 samples, 46.45%)</title><rect x="81.4" y="453" width="548.1" height="15.0" fill="rgb(224,99,11)" rx="2" ry="2" />
<text  x="84.43" y="463.5" >table::query</text>
</g>
<g >
<title>sstables::noop_write_monitor::~noop_write_monitor (11 samples, 0.02%)</title><rect x="23.0" y="613" width="0.3" height="15.0" fill="rgb(240,20,52)" rx="2" ry="2" />
<text  x="26.03" y="623.5" ></text>
</g>
<g >
<title>table::query (30 samples, 0.06%)</title><rect x="1175.8" y="501" width="0.7" height="15.0" fill="rgb(228,49,29)" rx="2" ry="2" />
<text  x="1178.77" y="511.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%)</title><rect x="16.2" y="309" width="0.1" height="15.0" fill="rgb(241,9,12)" rx="2" ry="2" />
<text  x="19.17" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="823.6" y="181" width="0.2" height="15.0" fill="rgb(230,221,26)" rx="2" ry="2" />
<text  x="826.64" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (11 samples, 0.02%)</title><rect x="217.7" y="149" width="0.3" height="15.0" fill="rgb(242,222,41)" rx="2" ry="2" />
<text  x="220.74" y="159.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="500.6" y="293" width="1.1" height="15.0" fill="rgb(253,227,39)" rx="2" ry="2" />
<text  x="503.63" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="831.3" y="261" width="0.2" height="15.0" fill="rgb(238,176,1)" rx="2" ry="2" />
<text  x="834.30" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (22 samples, 0.05%)</title><rect x="1150.6" y="469" width="0.5" height="15.0" fill="rgb(227,150,18)" rx="2" ry="2" />
<text  x="1153.59" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="942.1" y="373" width="0.3" height="15.0" fill="rgb(219,27,15)" rx="2" ry="2" />
<text  x="945.15" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="786.5" y="325" width="0.5" height="15.0" fill="rgb(239,33,48)" rx="2" ry="2" />
<text  x="789.52" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (40 samples, 0.08%)</title><rect x="854.1" y="421" width="1.0" height="15.0" fill="rgb(254,99,48)" rx="2" ry="2" />
<text  x="857.14" y="431.5" ></text>
</g>
<g >
<title>table::make_reader (4,466 samples, 9.45%)</title><rect x="432.7" y="357" width="111.5" height="15.0" fill="rgb(233,49,36)" rx="2" ry="2" />
<text  x="435.72" y="367.5" >table::make_r..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (167 samples, 0.35%)</title><rect x="844.0" y="341" width="4.2" height="15.0" fill="rgb(218,192,21)" rx="2" ry="2" />
<text  x="846.98" y="351.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (18 samples, 0.04%)</title><rect x="96.8" y="437" width="0.4" height="15.0" fill="rgb(229,217,29)" rx="2" ry="2" />
<text  x="99.76" y="447.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="48.4" y="485" width="0.1" height="15.0" fill="rgb(224,77,4)" rx="2" ry="2" />
<text  x="51.36" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (406 samples, 0.86%)</title><rect x="564.7" y="325" width="10.1" height="15.0" fill="rgb(222,28,27)" rx="2" ry="2" />
<text  x="567.68" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1175.3" y="501" width="0.1" height="15.0" fill="rgb(205,102,26)" rx="2" ry="2" />
<text  x="1178.27" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="866.4" y="405" width="1.1" height="15.0" fill="rgb(235,85,51)" rx="2" ry="2" />
<text  x="869.37" y="415.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (65 samples, 0.14%)</title><rect x="509.1" y="229" width="1.6" height="15.0" fill="rgb(239,17,27)" rx="2" ry="2" />
<text  x="512.10" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (26 samples, 0.05%)</title><rect x="1056.4" y="277" width="0.6" height="15.0" fill="rgb(234,207,36)" rx="2" ry="2" />
<text  x="1059.37" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="810.6" y="197" width="0.1" height="15.0" fill="rgb(219,79,48)" rx="2" ry="2" />
<text  x="813.59" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%)</title><rect x="584.7" y="341" width="0.3" height="15.0" fill="rgb(226,10,14)" rx="2" ry="2" />
<text  x="587.67" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="681.9" y="453" width="0.6" height="15.0" fill="rgb(225,153,53)" rx="2" ry="2" />
<text  x="684.94" y="463.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (13 samples, 0.03%)</title><rect x="422.0" y="341" width="0.4" height="15.0" fill="rgb(226,9,29)" rx="2" ry="2" />
<text  x="425.04" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1083.8" y="309" width="0.3" height="15.0" fill="rgb(253,28,39)" rx="2" ry="2" />
<text  x="1086.77" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (6 samples, 0.01%)</title><rect x="768.0" y="357" width="0.2" height="15.0" fill="rgb(245,221,44)" rx="2" ry="2" />
<text  x="771.03" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (20 samples, 0.04%)</title><rect x="630.0" y="485" width="0.5" height="15.0" fill="rgb(240,30,22)" rx="2" ry="2" />
<text  x="633.03" y="495.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (12 samples, 0.03%)</title><rect x="37.3" y="437" width="0.3" height="15.0" fill="rgb(241,154,7)" rx="2" ry="2" />
<text  x="40.33" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::consume (15 samples, 0.03%)</title><rect x="695.2" y="277" width="0.3" height="15.0" fill="rgb(205,41,16)" rx="2" ry="2" />
<text  x="698.17" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%)</title><rect x="497.7" y="309" width="0.2" height="15.0" fill="rgb(230,169,3)" rx="2" ry="2" />
<text  x="500.74" y="319.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.08%)</title><rect x="880.4" y="437" width="0.9" height="15.0" fill="rgb(209,129,27)" rx="2" ry="2" />
<text  x="883.40" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (10 samples, 0.02%)</title><rect x="716.6" y="405" width="0.2" height="15.0" fill="rgb(251,104,47)" rx="2" ry="2" />
<text  x="719.59" y="415.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (23 samples, 0.05%)</title><rect x="1141.8" y="277" width="0.6" height="15.0" fill="rgb(228,124,25)" rx="2" ry="2" />
<text  x="1144.83" y="287.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (271 samples, 0.57%)</title><rect x="547.8" y="405" width="6.8" height="15.0" fill="rgb(218,113,21)" rx="2" ry="2" />
<text  x="550.81" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="773.9" y="325" width="0.3" height="15.0" fill="rgb(224,183,42)" rx="2" ry="2" />
<text  x="776.89" y="335.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.01%)</title><rect x="979.3" y="357" width="0.1" height="15.0" fill="rgb(206,69,21)" rx="2" ry="2" />
<text  x="982.26" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (12 samples, 0.03%)</title><rect x="726.7" y="485" width="0.3" height="15.0" fill="rgb(214,209,4)" rx="2" ry="2" />
<text  x="729.67" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (17 samples, 0.04%)</title><rect x="890.5" y="469" width="0.5" height="15.0" fill="rgb(237,155,19)" rx="2" ry="2" />
<text  x="893.53" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%)</title><rect x="409.8" y="213" width="0.1" height="15.0" fill="rgb(240,134,23)" rx="2" ry="2" />
<text  x="412.78" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="917.1" y="357" width="0.2" height="15.0" fill="rgb(243,52,2)" rx="2" ry="2" />
<text  x="920.14" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="107.7" y="421" width="0.2" height="15.0" fill="rgb(232,152,44)" rx="2" ry="2" />
<text  x="110.74" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="459.9" y="309" width="0.6" height="15.0" fill="rgb(246,80,42)" rx="2" ry="2" />
<text  x="462.85" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="662.6" y="453" width="0.1" height="15.0" fill="rgb(212,155,18)" rx="2" ry="2" />
<text  x="665.62" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (86 samples, 0.18%)</title><rect x="925.4" y="357" width="2.1" height="15.0" fill="rgb(240,35,41)" rx="2" ry="2" />
<text  x="928.38" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="831.6" y="309" width="0.1" height="15.0" fill="rgb(212,35,14)" rx="2" ry="2" />
<text  x="834.60" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="843.5" y="293" width="0.3" height="15.0" fill="rgb(212,204,44)" rx="2" ry="2" />
<text  x="846.46" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (19 samples, 0.04%)</title><rect x="545.2" y="405" width="0.5" height="15.0" fill="rgb(233,193,35)" rx="2" ry="2" />
<text  x="548.24" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="850.1" y="277" width="0.1" height="15.0" fill="rgb(208,33,24)" rx="2" ry="2" />
<text  x="853.10" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (17 samples, 0.04%)</title><rect x="203.4" y="133" width="0.4" height="15.0" fill="rgb(247,124,40)" rx="2" ry="2" />
<text  x="206.39" y="143.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="682.2" y="437" width="0.3" height="15.0" fill="rgb(232,29,43)" rx="2" ry="2" />
<text  x="685.19" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (60 samples, 0.13%)</title><rect x="63.5" y="437" width="1.5" height="15.0" fill="rgb(248,149,5)" rx="2" ry="2" />
<text  x="66.51" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (54 samples, 0.11%)</title><rect x="235.0" y="181" width="1.3" height="15.0" fill="rgb(221,79,7)" rx="2" ry="2" />
<text  x="237.99" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (72 samples, 0.15%)</title><rect x="18.4" y="341" width="1.8" height="15.0" fill="rgb(235,32,10)" rx="2" ry="2" />
<text  x="21.44" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="253.4" y="261" width="0.2" height="15.0" fill="rgb(253,183,25)" rx="2" ry="2" />
<text  x="256.41" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (59 samples, 0.12%)</title><rect x="705.8" y="485" width="1.5" height="15.0" fill="rgb(251,165,10)" rx="2" ry="2" />
<text  x="708.83" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (29 samples, 0.06%)</title><rect x="100.9" y="405" width="0.8" height="15.0" fill="rgb(228,205,6)" rx="2" ry="2" />
<text  x="103.93" y="415.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (58 samples, 0.12%)</title><rect x="465.5" y="325" width="1.5" height="15.0" fill="rgb(207,204,6)" rx="2" ry="2" />
<text  x="468.52" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="496.6" y="277" width="1.1" height="15.0" fill="rgb(219,70,51)" rx="2" ry="2" />
<text  x="499.59" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="131.8" y="229" width="0.1" height="15.0" fill="rgb(218,224,27)" rx="2" ry="2" />
<text  x="134.80" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (7 samples, 0.01%)</title><rect x="749.5" y="389" width="0.1" height="15.0" fill="rgb(248,223,13)" rx="2" ry="2" />
<text  x="752.46" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="871.8" y="325" width="0.1" height="15.0" fill="rgb(224,117,19)" rx="2" ry="2" />
<text  x="874.76" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (5 samples, 0.01%)</title><rect x="646.8" y="469" width="0.1" height="15.0" fill="rgb(246,194,38)" rx="2" ry="2" />
<text  x="649.82" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%)</title><rect x="1036.2" y="197" width="0.2" height="15.0" fill="rgb(223,11,22)" rx="2" ry="2" />
<text  x="1039.25" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (55 samples, 0.12%)</title><rect x="523.1" y="293" width="1.4" height="15.0" fill="rgb(252,29,42)" rx="2" ry="2" />
<text  x="526.12" y="303.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (37 samples, 0.08%)</title><rect x="936.2" y="357" width="0.9" height="15.0" fill="rgb(233,94,34)" rx="2" ry="2" />
<text  x="939.18" y="367.5" ></text>
</g>
<g >
<title>auth::resource::resource (133 samples, 0.28%)</title><rect x="785.6" y="389" width="3.3" height="15.0" fill="rgb(205,201,41)" rx="2" ry="2" />
<text  x="788.60" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (17 samples, 0.04%)</title><rect x="774.8" y="357" width="0.4" height="15.0" fill="rgb(230,58,21)" rx="2" ry="2" />
<text  x="777.82" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="662.5" y="437" width="0.1" height="15.0" fill="rgb(222,205,30)" rx="2" ry="2" />
<text  x="665.47" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (40 samples, 0.08%)</title><rect x="690.1" y="469" width="1.0" height="15.0" fill="rgb(219,98,4)" rx="2" ry="2" />
<text  x="693.10" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="36.9" y="437" width="0.2" height="15.0" fill="rgb(207,212,22)" rx="2" ry="2" />
<text  x="39.91" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%)</title><rect x="390.0" y="165" width="0.2" height="15.0" fill="rgb(226,89,51)" rx="2" ry="2" />
<text  x="393.01" y="175.5" ></text>
</g>
<g >
<title>cql3::single_column_relation::new_EQ_restriction (6 samples, 0.01%)</title><rect x="21.7" y="373" width="0.1" height="15.0" fill="rgb(252,23,16)" rx="2" ry="2" />
<text  x="24.66" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (50 samples, 0.11%)</title><rect x="803.9" y="245" width="1.3" height="15.0" fill="rgb(221,69,32)" rx="2" ry="2" />
<text  x="806.95" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="430.9" y="373" width="0.1" height="15.0" fill="rgb(237,174,26)" rx="2" ry="2" />
<text  x="433.90" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (12 samples, 0.03%)</title><rect x="1062.1" y="293" width="0.3" height="15.0" fill="rgb(231,136,29)" rx="2" ry="2" />
<text  x="1065.11" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (79 samples, 0.17%)</title><rect x="670.5" y="453" width="2.0" height="15.0" fill="rgb(242,36,48)" rx="2" ry="2" />
<text  x="673.49" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,172 samples, 4.59%)</title><rect x="1009.4" y="309" width="54.3" height="15.0" fill="rgb(241,61,9)" rx="2" ry="2" />
<text  x="1012.44" y="319.5" >servi..</text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (5 samples, 0.01%)</title><rect x="31.2" y="485" width="0.2" height="15.0" fill="rgb(222,45,22)" rx="2" ry="2" />
<text  x="34.24" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (71 samples, 0.15%)</title><rect x="261.3" y="325" width="1.8" height="15.0" fill="rgb(227,182,54)" rx="2" ry="2" />
<text  x="264.32" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%)</title><rect x="954.0" y="341" width="0.3" height="15.0" fill="rgb(233,71,0)" rx="2" ry="2" />
<text  x="957.00" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (13 samples, 0.03%)</title><rect x="1017.9" y="261" width="0.4" height="15.0" fill="rgb(216,113,36)" rx="2" ry="2" />
<text  x="1020.93" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (13 samples, 0.03%)</title><rect x="256.9" y="309" width="0.4" height="15.0" fill="rgb(250,92,15)" rx="2" ry="2" />
<text  x="259.93" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (89 samples, 0.19%)</title><rect x="848.5" y="341" width="2.2" height="15.0" fill="rgb(206,58,39)" rx="2" ry="2" />
<text  x="851.50" y="351.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (5 samples, 0.01%)</title><rect x="920.3" y="373" width="0.1" height="15.0" fill="rgb(239,218,7)" rx="2" ry="2" />
<text  x="923.31" y="383.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (213 samples, 0.45%)</title><rect x="15.9" y="453" width="5.3" height="15.0" fill="rgb(239,175,0)" rx="2" ry="2" />
<text  x="18.89" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%)</title><rect x="876.3" y="341" width="0.9" height="15.0" fill="rgb(250,176,8)" rx="2" ry="2" />
<text  x="879.26" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (9 samples, 0.02%)</title><rect x="1062.9" y="293" width="0.2" height="15.0" fill="rgb(207,133,23)" rx="2" ry="2" />
<text  x="1065.90" y="303.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (8 samples, 0.02%)</title><rect x="21.3" y="421" width="0.2" height="15.0" fill="rgb(238,143,16)" rx="2" ry="2" />
<text  x="24.31" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (10 samples, 0.02%)</title><rect x="176.4" y="117" width="0.2" height="15.0" fill="rgb(227,74,54)" rx="2" ry="2" />
<text  x="179.36" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="730.7" y="389" width="0.6" height="15.0" fill="rgb(206,105,48)" rx="2" ry="2" />
<text  x="733.74" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (9 samples, 0.02%)</title><rect x="504.5" y="261" width="0.2" height="15.0" fill="rgb(248,145,30)" rx="2" ry="2" />
<text  x="507.45" y="271.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (16 samples, 0.03%)</title><rect x="914.9" y="325" width="0.4" height="15.0" fill="rgb(248,59,42)" rx="2" ry="2" />
<text  x="917.87" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (11 samples, 0.02%)</title><rect x="24.5" y="517" width="0.3" height="15.0" fill="rgb(216,82,3)" rx="2" ry="2" />
<text  x="27.48" y="527.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (68 samples, 0.14%)</title><rect x="882.0" y="469" width="1.7" height="15.0" fill="rgb(249,6,21)" rx="2" ry="2" />
<text  x="885.02" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="734.2" y="453" width="0.2" height="15.0" fill="rgb(212,42,54)" rx="2" ry="2" />
<text  x="737.16" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (82 samples, 0.17%)</title><rect x="290.3" y="293" width="2.0" height="15.0" fill="rgb(230,23,4)" rx="2" ry="2" />
<text  x="293.30" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (6 samples, 0.01%)</title><rect x="720.3" y="421" width="0.2" height="15.0" fill="rgb(218,27,3)" rx="2" ry="2" />
<text  x="723.31" y="431.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (8 samples, 0.02%)</title><rect x="16.6" y="261" width="0.2" height="15.0" fill="rgb(227,10,35)" rx="2" ry="2" />
<text  x="19.64" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (10 samples, 0.02%)</title><rect x="549.8" y="341" width="0.2" height="15.0" fill="rgb(226,65,36)" rx="2" ry="2" />
<text  x="552.76" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="946.7" y="405" width="0.2" height="15.0" fill="rgb(233,218,33)" rx="2" ry="2" />
<text  x="949.72" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (38 samples, 0.08%)</title><rect x="811.9" y="197" width="0.9" height="15.0" fill="rgb(247,62,6)" rx="2" ry="2" />
<text  x="814.88" y="207.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%)</title><rect x="23.0" y="581" width="0.3" height="15.0" fill="rgb(221,157,31)" rx="2" ry="2" />
<text  x="26.03" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="240.7" y="165" width="0.6" height="15.0" fill="rgb(208,65,38)" rx="2" ry="2" />
<text  x="243.65" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (16 samples, 0.03%)</title><rect x="706.7" y="469" width="0.4" height="15.0" fill="rgb(232,62,28)" rx="2" ry="2" />
<text  x="709.65" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="1158.1" y="453" width="0.1" height="15.0" fill="rgb(213,122,28)" rx="2" ry="2" />
<text  x="1161.05" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="1142.8" y="277" width="0.6" height="15.0" fill="rgb(229,201,39)" rx="2" ry="2" />
<text  x="1145.83" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (8 samples, 0.02%)</title><rect x="524.5" y="309" width="0.2" height="15.0" fill="rgb(234,59,35)" rx="2" ry="2" />
<text  x="527.50" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (25 samples, 0.05%)</title><rect x="585.5" y="373" width="0.6" height="15.0" fill="rgb(254,203,47)" rx="2" ry="2" />
<text  x="588.52" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (9 samples, 0.02%)</title><rect x="210.4" y="165" width="0.3" height="15.0" fill="rgb(246,55,1)" rx="2" ry="2" />
<text  x="213.43" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (17 samples, 0.04%)</title><rect x="963.3" y="325" width="0.5" height="15.0" fill="rgb(209,9,21)" rx="2" ry="2" />
<text  x="966.34" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="639.0" y="453" width="0.1" height="15.0" fill="rgb(252,222,14)" rx="2" ry="2" />
<text  x="641.99" y="463.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="554.6" y="405" width="0.6" height="15.0" fill="rgb(237,42,43)" rx="2" ry="2" />
<text  x="557.65" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (16 samples, 0.03%)</title><rect x="574.4" y="309" width="0.4" height="15.0" fill="rgb(221,178,1)" rx="2" ry="2" />
<text  x="577.37" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="659.2" y="469" width="0.2" height="15.0" fill="rgb(213,79,3)" rx="2" ry="2" />
<text  x="662.15" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (122 samples, 0.26%)</title><rect x="384.0" y="149" width="3.1" height="15.0" fill="rgb(232,187,41)" rx="2" ry="2" />
<text  x="387.02" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="645.4" y="485" width="0.7" height="15.0" fill="rgb(215,212,31)" rx="2" ry="2" />
<text  x="648.43" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (170 samples, 0.36%)</title><rect x="68.9" y="405" width="4.2" height="15.0" fill="rgb(224,36,2)" rx="2" ry="2" />
<text  x="71.88" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1139.4" y="421" width="0.1" height="15.0" fill="rgb(240,83,24)" rx="2" ry="2" />
<text  x="1142.41" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (14 samples, 0.03%)</title><rect x="606.6" y="437" width="0.4" height="15.0" fill="rgb(252,132,2)" rx="2" ry="2" />
<text  x="609.64" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,114 samples, 10.82%)</title><rect x="289.2" y="309" width="127.6" height="15.0" fill="rgb(243,180,13)" rx="2" ry="2" />
<text  x="292.20" y="319.5" >std::__invoke_im..</text>
</g>
<g >
<title>service::storage_proxy::do_mutate (31 samples, 0.07%)</title><rect x="1142.6" y="341" width="0.8" height="15.0" fill="rgb(254,178,35)" rx="2" ry="2" />
<text  x="1145.58" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (27 samples, 0.06%)</title><rect x="576.0" y="341" width="0.7" height="15.0" fill="rgb(248,126,41)" rx="2" ry="2" />
<text  x="579.01" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="430.8" y="373" width="0.1" height="15.0" fill="rgb(242,10,16)" rx="2" ry="2" />
<text  x="433.77" y="383.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="418.6" y="261" width="0.8" height="15.0" fill="rgb(221,77,3)" rx="2" ry="2" />
<text  x="421.62" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (10 samples, 0.02%)</title><rect x="886.7" y="373" width="0.2" height="15.0" fill="rgb(219,125,34)" rx="2" ry="2" />
<text  x="889.66" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (12 samples, 0.03%)</title><rect x="1002.8" y="277" width="0.3" height="15.0" fill="rgb(241,9,21)" rx="2" ry="2" />
<text  x="1005.83" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="943.8" y="405" width="0.4" height="15.0" fill="rgb(215,138,25)" rx="2" ry="2" />
<text  x="946.82" y="415.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (12 samples, 0.03%)</title><rect x="564.8" y="309" width="0.3" height="15.0" fill="rgb(233,61,25)" rx="2" ry="2" />
<text  x="567.81" y="319.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="830.1" y="277" width="0.8" height="15.0" fill="rgb(223,186,34)" rx="2" ry="2" />
<text  x="833.13" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (34 samples, 0.07%)</title><rect x="1060.3" y="229" width="0.9" height="15.0" fill="rgb(206,53,39)" rx="2" ry="2" />
<text  x="1063.33" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (54 samples, 0.11%)</title><rect x="653.6" y="421" width="1.3" height="15.0" fill="rgb(252,154,14)" rx="2" ry="2" />
<text  x="656.56" y="431.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (8 samples, 0.02%)</title><rect x="754.3" y="325" width="0.2" height="15.0" fill="rgb(234,215,10)" rx="2" ry="2" />
<text  x="757.25" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="156.2" y="181" width="0.8" height="15.0" fill="rgb(229,147,22)" rx="2" ry="2" />
<text  x="159.21" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (49 samples, 0.10%)</title><rect x="661.4" y="453" width="1.2" height="15.0" fill="rgb(232,134,24)" rx="2" ry="2" />
<text  x="664.40" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.03%)</title><rect x="1100.7" y="245" width="0.3" height="15.0" fill="rgb(218,147,17)" rx="2" ry="2" />
<text  x="1103.69" y="255.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="803.5" y="245" width="0.4" height="15.0" fill="rgb(231,48,29)" rx="2" ry="2" />
<text  x="806.47" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (23 samples, 0.05%)</title><rect x="292.3" y="293" width="0.6" height="15.0" fill="rgb(231,165,3)" rx="2" ry="2" />
<text  x="295.35" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (50 samples, 0.11%)</title><rect x="284.6" y="373" width="1.3" height="15.0" fill="rgb(211,184,15)" rx="2" ry="2" />
<text  x="287.61" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (78 samples, 0.16%)</title><rect x="149.0" y="197" width="2.0" height="15.0" fill="rgb(206,170,13)" rx="2" ry="2" />
<text  x="152.03" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (19 samples, 0.04%)</title><rect x="806.5" y="229" width="0.5" height="15.0" fill="rgb(216,167,33)" rx="2" ry="2" />
<text  x="809.49" y="239.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="794.9" y="309" width="0.3" height="15.0" fill="rgb(239,3,19)" rx="2" ry="2" />
<text  x="797.86" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="217.8" y="133" width="0.2" height="15.0" fill="rgb(236,155,19)" rx="2" ry="2" />
<text  x="220.84" y="143.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="900.1" y="421" width="0.1" height="15.0" fill="rgb(251,30,5)" rx="2" ry="2" />
<text  x="903.07" y="431.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="840.0" y="373" width="0.7" height="15.0" fill="rgb(218,196,46)" rx="2" ry="2" />
<text  x="842.96" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (223 samples, 0.47%)</title><rect x="1095.4" y="277" width="5.6" height="15.0" fill="rgb(238,159,19)" rx="2" ry="2" />
<text  x="1098.43" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.01%)</title><rect x="1175.1" y="501" width="0.2" height="15.0" fill="rgb(229,165,35)" rx="2" ry="2" />
<text  x="1178.15" y="511.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%)</title><rect x="1051.7" y="261" width="0.1" height="15.0" fill="rgb(208,112,54)" rx="2" ry="2" />
<text  x="1054.72" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (32 samples, 0.07%)</title><rect x="833.5" y="309" width="0.8" height="15.0" fill="rgb(208,66,0)" rx="2" ry="2" />
<text  x="836.52" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (5 samples, 0.01%)</title><rect x="851.7" y="421" width="0.1" height="15.0" fill="rgb(249,188,38)" rx="2" ry="2" />
<text  x="854.67" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (7 samples, 0.01%)</title><rect x="43.0" y="469" width="0.2" height="15.0" fill="rgb(216,217,48)" rx="2" ry="2" />
<text  x="46.00" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (11 samples, 0.02%)</title><rect x="196.0" y="85" width="0.3" height="15.0" fill="rgb(253,60,22)" rx="2" ry="2" />
<text  x="199.00" y="95.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="290.1" y="293" width="0.1" height="15.0" fill="rgb(239,202,22)" rx="2" ry="2" />
<text  x="293.07" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="645.3" y="485" width="0.1" height="15.0" fill="rgb(241,107,6)" rx="2" ry="2" />
<text  x="648.28" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.01%)</title><rect x="1004.0" y="325" width="0.1" height="15.0" fill="rgb(219,178,30)" rx="2" ry="2" />
<text  x="1006.97" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (501 samples, 1.06%)</title><rect x="180.2" y="101" width="12.5" height="15.0" fill="rgb(251,51,23)" rx="2" ry="2" />
<text  x="183.15" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (134 samples, 0.28%)</title><rect x="844.7" y="325" width="3.3" height="15.0" fill="rgb(230,56,42)" rx="2" ry="2" />
<text  x="847.66" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="566.0" y="293" width="0.1" height="15.0" fill="rgb(216,93,31)" rx="2" ry="2" />
<text  x="569.00" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.01%)</title><rect x="1108.0" y="341" width="0.2" height="15.0" fill="rgb(208,111,5)" rx="2" ry="2" />
<text  x="1110.98" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="313.5" y="181" width="0.2" height="15.0" fill="rgb(207,215,44)" rx="2" ry="2" />
<text  x="316.51" y="191.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (52 samples, 0.11%)</title><rect x="463.9" y="325" width="1.3" height="15.0" fill="rgb(216,63,31)" rx="2" ry="2" />
<text  x="466.94" y="335.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (8 samples, 0.02%)</title><rect x="1041.7" y="165" width="0.2" height="15.0" fill="rgb(220,72,4)" rx="2" ry="2" />
<text  x="1044.71" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="594.6" y="373" width="0.1" height="15.0" fill="rgb(215,84,20)" rx="2" ry="2" />
<text  x="597.56" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="594.9" y="389" width="0.2" height="15.0" fill="rgb(250,93,2)" rx="2" ry="2" />
<text  x="597.91" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (9 samples, 0.02%)</title><rect x="157.5" y="213" width="0.2" height="15.0" fill="rgb(214,83,15)" rx="2" ry="2" />
<text  x="160.46" y="223.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (11 samples, 0.02%)</title><rect x="438.0" y="341" width="0.3" height="15.0" fill="rgb(215,172,44)" rx="2" ry="2" />
<text  x="441.01" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (5 samples, 0.01%)</title><rect x="427.0" y="405" width="0.1" height="15.0" fill="rgb(223,191,31)" rx="2" ry="2" />
<text  x="429.98" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (24 samples, 0.05%)</title><rect x="698.3" y="469" width="0.6" height="15.0" fill="rgb(234,98,27)" rx="2" ry="2" />
<text  x="701.29" y="479.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="523.7" y="277" width="0.8" height="15.0" fill="rgb(209,91,43)" rx="2" ry="2" />
<text  x="526.70" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="550.2" y="357" width="0.2" height="15.0" fill="rgb(218,83,15)" rx="2" ry="2" />
<text  x="553.18" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (16 samples, 0.03%)</title><rect x="72.5" y="373" width="0.4" height="15.0" fill="rgb(214,23,19)" rx="2" ry="2" />
<text  x="75.52" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (707 samples, 1.50%)</title><rect x="747.7" y="421" width="17.6" height="15.0" fill="rgb(214,148,12)" rx="2" ry="2" />
<text  x="750.69" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="632.4" y="485" width="0.5" height="15.0" fill="rgb(218,134,32)" rx="2" ry="2" />
<text  x="635.40" y="495.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (50 samples, 0.11%)</title><rect x="1176.6" y="517" width="1.3" height="15.0" fill="rgb(211,7,9)" rx="2" ry="2" />
<text  x="1179.62" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="626.2" y="437" width="0.1" height="15.0" fill="rgb(254,148,13)" rx="2" ry="2" />
<text  x="629.18" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (95 samples, 0.20%)</title><rect x="358.5" y="165" width="2.4" height="15.0" fill="rgb(249,157,38)" rx="2" ry="2" />
<text  x="361.49" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (16 samples, 0.03%)</title><rect x="444.4" y="261" width="0.4" height="15.0" fill="rgb(253,123,53)" rx="2" ry="2" />
<text  x="447.38" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (45 samples, 0.10%)</title><rect x="124.5" y="277" width="1.2" height="15.0" fill="rgb(237,187,48)" rx="2" ry="2" />
<text  x="127.54" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (8 samples, 0.02%)</title><rect x="1164.0" y="453" width="0.2" height="15.0" fill="rgb(217,190,2)" rx="2" ry="2" />
<text  x="1166.99" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="1170.7" y="437" width="0.2" height="15.0" fill="rgb(245,166,22)" rx="2" ry="2" />
<text  x="1173.71" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="877.9" y="421" width="0.9" height="15.0" fill="rgb(236,41,18)" rx="2" ry="2" />
<text  x="880.85" y="431.5" ></text>
</g>
<g >
<title>db::filter_for_query (28 samples, 0.06%)</title><rect x="1074.6" y="341" width="0.7" height="15.0" fill="rgb(249,2,11)" rx="2" ry="2" />
<text  x="1077.59" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="1061.2" y="277" width="0.3" height="15.0" fill="rgb(216,27,39)" rx="2" ry="2" />
<text  x="1064.23" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (6 samples, 0.01%)</title><rect x="656.9" y="389" width="0.2" height="15.0" fill="rgb(210,5,27)" rx="2" ry="2" />
<text  x="659.93" y="399.5" ></text>
</g>
<g >
<title>posix_memalign (5 samples, 0.01%)</title><rect x="187.4" y="69" width="0.1" height="15.0" fill="rgb(229,56,14)" rx="2" ry="2" />
<text  x="190.41" y="79.5" ></text>
</g>
<g >
<title>schema::column_at (15 samples, 0.03%)</title><rect x="364.2" y="197" width="0.4" height="15.0" fill="rgb(228,33,38)" rx="2" ry="2" />
<text  x="367.20" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="456.0" y="261" width="0.2" height="15.0" fill="rgb(222,178,38)" rx="2" ry="2" />
<text  x="458.98" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (6 samples, 0.01%)</title><rect x="308.0" y="165" width="0.1" height="15.0" fill="rgb(219,10,54)" rx="2" ry="2" />
<text  x="310.97" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (8 samples, 0.02%)</title><rect x="654.5" y="373" width="0.2" height="15.0" fill="rgb(205,162,5)" rx="2" ry="2" />
<text  x="657.46" y="383.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (10 samples, 0.02%)</title><rect x="738.4" y="405" width="0.3" height="15.0" fill="rgb(245,17,2)" rx="2" ry="2" />
<text  x="741.40" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="566.8" y="261" width="0.1" height="15.0" fill="rgb(225,8,53)" rx="2" ry="2" />
<text  x="569.78" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (36 samples, 0.08%)</title><rect x="1109.6" y="373" width="0.9" height="15.0" fill="rgb(240,24,25)" rx="2" ry="2" />
<text  x="1112.58" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (85 samples, 0.18%)</title><rect x="741.3" y="309" width="2.2" height="15.0" fill="rgb(243,156,17)" rx="2" ry="2" />
<text  x="744.35" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (64 samples, 0.14%)</title><rect x="16.1" y="341" width="1.6" height="15.0" fill="rgb(213,217,40)" rx="2" ry="2" />
<text  x="19.14" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (16 samples, 0.03%)</title><rect x="611.3" y="437" width="0.4" height="15.0" fill="rgb(249,49,45)" rx="2" ry="2" />
<text  x="614.28" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="521.9" y="325" width="0.2" height="15.0" fill="rgb(207,88,2)" rx="2" ry="2" />
<text  x="524.93" y="335.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (38 samples, 0.08%)</title><rect x="940.0" y="341" width="0.9" height="15.0" fill="rgb(219,222,54)" rx="2" ry="2" />
<text  x="942.98" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (50 samples, 0.11%)</title><rect x="1103.0" y="325" width="1.3" height="15.0" fill="rgb(254,139,33)" rx="2" ry="2" />
<text  x="1106.02" y="335.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (7 samples, 0.01%)</title><rect x="15.6" y="517" width="0.2" height="15.0" fill="rgb(241,61,52)" rx="2" ry="2" />
<text  x="18.64" y="527.5" ></text>
</g>
<g >
<title>sstring_hash::operator (15 samples, 0.03%)</title><rect x="872.1" y="357" width="0.4" height="15.0" fill="rgb(246,207,2)" rx="2" ry="2" />
<text  x="875.11" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (14 samples, 0.03%)</title><rect x="1075.8" y="341" width="0.3" height="15.0" fill="rgb(251,211,27)" rx="2" ry="2" />
<text  x="1078.78" y="351.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (102 samples, 0.22%)</title><rect x="848.3" y="373" width="2.5" height="15.0" fill="rgb(206,225,20)" rx="2" ry="2" />
<text  x="851.25" y="383.5" ></text>
</g>
<g >
<title>__tls_init (19 samples, 0.04%)</title><rect x="143.6" y="245" width="0.5" height="15.0" fill="rgb(209,229,11)" rx="2" ry="2" />
<text  x="146.61" y="255.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="512.3" y="197" width="0.8" height="15.0" fill="rgb(243,228,18)" rx="2" ry="2" />
<text  x="515.29" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="192.7" y="101" width="0.1" height="15.0" fill="rgb(213,84,3)" rx="2" ry="2" />
<text  x="195.66" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="974.7" y="341" width="0.5" height="15.0" fill="rgb(243,3,20)" rx="2" ry="2" />
<text  x="977.70" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (9 samples, 0.02%)</title><rect x="613.5" y="421" width="0.2" height="15.0" fill="rgb(215,101,8)" rx="2" ry="2" />
<text  x="616.48" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="665.6" y="485" width="0.2" height="15.0" fill="rgb(233,97,18)" rx="2" ry="2" />
<text  x="668.64" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (9 samples, 0.02%)</title><rect x="127.9" y="261" width="0.2" height="15.0" fill="rgb(253,165,42)" rx="2" ry="2" />
<text  x="130.91" y="271.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (953 samples, 2.02%)</title><rect x="467.0" y="325" width="23.8" height="15.0" fill="rgb(209,223,26)" rx="2" ry="2" />
<text  x="469.96" y="335.5" >d..</text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,655 samples, 3.50%)</title><rect x="1064.6" y="357" width="41.3" height="15.0" fill="rgb(229,41,40)" rx="2" ry="2" />
<text  x="1067.55" y="367.5" >ser..</text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (192 samples, 0.41%)</title><rect x="678.6" y="485" width="4.8" height="15.0" fill="rgb(207,106,41)" rx="2" ry="2" />
<text  x="681.62" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="808.4" y="197" width="0.2" height="15.0" fill="rgb(241,74,43)" rx="2" ry="2" />
<text  x="811.44" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="872.7" y="405" width="0.2" height="15.0" fill="rgb(225,228,27)" rx="2" ry="2" />
<text  x="875.66" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (7 samples, 0.01%)</title><rect x="81.1" y="453" width="0.2" height="15.0" fill="rgb(216,208,5)" rx="2" ry="2" />
<text  x="84.11" y="463.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (206 samples, 0.44%)</title><rect x="510.8" y="229" width="5.2" height="15.0" fill="rgb(210,160,29)" rx="2" ry="2" />
<text  x="513.82" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (50 samples, 0.11%)</title><rect x="963.1" y="341" width="1.3" height="15.0" fill="rgb(217,170,22)" rx="2" ry="2" />
<text  x="966.14" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1117.4" y="357" width="0.2" height="15.0" fill="rgb(253,27,53)" rx="2" ry="2" />
<text  x="1120.44" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (98 samples, 0.21%)</title><rect x="660.3" y="469" width="2.4" height="15.0" fill="rgb(233,8,47)" rx="2" ry="2" />
<text  x="663.30" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="639.1" y="469" width="0.6" height="15.0" fill="rgb(241,3,10)" rx="2" ry="2" />
<text  x="642.14" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (5 samples, 0.01%)</title><rect x="51.7" y="485" width="0.2" height="15.0" fill="rgb(240,31,36)" rx="2" ry="2" />
<text  x="54.73" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,808 samples, 12.29%)</title><rect x="281.7" y="405" width="145.0" height="15.0" fill="rgb(246,139,21)" rx="2" ry="2" />
<text  x="284.74" y="415.5" >seastar::future&lt;mu..</text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (47 samples, 0.10%)</title><rect x="387.4" y="165" width="1.1" height="15.0" fill="rgb(250,225,1)" rx="2" ry="2" />
<text  x="390.37" y="175.5" ></text>
</g>
<g >
<title>reader_permit::consume (9 samples, 0.02%)</title><rect x="510.5" y="197" width="0.2" height="15.0" fill="rgb(251,118,7)" rx="2" ry="2" />
<text  x="513.49" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (145 samples, 0.31%)</title><rect x="154.1" y="229" width="3.6" height="15.0" fill="rgb(214,89,23)" rx="2" ry="2" />
<text  x="157.12" y="239.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (5 samples, 0.01%)</title><rect x="217.3" y="133" width="0.1" height="15.0" fill="rgb(226,133,3)" rx="2" ry="2" />
<text  x="220.29" y="143.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (65 samples, 0.14%)</title><rect x="234.7" y="197" width="1.6" height="15.0" fill="rgb(206,205,54)" rx="2" ry="2" />
<text  x="237.71" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="229.0" y="229" width="0.1" height="15.0" fill="rgb(251,4,54)" rx="2" ry="2" />
<text  x="232.00" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (17 samples, 0.04%)</title><rect x="138.1" y="245" width="0.4" height="15.0" fill="rgb(239,192,42)" rx="2" ry="2" />
<text  x="141.07" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (43 samples, 0.09%)</title><rect x="513.1" y="197" width="1.1" height="15.0" fill="rgb(205,123,46)" rx="2" ry="2" />
<text  x="516.11" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (12 samples, 0.03%)</title><rect x="890.7" y="453" width="0.3" height="15.0" fill="rgb(214,6,44)" rx="2" ry="2" />
<text  x="893.66" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (336 samples, 0.71%)</title><rect x="441.9" y="309" width="8.3" height="15.0" fill="rgb(249,32,25)" rx="2" ry="2" />
<text  x="444.85" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (73 samples, 0.15%)</title><rect x="552.3" y="357" width="1.8" height="15.0" fill="rgb(208,153,36)" rx="2" ry="2" />
<text  x="555.28" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="61.7" y="453" width="0.1" height="15.0" fill="rgb(211,42,19)" rx="2" ry="2" />
<text  x="64.72" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (14 samples, 0.03%)</title><rect x="255.7" y="293" width="0.4" height="15.0" fill="rgb(223,93,51)" rx="2" ry="2" />
<text  x="258.73" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="770.7" y="405" width="0.2" height="15.0" fill="rgb(223,187,14)" rx="2" ry="2" />
<text  x="773.73" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (26 samples, 0.05%)</title><rect x="405.6" y="165" width="0.6" height="15.0" fill="rgb(212,194,12)" rx="2" ry="2" />
<text  x="408.56" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (40 samples, 0.08%)</title><rect x="942.8" y="405" width="1.0" height="15.0" fill="rgb(234,82,43)" rx="2" ry="2" />
<text  x="945.82" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1141.8" y="373" width="0.8" height="15.0" fill="rgb(213,49,24)" rx="2" ry="2" />
<text  x="1144.78" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (9 samples, 0.02%)</title><rect x="1042.2" y="165" width="0.2" height="15.0" fill="rgb(239,26,0)" rx="2" ry="2" />
<text  x="1045.21" y="175.5" ></text>
</g>
<g >
<title>row::row (5 samples, 0.01%)</title><rect x="246.7" y="213" width="0.1" height="15.0" fill="rgb(223,53,31)" rx="2" ry="2" />
<text  x="249.72" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (7 samples, 0.01%)</title><rect x="394.2" y="245" width="0.2" height="15.0" fill="rgb(250,72,14)" rx="2" ry="2" />
<text  x="397.23" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="257.6" y="325" width="0.3" height="15.0" fill="rgb(216,68,35)" rx="2" ry="2" />
<text  x="260.63" y="335.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (703 samples, 1.49%)</title><rect x="558.0" y="389" width="17.6" height="15.0" fill="rgb(215,4,23)" rx="2" ry="2" />
<text  x="561.04" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (14 samples, 0.03%)</title><rect x="886.7" y="405" width="0.3" height="15.0" fill="rgb(217,34,0)" rx="2" ry="2" />
<text  x="889.66" y="415.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="22.6" y="405" width="0.1" height="15.0" fill="rgb(213,168,10)" rx="2" ry="2" />
<text  x="25.58" y="415.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (59 samples, 0.12%)</title><rect x="752.7" y="309" width="1.5" height="15.0" fill="rgb(206,72,29)" rx="2" ry="2" />
<text  x="755.68" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="38.6" y="421" width="0.7" height="15.0" fill="rgb(242,198,48)" rx="2" ry="2" />
<text  x="41.60" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%)</title><rect x="1040.7" y="133" width="0.4" height="15.0" fill="rgb(220,192,36)" rx="2" ry="2" />
<text  x="1043.67" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (45 samples, 0.10%)</title><rect x="407.9" y="213" width="1.1" height="15.0" fill="rgb(224,61,38)" rx="2" ry="2" />
<text  x="410.86" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (23 samples, 0.05%)</title><rect x="225.4" y="165" width="0.5" height="15.0" fill="rgb(229,205,26)" rx="2" ry="2" />
<text  x="228.35" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="1063.1" y="293" width="0.2" height="15.0" fill="rgb(252,138,26)" rx="2" ry="2" />
<text  x="1066.13" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (14 samples, 0.03%)</title><rect x="451.1" y="293" width="0.3" height="15.0" fill="rgb(216,150,3)" rx="2" ry="2" />
<text  x="454.06" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%)</title><rect x="392.8" y="229" width="0.1" height="15.0" fill="rgb(216,109,12)" rx="2" ry="2" />
<text  x="395.78" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="700.4" y="453" width="0.3" height="15.0" fill="rgb(224,98,28)" rx="2" ry="2" />
<text  x="703.44" y="463.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (16 samples, 0.03%)</title><rect x="861.1" y="437" width="0.4" height="15.0" fill="rgb(228,175,31)" rx="2" ry="2" />
<text  x="864.05" y="447.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (11 samples, 0.02%)</title><rect x="661.9" y="437" width="0.2" height="15.0" fill="rgb(226,178,36)" rx="2" ry="2" />
<text  x="664.85" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (120 samples, 0.25%)</title><rect x="1131.6" y="405" width="3.0" height="15.0" fill="rgb(243,124,27)" rx="2" ry="2" />
<text  x="1134.57" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.03%)</title><rect x="11.4" y="581" width="0.3" height="15.0" fill="rgb(216,85,9)" rx="2" ry="2" />
<text  x="14.45" y="591.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (18 samples, 0.04%)</title><rect x="305.8" y="197" width="0.5" height="15.0" fill="rgb(213,46,48)" rx="2" ry="2" />
<text  x="308.82" y="207.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,756 samples, 14.29%)</title><rect x="111.3" y="389" width="168.6" height="15.0" fill="rgb(251,210,9)" rx="2" ry="2" />
<text  x="114.29" y="399.5" >merging_reader&lt;mutati..</text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (39 samples, 0.08%)</title><rect x="764.1" y="405" width="0.9" height="15.0" fill="rgb(237,218,25)" rx="2" ry="2" />
<text  x="767.06" y="415.5" ></text>
</g>
<g >
<title>__strlen_avx2 (104 samples, 0.22%)</title><rect x="1024.9" y="245" width="2.6" height="15.0" fill="rgb(208,84,25)" rx="2" ry="2" />
<text  x="1027.94" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (211 samples, 0.45%)</title><rect x="774.5" y="373" width="5.2" height="15.0" fill="rgb(221,198,36)" rx="2" ry="2" />
<text  x="777.47" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (27 samples, 0.06%)</title><rect x="415.8" y="277" width="0.7" height="15.0" fill="rgb(209,146,50)" rx="2" ry="2" />
<text  x="418.82" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="731.4" y="421" width="0.1" height="15.0" fill="rgb(225,105,31)" rx="2" ry="2" />
<text  x="734.39" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (233 samples, 0.49%)</title><rect x="997.3" y="341" width="5.9" height="15.0" fill="rgb(230,57,34)" rx="2" ry="2" />
<text  x="1000.34" y="351.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.02%)</title><rect x="22.5" y="437" width="0.2" height="15.0" fill="rgb(217,9,23)" rx="2" ry="2" />
<text  x="25.53" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="550.4" y="373" width="0.1" height="15.0" fill="rgb(210,51,3)" rx="2" ry="2" />
<text  x="553.35" y="383.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.18%)</title><rect x="973.1" y="373" width="2.1" height="15.0" fill="rgb(221,140,32)" rx="2" ry="2" />
<text  x="976.12" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (20 samples, 0.04%)</title><rect x="157.0" y="213" width="0.5" height="15.0" fill="rgb(215,225,48)" rx="2" ry="2" />
<text  x="159.96" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (99 samples, 0.21%)</title><rect x="962.4" y="405" width="2.5" height="15.0" fill="rgb(231,41,36)" rx="2" ry="2" />
<text  x="965.44" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (18 samples, 0.04%)</title><rect x="822.4" y="101" width="0.5" height="15.0" fill="rgb(254,186,50)" rx="2" ry="2" />
<text  x="825.44" y="111.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (21 samples, 0.04%)</title><rect x="365.4" y="213" width="0.6" height="15.0" fill="rgb(248,207,4)" rx="2" ry="2" />
<text  x="368.43" y="223.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="288.0" y="293" width="0.6" height="15.0" fill="rgb(230,57,14)" rx="2" ry="2" />
<text  x="290.95" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (24 samples, 0.05%)</title><rect x="1122.1" y="357" width="0.6" height="15.0" fill="rgb(214,10,0)" rx="2" ry="2" />
<text  x="1125.11" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (47 samples, 0.10%)</title><rect x="868.3" y="389" width="1.1" height="15.0" fill="rgb(239,18,32)" rx="2" ry="2" />
<text  x="871.27" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (15 samples, 0.03%)</title><rect x="165.0" y="197" width="0.3" height="15.0" fill="rgb(226,134,26)" rx="2" ry="2" />
<text  x="167.95" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.01%)</title><rect x="1109.4" y="373" width="0.1" height="15.0" fill="rgb(232,171,6)" rx="2" ry="2" />
<text  x="1112.35" y="383.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (60 samples, 0.13%)</title><rect x="607.5" y="421" width="1.5" height="15.0" fill="rgb(241,30,3)" rx="2" ry="2" />
<text  x="610.54" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (12 samples, 0.03%)</title><rect x="986.7" y="357" width="0.3" height="15.0" fill="rgb(241,118,22)" rx="2" ry="2" />
<text  x="989.73" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%)</title><rect x="582.2" y="341" width="0.3" height="15.0" fill="rgb(224,95,0)" rx="2" ry="2" />
<text  x="585.20" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (8 samples, 0.02%)</title><rect x="591.1" y="421" width="0.2" height="15.0" fill="rgb(248,131,25)" rx="2" ry="2" />
<text  x="594.11" y="431.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="712.4" y="437" width="0.1" height="15.0" fill="rgb(218,130,5)" rx="2" ry="2" />
<text  x="715.39" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="415.6" y="277" width="0.1" height="15.0" fill="rgb(241,147,36)" rx="2" ry="2" />
<text  x="418.60" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%)</title><rect x="798.1" y="277" width="0.4" height="15.0" fill="rgb(243,220,35)" rx="2" ry="2" />
<text  x="801.08" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.01%)</title><rect x="654.1" y="389" width="0.1" height="15.0" fill="rgb(208,198,18)" rx="2" ry="2" />
<text  x="657.06" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (23 samples, 0.05%)</title><rect x="719.7" y="421" width="0.6" height="15.0" fill="rgb(235,66,35)" rx="2" ry="2" />
<text  x="722.73" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (7 samples, 0.01%)</title><rect x="301.5" y="213" width="0.2" height="15.0" fill="rgb(218,10,24)" rx="2" ry="2" />
<text  x="304.48" y="223.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="660.7" y="453" width="0.4" height="15.0" fill="rgb(219,181,10)" rx="2" ry="2" />
<text  x="663.70" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (7 samples, 0.01%)</title><rect x="591.8" y="405" width="0.1" height="15.0" fill="rgb(228,95,42)" rx="2" ry="2" />
<text  x="594.76" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (194 samples, 0.41%)</title><rect x="36.0" y="469" width="4.8" height="15.0" fill="rgb(242,49,49)" rx="2" ry="2" />
<text  x="38.96" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="853.9" y="421" width="0.2" height="15.0" fill="rgb(242,103,51)" rx="2" ry="2" />
<text  x="856.87" y="431.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%)</title><rect x="522.1" y="325" width="0.2" height="15.0" fill="rgb(219,191,4)" rx="2" ry="2" />
<text  x="525.05" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (17 samples, 0.04%)</title><rect x="79.4" y="453" width="0.4" height="15.0" fill="rgb(229,21,50)" rx="2" ry="2" />
<text  x="82.39" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="700.5" y="437" width="0.2" height="15.0" fill="rgb(222,29,29)" rx="2" ry="2" />
<text  x="703.54" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (9 samples, 0.02%)</title><rect x="616.4" y="437" width="0.2" height="15.0" fill="rgb(208,193,24)" rx="2" ry="2" />
<text  x="619.37" y="447.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (214 samples, 0.45%)</title><rect x="353.1" y="165" width="5.4" height="15.0" fill="rgb(230,18,10)" rx="2" ry="2" />
<text  x="356.15" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (13 samples, 0.03%)</title><rect x="1129.0" y="421" width="0.3" height="15.0" fill="rgb(221,145,27)" rx="2" ry="2" />
<text  x="1132.02" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="214.2" y="149" width="0.1" height="15.0" fill="rgb(207,36,21)" rx="2" ry="2" />
<text  x="217.17" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (24 samples, 0.05%)</title><rect x="1055.4" y="261" width="0.6" height="15.0" fill="rgb(254,15,9)" rx="2" ry="2" />
<text  x="1058.37" y="271.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (24 samples, 0.05%)</title><rect x="941.3" y="389" width="0.6" height="15.0" fill="rgb(225,132,37)" rx="2" ry="2" />
<text  x="944.33" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (134 samples, 0.28%)</title><rect x="687.8" y="485" width="3.3" height="15.0" fill="rgb(214,180,8)" rx="2" ry="2" />
<text  x="690.76" y="495.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (282 samples, 0.60%)</title><rect x="756.6" y="373" width="7.1" height="15.0" fill="rgb(230,35,21)" rx="2" ry="2" />
<text  x="759.62" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="948.3" y="405" width="0.4" height="15.0" fill="rgb(225,144,7)" rx="2" ry="2" />
<text  x="951.29" y="415.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (361 samples, 0.76%)</title><rect x="469.1" y="293" width="9.0" height="15.0" fill="rgb(226,79,32)" rx="2" ry="2" />
<text  x="472.14" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.06%)</title><rect x="199.8" y="117" width="0.7" height="15.0" fill="rgb(230,84,46)" rx="2" ry="2" />
<text  x="202.79" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (6 samples, 0.01%)</title><rect x="229.1" y="229" width="0.2" height="15.0" fill="rgb(224,46,9)" rx="2" ry="2" />
<text  x="232.15" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="526.8" y="325" width="0.2" height="15.0" fill="rgb(243,113,21)" rx="2" ry="2" />
<text  x="529.82" y="335.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (5 samples, 0.01%)</title><rect x="1138.0" y="405" width="0.1" height="15.0" fill="rgb(218,112,3)" rx="2" ry="2" />
<text  x="1140.98" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (11 samples, 0.02%)</title><rect x="79.0" y="453" width="0.3" height="15.0" fill="rgb(232,189,3)" rx="2" ry="2" />
<text  x="82.01" y="463.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (24 samples, 0.05%)</title><rect x="68.3" y="405" width="0.6" height="15.0" fill="rgb(237,17,7)" rx="2" ry="2" />
<text  x="71.28" y="415.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="678.0" y="469" width="0.4" height="15.0" fill="rgb(214,122,52)" rx="2" ry="2" />
<text  x="681.05" y="479.5" ></text>
</g>
<g >
<title>database::find_uuid (177 samples, 0.37%)</title><rect x="843.8" y="357" width="4.4" height="15.0" fill="rgb(230,160,39)" rx="2" ry="2" />
<text  x="846.76" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.03%)</title><rect x="744.2" y="389" width="0.3" height="15.0" fill="rgb(238,186,38)" rx="2" ry="2" />
<text  x="747.22" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (42 samples, 0.09%)</title><rect x="622.9" y="437" width="1.0" height="15.0" fill="rgb(245,183,54)" rx="2" ry="2" />
<text  x="625.86" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (5 samples, 0.01%)</title><rect x="369.1" y="165" width="0.1" height="15.0" fill="rgb(224,79,27)" rx="2" ry="2" />
<text  x="372.07" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="635.4" y="485" width="0.2" height="15.0" fill="rgb(249,194,0)" rx="2" ry="2" />
<text  x="638.39" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (21 samples, 0.04%)</title><rect x="32.6" y="485" width="0.5" height="15.0" fill="rgb(220,89,31)" rx="2" ry="2" />
<text  x="35.61" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.03%)</title><rect x="777.6" y="309" width="0.3" height="15.0" fill="rgb(205,103,4)" rx="2" ry="2" />
<text  x="780.61" y="319.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (262 samples, 0.55%)</title><rect x="203.8" y="165" width="6.6" height="15.0" fill="rgb(243,73,8)" rx="2" ry="2" />
<text  x="206.81" y="175.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (141 samples, 0.30%)</title><rect x="982.1" y="341" width="3.5" height="15.0" fill="rgb(210,209,39)" rx="2" ry="2" />
<text  x="985.11" y="351.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="592.1" y="405" width="0.8" height="15.0" fill="rgb(252,98,35)" rx="2" ry="2" />
<text  x="595.06" y="415.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (96 samples, 0.20%)</title><rect x="522.3" y="325" width="2.4" height="15.0" fill="rgb(231,227,32)" rx="2" ry="2" />
<text  x="525.30" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="915.3" y="325" width="0.5" height="15.0" fill="rgb(227,187,37)" rx="2" ry="2" />
<text  x="918.27" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (10 samples, 0.02%)</title><rect x="1103.6" y="309" width="0.3" height="15.0" fill="rgb(253,114,34)" rx="2" ry="2" />
<text  x="1106.64" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1055.0" y="277" width="0.1" height="15.0" fill="rgb(251,24,13)" rx="2" ry="2" />
<text  x="1057.97" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (43 samples, 0.09%)</title><rect x="955.1" y="373" width="1.0" height="15.0" fill="rgb(238,76,31)" rx="2" ry="2" />
<text  x="958.05" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (32 samples, 0.07%)</title><rect x="218.5" y="165" width="0.8" height="15.0" fill="rgb(239,64,28)" rx="2" ry="2" />
<text  x="221.49" y="175.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="543.3" y="325" width="0.7" height="15.0" fill="rgb(212,167,22)" rx="2" ry="2" />
<text  x="546.27" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (349 samples, 0.74%)</title><rect x="507.4" y="245" width="8.8" height="15.0" fill="rgb(235,63,39)" rx="2" ry="2" />
<text  x="510.45" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="951.1" y="357" width="0.1" height="15.0" fill="rgb(234,30,44)" rx="2" ry="2" />
<text  x="954.08" y="367.5" ></text>
</g>
<g >
<title>row::external_memory_usage (5 samples, 0.01%)</title><rect x="212.2" y="165" width="0.2" height="15.0" fill="rgb(241,218,13)" rx="2" ry="2" />
<text  x="215.25" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (23 samples, 0.05%)</title><rect x="1038.4" y="149" width="0.6" height="15.0" fill="rgb(237,127,19)" rx="2" ry="2" />
<text  x="1041.42" y="159.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%)</title><rect x="867.8" y="421" width="0.1" height="15.0" fill="rgb(227,105,15)" rx="2" ry="2" />
<text  x="870.79" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (10 samples, 0.02%)</title><rect x="1139.1" y="421" width="0.2" height="15.0" fill="rgb(248,70,19)" rx="2" ry="2" />
<text  x="1142.06" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (32 samples, 0.07%)</title><rect x="33.2" y="485" width="0.8" height="15.0" fill="rgb(232,69,15)" rx="2" ry="2" />
<text  x="36.19" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="913.5" y="309" width="0.3" height="15.0" fill="rgb(234,7,23)" rx="2" ry="2" />
<text  x="916.52" y="319.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="34.9" y="469" width="1.0" height="15.0" fill="rgb(211,145,47)" rx="2" ry="2" />
<text  x="37.86" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="408.8" y="181" width="0.2" height="15.0" fill="rgb(247,215,12)" rx="2" ry="2" />
<text  x="411.83" y="191.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (20 samples, 0.04%)</title><rect x="211.7" y="165" width="0.5" height="15.0" fill="rgb(208,183,32)" rx="2" ry="2" />
<text  x="214.73" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (27 samples, 0.06%)</title><rect x="797.8" y="293" width="0.7" height="15.0" fill="rgb(238,30,49)" rx="2" ry="2" />
<text  x="800.83" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (16 samples, 0.03%)</title><rect x="1113.6" y="389" width="0.4" height="15.0" fill="rgb(234,19,8)" rx="2" ry="2" />
<text  x="1116.57" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="869.9" y="405" width="0.2" height="15.0" fill="rgb(232,48,1)" rx="2" ry="2" />
<text  x="872.94" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="453.2" y="309" width="0.1" height="15.0" fill="rgb(240,121,11)" rx="2" ry="2" />
<text  x="456.16" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="642.6" y="485" width="0.1" height="15.0" fill="rgb(212,68,48)" rx="2" ry="2" />
<text  x="645.56" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="1049.6" y="245" width="1.7" height="15.0" fill="rgb(246,130,47)" rx="2" ry="2" />
<text  x="1052.58" y="255.5" ></text>
</g>
<g >
<title>database::find_column_family (79 samples, 0.17%)</title><rect x="772.3" y="373" width="1.9" height="15.0" fill="rgb(208,45,53)" rx="2" ry="2" />
<text  x="775.27" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (38 samples, 0.08%)</title><rect x="671.5" y="437" width="1.0" height="15.0" fill="rgb(252,4,10)" rx="2" ry="2" />
<text  x="674.51" y="447.5" ></text>
</g>
<g >
<title>table::as_mutation_source (110 samples, 0.23%)</title><rect x="626.3" y="437" width="2.8" height="15.0" fill="rgb(217,5,46)" rx="2" ry="2" />
<text  x="629.31" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="288.0" y="277" width="0.6" height="15.0" fill="rgb(213,57,38)" rx="2" ry="2" />
<text  x="291.00" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (11 samples, 0.02%)</title><rect x="266.3" y="341" width="0.3" height="15.0" fill="rgb(243,137,44)" rx="2" ry="2" />
<text  x="269.31" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="448.6" y="261" width="0.2" height="15.0" fill="rgb(222,213,41)" rx="2" ry="2" />
<text  x="451.57" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="911.2" y="293" width="0.2" height="15.0" fill="rgb(217,91,54)" rx="2" ry="2" />
<text  x="914.22" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (29 samples, 0.06%)</title><rect x="215.4" y="149" width="0.8" height="15.0" fill="rgb(207,182,30)" rx="2" ry="2" />
<text  x="218.44" y="159.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (65 samples, 0.14%)</title><rect x="16.1" y="373" width="1.6" height="15.0" fill="rgb(250,66,18)" rx="2" ry="2" />
<text  x="19.12" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (14 samples, 0.03%)</title><rect x="11.7" y="581" width="0.4" height="15.0" fill="rgb(207,60,48)" rx="2" ry="2" />
<text  x="14.75" y="591.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (122 samples, 0.26%)</title><rect x="1172.1" y="453" width="3.0" height="15.0" fill="rgb(234,12,31)" rx="2" ry="2" />
<text  x="1175.08" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (18 samples, 0.04%)</title><rect x="454.3" y="277" width="0.5" height="15.0" fill="rgb(254,143,43)" rx="2" ry="2" />
<text  x="457.31" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="586.3" y="373" width="0.2" height="15.0" fill="rgb(242,15,13)" rx="2" ry="2" />
<text  x="589.30" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%)</title><rect x="1109.8" y="357" width="0.3" height="15.0" fill="rgb(220,131,16)" rx="2" ry="2" />
<text  x="1112.80" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (344 samples, 0.73%)</title><rect x="1076.5" y="341" width="8.6" height="15.0" fill="rgb(247,63,46)" rx="2" ry="2" />
<text  x="1079.53" y="351.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (5 samples, 0.01%)</title><rect x="766.9" y="389" width="0.2" height="15.0" fill="rgb(230,189,50)" rx="2" ry="2" />
<text  x="769.93" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (43 samples, 0.09%)</title><rect x="97.9" y="421" width="1.0" height="15.0" fill="rgb(239,24,9)" rx="2" ry="2" />
<text  x="100.86" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (446 samples, 0.94%)</title><rect x="506.9" y="261" width="11.2" height="15.0" fill="rgb(251,99,37)" rx="2" ry="2" />
<text  x="509.92" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (8 samples, 0.02%)</title><rect x="21.8" y="341" width="0.2" height="15.0" fill="rgb(223,36,39)" rx="2" ry="2" />
<text  x="24.81" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (20 samples, 0.04%)</title><rect x="77.3" y="453" width="0.5" height="15.0" fill="rgb(217,62,31)" rx="2" ry="2" />
<text  x="80.32" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="42.7" y="437" width="0.2" height="15.0" fill="rgb(219,5,34)" rx="2" ry="2" />
<text  x="45.70" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="581.6" y="341" width="0.2" height="15.0" fill="rgb(220,199,14)" rx="2" ry="2" />
<text  x="584.58" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="891.1" y="469" width="0.2" height="15.0" fill="rgb(207,78,44)" rx="2" ry="2" />
<text  x="894.13" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="849.9" y="293" width="0.4" height="15.0" fill="rgb(251,66,17)" rx="2" ry="2" />
<text  x="852.95" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (93 samples, 0.20%)</title><rect x="366.9" y="197" width="2.3" height="15.0" fill="rgb(209,210,1)" rx="2" ry="2" />
<text  x="369.88" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="692.0" y="469" width="0.1" height="15.0" fill="rgb(252,53,25)" rx="2" ry="2" />
<text  x="694.98" y="479.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (68 samples, 0.14%)</title><rect x="808.9" y="181" width="1.7" height="15.0" fill="rgb(240,140,7)" rx="2" ry="2" />
<text  x="811.89" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.03%)</title><rect x="887.2" y="405" width="0.3" height="15.0" fill="rgb(236,6,14)" rx="2" ry="2" />
<text  x="890.16" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (44 samples, 0.09%)</title><rect x="161.9" y="229" width="1.1" height="15.0" fill="rgb(238,128,18)" rx="2" ry="2" />
<text  x="164.91" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (46 samples, 0.10%)</title><rect x="16.4" y="309" width="1.1" height="15.0" fill="rgb(215,108,17)" rx="2" ry="2" />
<text  x="19.36" y="319.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (44 samples, 0.09%)</title><rect x="838.0" y="309" width="1.1" height="15.0" fill="rgb(249,33,19)" rx="2" ry="2" />
<text  x="840.99" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (881 samples, 1.86%)</title><rect x="499.1" y="309" width="22.0" height="15.0" fill="rgb(236,52,41)" rx="2" ry="2" />
<text  x="502.09" y="319.5" >s..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (13 samples, 0.03%)</title><rect x="758.4" y="293" width="0.4" height="15.0" fill="rgb(240,18,32)" rx="2" ry="2" />
<text  x="761.44" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (23 samples, 0.05%)</title><rect x="1148.1" y="485" width="0.6" height="15.0" fill="rgb(211,15,50)" rx="2" ry="2" />
<text  x="1151.12" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (6 samples, 0.01%)</title><rect x="1146.2" y="501" width="0.1" height="15.0" fill="rgb(220,105,17)" rx="2" ry="2" />
<text  x="1149.17" y="511.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (463 samples, 0.98%)</title><rect x="479.1" y="293" width="11.6" height="15.0" fill="rgb(205,25,2)" rx="2" ry="2" />
<text  x="482.12" y="303.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,255 samples, 97.84%)</title><rect x="23.4" y="565" width="1154.5" height="15.0" fill="rgb(235,135,45)" rx="2" ry="2" />
<text  x="26.40" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::memory::allocate (154 samples, 0.33%)</title><rect x="1028.7" y="229" width="3.9" height="15.0" fill="rgb(236,104,10)" rx="2" ry="2" />
<text  x="1031.73" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (20 samples, 0.04%)</title><rect x="692.3" y="437" width="0.5" height="15.0" fill="rgb(244,169,4)" rx="2" ry="2" />
<text  x="695.25" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (21 samples, 0.04%)</title><rect x="989.9" y="357" width="0.6" height="15.0" fill="rgb(219,23,14)" rx="2" ry="2" />
<text  x="992.95" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (5 samples, 0.01%)</title><rect x="75.7" y="421" width="0.1" height="15.0" fill="rgb(245,61,48)" rx="2" ry="2" />
<text  x="78.69" y="431.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="48.4" y="469" width="0.1" height="15.0" fill="rgb(220,22,26)" rx="2" ry="2" />
<text  x="51.36" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (67 samples, 0.14%)</title><rect x="418.5" y="277" width="1.7" height="15.0" fill="rgb(210,30,50)" rx="2" ry="2" />
<text  x="421.52" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (5 samples, 0.01%)</title><rect x="398.4" y="245" width="0.1" height="15.0" fill="rgb(224,107,8)" rx="2" ry="2" />
<text  x="401.37" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="998.7" y="293" width="0.7" height="15.0" fill="rgb(244,64,31)" rx="2" ry="2" />
<text  x="1001.68" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="580.3" y="341" width="0.3" height="15.0" fill="rgb(253,137,5)" rx="2" ry="2" />
<text  x="583.33" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1111.7" y="373" width="0.1" height="15.0" fill="rgb(230,55,35)" rx="2" ry="2" />
<text  x="1114.68" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (16 samples, 0.03%)</title><rect x="1133.7" y="389" width="0.4" height="15.0" fill="rgb(213,98,22)" rx="2" ry="2" />
<text  x="1136.69" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (6 samples, 0.01%)</title><rect x="1105.9" y="357" width="0.1" height="15.0" fill="rgb(211,78,1)" rx="2" ry="2" />
<text  x="1108.86" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (23 samples, 0.05%)</title><rect x="722.3" y="501" width="0.6" height="15.0" fill="rgb(215,182,32)" rx="2" ry="2" />
<text  x="725.28" y="511.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (48 samples, 0.10%)</title><rect x="10.2" y="581" width="1.2" height="15.0" fill="rgb(229,64,35)" rx="2" ry="2" />
<text  x="13.25" y="591.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,280 samples, 13.28%)</title><rect x="727.0" y="485" width="156.7" height="15.0" fill="rgb(207,45,20)" rx="2" ry="2" />
<text  x="729.97" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="413.7" y="245" width="0.2" height="15.0" fill="rgb(221,72,34)" rx="2" ry="2" />
<text  x="416.68" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (22 samples, 0.05%)</title><rect x="627.5" y="389" width="0.5" height="15.0" fill="rgb(208,54,20)" rx="2" ry="2" />
<text  x="630.48" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (8 samples, 0.02%)</title><rect x="311.6" y="165" width="0.2" height="15.0" fill="rgb(208,109,13)" rx="2" ry="2" />
<text  x="314.61" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="136.9" y="213" width="0.3" height="15.0" fill="rgb(226,29,21)" rx="2" ry="2" />
<text  x="139.92" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="849.8" y="293" width="0.1" height="15.0" fill="rgb(211,138,28)" rx="2" ry="2" />
<text  x="852.77" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="540.1" y="277" width="0.2" height="15.0" fill="rgb(214,179,37)" rx="2" ry="2" />
<text  x="543.12" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="279.4" y="357" width="0.2" height="15.0" fill="rgb(237,19,46)" rx="2" ry="2" />
<text  x="282.37" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="864.6" y="341" width="0.2" height="15.0" fill="rgb(213,20,50)" rx="2" ry="2" />
<text  x="867.65" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (8 samples, 0.02%)</title><rect x="1053.9" y="277" width="0.2" height="15.0" fill="rgb(240,72,53)" rx="2" ry="2" />
<text  x="1056.89" y="287.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (13 samples, 0.03%)</title><rect x="1117.6" y="357" width="0.3" height="15.0" fill="rgb(243,224,34)" rx="2" ry="2" />
<text  x="1120.57" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="278.8" y="357" width="0.3" height="15.0" fill="rgb(223,4,34)" rx="2" ry="2" />
<text  x="281.82" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (6 samples, 0.01%)</title><rect x="312.7" y="181" width="0.1" height="15.0" fill="rgb(248,225,5)" rx="2" ry="2" />
<text  x="315.69" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%)</title><rect x="994.0" y="277" width="1.5" height="15.0" fill="rgb(234,129,48)" rx="2" ry="2" />
<text  x="997.04" y="287.5" ></text>
</g>
<g >
<title>query_state::query_state (298 samples, 0.63%)</title><rect x="598.8" y="437" width="7.5" height="15.0" fill="rgb(210,175,35)" rx="2" ry="2" />
<text  x="601.83" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.07%)</title><rect x="666.4" y="485" width="0.7" height="15.0" fill="rgb(240,224,48)" rx="2" ry="2" />
<text  x="669.37" y="495.5" ></text>
</g>
<g >
<title>database::find_keyspace (187 samples, 0.40%)</title><rect x="1069.5" y="341" width="4.7" height="15.0" fill="rgb(247,132,42)" rx="2" ry="2" />
<text  x="1072.49" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (10 samples, 0.02%)</title><rect x="210.1" y="133" width="0.3" height="15.0" fill="rgb(231,56,32)" rx="2" ry="2" />
<text  x="213.10" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (5 samples, 0.01%)</title><rect x="1117.3" y="357" width="0.1" height="15.0" fill="rgb(236,222,52)" rx="2" ry="2" />
<text  x="1120.27" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (31 samples, 0.07%)</title><rect x="1111.1" y="389" width="0.8" height="15.0" fill="rgb(235,186,4)" rx="2" ry="2" />
<text  x="1114.08" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (24 samples, 0.05%)</title><rect x="642.8" y="485" width="0.6" height="15.0" fill="rgb(231,200,41)" rx="2" ry="2" />
<text  x="645.76" y="495.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (12 samples, 0.03%)</title><rect x="1142.1" y="245" width="0.3" height="15.0" fill="rgb(234,218,23)" rx="2" ry="2" />
<text  x="1145.05" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (119 samples, 0.25%)</title><rect x="236.6" y="213" width="2.9" height="15.0" fill="rgb(228,165,45)" rx="2" ry="2" />
<text  x="239.56" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (62 samples, 0.13%)</title><rect x="240.0" y="213" width="1.6" height="15.0" fill="rgb(223,75,52)" rx="2" ry="2" />
<text  x="243.00" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.01%)</title><rect x="696.0" y="453" width="0.1" height="15.0" fill="rgb(225,11,51)" rx="2" ry="2" />
<text  x="698.97" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,435 samples, 5.15%)</title><rect x="1003.2" y="341" width="60.8" height="15.0" fill="rgb(219,68,19)" rx="2" ry="2" />
<text  x="1006.23" y="351.5" >servic..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (90 samples, 0.19%)</title><rect x="192.8" y="117" width="2.3" height="15.0" fill="rgb(232,191,53)" rx="2" ry="2" />
<text  x="195.83" y="127.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (29 samples, 0.06%)</title><rect x="1035.5" y="197" width="0.7" height="15.0" fill="rgb(238,99,31)" rx="2" ry="2" />
<text  x="1038.52" y="207.5" ></text>
</g>
<g >
<title>__tls_init (32 samples, 0.07%)</title><rect x="492.5" y="309" width="0.8" height="15.0" fill="rgb(205,39,18)" rx="2" ry="2" />
<text  x="495.50" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="1141.2" y="437" width="0.2" height="15.0" fill="rgb(230,227,50)" rx="2" ry="2" />
<text  x="1144.18" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%)</title><rect x="1040.8" y="117" width="0.3" height="15.0" fill="rgb(218,19,5)" rx="2" ry="2" />
<text  x="1043.79" y="127.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="634.4" y="485" width="0.3" height="15.0" fill="rgb(248,143,22)" rx="2" ry="2" />
<text  x="637.39" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (14 samples, 0.03%)</title><rect x="827.6" y="213" width="0.4" height="15.0" fill="rgb(211,19,13)" rx="2" ry="2" />
<text  x="830.61" y="223.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.09%)</title><rect x="679.9" y="453" width="1.0" height="15.0" fill="rgb(215,28,41)" rx="2" ry="2" />
<text  x="682.87" y="463.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="662.9" y="485" width="0.9" height="15.0" fill="rgb(212,138,49)" rx="2" ry="2" />
<text  x="665.87" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::stats (60 samples, 0.13%)</title><rect x="493.3" y="309" width="1.5" height="15.0" fill="rgb(245,68,42)" rx="2" ry="2" />
<text  x="496.32" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="1108.4" y="357" width="0.4" height="15.0" fill="rgb(236,221,7)" rx="2" ry="2" />
<text  x="1111.38" y="367.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(216,108,37)" rx="2" ry="2" />
<text  x="1191.85" y="639.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (17 samples, 0.04%)</title><rect x="488.8" y="181" width="0.4" height="15.0" fill="rgb(208,170,36)" rx="2" ry="2" />
<text  x="491.75" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="1154.8" y="421" width="0.5" height="15.0" fill="rgb(217,204,46)" rx="2" ry="2" />
<text  x="1157.78" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (21 samples, 0.04%)</title><rect x="448.8" y="277" width="0.5" height="15.0" fill="rgb(251,219,54)" rx="2" ry="2" />
<text  x="451.77" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (21 samples, 0.04%)</title><rect x="209.0" y="85" width="0.5" height="15.0" fill="rgb(222,18,20)" rx="2" ry="2" />
<text  x="211.98" y="95.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (22 samples, 0.05%)</title><rect x="538.5" y="245" width="0.5" height="15.0" fill="rgb(231,217,33)" rx="2" ry="2" />
<text  x="541.50" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="263.1" y="325" width="0.1" height="15.0" fill="rgb(231,135,46)" rx="2" ry="2" />
<text  x="266.09" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (21 samples, 0.04%)</title><rect x="1142.8" y="229" width="0.6" height="15.0" fill="rgb(238,151,0)" rx="2" ry="2" />
<text  x="1145.83" y="239.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="1129.7" y="405" width="1.7" height="15.0" fill="rgb(220,113,4)" rx="2" ry="2" />
<text  x="1132.67" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="346.9" y="165" width="0.3" height="15.0" fill="rgb(241,224,8)" rx="2" ry="2" />
<text  x="349.88" y="175.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (13 samples, 0.03%)</title><rect x="743.1" y="293" width="0.4" height="15.0" fill="rgb(235,109,20)" rx="2" ry="2" />
<text  x="746.14" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (5 samples, 0.01%)</title><rect x="887.3" y="357" width="0.1" height="15.0" fill="rgb(246,109,11)" rx="2" ry="2" />
<text  x="890.31" y="367.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (14 samples, 0.03%)</title><rect x="73.3" y="405" width="0.3" height="15.0" fill="rgb(227,69,1)" rx="2" ry="2" />
<text  x="76.27" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (98 samples, 0.21%)</title><rect x="741.0" y="325" width="2.5" height="15.0" fill="rgb(254,228,30)" rx="2" ry="2" />
<text  x="744.02" y="335.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (7 samples, 0.01%)</title><rect x="907.4" y="309" width="0.1" height="15.0" fill="rgb(206,18,7)" rx="2" ry="2" />
<text  x="910.36" y="319.5" ></text>
</g>
<g >
<title>operator delete (68 samples, 0.14%)</title><rect x="94.5" y="437" width="1.7" height="15.0" fill="rgb(213,39,51)" rx="2" ry="2" />
<text  x="97.54" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,487 samples, 7.38%)</title><rect x="144.9" y="261" width="87.0" height="15.0" fill="rgb(221,13,34)" rx="2" ry="2" />
<text  x="147.88" y="271.5" >partition_..</text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (865 samples, 1.83%)</title><rect x="920.9" y="405" width="21.6" height="15.0" fill="rgb(251,30,9)" rx="2" ry="2" />
<text  x="923.93" y="415.5" >c..</text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (33 samples, 0.07%)</title><rect x="633.0" y="485" width="0.8" height="15.0" fill="rgb(244,207,38)" rx="2" ry="2" />
<text  x="635.97" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="253.6" y="277" width="0.2" height="15.0" fill="rgb(226,96,25)" rx="2" ry="2" />
<text  x="256.63" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (52 samples, 0.11%)</title><rect x="548.9" y="357" width="1.3" height="15.0" fill="rgb(216,32,33)" rx="2" ry="2" />
<text  x="551.88" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (8 samples, 0.02%)</title><rect x="534.6" y="309" width="0.2" height="15.0" fill="rgb(244,163,45)" rx="2" ry="2" />
<text  x="537.61" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (117 samples, 0.25%)</title><rect x="619.5" y="421" width="2.9" height="15.0" fill="rgb(227,57,52)" rx="2" ry="2" />
<text  x="622.49" y="431.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (15 samples, 0.03%)</title><rect x="886.7" y="421" width="0.3" height="15.0" fill="rgb(218,184,15)" rx="2" ry="2" />
<text  x="889.66" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="834.1" y="293" width="0.2" height="15.0" fill="rgb(222,11,48)" rx="2" ry="2" />
<text  x="837.07" y="303.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (126 samples, 0.27%)</title><rect x="782.5" y="389" width="3.1" height="15.0" fill="rgb(234,211,5)" rx="2" ry="2" />
<text  x="785.46" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::view (8 samples, 0.02%)</title><rect x="598.1" y="405" width="0.2" height="15.0" fill="rgb(242,93,42)" rx="2" ry="2" />
<text  x="601.08" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (13 samples, 0.03%)</title><rect x="311.3" y="165" width="0.3" height="15.0" fill="rgb(223,95,14)" rx="2" ry="2" />
<text  x="314.29" y="175.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="46.0" y="485" width="0.4" height="15.0" fill="rgb(213,174,18)" rx="2" ry="2" />
<text  x="48.97" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume (9 samples, 0.02%)</title><rect x="211.4" y="133" width="0.3" height="15.0" fill="rgb(247,82,10)" rx="2" ry="2" />
<text  x="214.43" y="143.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (13 samples, 0.03%)</title><rect x="20.2" y="357" width="0.4" height="15.0" fill="rgb(227,171,10)" rx="2" ry="2" />
<text  x="23.23" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (8 samples, 0.02%)</title><rect x="655.6" y="453" width="0.2" height="15.0" fill="rgb(208,183,15)" rx="2" ry="2" />
<text  x="658.61" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (20 samples, 0.04%)</title><rect x="1064.1" y="357" width="0.5" height="15.0" fill="rgb(240,89,5)" rx="2" ry="2" />
<text  x="1067.05" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,278 samples, 4.82%)</title><rect x="163.5" y="229" width="56.9" height="15.0" fill="rgb(212,117,15)" rx="2" ry="2" />
<text  x="166.53" y="239.5" >partit..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1141.8" y="421" width="0.8" height="15.0" fill="rgb(248,160,20)" rx="2" ry="2" />
<text  x="1144.78" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,387 samples, 11.39%)</title><rect x="286.6" y="373" width="134.4" height="15.0" fill="rgb(207,174,17)" rx="2" ry="2" />
<text  x="289.55" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (10 samples, 0.02%)</title><rect x="1177.4" y="469" width="0.3" height="15.0" fill="rgb(216,41,33)" rx="2" ry="2" />
<text  x="1180.45" y="479.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.01%)</title><rect x="657.6" y="389" width="0.1" height="15.0" fill="rgb(237,14,5)" rx="2" ry="2" />
<text  x="660.56" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="246.9" y="213" width="0.1" height="15.0" fill="rgb(226,200,48)" rx="2" ry="2" />
<text  x="249.87" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="995.5" y="293" width="0.4" height="15.0" fill="rgb(216,162,32)" rx="2" ry="2" />
<text  x="998.54" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (47 samples, 0.10%)</title><rect x="953.7" y="373" width="1.2" height="15.0" fill="rgb(247,99,6)" rx="2" ry="2" />
<text  x="956.71" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="691.0" y="437" width="0.1" height="15.0" fill="rgb(250,103,27)" rx="2" ry="2" />
<text  x="693.95" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%)</title><rect x="143.2" y="261" width="0.1" height="15.0" fill="rgb(247,216,22)" rx="2" ry="2" />
<text  x="146.16" y="271.5" ></text>
</g>
<g >
<title>query::digester::digester (42 samples, 0.09%)</title><rect x="601.0" y="405" width="1.1" height="15.0" fill="rgb(223,92,40)" rx="2" ry="2" />
<text  x="604.05" y="415.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="707.6" y="485" width="0.7" height="15.0" fill="rgb(218,62,8)" rx="2" ry="2" />
<text  x="710.55" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (151 samples, 0.32%)</title><rect x="651.6" y="453" width="3.8" height="15.0" fill="rgb(221,167,12)" rx="2" ry="2" />
<text  x="654.62" y="463.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (18 samples, 0.04%)</title><rect x="307.5" y="165" width="0.5" height="15.0" fill="rgb(217,15,16)" rx="2" ry="2" />
<text  x="310.52" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (784 samples, 1.66%)</title><rect x="371.1" y="197" width="19.5" height="15.0" fill="rgb(226,158,37)" rx="2" ry="2" />
<text  x="374.07" y="207.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (9 samples, 0.02%)</title><rect x="239.8" y="213" width="0.2" height="15.0" fill="rgb(215,183,11)" rx="2" ry="2" />
<text  x="242.78" y="223.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (9 samples, 0.02%)</title><rect x="767.8" y="357" width="0.2" height="15.0" fill="rgb(236,71,24)" rx="2" ry="2" />
<text  x="770.80" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.01%)</title><rect x="964.2" y="309" width="0.1" height="15.0" fill="rgb(240,48,0)" rx="2" ry="2" />
<text  x="967.19" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (34 samples, 0.07%)</title><rect x="767.5" y="373" width="0.8" height="15.0" fill="rgb(247,227,0)" rx="2" ry="2" />
<text  x="770.46" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (587 samples, 1.24%)</title><rect x="648.2" y="485" width="14.7" height="15.0" fill="rgb(244,166,40)" rx="2" ry="2" />
<text  x="651.22" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (201 samples, 0.43%)</title><rect x="97.2" y="437" width="5.0" height="15.0" fill="rgb(220,140,37)" rx="2" ry="2" />
<text  x="100.21" y="447.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="422.4" y="341" width="0.7" height="15.0" fill="rgb(214,44,35)" rx="2" ry="2" />
<text  x="425.36" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (6 samples, 0.01%)</title><rect x="122.5" y="309" width="0.1" height="15.0" fill="rgb(221,60,49)" rx="2" ry="2" />
<text  x="125.49" y="319.5" ></text>
</g>
<g >
<title>[unknown] (533 samples, 1.13%)</title><rect x="10.1" y="629" width="13.3" height="15.0" fill="rgb(208,40,37)" rx="2" ry="2" />
<text  x="13.10" y="639.5" ></text>
</g>
<g >
<title>tombstone::apply (16 samples, 0.03%)</title><rect x="391.0" y="197" width="0.4" height="15.0" fill="rgb(252,136,7)" rx="2" ry="2" />
<text  x="394.01" y="207.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (56 samples, 0.12%)</title><rect x="484.0" y="213" width="1.4" height="15.0" fill="rgb(219,144,45)" rx="2" ry="2" />
<text  x="487.04" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="658.0" y="469" width="0.1" height="15.0" fill="rgb(210,229,25)" rx="2" ry="2" />
<text  x="660.96" y="479.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="1147.6" y="485" width="0.4" height="15.0" fill="rgb(217,23,51)" rx="2" ry="2" />
<text  x="1150.64" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (18 samples, 0.04%)</title><rect x="369.8" y="213" width="0.4" height="15.0" fill="rgb(245,217,47)" rx="2" ry="2" />
<text  x="372.80" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (41 samples, 0.09%)</title><rect x="824.8" y="245" width="1.0" height="15.0" fill="rgb(234,61,49)" rx="2" ry="2" />
<text  x="827.76" y="255.5" ></text>
</g>
<g >
<title>operator new (96 samples, 0.20%)</title><rect x="154.6" y="213" width="2.4" height="15.0" fill="rgb(208,43,1)" rx="2" ry="2" />
<text  x="157.57" y="223.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="927.9" y="373" width="0.2" height="15.0" fill="rgb(230,143,43)" rx="2" ry="2" />
<text  x="930.92" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1123.8" y="373" width="0.2" height="15.0" fill="rgb(226,219,26)" rx="2" ry="2" />
<text  x="1126.83" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (14 samples, 0.03%)</title><rect x="289.7" y="293" width="0.4" height="15.0" fill="rgb(247,23,49)" rx="2" ry="2" />
<text  x="292.72" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,993 samples, 4.22%)</title><rect x="1012.4" y="293" width="49.7" height="15.0" fill="rgb(247,157,26)" rx="2" ry="2" />
<text  x="1015.36" y="303.5" >servi..</text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="448.1" y="277" width="0.7" height="15.0" fill="rgb(208,128,49)" rx="2" ry="2" />
<text  x="451.09" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1041.5" y="149" width="0.2" height="15.0" fill="rgb(234,149,30)" rx="2" ry="2" />
<text  x="1044.51" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="32.0" y="469" width="0.2" height="15.0" fill="rgb(223,145,33)" rx="2" ry="2" />
<text  x="34.99" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (114 samples, 0.24%)</title><rect x="454.8" y="277" width="2.8" height="15.0" fill="rgb(250,163,22)" rx="2" ry="2" />
<text  x="457.76" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%)</title><rect x="733.9" y="453" width="0.1" height="15.0" fill="rgb(233,17,2)" rx="2" ry="2" />
<text  x="736.88" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="422.4" y="325" width="0.7" height="15.0" fill="rgb(239,23,8)" rx="2" ry="2" />
<text  x="425.36" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="242.3" y="229" width="0.2" height="15.0" fill="rgb(212,200,9)" rx="2" ry="2" />
<text  x="245.30" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (73 samples, 0.15%)</title><rect x="630.5" y="485" width="1.8" height="15.0" fill="rgb(223,225,52)" rx="2" ry="2" />
<text  x="633.53" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (122 samples, 0.26%)</title><rect x="360.9" y="165" width="3.0" height="15.0" fill="rgb(208,184,8)" rx="2" ry="2" />
<text  x="363.86" y="175.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (61 samples, 0.13%)</title><rect x="882.2" y="453" width="1.5" height="15.0" fill="rgb(243,212,15)" rx="2" ry="2" />
<text  x="885.20" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%)</title><rect x="804.4" y="229" width="0.8" height="15.0" fill="rgb(239,152,31)" rx="2" ry="2" />
<text  x="807.40" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (43 samples, 0.09%)</title><rect x="912.1" y="277" width="1.1" height="15.0" fill="rgb(247,179,13)" rx="2" ry="2" />
<text  x="915.15" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="615.2" y="437" width="0.4" height="15.0" fill="rgb(211,222,28)" rx="2" ry="2" />
<text  x="618.15" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="879.0" y="453" width="0.3" height="15.0" fill="rgb(222,3,42)" rx="2" ry="2" />
<text  x="881.95" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (84 samples, 0.18%)</title><rect x="935.1" y="389" width="2.1" height="15.0" fill="rgb(238,83,32)" rx="2" ry="2" />
<text  x="938.09" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (129 samples, 0.27%)</title><rect x="930.6" y="341" width="3.2" height="15.0" fill="rgb(220,83,9)" rx="2" ry="2" />
<text  x="933.57" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (120 samples, 0.25%)</title><rect x="37.7" y="437" width="3.0" height="15.0" fill="rgb(250,77,43)" rx="2" ry="2" />
<text  x="40.73" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1041.3" y="165" width="0.1" height="15.0" fill="rgb(248,215,38)" rx="2" ry="2" />
<text  x="1044.26" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (5 samples, 0.01%)</title><rect x="465.2" y="325" width="0.2" height="15.0" fill="rgb(249,229,42)" rx="2" ry="2" />
<text  x="468.24" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (15 samples, 0.03%)</title><rect x="713.4" y="437" width="0.4" height="15.0" fill="rgb(210,133,54)" rx="2" ry="2" />
<text  x="716.42" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,714 samples, 12.09%)</title><rect x="117.4" y="341" width="142.6" height="15.0" fill="rgb(209,161,28)" rx="2" ry="2" />
<text  x="120.38" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%)</title><rect x="1051.9" y="261" width="0.3" height="15.0" fill="rgb(228,222,45)" rx="2" ry="2" />
<text  x="1054.92" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (30 samples, 0.06%)</title><rect x="216.5" y="133" width="0.8" height="15.0" fill="rgb(225,110,16)" rx="2" ry="2" />
<text  x="219.54" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1125.8" y="405" width="0.1" height="15.0" fill="rgb(215,49,21)" rx="2" ry="2" />
<text  x="1128.78" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN4cql34expr10expressionEEER18overloaded_functorIJZNS5_12prepare_termERKS6_R8databaseRKN7seastar13basic_sstringIcjLj15ELb1EEENSD_13lw_shared_ptrINS4_20column_specificationEEEE3$_0ZNS5_12prepare_termESA_SC_SH_SK_E3$_1ZNS5_12prepare_termESA_SC_SH_SK_E3$_2ZNS5_12prepare_termESA_SC_SH_SK_E3$_3ZNS5_12prepare_termESA_SC_SH_SK_E3$_4ZNS5_12prepare_termESA_SC_SH_SK_E3$_5ZNS5_12prepare_termESA_SC_SH_SK_E3$_6ZNS5_12prepare_termESA_SC_SH_SK_E3$_7ZNS5_12prepare_termESA_SC_SH_SK_E3$_8ZNS5_12prepare_termESA_SC_SH_SK_E3$_9ZNS5_12prepare_termESA_SC_SH_SK_E4$_10ZNS5_12prepare_termESA_SC_SH_SK_E4$_11ZNS5_12prepare_termESA_SC_SH_SK_E4$_12ZNS5_12prepare_termESA_SC_SH_SK_E4$_13ZNS5_12prepare_termESA_SC_SH_SK_E4$_14ZNS5_12prepare_termESA_SC_SH_SK_E4$_15EERSt7variantIJNS5_11conjunctionENS5_15binary_operatorENS5_12column_valueENS5_5tokenENS5_21unresolved_identifierENS5_25column_mutation_attributeENS5_13function_callENS5_4castENS5_15field_selectionENS5_4nullENS5_13bind_variableENS5_16untyped_constantENS5_8constantENS5_17tuple_constructorENS5_22collection_constructorENS5_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES12_S1L_ (6 samples, 0.01%)</title><rect x="21.3" y="389" width="0.2" height="15.0" fill="rgb(232,220,54)" rx="2" ry="2" />
<text  x="24.31" y="399.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="330.2" y="181" width="0.2" height="15.0" fill="rgb(244,46,20)" rx="2" ry="2" />
<text  x="333.23" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="491.6" y="325" width="0.2" height="15.0" fill="rgb(236,193,36)" rx="2" ry="2" />
<text  x="494.65" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (85 samples, 0.18%)</title><rect x="63.0" y="453" width="2.1" height="15.0" fill="rgb(226,69,13)" rx="2" ry="2" />
<text  x="65.99" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="373" width="0.8" height="15.0" fill="rgb(248,223,50)" rx="2" ry="2" />
<text  x="1145.58" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="214.0" y="133" width="0.1" height="15.0" fill="rgb(225,229,29)" rx="2" ry="2" />
<text  x="217.00" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (269 samples, 0.57%)</title><rect x="567.0" y="309" width="6.7" height="15.0" fill="rgb(234,51,37)" rx="2" ry="2" />
<text  x="570.00" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (17 samples, 0.04%)</title><rect x="1000.0" y="293" width="0.4" height="15.0" fill="rgb(205,95,29)" rx="2" ry="2" />
<text  x="1002.98" y="303.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (38 samples, 0.08%)</title><rect x="1102.1" y="293" width="0.9" height="15.0" fill="rgb(234,174,2)" rx="2" ry="2" />
<text  x="1105.07" y="303.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (5 samples, 0.01%)</title><rect x="65.1" y="453" width="0.1" height="15.0" fill="rgb(236,80,27)" rx="2" ry="2" />
<text  x="68.11" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (19 samples, 0.04%)</title><rect x="414.2" y="229" width="0.5" height="15.0" fill="rgb(237,42,23)" rx="2" ry="2" />
<text  x="417.22" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="914.4" y="309" width="0.1" height="15.0" fill="rgb(232,222,9)" rx="2" ry="2" />
<text  x="917.42" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (7 samples, 0.01%)</title><rect x="711.9" y="453" width="0.2" height="15.0" fill="rgb(231,180,20)" rx="2" ry="2" />
<text  x="714.94" y="463.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="684.0" y="485" width="0.5" height="15.0" fill="rgb(235,203,34)" rx="2" ry="2" />
<text  x="687.01" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (10 samples, 0.02%)</title><rect x="957.0" y="421" width="0.3" height="15.0" fill="rgb(253,124,22)" rx="2" ry="2" />
<text  x="960.03" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (6 samples, 0.01%)</title><rect x="540.3" y="293" width="0.2" height="15.0" fill="rgb(218,102,21)" rx="2" ry="2" />
<text  x="543.32" y="303.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (140 samples, 0.30%)</title><rect x="869.4" y="421" width="3.5" height="15.0" fill="rgb(235,221,4)" rx="2" ry="2" />
<text  x="872.44" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (12 samples, 0.03%)</title><rect x="254.5" y="277" width="0.3" height="15.0" fill="rgb(233,14,51)" rx="2" ry="2" />
<text  x="257.51" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="417.9" y="277" width="0.2" height="15.0" fill="rgb(210,162,51)" rx="2" ry="2" />
<text  x="420.94" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,372 samples, 5.02%)</title><rect x="1004.5" y="325" width="59.2" height="15.0" fill="rgb(241,207,53)" rx="2" ry="2" />
<text  x="1007.47" y="335.5" >servic..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="416.5" y="277" width="0.1" height="15.0" fill="rgb(223,7,27)" rx="2" ry="2" />
<text  x="419.50" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (18 samples, 0.04%)</title><rect x="561.8" y="309" width="0.5" height="15.0" fill="rgb(240,114,7)" rx="2" ry="2" />
<text  x="564.84" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%)</title><rect x="324.2" y="181" width="0.3" height="15.0" fill="rgb(216,149,26)" rx="2" ry="2" />
<text  x="327.17" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (8 samples, 0.02%)</title><rect x="37.4" y="421" width="0.2" height="15.0" fill="rgb(210,184,37)" rx="2" ry="2" />
<text  x="40.43" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="595.1" y="389" width="0.5" height="15.0" fill="rgb(208,0,28)" rx="2" ry="2" />
<text  x="598.06" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="967.2" y="405" width="0.1" height="15.0" fill="rgb(216,187,11)" rx="2" ry="2" />
<text  x="970.16" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (24 samples, 0.05%)</title><rect x="695.1" y="325" width="0.6" height="15.0" fill="rgb(215,228,27)" rx="2" ry="2" />
<text  x="698.07" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (14 samples, 0.03%)</title><rect x="877.2" y="357" width="0.4" height="15.0" fill="rgb(225,121,33)" rx="2" ry="2" />
<text  x="880.20" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (40 samples, 0.08%)</title><rect x="218.3" y="181" width="1.0" height="15.0" fill="rgb(205,102,28)" rx="2" ry="2" />
<text  x="221.29" y="191.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (42 samples, 0.09%)</title><rect x="818.2" y="117" width="1.1" height="15.0" fill="rgb(228,147,26)" rx="2" ry="2" />
<text  x="821.22" y="127.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="926.9" y="325" width="0.1" height="15.0" fill="rgb(233,84,35)" rx="2" ry="2" />
<text  x="929.87" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (156 samples, 0.33%)</title><rect x="835.2" y="357" width="3.9" height="15.0" fill="rgb(221,58,2)" rx="2" ry="2" />
<text  x="838.22" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (16 samples, 0.03%)</title><rect x="64.5" y="421" width="0.4" height="15.0" fill="rgb(207,39,36)" rx="2" ry="2" />
<text  x="67.51" y="431.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (11 samples, 0.02%)</title><rect x="1053.3" y="261" width="0.2" height="15.0" fill="rgb(243,158,39)" rx="2" ry="2" />
<text  x="1056.27" y="271.5" ></text>
</g>
<g >
<title>database::find_schema (53 samples, 0.11%)</title><rect x="842.4" y="357" width="1.4" height="15.0" fill="rgb(217,7,2)" rx="2" ry="2" />
<text  x="845.43" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (5 samples, 0.01%)</title><rect x="292.1" y="277" width="0.2" height="15.0" fill="rgb(223,36,26)" rx="2" ry="2" />
<text  x="295.15" y="287.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (49 samples, 0.10%)</title><rect x="620.8" y="389" width="1.3" height="15.0" fill="rgb(248,139,33)" rx="2" ry="2" />
<text  x="623.84" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (5 samples, 0.01%)</title><rect x="443.3" y="293" width="0.1" height="15.0" fill="rgb(218,196,5)" rx="2" ry="2" />
<text  x="446.28" y="303.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (344 samples, 0.73%)</title><rect x="378.5" y="165" width="8.6" height="15.0" fill="rgb(253,185,35)" rx="2" ry="2" />
<text  x="381.48" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%)</title><rect x="1040.4" y="133" width="0.3" height="15.0" fill="rgb(232,226,50)" rx="2" ry="2" />
<text  x="1043.44" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%)</title><rect x="1055.4" y="245" width="0.6" height="15.0" fill="rgb(214,114,26)" rx="2" ry="2" />
<text  x="1058.42" y="255.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (42 samples, 0.09%)</title><rect x="406.8" y="197" width="1.1" height="15.0" fill="rgb(237,39,10)" rx="2" ry="2" />
<text  x="409.81" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (108 samples, 0.23%)</title><rect x="99.0" y="421" width="2.7" height="15.0" fill="rgb(231,32,42)" rx="2" ry="2" />
<text  x="101.96" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (35 samples, 0.07%)</title><rect x="74.8" y="373" width="0.9" height="15.0" fill="rgb(251,148,4)" rx="2" ry="2" />
<text  x="77.82" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (23 samples, 0.05%)</title><rect x="1151.3" y="453" width="0.6" height="15.0" fill="rgb(213,130,8)" rx="2" ry="2" />
<text  x="1154.31" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (34 samples, 0.07%)</title><rect x="902.2" y="389" width="0.9" height="15.0" fill="rgb(236,144,43)" rx="2" ry="2" />
<text  x="905.21" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (30 samples, 0.06%)</title><rect x="951.6" y="325" width="0.7" height="15.0" fill="rgb(230,146,3)" rx="2" ry="2" />
<text  x="954.58" y="335.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (7 samples, 0.01%)</title><rect x="985.6" y="341" width="0.2" height="15.0" fill="rgb(212,207,26)" rx="2" ry="2" />
<text  x="988.63" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (60 samples, 0.13%)</title><rect x="306.8" y="181" width="1.5" height="15.0" fill="rgb(254,3,11)" rx="2" ry="2" />
<text  x="309.77" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (7 samples, 0.01%)</title><rect x="410.2" y="261" width="0.2" height="15.0" fill="rgb(245,43,39)" rx="2" ry="2" />
<text  x="413.18" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (89 samples, 0.19%)</title><rect x="1057.6" y="229" width="2.2" height="15.0" fill="rgb(237,89,27)" rx="2" ry="2" />
<text  x="1060.56" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (5 samples, 0.01%)</title><rect x="432.6" y="357" width="0.1" height="15.0" fill="rgb(244,6,31)" rx="2" ry="2" />
<text  x="435.59" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="1126.9" y="421" width="0.2" height="15.0" fill="rgb(234,122,50)" rx="2" ry="2" />
<text  x="1129.93" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (29 samples, 0.06%)</title><rect x="571.7" y="277" width="0.8" height="15.0" fill="rgb(211,142,43)" rx="2" ry="2" />
<text  x="574.75" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (49 samples, 0.10%)</title><rect x="954.9" y="389" width="1.2" height="15.0" fill="rgb(247,40,28)" rx="2" ry="2" />
<text  x="957.90" y="399.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (55 samples, 0.12%)</title><rect x="226.7" y="229" width="1.3" height="15.0" fill="rgb(211,191,22)" rx="2" ry="2" />
<text  x="229.65" y="239.5" ></text>
</g>
<g >
<title>[unknown] (197 samples, 0.42%)</title><rect x="10.2" y="597" width="4.9" height="15.0" fill="rgb(215,25,32)" rx="2" ry="2" />
<text  x="13.22" y="607.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (15 samples, 0.03%)</title><rect x="1117.9" y="373" width="0.4" height="15.0" fill="rgb(226,193,23)" rx="2" ry="2" />
<text  x="1120.89" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="19.4" y="261" width="0.2" height="15.0" fill="rgb(221,28,33)" rx="2" ry="2" />
<text  x="22.41" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (18 samples, 0.04%)</title><rect x="200.6" y="117" width="0.5" height="15.0" fill="rgb(216,145,36)" rx="2" ry="2" />
<text  x="203.64" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (5 samples, 0.01%)</title><rect x="774.6" y="357" width="0.2" height="15.0" fill="rgb(246,186,41)" rx="2" ry="2" />
<text  x="777.64" y="367.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (14 samples, 0.03%)</title><rect x="1125.9" y="421" width="0.4" height="15.0" fill="rgb(251,207,6)" rx="2" ry="2" />
<text  x="1128.93" y="431.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="876.2" y="357" width="1.0" height="15.0" fill="rgb(246,1,23)" rx="2" ry="2" />
<text  x="879.21" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (20 samples, 0.04%)</title><rect x="447.6" y="261" width="0.5" height="15.0" fill="rgb(214,189,41)" rx="2" ry="2" />
<text  x="450.60" y="271.5" ></text>
</g>
<g >
<title>[unknown] (11 samples, 0.02%)</title><rect x="23.0" y="597" width="0.3" height="15.0" fill="rgb(249,212,8)" rx="2" ry="2" />
<text  x="26.03" y="607.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (28 samples, 0.06%)</title><rect x="609.0" y="437" width="0.7" height="15.0" fill="rgb(231,101,35)" rx="2" ry="2" />
<text  x="612.04" y="447.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (178 samples, 0.38%)</title><rect x="739.2" y="389" width="4.4" height="15.0" fill="rgb(252,133,42)" rx="2" ry="2" />
<text  x="742.15" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (133 samples, 0.28%)</title><rect x="1119.4" y="389" width="3.3" height="15.0" fill="rgb(254,127,15)" rx="2" ry="2" />
<text  x="1122.39" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (691 samples, 1.46%)</title><rect x="1085.8" y="325" width="17.2" height="15.0" fill="rgb(245,224,33)" rx="2" ry="2" />
<text  x="1088.77" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (150 samples, 0.32%)</title><rect x="243.3" y="229" width="3.8" height="15.0" fill="rgb(253,90,41)" rx="2" ry="2" />
<text  x="246.32" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (112 samples, 0.24%)</title><rect x="1119.9" y="373" width="2.8" height="15.0" fill="rgb(234,66,40)" rx="2" ry="2" />
<text  x="1122.91" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="200.5" y="117" width="0.1" height="15.0" fill="rgb(254,113,14)" rx="2" ry="2" />
<text  x="203.47" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="973.2" y="357" width="2.0" height="15.0" fill="rgb(238,70,53)" rx="2" ry="2" />
<text  x="976.22" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.02%)</title><rect x="64.5" y="405" width="0.3" height="15.0" fill="rgb(209,89,14)" rx="2" ry="2" />
<text  x="67.54" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (17 samples, 0.04%)</title><rect x="853.1" y="421" width="0.4" height="15.0" fill="rgb(205,130,0)" rx="2" ry="2" />
<text  x="856.07" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="665.2" y="453" width="0.2" height="15.0" fill="rgb(230,227,29)" rx="2" ry="2" />
<text  x="668.17" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="1138.8" y="421" width="0.1" height="15.0" fill="rgb(208,24,11)" rx="2" ry="2" />
<text  x="1141.81" y="431.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (19 samples, 0.04%)</title><rect x="607.8" y="405" width="0.4" height="15.0" fill="rgb(216,114,39)" rx="2" ry="2" />
<text  x="610.76" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="589.1" y="421" width="0.1" height="15.0" fill="rgb(225,170,49)" rx="2" ry="2" />
<text  x="592.09" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="546.0" y="389" width="0.3" height="15.0" fill="rgb(226,207,12)" rx="2" ry="2" />
<text  x="549.04" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (5 samples, 0.01%)</title><rect x="862.4" y="389" width="0.2" height="15.0" fill="rgb(240,27,37)" rx="2" ry="2" />
<text  x="865.43" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="57.3" y="469" width="0.4" height="15.0" fill="rgb(228,5,18)" rx="2" ry="2" />
<text  x="60.30" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="539.5" y="245" width="0.5" height="15.0" fill="rgb(226,215,24)" rx="2" ry="2" />
<text  x="542.55" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="777.5" y="309" width="0.1" height="15.0" fill="rgb(250,112,21)" rx="2" ry="2" />
<text  x="780.46" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1141.8" y="389" width="0.8" height="15.0" fill="rgb(247,98,41)" rx="2" ry="2" />
<text  x="1144.78" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%)</title><rect x="674.3" y="469" width="0.2" height="15.0" fill="rgb(228,202,47)" rx="2" ry="2" />
<text  x="677.26" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="308.1" y="165" width="0.2" height="15.0" fill="rgb(218,54,13)" rx="2" ry="2" />
<text  x="311.12" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%)</title><rect x="264.7" y="341" width="0.4" height="15.0" fill="rgb(237,102,40)" rx="2" ry="2" />
<text  x="267.74" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (12 samples, 0.03%)</title><rect x="717.0" y="421" width="0.3" height="15.0" fill="rgb(238,218,24)" rx="2" ry="2" />
<text  x="720.01" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="724.3" y="501" width="0.2" height="15.0" fill="rgb(241,110,20)" rx="2" ry="2" />
<text  x="727.27" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%)</title><rect x="815.8" y="117" width="0.3" height="15.0" fill="rgb(220,27,4)" rx="2" ry="2" />
<text  x="818.78" y="127.5" ></text>
</g>
<g >
<title>row::row (6 samples, 0.01%)</title><rect x="886.7" y="277" width="0.2" height="15.0" fill="rgb(253,226,26)" rx="2" ry="2" />
<text  x="889.71" y="287.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="670.9" y="437" width="0.3" height="15.0" fill="rgb(210,138,0)" rx="2" ry="2" />
<text  x="673.91" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (50 samples, 0.11%)</title><rect x="626.8" y="405" width="1.2" height="15.0" fill="rgb(245,225,39)" rx="2" ry="2" />
<text  x="629.78" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="765.2" y="405" width="0.1" height="15.0" fill="rgb(206,46,35)" rx="2" ry="2" />
<text  x="768.16" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (128 samples, 0.27%)</title><rect x="444.9" y="277" width="3.2" height="15.0" fill="rgb(219,212,21)" rx="2" ry="2" />
<text  x="447.90" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (6 samples, 0.01%)</title><rect x="19.4" y="277" width="0.2" height="15.0" fill="rgb(206,162,8)" rx="2" ry="2" />
<text  x="22.41" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%)</title><rect x="724.7" y="501" width="0.1" height="15.0" fill="rgb(225,177,44)" rx="2" ry="2" />
<text  x="727.67" y="511.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (16 samples, 0.03%)</title><rect x="560.2" y="341" width="0.4" height="15.0" fill="rgb(247,19,36)" rx="2" ry="2" />
<text  x="563.21" y="351.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (25 samples, 0.05%)</title><rect x="1104.8" y="341" width="0.7" height="15.0" fill="rgb(247,50,27)" rx="2" ry="2" />
<text  x="1107.84" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (42 samples, 0.09%)</title><rect x="742.1" y="293" width="1.0" height="15.0" fill="rgb(235,96,9)" rx="2" ry="2" />
<text  x="745.10" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (70 samples, 0.15%)</title><rect x="124.1" y="293" width="1.7" height="15.0" fill="rgb(242,47,28)" rx="2" ry="2" />
<text  x="127.09" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (11 samples, 0.02%)</title><rect x="652.7" y="373" width="0.3" height="15.0" fill="rgb(208,86,44)" rx="2" ry="2" />
<text  x="655.72" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (6 samples, 0.01%)</title><rect x="64.8" y="405" width="0.1" height="15.0" fill="rgb(222,48,21)" rx="2" ry="2" />
<text  x="67.76" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="604.9" y="373" width="0.1" height="15.0" fill="rgb(236,173,3)" rx="2" ry="2" />
<text  x="607.87" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (31 samples, 0.07%)</title><rect x="695.0" y="453" width="0.7" height="15.0" fill="rgb(226,172,35)" rx="2" ry="2" />
<text  x="697.97" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (50 samples, 0.11%)</title><rect x="778.2" y="325" width="1.3" height="15.0" fill="rgb(239,20,10)" rx="2" ry="2" />
<text  x="781.21" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="858.4" y="437" width="0.1" height="15.0" fill="rgb(230,29,21)" rx="2" ry="2" />
<text  x="861.38" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (12 samples, 0.03%)</title><rect x="215.9" y="117" width="0.3" height="15.0" fill="rgb(225,76,45)" rx="2" ry="2" />
<text  x="218.87" y="127.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="877.9" y="437" width="0.9" height="15.0" fill="rgb(225,89,5)" rx="2" ry="2" />
<text  x="880.85" y="447.5" ></text>
</g>
<g >
<title>utils::array_search_gt (8 samples, 0.02%)</title><rect x="477.3" y="277" width="0.2" height="15.0" fill="rgb(230,49,43)" rx="2" ry="2" />
<text  x="480.30" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="697.5" y="469" width="0.2" height="15.0" fill="rgb(248,169,52)" rx="2" ry="2" />
<text  x="700.52" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="1133.8" y="373" width="0.2" height="15.0" fill="rgb(239,115,7)" rx="2" ry="2" />
<text  x="1136.84" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (201 samples, 0.43%)</title><rect x="187.5" y="69" width="5.1" height="15.0" fill="rgb(213,168,1)" rx="2" ry="2" />
<text  x="190.54" y="79.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (140 samples, 0.30%)</title><rect x="537.2" y="309" width="3.4" height="15.0" fill="rgb(226,26,17)" rx="2" ry="2" />
<text  x="540.15" y="319.5" ></text>
</g>
<g >
<title>row::row (1,391 samples, 2.94%)</title><rect x="169.1" y="149" width="34.7" height="15.0" fill="rgb(244,174,29)" rx="2" ry="2" />
<text  x="172.09" y="159.5" >ro..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="497.9" y="309" width="0.2" height="15.0" fill="rgb(207,188,53)" rx="2" ry="2" />
<text  x="500.94" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="845.9" y="277" width="0.4" height="15.0" fill="rgb(232,199,35)" rx="2" ry="2" />
<text  x="848.90" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (14 samples, 0.03%)</title><rect x="1134.8" y="421" width="0.3" height="15.0" fill="rgb(246,221,46)" rx="2" ry="2" />
<text  x="1137.76" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (14 samples, 0.03%)</title><rect x="317.1" y="197" width="0.4" height="15.0" fill="rgb(249,107,9)" rx="2" ry="2" />
<text  x="320.13" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.03%)</title><rect x="295.1" y="261" width="0.3" height="15.0" fill="rgb(221,121,23)" rx="2" ry="2" />
<text  x="298.07" y="271.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (6 samples, 0.01%)</title><rect x="1039.0" y="149" width="0.1" height="15.0" fill="rgb(249,122,20)" rx="2" ry="2" />
<text  x="1041.99" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (56 samples, 0.12%)</title><rect x="240.2" y="197" width="1.4" height="15.0" fill="rgb(229,86,26)" rx="2" ry="2" />
<text  x="243.15" y="207.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (34 samples, 0.07%)</title><rect x="561.7" y="325" width="0.8" height="15.0" fill="rgb(246,83,45)" rx="2" ry="2" />
<text  x="564.66" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="1156.0" y="421" width="0.8" height="15.0" fill="rgb(225,43,48)" rx="2" ry="2" />
<text  x="1158.95" y="431.5" ></text>
</g>
<g >
<title>query::result::result (42 samples, 0.09%)</title><rect x="597.2" y="421" width="1.1" height="15.0" fill="rgb(244,13,0)" rx="2" ry="2" />
<text  x="600.23" y="431.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%)</title><rect x="239.5" y="213" width="0.3" height="15.0" fill="rgb(211,155,20)" rx="2" ry="2" />
<text  x="242.53" y="223.5" ></text>
</g>
<g >
<title>schema::position (11 samples, 0.02%)</title><rect x="945.8" y="405" width="0.2" height="15.0" fill="rgb(226,15,34)" rx="2" ry="2" />
<text  x="948.77" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="642.1" y="469" width="0.1" height="15.0" fill="rgb(236,133,47)" rx="2" ry="2" />
<text  x="645.06" y="479.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="143.2" y="245" width="0.1" height="15.0" fill="rgb(242,106,29)" rx="2" ry="2" />
<text  x="146.21" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.01%)</title><rect x="1151.9" y="485" width="0.1" height="15.0" fill="rgb(213,42,34)" rx="2" ry="2" />
<text  x="1154.89" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="768.8" y="373" width="0.1" height="15.0" fill="rgb(209,137,44)" rx="2" ry="2" />
<text  x="771.75" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (37 samples, 0.08%)</title><rect x="786.1" y="341" width="0.9" height="15.0" fill="rgb(212,206,37)" rx="2" ry="2" />
<text  x="789.05" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (41 samples, 0.09%)</title><rect x="842.7" y="309" width="1.1" height="15.0" fill="rgb(222,188,48)" rx="2" ry="2" />
<text  x="845.73" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (6 samples, 0.01%)</title><rect x="77.1" y="453" width="0.2" height="15.0" fill="rgb(225,135,53)" rx="2" ry="2" />
<text  x="80.12" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (22 samples, 0.05%)</title><rect x="717.5" y="437" width="0.5" height="15.0" fill="rgb(230,126,12)" rx="2" ry="2" />
<text  x="720.49" y="447.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="591.3" y="405" width="0.4" height="15.0" fill="rgb(248,176,14)" rx="2" ry="2" />
<text  x="594.34" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (33 samples, 0.07%)</title><rect x="695.0" y="469" width="0.8" height="15.0" fill="rgb(227,136,37)" rx="2" ry="2" />
<text  x="697.97" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (33 samples, 0.07%)</title><rect x="395.4" y="229" width="0.8" height="15.0" fill="rgb(222,89,20)" rx="2" ry="2" />
<text  x="398.38" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="357" width="0.8" height="15.0" fill="rgb(249,208,39)" rx="2" ry="2" />
<text  x="1145.58" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="676.6" y="485" width="0.7" height="15.0" fill="rgb(215,219,43)" rx="2" ry="2" />
<text  x="679.63" y="495.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.04%)</title><rect x="1168.7" y="469" width="0.4" height="15.0" fill="rgb(235,222,12)" rx="2" ry="2" />
<text  x="1171.71" y="479.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="777.1" y="293" width="0.2" height="15.0" fill="rgb(223,206,5)" rx="2" ry="2" />
<text  x="780.14" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="996.8" y="341" width="0.5" height="15.0" fill="rgb(212,228,48)" rx="2" ry="2" />
<text  x="999.84" y="351.5" ></text>
</g>
<g >
<title>reader_permit::signal (5 samples, 0.01%)</title><rect x="277.4" y="325" width="0.1" height="15.0" fill="rgb(248,133,27)" rx="2" ry="2" />
<text  x="280.37" y="335.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="551.5" y="357" width="0.8" height="15.0" fill="rgb(235,0,31)" rx="2" ry="2" />
<text  x="554.48" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (5 samples, 0.01%)</title><rect x="886.5" y="437" width="0.2" height="15.0" fill="rgb(243,3,6)" rx="2" ry="2" />
<text  x="889.54" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (12 samples, 0.03%)</title><rect x="1001.6" y="261" width="0.3" height="15.0" fill="rgb(210,156,44)" rx="2" ry="2" />
<text  x="1004.60" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (20 samples, 0.04%)</title><rect x="871.6" y="357" width="0.5" height="15.0" fill="rgb(210,127,22)" rx="2" ry="2" />
<text  x="874.56" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="622.6" y="437" width="0.2" height="15.0" fill="rgb(229,139,5)" rx="2" ry="2" />
<text  x="625.59" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%)</title><rect x="612.9" y="437" width="0.3" height="15.0" fill="rgb(224,151,29)" rx="2" ry="2" />
<text  x="615.90" y="447.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (55 samples, 0.12%)</title><rect x="39.3" y="405" width="1.4" height="15.0" fill="rgb(228,123,20)" rx="2" ry="2" />
<text  x="42.28" y="415.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (11 samples, 0.02%)</title><rect x="839.2" y="373" width="0.3" height="15.0" fill="rgb(245,52,28)" rx="2" ry="2" />
<text  x="842.19" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="996.4" y="341" width="0.4" height="15.0" fill="rgb(207,46,36)" rx="2" ry="2" />
<text  x="999.39" y="351.5" ></text>
</g>
<g >
<title>posix_memalign (104 samples, 0.22%)</title><rect x="196.8" y="85" width="2.6" height="15.0" fill="rgb(213,228,23)" rx="2" ry="2" />
<text  x="199.77" y="95.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (8 samples, 0.02%)</title><rect x="624.3" y="421" width="0.2" height="15.0" fill="rgb(251,43,54)" rx="2" ry="2" />
<text  x="627.29" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (11 samples, 0.02%)</title><rect x="78.7" y="453" width="0.3" height="15.0" fill="rgb(229,82,0)" rx="2" ry="2" />
<text  x="81.74" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (79 samples, 0.17%)</title><rect x="504.9" y="261" width="2.0" height="15.0" fill="rgb(251,141,19)" rx="2" ry="2" />
<text  x="507.90" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (469 samples, 0.99%)</title><rect x="128.2" y="277" width="11.7" height="15.0" fill="rgb(233,125,11)" rx="2" ry="2" />
<text  x="131.18" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (15 samples, 0.03%)</title><rect x="1042.2" y="181" width="0.4" height="15.0" fill="rgb(240,122,32)" rx="2" ry="2" />
<text  x="1045.19" y="191.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="1142.8" y="245" width="0.6" height="15.0" fill="rgb(239,12,54)" rx="2" ry="2" />
<text  x="1145.83" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (7 samples, 0.01%)</title><rect x="956.7" y="405" width="0.2" height="15.0" fill="rgb(224,229,29)" rx="2" ry="2" />
<text  x="959.70" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (229 samples, 0.48%)</title><rect x="453.4" y="309" width="5.7" height="15.0" fill="rgb(220,191,7)" rx="2" ry="2" />
<text  x="456.36" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (18 samples, 0.04%)</title><rect x="238.6" y="181" width="0.4" height="15.0" fill="rgb(245,202,16)" rx="2" ry="2" />
<text  x="241.58" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (7 samples, 0.01%)</title><rect x="46.4" y="485" width="0.2" height="15.0" fill="rgb(227,80,30)" rx="2" ry="2" />
<text  x="49.39" y="495.5" ></text>
</g>
<g >
<title>__start_context (304 samples, 0.64%)</title><rect x="15.4" y="613" width="7.6" height="15.0" fill="rgb(229,124,39)" rx="2" ry="2" />
<text  x="18.37" y="623.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (6 samples, 0.01%)</title><rect x="1108.2" y="341" width="0.1" height="15.0" fill="rgb(220,69,17)" rx="2" ry="2" />
<text  x="1111.16" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%)</title><rect x="34.0" y="485" width="0.3" height="15.0" fill="rgb(214,100,52)" rx="2" ry="2" />
<text  x="36.99" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (473 samples, 1.00%)</title><rect x="1114.1" y="421" width="11.8" height="15.0" fill="rgb(234,117,38)" rx="2" ry="2" />
<text  x="1117.12" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (19 samples, 0.04%)</title><rect x="215.7" y="133" width="0.5" height="15.0" fill="rgb(217,57,5)" rx="2" ry="2" />
<text  x="218.69" y="143.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="539.5" y="261" width="0.5" height="15.0" fill="rgb(245,156,32)" rx="2" ry="2" />
<text  x="542.55" y="271.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="621.1" y="373" width="1.0" height="15.0" fill="rgb(249,68,4)" rx="2" ry="2" />
<text  x="624.14" y="383.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (18 samples, 0.04%)</title><rect x="1061.7" y="277" width="0.4" height="15.0" fill="rgb(223,129,52)" rx="2" ry="2" />
<text  x="1064.66" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (32 samples, 0.07%)</title><rect x="764.2" y="389" width="0.8" height="15.0" fill="rgb(231,145,35)" rx="2" ry="2" />
<text  x="767.24" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="420.7" y="357" width="0.2" height="15.0" fill="rgb(242,47,34)" rx="2" ry="2" />
<text  x="423.71" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (33 samples, 0.07%)</title><rect x="391.8" y="213" width="0.8" height="15.0" fill="rgb(238,199,35)" rx="2" ry="2" />
<text  x="394.76" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (50 samples, 0.11%)</title><rect x="701.8" y="453" width="1.2" height="15.0" fill="rgb(240,127,35)" rx="2" ry="2" />
<text  x="704.79" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="520.6" y="293" width="0.2" height="15.0" fill="rgb(234,173,36)" rx="2" ry="2" />
<text  x="523.60" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (186 samples, 0.39%)</title><rect x="453.9" y="293" width="4.7" height="15.0" fill="rgb(210,153,30)" rx="2" ry="2" />
<text  x="456.94" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (57 samples, 0.12%)</title><rect x="1150.5" y="485" width="1.4" height="15.0" fill="rgb(220,146,32)" rx="2" ry="2" />
<text  x="1153.46" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (9 samples, 0.02%)</title><rect x="706.2" y="469" width="0.2" height="15.0" fill="rgb(249,58,0)" rx="2" ry="2" />
<text  x="709.20" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (17 samples, 0.04%)</title><rect x="887.1" y="469" width="0.4" height="15.0" fill="rgb(251,70,6)" rx="2" ry="2" />
<text  x="890.09" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (49 samples, 0.10%)</title><rect x="213.1" y="165" width="1.2" height="15.0" fill="rgb(222,95,47)" rx="2" ry="2" />
<text  x="216.07" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (48 samples, 0.10%)</title><rect x="21.2" y="469" width="1.2" height="15.0" fill="rgb(226,47,16)" rx="2" ry="2" />
<text  x="24.21" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (24 samples, 0.05%)</title><rect x="634.7" y="485" width="0.6" height="15.0" fill="rgb(245,187,18)" rx="2" ry="2" />
<text  x="637.72" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (26 samples, 0.05%)</title><rect x="1112.0" y="405" width="0.7" height="15.0" fill="rgb(207,57,46)" rx="2" ry="2" />
<text  x="1115.03" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (146 samples, 0.31%)</title><rect x="640.5" y="501" width="3.6" height="15.0" fill="rgb(224,116,37)" rx="2" ry="2" />
<text  x="643.46" y="511.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (639 samples, 1.35%)</title><rect x="904.5" y="389" width="15.9" height="15.0" fill="rgb(231,182,16)" rx="2" ry="2" />
<text  x="907.48" y="399.5" ></text>
</g>
<g >
<title>__dynamic_cast (23 samples, 0.05%)</title><rect x="650.3" y="469" width="0.6" height="15.0" fill="rgb(249,110,21)" rx="2" ry="2" />
<text  x="653.29" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (454 samples, 0.96%)</title><rect x="709.7" y="469" width="11.4" height="15.0" fill="rgb(252,112,6)" rx="2" ry="2" />
<text  x="712.75" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (17 samples, 0.04%)</title><rect x="903.1" y="389" width="0.4" height="15.0" fill="rgb(253,207,8)" rx="2" ry="2" />
<text  x="906.11" y="399.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="866.2" y="421" width="1.3" height="15.0" fill="rgb(227,27,21)" rx="2" ry="2" />
<text  x="869.17" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="416.6" y="277" width="0.2" height="15.0" fill="rgb(219,50,24)" rx="2" ry="2" />
<text  x="419.65" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,553 samples, 9.63%)</title><rect x="430.7" y="389" width="113.6" height="15.0" fill="rgb(245,49,13)" rx="2" ry="2" />
<text  x="433.67" y="399.5" >std::function&lt;..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="827.3" y="229" width="0.1" height="15.0" fill="rgb(231,25,45)" rx="2" ry="2" />
<text  x="830.28" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.07%)</title><rect x="355.5" y="149" width="0.8" height="15.0" fill="rgb(246,163,7)" rx="2" ry="2" />
<text  x="358.47" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="544.4" y="389" width="0.8" height="15.0" fill="rgb(247,58,49)" rx="2" ry="2" />
<text  x="547.44" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="679.0" y="453" width="0.2" height="15.0" fill="rgb(218,117,33)" rx="2" ry="2" />
<text  x="682.05" y="463.5" ></text>
</g>
<g >
<title>database::find_column_family (36 samples, 0.08%)</title><rect x="1027.5" y="245" width="0.9" height="15.0" fill="rgb(235,180,17)" rx="2" ry="2" />
<text  x="1030.54" y="255.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (8 samples, 0.02%)</title><rect x="837.5" y="309" width="0.2" height="15.0" fill="rgb(225,123,53)" rx="2" ry="2" />
<text  x="840.49" y="319.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="768.9" y="405" width="1.3" height="15.0" fill="rgb(226,85,45)" rx="2" ry="2" />
<text  x="771.88" y="415.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="48.4" y="501" width="0.1" height="15.0" fill="rgb(213,80,31)" rx="2" ry="2" />
<text  x="51.36" y="511.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="832.5" y="309" width="0.8" height="15.0" fill="rgb(230,124,29)" rx="2" ry="2" />
<text  x="835.48" y="319.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (22 samples, 0.05%)</title><rect x="328.2" y="181" width="0.6" height="15.0" fill="rgb(236,209,5)" rx="2" ry="2" />
<text  x="331.21" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (19 samples, 0.04%)</title><rect x="657.1" y="389" width="0.5" height="15.0" fill="rgb(236,172,46)" rx="2" ry="2" />
<text  x="660.08" y="399.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (5 samples, 0.01%)</title><rect x="759.3" y="277" width="0.2" height="15.0" fill="rgb(206,25,16)" rx="2" ry="2" />
<text  x="762.34" y="287.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (135 samples, 0.29%)</title><rect x="347.2" y="165" width="3.4" height="15.0" fill="rgb(253,20,36)" rx="2" ry="2" />
<text  x="350.21" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="636.8" y="485" width="0.6" height="15.0" fill="rgb(247,170,44)" rx="2" ry="2" />
<text  x="639.79" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="673.7" y="469" width="0.1" height="15.0" fill="rgb(217,220,19)" rx="2" ry="2" />
<text  x="676.66" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%)</title><rect x="964.1" y="309" width="0.1" height="15.0" fill="rgb(235,32,51)" rx="2" ry="2" />
<text  x="967.06" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (30 samples, 0.06%)</title><rect x="502.8" y="277" width="0.8" height="15.0" fill="rgb(238,210,13)" rx="2" ry="2" />
<text  x="505.81" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (120 samples, 0.25%)</title><rect x="728.9" y="453" width="3.0" height="15.0" fill="rgb(244,36,27)" rx="2" ry="2" />
<text  x="731.92" y="463.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (589 samples, 1.25%)</title><rect x="1087.1" y="309" width="14.7" height="15.0" fill="rgb(243,51,17)" rx="2" ry="2" />
<text  x="1090.07" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (143 samples, 0.30%)</title><rect x="728.4" y="469" width="3.6" height="15.0" fill="rgb(246,12,51)" rx="2" ry="2" />
<text  x="731.44" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="633.5" y="453" width="0.2" height="15.0" fill="rgb(254,101,34)" rx="2" ry="2" />
<text  x="636.50" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="705.7" y="485" width="0.1" height="15.0" fill="rgb(222,159,45)" rx="2" ry="2" />
<text  x="708.65" y="495.5" ></text>
</g>
<g >
<title>seastar::schedule (9 samples, 0.02%)</title><rect x="1145.0" y="501" width="0.3" height="15.0" fill="rgb(234,57,46)" rx="2" ry="2" />
<text  x="1148.05" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (97 samples, 0.21%)</title><rect x="808.3" y="213" width="2.4" height="15.0" fill="rgb(221,183,8)" rx="2" ry="2" />
<text  x="811.29" y="223.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.01%)</title><rect x="22.6" y="373" width="0.1" height="15.0" fill="rgb(214,174,28)" rx="2" ry="2" />
<text  x="25.58" y="383.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (325 samples, 0.69%)</title><rect x="736.8" y="437" width="8.1" height="15.0" fill="rgb(217,109,38)" rx="2" ry="2" />
<text  x="739.75" y="447.5" ></text>
</g>
<g >
<title>database::find_uuid (223 samples, 0.47%)</title><rect x="774.3" y="389" width="5.6" height="15.0" fill="rgb(215,103,41)" rx="2" ry="2" />
<text  x="777.29" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (47 samples, 0.10%)</title><rect x="443.7" y="277" width="1.2" height="15.0" fill="rgb(214,64,13)" rx="2" ry="2" />
<text  x="446.73" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (25 samples, 0.05%)</title><rect x="987.2" y="357" width="0.6" height="15.0" fill="rgb(247,228,13)" rx="2" ry="2" />
<text  x="990.18" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (8 samples, 0.02%)</title><rect x="72.9" y="389" width="0.2" height="15.0" fill="rgb(228,207,3)" rx="2" ry="2" />
<text  x="75.92" y="399.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (127 samples, 0.27%)</title><rect x="196.6" y="101" width="3.2" height="15.0" fill="rgb(218,139,0)" rx="2" ry="2" />
<text  x="199.62" y="111.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,876 samples, 6.08%)</title><rect x="158.5" y="245" width="71.8" height="15.0" fill="rgb(225,225,54)" rx="2" ry="2" />
<text  x="161.54" y="255.5" >partitio..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%)</title><rect x="685.2" y="469" width="0.4" height="15.0" fill="rgb(210,14,27)" rx="2" ry="2" />
<text  x="688.16" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (28 samples, 0.06%)</title><rect x="758.8" y="293" width="0.7" height="15.0" fill="rgb(239,12,23)" rx="2" ry="2" />
<text  x="761.77" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="527.4" y="325" width="0.3" height="15.0" fill="rgb(206,172,22)" rx="2" ry="2" />
<text  x="530.42" y="335.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="509.8" y="197" width="0.7" height="15.0" fill="rgb(251,85,15)" rx="2" ry="2" />
<text  x="512.85" y="207.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (5 samples, 0.01%)</title><rect x="1119.1" y="389" width="0.1" height="15.0" fill="rgb(234,163,25)" rx="2" ry="2" />
<text  x="1122.06" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="634.6" y="469" width="0.1" height="15.0" fill="rgb(233,199,7)" rx="2" ry="2" />
<text  x="637.57" y="479.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="641.1" y="485" width="0.5" height="15.0" fill="rgb(231,116,23)" rx="2" ry="2" />
<text  x="644.13" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (57 samples, 0.12%)</title><rect x="324.5" y="181" width="1.4" height="15.0" fill="rgb(212,98,51)" rx="2" ry="2" />
<text  x="327.47" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (37 samples, 0.08%)</title><rect x="513.2" y="181" width="1.0" height="15.0" fill="rgb(211,167,51)" rx="2" ry="2" />
<text  x="516.24" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (7 samples, 0.01%)</title><rect x="611.8" y="437" width="0.2" height="15.0" fill="rgb(253,4,47)" rx="2" ry="2" />
<text  x="614.83" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (101 samples, 0.21%)</title><rect x="537.6" y="277" width="2.5" height="15.0" fill="rgb(210,162,3)" rx="2" ry="2" />
<text  x="540.60" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (28 samples, 0.06%)</title><rect x="1167.4" y="485" width="0.7" height="15.0" fill="rgb(242,6,14)" rx="2" ry="2" />
<text  x="1170.39" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="617.4" y="437" width="0.2" height="15.0" fill="rgb(213,71,41)" rx="2" ry="2" />
<text  x="620.42" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%)</title><rect x="709.0" y="469" width="0.4" height="15.0" fill="rgb(244,111,12)" rx="2" ry="2" />
<text  x="712.05" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (16 samples, 0.03%)</title><rect x="680.5" y="437" width="0.4" height="15.0" fill="rgb(209,144,5)" rx="2" ry="2" />
<text  x="683.50" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="650.9" y="469" width="0.2" height="15.0" fill="rgb(220,54,20)" rx="2" ry="2" />
<text  x="653.94" y="479.5" ></text>
</g>
<g >
<title>memtable::apply (20 samples, 0.04%)</title><rect x="1141.9" y="261" width="0.5" height="15.0" fill="rgb(220,29,4)" rx="2" ry="2" />
<text  x="1144.88" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="389.8" y="149" width="0.2" height="15.0" fill="rgb(210,109,51)" rx="2" ry="2" />
<text  x="392.81" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="586.5" y="373" width="0.2" height="15.0" fill="rgb(243,168,4)" rx="2" ry="2" />
<text  x="589.52" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (8 samples, 0.02%)</title><rect x="316.7" y="197" width="0.2" height="15.0" fill="rgb(225,199,14)" rx="2" ry="2" />
<text  x="319.66" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,087 samples, 8.64%)</title><rect x="296.5" y="261" width="102.0" height="15.0" fill="rgb(251,145,29)" rx="2" ry="2" />
<text  x="299.49" y="271.5" >mutation_fra..</text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (15 samples, 0.03%)</title><rect x="546.4" y="421" width="0.4" height="15.0" fill="rgb(251,170,32)" rx="2" ry="2" />
<text  x="549.41" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (189 samples, 0.40%)</title><rect x="195.1" y="117" width="4.7" height="15.0" fill="rgb(225,200,4)" rx="2" ry="2" />
<text  x="198.08" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (8 samples, 0.02%)</title><rect x="78.5" y="453" width="0.2" height="15.0" fill="rgb(216,32,37)" rx="2" ry="2" />
<text  x="81.54" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (24 samples, 0.05%)</title><rect x="243.8" y="213" width="0.6" height="15.0" fill="rgb(236,110,37)" rx="2" ry="2" />
<text  x="246.82" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (78 samples, 0.16%)</title><rect x="718.5" y="437" width="2.0" height="15.0" fill="rgb(214,213,35)" rx="2" ry="2" />
<text  x="721.53" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (27 samples, 0.06%)</title><rect x="312.8" y="181" width="0.7" height="15.0" fill="rgb(243,199,13)" rx="2" ry="2" />
<text  x="315.84" y="191.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (63 samples, 0.13%)</title><rect x="988.3" y="357" width="1.6" height="15.0" fill="rgb(214,118,23)" rx="2" ry="2" />
<text  x="991.35" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (45 samples, 0.10%)</title><rect x="863.7" y="373" width="1.1" height="15.0" fill="rgb(229,127,32)" rx="2" ry="2" />
<text  x="866.73" y="383.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (355 samples, 0.75%)</title><rect x="481.7" y="261" width="8.9" height="15.0" fill="rgb(222,113,33)" rx="2" ry="2" />
<text  x="484.69" y="271.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (9 samples, 0.02%)</title><rect x="1036.4" y="197" width="0.2" height="15.0" fill="rgb(231,43,32)" rx="2" ry="2" />
<text  x="1039.37" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (7 samples, 0.01%)</title><rect x="170.6" y="133" width="0.2" height="15.0" fill="rgb(228,67,50)" rx="2" ry="2" />
<text  x="173.59" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="661.1" y="453" width="0.2" height="15.0" fill="rgb(217,31,14)" rx="2" ry="2" />
<text  x="664.13" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="621.9" y="357" width="0.2" height="15.0" fill="rgb(215,186,7)" rx="2" ry="2" />
<text  x="624.94" y="367.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (28 samples, 0.06%)</title><rect x="608.3" y="405" width="0.7" height="15.0" fill="rgb(210,228,54)" rx="2" ry="2" />
<text  x="611.34" y="415.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (11 samples, 0.02%)</title><rect x="1175.9" y="437" width="0.3" height="15.0" fill="rgb(217,30,18)" rx="2" ry="2" />
<text  x="1178.90" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="1072.3" y="261" width="0.2" height="15.0" fill="rgb(227,153,31)" rx="2" ry="2" />
<text  x="1075.34" y="271.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (8 samples, 0.02%)</title><rect x="1103.9" y="309" width="0.2" height="15.0" fill="rgb(247,71,49)" rx="2" ry="2" />
<text  x="1106.89" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (61 samples, 0.13%)</title><rect x="1123.0" y="405" width="1.5" height="15.0" fill="rgb(213,112,35)" rx="2" ry="2" />
<text  x="1125.98" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (17 samples, 0.04%)</title><rect x="307.1" y="165" width="0.4" height="15.0" fill="rgb(216,92,1)" rx="2" ry="2" />
<text  x="310.10" y="175.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (6 samples, 0.01%)</title><rect x="393.4" y="229" width="0.1" height="15.0" fill="rgb(211,91,20)" rx="2" ry="2" />
<text  x="396.36" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (187 samples, 0.40%)</title><rect x="738.9" y="405" width="4.7" height="15.0" fill="rgb(228,156,20)" rx="2" ry="2" />
<text  x="741.93" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="870.3" y="373" width="0.3" height="15.0" fill="rgb(252,202,41)" rx="2" ry="2" />
<text  x="873.26" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (25 samples, 0.05%)</title><rect x="1102.4" y="277" width="0.6" height="15.0" fill="rgb(251,6,7)" rx="2" ry="2" />
<text  x="1105.39" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="587.8" y="373" width="0.1" height="15.0" fill="rgb(228,154,16)" rx="2" ry="2" />
<text  x="590.82" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (16 samples, 0.03%)</title><rect x="138.6" y="261" width="0.4" height="15.0" fill="rgb(232,11,14)" rx="2" ry="2" />
<text  x="141.59" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%)</title><rect x="949.5" y="357" width="1.2" height="15.0" fill="rgb(251,158,11)" rx="2" ry="2" />
<text  x="952.49" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="121.8" y="293" width="0.1" height="15.0" fill="rgb(211,223,19)" rx="2" ry="2" />
<text  x="124.82" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (5 samples, 0.01%)</title><rect x="678.4" y="469" width="0.1" height="15.0" fill="rgb(216,46,24)" rx="2" ry="2" />
<text  x="681.40" y="479.5" ></text>
</g>
<g >
<title>query::result::builder::builder (225 samples, 0.48%)</title><rect x="600.4" y="421" width="5.6" height="15.0" fill="rgb(218,114,31)" rx="2" ry="2" />
<text  x="603.37" y="431.5" ></text>
</g>
<g >
<title>free (35 samples, 0.07%)</title><rect x="408.1" y="197" width="0.9" height="15.0" fill="rgb(234,54,24)" rx="2" ry="2" />
<text  x="411.11" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="273.6" y="261" width="1.7" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" />
<text  x="276.58" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="554.7" y="389" width="0.5" height="15.0" fill="rgb(216,207,34)" rx="2" ry="2" />
<text  x="557.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="1152.0" y="485" width="0.4" height="15.0" fill="rgb(232,27,9)" rx="2" ry="2" />
<text  x="1155.04" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1119.2" y="389" width="0.1" height="15.0" fill="rgb(223,83,44)" rx="2" ry="2" />
<text  x="1122.19" y="399.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (12 samples, 0.03%)</title><rect x="1144.5" y="501" width="0.3" height="15.0" fill="rgb(254,59,33)" rx="2" ry="2" />
<text  x="1147.50" y="511.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="644.5" y="485" width="0.5" height="15.0" fill="rgb(229,10,24)" rx="2" ry="2" />
<text  x="647.53" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="619.4" y="405" width="0.1" height="15.0" fill="rgb(205,96,11)" rx="2" ry="2" />
<text  x="622.37" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%)</title><rect x="272.1" y="293" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="275.08" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (8 samples, 0.02%)</title><rect x="47.0" y="469" width="0.2" height="15.0" fill="rgb(214,23,9)" rx="2" ry="2" />
<text  x="50.02" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (199 samples, 0.42%)</title><rect x="410.4" y="261" width="4.9" height="15.0" fill="rgb(206,161,15)" rx="2" ry="2" />
<text  x="413.36" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (48 samples, 0.10%)</title><rect x="1020.3" y="245" width="1.2" height="15.0" fill="rgb(205,67,10)" rx="2" ry="2" />
<text  x="1023.32" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="525.6" y="309" width="0.5" height="15.0" fill="rgb(232,34,30)" rx="2" ry="2" />
<text  x="528.59" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (40 samples, 0.08%)</title><rect x="652.3" y="405" width="1.0" height="15.0" fill="rgb(212,87,38)" rx="2" ry="2" />
<text  x="655.27" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (31 samples, 0.07%)</title><rect x="859.0" y="437" width="0.7" height="15.0" fill="rgb(222,145,12)" rx="2" ry="2" />
<text  x="861.96" y="447.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (5 samples, 0.01%)</title><rect x="1101.2" y="293" width="0.2" height="15.0" fill="rgb(215,131,5)" rx="2" ry="2" />
<text  x="1104.24" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="539.0" y="245" width="0.3" height="15.0" fill="rgb(230,17,41)" rx="2" ry="2" />
<text  x="542.05" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (21 samples, 0.04%)</title><rect x="886.5" y="501" width="0.5" height="15.0" fill="rgb(225,154,4)" rx="2" ry="2" />
<text  x="889.51" y="511.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (36 samples, 0.08%)</title><rect x="577.7" y="373" width="0.9" height="15.0" fill="rgb(242,36,20)" rx="2" ry="2" />
<text  x="580.69" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1113.8" y="373" width="0.2" height="15.0" fill="rgb(230,106,29)" rx="2" ry="2" />
<text  x="1116.82" y="383.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="620.2" y="389" width="0.6" height="15.0" fill="rgb(232,119,25)" rx="2" ry="2" />
<text  x="623.22" y="399.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="1113.2" y="389" width="0.4" height="15.0" fill="rgb(225,94,14)" rx="2" ry="2" />
<text  x="1116.17" y="399.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (10 samples, 0.02%)</title><rect x="238.3" y="165" width="0.3" height="15.0" fill="rgb(220,56,7)" rx="2" ry="2" />
<text  x="241.33" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (6 samples, 0.01%)</title><rect x="791.4" y="357" width="0.1" height="15.0" fill="rgb(250,99,1)" rx="2" ry="2" />
<text  x="794.37" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (10 samples, 0.02%)</title><rect x="234.2" y="213" width="0.3" height="15.0" fill="rgb(222,33,34)" rx="2" ry="2" />
<text  x="237.21" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="1121.7" y="325" width="0.3" height="15.0" fill="rgb(251,215,50)" rx="2" ry="2" />
<text  x="1124.71" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (12 samples, 0.03%)</title><rect x="881.4" y="421" width="0.3" height="15.0" fill="rgb(206,117,3)" rx="2" ry="2" />
<text  x="884.40" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (12 samples, 0.03%)</title><rect x="597.8" y="405" width="0.3" height="15.0" fill="rgb(225,178,14)" rx="2" ry="2" />
<text  x="600.78" y="415.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (23 samples, 0.05%)</title><rect x="1141.8" y="309" width="0.6" height="15.0" fill="rgb(206,218,40)" rx="2" ry="2" />
<text  x="1144.83" y="319.5" ></text>
</g>
<g >
<title>auth::resource::resource (66 samples, 0.14%)</title><rect x="785.9" y="373" width="1.6" height="15.0" fill="rgb(210,171,11)" rx="2" ry="2" />
<text  x="788.88" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="432.0" y="357" width="0.2" height="15.0" fill="rgb(237,80,34)" rx="2" ry="2" />
<text  x="434.97" y="367.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (5 samples, 0.01%)</title><rect x="22.6" y="357" width="0.1" height="15.0" fill="rgb(211,177,32)" rx="2" ry="2" />
<text  x="25.60" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (25 samples, 0.05%)</title><rect x="947.7" y="389" width="0.6" height="15.0" fill="rgb(207,218,49)" rx="2" ry="2" />
<text  x="950.67" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (60 samples, 0.13%)</title><rect x="867.9" y="421" width="1.5" height="15.0" fill="rgb(241,212,24)" rx="2" ry="2" />
<text  x="870.94" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (101 samples, 0.21%)</title><rect x="836.6" y="341" width="2.5" height="15.0" fill="rgb(218,165,21)" rx="2" ry="2" />
<text  x="839.59" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (6 samples, 0.01%)</title><rect x="975.6" y="373" width="0.1" height="15.0" fill="rgb(231,54,23)" rx="2" ry="2" />
<text  x="978.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="1045.8" y="197" width="1.7" height="15.0" fill="rgb(209,20,13)" rx="2" ry="2" />
<text  x="1048.76" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="283.2" y="389" width="0.2" height="15.0" fill="rgb(252,75,0)" rx="2" ry="2" />
<text  x="286.24" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.12%)</title><rect x="800.6" y="261" width="1.3" height="15.0" fill="rgb(245,201,25)" rx="2" ry="2" />
<text  x="803.55" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%)</title><rect x="711.4" y="453" width="0.5" height="15.0" fill="rgb(209,78,29)" rx="2" ry="2" />
<text  x="714.42" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (52 samples, 0.11%)</title><rect x="385.8" y="133" width="1.3" height="15.0" fill="rgb(218,23,8)" rx="2" ry="2" />
<text  x="388.77" y="143.5" ></text>
</g>
<g >
<title>operator new (50 samples, 0.11%)</title><rect x="868.2" y="405" width="1.2" height="15.0" fill="rgb(205,129,37)" rx="2" ry="2" />
<text  x="871.19" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="1008.1" y="229" width="0.7" height="15.0" fill="rgb(232,225,30)" rx="2" ry="2" />
<text  x="1011.09" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (105 samples, 0.22%)</title><rect x="684.9" y="485" width="2.6" height="15.0" fill="rgb(218,61,25)" rx="2" ry="2" />
<text  x="687.89" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="797.6" y="293" width="0.1" height="15.0" fill="rgb(242,193,33)" rx="2" ry="2" />
<text  x="800.61" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (263 samples, 0.56%)</title><rect x="15.9" y="485" width="6.6" height="15.0" fill="rgb(211,63,0)" rx="2" ry="2" />
<text  x="18.89" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="488.5" y="181" width="0.3" height="15.0" fill="rgb(211,164,4)" rx="2" ry="2" />
<text  x="491.53" y="191.5" ></text>
</g>
<g >
<title>database::query (26 samples, 0.05%)</title><rect x="1015.9" y="277" width="0.6" height="15.0" fill="rgb(237,18,12)" rx="2" ry="2" />
<text  x="1018.86" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (5 samples, 0.01%)</title><rect x="885.5" y="501" width="0.1" height="15.0" fill="rgb(246,34,30)" rx="2" ry="2" />
<text  x="888.49" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="741.9" y="293" width="0.2" height="15.0" fill="rgb(235,93,35)" rx="2" ry="2" />
<text  x="744.87" y="303.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="210.7" y="165" width="0.6" height="15.0" fill="rgb(244,132,44)" rx="2" ry="2" />
<text  x="213.65" y="175.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="593.4" y="389" width="0.9" height="15.0" fill="rgb(222,95,27)" rx="2" ry="2" />
<text  x="596.44" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (17 samples, 0.04%)</title><rect x="352.7" y="165" width="0.4" height="15.0" fill="rgb(217,170,3)" rx="2" ry="2" />
<text  x="355.72" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (55 samples, 0.12%)</title><rect x="496.4" y="309" width="1.3" height="15.0" fill="rgb(236,104,34)" rx="2" ry="2" />
<text  x="499.37" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.03%)</title><rect x="1110.8" y="389" width="0.3" height="15.0" fill="rgb(219,20,18)" rx="2" ry="2" />
<text  x="1113.78" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (28 samples, 0.06%)</title><rect x="285.9" y="373" width="0.7" height="15.0" fill="rgb(231,5,52)" rx="2" ry="2" />
<text  x="288.86" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (84 samples, 0.18%)</title><rect x="655.8" y="469" width="2.1" height="15.0" fill="rgb(250,223,11)" rx="2" ry="2" />
<text  x="658.84" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="23.0" y="485" width="0.3" height="15.0" fill="rgb(250,106,28)" rx="2" ry="2" />
<text  x="26.03" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (16 samples, 0.03%)</title><rect x="207.3" y="101" width="0.4" height="15.0" fill="rgb(249,28,28)" rx="2" ry="2" />
<text  x="210.26" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (11 samples, 0.02%)</title><rect x="1045.0" y="229" width="0.3" height="15.0" fill="rgb(207,227,22)" rx="2" ry="2" />
<text  x="1047.98" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="707.1" y="469" width="0.2" height="15.0" fill="rgb(214,64,39)" rx="2" ry="2" />
<text  x="710.05" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,778 samples, 12.22%)</title><rect x="967.8" y="405" width="144.2" height="15.0" fill="rgb(247,75,8)" rx="2" ry="2" />
<text  x="970.81" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="927.3" y="341" width="0.2" height="15.0" fill="rgb(214,46,10)" rx="2" ry="2" />
<text  x="930.30" y="351.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="628.3" y="389" width="0.4" height="15.0" fill="rgb(250,192,46)" rx="2" ry="2" />
<text  x="631.28" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (15 samples, 0.03%)</title><rect x="134.8" y="245" width="0.4" height="15.0" fill="rgb(230,76,53)" rx="2" ry="2" />
<text  x="137.82" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="413.4" y="229" width="0.2" height="15.0" fill="rgb(220,99,13)" rx="2" ry="2" />
<text  x="416.40" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (26 samples, 0.05%)</title><rect x="865.3" y="357" width="0.6" height="15.0" fill="rgb(220,92,31)" rx="2" ry="2" />
<text  x="868.27" y="367.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (35 samples, 0.07%)</title><rect x="533.4" y="277" width="0.9" height="15.0" fill="rgb(220,96,22)" rx="2" ry="2" />
<text  x="536.38" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (22 samples, 0.05%)</title><rect x="759.9" y="293" width="0.6" height="15.0" fill="rgb(234,58,23)" rx="2" ry="2" />
<text  x="762.94" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="645.0" y="485" width="0.2" height="15.0" fill="rgb(233,212,53)" rx="2" ry="2" />
<text  x="648.03" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (51 samples, 0.11%)</title><rect x="845.6" y="309" width="1.3" height="15.0" fill="rgb(252,11,37)" rx="2" ry="2" />
<text  x="848.60" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (21 samples, 0.04%)</title><rect x="652.7" y="389" width="0.5" height="15.0" fill="rgb(231,126,16)" rx="2" ry="2" />
<text  x="655.67" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="811.2" y="213" width="0.2" height="15.0" fill="rgb(219,54,35)" rx="2" ry="2" />
<text  x="814.18" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%)</title><rect x="245.3" y="197" width="0.2" height="15.0" fill="rgb(249,131,37)" rx="2" ry="2" />
<text  x="248.35" y="207.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="504.2" y="261" width="0.2" height="15.0" fill="rgb(231,3,49)" rx="2" ry="2" />
<text  x="507.23" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (28 samples, 0.06%)</title><rect x="812.1" y="181" width="0.7" height="15.0" fill="rgb(244,166,16)" rx="2" ry="2" />
<text  x="815.06" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,098 samples, 2.32%)</title><rect x="802.4" y="293" width="27.4" height="15.0" fill="rgb(254,98,42)" rx="2" ry="2" />
<text  x="805.37" y="303.5" >s..</text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (64 samples, 0.14%)</title><rect x="548.8" y="373" width="1.6" height="15.0" fill="rgb(227,80,40)" rx="2" ry="2" />
<text  x="551.76" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="956.5" y="405" width="0.2" height="15.0" fill="rgb(207,107,24)" rx="2" ry="2" />
<text  x="959.53" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (309 samples, 0.65%)</title><rect x="482.8" y="229" width="7.8" height="15.0" fill="rgb(208,210,39)" rx="2" ry="2" />
<text  x="485.84" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (30 samples, 0.06%)</title><rect x="852.2" y="421" width="0.8" height="15.0" fill="rgb(234,37,3)" rx="2" ry="2" />
<text  x="855.24" y="431.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (90 samples, 0.19%)</title><rect x="1116.8" y="389" width="2.3" height="15.0" fill="rgb(208,143,15)" rx="2" ry="2" />
<text  x="1119.82" y="399.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (43 samples, 0.09%)</title><rect x="860.0" y="437" width="1.1" height="15.0" fill="rgb(213,156,29)" rx="2" ry="2" />
<text  x="862.98" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (28 samples, 0.06%)</title><rect x="186.5" y="53" width="0.7" height="15.0" fill="rgb(254,195,38)" rx="2" ry="2" />
<text  x="189.54" y="63.5" ></text>
</g>
<g >
<title>compound_type&lt; (97 samples, 0.21%)</title><rect x="938.5" y="357" width="2.4" height="15.0" fill="rgb(241,24,38)" rx="2" ry="2" />
<text  x="941.50" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (21 samples, 0.04%)</title><rect x="570.9" y="277" width="0.6" height="15.0" fill="rgb(217,102,34)" rx="2" ry="2" />
<text  x="573.95" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (15 samples, 0.03%)</title><rect x="886.7" y="437" width="0.3" height="15.0" fill="rgb(250,79,0)" rx="2" ry="2" />
<text  x="889.66" y="447.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (16 samples, 0.03%)</title><rect x="822.0" y="101" width="0.4" height="15.0" fill="rgb(206,170,26)" rx="2" ry="2" />
<text  x="825.04" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (72 samples, 0.15%)</title><rect x="962.8" y="373" width="1.8" height="15.0" fill="rgb(218,32,35)" rx="2" ry="2" />
<text  x="965.77" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (5 samples, 0.01%)</title><rect x="245.6" y="197" width="0.1" height="15.0" fill="rgb(216,210,48)" rx="2" ry="2" />
<text  x="248.62" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (48 samples, 0.10%)</title><rect x="809.3" y="165" width="1.2" height="15.0" fill="rgb(253,121,53)" rx="2" ry="2" />
<text  x="812.26" y="175.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (9 samples, 0.02%)</title><rect x="528.5" y="341" width="0.2" height="15.0" fill="rgb(240,76,6)" rx="2" ry="2" />
<text  x="531.49" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="1004.1" y="325" width="0.4" height="15.0" fill="rgb(243,99,11)" rx="2" ry="2" />
<text  x="1007.15" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (9 samples, 0.02%)</title><rect x="1038.0" y="149" width="0.2" height="15.0" fill="rgb(230,96,0)" rx="2" ry="2" />
<text  x="1040.97" y="159.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (57 samples, 0.12%)</title><rect x="143.3" y="261" width="1.5" height="15.0" fill="rgb(220,165,21)" rx="2" ry="2" />
<text  x="146.34" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (44 samples, 0.09%)</title><rect x="1001.2" y="277" width="1.1" height="15.0" fill="rgb(238,127,46)" rx="2" ry="2" />
<text  x="1004.20" y="287.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="907.6" y="293" width="0.3" height="15.0" fill="rgb(234,227,47)" rx="2" ry="2" />
<text  x="910.60" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (88 samples, 0.19%)</title><rect x="236.8" y="197" width="2.2" height="15.0" fill="rgb(230,134,37)" rx="2" ry="2" />
<text  x="239.83" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (8 samples, 0.02%)</title><rect x="763.7" y="405" width="0.2" height="15.0" fill="rgb(208,150,44)" rx="2" ry="2" />
<text  x="766.74" y="415.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (13 samples, 0.03%)</title><rect x="517.6" y="229" width="0.3" height="15.0" fill="rgb(213,62,16)" rx="2" ry="2" />
<text  x="520.58" y="239.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="696.6" y="485" width="1.1" height="15.0" fill="rgb(224,87,49)" rx="2" ry="2" />
<text  x="699.62" y="495.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.09%)</title><rect x="1127.1" y="421" width="1.0" height="15.0" fill="rgb(238,52,12)" rx="2" ry="2" />
<text  x="1130.05" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (15 samples, 0.03%)</title><rect x="1032.6" y="245" width="0.4" height="15.0" fill="rgb(227,133,51)" rx="2" ry="2" />
<text  x="1035.60" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="444.8" y="261" width="0.1" height="15.0" fill="rgb(219,6,37)" rx="2" ry="2" />
<text  x="447.77" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (130 samples, 0.27%)</title><rect x="366.0" y="213" width="3.2" height="15.0" fill="rgb(208,170,20)" rx="2" ry="2" />
<text  x="368.95" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="671.2" y="437" width="0.3" height="15.0" fill="rgb(248,56,45)" rx="2" ry="2" />
<text  x="674.21" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (6 samples, 0.01%)</title><rect x="18.0" y="357" width="0.2" height="15.0" fill="rgb(213,58,25)" rx="2" ry="2" />
<text  x="21.04" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (103 samples, 0.22%)</title><rect x="1172.3" y="437" width="2.5" height="15.0" fill="rgb(252,132,18)" rx="2" ry="2" />
<text  x="1175.25" y="447.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%)</title><rect x="1077.4" y="325" width="1.7" height="15.0" fill="rgb(246,176,51)" rx="2" ry="2" />
<text  x="1080.43" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (97 samples, 0.21%)</title><rect x="177.7" y="101" width="2.5" height="15.0" fill="rgb(254,74,0)" rx="2" ry="2" />
<text  x="180.73" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (6 samples, 0.01%)</title><rect x="963.9" y="309" width="0.2" height="15.0" fill="rgb(234,120,53)" rx="2" ry="2" />
<text  x="966.91" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,345 samples, 11.31%)</title><rect x="287.0" y="341" width="133.4" height="15.0" fill="rgb(233,188,28)" rx="2" ry="2" />
<text  x="290.00" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.04%)</title><rect x="690.7" y="453" width="0.4" height="15.0" fill="rgb(207,171,14)" rx="2" ry="2" />
<text  x="693.68" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="540.8" y="325" width="0.2" height="15.0" fill="rgb(241,222,50)" rx="2" ry="2" />
<text  x="543.85" y="335.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (31 samples, 0.07%)</title><rect x="1142.6" y="405" width="0.8" height="15.0" fill="rgb(213,13,10)" rx="2" ry="2" />
<text  x="1145.58" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (90 samples, 0.19%)</title><rect x="603.1" y="405" width="2.2" height="15.0" fill="rgb(226,19,49)" rx="2" ry="2" />
<text  x="606.07" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="516.0" y="229" width="0.2" height="15.0" fill="rgb(225,83,24)" rx="2" ry="2" />
<text  x="519.01" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (121 samples, 0.26%)</title><rect x="17.7" y="373" width="3.1" height="15.0" fill="rgb(224,12,34)" rx="2" ry="2" />
<text  x="20.74" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (18 samples, 0.04%)</title><rect x="1175.9" y="469" width="0.4" height="15.0" fill="rgb(239,223,31)" rx="2" ry="2" />
<text  x="1178.87" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (17 samples, 0.04%)</title><rect x="428.0" y="421" width="0.5" height="15.0" fill="rgb(221,181,30)" rx="2" ry="2" />
<text  x="431.03" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (39 samples, 0.08%)</title><rect x="786.0" y="357" width="1.0" height="15.0" fill="rgb(250,106,39)" rx="2" ry="2" />
<text  x="789.00" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (647 samples, 1.37%)</title><rect x="374.0" y="181" width="16.2" height="15.0" fill="rgb(205,107,33)" rx="2" ry="2" />
<text  x="377.01" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (16 samples, 0.03%)</title><rect x="703.8" y="453" width="0.4" height="15.0" fill="rgb(237,21,39)" rx="2" ry="2" />
<text  x="706.83" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (6 samples, 0.01%)</title><rect x="61.9" y="453" width="0.1" height="15.0" fill="rgb(208,79,42)" rx="2" ry="2" />
<text  x="64.87" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="687.6" y="485" width="0.2" height="15.0" fill="rgb(208,188,37)" rx="2" ry="2" />
<text  x="690.56" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="721.4" y="485" width="0.3" height="15.0" fill="rgb(205,112,4)" rx="2" ry="2" />
<text  x="724.43" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (717 samples, 1.52%)</title><rect x="806.0" y="245" width="17.9" height="15.0" fill="rgb(213,87,35)" rx="2" ry="2" />
<text  x="808.97" y="255.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (8 samples, 0.02%)</title><rect x="305.6" y="197" width="0.2" height="15.0" fill="rgb(215,195,39)" rx="2" ry="2" />
<text  x="308.62" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (24 samples, 0.05%)</title><rect x="692.2" y="453" width="0.6" height="15.0" fill="rgb(207,95,25)" rx="2" ry="2" />
<text  x="695.15" y="463.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1,034 samples, 2.19%)</title><rect x="802.6" y="277" width="25.8" height="15.0" fill="rgb(243,164,36)" rx="2" ry="2" />
<text  x="805.60" y="287.5" >a..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (148 samples, 0.31%)</title><rect x="214.3" y="165" width="3.7" height="15.0" fill="rgb(244,186,43)" rx="2" ry="2" />
<text  x="217.32" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.01%)</title><rect x="1038.2" y="149" width="0.2" height="15.0" fill="rgb(207,160,46)" rx="2" ry="2" />
<text  x="1041.24" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (27 samples, 0.06%)</title><rect x="231.0" y="245" width="0.6" height="15.0" fill="rgb(234,147,53)" rx="2" ry="2" />
<text  x="233.97" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (93 samples, 0.20%)</title><rect x="729.2" y="437" width="2.3" height="15.0" fill="rgb(229,211,53)" rx="2" ry="2" />
<text  x="732.19" y="447.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="997.6" y="325" width="1.8" height="15.0" fill="rgb(236,193,39)" rx="2" ry="2" />
<text  x="1000.61" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="823.1" y="197" width="0.2" height="15.0" fill="rgb(207,79,19)" rx="2" ry="2" />
<text  x="826.14" y="207.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (727 samples, 1.54%)</title><rect x="805.7" y="261" width="18.2" height="15.0" fill="rgb(229,40,22)" rx="2" ry="2" />
<text  x="808.72" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="683.8" y="485" width="0.1" height="15.0" fill="rgb(250,171,14)" rx="2" ry="2" />
<text  x="686.82" y="495.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (7 samples, 0.01%)</title><rect x="942.5" y="405" width="0.2" height="15.0" fill="rgb(211,83,15)" rx="2" ry="2" />
<text  x="945.52" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (36 samples, 0.08%)</title><rect x="819.7" y="133" width="0.9" height="15.0" fill="rgb(210,144,2)" rx="2" ry="2" />
<text  x="822.75" y="143.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (5 samples, 0.01%)</title><rect x="816.5" y="133" width="0.1" height="15.0" fill="rgb(207,223,19)" rx="2" ry="2" />
<text  x="819.48" y="143.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,973 samples, 4.17%)</title><rect x="789.9" y="373" width="49.3" height="15.0" fill="rgb(247,60,54)" rx="2" ry="2" />
<text  x="792.94" y="383.5" >serv..</text>
</g>
<g >
<title>mutation_reader_merger::operator (5,557 samples, 11.75%)</title><rect x="118.8" y="325" width="138.8" height="15.0" fill="rgb(243,166,14)" rx="2" ry="2" />
<text  x="121.85" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1134.2" y="389" width="0.2" height="15.0" fill="rgb(242,57,39)" rx="2" ry="2" />
<text  x="1137.24" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="663.8" y="485" width="0.1" height="15.0" fill="rgb(237,173,29)" rx="2" ry="2" />
<text  x="666.77" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="933.8" y="341" width="0.2" height="15.0" fill="rgb(221,134,39)" rx="2" ry="2" />
<text  x="936.79" y="351.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="17.9" y="341" width="0.1" height="15.0" fill="rgb(224,15,44)" rx="2" ry="2" />
<text  x="20.89" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (10 samples, 0.02%)</title><rect x="216.8" y="117" width="0.2" height="15.0" fill="rgb(226,102,14)" rx="2" ry="2" />
<text  x="219.77" y="127.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (15 samples, 0.03%)</title><rect x="822.1" y="85" width="0.3" height="15.0" fill="rgb(254,134,20)" rx="2" ry="2" />
<text  x="825.07" y="95.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (39 samples, 0.08%)</title><rect x="74.7" y="389" width="1.0" height="15.0" fill="rgb(252,209,54)" rx="2" ry="2" />
<text  x="77.72" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="863.8" y="357" width="0.2" height="15.0" fill="rgb(210,73,18)" rx="2" ry="2" />
<text  x="866.83" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (83 samples, 0.18%)</title><rect x="396.2" y="229" width="2.1" height="15.0" fill="rgb(249,53,0)" rx="2" ry="2" />
<text  x="399.20" y="239.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (11 samples, 0.02%)</title><rect x="219.0" y="149" width="0.3" height="15.0" fill="rgb(234,5,23)" rx="2" ry="2" />
<text  x="222.01" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (407 samples, 0.86%)</title><rect x="232.3" y="245" width="10.2" height="15.0" fill="rgb(225,108,12)" rx="2" ry="2" />
<text  x="235.32" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,154 samples, 2.44%)</title><rect x="1146.3" y="501" width="28.8" height="15.0" fill="rgb(231,119,39)" rx="2" ry="2" />
<text  x="1149.32" y="511.5" >se..</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="1003.8" y="325" width="0.1" height="15.0" fill="rgb(220,191,50)" rx="2" ry="2" />
<text  x="1006.82" y="335.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (497 samples, 1.05%)</title><rect x="478.3" y="309" width="12.5" height="15.0" fill="rgb(246,180,11)" rx="2" ry="2" />
<text  x="481.35" y="319.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (48 samples, 0.10%)</title><rect x="1017.1" y="277" width="1.2" height="15.0" fill="rgb(221,65,51)" rx="2" ry="2" />
<text  x="1020.05" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="1011.9" y="293" width="0.5" height="15.0" fill="rgb(249,44,2)" rx="2" ry="2" />
<text  x="1014.94" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="534.8" y="309" width="0.2" height="15.0" fill="rgb(235,97,46)" rx="2" ry="2" />
<text  x="537.80" y="319.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (256 samples, 0.54%)</title><rect x="1088.6" y="245" width="6.4" height="15.0" fill="rgb(243,42,28)" rx="2" ry="2" />
<text  x="1091.61" y="255.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="242.2" y="229" width="0.1" height="15.0" fill="rgb(234,50,13)" rx="2" ry="2" />
<text  x="245.18" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (7 samples, 0.01%)</title><rect x="853.2" y="405" width="0.2" height="15.0" fill="rgb(217,85,23)" rx="2" ry="2" />
<text  x="856.19" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (56 samples, 0.12%)</title><rect x="257.9" y="325" width="1.3" height="15.0" fill="rgb(245,10,50)" rx="2" ry="2" />
<text  x="260.85" y="335.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (7 samples, 0.01%)</title><rect x="685.7" y="469" width="0.2" height="15.0" fill="rgb(207,113,14)" rx="2" ry="2" />
<text  x="688.69" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="934.3" y="389" width="0.4" height="15.0" fill="rgb(247,22,18)" rx="2" ry="2" />
<text  x="937.29" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="389" width="0.8" height="15.0" fill="rgb(248,165,36)" rx="2" ry="2" />
<text  x="1145.58" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (16 samples, 0.03%)</title><rect x="610.6" y="437" width="0.4" height="15.0" fill="rgb(222,112,45)" rx="2" ry="2" />
<text  x="613.61" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (240 samples, 0.51%)</title><rect x="757.5" y="341" width="6.0" height="15.0" fill="rgb(215,149,23)" rx="2" ry="2" />
<text  x="760.52" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (223 samples, 0.47%)</title><rect x="765.3" y="421" width="5.6" height="15.0" fill="rgb(238,151,38)" rx="2" ry="2" />
<text  x="768.33" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="296.3" y="245" width="0.2" height="15.0" fill="rgb(216,158,53)" rx="2" ry="2" />
<text  x="299.31" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="556.8" y="421" width="0.1" height="15.0" fill="rgb(243,80,37)" rx="2" ry="2" />
<text  x="559.77" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (5 samples, 0.01%)</title><rect x="17.6" y="293" width="0.1" height="15.0" fill="rgb(253,46,52)" rx="2" ry="2" />
<text  x="20.56" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (618 samples, 1.31%)</title><rect x="1033.0" y="245" width="15.4" height="15.0" fill="rgb(242,2,20)" rx="2" ry="2" />
<text  x="1035.98" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (196 samples, 0.41%)</title><rect x="1170.2" y="469" width="4.9" height="15.0" fill="rgb(240,75,33)" rx="2" ry="2" />
<text  x="1173.23" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (263 samples, 0.56%)</title><rect x="578.6" y="373" width="6.5" height="15.0" fill="rgb(227,139,16)" rx="2" ry="2" />
<text  x="581.58" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (13 samples, 0.03%)</title><rect x="885.0" y="501" width="0.4" height="15.0" fill="rgb(244,217,13)" rx="2" ry="2" />
<text  x="888.04" y="511.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="552.4" y="341" width="1.7" height="15.0" fill="rgb(226,102,11)" rx="2" ry="2" />
<text  x="555.40" y="351.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (13 samples, 0.03%)</title><rect x="903.5" y="389" width="0.4" height="15.0" fill="rgb(213,179,2)" rx="2" ry="2" />
<text  x="906.54" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (57 samples, 0.12%)</title><rect x="18.8" y="325" width="1.4" height="15.0" fill="rgb(212,122,36)" rx="2" ry="2" />
<text  x="21.79" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1042.8" y="197" width="0.1" height="15.0" fill="rgb(218,186,45)" rx="2" ry="2" />
<text  x="1045.79" y="207.5" ></text>
</g>
<g >
<title>operator delete (64 samples, 0.14%)</title><rect x="568.4" y="293" width="1.5" height="15.0" fill="rgb(230,160,39)" rx="2" ry="2" />
<text  x="571.35" y="303.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (10 samples, 0.02%)</title><rect x="22.5" y="469" width="0.2" height="15.0" fill="rgb(253,88,10)" rx="2" ry="2" />
<text  x="25.48" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (29 samples, 0.06%)</title><rect x="847.2" y="293" width="0.8" height="15.0" fill="rgb(205,6,5)" rx="2" ry="2" />
<text  x="850.23" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (113 samples, 0.24%)</title><rect x="760.5" y="309" width="2.8" height="15.0" fill="rgb(235,100,39)" rx="2" ry="2" />
<text  x="763.52" y="319.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (5 samples, 0.01%)</title><rect x="839.6" y="389" width="0.1" height="15.0" fill="rgb(211,63,54)" rx="2" ry="2" />
<text  x="842.56" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="677.5" y="485" width="0.1" height="15.0" fill="rgb(244,164,29)" rx="2" ry="2" />
<text  x="680.48" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (178 samples, 0.38%)</title><rect x="908.8" y="309" width="4.5" height="15.0" fill="rgb(242,97,51)" rx="2" ry="2" />
<text  x="911.83" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (184 samples, 0.39%)</title><rect x="952.4" y="421" width="4.6" height="15.0" fill="rgb(211,173,53)" rx="2" ry="2" />
<text  x="955.41" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="288.6" y="293" width="0.2" height="15.0" fill="rgb(253,137,24)" rx="2" ry="2" />
<text  x="291.60" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="38.5" y="405" width="0.1" height="15.0" fill="rgb(208,0,43)" rx="2" ry="2" />
<text  x="41.45" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1062.6" y="293" width="0.1" height="15.0" fill="rgb(224,207,30)" rx="2" ry="2" />
<text  x="1065.56" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (8 samples, 0.02%)</title><rect x="62.8" y="453" width="0.2" height="15.0" fill="rgb(252,1,15)" rx="2" ry="2" />
<text  x="65.79" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="459.1" y="309" width="0.1" height="15.0" fill="rgb(251,113,39)" rx="2" ry="2" />
<text  x="462.10" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (304 samples, 0.64%)</title><rect x="15.4" y="581" width="7.6" height="15.0" fill="rgb(225,50,23)" rx="2" ry="2" />
<text  x="18.37" y="591.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (24 samples, 0.05%)</title><rect x="777.3" y="325" width="0.6" height="15.0" fill="rgb(234,201,32)" rx="2" ry="2" />
<text  x="780.31" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (47 samples, 0.10%)</title><rect x="1166.2" y="469" width="1.2" height="15.0" fill="rgb(247,41,46)" rx="2" ry="2" />
<text  x="1169.21" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (17 samples, 0.04%)</title><rect x="825.3" y="213" width="0.4" height="15.0" fill="rgb(219,192,0)" rx="2" ry="2" />
<text  x="828.31" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="617.0" y="405" width="0.4" height="15.0" fill="rgb(227,206,54)" rx="2" ry="2" />
<text  x="620.00" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (158 samples, 0.33%)</title><rect x="862.1" y="405" width="4.0" height="15.0" fill="rgb(226,99,54)" rx="2" ry="2" />
<text  x="865.13" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (134 samples, 0.28%)</title><rect x="1080.0" y="309" width="3.4" height="15.0" fill="rgb(228,212,54)" rx="2" ry="2" />
<text  x="1083.03" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (40 samples, 0.08%)</title><rect x="658.1" y="469" width="1.0" height="15.0" fill="rgb(207,152,33)" rx="2" ry="2" />
<text  x="661.11" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (74 samples, 0.16%)</title><rect x="688.2" y="453" width="1.8" height="15.0" fill="rgb(222,87,5)" rx="2" ry="2" />
<text  x="691.16" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%)</title><rect x="994.9" y="261" width="0.6" height="15.0" fill="rgb(213,157,39)" rx="2" ry="2" />
<text  x="997.89" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (12 samples, 0.03%)</title><rect x="622.1" y="389" width="0.3" height="15.0" fill="rgb(246,36,22)" rx="2" ry="2" />
<text  x="625.06" y="399.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (35 samples, 0.07%)</title><rect x="908.0" y="309" width="0.8" height="15.0" fill="rgb(213,151,41)" rx="2" ry="2" />
<text  x="910.95" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="277.0" y="277" width="0.3" height="15.0" fill="rgb(218,65,24)" rx="2" ry="2" />
<text  x="280.00" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (684 samples, 1.45%)</title><rect x="903.9" y="405" width="17.0" height="15.0" fill="rgb(228,151,36)" rx="2" ry="2" />
<text  x="906.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (73 samples, 0.15%)</title><rect x="917.5" y="357" width="1.9" height="15.0" fill="rgb(210,67,37)" rx="2" ry="2" />
<text  x="920.54" y="367.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (207 samples, 0.44%)</title><rect x="1036.9" y="181" width="5.1" height="15.0" fill="rgb(226,71,14)" rx="2" ry="2" />
<text  x="1039.87" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (34 samples, 0.07%)</title><rect x="100.1" y="405" width="0.8" height="15.0" fill="rgb(216,93,30)" rx="2" ry="2" />
<text  x="103.08" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,422 samples, 9.35%)</title><rect x="744.9" y="437" width="110.4" height="15.0" fill="rgb(233,200,22)" rx="2" ry="2" />
<text  x="747.94" y="447.5" >cql3::query_p..</text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (6 samples, 0.01%)</title><rect x="438.3" y="341" width="0.1" height="15.0" fill="rgb(210,59,51)" rx="2" ry="2" />
<text  x="441.29" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (54 samples, 0.11%)</title><rect x="1068.1" y="325" width="1.4" height="15.0" fill="rgb(249,122,49)" rx="2" ry="2" />
<text  x="1071.15" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="604.1" y="357" width="0.7" height="15.0" fill="rgb(236,7,21)" rx="2" ry="2" />
<text  x="607.14" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="43.3" y="469" width="0.3" height="15.0" fill="rgb(232,134,36)" rx="2" ry="2" />
<text  x="46.27" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (269 samples, 0.57%)</title><rect x="443.4" y="293" width="6.7" height="15.0" fill="rgb(251,144,42)" rx="2" ry="2" />
<text  x="446.40" y="303.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="570.1" y="277" width="0.8" height="15.0" fill="rgb(230,21,21)" rx="2" ry="2" />
<text  x="573.12" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="565.1" y="309" width="0.1" height="15.0" fill="rgb(241,0,37)" rx="2" ry="2" />
<text  x="568.11" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="414.7" y="229" width="0.6" height="15.0" fill="rgb(244,222,51)" rx="2" ry="2" />
<text  x="417.70" y="239.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="924.5" y="357" width="0.2" height="15.0" fill="rgb(222,214,29)" rx="2" ry="2" />
<text  x="927.50" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (7 samples, 0.01%)</title><rect x="717.3" y="421" width="0.2" height="15.0" fill="rgb(228,171,22)" rx="2" ry="2" />
<text  x="720.31" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (64 samples, 0.14%)</title><rect x="624.1" y="437" width="1.6" height="15.0" fill="rgb(234,131,50)" rx="2" ry="2" />
<text  x="627.06" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (170 samples, 0.36%)</title><rect x="188.1" y="53" width="4.3" height="15.0" fill="rgb(214,204,26)" rx="2" ry="2" />
<text  x="191.11" y="63.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (27 samples, 0.06%)</title><rect x="986.1" y="357" width="0.6" height="15.0" fill="rgb(234,43,5)" rx="2" ry="2" />
<text  x="989.05" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (33 samples, 0.07%)</title><rect x="953.9" y="357" width="0.8" height="15.0" fill="rgb(237,64,22)" rx="2" ry="2" />
<text  x="956.86" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.04%)</title><rect x="1042.9" y="197" width="0.5" height="15.0" fill="rgb(207,28,50)" rx="2" ry="2" />
<text  x="1045.91" y="207.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%)</title><rect x="1174.0" y="421" width="0.4" height="15.0" fill="rgb(241,197,17)" rx="2" ry="2" />
<text  x="1176.98" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (30 samples, 0.06%)</title><rect x="263.2" y="325" width="0.8" height="15.0" fill="rgb(238,123,38)" rx="2" ry="2" />
<text  x="266.24" y="335.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (27 samples, 0.06%)</title><rect x="1141.8" y="325" width="0.7" height="15.0" fill="rgb(217,192,25)" rx="2" ry="2" />
<text  x="1144.80" y="335.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="36.7" y="453" width="0.4" height="15.0" fill="rgb(228,191,48)" rx="2" ry="2" />
<text  x="39.66" y="463.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="152.2" y="181" width="0.6" height="15.0" fill="rgb(216,21,53)" rx="2" ry="2" />
<text  x="155.25" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (7 samples, 0.01%)</title><rect x="260.2" y="341" width="0.2" height="15.0" fill="rgb(211,172,20)" rx="2" ry="2" />
<text  x="263.20" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (15 samples, 0.03%)</title><rect x="1149.8" y="485" width="0.4" height="15.0" fill="rgb(221,225,1)" rx="2" ry="2" />
<text  x="1152.81" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="914.0" y="309" width="0.2" height="15.0" fill="rgb(230,134,2)" rx="2" ry="2" />
<text  x="916.99" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (8 samples, 0.02%)</title><rect x="792.7" y="341" width="0.2" height="15.0" fill="rgb(246,70,6)" rx="2" ry="2" />
<text  x="795.69" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="976.1" y="373" width="0.2" height="15.0" fill="rgb(208,176,1)" rx="2" ry="2" />
<text  x="979.14" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (113 samples, 0.24%)</title><rect x="486.4" y="197" width="2.8" height="15.0" fill="rgb(225,94,37)" rx="2" ry="2" />
<text  x="489.36" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (169 samples, 0.36%)</title><rect x="1096.8" y="261" width="4.2" height="15.0" fill="rgb(241,12,31)" rx="2" ry="2" />
<text  x="1099.78" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%)</title><rect x="846.5" y="277" width="0.3" height="15.0" fill="rgb(248,150,38)" rx="2" ry="2" />
<text  x="849.48" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (377 samples, 0.80%)</title><rect x="267.9" y="325" width="9.4" height="15.0" fill="rgb(210,106,43)" rx="2" ry="2" />
<text  x="270.93" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (114 samples, 0.24%)</title><rect x="637.6" y="485" width="2.8" height="15.0" fill="rgb(245,196,25)" rx="2" ry="2" />
<text  x="640.59" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (18 samples, 0.04%)</title><rect x="1035.8" y="181" width="0.4" height="15.0" fill="rgb(209,161,5)" rx="2" ry="2" />
<text  x="1038.80" y="191.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (6 samples, 0.01%)</title><rect x="1011.2" y="293" width="0.1" height="15.0" fill="rgb(213,101,40)" rx="2" ry="2" />
<text  x="1014.19" y="303.5" ></text>
</g>
<g >
<title>row::row (33 samples, 0.07%)</title><rect x="245.7" y="197" width="0.9" height="15.0" fill="rgb(205,141,10)" rx="2" ry="2" />
<text  x="248.75" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="1047.0" y="181" width="0.5" height="15.0" fill="rgb(227,51,38)" rx="2" ry="2" />
<text  x="1050.01" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (55 samples, 0.12%)</title><rect x="367.8" y="181" width="1.4" height="15.0" fill="rgb(217,142,40)" rx="2" ry="2" />
<text  x="370.82" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (67 samples, 0.14%)</title><rect x="737.0" y="421" width="1.7" height="15.0" fill="rgb(242,95,38)" rx="2" ry="2" />
<text  x="739.98" y="431.5" ></text>
</g>
<g >
<title>table::make_reader (5 samples, 0.01%)</title><rect x="544.2" y="373" width="0.1" height="15.0" fill="rgb(253,147,35)" rx="2" ry="2" />
<text  x="547.19" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="62.4" y="453" width="0.1" height="15.0" fill="rgb(251,98,53)" rx="2" ry="2" />
<text  x="65.37" y="463.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.02%)</title><rect x="1140.9" y="437" width="0.2" height="15.0" fill="rgb(206,45,15)" rx="2" ry="2" />
<text  x="1143.88" y="447.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (13 samples, 0.03%)</title><rect x="1142.8" y="213" width="0.4" height="15.0" fill="rgb(221,23,22)" rx="2" ry="2" />
<text  x="1145.83" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="586.2" y="373" width="0.1" height="15.0" fill="rgb(230,204,32)" rx="2" ry="2" />
<text  x="589.17" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (415 samples, 0.88%)</title><rect x="65.9" y="437" width="10.3" height="15.0" fill="rgb(212,63,41)" rx="2" ry="2" />
<text  x="68.89" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (55 samples, 0.12%)</title><rect x="856.5" y="389" width="1.4" height="15.0" fill="rgb(249,4,37)" rx="2" ry="2" />
<text  x="859.54" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (36 samples, 0.08%)</title><rect x="694.9" y="501" width="0.9" height="15.0" fill="rgb(211,120,3)" rx="2" ry="2" />
<text  x="697.95" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (462 samples, 0.98%)</title><rect x="398.5" y="261" width="11.5" height="15.0" fill="rgb(253,226,27)" rx="2" ry="2" />
<text  x="401.50" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="769.9" y="373" width="0.3" height="15.0" fill="rgb(231,226,38)" rx="2" ry="2" />
<text  x="772.85" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (9 samples, 0.02%)</title><rect x="24.8" y="517" width="0.2" height="15.0" fill="rgb(248,215,22)" rx="2" ry="2" />
<text  x="27.78" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="316.3" y="213" width="0.2" height="15.0" fill="rgb(235,66,28)" rx="2" ry="2" />
<text  x="319.33" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (174 samples, 0.37%)</title><rect x="775.2" y="357" width="4.4" height="15.0" fill="rgb(227,147,40)" rx="2" ry="2" />
<text  x="778.24" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (29 samples, 0.06%)</title><rect x="1052.2" y="261" width="0.8" height="15.0" fill="rgb(210,150,19)" rx="2" ry="2" />
<text  x="1055.25" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="551.6" y="341" width="0.7" height="15.0" fill="rgb(205,210,45)" rx="2" ry="2" />
<text  x="554.58" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="841.8" y="389" width="0.2" height="15.0" fill="rgb(214,14,1)" rx="2" ry="2" />
<text  x="844.81" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (24 samples, 0.05%)</title><rect x="1126.3" y="421" width="0.6" height="15.0" fill="rgb(227,226,7)" rx="2" ry="2" />
<text  x="1129.33" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (49 samples, 0.10%)</title><rect x="589.9" y="421" width="1.2" height="15.0" fill="rgb(211,21,17)" rx="2" ry="2" />
<text  x="592.89" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="1142.8" y="293" width="0.6" height="15.0" fill="rgb(205,66,36)" rx="2" ry="2" />
<text  x="1145.83" y="303.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (31 samples, 0.07%)</title><rect x="1141.8" y="405" width="0.8" height="15.0" fill="rgb(222,217,6)" rx="2" ry="2" />
<text  x="1144.78" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="694.6" y="485" width="0.1" height="15.0" fill="rgb(246,134,32)" rx="2" ry="2" />
<text  x="697.62" y="495.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (7 samples, 0.01%)</title><rect x="391.2" y="181" width="0.2" height="15.0" fill="rgb(234,111,29)" rx="2" ry="2" />
<text  x="394.24" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (37 samples, 0.08%)</title><rect x="966.2" y="373" width="1.0" height="15.0" fill="rgb(238,107,15)" rx="2" ry="2" />
<text  x="969.24" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%)</title><rect x="884.1" y="485" width="0.2" height="15.0" fill="rgb(232,146,27)" rx="2" ry="2" />
<text  x="887.09" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,281 samples, 13.29%)</title><rect x="957.3" y="421" width="156.7" height="15.0" fill="rgb(217,214,3)" rx="2" ry="2" />
<text  x="960.27" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="255.0" y="261" width="0.2" height="15.0" fill="rgb(219,104,37)" rx="2" ry="2" />
<text  x="258.01" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,615 samples, 7.65%)</title><rect x="302.4" y="229" width="90.3" height="15.0" fill="rgb(250,200,53)" rx="2" ry="2" />
<text  x="305.43" y="239.5" >compact_mu..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="79.8" y="453" width="0.2" height="15.0" fill="rgb(229,133,26)" rx="2" ry="2" />
<text  x="82.81" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="765.0" y="405" width="0.2" height="15.0" fill="rgb(249,209,20)" rx="2" ry="2" />
<text  x="768.03" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (6 samples, 0.01%)</title><rect x="1152.4" y="485" width="0.2" height="15.0" fill="rgb(214,206,1)" rx="2" ry="2" />
<text  x="1155.44" y="495.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="459.8" y="325" width="0.7" height="15.0" fill="rgb(252,122,29)" rx="2" ry="2" />
<text  x="462.80" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="23.0" y="469" width="0.3" height="15.0" fill="rgb(219,84,28)" rx="2" ry="2" />
<text  x="26.03" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="594.7" y="373" width="0.1" height="15.0" fill="rgb(222,221,11)" rx="2" ry="2" />
<text  x="597.68" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (34 samples, 0.07%)</title><rect x="860.2" y="421" width="0.9" height="15.0" fill="rgb(241,112,8)" rx="2" ry="2" />
<text  x="863.21" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (54 samples, 0.11%)</title><rect x="185.9" y="69" width="1.3" height="15.0" fill="rgb(253,16,7)" rx="2" ry="2" />
<text  x="188.89" y="79.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (11 samples, 0.02%)</title><rect x="560.6" y="341" width="0.3" height="15.0" fill="rgb(233,143,1)" rx="2" ry="2" />
<text  x="563.61" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (5 samples, 0.01%)</title><rect x="704.2" y="453" width="0.2" height="15.0" fill="rgb(243,146,15)" rx="2" ry="2" />
<text  x="707.23" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (55 samples, 0.12%)</title><rect x="1158.9" y="421" width="1.3" height="15.0" fill="rgb(249,89,10)" rx="2" ry="2" />
<text  x="1161.88" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="850.9" y="405" width="0.2" height="15.0" fill="rgb(226,1,22)" rx="2" ry="2" />
<text  x="853.90" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (32 samples, 0.07%)</title><rect x="864.0" y="357" width="0.8" height="15.0" fill="rgb(242,211,30)" rx="2" ry="2" />
<text  x="867.05" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (10 samples, 0.02%)</title><rect x="622.1" y="373" width="0.3" height="15.0" fill="rgb(223,79,22)" rx="2" ry="2" />
<text  x="625.11" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (26 samples, 0.05%)</title><rect x="695.0" y="357" width="0.7" height="15.0" fill="rgb(218,72,35)" rx="2" ry="2" />
<text  x="698.05" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%)</title><rect x="862.7" y="389" width="0.1" height="15.0" fill="rgb(240,17,48)" rx="2" ry="2" />
<text  x="865.65" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="881.7" y="421" width="0.1" height="15.0" fill="rgb(214,178,22)" rx="2" ry="2" />
<text  x="884.70" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="406.6" y="197" width="0.2" height="15.0" fill="rgb(252,182,2)" rx="2" ry="2" />
<text  x="409.56" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (64 samples, 0.14%)</title><rect x="223.8" y="165" width="1.6" height="15.0" fill="rgb(228,13,33)" rx="2" ry="2" />
<text  x="226.76" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="409.0" y="213" width="0.2" height="15.0" fill="rgb(222,67,38)" rx="2" ry="2" />
<text  x="411.98" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (13 samples, 0.03%)</title><rect x="920.4" y="389" width="0.4" height="15.0" fill="rgb(221,153,54)" rx="2" ry="2" />
<text  x="923.43" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (24 samples, 0.05%)</title><rect x="812.2" y="165" width="0.6" height="15.0" fill="rgb(217,2,7)" rx="2" ry="2" />
<text  x="815.16" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (209 samples, 0.44%)</title><rect x="699.1" y="469" width="5.3" height="15.0" fill="rgb(247,65,38)" rx="2" ry="2" />
<text  x="702.14" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (8 samples, 0.02%)</title><rect x="886.7" y="357" width="0.2" height="15.0" fill="rgb(246,57,11)" rx="2" ry="2" />
<text  x="889.69" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,860 samples, 3.93%)</title><rect x="317.5" y="197" width="46.4" height="15.0" fill="rgb(224,39,45)" rx="2" ry="2" />
<text  x="320.48" y="207.5" >muta..</text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="504.8" y="245" width="0.1" height="15.0" fill="rgb(210,93,41)" rx="2" ry="2" />
<text  x="507.75" y="255.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (55 samples, 0.12%)</title><rect x="290.8" y="277" width="1.3" height="15.0" fill="rgb(222,101,6)" rx="2" ry="2" />
<text  x="293.77" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (88 samples, 0.19%)</title><rect x="581.8" y="357" width="2.2" height="15.0" fill="rgb(240,31,10)" rx="2" ry="2" />
<text  x="584.83" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="281.1" y="389" width="0.2" height="15.0" fill="rgb(208,101,35)" rx="2" ry="2" />
<text  x="284.14" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (69 samples, 0.15%)</title><rect x="923.0" y="373" width="1.7" height="15.0" fill="rgb(225,51,14)" rx="2" ry="2" />
<text  x="926.00" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1083.0" y="293" width="0.4" height="15.0" fill="rgb(211,36,43)" rx="2" ry="2" />
<text  x="1085.97" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="706.0" y="469" width="0.2" height="15.0" fill="rgb(245,106,54)" rx="2" ry="2" />
<text  x="709.00" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (155 samples, 0.33%)</title><rect x="394.4" y="245" width="3.9" height="15.0" fill="rgb(248,175,43)" rx="2" ry="2" />
<text  x="397.41" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="420.0" y="245" width="0.1" height="15.0" fill="rgb(217,112,31)" rx="2" ry="2" />
<text  x="423.01" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="595.6" y="389" width="0.5" height="15.0" fill="rgb(238,95,41)" rx="2" ry="2" />
<text  x="598.56" y="399.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (62 samples, 0.13%)</title><rect x="778.0" y="341" width="1.6" height="15.0" fill="rgb(252,41,5)" rx="2" ry="2" />
<text  x="781.04" y="351.5" ></text>
</g>
<g >
<title>local_schema_registry (8 samples, 0.02%)</title><rect x="979.6" y="357" width="0.2" height="15.0" fill="rgb(232,203,8)" rx="2" ry="2" />
<text  x="982.59" y="367.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (633 samples, 1.34%)</title><rect x="125.9" y="293" width="15.8" height="15.0" fill="rgb(225,194,28)" rx="2" ry="2" />
<text  x="128.86" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="829.1" y="261" width="0.2" height="15.0" fill="rgb(237,42,6)" rx="2" ry="2" />
<text  x="832.13" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="1082.4" y="293" width="0.5" height="15.0" fill="rgb(229,146,50)" rx="2" ry="2" />
<text  x="1085.40" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (37 samples, 0.08%)</title><rect x="955.1" y="357" width="1.0" height="15.0" fill="rgb(216,25,51)" rx="2" ry="2" />
<text  x="958.13" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="939.8" y="341" width="0.2" height="15.0" fill="rgb(216,153,2)" rx="2" ry="2" />
<text  x="942.80" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (8 samples, 0.02%)</title><rect x="273.4" y="277" width="0.2" height="15.0" fill="rgb(212,131,22)" rx="2" ry="2" />
<text  x="276.35" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="695.0" y="405" width="0.7" height="15.0" fill="rgb(237,54,0)" rx="2" ry="2" />
<text  x="698.00" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (63 samples, 0.13%)</title><rect x="651.8" y="437" width="1.6" height="15.0" fill="rgb(231,18,11)" rx="2" ry="2" />
<text  x="654.79" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="420.6" y="341" width="0.1" height="15.0" fill="rgb(207,125,39)" rx="2" ry="2" />
<text  x="423.59" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="693.4" y="485" width="0.4" height="15.0" fill="rgb(213,206,1)" rx="2" ry="2" />
<text  x="696.37" y="495.5" ></text>
</g>
<g >
<title>sstring_hash::operator (29 samples, 0.06%)</title><rect x="865.2" y="373" width="0.8" height="15.0" fill="rgb(213,161,18)" rx="2" ry="2" />
<text  x="868.25" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (22 samples, 0.05%)</title><rect x="787.0" y="357" width="0.5" height="15.0" fill="rgb(226,114,12)" rx="2" ry="2" />
<text  x="789.97" y="367.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%)</title><rect x="446.0" y="245" width="1.2" height="15.0" fill="rgb(242,74,52)" rx="2" ry="2" />
<text  x="449.05" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1124.0" y="389" width="0.2" height="15.0" fill="rgb(216,218,29)" rx="2" ry="2" />
<text  x="1127.03" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (5 samples, 0.01%)</title><rect x="1176.2" y="437" width="0.1" height="15.0" fill="rgb(242,200,52)" rx="2" ry="2" />
<text  x="1179.17" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,706 samples, 7.84%)</title><rect x="301.7" y="245" width="92.5" height="15.0" fill="rgb(245,194,33)" rx="2" ry="2" />
<text  x="304.68" y="255.5" >flat_mutati..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="1072.5" y="261" width="0.2" height="15.0" fill="rgb(247,200,19)" rx="2" ry="2" />
<text  x="1075.46" y="271.5" ></text>
</g>
<g >
<title>database::find_schema (329 samples, 0.70%)</title><rect x="771.6" y="405" width="8.3" height="15.0" fill="rgb(209,99,37)" rx="2" ry="2" />
<text  x="774.65" y="415.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (8 samples, 0.02%)</title><rect x="1142.6" y="277" width="0.2" height="15.0" fill="rgb(209,124,14)" rx="2" ry="2" />
<text  x="1145.63" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (9 samples, 0.02%)</title><rect x="222.1" y="181" width="0.3" height="15.0" fill="rgb(242,44,25)" rx="2" ry="2" />
<text  x="225.13" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (5 samples, 0.01%)</title><rect x="668.8" y="485" width="0.1" height="15.0" fill="rgb(215,135,32)" rx="2" ry="2" />
<text  x="671.81" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (88 samples, 0.19%)</title><rect x="817.1" y="133" width="2.2" height="15.0" fill="rgb(242,121,5)" rx="2" ry="2" />
<text  x="820.08" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (82 samples, 0.17%)</title><rect x="875.5" y="373" width="2.1" height="15.0" fill="rgb(238,219,42)" rx="2" ry="2" />
<text  x="878.51" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="975.4" y="373" width="0.2" height="15.0" fill="rgb(205,200,10)" rx="2" ry="2" />
<text  x="978.42" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="78.0" y="453" width="0.2" height="15.0" fill="rgb(254,191,21)" rx="2" ry="2" />
<text  x="80.99" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (8 samples, 0.02%)</title><rect x="1142.6" y="309" width="0.2" height="15.0" fill="rgb(233,63,34)" rx="2" ry="2" />
<text  x="1145.63" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (6 samples, 0.01%)</title><rect x="512.1" y="197" width="0.2" height="15.0" fill="rgb(239,173,45)" rx="2" ry="2" />
<text  x="515.14" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (40 samples, 0.08%)</title><rect x="755.0" y="357" width="0.9" height="15.0" fill="rgb(254,175,47)" rx="2" ry="2" />
<text  x="757.95" y="367.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (73 samples, 0.15%)</title><rect x="548.7" y="389" width="1.8" height="15.0" fill="rgb(242,122,27)" rx="2" ry="2" />
<text  x="551.66" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (21 samples, 0.04%)</title><rect x="323.1" y="181" width="0.5" height="15.0" fill="rgb(226,46,43)" rx="2" ry="2" />
<text  x="326.12" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (7 samples, 0.01%)</title><rect x="511.0" y="213" width="0.2" height="15.0" fill="rgb(241,206,8)" rx="2" ry="2" />
<text  x="514.04" y="223.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (7 samples, 0.01%)</title><rect x="328.0" y="181" width="0.2" height="15.0" fill="rgb(219,197,37)" rx="2" ry="2" />
<text  x="331.04" y="191.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (26 samples, 0.05%)</title><rect x="602.4" y="405" width="0.7" height="15.0" fill="rgb(219,40,34)" rx="2" ry="2" />
<text  x="605.42" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1175.0" y="437" width="0.1" height="15.0" fill="rgb(231,25,44)" rx="2" ry="2" />
<text  x="1178.00" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (7 samples, 0.01%)</title><rect x="395.1" y="229" width="0.2" height="15.0" fill="rgb(216,193,7)" rx="2" ry="2" />
<text  x="398.10" y="239.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (70 samples, 0.15%)</title><rect x="603.2" y="389" width="1.8" height="15.0" fill="rgb(210,64,30)" rx="2" ry="2" />
<text  x="606.24" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (120 samples, 0.25%)</title><rect x="491.8" y="325" width="3.0" height="15.0" fill="rgb(244,92,13)" rx="2" ry="2" />
<text  x="494.82" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (7 samples, 0.01%)</title><rect x="77.8" y="453" width="0.2" height="15.0" fill="rgb(251,228,43)" rx="2" ry="2" />
<text  x="80.82" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="674.6" y="469" width="0.2" height="15.0" fill="rgb(205,180,41)" rx="2" ry="2" />
<text  x="677.55" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="669.9" y="469" width="0.2" height="15.0" fill="rgb(253,173,5)" rx="2" ry="2" />
<text  x="672.91" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (437 samples, 0.92%)</title><rect x="232.0" y="261" width="10.9" height="15.0" fill="rgb(221,55,52)" rx="2" ry="2" />
<text  x="234.99" y="271.5" ></text>
</g>
<g >
<title>validation::validate_column_family (352 samples, 0.74%)</title><rect x="842.0" y="389" width="8.8" height="15.0" fill="rgb(249,63,46)" rx="2" ry="2" />
<text  x="845.01" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (50 samples, 0.11%)</title><rect x="613.8" y="437" width="1.2" height="15.0" fill="rgb(220,37,7)" rx="2" ry="2" />
<text  x="616.75" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (10 samples, 0.02%)</title><rect x="937.2" y="389" width="0.2" height="15.0" fill="rgb(223,144,32)" rx="2" ry="2" />
<text  x="940.18" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="891.0" y="469" width="0.1" height="15.0" fill="rgb(251,172,2)" rx="2" ry="2" />
<text  x="893.96" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (10 samples, 0.02%)</title><rect x="867.5" y="421" width="0.3" height="15.0" fill="rgb(245,91,39)" rx="2" ry="2" />
<text  x="870.54" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="662.2" y="437" width="0.1" height="15.0" fill="rgb(253,229,30)" rx="2" ry="2" />
<text  x="665.17" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (7 samples, 0.01%)</title><rect x="922.6" y="389" width="0.2" height="15.0" fill="rgb(206,78,22)" rx="2" ry="2" />
<text  x="925.58" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (7 samples, 0.01%)</title><rect x="716.8" y="421" width="0.2" height="15.0" fill="rgb(224,164,10)" rx="2" ry="2" />
<text  x="719.84" y="431.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (557 samples, 1.18%)</title><rect x="1087.3" y="293" width="13.9" height="15.0" fill="rgb(226,140,11)" rx="2" ry="2" />
<text  x="1090.34" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (29 samples, 0.06%)</title><rect x="253.8" y="277" width="0.7" height="15.0" fill="rgb(234,54,50)" rx="2" ry="2" />
<text  x="256.78" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.01%)</title><rect x="838.9" y="261" width="0.2" height="15.0" fill="rgb(233,42,10)" rx="2" ry="2" />
<text  x="841.89" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (6 samples, 0.01%)</title><rect x="612.3" y="437" width="0.1" height="15.0" fill="rgb(251,132,30)" rx="2" ry="2" />
<text  x="615.28" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (30 samples, 0.06%)</title><rect x="1055.2" y="277" width="0.8" height="15.0" fill="rgb(236,104,6)" rx="2" ry="2" />
<text  x="1058.22" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (70 samples, 0.15%)</title><rect x="656.0" y="437" width="1.8" height="15.0" fill="rgb(226,17,48)" rx="2" ry="2" />
<text  x="659.03" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (8 samples, 0.02%)</title><rect x="370.9" y="197" width="0.2" height="15.0" fill="rgb(232,137,5)" rx="2" ry="2" />
<text  x="373.87" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (44 samples, 0.09%)</title><rect x="295.4" y="261" width="1.1" height="15.0" fill="rgb(206,58,16)" rx="2" ry="2" />
<text  x="298.39" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (11 samples, 0.02%)</title><rect x="23.0" y="501" width="0.3" height="15.0" fill="rgb(209,36,10)" rx="2" ry="2" />
<text  x="26.03" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (188 samples, 0.40%)</title><rect x="651.1" y="469" width="4.7" height="15.0" fill="rgb(246,20,3)" rx="2" ry="2" />
<text  x="654.14" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (7 samples, 0.01%)</title><rect x="1137.8" y="405" width="0.2" height="15.0" fill="rgb(246,163,39)" rx="2" ry="2" />
<text  x="1140.81" y="415.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="566.3" y="277" width="0.6" height="15.0" fill="rgb(212,159,44)" rx="2" ry="2" />
<text  x="569.25" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.04%)</title><rect x="665.1" y="469" width="0.5" height="15.0" fill="rgb(231,200,33)" rx="2" ry="2" />
<text  x="668.15" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (112 samples, 0.24%)</title><rect x="450.2" y="309" width="2.8" height="15.0" fill="rgb(252,62,27)" rx="2" ry="2" />
<text  x="453.24" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="879.6" y="469" width="0.2" height="15.0" fill="rgb(213,126,25)" rx="2" ry="2" />
<text  x="882.62" y="479.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (139 samples, 0.29%)</title><rect x="1153.3" y="469" width="3.5" height="15.0" fill="rgb(219,83,31)" rx="2" ry="2" />
<text  x="1156.28" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (74 samples, 0.16%)</title><rect x="207.7" y="101" width="1.8" height="15.0" fill="rgb(231,28,2)" rx="2" ry="2" />
<text  x="210.66" y="111.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="398.2" y="213" width="0.1" height="15.0" fill="rgb(224,17,53)" rx="2" ry="2" />
<text  x="401.15" y="223.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (27 samples, 0.06%)</title><rect x="76.4" y="453" width="0.7" height="15.0" fill="rgb(214,141,42)" rx="2" ry="2" />
<text  x="79.44" y="463.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="672.8" y="485" width="1.0" height="15.0" fill="rgb(237,154,51)" rx="2" ry="2" />
<text  x="675.83" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="423.3" y="357" width="0.2" height="15.0" fill="rgb(210,17,35)" rx="2" ry="2" />
<text  x="426.31" y="367.5" ></text>
</g>
<g >
<title>query::result::result (12 samples, 0.03%)</title><rect x="614.7" y="421" width="0.3" height="15.0" fill="rgb(238,158,54)" rx="2" ry="2" />
<text  x="617.65" y="431.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%)</title><rect x="580.6" y="357" width="1.2" height="15.0" fill="rgb(222,163,2)" rx="2" ry="2" />
<text  x="583.58" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (643 samples, 1.36%)</title><rect x="807.8" y="229" width="16.0" height="15.0" fill="rgb(240,91,21)" rx="2" ry="2" />
<text  x="810.79" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%)</title><rect x="504.7" y="261" width="0.2" height="15.0" fill="rgb(234,188,12)" rx="2" ry="2" />
<text  x="507.68" y="271.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (13 samples, 0.03%)</title><rect x="816.1" y="117" width="0.3" height="15.0" fill="rgb(251,38,2)" rx="2" ry="2" />
<text  x="819.08" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="798.7" y="325" width="0.2" height="15.0" fill="rgb(209,88,23)" rx="2" ry="2" />
<text  x="801.66" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (6 samples, 0.01%)</title><rect x="850.5" y="277" width="0.1" height="15.0" fill="rgb(221,168,5)" rx="2" ry="2" />
<text  x="853.47" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (26 samples, 0.05%)</title><rect x="1169.1" y="469" width="0.7" height="15.0" fill="rgb(213,67,53)" rx="2" ry="2" />
<text  x="1172.13" y="479.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (7 samples, 0.01%)</title><rect x="505.7" y="245" width="0.2" height="15.0" fill="rgb(224,72,0)" rx="2" ry="2" />
<text  x="508.68" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="798.5" y="309" width="0.1" height="15.0" fill="rgb(214,162,33)" rx="2" ry="2" />
<text  x="801.51" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (32 samples, 0.07%)</title><rect x="269.5" y="293" width="0.8" height="15.0" fill="rgb(241,228,30)" rx="2" ry="2" />
<text  x="272.51" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (74 samples, 0.16%)</title><rect x="856.1" y="405" width="1.9" height="15.0" fill="rgb(217,217,45)" rx="2" ry="2" />
<text  x="859.14" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="626.9" y="373" width="0.5" height="15.0" fill="rgb(244,155,43)" rx="2" ry="2" />
<text  x="629.93" y="383.5" ></text>
</g>
<g >
<title>dht::tri_compare (55 samples, 0.12%)</title><rect x="480.3" y="261" width="1.4" height="15.0" fill="rgb(251,129,38)" rx="2" ry="2" />
<text  x="483.32" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="1060.7" y="197" width="0.5" height="15.0" fill="rgb(253,27,40)" rx="2" ry="2" />
<text  x="1063.66" y="207.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,321 samples, 2.79%)</title><rect x="799.0" y="325" width="33.0" height="15.0" fill="rgb(218,36,44)" rx="2" ry="2" />
<text  x="802.00" y="335.5" >st..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="824.3" y="245" width="0.4" height="15.0" fill="rgb(214,7,48)" rx="2" ry="2" />
<text  x="827.29" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (23 samples, 0.05%)</title><rect x="73.6" y="405" width="0.6" height="15.0" fill="rgb(222,49,28)" rx="2" ry="2" />
<text  x="76.62" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (230 samples, 0.49%)</title><rect x="132.8" y="261" width="5.7" height="15.0" fill="rgb(215,157,43)" rx="2" ry="2" />
<text  x="135.75" y="271.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (6 samples, 0.01%)</title><rect x="1061.5" y="277" width="0.2" height="15.0" fill="rgb(209,144,50)" rx="2" ry="2" />
<text  x="1064.51" y="287.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (122 samples, 0.26%)</title><rect x="12.1" y="581" width="3.0" height="15.0" fill="rgb(231,175,18)" rx="2" ry="2" />
<text  x="15.10" y="591.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="841.2" y="357" width="0.5" height="15.0" fill="rgb(212,111,7)" rx="2" ry="2" />
<text  x="844.21" y="367.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="48.6" y="501" width="0.5" height="15.0" fill="rgb(228,69,43)" rx="2" ry="2" />
<text  x="51.56" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (18 samples, 0.04%)</title><rect x="740.4" y="325" width="0.4" height="15.0" fill="rgb(231,54,25)" rx="2" ry="2" />
<text  x="743.40" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (17 samples, 0.04%)</title><rect x="515.4" y="213" width="0.4" height="15.0" fill="rgb(233,89,45)" rx="2" ry="2" />
<text  x="518.41" y="223.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%)</title><rect x="1141.7" y="469" width="0.9" height="15.0" fill="rgb(248,13,26)" rx="2" ry="2" />
<text  x="1144.73" y="479.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="1111.6" y="373" width="0.1" height="15.0" fill="rgb(229,166,3)" rx="2" ry="2" />
<text  x="1114.55" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (9 samples, 0.02%)</title><rect x="722.0" y="485" width="0.2" height="15.0" fill="rgb(253,207,32)" rx="2" ry="2" />
<text  x="724.98" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="279.6" y="357" width="0.3" height="15.0" fill="rgb(228,26,43)" rx="2" ry="2" />
<text  x="282.59" y="367.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (6 samples, 0.01%)</title><rect x="327.9" y="181" width="0.1" height="15.0" fill="rgb(207,166,22)" rx="2" ry="2" />
<text  x="330.89" y="191.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (7 samples, 0.01%)</title><rect x="234.3" y="197" width="0.2" height="15.0" fill="rgb(229,135,40)" rx="2" ry="2" />
<text  x="237.29" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="940.9" y="357" width="0.2" height="15.0" fill="rgb(241,188,1)" rx="2" ry="2" />
<text  x="943.93" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (430 samples, 0.91%)</title><rect x="147.8" y="245" width="10.7" height="15.0" fill="rgb(216,81,51)" rx="2" ry="2" />
<text  x="150.80" y="255.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (84 samples, 0.18%)</title><rect x="151.0" y="213" width="2.1" height="15.0" fill="rgb(210,226,3)" rx="2" ry="2" />
<text  x="154.05" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (84 samples, 0.18%)</title><rect x="148.9" y="213" width="2.1" height="15.0" fill="rgb(234,137,14)" rx="2" ry="2" />
<text  x="151.93" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (5 samples, 0.01%)</title><rect x="393.0" y="229" width="0.2" height="15.0" fill="rgb(223,11,51)" rx="2" ry="2" />
<text  x="396.03" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="625.7" y="437" width="0.1" height="15.0" fill="rgb(241,41,5)" rx="2" ry="2" />
<text  x="628.66" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (62 samples, 0.13%)</title><rect x="909.7" y="293" width="1.5" height="15.0" fill="rgb(226,42,44)" rx="2" ry="2" />
<text  x="912.68" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (14 samples, 0.03%)</title><rect x="498.6" y="309" width="0.3" height="15.0" fill="rgb(230,93,4)" rx="2" ry="2" />
<text  x="501.59" y="319.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (7 samples, 0.01%)</title><rect x="1053.0" y="261" width="0.2" height="15.0" fill="rgb(214,12,53)" rx="2" ry="2" />
<text  x="1056.00" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1076.3" y="341" width="0.2" height="15.0" fill="rgb(212,67,2)" rx="2" ry="2" />
<text  x="1079.26" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (29 samples, 0.06%)</title><rect x="521.1" y="309" width="0.7" height="15.0" fill="rgb(218,148,22)" rx="2" ry="2" />
<text  x="524.08" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (47 samples, 0.10%)</title><rect x="815.4" y="149" width="1.2" height="15.0" fill="rgb(250,216,23)" rx="2" ry="2" />
<text  x="818.43" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="878.8" y="437" width="0.2" height="15.0" fill="rgb(249,67,23)" rx="2" ry="2" />
<text  x="881.83" y="447.5" ></text>
</g>
<g >
<title>auth::resource::parent (87 samples, 0.18%)</title><rect x="796.5" y="325" width="2.1" height="15.0" fill="rgb(227,200,25)" rx="2" ry="2" />
<text  x="799.46" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (59 samples, 0.12%)</title><rect x="811.4" y="213" width="1.4" height="15.0" fill="rgb(216,190,30)" rx="2" ry="2" />
<text  x="814.36" y="223.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (17 samples, 0.04%)</title><rect x="887.1" y="485" width="0.4" height="15.0" fill="rgb(211,166,22)" rx="2" ry="2" />
<text  x="890.09" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (16 samples, 0.03%)</title><rect x="630.1" y="469" width="0.4" height="15.0" fill="rgb(234,13,19)" rx="2" ry="2" />
<text  x="633.13" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1055.1" y="277" width="0.1" height="15.0" fill="rgb(233,71,35)" rx="2" ry="2" />
<text  x="1058.09" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (6 samples, 0.01%)</title><rect x="123.9" y="293" width="0.2" height="15.0" fill="rgb(205,6,22)" rx="2" ry="2" />
<text  x="126.92" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="594.2" y="373" width="0.1" height="15.0" fill="rgb(250,195,10)" rx="2" ry="2" />
<text  x="597.16" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (81 samples, 0.17%)</title><rect x="418.2" y="293" width="2.0" height="15.0" fill="rgb(217,133,22)" rx="2" ry="2" />
<text  x="421.17" y="303.5" ></text>
</g>
<g >
<title>dht::tri_compare (112 samples, 0.24%)</title><rect x="1092.2" y="229" width="2.8" height="15.0" fill="rgb(244,196,22)" rx="2" ry="2" />
<text  x="1095.21" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="1084.5" y="325" width="0.3" height="15.0" fill="rgb(231,10,23)" rx="2" ry="2" />
<text  x="1087.47" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (8 samples, 0.02%)</title><rect x="21.8" y="357" width="0.2" height="15.0" fill="rgb(244,148,10)" rx="2" ry="2" />
<text  x="24.81" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1142.9" y="117" width="0.1" height="15.0" fill="rgb(225,30,14)" rx="2" ry="2" />
<text  x="1145.88" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::never_speculating_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1076.1" y="341" width="0.2" height="15.0" fill="rgb(244,123,41)" rx="2" ry="2" />
<text  x="1079.13" y="351.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (8 samples, 0.02%)</title><rect x="1085.5" y="325" width="0.2" height="15.0" fill="rgb(217,200,35)" rx="2" ry="2" />
<text  x="1088.54" y="335.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="1160.6" y="437" width="1.0" height="15.0" fill="rgb(236,205,10)" rx="2" ry="2" />
<text  x="1163.57" y="447.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (28 samples, 0.06%)</title><rect x="125.0" y="261" width="0.7" height="15.0" fill="rgb(216,15,27)" rx="2" ry="2" />
<text  x="127.96" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%)</title><rect x="1072.7" y="293" width="0.1" height="15.0" fill="rgb(206,191,48)" rx="2" ry="2" />
<text  x="1075.66" y="303.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="219.9" y="213" width="0.2" height="15.0" fill="rgb(243,226,24)" rx="2" ry="2" />
<text  x="222.94" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (298 samples, 0.63%)</title><rect x="1156.8" y="469" width="7.4" height="15.0" fill="rgb(224,92,41)" rx="2" ry="2" />
<text  x="1159.75" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="1139.8" y="421" width="0.5" height="15.0" fill="rgb(228,77,49)" rx="2" ry="2" />
<text  x="1142.78" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (21 samples, 0.04%)</title><rect x="886.5" y="469" width="0.5" height="15.0" fill="rgb(206,65,22)" rx="2" ry="2" />
<text  x="889.51" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (6 samples, 0.01%)</title><rect x="919.8" y="373" width="0.2" height="15.0" fill="rgb(235,123,5)" rx="2" ry="2" />
<text  x="922.84" y="383.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="31.4" y="485" width="0.8" height="15.0" fill="rgb(234,62,18)" rx="2" ry="2" />
<text  x="34.37" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1145.7" y="501" width="0.2" height="15.0" fill="rgb(213,203,5)" rx="2" ry="2" />
<text  x="1148.75" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (126 samples, 0.27%)</title><rect x="551.0" y="373" width="3.1" height="15.0" fill="rgb(211,140,1)" rx="2" ry="2" />
<text  x="553.95" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="659.4" y="469" width="0.2" height="15.0" fill="rgb(230,108,29)" rx="2" ry="2" />
<text  x="662.40" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="315.6" y="197" width="0.1" height="15.0" fill="rgb(214,115,50)" rx="2" ry="2" />
<text  x="318.58" y="207.5" ></text>
</g>
<g >
<title>malloc (27 samples, 0.06%)</title><rect x="604.1" y="373" width="0.7" height="15.0" fill="rgb(237,222,52)" rx="2" ry="2" />
<text  x="607.14" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (40 samples, 0.08%)</title><rect x="324.9" y="165" width="1.0" height="15.0" fill="rgb(230,214,25)" rx="2" ry="2" />
<text  x="327.89" y="175.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (12 samples, 0.03%)</title><rect x="1142.8" y="181" width="0.3" height="15.0" fill="rgb(231,28,19)" rx="2" ry="2" />
<text  x="1145.83" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="664.8" y="485" width="0.3" height="15.0" fill="rgb(214,182,7)" rx="2" ry="2" />
<text  x="667.85" y="495.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (114 samples, 0.24%)</title><rect x="924.7" y="373" width="2.9" height="15.0" fill="rgb(250,41,4)" rx="2" ry="2" />
<text  x="927.73" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="698.1" y="469" width="0.2" height="15.0" fill="rgb(251,112,35)" rx="2" ry="2" />
<text  x="701.12" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (8 samples, 0.02%)</title><rect x="913.3" y="309" width="0.2" height="15.0" fill="rgb(209,86,51)" rx="2" ry="2" />
<text  x="916.27" y="319.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.01%)</title><rect x="22.6" y="421" width="0.1" height="15.0" fill="rgb(237,181,49)" rx="2" ry="2" />
<text  x="25.58" y="431.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (133 samples, 0.28%)</title><rect x="1037.8" y="165" width="3.3" height="15.0" fill="rgb(227,60,8)" rx="2" ry="2" />
<text  x="1040.80" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (111 samples, 0.23%)</title><rect x="669.7" y="485" width="2.8" height="15.0" fill="rgb(206,11,17)" rx="2" ry="2" />
<text  x="672.74" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1148.0" y="485" width="0.1" height="15.0" fill="rgb(232,222,5)" rx="2" ry="2" />
<text  x="1150.97" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="810.8" y="213" width="0.1" height="15.0" fill="rgb(206,113,22)" rx="2" ry="2" />
<text  x="813.79" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (5 samples, 0.01%)</title><rect x="1155.5" y="453" width="0.1" height="15.0" fill="rgb(223,46,1)" rx="2" ry="2" />
<text  x="1158.51" y="463.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="1045.8" y="213" width="1.7" height="15.0" fill="rgb(209,127,15)" rx="2" ry="2" />
<text  x="1048.76" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (376 samples, 0.80%)</title><rect x="66.3" y="421" width="9.4" height="15.0" fill="rgb(209,18,28)" rx="2" ry="2" />
<text  x="69.31" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1175.9" y="421" width="0.2" height="15.0" fill="rgb(212,192,12)" rx="2" ry="2" />
<text  x="1178.90" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,254 samples, 97.84%)</title><rect x="23.4" y="549" width="1154.5" height="15.0" fill="rgb(210,145,11)" rx="2" ry="2" />
<text  x="26.40" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="841.6" y="325" width="0.1" height="15.0" fill="rgb(252,180,43)" rx="2" ry="2" />
<text  x="844.59" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (10 samples, 0.02%)</title><rect x="280.8" y="373" width="0.3" height="15.0" fill="rgb(242,225,53)" rx="2" ry="2" />
<text  x="283.81" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (5 samples, 0.01%)</title><rect x="1041.9" y="165" width="0.1" height="15.0" fill="rgb(228,183,46)" rx="2" ry="2" />
<text  x="1044.91" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.07%)</title><rect x="854.4" y="405" width="0.7" height="15.0" fill="rgb(228,75,17)" rx="2" ry="2" />
<text  x="857.37" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (19 samples, 0.04%)</title><rect x="256.2" y="309" width="0.4" height="15.0" fill="rgb(216,83,31)" rx="2" ry="2" />
<text  x="259.15" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="924.6" y="341" width="0.1" height="15.0" fill="rgb(208,214,14)" rx="2" ry="2" />
<text  x="927.55" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (21 samples, 0.04%)</title><rect x="963.8" y="325" width="0.5" height="15.0" fill="rgb(239,190,28)" rx="2" ry="2" />
<text  x="966.81" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (15 samples, 0.03%)</title><rect x="526.1" y="325" width="0.4" height="15.0" fill="rgb(213,27,0)" rx="2" ry="2" />
<text  x="529.12" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (12 samples, 0.03%)</title><rect x="47.6" y="485" width="0.3" height="15.0" fill="rgb(231,133,46)" rx="2" ry="2" />
<text  x="50.64" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (15 samples, 0.03%)</title><rect x="447.2" y="261" width="0.4" height="15.0" fill="rgb(243,199,10)" rx="2" ry="2" />
<text  x="450.22" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (10 samples, 0.02%)</title><rect x="985.8" y="341" width="0.3" height="15.0" fill="rgb(231,73,31)" rx="2" ry="2" />
<text  x="988.80" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="438.7" y="341" width="0.1" height="15.0" fill="rgb(236,61,39)" rx="2" ry="2" />
<text  x="441.71" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1174.8" y="437" width="0.2" height="15.0" fill="rgb(205,33,30)" rx="2" ry="2" />
<text  x="1177.82" y="447.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (86 samples, 0.18%)</title><rect x="350.6" y="165" width="2.1" height="15.0" fill="rgb(251,143,36)" rx="2" ry="2" />
<text  x="353.58" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%)</title><rect x="981.2" y="325" width="0.7" height="15.0" fill="rgb(225,188,16)" rx="2" ry="2" />
<text  x="984.24" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (10 samples, 0.02%)</title><rect x="142.9" y="261" width="0.3" height="15.0" fill="rgb(234,140,12)" rx="2" ry="2" />
<text  x="145.91" y="271.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (9 samples, 0.02%)</title><rect x="605.0" y="389" width="0.3" height="15.0" fill="rgb(226,35,40)" rx="2" ry="2" />
<text  x="608.04" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (41 samples, 0.09%)</title><rect x="314.4" y="165" width="1.0" height="15.0" fill="rgb(227,197,7)" rx="2" ry="2" />
<text  x="317.38" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (13 samples, 0.03%)</title><rect x="409.2" y="213" width="0.3" height="15.0" fill="rgb(236,74,15)" rx="2" ry="2" />
<text  x="412.16" y="223.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (96 samples, 0.20%)</title><rect x="626.5" y="421" width="2.4" height="15.0" fill="rgb(229,121,29)" rx="2" ry="2" />
<text  x="629.53" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (11 samples, 0.02%)</title><rect x="821.4" y="117" width="0.3" height="15.0" fill="rgb(216,229,46)" rx="2" ry="2" />
<text  x="824.42" y="127.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%)</title><rect x="56.2" y="469" width="0.2" height="15.0" fill="rgb(211,187,25)" rx="2" ry="2" />
<text  x="59.23" y="479.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="791.0" y="357" width="0.1" height="15.0" fill="rgb(224,222,48)" rx="2" ry="2" />
<text  x="793.97" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (9 samples, 0.02%)</title><rect x="554.3" y="389" width="0.3" height="15.0" fill="rgb(240,55,47)" rx="2" ry="2" />
<text  x="557.35" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (7 samples, 0.01%)</title><rect x="187.2" y="69" width="0.2" height="15.0" fill="rgb(211,60,47)" rx="2" ry="2" />
<text  x="190.24" y="79.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (22 samples, 0.05%)</title><rect x="229.5" y="229" width="0.5" height="15.0" fill="rgb(233,65,5)" rx="2" ry="2" />
<text  x="232.47" y="239.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (15 samples, 0.03%)</title><rect x="440.8" y="325" width="0.3" height="15.0" fill="rgb(247,225,31)" rx="2" ry="2" />
<text  x="443.76" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (12 samples, 0.03%)</title><rect x="272.3" y="293" width="0.3" height="15.0" fill="rgb(245,98,3)" rx="2" ry="2" />
<text  x="275.33" y="303.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.02%)</title><rect x="157.7" y="229" width="0.3" height="15.0" fill="rgb(254,111,7)" rx="2" ry="2" />
<text  x="160.74" y="239.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (12 samples, 0.03%)</title><rect x="934.0" y="389" width="0.3" height="15.0" fill="rgb(222,134,44)" rx="2" ry="2" />
<text  x="936.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="1134.6" y="421" width="0.2" height="15.0" fill="rgb(250,176,37)" rx="2" ry="2" />
<text  x="1137.59" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (192 samples, 0.41%)</title><rect x="242.9" y="261" width="4.8" height="15.0" fill="rgb(206,11,43)" rx="2" ry="2" />
<text  x="245.90" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (28 samples, 0.06%)</title><rect x="264.4" y="357" width="0.7" height="15.0" fill="rgb(224,9,46)" rx="2" ry="2" />
<text  x="267.39" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (184 samples, 0.39%)</title><rect x="591.9" y="421" width="4.6" height="15.0" fill="rgb(252,13,52)" rx="2" ry="2" />
<text  x="594.94" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="1050.8" y="229" width="0.5" height="15.0" fill="rgb(209,129,11)" rx="2" ry="2" />
<text  x="1053.85" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (47 samples, 0.10%)</title><rect x="509.5" y="213" width="1.2" height="15.0" fill="rgb(233,42,33)" rx="2" ry="2" />
<text  x="512.55" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%)</title><rect x="886.7" y="341" width="0.2" height="15.0" fill="rgb(215,14,33)" rx="2" ry="2" />
<text  x="889.71" y="351.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="671.6" y="421" width="0.9" height="15.0" fill="rgb(211,199,38)" rx="2" ry="2" />
<text  x="674.58" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (78 samples, 0.16%)</title><rect x="879.9" y="469" width="1.9" height="15.0" fill="rgb(217,65,4)" rx="2" ry="2" />
<text  x="882.90" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="446.1" y="229" width="1.1" height="15.0" fill="rgb(240,118,10)" rx="2" ry="2" />
<text  x="449.15" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1144.3" y="501" width="0.2" height="15.0" fill="rgb(220,169,52)" rx="2" ry="2" />
<text  x="1147.32" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (7 samples, 0.01%)</title><rect x="16.2" y="277" width="0.1" height="15.0" fill="rgb(211,17,47)" rx="2" ry="2" />
<text  x="19.17" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (22 samples, 0.05%)</title><rect x="101.7" y="421" width="0.5" height="15.0" fill="rgb(221,139,19)" rx="2" ry="2" />
<text  x="104.68" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (49 samples, 0.10%)</title><rect x="1068.3" y="309" width="1.2" height="15.0" fill="rgb(242,165,12)" rx="2" ry="2" />
<text  x="1071.27" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (296 samples, 0.63%)</title><rect x="15.6" y="565" width="7.4" height="15.0" fill="rgb(207,213,18)" rx="2" ry="2" />
<text  x="18.57" y="575.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (87 samples, 0.18%)</title><rect x="836.9" y="325" width="2.2" height="15.0" fill="rgb(206,119,29)" rx="2" ry="2" />
<text  x="839.92" y="335.5" ></text>
</g>
<g >
<title>row::compact_and_expire (5 samples, 0.01%)</title><rect x="695.5" y="293" width="0.2" height="15.0" fill="rgb(215,127,23)" rx="2" ry="2" />
<text  x="698.55" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (34 samples, 0.07%)</title><rect x="452.0" y="293" width="0.9" height="15.0" fill="rgb(218,200,36)" rx="2" ry="2" />
<text  x="455.04" y="303.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="271.9" y="293" width="0.2" height="15.0" fill="rgb(227,80,35)" rx="2" ry="2" />
<text  x="274.93" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (21 samples, 0.04%)</title><rect x="147.2" y="245" width="0.5" height="15.0" fill="rgb(216,132,25)" rx="2" ry="2" />
<text  x="150.18" y="255.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (79 samples, 0.17%)</title><rect x="1135.8" y="405" width="2.0" height="15.0" fill="rgb(215,23,12)" rx="2" ry="2" />
<text  x="1138.84" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (99 samples, 0.21%)</title><rect x="875.1" y="389" width="2.5" height="15.0" fill="rgb(212,157,32)" rx="2" ry="2" />
<text  x="878.08" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (6 samples, 0.01%)</title><rect x="210.0" y="133" width="0.1" height="15.0" fill="rgb(229,87,43)" rx="2" ry="2" />
<text  x="212.95" y="143.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (6 samples, 0.01%)</title><rect x="1035.4" y="197" width="0.1" height="15.0" fill="rgb(215,68,13)" rx="2" ry="2" />
<text  x="1038.37" y="207.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (146 samples, 0.31%)</title><rect x="759.7" y="325" width="3.6" height="15.0" fill="rgb(213,49,38)" rx="2" ry="2" />
<text  x="762.69" y="335.5" ></text>
</g>
<g >
<title>operator delete (62 samples, 0.13%)</title><rect x="563.1" y="325" width="1.6" height="15.0" fill="rgb(217,113,32)" rx="2" ry="2" />
<text  x="566.13" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (65 samples, 0.14%)</title><rect x="16.1" y="357" width="1.6" height="15.0" fill="rgb(207,24,19)" rx="2" ry="2" />
<text  x="19.12" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (5 samples, 0.01%)</title><rect x="44.3" y="501" width="0.1" height="15.0" fill="rgb(227,81,44)" rx="2" ry="2" />
<text  x="47.29" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (11 samples, 0.02%)</title><rect x="327.6" y="165" width="0.3" height="15.0" fill="rgb(237,138,7)" rx="2" ry="2" />
<text  x="330.61" y="175.5" ></text>
</g>
<g >
<title>reader_permit::consume (23 samples, 0.05%)</title><rect x="513.4" y="165" width="0.6" height="15.0" fill="rgb(228,224,45)" rx="2" ry="2" />
<text  x="516.44" y="175.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="365.3" y="197" width="0.1" height="15.0" fill="rgb(205,119,24)" rx="2" ry="2" />
<text  x="368.30" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="96.5" y="421" width="0.3" height="15.0" fill="rgb(211,180,22)" rx="2" ry="2" />
<text  x="99.46" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (80 samples, 0.17%)</title><rect x="575.7" y="373" width="2.0" height="15.0" fill="rgb(230,148,27)" rx="2" ry="2" />
<text  x="578.69" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (564 samples, 1.19%)</title><rect x="560.9" y="341" width="14.1" height="15.0" fill="rgb(251,82,40)" rx="2" ry="2" />
<text  x="563.89" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (27 samples, 0.06%)</title><rect x="605.3" y="405" width="0.7" height="15.0" fill="rgb(223,0,26)" rx="2" ry="2" />
<text  x="608.32" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (225 samples, 0.48%)</title><rect x="873.3" y="453" width="5.7" height="15.0" fill="rgb(235,44,35)" rx="2" ry="2" />
<text  x="876.33" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (11 samples, 0.02%)</title><rect x="217.0" y="117" width="0.3" height="15.0" fill="rgb(206,7,48)" rx="2" ry="2" />
<text  x="220.02" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="573.1" y="293" width="0.2" height="15.0" fill="rgb(233,144,17)" rx="2" ry="2" />
<text  x="576.07" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="489.5" y="181" width="0.4" height="15.0" fill="rgb(235,205,3)" rx="2" ry="2" />
<text  x="492.53" y="191.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.01%)</title><rect x="15.6" y="501" width="0.2" height="15.0" fill="rgb(231,64,9)" rx="2" ry="2" />
<text  x="18.64" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%)</title><rect x="625.4" y="389" width="0.3" height="15.0" fill="rgb(242,149,1)" rx="2" ry="2" />
<text  x="628.43" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="918.1" y="309" width="0.7" height="15.0" fill="rgb(240,214,9)" rx="2" ry="2" />
<text  x="921.11" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (39 samples, 0.08%)</title><rect x="784.5" y="341" width="1.0" height="15.0" fill="rgb(211,65,45)" rx="2" ry="2" />
<text  x="787.48" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (75 samples, 0.16%)</title><rect x="772.4" y="357" width="1.8" height="15.0" fill="rgb(236,200,5)" rx="2" ry="2" />
<text  x="775.37" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="569.8" y="277" width="0.1" height="15.0" fill="rgb(212,199,31)" rx="2" ry="2" />
<text  x="572.82" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (387 samples, 0.82%)</title><rect x="34.6" y="485" width="9.6" height="15.0" fill="rgb(227,73,51)" rx="2" ry="2" />
<text  x="37.56" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="572.9" y="293" width="0.2" height="15.0" fill="rgb(253,203,34)" rx="2" ry="2" />
<text  x="575.87" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (24 samples, 0.05%)</title><rect x="695.1" y="309" width="0.6" height="15.0" fill="rgb(229,54,53)" rx="2" ry="2" />
<text  x="698.07" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="438.4" y="341" width="0.3" height="15.0" fill="rgb(208,206,39)" rx="2" ry="2" />
<text  x="441.44" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (40 samples, 0.08%)</title><rect x="827.0" y="245" width="1.0" height="15.0" fill="rgb(231,19,49)" rx="2" ry="2" />
<text  x="829.96" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1124.9" y="405" width="0.3" height="15.0" fill="rgb(231,141,31)" rx="2" ry="2" />
<text  x="1127.93" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (64 samples, 0.14%)</title><rect x="1153.8" y="453" width="1.6" height="15.0" fill="rgb(235,139,13)" rx="2" ry="2" />
<text  x="1156.81" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (5 samples, 0.01%)</title><rect x="804.3" y="229" width="0.1" height="15.0" fill="rgb(226,10,10)" rx="2" ry="2" />
<text  x="807.27" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (91 samples, 0.19%)</title><rect x="993.6" y="309" width="2.3" height="15.0" fill="rgb(238,47,16)" rx="2" ry="2" />
<text  x="996.62" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (9 samples, 0.02%)</title><rect x="609.8" y="437" width="0.2" height="15.0" fill="rgb(219,226,7)" rx="2" ry="2" />
<text  x="612.76" y="447.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="1007.1" y="261" width="1.7" height="15.0" fill="rgb(224,76,54)" rx="2" ry="2" />
<text  x="1010.09" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="509.8" y="181" width="0.7" height="15.0" fill="rgb(249,14,24)" rx="2" ry="2" />
<text  x="512.85" y="191.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (427 samples, 0.90%)</title><rect x="467.6" y="309" width="10.7" height="15.0" fill="rgb(240,155,28)" rx="2" ry="2" />
<text  x="470.61" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (163 samples, 0.34%)</title><rect x="402.5" y="197" width="4.1" height="15.0" fill="rgb(209,162,12)" rx="2" ry="2" />
<text  x="405.49" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (67 samples, 0.14%)</title><rect x="396.5" y="213" width="1.7" height="15.0" fill="rgb(214,48,39)" rx="2" ry="2" />
<text  x="399.48" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="1059.2" y="213" width="0.6" height="15.0" fill="rgb(235,216,22)" rx="2" ry="2" />
<text  x="1062.21" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="432.4" y="357" width="0.2" height="15.0" fill="rgb(229,137,5)" rx="2" ry="2" />
<text  x="435.37" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (99 samples, 0.21%)</title><rect x="752.0" y="357" width="2.5" height="15.0" fill="rgb(218,128,46)" rx="2" ry="2" />
<text  x="754.98" y="367.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (15 samples, 0.03%)</title><rect x="1135.2" y="421" width="0.3" height="15.0" fill="rgb(235,223,3)" rx="2" ry="2" />
<text  x="1138.16" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="229.8" y="213" width="0.2" height="15.0" fill="rgb(235,139,6)" rx="2" ry="2" />
<text  x="232.85" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="424.9" y="373" width="0.2" height="15.0" fill="rgb(208,91,21)" rx="2" ry="2" />
<text  x="427.91" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="196.4" y="101" width="0.2" height="15.0" fill="rgb(242,121,39)" rx="2" ry="2" />
<text  x="199.37" y="111.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (15 samples, 0.03%)</title><rect x="1054.6" y="277" width="0.4" height="15.0" fill="rgb(230,165,5)" rx="2" ry="2" />
<text  x="1057.59" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (8 samples, 0.02%)</title><rect x="111.8" y="373" width="0.2" height="15.0" fill="rgb(210,56,13)" rx="2" ry="2" />
<text  x="114.79" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1051.5" y="261" width="0.2" height="15.0" fill="rgb(232,92,26)" rx="2" ry="2" />
<text  x="1054.55" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (217 samples, 0.46%)</title><rect x="814.1" y="165" width="5.4" height="15.0" fill="rgb(236,136,21)" rx="2" ry="2" />
<text  x="817.08" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="946.2" y="405" width="0.2" height="15.0" fill="rgb(250,108,33)" rx="2" ry="2" />
<text  x="949.17" y="415.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="659.9" y="453" width="0.3" height="15.0" fill="rgb(231,212,44)" rx="2" ry="2" />
<text  x="662.88" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (133 samples, 0.28%)</title><rect x="206.2" y="117" width="3.4" height="15.0" fill="rgb(235,62,51)" rx="2" ry="2" />
<text  x="209.23" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (40 samples, 0.08%)</title><rect x="1159.2" y="405" width="1.0" height="15.0" fill="rgb(233,155,40)" rx="2" ry="2" />
<text  x="1162.25" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="872.9" y="437" width="0.2" height="15.0" fill="rgb(243,222,25)" rx="2" ry="2" />
<text  x="875.94" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (375 samples, 0.79%)</title><rect x="813.7" y="181" width="9.4" height="15.0" fill="rgb(242,119,19)" rx="2" ry="2" />
<text  x="816.71" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1078.5" y="293" width="0.6" height="15.0" fill="rgb(239,131,32)" rx="2" ry="2" />
<text  x="1081.45" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (8 samples, 0.02%)</title><rect x="612.4" y="437" width="0.2" height="15.0" fill="rgb(226,196,37)" rx="2" ry="2" />
<text  x="615.43" y="447.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="587.4" y="389" width="0.5" height="15.0" fill="rgb(215,79,52)" rx="2" ry="2" />
<text  x="590.37" y="399.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (17 samples, 0.04%)</title><rect x="768.3" y="373" width="0.4" height="15.0" fill="rgb(245,123,17)" rx="2" ry="2" />
<text  x="771.30" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="568.2" y="293" width="0.2" height="15.0" fill="rgb(250,167,39)" rx="2" ry="2" />
<text  x="571.20" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="256.7" y="309" width="0.2" height="15.0" fill="rgb(228,38,8)" rx="2" ry="2" />
<text  x="259.70" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,786 samples, 3.78%)</title><rect x="167.8" y="181" width="44.6" height="15.0" fill="rgb(220,67,1)" rx="2" ry="2" />
<text  x="170.80" y="191.5" >muta..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (21 samples, 0.04%)</title><rect x="714.7" y="421" width="0.5" height="15.0" fill="rgb(236,174,9)" rx="2" ry="2" />
<text  x="717.72" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="916.4" y="341" width="0.3" height="15.0" fill="rgb(251,219,4)" rx="2" ry="2" />
<text  x="919.37" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (9 samples, 0.02%)</title><rect x="700.7" y="453" width="0.2" height="15.0" fill="rgb(229,229,9)" rx="2" ry="2" />
<text  x="703.66" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (17 samples, 0.04%)</title><rect x="259.2" y="325" width="0.5" height="15.0" fill="rgb(237,149,31)" rx="2" ry="2" />
<text  x="262.25" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (281 samples, 0.59%)</title><rect x="15.8" y="501" width="7.0" height="15.0" fill="rgb(249,134,47)" rx="2" ry="2" />
<text  x="18.82" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (514 samples, 1.09%)</title><rect x="708.5" y="485" width="12.8" height="15.0" fill="rgb(224,161,32)" rx="2" ry="2" />
<text  x="711.48" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="675.1" y="469" width="0.6" height="15.0" fill="rgb(223,8,53)" rx="2" ry="2" />
<text  x="678.05" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (437 samples, 0.92%)</title><rect x="696.4" y="501" width="10.9" height="15.0" fill="rgb(219,66,13)" rx="2" ry="2" />
<text  x="699.42" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%)</title><rect x="584.2" y="341" width="0.2" height="15.0" fill="rgb(211,224,39)" rx="2" ry="2" />
<text  x="587.20" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1044.9" y="229" width="0.1" height="15.0" fill="rgb(213,223,38)" rx="2" ry="2" />
<text  x="1047.86" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (25 samples, 0.05%)</title><rect x="591.3" y="421" width="0.6" height="15.0" fill="rgb(224,190,13)" rx="2" ry="2" />
<text  x="594.31" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%)</title><rect x="242.0" y="229" width="0.2" height="15.0" fill="rgb(210,152,23)" rx="2" ry="2" />
<text  x="244.95" y="239.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (15 samples, 0.03%)</title><rect x="580.0" y="341" width="0.3" height="15.0" fill="rgb(224,206,26)" rx="2" ry="2" />
<text  x="582.96" y="351.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%)</title><rect x="949.4" y="373" width="1.3" height="15.0" fill="rgb(235,108,47)" rx="2" ry="2" />
<text  x="952.44" y="383.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (432 samples, 0.91%)</title><rect x="1178.0" y="629" width="10.8" height="15.0" fill="rgb(248,224,32)" rx="2" ry="2" />
<text  x="1181.04" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="152.3" y="165" width="0.5" height="15.0" fill="rgb(205,134,21)" rx="2" ry="2" />
<text  x="155.30" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (53 samples, 0.11%)</title><rect x="518.1" y="277" width="1.3" height="15.0" fill="rgb(212,101,14)" rx="2" ry="2" />
<text  x="521.11" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (60 samples, 0.13%)</title><rect x="963.0" y="357" width="1.5" height="15.0" fill="rgb(207,71,36)" rx="2" ry="2" />
<text  x="966.04" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (92 samples, 0.19%)</title><rect x="820.6" y="149" width="2.3" height="15.0" fill="rgb(222,69,51)" rx="2" ry="2" />
<text  x="823.64" y="159.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="851.1" y="405" width="0.1" height="15.0" fill="rgb(240,219,20)" rx="2" ry="2" />
<text  x="854.07" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (29 samples, 0.06%)</title><rect x="885.6" y="501" width="0.7" height="15.0" fill="rgb(222,85,45)" rx="2" ry="2" />
<text  x="888.62" y="511.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (24 samples, 0.05%)</title><rect x="667.1" y="485" width="0.6" height="15.0" fill="rgb(241,19,36)" rx="2" ry="2" />
<text  x="670.14" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (28 samples, 0.06%)</title><rect x="19.3" y="293" width="0.7" height="15.0" fill="rgb(241,2,15)" rx="2" ry="2" />
<text  x="22.26" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="80.6" y="453" width="0.1" height="15.0" fill="rgb(238,118,39)" rx="2" ry="2" />
<text  x="83.61" y="463.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (419 samples, 0.89%)</title><rect x="812.8" y="213" width="10.5" height="15.0" fill="rgb(250,191,36)" rx="2" ry="2" />
<text  x="815.83" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (226 samples, 0.48%)</title><rect x="212.6" y="181" width="5.7" height="15.0" fill="rgb(243,157,33)" rx="2" ry="2" />
<text  x="215.65" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (37 samples, 0.08%)</title><rect x="681.0" y="453" width="0.9" height="15.0" fill="rgb(249,207,51)" rx="2" ry="2" />
<text  x="683.97" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (13 samples, 0.03%)</title><rect x="211.4" y="149" width="0.3" height="15.0" fill="rgb(235,87,21)" rx="2" ry="2" />
<text  x="214.38" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (80 samples, 0.17%)</title><rect x="655.9" y="453" width="2.0" height="15.0" fill="rgb(212,100,44)" rx="2" ry="2" />
<text  x="658.93" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (202 samples, 0.43%)</title><rect x="1129.5" y="421" width="5.1" height="15.0" fill="rgb(249,57,53)" rx="2" ry="2" />
<text  x="1132.55" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="42.4" y="453" width="0.2" height="15.0" fill="rgb(211,100,13)" rx="2" ry="2" />
<text  x="45.45" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (16 samples, 0.03%)</title><rect x="1008.8" y="261" width="0.4" height="15.0" fill="rgb(245,162,36)" rx="2" ry="2" />
<text  x="1011.79" y="271.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (19 samples, 0.04%)</title><rect x="529.7" y="325" width="0.5" height="15.0" fill="rgb(240,21,9)" rx="2" ry="2" />
<text  x="532.74" y="335.5" ></text>
</g>
<g >
<title>tracing::add_table_name (8 samples, 0.02%)</title><rect x="1140.3" y="421" width="0.2" height="15.0" fill="rgb(225,223,28)" rx="2" ry="2" />
<text  x="1143.31" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (28 samples, 0.06%)</title><rect x="1118.3" y="373" width="0.7" height="15.0" fill="rgb(246,227,45)" rx="2" ry="2" />
<text  x="1121.27" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="151.7" y="197" width="0.2" height="15.0" fill="rgb(211,117,17)" rx="2" ry="2" />
<text  x="154.72" y="207.5" ></text>
</g>
<g >
<title>dht::shard_of (16 samples, 0.03%)</title><rect x="1010.6" y="293" width="0.4" height="15.0" fill="rgb(207,136,0)" rx="2" ry="2" />
<text  x="1013.64" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="406.2" y="181" width="0.3" height="15.0" fill="rgb(241,73,39)" rx="2" ry="2" />
<text  x="409.21" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="664.6" y="469" width="0.2" height="15.0" fill="rgb(225,77,3)" rx="2" ry="2" />
<text  x="667.62" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%)</title><rect x="51.9" y="485" width="0.3" height="15.0" fill="rgb(221,184,7)" rx="2" ry="2" />
<text  x="54.93" y="495.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (176 samples, 0.37%)</title><rect x="472.9" y="277" width="4.4" height="15.0" fill="rgb(235,58,2)" rx="2" ry="2" />
<text  x="475.90" y="287.5" ></text>
</g>
<g >
<title>database::find_column_family (62 samples, 0.13%)</title><rect x="1067.9" y="341" width="1.6" height="15.0" fill="rgb(248,168,19)" rx="2" ry="2" />
<text  x="1070.95" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (21 samples, 0.04%)</title><rect x="886.5" y="453" width="0.5" height="15.0" fill="rgb(213,35,28)" rx="2" ry="2" />
<text  x="889.51" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%)</title><rect x="416.1" y="261" width="0.4" height="15.0" fill="rgb(216,161,10)" rx="2" ry="2" />
<text  x="419.15" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.02%)</title><rect x="236.3" y="213" width="0.3" height="15.0" fill="rgb(235,41,44)" rx="2" ry="2" />
<text  x="239.34" y="223.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (54 samples, 0.11%)</title><rect x="935.8" y="373" width="1.3" height="15.0" fill="rgb(210,174,42)" rx="2" ry="2" />
<text  x="938.76" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (374 samples, 0.79%)</title><rect x="1034.2" y="213" width="9.3" height="15.0" fill="rgb(210,208,17)" rx="2" ry="2" />
<text  x="1037.20" y="223.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (5 samples, 0.01%)</title><rect x="964.8" y="373" width="0.1" height="15.0" fill="rgb(220,181,52)" rx="2" ry="2" />
<text  x="967.79" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (116 samples, 0.25%)</title><rect x="1045.5" y="229" width="2.9" height="15.0" fill="rgb(226,27,30)" rx="2" ry="2" />
<text  x="1048.51" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="456.2" y="261" width="0.8" height="15.0" fill="rgb(237,3,50)" rx="2" ry="2" />
<text  x="459.21" y="271.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="469" width="0.8" height="15.0" fill="rgb(238,224,44)" rx="2" ry="2" />
<text  x="1145.58" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (6 samples, 0.01%)</title><rect x="393.2" y="229" width="0.1" height="15.0" fill="rgb(234,27,3)" rx="2" ry="2" />
<text  x="396.16" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="643.7" y="485" width="0.4" height="15.0" fill="rgb(237,146,47)" rx="2" ry="2" />
<text  x="646.68" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (10 samples, 0.02%)</title><rect x="874.7" y="389" width="0.2" height="15.0" fill="rgb(233,215,53)" rx="2" ry="2" />
<text  x="877.68" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (71 samples, 0.15%)</title><rect x="880.1" y="453" width="1.7" height="15.0" fill="rgb(234,13,10)" rx="2" ry="2" />
<text  x="883.07" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%)</title><rect x="1141.8" y="437" width="0.8" height="15.0" fill="rgb(228,201,41)" rx="2" ry="2" />
<text  x="1144.75" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="871.7" y="341" width="0.4" height="15.0" fill="rgb(213,9,28)" rx="2" ry="2" />
<text  x="874.69" y="351.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.02%)</title><rect x="23.0" y="533" width="0.3" height="15.0" fill="rgb(208,175,33)" rx="2" ry="2" />
<text  x="26.03" y="543.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (55 samples, 0.12%)</title><rect x="74.3" y="405" width="1.4" height="15.0" fill="rgb(252,98,41)" rx="2" ry="2" />
<text  x="77.32" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="794.9" y="293" width="0.3" height="15.0" fill="rgb(247,206,19)" rx="2" ry="2" />
<text  x="797.89" y="303.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="947.8" y="373" width="0.5" height="15.0" fill="rgb(250,110,30)" rx="2" ry="2" />
<text  x="950.77" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (89 samples, 0.19%)</title><rect x="964.9" y="389" width="2.3" height="15.0" fill="rgb(251,113,42)" rx="2" ry="2" />
<text  x="967.94" y="399.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (15 samples, 0.03%)</title><rect x="137.2" y="229" width="0.3" height="15.0" fill="rgb(213,68,24)" rx="2" ry="2" />
<text  x="140.17" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="642.3" y="485" width="0.1" height="15.0" fill="rgb(245,46,5)" rx="2" ry="2" />
<text  x="645.26" y="495.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,589 samples, 9.71%)</title><rect x="429.8" y="405" width="114.5" height="15.0" fill="rgb(228,118,20)" rx="2" ry="2" />
<text  x="432.77" y="415.5" >mutation_sourc..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (7 samples, 0.01%)</title><rect x="588.7" y="405" width="0.1" height="15.0" fill="rgb(222,144,7)" rx="2" ry="2" />
<text  x="591.67" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="970.5" y="389" width="0.1" height="15.0" fill="rgb(207,28,19)" rx="2" ry="2" />
<text  x="973.48" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (13 samples, 0.03%)</title><rect x="883.8" y="485" width="0.3" height="15.0" fill="rgb(205,14,1)" rx="2" ry="2" />
<text  x="886.77" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.01%)</title><rect x="625.3" y="373" width="0.1" height="15.0" fill="rgb(206,114,48)" rx="2" ry="2" />
<text  x="628.26" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (130 samples, 0.27%)</title><rect x="222.7" y="181" width="3.2" height="15.0" fill="rgb(251,152,52)" rx="2" ry="2" />
<text  x="225.68" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="220.2" y="213" width="0.2" height="15.0" fill="rgb(254,139,13)" rx="2" ry="2" />
<text  x="223.21" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (772 samples, 1.63%)</title><rect x="1085.2" y="341" width="19.3" height="15.0" fill="rgb(231,86,33)" rx="2" ry="2" />
<text  x="1088.22" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="202.5" y="101" width="0.4" height="15.0" fill="rgb(238,170,1)" rx="2" ry="2" />
<text  x="205.54" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (12 samples, 0.03%)</title><rect x="920.0" y="373" width="0.3" height="15.0" fill="rgb(214,49,36)" rx="2" ry="2" />
<text  x="922.98" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="1061.0" y="181" width="0.2" height="15.0" fill="rgb(232,163,36)" rx="2" ry="2" />
<text  x="1063.98" y="191.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (40 samples, 0.08%)</title><rect x="216.4" y="149" width="1.0" height="15.0" fill="rgb(247,162,24)" rx="2" ry="2" />
<text  x="219.42" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (7 samples, 0.01%)</title><rect x="229.3" y="229" width="0.2" height="15.0" fill="rgb(230,85,49)" rx="2" ry="2" />
<text  x="232.30" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="830.6" y="261" width="0.3" height="15.0" fill="rgb(236,23,33)" rx="2" ry="2" />
<text  x="833.63" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="427.6" y="405" width="0.4" height="15.0" fill="rgb(240,177,8)" rx="2" ry="2" />
<text  x="430.60" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (22 samples, 0.05%)</title><rect x="788.4" y="357" width="0.5" height="15.0" fill="rgb(227,95,39)" rx="2" ry="2" />
<text  x="791.37" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (56 samples, 0.12%)</title><rect x="413.9" y="245" width="1.4" height="15.0" fill="rgb(205,132,2)" rx="2" ry="2" />
<text  x="416.92" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (103 samples, 0.22%)</title><rect x="1135.5" y="421" width="2.6" height="15.0" fill="rgb(225,215,24)" rx="2" ry="2" />
<text  x="1138.54" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="444.6" y="245" width="0.2" height="15.0" fill="rgb(220,42,1)" rx="2" ry="2" />
<text  x="447.60" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (40 samples, 0.08%)</title><rect x="737.4" y="389" width="1.0" height="15.0" fill="rgb(210,142,17)" rx="2" ry="2" />
<text  x="740.40" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (8 samples, 0.02%)</title><rect x="534.3" y="277" width="0.2" height="15.0" fill="rgb(243,58,19)" rx="2" ry="2" />
<text  x="537.26" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="547.5" y="421" width="0.1" height="15.0" fill="rgb(209,115,54)" rx="2" ry="2" />
<text  x="550.46" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (5 samples, 0.01%)</title><rect x="822.9" y="149" width="0.2" height="15.0" fill="rgb(220,11,35)" rx="2" ry="2" />
<text  x="825.94" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (8 samples, 0.02%)</title><rect x="657.2" y="373" width="0.2" height="15.0" fill="rgb(229,96,50)" rx="2" ry="2" />
<text  x="660.18" y="383.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (68 samples, 0.14%)</title><rect x="800.4" y="293" width="1.7" height="15.0" fill="rgb(236,182,9)" rx="2" ry="2" />
<text  x="803.43" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (285 samples, 0.60%)</title><rect x="15.8" y="517" width="7.1" height="15.0" fill="rgb(254,98,32)" rx="2" ry="2" />
<text  x="18.82" y="527.5" ></text>
</g>
<g >
<title>schema::column_at (19 samples, 0.04%)</title><rect x="390.2" y="181" width="0.4" height="15.0" fill="rgb(241,106,6)" rx="2" ry="2" />
<text  x="393.16" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1069.7" y="309" width="0.3" height="15.0" fill="rgb(248,158,25)" rx="2" ry="2" />
<text  x="1072.67" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="1142.8" y="309" width="0.6" height="15.0" fill="rgb(249,98,14)" rx="2" ry="2" />
<text  x="1145.83" y="319.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (10 samples, 0.02%)</title><rect x="65.3" y="453" width="0.3" height="15.0" fill="rgb(249,41,11)" rx="2" ry="2" />
<text  x="68.31" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (27 samples, 0.06%)</title><rect x="541.6" y="341" width="0.6" height="15.0" fill="rgb(246,10,52)" rx="2" ry="2" />
<text  x="544.57" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="629.2" y="437" width="0.2" height="15.0" fill="rgb(245,59,35)" rx="2" ry="2" />
<text  x="632.23" y="447.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (10 samples, 0.02%)</title><rect x="554.1" y="389" width="0.2" height="15.0" fill="rgb(227,171,39)" rx="2" ry="2" />
<text  x="557.10" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%)</title><rect x="1045.3" y="229" width="0.2" height="15.0" fill="rgb(234,129,45)" rx="2" ry="2" />
<text  x="1048.26" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="139.4" y="261" width="0.4" height="15.0" fill="rgb(241,104,37)" rx="2" ry="2" />
<text  x="142.39" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (80 samples, 0.17%)</title><rect x="983.6" y="325" width="2.0" height="15.0" fill="rgb(221,41,34)" rx="2" ry="2" />
<text  x="986.63" y="335.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (29 samples, 0.06%)</title><rect x="311.8" y="181" width="0.7" height="15.0" fill="rgb(228,98,37)" rx="2" ry="2" />
<text  x="314.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (13 samples, 0.03%)</title><rect x="625.1" y="389" width="0.3" height="15.0" fill="rgb(211,60,16)" rx="2" ry="2" />
<text  x="628.11" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (61 samples, 0.13%)</title><rect x="797.0" y="309" width="1.5" height="15.0" fill="rgb(206,140,48)" rx="2" ry="2" />
<text  x="799.98" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (42 samples, 0.09%)</title><rect x="21.2" y="437" width="1.1" height="15.0" fill="rgb(251,76,50)" rx="2" ry="2" />
<text  x="24.23" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (15 samples, 0.03%)</title><rect x="147.3" y="229" width="0.4" height="15.0" fill="rgb(239,190,41)" rx="2" ry="2" />
<text  x="150.33" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (18 samples, 0.04%)</title><rect x="613.3" y="437" width="0.4" height="15.0" fill="rgb(244,70,25)" rx="2" ry="2" />
<text  x="616.25" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (13 samples, 0.03%)</title><rect x="369.9" y="197" width="0.3" height="15.0" fill="rgb(220,181,23)" rx="2" ry="2" />
<text  x="372.92" y="207.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="758.6" y="277" width="0.2" height="15.0" fill="rgb(217,89,44)" rx="2" ry="2" />
<text  x="761.62" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (5 samples, 0.01%)</title><rect x="575.0" y="341" width="0.1" height="15.0" fill="rgb(236,137,20)" rx="2" ry="2" />
<text  x="577.99" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%)</title><rect x="635.6" y="485" width="0.2" height="15.0" fill="rgb(236,144,41)" rx="2" ry="2" />
<text  x="638.62" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (90 samples, 0.19%)</title><rect x="825.8" y="261" width="2.2" height="15.0" fill="rgb(216,226,48)" rx="2" ry="2" />
<text  x="828.79" y="271.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (36 samples, 0.08%)</title><rect x="743.6" y="405" width="0.9" height="15.0" fill="rgb(206,155,18)" rx="2" ry="2" />
<text  x="746.64" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (27 samples, 0.06%)</title><rect x="723.2" y="501" width="0.6" height="15.0" fill="rgb(243,112,43)" rx="2" ry="2" />
<text  x="726.15" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="625.8" y="437" width="0.2" height="15.0" fill="rgb(219,138,31)" rx="2" ry="2" />
<text  x="628.83" y="447.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.19%)</title><rect x="964.9" y="405" width="2.3" height="15.0" fill="rgb(233,185,5)" rx="2" ry="2" />
<text  x="967.91" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1124.2" y="389" width="0.3" height="15.0" fill="rgb(248,12,22)" rx="2" ry="2" />
<text  x="1127.23" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (7 samples, 0.01%)</title><rect x="628.7" y="389" width="0.2" height="15.0" fill="rgb(243,48,52)" rx="2" ry="2" />
<text  x="631.73" y="399.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="1156.0" y="437" width="0.8" height="15.0" fill="rgb(221,206,38)" rx="2" ry="2" />
<text  x="1158.95" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="884.2" y="469" width="0.1" height="15.0" fill="rgb(221,188,4)" rx="2" ry="2" />
<text  x="887.19" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="857.7" y="373" width="0.2" height="15.0" fill="rgb(247,162,32)" rx="2" ry="2" />
<text  x="860.71" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1134.4" y="389" width="0.2" height="15.0" fill="rgb(205,130,42)" rx="2" ry="2" />
<text  x="1137.39" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (22 samples, 0.05%)</title><rect x="586.7" y="389" width="0.6" height="15.0" fill="rgb(221,74,16)" rx="2" ry="2" />
<text  x="589.75" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="805.8" y="245" width="0.2" height="15.0" fill="rgb(247,168,44)" rx="2" ry="2" />
<text  x="808.84" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%)</title><rect x="213.8" y="149" width="0.4" height="15.0" fill="rgb(213,139,42)" rx="2" ry="2" />
<text  x="216.82" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (53 samples, 0.11%)</title><rect x="656.4" y="405" width="1.3" height="15.0" fill="rgb(212,166,14)" rx="2" ry="2" />
<text  x="659.38" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="426.3" y="389" width="0.2" height="15.0" fill="rgb(209,11,20)" rx="2" ry="2" />
<text  x="429.30" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="545.8" y="405" width="0.5" height="15.0" fill="rgb(206,111,40)" rx="2" ry="2" />
<text  x="548.81" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="428.2" y="405" width="0.2" height="15.0" fill="rgb(235,38,12)" rx="2" ry="2" />
<text  x="431.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (10 samples, 0.02%)</title><rect x="226.1" y="181" width="0.2" height="15.0" fill="rgb(226,30,14)" rx="2" ry="2" />
<text  x="229.05" y="191.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="525.6" y="325" width="0.5" height="15.0" fill="rgb(217,213,21)" rx="2" ry="2" />
<text  x="528.59" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,558 samples, 11.76%)</title><rect x="734.4" y="453" width="138.7" height="15.0" fill="rgb(242,186,16)" rx="2" ry="2" />
<text  x="737.38" y="463.5" >single_node_cql_e..</text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.03%)</title><rect x="152.8" y="181" width="0.3" height="15.0" fill="rgb(207,73,22)" rx="2" ry="2" />
<text  x="155.84" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (7 samples, 0.01%)</title><rect x="886.7" y="309" width="0.2" height="15.0" fill="rgb(214,4,0)" rx="2" ry="2" />
<text  x="889.71" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (10 samples, 0.02%)</title><rect x="611.0" y="437" width="0.3" height="15.0" fill="rgb(250,11,20)" rx="2" ry="2" />
<text  x="614.01" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (102 samples, 0.22%)</title><rect x="870.1" y="405" width="2.6" height="15.0" fill="rgb(230,224,52)" rx="2" ry="2" />
<text  x="873.12" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="756.4" y="357" width="0.2" height="15.0" fill="rgb(246,39,41)" rx="2" ry="2" />
<text  x="759.45" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (39 samples, 0.08%)</title><rect x="127.2" y="277" width="0.9" height="15.0" fill="rgb(254,218,35)" rx="2" ry="2" />
<text  x="130.16" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%)</title><rect x="932.6" y="325" width="1.2" height="15.0" fill="rgb(248,226,1)" rx="2" ry="2" />
<text  x="935.56" y="335.5" ></text>
</g>
<g >
<title>do_cql_test (296 samples, 0.63%)</title><rect x="15.6" y="549" width="7.4" height="15.0" fill="rgb(207,1,19)" rx="2" ry="2" />
<text  x="18.57" y="559.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (9 samples, 0.02%)</title><rect x="1041.4" y="165" width="0.3" height="15.0" fill="rgb(211,61,0)" rx="2" ry="2" />
<text  x="1044.44" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (6 samples, 0.01%)</title><rect x="65.7" y="437" width="0.2" height="15.0" fill="rgb(227,164,15)" rx="2" ry="2" />
<text  x="68.74" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (12 samples, 0.03%)</title><rect x="134.4" y="245" width="0.3" height="15.0" fill="rgb(234,163,15)" rx="2" ry="2" />
<text  x="137.45" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (307 samples, 0.65%)</title><rect x="547.6" y="421" width="7.6" height="15.0" fill="rgb(219,216,54)" rx="2" ry="2" />
<text  x="550.58" y="431.5" ></text>
</g>
<g >
<title>query::result::result (9 samples, 0.02%)</title><rect x="598.4" y="437" width="0.3" height="15.0" fill="rgb(237,135,15)" rx="2" ry="2" />
<text  x="601.43" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="539.3" y="245" width="0.2" height="15.0" fill="rgb(222,229,21)" rx="2" ry="2" />
<text  x="542.27" y="255.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (31 samples, 0.07%)</title><rect x="195.5" y="101" width="0.8" height="15.0" fill="rgb(225,27,34)" rx="2" ry="2" />
<text  x="198.50" y="111.5" ></text>
</g>
<g >
<title>compound_type&lt; (182 samples, 0.38%)</title><rect x="485.4" y="213" width="4.6" height="15.0" fill="rgb(209,9,47)" rx="2" ry="2" />
<text  x="488.43" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="940.6" y="309" width="0.2" height="15.0" fill="rgb(207,81,54)" rx="2" ry="2" />
<text  x="943.63" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="415.5" y="277" width="0.1" height="15.0" fill="rgb(212,198,49)" rx="2" ry="2" />
<text  x="418.47" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (33 samples, 0.07%)</title><rect x="72.1" y="389" width="0.8" height="15.0" fill="rgb(248,161,50)" rx="2" ry="2" />
<text  x="75.10" y="399.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (14 samples, 0.03%)</title><rect x="1074.2" y="341" width="0.3" height="15.0" fill="rgb(218,161,33)" rx="2" ry="2" />
<text  x="1077.16" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="449.8" y="261" width="0.3" height="15.0" fill="rgb(250,145,19)" rx="2" ry="2" />
<text  x="452.82" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (385 samples, 0.81%)</title><rect x="813.5" y="197" width="9.6" height="15.0" fill="rgb(245,92,4)" rx="2" ry="2" />
<text  x="816.53" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.04%)</title><rect x="692.8" y="453" width="0.4" height="15.0" fill="rgb(242,8,22)" rx="2" ry="2" />
<text  x="695.80" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (94 samples, 0.20%)</title><rect x="620.1" y="405" width="2.3" height="15.0" fill="rgb(220,218,29)" rx="2" ry="2" />
<text  x="623.07" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (362 samples, 0.77%)</title><rect x="232.5" y="229" width="9.1" height="15.0" fill="rgb(219,122,39)" rx="2" ry="2" />
<text  x="235.52" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="1128.2" y="405" width="0.3" height="15.0" fill="rgb(212,139,52)" rx="2" ry="2" />
<text  x="1131.25" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1105.5" y="341" width="0.4" height="15.0" fill="rgb(231,11,43)" rx="2" ry="2" />
<text  x="1108.54" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (80 samples, 0.17%)</title><rect x="244.6" y="213" width="2.0" height="15.0" fill="rgb(229,166,20)" rx="2" ry="2" />
<text  x="247.60" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (37 samples, 0.08%)</title><rect x="739.9" y="341" width="0.9" height="15.0" fill="rgb(249,1,4)" rx="2" ry="2" />
<text  x="742.92" y="351.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,748 samples, 3.70%)</title><rect x="791.5" y="357" width="43.6" height="15.0" fill="rgb(218,76,0)" rx="2" ry="2" />
<text  x="794.52" y="367.5" >serv..</text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (10 samples, 0.02%)</title><rect x="822.6" y="85" width="0.3" height="15.0" fill="rgb(242,85,31)" rx="2" ry="2" />
<text  x="825.64" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (17 samples, 0.04%)</title><rect x="629.6" y="469" width="0.4" height="15.0" fill="rgb(227,199,39)" rx="2" ry="2" />
<text  x="632.55" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (9 samples, 0.02%)</title><rect x="18.2" y="341" width="0.2" height="15.0" fill="rgb(212,197,10)" rx="2" ry="2" />
<text  x="21.21" y="351.5" ></text>
</g>
<g >
<title>auth::operator== (25 samples, 0.05%)</title><rect x="814.8" y="149" width="0.6" height="15.0" fill="rgb(217,98,45)" rx="2" ry="2" />
<text  x="817.80" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (139 samples, 0.29%)</title><rect x="1070.2" y="309" width="3.5" height="15.0" fill="rgb(213,186,41)" rx="2" ry="2" />
<text  x="1073.22" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%)</title><rect x="514.5" y="181" width="0.4" height="15.0" fill="rgb(229,187,54)" rx="2" ry="2" />
<text  x="517.51" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::stats (24 samples, 0.05%)</title><rect x="144.2" y="245" width="0.6" height="15.0" fill="rgb(231,173,1)" rx="2" ry="2" />
<text  x="147.16" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (18 samples, 0.04%)</title><rect x="992.8" y="325" width="0.5" height="15.0" fill="rgb(211,85,18)" rx="2" ry="2" />
<text  x="995.82" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (304 samples, 0.64%)</title><rect x="15.4" y="597" width="7.6" height="15.0" fill="rgb(209,2,0)" rx="2" ry="2" />
<text  x="18.37" y="607.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="708.9" y="469" width="0.1" height="15.0" fill="rgb(253,129,24)" rx="2" ry="2" />
<text  x="711.90" y="479.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="782.7" y="373" width="0.6" height="15.0" fill="rgb(248,60,5)" rx="2" ry="2" />
<text  x="785.66" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (11 samples, 0.02%)</title><rect x="24.2" y="517" width="0.2" height="15.0" fill="rgb(251,211,43)" rx="2" ry="2" />
<text  x="27.15" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (7 samples, 0.01%)</title><rect x="324.7" y="165" width="0.1" height="15.0" fill="rgb(227,183,5)" rx="2" ry="2" />
<text  x="327.67" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (290 samples, 0.61%)</title><rect x="248.9" y="309" width="7.3" height="15.0" fill="rgb(254,106,25)" rx="2" ry="2" />
<text  x="251.92" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (393 samples, 0.83%)</title><rect x="906.1" y="357" width="9.8" height="15.0" fill="rgb(210,154,7)" rx="2" ry="2" />
<text  x="909.08" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="145.8" y="245" width="0.3" height="15.0" fill="rgb(246,191,24)" rx="2" ry="2" />
<text  x="148.81" y="255.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="240.6" y="181" width="0.7" height="15.0" fill="rgb(231,28,6)" rx="2" ry="2" />
<text  x="243.63" y="191.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="516.5" y="229" width="0.1" height="15.0" fill="rgb(230,71,39)" rx="2" ry="2" />
<text  x="519.48" y="239.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="153.4" y="197" width="0.7" height="15.0" fill="rgb(224,111,23)" rx="2" ry="2" />
<text  x="156.39" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (6,866 samples, 14.52%)</title><rect x="109.9" y="405" width="171.4" height="15.0" fill="rgb(205,209,40)" rx="2" ry="2" />
<text  x="112.94" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1130.9" y="373" width="0.5" height="15.0" fill="rgb(243,57,38)" rx="2" ry="2" />
<text  x="1133.90" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (14 samples, 0.03%)</title><rect x="483.7" y="213" width="0.3" height="15.0" fill="rgb(239,176,48)" rx="2" ry="2" />
<text  x="486.69" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (432 samples, 0.91%)</title><rect x="672.6" y="501" width="10.8" height="15.0" fill="rgb(253,6,13)" rx="2" ry="2" />
<text  x="675.63" y="511.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (11 samples, 0.02%)</title><rect x="139.1" y="261" width="0.3" height="15.0" fill="rgb(240,134,33)" rx="2" ry="2" />
<text  x="142.12" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (17 samples, 0.04%)</title><rect x="199.4" y="85" width="0.4" height="15.0" fill="rgb(251,215,40)" rx="2" ry="2" />
<text  x="202.37" y="95.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (5 samples, 0.01%)</title><rect x="1104.3" y="325" width="0.1" height="15.0" fill="rgb(252,197,28)" rx="2" ry="2" />
<text  x="1107.31" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="833.1" y="293" width="0.2" height="15.0" fill="rgb(223,219,34)" rx="2" ry="2" />
<text  x="836.15" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (323 samples, 0.68%)</title><rect x="399.8" y="213" width="8.1" height="15.0" fill="rgb(219,20,48)" rx="2" ry="2" />
<text  x="402.80" y="223.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (13 samples, 0.03%)</title><rect x="1102.6" y="261" width="0.4" height="15.0" fill="rgb(212,33,11)" rx="2" ry="2" />
<text  x="1105.64" y="271.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="54.8" y="469" width="0.4" height="15.0" fill="rgb(223,30,54)" rx="2" ry="2" />
<text  x="57.78" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (18 samples, 0.04%)</title><rect x="528.0" y="341" width="0.5" height="15.0" fill="rgb(230,104,26)" rx="2" ry="2" />
<text  x="531.04" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1174.6" y="421" width="0.2" height="15.0" fill="rgb(236,173,31)" rx="2" ry="2" />
<text  x="1177.65" y="431.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,663 samples, 3.52%)</title><rect x="793.2" y="341" width="41.5" height="15.0" fill="rgb(205,84,13)" rx="2" ry="2" />
<text  x="796.16" y="351.5" >ser..</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (8 samples, 0.02%)</title><rect x="449.4" y="277" width="0.2" height="15.0" fill="rgb(217,171,34)" rx="2" ry="2" />
<text  x="452.42" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (7 samples, 0.01%)</title><rect x="257.4" y="309" width="0.2" height="15.0" fill="rgb(209,107,47)" rx="2" ry="2" />
<text  x="260.38" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (40 samples, 0.08%)</title><rect x="1161.7" y="453" width="1.0" height="15.0" fill="rgb(217,8,15)" rx="2" ry="2" />
<text  x="1164.72" y="463.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (5 samples, 0.01%)</title><rect x="571.6" y="277" width="0.1" height="15.0" fill="rgb(221,144,12)" rx="2" ry="2" />
<text  x="574.62" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (26 samples, 0.05%)</title><rect x="695.0" y="373" width="0.7" height="15.0" fill="rgb(217,93,29)" rx="2" ry="2" />
<text  x="698.05" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="254.3" y="261" width="0.2" height="15.0" fill="rgb(228,155,27)" rx="2" ry="2" />
<text  x="257.31" y="271.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,795 samples, 27.06%)</title><rect x="107.9" y="421" width="319.3" height="15.0" fill="rgb(205,141,32)" rx="2" ry="2" />
<text  x="110.87" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (10 samples, 0.02%)</title><rect x="919.4" y="357" width="0.3" height="15.0" fill="rgb(207,63,2)" rx="2" ry="2" />
<text  x="922.41" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (11 samples, 0.02%)</title><rect x="425.1" y="373" width="0.2" height="15.0" fill="rgb(248,215,4)" rx="2" ry="2" />
<text  x="428.06" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (109 samples, 0.23%)</title><rect x="855.5" y="437" width="2.7" height="15.0" fill="rgb(236,154,3)" rx="2" ry="2" />
<text  x="858.51" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (6 samples, 0.01%)</title><rect x="1063.9" y="325" width="0.1" height="15.0" fill="rgb(251,211,8)" rx="2" ry="2" />
<text  x="1066.85" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%)</title><rect x="819.9" y="117" width="0.7" height="15.0" fill="rgb(238,131,4)" rx="2" ry="2" />
<text  x="822.90" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="103.1" y="421" width="0.1" height="15.0" fill="rgb(227,34,19)" rx="2" ry="2" />
<text  x="106.08" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="1143.4" y="485" width="0.1" height="15.0" fill="rgb(216,47,31)" rx="2" ry="2" />
<text  x="1146.35" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (34 samples, 0.07%)</title><rect x="1040.3" y="149" width="0.8" height="15.0" fill="rgb(210,215,47)" rx="2" ry="2" />
<text  x="1043.27" y="159.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (11 samples, 0.02%)</title><rect x="1145.3" y="501" width="0.2" height="15.0" fill="rgb(205,181,44)" rx="2" ry="2" />
<text  x="1148.27" y="511.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (7 samples, 0.01%)</title><rect x="48.0" y="485" width="0.1" height="15.0" fill="rgb(250,118,15)" rx="2" ry="2" />
<text  x="50.96" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="18.2" y="309" width="0.2" height="15.0" fill="rgb(231,189,25)" rx="2" ry="2" />
<text  x="21.24" y="319.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="135.9" y="245" width="0.1" height="15.0" fill="rgb(221,168,44)" rx="2" ry="2" />
<text  x="138.90" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%)</title><rect x="594.3" y="389" width="0.5" height="15.0" fill="rgb(221,136,27)" rx="2" ry="2" />
<text  x="597.31" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="1152.6" y="485" width="0.3" height="15.0" fill="rgb(242,187,30)" rx="2" ry="2" />
<text  x="1155.59" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (370 samples, 0.78%)</title><rect x="306.3" y="197" width="9.2" height="15.0" fill="rgb(251,41,35)" rx="2" ry="2" />
<text  x="309.27" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="884.7" y="501" width="0.3" height="15.0" fill="rgb(209,164,46)" rx="2" ry="2" />
<text  x="887.67" y="511.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (13 samples, 0.03%)</title><rect x="239.2" y="197" width="0.3" height="15.0" fill="rgb(238,97,18)" rx="2" ry="2" />
<text  x="242.21" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="1083.4" y="309" width="0.3" height="15.0" fill="rgb(251,109,9)" rx="2" ry="2" />
<text  x="1086.42" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="644.8" y="469" width="0.2" height="15.0" fill="rgb(254,163,13)" rx="2" ry="2" />
<text  x="647.83" y="479.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (10 samples, 0.02%)</title><rect x="760.8" y="277" width="0.3" height="15.0" fill="rgb(219,54,8)" rx="2" ry="2" />
<text  x="763.84" y="287.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="23.0" y="437" width="0.2" height="15.0" fill="rgb(206,49,53)" rx="2" ry="2" />
<text  x="26.03" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="564.5" y="309" width="0.2" height="15.0" fill="rgb(241,1,49)" rx="2" ry="2" />
<text  x="567.48" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="552.4" y="325" width="1.7" height="15.0" fill="rgb(211,210,54)" rx="2" ry="2" />
<text  x="555.40" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%)</title><rect x="954.3" y="341" width="0.3" height="15.0" fill="rgb(245,54,13)" rx="2" ry="2" />
<text  x="957.28" y="351.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (71 samples, 0.15%)</title><rect x="532.8" y="293" width="1.8" height="15.0" fill="rgb(249,62,7)" rx="2" ry="2" />
<text  x="535.83" y="303.5" ></text>
</g>
<g >
<title>sstring_hash::operator (28 samples, 0.06%)</title><rect x="1073.0" y="293" width="0.7" height="15.0" fill="rgb(217,180,24)" rx="2" ry="2" />
<text  x="1075.99" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="934.7" y="389" width="0.4" height="15.0" fill="rgb(214,222,45)" rx="2" ry="2" />
<text  x="937.71" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.01%)</title><rect x="999.8" y="293" width="0.2" height="15.0" fill="rgb(221,89,16)" rx="2" ry="2" />
<text  x="1002.83" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (15 samples, 0.03%)</title><rect x="52.2" y="485" width="0.4" height="15.0" fill="rgb(210,185,34)" rx="2" ry="2" />
<text  x="55.18" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (78 samples, 0.16%)</title><rect x="839.8" y="389" width="1.9" height="15.0" fill="rgb(227,98,37)" rx="2" ry="2" />
<text  x="842.79" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="770.2" y="405" width="0.2" height="15.0" fill="rgb(241,70,44)" rx="2" ry="2" />
<text  x="773.18" y="415.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (8 samples, 0.02%)</title><rect x="1063.4" y="293" width="0.2" height="15.0" fill="rgb(254,7,5)" rx="2" ry="2" />
<text  x="1066.38" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,962 samples, 4.15%)</title><rect x="316.5" y="213" width="48.9" height="15.0" fill="rgb(231,75,52)" rx="2" ry="2" />
<text  x="319.46" y="223.5" >quer..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="102.8" y="421" width="0.3" height="15.0" fill="rgb(253,134,34)" rx="2" ry="2" />
<text  x="105.80" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (14 samples, 0.03%)</title><rect x="326.1" y="181" width="0.3" height="15.0" fill="rgb(236,225,9)" rx="2" ry="2" />
<text  x="329.09" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="46.6" y="485" width="0.2" height="15.0" fill="rgb(220,55,39)" rx="2" ry="2" />
<text  x="49.64" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (22 samples, 0.05%)</title><rect x="838.1" y="293" width="0.6" height="15.0" fill="rgb(219,221,31)" rx="2" ry="2" />
<text  x="841.14" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="662.7" y="469" width="0.2" height="15.0" fill="rgb(215,42,42)" rx="2" ry="2" />
<text  x="665.75" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="544.0" y="341" width="0.2" height="15.0" fill="rgb(231,140,36)" rx="2" ry="2" />
<text  x="546.97" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="484.4" y="197" width="0.7" height="15.0" fill="rgb(225,28,4)" rx="2" ry="2" />
<text  x="487.44" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;void&gt;::promise_type::run_and_dispose (6 samples, 0.01%)</title><rect x="25.3" y="517" width="0.1" height="15.0" fill="rgb(214,81,51)" rx="2" ry="2" />
<text  x="28.28" y="527.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (229 samples, 0.48%)</title><rect x="928.3" y="373" width="5.7" height="15.0" fill="rgb(219,35,8)" rx="2" ry="2" />
<text  x="931.27" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (14 samples, 0.03%)</title><rect x="872.1" y="341" width="0.4" height="15.0" fill="rgb(245,202,24)" rx="2" ry="2" />
<text  x="875.11" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (20 samples, 0.04%)</title><rect x="779.9" y="405" width="0.5" height="15.0" fill="rgb(236,174,5)" rx="2" ry="2" />
<text  x="782.91" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (15 samples, 0.03%)</title><rect x="527.0" y="325" width="0.4" height="15.0" fill="rgb(212,165,24)" rx="2" ry="2" />
<text  x="530.04" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (35 samples, 0.07%)</title><rect x="131.1" y="245" width="0.9" height="15.0" fill="rgb(230,167,17)" rx="2" ry="2" />
<text  x="134.11" y="255.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (8 samples, 0.02%)</title><rect x="1142.9" y="149" width="0.2" height="15.0" fill="rgb(216,181,12)" rx="2" ry="2" />
<text  x="1145.88" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (25 samples, 0.05%)</title><rect x="756.0" y="373" width="0.6" height="15.0" fill="rgb(243,146,51)" rx="2" ry="2" />
<text  x="759.00" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (153 samples, 0.32%)</title><rect x="739.7" y="357" width="3.8" height="15.0" fill="rgb(231,19,39)" rx="2" ry="2" />
<text  x="742.68" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (11 samples, 0.02%)</title><rect x="25.0" y="517" width="0.3" height="15.0" fill="rgb(241,31,3)" rx="2" ry="2" />
<text  x="28.00" y="527.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10 samples, 0.02%)</title><rect x="899.5" y="421" width="0.2" height="15.0" fill="rgb(224,69,45)" rx="2" ry="2" />
<text  x="902.47" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="43.9" y="469" width="0.2" height="15.0" fill="rgb(252,68,25)" rx="2" ry="2" />
<text  x="46.95" y="479.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (28 samples, 0.06%)</title><rect x="329.5" y="181" width="0.7" height="15.0" fill="rgb(230,129,24)" rx="2" ry="2" />
<text  x="332.54" y="191.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (39 samples, 0.08%)</title><rect x="809.5" y="149" width="1.0" height="15.0" fill="rgb(231,79,20)" rx="2" ry="2" />
<text  x="812.49" y="159.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (8 samples, 0.02%)</title><rect x="901.1" y="405" width="0.2" height="15.0" fill="rgb(227,102,31)" rx="2" ry="2" />
<text  x="904.12" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="967.5" y="405" width="0.2" height="15.0" fill="rgb(238,125,48)" rx="2" ry="2" />
<text  x="970.48" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="137.9" y="245" width="0.2" height="15.0" fill="rgb(236,161,36)" rx="2" ry="2" />
<text  x="140.94" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.03%)</title><rect x="684.6" y="485" width="0.3" height="15.0" fill="rgb(207,205,45)" rx="2" ry="2" />
<text  x="687.59" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="787.4" y="341" width="0.1" height="15.0" fill="rgb(227,42,52)" rx="2" ry="2" />
<text  x="790.40" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (12 samples, 0.03%)</title><rect x="927.0" y="325" width="0.3" height="15.0" fill="rgb(227,187,2)" rx="2" ry="2" />
<text  x="930.00" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (14 samples, 0.03%)</title><rect x="56.8" y="469" width="0.3" height="15.0" fill="rgb(221,168,36)" rx="2" ry="2" />
<text  x="59.77" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="912.8" y="261" width="0.4" height="15.0" fill="rgb(228,53,7)" rx="2" ry="2" />
<text  x="915.85" y="271.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (108 samples, 0.23%)</title><rect x="816.7" y="149" width="2.6" height="15.0" fill="rgb(245,18,14)" rx="2" ry="2" />
<text  x="819.65" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (25 samples, 0.05%)</title><rect x="610.0" y="437" width="0.6" height="15.0" fill="rgb(245,0,24)" rx="2" ry="2" />
<text  x="612.98" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (21 samples, 0.04%)</title><rect x="758.8" y="277" width="0.5" height="15.0" fill="rgb(206,123,53)" rx="2" ry="2" />
<text  x="761.82" y="287.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="907.5" y="309" width="0.4" height="15.0" fill="rgb(253,33,19)" rx="2" ry="2" />
<text  x="910.53" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (31 samples, 0.07%)</title><rect x="579.8" y="357" width="0.8" height="15.0" fill="rgb(222,30,40)" rx="2" ry="2" />
<text  x="582.81" y="367.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (27 samples, 0.06%)</title><rect x="330.4" y="181" width="0.7" height="15.0" fill="rgb(219,10,22)" rx="2" ry="2" />
<text  x="333.38" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (81 samples, 0.17%)</title><rect x="1158.2" y="453" width="2.0" height="15.0" fill="rgb(223,119,40)" rx="2" ry="2" />
<text  x="1161.23" y="463.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (158 samples, 0.33%)</title><rect x="930.0" y="357" width="4.0" height="15.0" fill="rgb(242,8,48)" rx="2" ry="2" />
<text  x="933.04" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (21 samples, 0.04%)</title><rect x="356.3" y="149" width="0.5" height="15.0" fill="rgb(229,74,48)" rx="2" ry="2" />
<text  x="359.29" y="159.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (5 samples, 0.01%)</title><rect x="829.9" y="293" width="0.1" height="15.0" fill="rgb(213,56,2)" rx="2" ry="2" />
<text  x="832.88" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (21 samples, 0.04%)</title><rect x="21.6" y="405" width="0.5" height="15.0" fill="rgb(224,161,28)" rx="2" ry="2" />
<text  x="24.58" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%)</title><rect x="704.8" y="485" width="0.7" height="15.0" fill="rgb(246,185,21)" rx="2" ry="2" />
<text  x="707.81" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (82 samples, 0.17%)</title><rect x="688.0" y="469" width="2.0" height="15.0" fill="rgb(224,160,39)" rx="2" ry="2" />
<text  x="690.96" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="346.2" y="149" width="0.7" height="15.0" fill="rgb(237,55,50)" rx="2" ry="2" />
<text  x="349.16" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (12 samples, 0.03%)</title><rect x="1149.5" y="469" width="0.3" height="15.0" fill="rgb(217,111,31)" rx="2" ry="2" />
<text  x="1152.52" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (762 samples, 1.61%)</title><rect x="122.6" y="309" width="19.1" height="15.0" fill="rgb(219,126,14)" rx="2" ry="2" />
<text  x="125.64" y="319.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,715 samples, 12.09%)</title><rect x="283.5" y="389" width="142.7" height="15.0" fill="rgb(240,206,37)" rx="2" ry="2" />
<text  x="286.53" y="399.5" >query::consume_page&lt;</text>
</g>
<g >
<title>compound_type&lt; (143 samples, 0.30%)</title><rect x="937.6" y="373" width="3.6" height="15.0" fill="rgb(252,186,25)" rx="2" ry="2" />
<text  x="940.63" y="383.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.18%)</title><rect x="979.8" y="357" width="2.1" height="15.0" fill="rgb(238,57,40)" rx="2" ry="2" />
<text  x="982.79" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="466.6" y="293" width="0.4" height="15.0" fill="rgb(213,164,53)" rx="2" ry="2" />
<text  x="469.64" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="620.7" y="373" width="0.1" height="15.0" fill="rgb(254,95,17)" rx="2" ry="2" />
<text  x="623.67" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="420.2" y="325" width="0.1" height="15.0" fill="rgb(237,36,9)" rx="2" ry="2" />
<text  x="423.19" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="399.3" y="229" width="0.2" height="15.0" fill="rgb(235,116,11)" rx="2" ry="2" />
<text  x="402.30" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (88 samples, 0.19%)</title><rect x="962.7" y="389" width="2.2" height="15.0" fill="rgb(236,88,7)" rx="2" ry="2" />
<text  x="965.72" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (15 samples, 0.03%)</title><rect x="254.8" y="277" width="0.4" height="15.0" fill="rgb(240,7,18)" rx="2" ry="2" />
<text  x="257.81" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (30 samples, 0.06%)</title><rect x="616.7" y="437" width="0.7" height="15.0" fill="rgb(228,28,14)" rx="2" ry="2" />
<text  x="619.67" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="655.4" y="453" width="0.2" height="15.0" fill="rgb(245,158,20)" rx="2" ry="2" />
<text  x="658.44" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (122 samples, 0.26%)</title><rect x="272.8" y="293" width="3.0" height="15.0" fill="rgb(239,12,16)" rx="2" ry="2" />
<text  x="275.80" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (8 samples, 0.02%)</title><rect x="1140.5" y="421" width="0.2" height="15.0" fill="rgb(216,78,22)" rx="2" ry="2" />
<text  x="1143.50" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (11 samples, 0.02%)</title><rect x="17.0" y="261" width="0.2" height="15.0" fill="rgb(222,60,4)" rx="2" ry="2" />
<text  x="19.96" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (9 samples, 0.02%)</title><rect x="715.2" y="421" width="0.3" height="15.0" fill="rgb(234,58,13)" rx="2" ry="2" />
<text  x="718.24" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (30 samples, 0.06%)</title><rect x="121.3" y="309" width="0.7" height="15.0" fill="rgb(239,157,19)" rx="2" ry="2" />
<text  x="124.30" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (32 samples, 0.07%)</title><rect x="915.9" y="357" width="0.8" height="15.0" fill="rgb(249,91,7)" rx="2" ry="2" />
<text  x="918.89" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (21 samples, 0.04%)</title><rect x="703.0" y="453" width="0.6" height="15.0" fill="rgb(236,71,52)" rx="2" ry="2" />
<text  x="706.03" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (90 samples, 0.19%)</title><rect x="766.6" y="405" width="2.3" height="15.0" fill="rgb(210,95,12)" rx="2" ry="2" />
<text  x="769.63" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (240 samples, 0.51%)</title><rect x="738.8" y="421" width="6.0" height="15.0" fill="rgb(247,141,51)" rx="2" ry="2" />
<text  x="741.80" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="828.2" y="261" width="0.2" height="15.0" fill="rgb(248,137,27)" rx="2" ry="2" />
<text  x="831.23" y="271.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1075.7" y="341" width="0.1" height="15.0" fill="rgb(213,20,2)" rx="2" ry="2" />
<text  x="1078.66" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (54 samples, 0.11%)</title><rect x="953.6" y="389" width="1.3" height="15.0" fill="rgb(238,138,18)" rx="2" ry="2" />
<text  x="956.56" y="399.5" ></text>
</g>
<g >
<title>freeze (13 samples, 0.03%)</title><rect x="1142.8" y="197" width="0.4" height="15.0" fill="rgb(241,141,8)" rx="2" ry="2" />
<text  x="1145.83" y="207.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.6" y="325" width="0.1" height="15.0" fill="rgb(239,182,14)" rx="2" ry="2" />
<text  x="21.56" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (6 samples, 0.01%)</title><rect x="1142.7" y="261" width="0.1" height="15.0" fill="rgb(205,89,11)" rx="2" ry="2" />
<text  x="1145.65" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="802.2" y="293" width="0.1" height="15.0" fill="rgb(206,108,42)" rx="2" ry="2" />
<text  x="805.22" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (30 samples, 0.06%)</title><rect x="923.8" y="357" width="0.7" height="15.0" fill="rgb(207,114,52)" rx="2" ry="2" />
<text  x="926.75" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="216.2" y="149" width="0.2" height="15.0" fill="rgb(251,124,43)" rx="2" ry="2" />
<text  x="219.17" y="159.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (429 samples, 0.91%)</title><rect x="65.6" y="453" width="10.7" height="15.0" fill="rgb(233,6,43)" rx="2" ry="2" />
<text  x="68.56" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (47 samples, 0.10%)</title><rect x="140.0" y="277" width="1.2" height="15.0" fill="rgb(225,179,12)" rx="2" ry="2" />
<text  x="142.99" y="287.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (11 samples, 0.02%)</title><rect x="1095.0" y="261" width="0.3" height="15.0" fill="rgb(241,217,8)" rx="2" ry="2" />
<text  x="1098.00" y="271.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (6 samples, 0.01%)</title><rect x="1049.2" y="261" width="0.1" height="15.0" fill="rgb(240,52,15)" rx="2" ry="2" />
<text  x="1052.18" y="271.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="417.1" y="293" width="1.0" height="15.0" fill="rgb(214,124,26)" rx="2" ry="2" />
<text  x="420.12" y="303.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (6 samples, 0.01%)</title><rect x="217.1" y="101" width="0.2" height="15.0" fill="rgb(211,110,43)" rx="2" ry="2" />
<text  x="220.14" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (55 samples, 0.12%)</title><rect x="1160.3" y="453" width="1.4" height="15.0" fill="rgb(248,141,23)" rx="2" ry="2" />
<text  x="1163.35" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="543.3" y="309" width="0.7" height="15.0" fill="rgb(253,225,1)" rx="2" ry="2" />
<text  x="546.32" y="319.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.2" y="325" width="0.2" height="15.0" fill="rgb(229,146,21)" rx="2" ry="2" />
<text  x="21.24" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="828.5" y="277" width="0.3" height="15.0" fill="rgb(208,130,21)" rx="2" ry="2" />
<text  x="831.53" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (462 samples, 0.98%)</title><rect x="683.4" y="501" width="11.5" height="15.0" fill="rgb(212,54,47)" rx="2" ry="2" />
<text  x="686.42" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (49 samples, 0.10%)</title><rect x="314.3" y="181" width="1.2" height="15.0" fill="rgb(254,144,12)" rx="2" ry="2" />
<text  x="317.29" y="191.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%)</title><rect x="729.7" y="421" width="1.6" height="15.0" fill="rgb(249,131,16)" rx="2" ry="2" />
<text  x="732.69" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (8 samples, 0.02%)</title><rect x="851.8" y="421" width="0.2" height="15.0" fill="rgb(208,26,19)" rx="2" ry="2" />
<text  x="854.79" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (20 samples, 0.04%)</title><rect x="727.9" y="469" width="0.5" height="15.0" fill="rgb(240,87,0)" rx="2" ry="2" />
<text  x="730.94" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (18 samples, 0.04%)</title><rect x="122.0" y="309" width="0.5" height="15.0" fill="rgb(222,91,47)" rx="2" ry="2" />
<text  x="125.04" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (15 samples, 0.03%)</title><rect x="1073.2" y="261" width="0.4" height="15.0" fill="rgb(244,192,30)" rx="2" ry="2" />
<text  x="1076.24" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (104 samples, 0.22%)</title><rect x="1006.6" y="277" width="2.6" height="15.0" fill="rgb(240,226,50)" rx="2" ry="2" />
<text  x="1009.62" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="693.0" y="437" width="0.1" height="15.0" fill="rgb(205,12,4)" rx="2" ry="2" />
<text  x="695.95" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="761.3" y="261" width="0.4" height="15.0" fill="rgb(215,182,41)" rx="2" ry="2" />
<text  x="764.27" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (528 samples, 1.12%)</title><rect x="31.1" y="501" width="13.1" height="15.0" fill="rgb(244,32,34)" rx="2" ry="2" />
<text  x="34.07" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (38 samples, 0.08%)</title><rect x="516.6" y="229" width="1.0" height="15.0" fill="rgb(208,146,19)" rx="2" ry="2" />
<text  x="519.63" y="239.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (12 samples, 0.03%)</title><rect x="695.2" y="261" width="0.3" height="15.0" fill="rgb(206,1,18)" rx="2" ry="2" />
<text  x="698.25" y="271.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (13 samples, 0.03%)</title><rect x="685.9" y="469" width="0.3" height="15.0" fill="rgb(211,203,29)" rx="2" ry="2" />
<text  x="688.91" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="555.2" y="421" width="0.3" height="15.0" fill="rgb(221,50,8)" rx="2" ry="2" />
<text  x="558.25" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (7 samples, 0.01%)</title><rect x="887.3" y="389" width="0.2" height="15.0" fill="rgb(230,218,24)" rx="2" ry="2" />
<text  x="890.31" y="399.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (6 samples, 0.01%)</title><rect x="21.7" y="389" width="0.1" height="15.0" fill="rgb(224,75,39)" rx="2" ry="2" />
<text  x="24.66" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1141.8" y="357" width="0.8" height="15.0" fill="rgb(230,1,28)" rx="2" ry="2" />
<text  x="1144.78" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (33 samples, 0.07%)</title><rect x="663.9" y="485" width="0.9" height="15.0" fill="rgb(227,134,16)" rx="2" ry="2" />
<text  x="666.95" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (16 samples, 0.03%)</title><rect x="247.2" y="229" width="0.4" height="15.0" fill="rgb(229,45,29)" rx="2" ry="2" />
<text  x="250.17" y="239.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (5 samples, 0.01%)</title><rect x="738.7" y="421" width="0.1" height="15.0" fill="rgb(207,88,43)" rx="2" ry="2" />
<text  x="741.68" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.01%)</title><rect x="637.4" y="485" width="0.1" height="15.0" fill="rgb(232,76,34)" rx="2" ry="2" />
<text  x="640.39" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (146 samples, 0.31%)</title><rect x="37.1" y="453" width="3.6" height="15.0" fill="rgb(211,174,19)" rx="2" ry="2" />
<text  x="40.08" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (105 samples, 0.22%)</title><rect x="1000.5" y="293" width="2.6" height="15.0" fill="rgb(227,87,14)" rx="2" ry="2" />
<text  x="1003.51" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="667.7" y="485" width="0.5" height="15.0" fill="rgb(238,90,44)" rx="2" ry="2" />
<text  x="670.74" y="495.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%)</title><rect x="807.6" y="229" width="0.1" height="15.0" fill="rgb(210,111,18)" rx="2" ry="2" />
<text  x="810.57" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="562.3" y="309" width="0.1" height="15.0" fill="rgb(244,142,50)" rx="2" ry="2" />
<text  x="565.29" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (390 samples, 0.82%)</title><rect x="906.2" y="341" width="9.7" height="15.0" fill="rgb(219,102,34)" rx="2" ry="2" />
<text  x="909.16" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,425 samples, 49.55%)</title><rect x="49.1" y="501" width="584.7" height="15.0" fill="rgb(252,2,9)" rx="2" ry="2" />
<text  x="52.11" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="458.7" y="293" width="0.3" height="15.0" fill="rgb(228,101,21)" rx="2" ry="2" />
<text  x="461.65" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (17 samples, 0.04%)</title><rect x="887.1" y="421" width="0.4" height="15.0" fill="rgb(253,21,52)" rx="2" ry="2" />
<text  x="890.09" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="853.4" y="405" width="0.1" height="15.0" fill="rgb(238,180,24)" rx="2" ry="2" />
<text  x="856.37" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="137.5" y="229" width="0.4" height="15.0" fill="rgb(246,54,31)" rx="2" ry="2" />
<text  x="140.54" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (459 samples, 0.97%)</title><rect x="266.6" y="341" width="11.4" height="15.0" fill="rgb(233,133,4)" rx="2" ry="2" />
<text  x="269.59" y="351.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="918.0" y="325" width="0.8" height="15.0" fill="rgb(213,107,29)" rx="2" ry="2" />
<text  x="921.04" y="335.5" ></text>
</g>
<g >
<title>query_result_builder::consume (15 samples, 0.03%)</title><rect x="695.2" y="293" width="0.3" height="15.0" fill="rgb(229,215,21)" rx="2" ry="2" />
<text  x="698.17" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%)</title><rect x="652.9" y="357" width="0.1" height="15.0" fill="rgb(223,82,27)" rx="2" ry="2" />
<text  x="655.86" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.02%)</title><rect x="241.6" y="229" width="0.2" height="15.0" fill="rgb(212,220,42)" rx="2" ry="2" />
<text  x="244.55" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (85 samples, 0.18%)</title><rect x="1106.2" y="357" width="2.1" height="15.0" fill="rgb(231,131,52)" rx="2" ry="2" />
<text  x="1109.18" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (7 samples, 0.01%)</title><rect x="887.3" y="373" width="0.2" height="15.0" fill="rgb(214,29,35)" rx="2" ry="2" />
<text  x="890.31" y="383.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="41.0" y="453" width="0.5" height="15.0" fill="rgb(217,98,5)" rx="2" ry="2" />
<text  x="44.00" y="463.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (7 samples, 0.01%)</title><rect x="217.5" y="149" width="0.2" height="15.0" fill="rgb(208,168,49)" rx="2" ry="2" />
<text  x="220.54" y="159.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (9 samples, 0.02%)</title><rect x="393.6" y="229" width="0.2" height="15.0" fill="rgb(234,51,51)" rx="2" ry="2" />
<text  x="396.61" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (38 samples, 0.08%)</title><rect x="153.2" y="213" width="0.9" height="15.0" fill="rgb(227,40,31)" rx="2" ry="2" />
<text  x="156.17" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1073.9" y="325" width="0.2" height="15.0" fill="rgb(214,2,14)" rx="2" ry="2" />
<text  x="1076.89" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (7 samples, 0.01%)</title><rect x="988.0" y="357" width="0.2" height="15.0" fill="rgb(224,201,41)" rx="2" ry="2" />
<text  x="991.03" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (8 samples, 0.02%)</title><rect x="255.2" y="277" width="0.2" height="15.0" fill="rgb(248,228,39)" rx="2" ry="2" />
<text  x="258.18" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%)</title><rect x="936.9" y="341" width="0.2" height="15.0" fill="rgb(205,21,27)" rx="2" ry="2" />
<text  x="939.93" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="538.9" y="229" width="0.1" height="15.0" fill="rgb(243,135,50)" rx="2" ry="2" />
<text  x="541.90" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="550.0" y="341" width="0.2" height="15.0" fill="rgb(239,26,7)" rx="2" ry="2" />
<text  x="553.01" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%)</title><rect x="211.8" y="149" width="0.4" height="15.0" fill="rgb(225,120,6)" rx="2" ry="2" />
<text  x="214.85" y="159.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (32 samples, 0.07%)</title><rect x="566.1" y="293" width="0.8" height="15.0" fill="rgb(216,225,48)" rx="2" ry="2" />
<text  x="569.13" y="303.5" ></text>
</g>
<g >
<title>row::compact_and_expire (817 samples, 1.73%)</title><rect x="370.2" y="213" width="20.4" height="15.0" fill="rgb(219,78,3)" rx="2" ry="2" />
<text  x="373.24" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (10 samples, 0.02%)</title><rect x="722.0" y="501" width="0.2" height="15.0" fill="rgb(217,83,29)" rx="2" ry="2" />
<text  x="724.98" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (5 samples, 0.01%)</title><rect x="948.7" y="405" width="0.2" height="15.0" fill="rgb(219,7,17)" rx="2" ry="2" />
<text  x="951.74" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (586 samples, 1.24%)</title><rect x="905.0" y="373" width="14.7" height="15.0" fill="rgb(249,18,28)" rx="2" ry="2" />
<text  x="908.03" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (161 samples, 0.34%)</title><rect x="473.3" y="261" width="4.0" height="15.0" fill="rgb(253,167,19)" rx="2" ry="2" />
<text  x="476.28" y="271.5" ></text>
</g>
<g >
<title>schema_registry::get (167 samples, 0.35%)</title><rect x="981.9" y="357" width="4.2" height="15.0" fill="rgb(237,18,34)" rx="2" ry="2" />
<text  x="984.89" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="536.9" y="309" width="0.2" height="15.0" fill="rgb(207,196,7)" rx="2" ry="2" />
<text  x="539.93" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (192 samples, 0.41%)</title><rect x="617.8" y="437" width="4.8" height="15.0" fill="rgb(241,166,21)" rx="2" ry="2" />
<text  x="620.80" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%)</title><rect x="572.6" y="277" width="0.2" height="15.0" fill="rgb(250,179,3)" rx="2" ry="2" />
<text  x="575.57" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="1127.8" y="405" width="0.3" height="15.0" fill="rgb(243,139,16)" rx="2" ry="2" />
<text  x="1130.80" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (177 samples, 0.37%)</title><rect x="243.2" y="245" width="4.4" height="15.0" fill="rgb(218,205,14)" rx="2" ry="2" />
<text  x="246.22" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (34 samples, 0.07%)</title><rect x="951.5" y="341" width="0.8" height="15.0" fill="rgb(227,132,23)" rx="2" ry="2" />
<text  x="954.48" y="351.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (174 samples, 0.37%)</title><rect x="873.5" y="437" width="4.4" height="15.0" fill="rgb(249,110,0)" rx="2" ry="2" />
<text  x="876.51" y="447.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (5 samples, 0.01%)</title><rect x="1164.4" y="469" width="0.1" height="15.0" fill="rgb(214,184,50)" rx="2" ry="2" />
<text  x="1167.42" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (7 samples, 0.01%)</title><rect x="1122.7" y="405" width="0.2" height="15.0" fill="rgb(252,205,35)" rx="2" ry="2" />
<text  x="1125.71" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="636.6" y="469" width="0.1" height="15.0" fill="rgb(241,157,2)" rx="2" ry="2" />
<text  x="639.57" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="387.1" y="165" width="0.3" height="15.0" fill="rgb(207,143,39)" rx="2" ry="2" />
<text  x="390.07" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (19 samples, 0.04%)</title><rect x="823.4" y="213" width="0.4" height="15.0" fill="rgb(248,29,47)" rx="2" ry="2" />
<text  x="826.37" y="223.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (79 samples, 0.17%)</title><rect x="803.3" y="261" width="1.9" height="15.0" fill="rgb(232,198,49)" rx="2" ry="2" />
<text  x="806.27" y="271.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (13 samples, 0.03%)</title><rect x="602.1" y="405" width="0.3" height="15.0" fill="rgb(230,55,45)" rx="2" ry="2" />
<text  x="605.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="1160.6" y="421" width="1.0" height="15.0" fill="rgb(253,48,23)" rx="2" ry="2" />
<text  x="1163.57" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (5 samples, 0.01%)</title><rect x="1158.7" y="437" width="0.1" height="15.0" fill="rgb(252,153,8)" rx="2" ry="2" />
<text  x="1161.68" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="857.1" y="357" width="0.6" height="15.0" fill="rgb(208,143,49)" rx="2" ry="2" />
<text  x="860.09" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (11 samples, 0.02%)</title><rect x="19.7" y="277" width="0.2" height="15.0" fill="rgb(249,28,29)" rx="2" ry="2" />
<text  x="22.66" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (226 samples, 0.48%)</title><rect x="221.0" y="213" width="5.6" height="15.0" fill="rgb(227,32,53)" rx="2" ry="2" />
<text  x="223.96" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,253 samples, 97.84%)</title><rect x="23.4" y="533" width="1154.5" height="15.0" fill="rgb(229,135,44)" rx="2" ry="2" />
<text  x="26.40" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (32 samples, 0.07%)</title><rect x="71.3" y="389" width="0.8" height="15.0" fill="rgb(215,196,24)" rx="2" ry="2" />
<text  x="74.30" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (14 samples, 0.03%)</title><rect x="315.9" y="213" width="0.3" height="15.0" fill="rgb(228,16,11)" rx="2" ry="2" />
<text  x="318.86" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (24 samples, 0.05%)</title><rect x="291.5" y="261" width="0.6" height="15.0" fill="rgb(254,50,53)" rx="2" ry="2" />
<text  x="294.50" y="271.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,679 samples, 5.67%)</title><rect x="460.8" y="341" width="66.9" height="15.0" fill="rgb(230,137,20)" rx="2" ry="2" />
<text  x="463.85" y="351.5" >memtabl..</text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (10 samples, 0.02%)</title><rect x="259.7" y="325" width="0.2" height="15.0" fill="rgb(223,192,52)" rx="2" ry="2" />
<text  x="262.67" y="335.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="276.3" y="293" width="1.0" height="15.0" fill="rgb(228,48,35)" rx="2" ry="2" />
<text  x="279.32" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="881.8" y="469" width="0.2" height="15.0" fill="rgb(239,209,50)" rx="2" ry="2" />
<text  x="884.85" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (7 samples, 0.01%)</title><rect x="919.5" y="341" width="0.2" height="15.0" fill="rgb(241,160,20)" rx="2" ry="2" />
<text  x="922.49" y="351.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="1170.3" y="453" width="0.6" height="15.0" fill="rgb(249,7,25)" rx="2" ry="2" />
<text  x="1173.33" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="919.1" y="309" width="0.3" height="15.0" fill="rgb(229,112,54)" rx="2" ry="2" />
<text  x="922.06" y="319.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (22 samples, 0.05%)</title><rect x="331.1" y="181" width="0.5" height="15.0" fill="rgb(205,102,45)" rx="2" ry="2" />
<text  x="334.06" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="500.7" y="277" width="1.0" height="15.0" fill="rgb(212,189,19)" rx="2" ry="2" />
<text  x="503.66" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="782.7" y="357" width="0.6" height="15.0" fill="rgb(209,0,41)" rx="2" ry="2" />
<text  x="785.73" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="997.7" y="309" width="1.7" height="15.0" fill="rgb(223,3,26)" rx="2" ry="2" />
<text  x="1000.66" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (20 samples, 0.04%)</title><rect x="1123.5" y="389" width="0.5" height="15.0" fill="rgb(248,168,5)" rx="2" ry="2" />
<text  x="1126.53" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="44.1" y="469" width="0.1" height="15.0" fill="rgb(207,147,19)" rx="2" ry="2" />
<text  x="47.07" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (6 samples, 0.01%)</title><rect x="571.5" y="277" width="0.1" height="15.0" fill="rgb(219,42,10)" rx="2" ry="2" />
<text  x="574.47" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (32 samples, 0.07%)</title><rect x="1142.6" y="485" width="0.8" height="15.0" fill="rgb(253,172,30)" rx="2" ry="2" />
<text  x="1145.55" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="927.3" y="325" width="0.2" height="15.0" fill="rgb(242,227,36)" rx="2" ry="2" />
<text  x="930.32" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (10 samples, 0.02%)</title><rect x="838.8" y="277" width="0.3" height="15.0" fill="rgb(224,70,24)" rx="2" ry="2" />
<text  x="841.82" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (6 samples, 0.01%)</title><rect x="326.3" y="165" width="0.1" height="15.0" fill="rgb(237,63,11)" rx="2" ry="2" />
<text  x="329.29" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="573.3" y="293" width="0.1" height="15.0" fill="rgb(242,176,25)" rx="2" ry="2" />
<text  x="576.29" y="303.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (47 samples, 0.10%)</title><rect x="761.7" y="261" width="1.1" height="15.0" fill="rgb(244,216,52)" rx="2" ry="2" />
<text  x="764.66" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="795.6" y="277" width="0.6" height="15.0" fill="rgb(207,211,45)" rx="2" ry="2" />
<text  x="798.59" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="646.1" y="485" width="0.2" height="15.0" fill="rgb(252,35,32)" rx="2" ry="2" />
<text  x="649.10" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1082.8" y="277" width="0.1" height="15.0" fill="rgb(216,110,38)" rx="2" ry="2" />
<text  x="1085.77" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1161.0" y="405" width="0.6" height="15.0" fill="rgb(249,38,25)" rx="2" ry="2" />
<text  x="1164.05" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1011.4" y="293" width="0.1" height="15.0" fill="rgb(212,160,34)" rx="2" ry="2" />
<text  x="1014.41" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="585.3" y="373" width="0.2" height="15.0" fill="rgb(232,158,43)" rx="2" ry="2" />
<text  x="588.27" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (14 samples, 0.03%)</title><rect x="75.8" y="421" width="0.4" height="15.0" fill="rgb(235,149,45)" rx="2" ry="2" />
<text  x="78.84" y="431.5" ></text>
</g>
<g >
<title>main (46,255 samples, 97.84%)</title><rect x="23.4" y="613" width="1154.5" height="15.0" fill="rgb(217,197,40)" rx="2" ry="2" />
<text  x="26.40" y="623.5" >main</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="219.4" y="181" width="0.1" height="15.0" fill="rgb(226,178,43)" rx="2" ry="2" />
<text  x="222.39" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (32 samples, 0.07%)</title><rect x="815.6" y="133" width="0.8" height="15.0" fill="rgb(227,86,44)" rx="2" ry="2" />
<text  x="818.60" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (6 samples, 0.01%)</title><rect x="996.2" y="341" width="0.1" height="15.0" fill="rgb(206,19,54)" rx="2" ry="2" />
<text  x="999.16" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (6 samples, 0.01%)</title><rect x="147.0" y="245" width="0.1" height="15.0" fill="rgb(225,69,47)" rx="2" ry="2" />
<text  x="149.95" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="458.4" y="277" width="0.2" height="15.0" fill="rgb(242,116,24)" rx="2" ry="2" />
<text  x="461.35" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (14 samples, 0.03%)</title><rect x="848.6" y="325" width="0.4" height="15.0" fill="rgb(239,78,10)" rx="2" ry="2" />
<text  x="851.65" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="101.5" y="389" width="0.2" height="15.0" fill="rgb(215,187,15)" rx="2" ry="2" />
<text  x="104.48" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="391.5" y="213" width="0.3" height="15.0" fill="rgb(214,18,19)" rx="2" ry="2" />
<text  x="394.46" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (7 samples, 0.01%)</title><rect x="409.5" y="213" width="0.2" height="15.0" fill="rgb(237,211,18)" rx="2" ry="2" />
<text  x="412.48" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="698.8" y="453" width="0.1" height="15.0" fill="rgb(242,26,49)" rx="2" ry="2" />
<text  x="701.77" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (27 samples, 0.06%)</title><rect x="588.0" y="405" width="0.7" height="15.0" fill="rgb(213,20,21)" rx="2" ry="2" />
<text  x="590.99" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (678 samples, 1.43%)</title><rect x="558.3" y="373" width="16.9" height="15.0" fill="rgb(213,79,19)" rx="2" ry="2" />
<text  x="561.27" y="383.5" ></text>
</g>
<g >
<title>database::apply_in_memory (23 samples, 0.05%)</title><rect x="1141.8" y="293" width="0.6" height="15.0" fill="rgb(209,5,26)" rx="2" ry="2" />
<text  x="1144.83" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.05%)</title><rect x="940.2" y="325" width="0.6" height="15.0" fill="rgb(224,135,42)" rx="2" ry="2" />
<text  x="943.23" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (85 samples, 0.18%)</title><rect x="691.2" y="485" width="2.1" height="15.0" fill="rgb(205,53,19)" rx="2" ry="2" />
<text  x="694.18" y="495.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (52 samples, 0.11%)</title><rect x="749.7" y="389" width="1.3" height="15.0" fill="rgb(211,122,37)" rx="2" ry="2" />
<text  x="752.66" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (129 samples, 0.27%)</title><rect x="1006.1" y="309" width="3.3" height="15.0" fill="rgb(207,158,49)" rx="2" ry="2" />
<text  x="1009.15" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="272.6" y="293" width="0.2" height="15.0" fill="rgb(208,118,49)" rx="2" ry="2" />
<text  x="275.63" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="942.0" y="389" width="0.4" height="15.0" fill="rgb(227,19,9)" rx="2" ry="2" />
<text  x="945.02" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (139 samples, 0.29%)</title><rect x="948.9" y="405" width="3.4" height="15.0" fill="rgb(220,26,7)" rx="2" ry="2" />
<text  x="951.86" y="415.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.01%)</title><rect x="277.5" y="325" width="0.2" height="15.0" fill="rgb(235,126,41)" rx="2" ry="2" />
<text  x="280.49" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="679.2" y="469" width="0.1" height="15.0" fill="rgb(228,222,28)" rx="2" ry="2" />
<text  x="682.20" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="864.9" y="373" width="0.2" height="15.0" fill="rgb(222,12,6)" rx="2" ry="2" />
<text  x="867.87" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (21 samples, 0.04%)</title><rect x="918.8" y="325" width="0.6" height="15.0" fill="rgb(248,163,2)" rx="2" ry="2" />
<text  x="921.84" y="335.5" ></text>
</g>
<g >
<title>database::query (1,055 samples, 2.23%)</title><rect x="1022.8" y="261" width="26.4" height="15.0" fill="rgb(218,143,6)" rx="2" ry="2" />
<text  x="1025.84" y="271.5" >d..</text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="216.3" y="133" width="0.1" height="15.0" fill="rgb(215,65,8)" rx="2" ry="2" />
<text  x="219.29" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (5 samples, 0.01%)</title><rect x="612.2" y="437" width="0.1" height="15.0" fill="rgb(210,188,40)" rx="2" ry="2" />
<text  x="615.16" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.01%)</title><rect x="17.4" y="261" width="0.1" height="15.0" fill="rgb(249,112,50)" rx="2" ry="2" />
<text  x="20.36" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (24 samples, 0.05%)</title><rect x="1125.2" y="405" width="0.6" height="15.0" fill="rgb(236,119,22)" rx="2" ry="2" />
<text  x="1128.15" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (7 samples, 0.01%)</title><rect x="903.3" y="373" width="0.2" height="15.0" fill="rgb(216,142,13)" rx="2" ry="2" />
<text  x="906.29" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,279 samples, 2.71%)</title><rect x="171.3" y="133" width="31.9" height="15.0" fill="rgb(232,153,18)" rx="2" ry="2" />
<text  x="174.32" y="143.5" >co..</text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="424.1" y="373" width="0.8" height="15.0" fill="rgb(233,47,24)" rx="2" ry="2" />
<text  x="427.08" y="383.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (609 samples, 1.29%)</title><rect x="748.5" y="405" width="15.2" height="15.0" fill="rgb(239,218,14)" rx="2" ry="2" />
<text  x="751.46" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (30 samples, 0.06%)</title><rect x="367.1" y="181" width="0.7" height="15.0" fill="rgb(242,32,37)" rx="2" ry="2" />
<text  x="370.08" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (6 samples, 0.01%)</title><rect x="749.1" y="389" width="0.2" height="15.0" fill="rgb(237,88,9)" rx="2" ry="2" />
<text  x="752.11" y="399.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (34 samples, 0.07%)</title><rect x="468.3" y="293" width="0.8" height="15.0" fill="rgb(246,222,19)" rx="2" ry="2" />
<text  x="471.29" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,385 samples, 13.51%)</title><rect x="725.2" y="501" width="159.4" height="15.0" fill="rgb(224,61,27)" rx="2" ry="2" />
<text  x="728.25" y="511.5" >seastar::internal::d..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (11 samples, 0.02%)</title><rect x="1071.9" y="277" width="0.3" height="15.0" fill="rgb(217,191,28)" rx="2" ry="2" />
<text  x="1074.89" y="287.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (7 samples, 0.01%)</title><rect x="1028.4" y="245" width="0.2" height="15.0" fill="rgb(242,123,26)" rx="2" ry="2" />
<text  x="1031.44" y="255.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="914.7" y="309" width="0.1" height="15.0" fill="rgb(236,107,43)" rx="2" ry="2" />
<text  x="917.69" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="460.5" y="325" width="0.2" height="15.0" fill="rgb(216,125,49)" rx="2" ry="2" />
<text  x="463.55" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5 samples, 0.01%)</title><rect x="115.6" y="357" width="0.1" height="15.0" fill="rgb(246,191,2)" rx="2" ry="2" />
<text  x="118.56" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="231.6" y="245" width="0.3" height="15.0" fill="rgb(244,0,24)" rx="2" ry="2" />
<text  x="234.64" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (8 samples, 0.02%)</title><rect x="192.4" y="53" width="0.2" height="15.0" fill="rgb(209,216,51)" rx="2" ry="2" />
<text  x="195.36" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1035.7" y="181" width="0.1" height="15.0" fill="rgb(253,126,20)" rx="2" ry="2" />
<text  x="1038.67" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (28 samples, 0.06%)</title><rect x="135.2" y="245" width="0.7" height="15.0" fill="rgb(253,28,49)" rx="2" ry="2" />
<text  x="138.20" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (9,886 samples, 20.91%)</title><rect x="894.0" y="437" width="246.8" height="15.0" fill="rgb(254,15,19)" rx="2" ry="2" />
<text  x="897.03" y="447.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="638.5" y="469" width="0.6" height="15.0" fill="rgb(242,200,5)" rx="2" ry="2" />
<text  x="641.54" y="479.5" ></text>
</g>
<g >
<title>operator new (89 samples, 0.19%)</title><rect x="1057.6" y="245" width="2.2" height="15.0" fill="rgb(230,143,48)" rx="2" ry="2" />
<text  x="1060.56" y="255.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%)</title><rect x="606.0" y="421" width="0.2" height="15.0" fill="rgb(208,181,28)" rx="2" ry="2" />
<text  x="608.99" y="431.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (156 samples, 0.33%)</title><rect x="937.4" y="389" width="3.9" height="15.0" fill="rgb(214,2,10)" rx="2" ry="2" />
<text  x="940.43" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%)</title><rect x="1176.0" y="373" width="0.1" height="15.0" fill="rgb(210,128,52)" rx="2" ry="2" />
<text  x="1179.02" y="383.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (11 samples, 0.02%)</title><rect x="791.1" y="357" width="0.3" height="15.0" fill="rgb(236,16,22)" rx="2" ry="2" />
<text  x="794.09" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (57 samples, 0.12%)</title><rect x="758.2" y="309" width="1.4" height="15.0" fill="rgb(243,25,30)" rx="2" ry="2" />
<text  x="761.22" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (6 samples, 0.01%)</title><rect x="1070.0" y="309" width="0.2" height="15.0" fill="rgb(217,50,17)" rx="2" ry="2" />
<text  x="1073.02" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (7 samples, 0.01%)</title><rect x="872.3" y="325" width="0.2" height="15.0" fill="rgb(238,147,29)" rx="2" ry="2" />
<text  x="875.29" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (32 samples, 0.07%)</title><rect x="146.2" y="245" width="0.8" height="15.0" fill="rgb(242,161,52)" rx="2" ry="2" />
<text  x="149.16" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (20 samples, 0.04%)</title><rect x="615.9" y="437" width="0.5" height="15.0" fill="rgb(254,20,44)" rx="2" ry="2" />
<text  x="618.87" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (59 samples, 0.12%)</title><rect x="39.3" y="421" width="1.4" height="15.0" fill="rgb(251,174,35)" rx="2" ry="2" />
<text  x="42.25" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="779.5" y="325" width="0.1" height="15.0" fill="rgb(239,102,23)" rx="2" ry="2" />
<text  x="782.46" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%)</title><rect x="713.7" y="421" width="0.1" height="15.0" fill="rgb(221,224,29)" rx="2" ry="2" />
<text  x="716.67" y="431.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (24 samples, 0.05%)</title><rect x="759.9" y="309" width="0.6" height="15.0" fill="rgb(239,45,53)" rx="2" ry="2" />
<text  x="762.89" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="1055.8" y="229" width="0.2" height="15.0" fill="rgb(252,135,8)" rx="2" ry="2" />
<text  x="1058.82" y="239.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.02%)</title><rect x="23.0" y="549" width="0.3" height="15.0" fill="rgb(246,93,10)" rx="2" ry="2" />
<text  x="26.03" y="559.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (7 samples, 0.01%)</title><rect x="80.8" y="453" width="0.2" height="15.0" fill="rgb(247,54,52)" rx="2" ry="2" />
<text  x="83.84" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="399.6" y="229" width="0.1" height="15.0" fill="rgb(225,146,45)" rx="2" ry="2" />
<text  x="402.57" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="421" width="0.8" height="15.0" fill="rgb(217,26,35)" rx="2" ry="2" />
<text  x="1145.58" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (91 samples, 0.19%)</title><rect x="870.2" y="389" width="2.3" height="15.0" fill="rgb(231,128,6)" rx="2" ry="2" />
<text  x="873.21" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="646.8" y="485" width="0.1" height="15.0" fill="rgb(252,131,39)" rx="2" ry="2" />
<text  x="649.82" y="495.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="217.4" y="149" width="0.1" height="15.0" fill="rgb(226,206,14)" rx="2" ry="2" />
<text  x="220.42" y="159.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (31 samples, 0.07%)</title><rect x="419.4" y="261" width="0.8" height="15.0" fill="rgb(235,173,15)" rx="2" ry="2" />
<text  x="422.42" y="271.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (45 samples, 0.10%)</title><rect x="1039.1" y="149" width="1.2" height="15.0" fill="rgb(210,74,27)" rx="2" ry="2" />
<text  x="1042.14" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="704.5" y="485" width="0.2" height="15.0" fill="rgb(224,172,33)" rx="2" ry="2" />
<text  x="707.53" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,821 samples, 5.97%)</title><rect x="780.5" y="405" width="70.4" height="15.0" fill="rgb(243,216,0)" rx="2" ry="2" />
<text  x="783.48" y="415.5" >service..</text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%)</title><rect x="992.4" y="341" width="0.2" height="15.0" fill="rgb(219,227,17)" rx="2" ry="2" />
<text  x="995.44" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,865 samples, 10.29%)</title><rect x="293.9" y="277" width="121.4" height="15.0" fill="rgb(238,42,34)" rx="2" ry="2" />
<text  x="296.89" y="287.5" >flat_mutation_r..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="452.9" y="293" width="0.1" height="15.0" fill="rgb(207,80,45)" rx="2" ry="2" />
<text  x="455.89" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="1110.1" y="357" width="0.3" height="15.0" fill="rgb(220,46,11)" rx="2" ry="2" />
<text  x="1113.10" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (8 samples, 0.02%)</title><rect x="955.3" y="341" width="0.2" height="15.0" fill="rgb(226,89,28)" rx="2" ry="2" />
<text  x="958.33" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="1084.9" y="325" width="0.2" height="15.0" fill="rgb(243,94,16)" rx="2" ry="2" />
<text  x="1087.94" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (18 samples, 0.04%)</title><rect x="1044.2" y="213" width="0.4" height="15.0" fill="rgb(221,98,21)" rx="2" ry="2" />
<text  x="1047.18" y="223.5" ></text>
</g>
<g >
<title>database::find_schema (91 samples, 0.19%)</title><rect x="772.0" y="389" width="2.3" height="15.0" fill="rgb(245,7,46)" rx="2" ry="2" />
<text  x="775.02" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (17 samples, 0.04%)</title><rect x="451.6" y="293" width="0.4" height="15.0" fill="rgb(236,203,45)" rx="2" ry="2" />
<text  x="454.61" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (25 samples, 0.05%)</title><rect x="589.3" y="421" width="0.6" height="15.0" fill="rgb(254,138,36)" rx="2" ry="2" />
<text  x="592.27" y="431.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (415 samples, 0.88%)</title><rect x="305.4" y="213" width="10.4" height="15.0" fill="rgb(231,224,32)" rx="2" ry="2" />
<text  x="308.42" y="223.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.13%)</title><rect x="994.0" y="293" width="1.5" height="15.0" fill="rgb(214,60,0)" rx="2" ry="2" />
<text  x="997.04" y="303.5" ></text>
</g>
<g >
<title>__tls_init (16 samples, 0.03%)</title><rect x="535.8" y="293" width="0.4" height="15.0" fill="rgb(207,94,28)" rx="2" ry="2" />
<text  x="538.75" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="939.6" y="341" width="0.2" height="15.0" fill="rgb(238,6,1)" rx="2" ry="2" />
<text  x="942.60" y="351.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (80 samples, 0.17%)</title><rect x="532.6" y="309" width="2.0" height="15.0" fill="rgb(232,161,33)" rx="2" ry="2" />
<text  x="535.61" y="319.5" ></text>
</g>
<g >
<title>[[vdso]] (263 samples, 0.56%)</title><rect x="1179.0" y="613" width="6.6" height="15.0" fill="rgb(228,154,44)" rx="2" ry="2" />
<text  x="1181.99" y="623.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (11 samples, 0.02%)</title><rect x="1086.8" y="309" width="0.3" height="15.0" fill="rgb(223,220,23)" rx="2" ry="2" />
<text  x="1089.79" y="319.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (5 samples, 0.01%)</title><rect x="928.1" y="373" width="0.2" height="15.0" fill="rgb(251,15,3)" rx="2" ry="2" />
<text  x="931.15" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (55 samples, 0.12%)</title><rect x="1154.0" y="437" width="1.4" height="15.0" fill="rgb(240,201,41)" rx="2" ry="2" />
<text  x="1157.03" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (59 samples, 0.12%)</title><rect x="776.4" y="341" width="1.5" height="15.0" fill="rgb(215,38,47)" rx="2" ry="2" />
<text  x="779.44" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.02%)</title><rect x="1028.2" y="197" width="0.2" height="15.0" fill="rgb(232,187,12)" rx="2" ry="2" />
<text  x="1031.24" y="207.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (6 samples, 0.01%)</title><rect x="607.4" y="421" width="0.1" height="15.0" fill="rgb(214,219,42)" rx="2" ry="2" />
<text  x="610.36" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (16 samples, 0.03%)</title><rect x="310.9" y="165" width="0.4" height="15.0" fill="rgb(207,148,53)" rx="2" ry="2" />
<text  x="313.89" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (208 samples, 0.44%)</title><rect x="221.1" y="197" width="5.2" height="15.0" fill="rgb(253,181,49)" rx="2" ry="2" />
<text  x="224.11" y="207.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (26 samples, 0.05%)</title><rect x="477.5" y="277" width="0.6" height="15.0" fill="rgb(215,97,23)" rx="2" ry="2" />
<text  x="480.50" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (21 samples, 0.04%)</title><rect x="659.8" y="469" width="0.5" height="15.0" fill="rgb(223,179,6)" rx="2" ry="2" />
<text  x="662.78" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (62 samples, 0.13%)</title><rect x="653.4" y="437" width="1.5" height="15.0" fill="rgb(236,183,12)" rx="2" ry="2" />
<text  x="656.36" y="447.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="296.0" y="245" width="0.3" height="15.0" fill="rgb(219,56,19)" rx="2" ry="2" />
<text  x="298.96" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (245 samples, 0.52%)</title><rect x="757.4" y="357" width="6.2" height="15.0" fill="rgb(254,78,41)" rx="2" ry="2" />
<text  x="760.45" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (20 samples, 0.04%)</title><rect x="41.5" y="453" width="0.5" height="15.0" fill="rgb(237,220,50)" rx="2" ry="2" />
<text  x="44.52" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="556.6" y="421" width="0.1" height="15.0" fill="rgb(208,190,41)" rx="2" ry="2" />
<text  x="559.59" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="230.0" y="229" width="0.3" height="15.0" fill="rgb(232,191,44)" rx="2" ry="2" />
<text  x="233.02" y="239.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (13 samples, 0.03%)</title><rect x="1128.1" y="421" width="0.4" height="15.0" fill="rgb(244,33,4)" rx="2" ry="2" />
<text  x="1131.15" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (38 samples, 0.08%)</title><rect x="224.4" y="149" width="1.0" height="15.0" fill="rgb(208,1,23)" rx="2" ry="2" />
<text  x="227.40" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (18 samples, 0.04%)</title><rect x="64.0" y="421" width="0.5" height="15.0" fill="rgb(253,197,24)" rx="2" ry="2" />
<text  x="67.04" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (31 samples, 0.07%)</title><rect x="624.9" y="405" width="0.8" height="15.0" fill="rgb(247,4,47)" rx="2" ry="2" />
<text  x="627.88" y="415.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (32 samples, 0.07%)</title><rect x="533.5" y="261" width="0.8" height="15.0" fill="rgb(232,28,10)" rx="2" ry="2" />
<text  x="536.46" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (33 samples, 0.07%)</title><rect x="795.4" y="293" width="0.8" height="15.0" fill="rgb(224,205,41)" rx="2" ry="2" />
<text  x="798.39" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (93 samples, 0.20%)</title><rect x="670.1" y="469" width="2.4" height="15.0" fill="rgb(235,163,12)" rx="2" ry="2" />
<text  x="673.14" y="479.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (44 samples, 0.09%)</title><rect x="1165.1" y="453" width="1.1" height="15.0" fill="rgb(224,121,1)" rx="2" ry="2" />
<text  x="1168.09" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (93 samples, 0.20%)</title><rect x="154.6" y="197" width="2.4" height="15.0" fill="rgb(245,86,43)" rx="2" ry="2" />
<text  x="157.64" y="207.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (89 samples, 0.19%)</title><rect x="752.2" y="341" width="2.3" height="15.0" fill="rgb(240,4,32)" rx="2" ry="2" />
<text  x="755.23" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (18 samples, 0.04%)</title><rect x="1039.8" y="133" width="0.5" height="15.0" fill="rgb(206,162,34)" rx="2" ry="2" />
<text  x="1042.82" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (522 samples, 1.10%)</title><rect x="265.1" y="357" width="13.0" height="15.0" fill="rgb(213,71,32)" rx="2" ry="2" />
<text  x="268.11" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (52 samples, 0.11%)</title><rect x="1112.7" y="405" width="1.3" height="15.0" fill="rgb(237,154,32)" rx="2" ry="2" />
<text  x="1115.75" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="573.5" y="293" width="0.2" height="15.0" fill="rgb(226,29,31)" rx="2" ry="2" />
<text  x="576.49" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="805.6" y="261" width="0.1" height="15.0" fill="rgb(224,144,33)" rx="2" ry="2" />
<text  x="808.59" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (448 samples, 0.95%)</title><rect x="1033.5" y="229" width="11.2" height="15.0" fill="rgb(209,208,9)" rx="2" ry="2" />
<text  x="1036.50" y="239.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (140 samples, 0.30%)</title><rect x="308.3" y="181" width="3.5" height="15.0" fill="rgb(236,96,40)" rx="2" ry="2" />
<text  x="311.32" y="191.5" ></text>
</g>
<g >
<title>perf_simple_que (47,274 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(205,91,35)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (200 samples, 0.42%)</title><rect x="16.1" y="389" width="5.0" height="15.0" fill="rgb(244,101,35)" rx="2" ry="2" />
<text  x="19.09" y="399.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (57 samples, 0.12%)</title><rect x="538.0" y="261" width="1.5" height="15.0" fill="rgb(215,166,41)" rx="2" ry="2" />
<text  x="541.05" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (85 samples, 0.18%)</title><rect x="855.9" y="421" width="2.1" height="15.0" fill="rgb(225,74,43)" rx="2" ry="2" />
<text  x="858.89" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%)</title><rect x="668.9" y="485" width="0.8" height="15.0" fill="rgb(226,163,3)" rx="2" ry="2" />
<text  x="671.94" y="495.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="100.2" y="389" width="0.7" height="15.0" fill="rgb(236,44,31)" rx="2" ry="2" />
<text  x="103.20" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (138 samples, 0.29%)</title><rect x="714.0" y="437" width="3.5" height="15.0" fill="rgb(252,121,15)" rx="2" ry="2" />
<text  x="717.04" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (100 samples, 0.21%)</title><rect x="570.0" y="293" width="2.5" height="15.0" fill="rgb(254,110,29)" rx="2" ry="2" />
<text  x="573.00" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (73 samples, 0.15%)</title><rect x="535.1" y="309" width="1.8" height="15.0" fill="rgb(245,54,6)" rx="2" ry="2" />
<text  x="538.10" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%)</title><rect x="16.2" y="293" width="0.1" height="15.0" fill="rgb(213,119,18)" rx="2" ry="2" />
<text  x="19.17" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="484.9" y="181" width="0.2" height="15.0" fill="rgb(214,11,21)" rx="2" ry="2" />
<text  x="487.91" y="191.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (41 samples, 0.09%)</title><rect x="1081.3" y="293" width="1.1" height="15.0" fill="rgb(229,10,18)" rx="2" ry="2" />
<text  x="1084.35" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (63 samples, 0.13%)</title><rect x="1168.3" y="485" width="1.5" height="15.0" fill="rgb(223,221,49)" rx="2" ry="2" />
<text  x="1171.26" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (36 samples, 0.08%)</title><rect x="840.8" y="373" width="0.9" height="15.0" fill="rgb(220,208,2)" rx="2" ry="2" />
<text  x="843.81" y="383.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (48 samples, 0.10%)</title><rect x="1101.8" y="309" width="1.2" height="15.0" fill="rgb(229,224,44)" rx="2" ry="2" />
<text  x="1104.82" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (12 samples, 0.03%)</title><rect x="601.8" y="389" width="0.3" height="15.0" fill="rgb(205,194,7)" rx="2" ry="2" />
<text  x="604.80" y="399.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.10%)</title><rect x="496.5" y="293" width="1.2" height="15.0" fill="rgb(222,29,28)" rx="2" ry="2" />
<text  x="499.54" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (39 samples, 0.08%)</title><rect x="102.2" y="437" width="1.0" height="15.0" fill="rgb(236,211,21)" rx="2" ry="2" />
<text  x="105.23" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (143 samples, 0.30%)</title><rect x="874.1" y="421" width="3.6" height="15.0" fill="rgb(221,178,23)" rx="2" ry="2" />
<text  x="877.13" y="431.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (67 samples, 0.14%)</title><rect x="794.7" y="325" width="1.7" height="15.0" fill="rgb(230,224,44)" rx="2" ry="2" />
<text  x="797.69" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="1142.8" y="261" width="0.6" height="15.0" fill="rgb(231,16,38)" rx="2" ry="2" />
<text  x="1145.83" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="577.6" y="325" width="0.1" height="15.0" fill="rgb(225,189,53)" rx="2" ry="2" />
<text  x="580.56" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%)</title><rect x="1077.5" y="309" width="1.6" height="15.0" fill="rgb(224,169,52)" rx="2" ry="2" />
<text  x="1080.46" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (16 samples, 0.03%)</title><rect x="955.6" y="341" width="0.4" height="15.0" fill="rgb(223,103,47)" rx="2" ry="2" />
<text  x="958.60" y="351.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="236.4" y="197" width="0.2" height="15.0" fill="rgb(251,28,37)" rx="2" ry="2" />
<text  x="239.44" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (31 samples, 0.07%)</title><rect x="466.2" y="309" width="0.8" height="15.0" fill="rgb(230,151,31)" rx="2" ry="2" />
<text  x="469.19" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="523.7" y="261" width="0.8" height="15.0" fill="rgb(212,30,16)" rx="2" ry="2" />
<text  x="526.72" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (45 samples, 0.10%)</title><rect x="16.4" y="293" width="1.1" height="15.0" fill="rgb(236,152,43)" rx="2" ry="2" />
<text  x="19.39" y="303.5" ></text>
</g>
<g >
<title>__libc_start_main (46,255 samples, 97.84%)</title><rect x="23.4" y="629" width="1154.5" height="15.0" fill="rgb(249,36,12)" rx="2" ry="2" />
<text  x="26.40" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>row::external_memory_usage (249 samples, 0.53%)</title><rect x="204.1" y="149" width="6.3" height="15.0" fill="rgb(214,86,23)" rx="2" ry="2" />
<text  x="207.14" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%)</title><rect x="94.1" y="437" width="0.4" height="15.0" fill="rgb(241,144,21)" rx="2" ry="2" />
<text  x="97.14" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="521.8" y="325" width="0.1" height="15.0" fill="rgb(207,124,30)" rx="2" ry="2" />
<text  x="524.80" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.01%)</title><rect x="822.7" y="69" width="0.1" height="15.0" fill="rgb(227,174,33)" rx="2" ry="2" />
<text  x="825.67" y="79.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (5 samples, 0.01%)</title><rect x="561.5" y="325" width="0.2" height="15.0" fill="rgb(221,226,32)" rx="2" ry="2" />
<text  x="564.54" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (28 samples, 0.06%)</title><rect x="536.2" y="293" width="0.7" height="15.0" fill="rgb(226,160,27)" rx="2" ry="2" />
<text  x="539.23" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%)</title><rect x="392.1" y="197" width="0.5" height="15.0" fill="rgb(213,221,24)" rx="2" ry="2" />
<text  x="395.08" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (29 samples, 0.06%)</title><rect x="1027.7" y="229" width="0.7" height="15.0" fill="rgb(220,111,38)" rx="2" ry="2" />
<text  x="1030.71" y="239.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (15 samples, 0.03%)</title><rect x="969.7" y="389" width="0.4" height="15.0" fill="rgb(235,100,24)" rx="2" ry="2" />
<text  x="972.70" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="714.5" y="421" width="0.2" height="15.0" fill="rgb(243,226,28)" rx="2" ry="2" />
<text  x="717.47" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (155 samples, 0.33%)</title><rect x="679.5" y="469" width="3.8" height="15.0" fill="rgb(211,180,50)" rx="2" ry="2" />
<text  x="682.47" y="479.5" ></text>
</g>
<g >
<title>partition_entry::read (68 samples, 0.14%)</title><rect x="522.8" y="309" width="1.7" height="15.0" fill="rgb(250,210,12)" rx="2" ry="2" />
<text  x="525.80" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (75 samples, 0.16%)</title><rect x="234.5" y="213" width="1.8" height="15.0" fill="rgb(222,136,15)" rx="2" ry="2" />
<text  x="237.46" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,135 samples, 48.94%)</title><rect x="52.6" y="485" width="577.4" height="15.0" fill="rgb(233,187,24)" rx="2" ry="2" />
<text  x="55.58" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="505.4" y="245" width="0.3" height="15.0" fill="rgb(232,212,36)" rx="2" ry="2" />
<text  x="508.40" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="202.9" y="117" width="0.3" height="15.0" fill="rgb(248,194,29)" rx="2" ry="2" />
<text  x="205.94" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%)</title><rect x="1170.9" y="453" width="0.5" height="15.0" fill="rgb(222,91,8)" rx="2" ry="2" />
<text  x="1173.86" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (78 samples, 0.16%)</title><rect x="757.7" y="325" width="2.0" height="15.0" fill="rgb(226,173,4)" rx="2" ry="2" />
<text  x="760.75" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="881.5" y="405" width="0.2" height="15.0" fill="rgb(233,94,37)" rx="2" ry="2" />
<text  x="884.52" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (12 samples, 0.03%)</title><rect x="829.0" y="277" width="0.3" height="15.0" fill="rgb(214,161,11)" rx="2" ry="2" />
<text  x="832.01" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (24 samples, 0.05%)</title><rect x="136.6" y="229" width="0.6" height="15.0" fill="rgb(208,133,30)" rx="2" ry="2" />
<text  x="139.57" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (24 samples, 0.05%)</title><rect x="508.4" y="229" width="0.6" height="15.0" fill="rgb(231,103,0)" rx="2" ry="2" />
<text  x="511.42" y="239.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,255 samples, 97.84%)</title><rect x="23.4" y="581" width="1154.5" height="15.0" fill="rgb(219,147,22)" rx="2" ry="2" />
<text  x="26.40" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (45 samples, 0.10%)</title><rect x="1155.6" y="453" width="1.2" height="15.0" fill="rgb(240,189,22)" rx="2" ry="2" />
<text  x="1158.63" y="463.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (322 samples, 0.68%)</title><rect x="482.5" y="245" width="8.1" height="15.0" fill="rgb(217,35,9)" rx="2" ry="2" />
<text  x="485.51" y="255.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.03%)</title><rect x="209.7" y="117" width="0.3" height="15.0" fill="rgb(234,134,1)" rx="2" ry="2" />
<text  x="212.65" y="127.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1012.2" y="277" width="0.2" height="15.0" fill="rgb(208,97,48)" rx="2" ry="2" />
<text  x="1015.21" y="287.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (424 samples, 0.90%)</title><rect x="530.3" y="325" width="10.5" height="15.0" fill="rgb(223,125,4)" rx="2" ry="2" />
<text  x="533.26" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="1133.2" y="373" width="0.5" height="15.0" fill="rgb(214,21,17)" rx="2" ry="2" />
<text  x="1136.19" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="675.6" y="453" width="0.1" height="15.0" fill="rgb(213,120,53)" rx="2" ry="2" />
<text  x="678.60" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (10 samples, 0.02%)</title><rect x="660.8" y="437" width="0.3" height="15.0" fill="rgb(207,40,32)" rx="2" ry="2" />
<text  x="663.83" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (6 samples, 0.01%)</title><rect x="914.5" y="309" width="0.2" height="15.0" fill="rgb(243,95,34)" rx="2" ry="2" />
<text  x="917.54" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,318 samples, 11.25%)</title><rect x="287.5" y="325" width="132.7" height="15.0" fill="rgb(220,142,5)" rx="2" ry="2" />
<text  x="290.45" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (99 samples, 0.21%)</title><rect x="674.0" y="485" width="2.5" height="15.0" fill="rgb(238,10,38)" rx="2" ry="2" />
<text  x="677.01" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (5 samples, 0.01%)</title><rect x="449.3" y="277" width="0.1" height="15.0" fill="rgb(227,172,6)" rx="2" ry="2" />
<text  x="452.29" y="287.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="485.1" y="197" width="0.3" height="15.0" fill="rgb(240,139,0)" rx="2" ry="2" />
<text  x="488.09" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="946.0" y="405" width="0.2" height="15.0" fill="rgb(235,62,12)" rx="2" ry="2" />
<text  x="949.04" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%)</title><rect x="760.0" y="277" width="0.5" height="15.0" fill="rgb(213,196,39)" rx="2" ry="2" />
<text  x="763.04" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (50 samples, 0.11%)</title><rect x="754.7" y="373" width="1.2" height="15.0" fill="rgb(205,201,49)" rx="2" ry="2" />
<text  x="757.70" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (15 samples, 0.03%)</title><rect x="457.8" y="277" width="0.4" height="15.0" fill="rgb(233,131,14)" rx="2" ry="2" />
<text  x="460.80" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (18 samples, 0.04%)</title><rect x="1054.1" y="277" width="0.5" height="15.0" fill="rgb(229,193,39)" rx="2" ry="2" />
<text  x="1057.14" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (151 samples, 0.32%)</title><rect x="999.4" y="325" width="3.7" height="15.0" fill="rgb(216,170,27)" rx="2" ry="2" />
<text  x="1002.36" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="42.6" y="453" width="0.3" height="15.0" fill="rgb(224,84,32)" rx="2" ry="2" />
<text  x="45.60" y="463.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="626.9" y="389" width="0.5" height="15.0" fill="rgb(211,15,49)" rx="2" ry="2" />
<text  x="629.93" y="399.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="614.2" y="421" width="0.5" height="15.0" fill="rgb(221,66,27)" rx="2" ry="2" />
<text  x="617.20" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (49 samples, 0.10%)</title><rect x="279.9" y="389" width="1.2" height="15.0" fill="rgb(213,61,44)" rx="2" ry="2" />
<text  x="282.92" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (306 samples, 0.65%)</title><rect x="588.9" y="437" width="7.6" height="15.0" fill="rgb(252,65,2)" rx="2" ry="2" />
<text  x="591.89" y="447.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,077 samples, 2.28%)</title><rect x="494.9" y="325" width="26.9" height="15.0" fill="rgb(218,115,8)" rx="2" ry="2" />
<text  x="497.92" y="335.5" >m..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="514.0" y="165" width="0.2" height="15.0" fill="rgb(225,172,12)" rx="2" ry="2" />
<text  x="517.01" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (6 samples, 0.01%)</title><rect x="415.3" y="277" width="0.2" height="15.0" fill="rgb(214,67,1)" rx="2" ry="2" />
<text  x="418.32" y="287.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (213 samples, 0.45%)</title><rect x="15.9" y="437" width="5.3" height="15.0" fill="rgb(235,225,15)" rx="2" ry="2" />
<text  x="18.89" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (88 samples, 0.19%)</title><rect x="783.3" y="373" width="2.2" height="15.0" fill="rgb(213,51,17)" rx="2" ry="2" />
<text  x="786.28" y="383.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="96.2" y="437" width="0.6" height="15.0" fill="rgb(230,82,50)" rx="2" ry="2" />
<text  x="99.24" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (29 samples, 0.06%)</title><rect x="639.7" y="469" width="0.7" height="15.0" fill="rgb(206,118,5)" rx="2" ry="2" />
<text  x="642.71" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (22 samples, 0.05%)</title><rect x="459.3" y="325" width="0.5" height="15.0" fill="rgb(219,192,17)" rx="2" ry="2" />
<text  x="462.25" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%)</title><rect x="841.9" y="373" width="0.1" height="15.0" fill="rgb(213,4,50)" rx="2" ry="2" />
<text  x="844.86" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (14 samples, 0.03%)</title><rect x="393.8" y="229" width="0.4" height="15.0" fill="rgb(235,228,2)" rx="2" ry="2" />
<text  x="396.83" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="424.1" y="357" width="0.8" height="15.0" fill="rgb(207,133,15)" rx="2" ry="2" />
<text  x="427.13" y="367.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (62 samples, 0.13%)</title><rect x="911.7" y="293" width="1.6" height="15.0" fill="rgb(248,150,54)" rx="2" ry="2" />
<text  x="914.72" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt; (9 samples, 0.02%)</title><rect x="601.6" y="389" width="0.2" height="15.0" fill="rgb(213,32,46)" rx="2" ry="2" />
<text  x="604.57" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (5 samples, 0.01%)</title><rect x="168.5" y="149" width="0.1" height="15.0" fill="rgb(213,201,34)" rx="2" ry="2" />
<text  x="171.49" y="159.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (213 samples, 0.45%)</title><rect x="15.9" y="469" width="5.3" height="15.0" fill="rgb(217,214,44)" rx="2" ry="2" />
<text  x="18.89" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1075.1" y="325" width="0.2" height="15.0" fill="rgb(213,207,25)" rx="2" ry="2" />
<text  x="1078.06" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="721.7" y="485" width="0.2" height="15.0" fill="rgb(210,228,36)" rx="2" ry="2" />
<text  x="724.70" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="1120.2" y="341" width="1.8" height="15.0" fill="rgb(218,165,12)" rx="2" ry="2" />
<text  x="1123.24" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (47 samples, 0.10%)</title><rect x="947.1" y="405" width="1.2" height="15.0" fill="rgb(233,194,24)" rx="2" ry="2" />
<text  x="950.12" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (25 samples, 0.05%)</title><rect x="562.5" y="325" width="0.6" height="15.0" fill="rgb(233,7,6)" rx="2" ry="2" />
<text  x="565.51" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%)</title><rect x="695.0" y="389" width="0.7" height="15.0" fill="rgb(246,98,1)" rx="2" ry="2" />
<text  x="698.02" y="399.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (121 samples, 0.26%)</title><rect x="537.3" y="293" width="3.0" height="15.0" fill="rgb(219,12,29)" rx="2" ry="2" />
<text  x="540.30" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,173 samples, 4.60%)</title><rect x="165.4" y="197" width="54.2" height="15.0" fill="rgb(221,189,52)" rx="2" ry="2" />
<text  x="168.37" y="207.5" >parti..</text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="425.7" y="373" width="0.5" height="15.0" fill="rgb(207,135,32)" rx="2" ry="2" />
<text  x="428.73" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (447 samples, 0.95%)</title><rect x="575.6" y="389" width="11.1" height="15.0" fill="rgb(214,189,50)" rx="2" ry="2" />
<text  x="578.59" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (10 samples, 0.02%)</title><rect x="696.0" y="469" width="0.2" height="15.0" fill="rgb(243,134,7)" rx="2" ry="2" />
<text  x="698.97" y="479.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (77 samples, 0.16%)</title><rect x="136.0" y="245" width="1.9" height="15.0" fill="rgb(207,151,16)" rx="2" ry="2" />
<text  x="139.02" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (15 samples, 0.03%)</title><rect x="132.0" y="245" width="0.4" height="15.0" fill="rgb(221,75,41)" rx="2" ry="2" />
<text  x="134.98" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (12 samples, 0.03%)</title><rect x="656.6" y="389" width="0.3" height="15.0" fill="rgb(228,12,40)" rx="2" ry="2" />
<text  x="659.63" y="399.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="619.0" y="421" width="0.5" height="15.0" fill="rgb(236,228,19)" rx="2" ry="2" />
<text  x="622.04" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (50 samples, 0.11%)</title><rect x="1060.0" y="245" width="1.2" height="15.0" fill="rgb(226,173,30)" rx="2" ry="2" />
<text  x="1062.98" y="255.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="612.0" y="437" width="0.2" height="15.0" fill="rgb(211,162,28)" rx="2" ry="2" />
<text  x="615.03" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (5 samples, 0.01%)</title><rect x="836.7" y="325" width="0.1" height="15.0" fill="rgb(224,15,51)" rx="2" ry="2" />
<text  x="839.72" y="335.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="498.1" y="309" width="0.4" height="15.0" fill="rgb(244,206,15)" rx="2" ry="2" />
<text  x="501.14" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (421 samples, 0.89%)</title><rect x="480.1" y="277" width="10.5" height="15.0" fill="rgb(214,173,45)" rx="2" ry="2" />
<text  x="483.07" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (5 samples, 0.01%)</title><rect x="633.8" y="501" width="0.1" height="15.0" fill="rgb(229,28,13)" rx="2" ry="2" />
<text  x="636.82" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (41 samples, 0.09%)</title><rect x="842.7" y="325" width="1.1" height="15.0" fill="rgb(207,63,2)" rx="2" ry="2" />
<text  x="845.73" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="913.8" y="309" width="0.2" height="15.0" fill="rgb(226,109,30)" rx="2" ry="2" />
<text  x="916.82" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (507 samples, 1.07%)</title><rect x="751.0" y="389" width="12.7" height="15.0" fill="rgb(222,228,12)" rx="2" ry="2" />
<text  x="754.01" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="1069.0" y="293" width="0.5" height="15.0" fill="rgb(246,188,35)" rx="2" ry="2" />
<text  x="1072.04" y="303.5" ></text>
</g>
<g >
<title>schema::position (20 samples, 0.04%)</title><rect x="1128.5" y="421" width="0.5" height="15.0" fill="rgb(208,144,40)" rx="2" ry="2" />
<text  x="1131.52" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="40.4" y="389" width="0.3" height="15.0" fill="rgb(249,134,11)" rx="2" ry="2" />
<text  x="43.38" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.03%)</title><rect x="609.3" y="421" width="0.3" height="15.0" fill="rgb(209,56,3)" rx="2" ry="2" />
<text  x="612.33" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="512.3" y="181" width="0.8" height="15.0" fill="rgb(222,68,31)" rx="2" ry="2" />
<text  x="515.32" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (99 samples, 0.21%)</title><rect x="196.9" y="69" width="2.5" height="15.0" fill="rgb(222,135,15)" rx="2" ry="2" />
<text  x="199.90" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (5 samples, 0.01%)</title><rect x="917.4" y="357" width="0.1" height="15.0" fill="rgb(231,121,35)" rx="2" ry="2" />
<text  x="920.41" y="367.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%)</title><rect x="629.1" y="437" width="0.1" height="15.0" fill="rgb(253,96,9)" rx="2" ry="2" />
<text  x="632.05" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (6 samples, 0.01%)</title><rect x="325.9" y="181" width="0.1" height="15.0" fill="rgb(237,6,14)" rx="2" ry="2" />
<text  x="328.89" y="191.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="22.5" y="453" width="0.2" height="15.0" fill="rgb(246,143,22)" rx="2" ry="2" />
<text  x="25.53" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (8 samples, 0.02%)</title><rect x="1138.1" y="421" width="0.2" height="15.0" fill="rgb(222,38,48)" rx="2" ry="2" />
<text  x="1141.11" y="431.5" ></text>
</g>
<g >
<title>database::do_apply (28 samples, 0.06%)</title><rect x="1141.8" y="341" width="0.7" height="15.0" fill="rgb(226,123,51)" rx="2" ry="2" />
<text  x="1144.80" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="426.6" y="389" width="0.1" height="15.0" fill="rgb(210,222,7)" rx="2" ry="2" />
<text  x="429.55" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (22 samples, 0.05%)</title><rect x="364.6" y="197" width="0.6" height="15.0" fill="rgb(228,39,22)" rx="2" ry="2" />
<text  x="367.63" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%)</title><rect x="1035.9" y="165" width="0.3" height="15.0" fill="rgb(252,76,29)" rx="2" ry="2" />
<text  x="1038.90" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,097 samples, 97.51%)</title><rect x="26.0" y="517" width="1150.5" height="15.0" fill="rgb(231,50,20)" rx="2" ry="2" />
<text  x="28.97" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%)</title><rect x="1063.7" y="325" width="0.2" height="15.0" fill="rgb(229,66,39)" rx="2" ry="2" />
<text  x="1066.68" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (5 samples, 0.01%)</title><rect x="785.5" y="373" width="0.1" height="15.0" fill="rgb(229,155,31)" rx="2" ry="2" />
<text  x="788.48" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (23 samples, 0.05%)</title><rect x="546.8" y="421" width="0.6" height="15.0" fill="rgb(248,38,15)" rx="2" ry="2" />
<text  x="549.79" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="1171.4" y="453" width="0.6" height="15.0" fill="rgb(210,183,38)" rx="2" ry="2" />
<text  x="1174.36" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (33 samples, 0.07%)</title><rect x="776.5" y="325" width="0.8" height="15.0" fill="rgb(246,47,20)" rx="2" ry="2" />
<text  x="779.47" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="849.8" y="309" width="0.5" height="15.0" fill="rgb(207,135,40)" rx="2" ry="2" />
<text  x="852.77" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="1042.7" y="197" width="0.1" height="15.0" fill="rgb(247,227,16)" rx="2" ry="2" />
<text  x="1045.66" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (9 samples, 0.02%)</title><rect x="21.8" y="373" width="0.2" height="15.0" fill="rgb(215,156,4)" rx="2" ry="2" />
<text  x="24.81" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (5 samples, 0.01%)</title><rect x="365.2" y="197" width="0.1" height="15.0" fill="rgb(240,126,24)" rx="2" ry="2" />
<text  x="368.18" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (580 samples, 1.23%)</title><rect x="503.6" y="277" width="14.5" height="15.0" fill="rgb(227,141,27)" rx="2" ry="2" />
<text  x="506.63" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (18 samples, 0.04%)</title><rect x="275.3" y="277" width="0.5" height="15.0" fill="rgb(225,2,30)" rx="2" ry="2" />
<text  x="278.32" y="287.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (10 samples, 0.02%)</title><rect x="927.7" y="373" width="0.2" height="15.0" fill="rgb(223,128,8)" rx="2" ry="2" />
<text  x="930.67" y="383.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="940.8" y="325" width="0.1" height="15.0" fill="rgb(237,150,18)" rx="2" ry="2" />
<text  x="943.78" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (98 samples, 0.21%)</title><rect x="130.3" y="261" width="2.4" height="15.0" fill="rgb(248,128,31)" rx="2" ry="2" />
<text  x="133.26" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (27 samples, 0.06%)</title><rect x="366.2" y="197" width="0.7" height="15.0" fill="rgb(245,109,36)" rx="2" ry="2" />
<text  x="369.20" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="1159.5" y="373" width="0.7" height="15.0" fill="rgb(251,104,16)" rx="2" ry="2" />
<text  x="1162.50" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="1155.3" y="421" width="0.1" height="15.0" fill="rgb(217,179,46)" rx="2" ry="2" />
<text  x="1158.26" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="41.9" y="437" width="0.1" height="15.0" fill="rgb(226,131,4)" rx="2" ry="2" />
<text  x="44.87" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (109 samples, 0.23%)</title><rect x="751.8" y="373" width="2.7" height="15.0" fill="rgb(225,174,3)" rx="2" ry="2" />
<text  x="754.78" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="811.4" y="197" width="0.4" height="15.0" fill="rgb(237,87,7)" rx="2" ry="2" />
<text  x="814.43" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (131 samples, 0.28%)</title><rect x="953.2" y="405" width="3.3" height="15.0" fill="rgb(243,158,10)" rx="2" ry="2" />
<text  x="956.21" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.04%)</title><rect x="838.2" y="277" width="0.5" height="15.0" fill="rgb(241,43,26)" rx="2" ry="2" />
<text  x="841.24" y="287.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (37 samples, 0.08%)</title><rect x="819.7" y="149" width="0.9" height="15.0" fill="rgb(217,21,27)" rx="2" ry="2" />
<text  x="822.72" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (6 samples, 0.01%)</title><rect x="501.7" y="293" width="0.2" height="15.0" fill="rgb(206,95,21)" rx="2" ry="2" />
<text  x="504.71" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="846.3" y="293" width="0.6" height="15.0" fill="rgb(242,19,38)" rx="2" ry="2" />
<text  x="849.30" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="162.6" y="213" width="0.4" height="15.0" fill="rgb(240,28,48)" rx="2" ry="2" />
<text  x="165.60" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="35.7" y="453" width="0.2" height="15.0" fill="rgb(239,221,0)" rx="2" ry="2" />
<text  x="38.73" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (44 samples, 0.09%)</title><rect x="701.9" y="437" width="1.1" height="15.0" fill="rgb(236,102,30)" rx="2" ry="2" />
<text  x="704.94" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1059.8" y="245" width="0.2" height="15.0" fill="rgb(253,166,19)" rx="2" ry="2" />
<text  x="1062.83" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="827.4" y="229" width="0.6" height="15.0" fill="rgb(232,170,31)" rx="2" ry="2" />
<text  x="830.43" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (13 samples, 0.03%)</title><rect x="740.5" y="309" width="0.3" height="15.0" fill="rgb(229,175,38)" rx="2" ry="2" />
<text  x="743.50" y="319.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (17 samples, 0.04%)</title><rect x="762.8" y="261" width="0.5" height="15.0" fill="rgb(253,81,51)" rx="2" ry="2" />
<text  x="765.84" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (16 samples, 0.03%)</title><rect x="864.2" y="341" width="0.4" height="15.0" fill="rgb(207,164,19)" rx="2" ry="2" />
<text  x="867.25" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (44 samples, 0.09%)</title><rect x="1132.6" y="389" width="1.1" height="15.0" fill="rgb(228,156,22)" rx="2" ry="2" />
<text  x="1135.59" y="399.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="524.7" y="325" width="0.9" height="15.0" fill="rgb(233,111,50)" rx="2" ry="2" />
<text  x="527.70" y="335.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (51 samples, 0.11%)</title><rect x="287.7" y="309" width="1.3" height="15.0" fill="rgb(246,215,25)" rx="2" ry="2" />
<text  x="290.70" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%)</title><rect x="886.7" y="325" width="0.2" height="15.0" fill="rgb(217,162,28)" rx="2" ry="2" />
<text  x="889.71" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (32 samples, 0.07%)</title><rect x="427.2" y="421" width="0.8" height="15.0" fill="rgb(211,212,26)" rx="2" ry="2" />
<text  x="430.23" y="431.5" ></text>
</g>
<g >
<title>__dynamic_cast (15 samples, 0.03%)</title><rect x="899.1" y="421" width="0.4" height="15.0" fill="rgb(211,181,40)" rx="2" ry="2" />
<text  x="902.09" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (8 samples, 0.02%)</title><rect x="21.8" y="325" width="0.2" height="15.0" fill="rgb(205,103,24)" rx="2" ry="2" />
<text  x="24.81" y="335.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.13%)</title><rect x="582.5" y="341" width="1.5" height="15.0" fill="rgb(234,122,41)" rx="2" ry="2" />
<text  x="585.48" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (32 samples, 0.07%)</title><rect x="715.5" y="421" width="0.8" height="15.0" fill="rgb(214,54,13)" rx="2" ry="2" />
<text  x="718.46" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="584.2" y="357" width="0.2" height="15.0" fill="rgb(238,222,44)" rx="2" ry="2" />
<text  x="587.18" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="606.3" y="437" width="0.3" height="15.0" fill="rgb(224,17,45)" rx="2" ry="2" />
<text  x="609.34" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="41.6" y="437" width="0.3" height="15.0" fill="rgb(225,44,7)" rx="2" ry="2" />
<text  x="44.65" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::binary_operator const*&gt;  (5 samples, 0.01%)</title><rect x="956.2" y="389" width="0.1" height="15.0" fill="rgb(247,162,52)" rx="2" ry="2" />
<text  x="959.20" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="1053.5" y="277" width="0.2" height="15.0" fill="rgb(222,192,17)" rx="2" ry="2" />
<text  x="1056.54" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (5 samples, 0.01%)</title><rect x="875.0" y="389" width="0.1" height="15.0" fill="rgb(241,87,43)" rx="2" ry="2" />
<text  x="877.96" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (23 samples, 0.05%)</title><rect x="675.7" y="469" width="0.6" height="15.0" fill="rgb(213,147,0)" rx="2" ry="2" />
<text  x="678.73" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="132.4" y="245" width="0.3" height="15.0" fill="rgb(242,182,48)" rx="2" ry="2" />
<text  x="135.35" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="720.1" y="405" width="0.2" height="15.0" fill="rgb(209,164,2)" rx="2" ry="2" />
<text  x="723.08" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (36 samples, 0.08%)</title><rect x="19.1" y="309" width="0.9" height="15.0" fill="rgb(227,159,7)" rx="2" ry="2" />
<text  x="22.11" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (11 samples, 0.02%)</title><rect x="955.6" y="325" width="0.3" height="15.0" fill="rgb(235,179,19)" rx="2" ry="2" />
<text  x="958.63" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (8 samples, 0.02%)</title><rect x="873.1" y="453" width="0.2" height="15.0" fill="rgb(240,66,29)" rx="2" ry="2" />
<text  x="876.11" y="463.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,280 samples, 2.71%)</title><rect x="556.9" y="437" width="31.9" height="15.0" fill="rgb(223,73,13)" rx="2" ry="2" />
<text  x="559.89" y="447.5" >qu..</text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="880.4" y="421" width="0.9" height="15.0" fill="rgb(252,166,45)" rx="2" ry="2" />
<text  x="883.42" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (2,019 samples, 4.27%)</title><rect x="789.1" y="389" width="50.4" height="15.0" fill="rgb(244,136,21)" rx="2" ry="2" />
<text  x="792.07" y="399.5" >std::..</text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="449.6" y="277" width="0.5" height="15.0" fill="rgb(216,224,7)" rx="2" ry="2" />
<text  x="452.62" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.14%)</title><rect x="729.7" y="405" width="1.6" height="15.0" fill="rgb(212,134,40)" rx="2" ry="2" />
<text  x="732.69" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (121 samples, 0.26%)</title><rect x="298.7" y="245" width="3.0" height="15.0" fill="rgb(243,225,11)" rx="2" ry="2" />
<text  x="301.66" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="945.3" y="389" width="0.3" height="15.0" fill="rgb(254,125,34)" rx="2" ry="2" />
<text  x="948.34" y="399.5" ></text>
</g>
<g >
<title>query::result::builder::build (73 samples, 0.15%)</title><rect x="596.5" y="437" width="1.9" height="15.0" fill="rgb(232,11,38)" rx="2" ry="2" />
<text  x="599.53" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (585 samples, 1.24%)</title><rect x="707.3" y="501" width="14.6" height="15.0" fill="rgb(230,185,41)" rx="2" ry="2" />
<text  x="710.33" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (10 samples, 0.02%)</title><rect x="23.0" y="453" width="0.3" height="15.0" fill="rgb(226,31,6)" rx="2" ry="2" />
<text  x="26.03" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (16 samples, 0.03%)</title><rect x="32.7" y="469" width="0.4" height="15.0" fill="rgb(222,59,49)" rx="2" ry="2" />
<text  x="35.74" y="479.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (11 samples, 0.02%)</title><rect x="206.0" y="117" width="0.2" height="15.0" fill="rgb(251,3,5)" rx="2" ry="2" />
<text  x="208.96" y="127.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (60 samples, 0.13%)</title><rect x="1164.7" y="469" width="1.5" height="15.0" fill="rgb(212,160,10)" rx="2" ry="2" />
<text  x="1167.72" y="479.5" ></text>
</g>
<g >
<title>row_cache::make_reader (508 samples, 1.07%)</title><rect x="528.7" y="341" width="12.7" height="15.0" fill="rgb(253,29,15)" rx="2" ry="2" />
<text  x="531.71" y="351.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (42 samples, 0.09%)</title><rect x="737.4" y="405" width="1.0" height="15.0" fill="rgb(228,67,13)" rx="2" ry="2" />
<text  x="740.35" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (7 samples, 0.01%)</title><rect x="239.0" y="197" width="0.2" height="15.0" fill="rgb(240,98,42)" rx="2" ry="2" />
<text  x="242.03" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (14 samples, 0.03%)</title><rect x="947.2" y="389" width="0.4" height="15.0" fill="rgb(221,125,0)" rx="2" ry="2" />
<text  x="950.24" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (11 samples, 0.02%)</title><rect x="20.3" y="341" width="0.2" height="15.0" fill="rgb(207,97,33)" rx="2" ry="2" />
<text  x="23.26" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (578 samples, 1.22%)</title><rect x="1153.0" y="485" width="14.4" height="15.0" fill="rgb(219,186,34)" rx="2" ry="2" />
<text  x="1155.96" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="801.9" y="277" width="0.2" height="15.0" fill="rgb(220,222,36)" rx="2" ry="2" />
<text  x="804.92" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (22 samples, 0.05%)</title><rect x="665.8" y="485" width="0.5" height="15.0" fill="rgb(249,21,25)" rx="2" ry="2" />
<text  x="668.79" y="495.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.12%)</title><rect x="944.2" y="405" width="1.4" height="15.0" fill="rgb(253,67,36)" rx="2" ry="2" />
<text  x="947.22" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (58 samples, 0.12%)</title><rect x="326.4" y="181" width="1.5" height="15.0" fill="rgb(215,216,42)" rx="2" ry="2" />
<text  x="329.44" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="425.6" y="373" width="0.1" height="15.0" fill="rgb(206,99,39)" rx="2" ry="2" />
<text  x="428.58" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (35 samples, 0.07%)</title><rect x="576.8" y="357" width="0.9" height="15.0" fill="rgb(253,224,10)" rx="2" ry="2" />
<text  x="579.81" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (7 samples, 0.01%)</title><rect x="1062.7" y="293" width="0.2" height="15.0" fill="rgb(232,98,28)" rx="2" ry="2" />
<text  x="1065.73" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="409.7" y="213" width="0.1" height="15.0" fill="rgb(215,178,29)" rx="2" ry="2" />
<text  x="412.66" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="834.5" y="325" width="0.2" height="15.0" fill="rgb(222,20,31)" rx="2" ry="2" />
<text  x="837.50" y="335.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (10 samples, 0.02%)</title><rect x="696.0" y="485" width="0.2" height="15.0" fill="rgb(205,105,35)" rx="2" ry="2" />
<text  x="698.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (6 samples, 0.01%)</title><rect x="878.7" y="405" width="0.1" height="15.0" fill="rgb(230,48,31)" rx="2" ry="2" />
<text  x="881.68" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (6 samples, 0.01%)</title><rect x="310.3" y="165" width="0.1" height="15.0" fill="rgb(237,55,12)" rx="2" ry="2" />
<text  x="313.29" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="545.5" y="389" width="0.2" height="15.0" fill="rgb(238,216,49)" rx="2" ry="2" />
<text  x="548.46" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (105 samples, 0.22%)</title><rect x="760.6" y="293" width="2.7" height="15.0" fill="rgb(244,153,49)" rx="2" ry="2" />
<text  x="763.64" y="303.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (124 samples, 0.26%)</title><rect x="874.5" y="405" width="3.1" height="15.0" fill="rgb(239,74,47)" rx="2" ry="2" />
<text  x="877.46" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (104 samples, 0.22%)</title><rect x="740.9" y="341" width="2.6" height="15.0" fill="rgb(239,229,3)" rx="2" ry="2" />
<text  x="743.90" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="871.9" y="325" width="0.2" height="15.0" fill="rgb(242,110,17)" rx="2" ry="2" />
<text  x="874.89" y="335.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (650 samples, 1.37%)</title><rect x="176.6" y="117" width="16.2" height="15.0" fill="rgb(242,200,4)" rx="2" ry="2" />
<text  x="179.61" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (5 samples, 0.01%)</title><rect x="1002.2" y="245" width="0.1" height="15.0" fill="rgb(242,126,52)" rx="2" ry="2" />
<text  x="1005.18" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%)</title><rect x="695.0" y="341" width="0.7" height="15.0" fill="rgb(207,42,38)" rx="2" ry="2" />
<text  x="698.05" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (20 samples, 0.04%)</title><rect x="665.1" y="485" width="0.5" height="15.0" fill="rgb(222,23,17)" rx="2" ry="2" />
<text  x="668.10" y="495.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,292 samples, 2.73%)</title><rect x="331.7" y="181" width="32.2" height="15.0" fill="rgb(224,4,19)" rx="2" ry="2" />
<text  x="334.66" y="191.5" >wr..</text>
</g>
<g >
<title>reader_permit::impl::signal (21 samples, 0.04%)</title><rect x="565.5" y="293" width="0.5" height="15.0" fill="rgb(253,135,3)" rx="2" ry="2" />
<text  x="568.48" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (15 samples, 0.03%)</title><rect x="841.3" y="341" width="0.4" height="15.0" fill="rgb(224,153,30)" rx="2" ry="2" />
<text  x="844.34" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="168.6" y="149" width="0.5" height="15.0" fill="rgb(245,114,7)" rx="2" ry="2" />
<text  x="171.62" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (27 samples, 0.06%)</title><rect x="227.4" y="197" width="0.6" height="15.0" fill="rgb(248,127,8)" rx="2" ry="2" />
<text  x="230.35" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (24 samples, 0.05%)</title><rect x="584.4" y="357" width="0.6" height="15.0" fill="rgb(247,205,14)" rx="2" ry="2" />
<text  x="587.43" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (22 samples, 0.05%)</title><rect x="490.8" y="325" width="0.6" height="15.0" fill="rgb(231,20,10)" rx="2" ry="2" />
<text  x="493.83" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (459 samples, 0.97%)</title><rect x="861.5" y="437" width="11.4" height="15.0" fill="rgb(223,33,1)" rx="2" ry="2" />
<text  x="864.48" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="652.4" y="389" width="0.2" height="15.0" fill="rgb(250,3,18)" rx="2" ry="2" />
<text  x="655.44" y="399.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="463.7" y="325" width="0.2" height="15.0" fill="rgb(213,94,30)" rx="2" ry="2" />
<text  x="466.67" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (30 samples, 0.06%)</title><rect x="368.3" y="165" width="0.8" height="15.0" fill="rgb(210,32,0)" rx="2" ry="2" />
<text  x="371.32" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (58 samples, 0.12%)</title><rect x="1158.8" y="437" width="1.4" height="15.0" fill="rgb(220,20,16)" rx="2" ry="2" />
<text  x="1161.80" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,259 samples, 9.01%)</title><rect x="142.3" y="277" width="106.3" height="15.0" fill="rgb(250,149,41)" rx="2" ry="2" />
<text  x="145.34" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="227.8" y="181" width="0.2" height="15.0" fill="rgb(229,210,10)" rx="2" ry="2" />
<text  x="230.77" y="191.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (201 samples, 0.43%)</title><rect x="1079.1" y="325" width="5.0" height="15.0" fill="rgb(240,37,21)" rx="2" ry="2" />
<text  x="1082.13" y="335.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (73 samples, 0.15%)</title><rect x="767.1" y="389" width="1.8" height="15.0" fill="rgb(205,104,50)" rx="2" ry="2" />
<text  x="770.06" y="399.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="23.0" y="421" width="0.2" height="15.0" fill="rgb(216,60,3)" rx="2" ry="2" />
<text  x="26.03" y="431.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (158 samples, 0.33%)</title><rect x="342.9" y="165" width="4.0" height="15.0" fill="rgb(251,22,22)" rx="2" ry="2" />
<text  x="345.94" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (23 samples, 0.05%)</title><rect x="1143.5" y="485" width="0.5" height="15.0" fill="rgb(246,34,12)" rx="2" ry="2" />
<text  x="1146.47" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (131 samples, 0.28%)</title><rect x="1185.6" y="613" width="3.2" height="15.0" fill="rgb(244,38,29)" rx="2" ry="2" />
<text  x="1188.56" y="623.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (7 samples, 0.01%)</title><rect x="1001.9" y="261" width="0.2" height="15.0" fill="rgb(231,70,14)" rx="2" ry="2" />
<text  x="1004.90" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (16 samples, 0.03%)</title><rect x="596.1" y="389" width="0.4" height="15.0" fill="rgb(237,15,11)" rx="2" ry="2" />
<text  x="599.11" y="399.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="423.5" y="373" width="0.6" height="15.0" fill="rgb(222,133,8)" rx="2" ry="2" />
<text  x="426.51" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="210.7" y="149" width="0.6" height="15.0" fill="rgb(211,40,15)" rx="2" ry="2" />
<text  x="213.68" y="159.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,255 samples, 97.84%)</title><rect x="23.4" y="597" width="1154.5" height="15.0" fill="rgb(225,142,52)" rx="2" ry="2" />
<text  x="26.40" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (22 samples, 0.05%)</title><rect x="881.3" y="437" width="0.5" height="15.0" fill="rgb(225,99,20)" rx="2" ry="2" />
<text  x="884.30" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (45 samples, 0.10%)</title><rect x="624.5" y="421" width="1.2" height="15.0" fill="rgb(254,86,9)" rx="2" ry="2" />
<text  x="627.54" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (43 samples, 0.09%)</title><rect x="269.3" y="309" width="1.1" height="15.0" fill="rgb(238,16,49)" rx="2" ry="2" />
<text  x="272.33" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="42.1" y="453" width="0.3" height="15.0" fill="rgb(248,112,29)" rx="2" ry="2" />
<text  x="45.07" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (40 samples, 0.08%)</title><rect x="235.3" y="165" width="1.0" height="15.0" fill="rgb(232,167,11)" rx="2" ry="2" />
<text  x="238.34" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="520.8" y="293" width="0.3" height="15.0" fill="rgb(230,189,41)" rx="2" ry="2" />
<text  x="523.83" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (52 samples, 0.11%)</title><rect x="300.2" y="213" width="1.3" height="15.0" fill="rgb(237,148,54)" rx="2" ry="2" />
<text  x="303.16" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (5 samples, 0.01%)</title><rect x="1176.8" y="501" width="0.1" height="15.0" fill="rgb(215,16,6)" rx="2" ry="2" />
<text  x="1179.77" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (24 samples, 0.05%)</title><rect x="369.2" y="213" width="0.6" height="15.0" fill="rgb(243,119,20)" rx="2" ry="2" />
<text  x="372.20" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="700.9" y="453" width="0.3" height="15.0" fill="rgb(209,223,13)" rx="2" ry="2" />
<text  x="703.89" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="1071.7" y="293" width="1.0" height="15.0" fill="rgb(222,128,4)" rx="2" ry="2" />
<text  x="1074.72" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.02%)</title><rect x="520.3" y="293" width="0.2" height="15.0" fill="rgb(209,123,54)" rx="2" ry="2" />
<text  x="523.25" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (49 samples, 0.10%)</title><rect x="69.9" y="389" width="1.3" height="15.0" fill="rgb(248,102,23)" rx="2" ry="2" />
<text  x="72.93" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="1072.2" y="277" width="0.5" height="15.0" fill="rgb(214,154,38)" rx="2" ry="2" />
<text  x="1075.21" y="287.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::response (6 samples, 0.01%)</title><rect x="722.0" y="469" width="0.1" height="15.0" fill="rgb(248,170,13)" rx="2" ry="2" />
<text  x="724.98" y="479.5" ></text>
</g>
<g >
<title>database::find_schema (243 samples, 0.51%)</title><rect x="842.1" y="373" width="6.1" height="15.0" fill="rgb(233,140,41)" rx="2" ry="2" />
<text  x="845.11" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (9 samples, 0.02%)</title><rect x="21.8" y="389" width="0.2" height="15.0" fill="rgb(235,37,17)" rx="2" ry="2" />
<text  x="24.81" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (7 samples, 0.01%)</title><rect x="21.3" y="405" width="0.2" height="15.0" fill="rgb(213,123,23)" rx="2" ry="2" />
<text  x="24.31" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="1122.4" y="341" width="0.3" height="15.0" fill="rgb(246,66,48)" rx="2" ry="2" />
<text  x="1125.38" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="585.0" y="357" width="0.1" height="15.0" fill="rgb(225,137,43)" rx="2" ry="2" />
<text  x="588.02" y="367.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (6 samples, 0.01%)</title><rect x="1062.0" y="261" width="0.1" height="15.0" fill="rgb(251,95,37)" rx="2" ry="2" />
<text  x="1064.96" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (33 samples, 0.07%)</title><rect x="1141.7" y="453" width="0.9" height="15.0" fill="rgb(215,208,49)" rx="2" ry="2" />
<text  x="1144.73" y="463.5" ></text>
</g>
<g >
<title>make_combined_reader (726 samples, 1.54%)</title><rect x="441.1" y="325" width="18.2" height="15.0" fill="rgb(213,168,43)" rx="2" ry="2" />
<text  x="444.13" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (222 samples, 0.47%)</title><rect x="204.4" y="133" width="5.6" height="15.0" fill="rgb(205,89,17)" rx="2" ry="2" />
<text  x="207.41" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="614.2" y="405" width="0.5" height="15.0" fill="rgb(247,64,45)" rx="2" ry="2" />
<text  x="617.23" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="643.4" y="485" width="0.3" height="15.0" fill="rgb(239,78,48)" rx="2" ry="2" />
<text  x="646.43" y="495.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="536.7" y="277" width="0.2" height="15.0" fill="rgb(233,102,15)" rx="2" ry="2" />
<text  x="539.73" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_token (42 samples, 0.09%)</title><rect x="653.7" y="405" width="1.1" height="15.0" fill="rgb(230,15,46)" rx="2" ry="2" />
<text  x="656.74" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1139.6" y="421" width="0.1" height="15.0" fill="rgb(216,20,52)" rx="2" ry="2" />
<text  x="1142.56" y="431.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.04%)</title><rect x="690.3" y="453" width="0.4" height="15.0" fill="rgb(208,216,13)" rx="2" ry="2" />
<text  x="693.25" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="612.7" y="421" width="0.1" height="15.0" fill="rgb(233,116,0)" rx="2" ry="2" />
<text  x="615.70" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%)</title><rect x="738.5" y="389" width="0.2" height="15.0" fill="rgb(244,188,46)" rx="2" ry="2" />
<text  x="741.45" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (22 samples, 0.05%)</title><rect x="865.4" y="341" width="0.5" height="15.0" fill="rgb(220,69,45)" rx="2" ry="2" />
<text  x="868.37" y="351.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="1120.2" y="357" width="1.8" height="15.0" fill="rgb(239,102,42)" rx="2" ry="2" />
<text  x="1123.24" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (41 samples, 0.09%)</title><rect x="821.9" y="117" width="1.0" height="15.0" fill="rgb(253,46,52)" rx="2" ry="2" />
<text  x="824.87" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (150 samples, 0.32%)</title><rect x="511.2" y="213" width="3.8" height="15.0" fill="rgb(251,79,14)" rx="2" ry="2" />
<text  x="514.22" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (6 samples, 0.01%)</title><rect x="1073.7" y="309" width="0.1" height="15.0" fill="rgb(219,24,54)" rx="2" ry="2" />
<text  x="1076.69" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (9 samples, 0.02%)</title><rect x="264.0" y="341" width="0.2" height="15.0" fill="rgb(252,222,11)" rx="2" ry="2" />
<text  x="266.99" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (35 samples, 0.07%)</title><rect x="628.0" y="405" width="0.9" height="15.0" fill="rgb(251,199,27)" rx="2" ry="2" />
<text  x="631.03" y="415.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (53 samples, 0.11%)</title><rect x="1136.5" y="389" width="1.3" height="15.0" fill="rgb(244,217,33)" rx="2" ry="2" />
<text  x="1139.49" y="399.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (450 samples, 0.95%)</title><rect x="922.8" y="389" width="11.2" height="15.0" fill="rgb(240,193,10)" rx="2" ry="2" />
<text  x="925.76" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (43 samples, 0.09%)</title><rect x="753.1" y="293" width="1.1" height="15.0" fill="rgb(250,6,23)" rx="2" ry="2" />
<text  x="756.08" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (81 samples, 0.17%)</title><rect x="808.6" y="197" width="2.0" height="15.0" fill="rgb(230,170,47)" rx="2" ry="2" />
<text  x="811.56" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="724.5" y="501" width="0.1" height="15.0" fill="rgb(252,92,40)" rx="2" ry="2" />
<text  x="727.50" y="511.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (18 samples, 0.04%)</title><rect x="80.0" y="453" width="0.4" height="15.0" fill="rgb(222,122,28)" rx="2" ry="2" />
<text  x="82.99" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (36 samples, 0.08%)</title><rect x="1117.0" y="373" width="0.9" height="15.0" fill="rgb(207,38,49)" rx="2" ry="2" />
<text  x="1119.99" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (35 samples, 0.07%)</title><rect x="635.9" y="485" width="0.9" height="15.0" fill="rgb(247,85,42)" rx="2" ry="2" />
<text  x="638.92" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (11 samples, 0.02%)</title><rect x="22.5" y="485" width="0.3" height="15.0" fill="rgb(232,227,52)" rx="2" ry="2" />
<text  x="25.48" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (5 samples, 0.01%)</title><rect x="828.8" y="277" width="0.1" height="15.0" fill="rgb(227,95,43)" rx="2" ry="2" />
<text  x="831.81" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="157.5" y="197" width="0.2" height="15.0" fill="rgb(233,220,32)" rx="2" ry="2" />
<text  x="160.54" y="207.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (634 samples, 1.34%)</title><rect x="559.4" y="357" width="15.8" height="15.0" fill="rgb(216,41,47)" rx="2" ry="2" />
<text  x="562.37" y="367.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (67 samples, 0.14%)</title><rect x="356.8" y="149" width="1.7" height="15.0" fill="rgb(223,16,27)" rx="2" ry="2" />
<text  x="359.82" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="392.7" y="229" width="0.1" height="15.0" fill="rgb(249,133,1)" rx="2" ry="2" />
<text  x="395.66" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="264.2" y="341" width="0.2" height="15.0" fill="rgb(205,103,23)" rx="2" ry="2" />
<text  x="267.22" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (45 samples, 0.10%)</title><rect x="692.1" y="469" width="1.1" height="15.0" fill="rgb(208,115,46)" rx="2" ry="2" />
<text  x="695.13" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="628.3" y="373" width="0.4" height="15.0" fill="rgb(210,173,2)" rx="2" ry="2" />
<text  x="631.33" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (124 samples, 0.26%)</title><rect x="862.9" y="389" width="3.1" height="15.0" fill="rgb(253,51,39)" rx="2" ry="2" />
<text  x="865.88" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (169 samples, 0.36%)</title><rect x="1057.0" y="277" width="4.2" height="15.0" fill="rgb(215,2,18)" rx="2" ry="2" />
<text  x="1060.01" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%)</title><rect x="573.8" y="309" width="0.3" height="15.0" fill="rgb(210,20,25)" rx="2" ry="2" />
<text  x="576.79" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (28 samples, 0.06%)</title><rect x="825.0" y="229" width="0.7" height="15.0" fill="rgb(206,81,17)" rx="2" ry="2" />
<text  x="828.04" y="239.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (33 samples, 0.07%)</title><rect x="575.9" y="357" width="0.8" height="15.0" fill="rgb(242,170,1)" rx="2" ry="2" />
<text  x="578.89" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (36 samples, 0.08%)</title><rect x="1047.5" y="213" width="0.9" height="15.0" fill="rgb(229,210,31)" rx="2" ry="2" />
<text  x="1050.50" y="223.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (16 samples, 0.03%)</title><rect x="838.7" y="293" width="0.4" height="15.0" fill="rgb(254,18,37)" rx="2" ry="2" />
<text  x="841.69" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (7 samples, 0.01%)</title><rect x="1177.5" y="453" width="0.2" height="15.0" fill="rgb(220,120,51)" rx="2" ry="2" />
<text  x="1180.50" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (14 samples, 0.03%)</title><rect x="23.6" y="517" width="0.4" height="15.0" fill="rgb(226,79,1)" rx="2" ry="2" />
<text  x="26.63" y="527.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="787.2" y="341" width="0.2" height="15.0" fill="rgb(233,78,46)" rx="2" ry="2" />
<text  x="790.25" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.01%)</title><rect x="724.9" y="501" width="0.1" height="15.0" fill="rgb(234,85,29)" rx="2" ry="2" />
<text  x="727.87" y="511.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,432 samples, 3.03%)</title><rect x="168.1" y="165" width="35.7" height="15.0" fill="rgb(207,123,54)" rx="2" ry="2" />
<text  x="171.07" y="175.5" >clu..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.01%)</title><rect x="1144.9" y="501" width="0.1" height="15.0" fill="rgb(206,80,40)" rx="2" ry="2" />
<text  x="1147.90" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (52 samples, 0.11%)</title><rect x="787.6" y="373" width="1.3" height="15.0" fill="rgb(234,187,46)" rx="2" ry="2" />
<text  x="790.62" y="383.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (82 samples, 0.17%)</title><rect x="607.0" y="437" width="2.0" height="15.0" fill="rgb(211,147,7)" rx="2" ry="2" />
<text  x="609.99" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (11 samples, 0.02%)</title><rect x="46.9" y="485" width="0.3" height="15.0" fill="rgb(210,189,26)" rx="2" ry="2" />
<text  x="49.94" y="495.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (8 samples, 0.02%)</title><rect x="834.7" y="341" width="0.2" height="15.0" fill="rgb(206,6,3)" rx="2" ry="2" />
<text  x="837.67" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (127 samples, 0.27%)</title><rect x="949.2" y="389" width="3.1" height="15.0" fill="rgb(233,51,28)" rx="2" ry="2" />
<text  x="952.16" y="399.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="1054.4" y="261" width="0.2" height="15.0" fill="rgb(215,35,50)" rx="2" ry="2" />
<text  x="1057.42" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="828.3" y="245" width="0.1" height="15.0" fill="rgb(229,142,30)" rx="2" ry="2" />
<text  x="831.28" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (39 samples, 0.08%)</title><rect x="67.3" y="405" width="1.0" height="15.0" fill="rgb(250,79,48)" rx="2" ry="2" />
<text  x="70.31" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="731.7" y="437" width="0.2" height="15.0" fill="rgb(238,56,51)" rx="2" ry="2" />
<text  x="734.69" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (13 samples, 0.03%)</title><rect x="1138.3" y="421" width="0.3" height="15.0" fill="rgb(220,0,33)" rx="2" ry="2" />
<text  x="1141.31" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (17 samples, 0.04%)</title><rect x="695.8" y="501" width="0.5" height="15.0" fill="rgb(242,167,17)" rx="2" ry="2" />
<text  x="698.85" y="511.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (16 samples, 0.03%)</title><rect x="157.0" y="197" width="0.4" height="15.0" fill="rgb(252,211,33)" rx="2" ry="2" />
<text  x="160.04" y="207.5" ></text>
</g>
<g >
<title>table::set_hit_rate (83 samples, 0.18%)</title><rect x="718.4" y="453" width="2.1" height="15.0" fill="rgb(219,135,27)" rx="2" ry="2" />
<text  x="721.43" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (5 samples, 0.01%)</title><rect x="241.4" y="181" width="0.2" height="15.0" fill="rgb(238,159,15)" rx="2" ry="2" />
<text  x="244.43" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (22 samples, 0.05%)</title><rect x="542.4" y="341" width="0.5" height="15.0" fill="rgb(209,35,28)" rx="2" ry="2" />
<text  x="545.37" y="351.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1174.3" y="405" width="0.1" height="15.0" fill="rgb(205,224,45)" rx="2" ry="2" />
<text  x="1177.30" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (239 samples, 0.51%)</title><rect x="1036.6" y="197" width="6.0" height="15.0" fill="rgb(211,224,9)" rx="2" ry="2" />
<text  x="1039.60" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="553.7" y="309" width="0.4" height="15.0" fill="rgb(222,137,33)" rx="2" ry="2" />
<text  x="556.67" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (11 samples, 0.02%)</title><rect x="279.1" y="357" width="0.3" height="15.0" fill="rgb(209,59,22)" rx="2" ry="2" />
<text  x="282.09" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%)</title><rect x="458.7" y="277" width="0.3" height="15.0" fill="rgb(241,81,25)" rx="2" ry="2" />
<text  x="461.68" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="844.4" y="325" width="0.3" height="15.0" fill="rgb(227,52,49)" rx="2" ry="2" />
<text  x="847.36" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (29 samples, 0.06%)</title><rect x="247.7" y="261" width="0.7" height="15.0" fill="rgb(207,178,16)" rx="2" ry="2" />
<text  x="250.69" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (65 samples, 0.14%)</title><rect x="917.7" y="341" width="1.7" height="15.0" fill="rgb(210,111,43)" rx="2" ry="2" />
<text  x="920.74" y="351.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (10 samples, 0.02%)</title><rect x="744.5" y="405" width="0.3" height="15.0" fill="rgb(252,203,46)" rx="2" ry="2" />
<text  x="747.54" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (13 samples, 0.03%)</title><rect x="654.9" y="437" width="0.3" height="15.0" fill="rgb(240,7,36)" rx="2" ry="2" />
<text  x="657.91" y="447.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (95 samples, 0.20%)</title><rect x="421.1" y="373" width="2.4" height="15.0" fill="rgb(210,228,13)" rx="2" ry="2" />
<text  x="424.09" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (30 samples, 0.06%)</title><rect x="1151.1" y="469" width="0.8" height="15.0" fill="rgb(247,198,23)" rx="2" ry="2" />
<text  x="1154.14" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (111 samples, 0.23%)</title><rect x="644.2" y="501" width="2.7" height="15.0" fill="rgb(229,226,32)" rx="2" ry="2" />
<text  x="647.18" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (36 samples, 0.08%)</title><rect x="694.9" y="485" width="0.9" height="15.0" fill="rgb(229,161,47)" rx="2" ry="2" />
<text  x="697.95" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (20 samples, 0.04%)</title><rect x="714.7" y="405" width="0.5" height="15.0" fill="rgb(215,175,9)" rx="2" ry="2" />
<text  x="717.74" y="415.5" ></text>
</g>
<g >
<title>seastar::gate::enter (7 samples, 0.01%)</title><rect x="1049.0" y="229" width="0.2" height="15.0" fill="rgb(252,67,26)" rx="2" ry="2" />
<text  x="1052.00" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (63 samples, 0.13%)</title><rect x="830.0" y="293" width="1.6" height="15.0" fill="rgb(242,224,8)" rx="2" ry="2" />
<text  x="833.03" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (29 samples, 0.06%)</title><rect x="1027.7" y="213" width="0.7" height="15.0" fill="rgb(239,134,1)" rx="2" ry="2" />
<text  x="1030.71" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="1164.3" y="469" width="0.1" height="15.0" fill="rgb(238,187,17)" rx="2" ry="2" />
<text  x="1167.29" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (21 samples, 0.04%)</title><rect x="163.0" y="229" width="0.5" height="15.0" fill="rgb(206,37,35)" rx="2" ry="2" />
<text  x="166.00" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::find (60 samples, 0.13%)</title><rect x="656.3" y="421" width="1.5" height="15.0" fill="rgb(242,51,54)" rx="2" ry="2" />
<text  x="659.26" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%)</title><rect x="170.3" y="133" width="0.3" height="15.0" fill="rgb(242,201,3)" rx="2" ry="2" />
<text  x="173.29" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="574.1" y="309" width="0.1" height="15.0" fill="rgb(237,100,24)" rx="2" ry="2" />
<text  x="577.07" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="616.9" y="421" width="0.5" height="15.0" fill="rgb(225,40,29)" rx="2" ry="2" />
<text  x="619.92" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (7 samples, 0.01%)</title><rect x="1143.2" y="213" width="0.1" height="15.0" fill="rgb(253,3,36)" rx="2" ry="2" />
<text  x="1146.15" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="429.6" y="405" width="0.2" height="15.0" fill="rgb(211,93,18)" rx="2" ry="2" />
<text  x="432.62" y="415.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (9 samples, 0.02%)</title><rect x="15.1" y="613" width="0.3" height="15.0" fill="rgb(220,146,23)" rx="2" ry="2" />
<text  x="18.14" y="623.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (38 samples, 0.08%)</title><rect x="112.0" y="373" width="0.9" height="15.0" fill="rgb(226,131,36)" rx="2" ry="2" />
<text  x="114.99" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (17 samples, 0.04%)</title><rect x="887.1" y="437" width="0.4" height="15.0" fill="rgb(232,0,35)" rx="2" ry="2" />
<text  x="890.09" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="770.5" y="405" width="0.2" height="15.0" fill="rgb(214,18,8)" rx="2" ry="2" />
<text  x="773.53" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (7 samples, 0.01%)</title><rect x="242.9" y="245" width="0.2" height="15.0" fill="rgb(230,189,1)" rx="2" ry="2" />
<text  x="245.95" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::stats (41 samples, 0.09%)</title><rect x="505.9" y="245" width="1.0" height="15.0" fill="rgb(231,84,5)" rx="2" ry="2" />
<text  x="508.85" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (14 samples, 0.03%)</title><rect x="1124.6" y="405" width="0.3" height="15.0" fill="rgb(226,203,25)" rx="2" ry="2" />
<text  x="1127.58" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5,958 samples, 12.60%)</title><rect x="115.7" y="357" width="148.7" height="15.0" fill="rgb(247,211,47)" rx="2" ry="2" />
<text  x="118.68" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%)</title><rect x="228.5" y="213" width="0.2" height="15.0" fill="rgb(244,140,42)" rx="2" ry="2" />
<text  x="231.50" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="676.3" y="469" width="0.2" height="15.0" fill="rgb(214,4,21)" rx="2" ry="2" />
<text  x="679.33" y="479.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="826.0" y="245" width="0.8" height="15.0" fill="rgb(251,121,39)" rx="2" ry="2" />
<text  x="829.01" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="831.5" y="261" width="0.1" height="15.0" fill="rgb(220,65,23)" rx="2" ry="2" />
<text  x="834.45" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="693.1" y="437" width="0.1" height="15.0" fill="rgb(242,165,10)" rx="2" ry="2" />
<text  x="696.10" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (14 samples, 0.03%)</title><rect x="824.4" y="229" width="0.3" height="15.0" fill="rgb(254,130,38)" rx="2" ry="2" />
<text  x="827.39" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,332 samples, 11.28%)</title><rect x="976.3" y="373" width="133.1" height="15.0" fill="rgb(235,202,0)" rx="2" ry="2" />
<text  x="979.27" y="383.5" >service::storage..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (17 samples, 0.04%)</title><rect x="887.1" y="453" width="0.4" height="15.0" fill="rgb(242,66,24)" rx="2" ry="2" />
<text  x="890.09" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="1084.8" y="325" width="0.1" height="15.0" fill="rgb(229,74,34)" rx="2" ry="2" />
<text  x="1087.79" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="540.5" y="293" width="0.1" height="15.0" fill="rgb(239,99,49)" rx="2" ry="2" />
<text  x="543.47" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_in_expression&lt;cql3::expr::binary_operator, cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="954.4" y="325" width="0.2" height="15.0" fill="rgb(253,181,45)" rx="2" ry="2" />
<text  x="957.38" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="203.2" y="133" width="0.2" height="15.0" fill="rgb(212,115,39)" rx="2" ry="2" />
<text  x="206.24" y="143.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (9 samples, 0.02%)</title><rect x="832.0" y="325" width="0.3" height="15.0" fill="rgb(209,224,28)" rx="2" ry="2" />
<text  x="835.03" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (8 samples, 0.02%)</title><rect x="363.9" y="197" width="0.2" height="15.0" fill="rgb(248,95,47)" rx="2" ry="2" />
<text  x="366.91" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (87 samples, 0.18%)</title><rect x="761.1" y="277" width="2.2" height="15.0" fill="rgb(211,75,39)" rx="2" ry="2" />
<text  x="764.09" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (11 samples, 0.02%)</title><rect x="1043.5" y="213" width="0.3" height="15.0" fill="rgb(238,75,30)" rx="2" ry="2" />
<text  x="1046.54" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,296 samples, 9.09%)</title><rect x="141.7" y="309" width="107.2" height="15.0" fill="rgb(223,16,28)" rx="2" ry="2" />
<text  x="144.66" y="319.5" >partition_sna..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (20 samples, 0.04%)</title><rect x="452.4" y="277" width="0.5" height="15.0" fill="rgb(232,106,46)" rx="2" ry="2" />
<text  x="455.39" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (42 samples, 0.09%)</title><rect x="542.9" y="341" width="1.1" height="15.0" fill="rgb(217,111,14)" rx="2" ry="2" />
<text  x="545.92" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (42 samples, 0.09%)</title><rect x="984.6" y="309" width="1.0" height="15.0" fill="rgb(248,172,32)" rx="2" ry="2" />
<text  x="987.58" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (18 samples, 0.04%)</title><rect x="929.6" y="357" width="0.4" height="15.0" fill="rgb(238,159,26)" rx="2" ry="2" />
<text  x="932.59" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="674.8" y="469" width="0.2" height="15.0" fill="rgb(215,56,7)" rx="2" ry="2" />
<text  x="677.83" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (32 samples, 0.07%)</title><rect x="237.8" y="181" width="0.8" height="15.0" fill="rgb(248,40,3)" rx="2" ry="2" />
<text  x="240.78" y="191.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%)</title><rect x="712.1" y="453" width="0.4" height="15.0" fill="rgb(241,35,36)" rx="2" ry="2" />
<text  x="715.14" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="1142.9" y="133" width="0.1" height="15.0" fill="rgb(219,223,10)" rx="2" ry="2" />
<text  x="1145.88" y="143.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (24 samples, 0.05%)</title><rect x="1073.0" y="277" width="0.6" height="15.0" fill="rgb(247,167,14)" rx="2" ry="2" />
<text  x="1076.01" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="168.9" y="133" width="0.2" height="15.0" fill="rgb(254,33,33)" rx="2" ry="2" />
<text  x="171.94" y="143.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (253 samples, 0.54%)</title><rect x="634.1" y="501" width="6.4" height="15.0" fill="rgb(247,86,39)" rx="2" ry="2" />
<text  x="637.15" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (14 samples, 0.03%)</title><rect x="556.1" y="405" width="0.4" height="15.0" fill="rgb(220,57,20)" rx="2" ry="2" />
<text  x="559.12" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (1,027 samples, 2.17%)</title><rect x="647.0" y="501" width="25.6" height="15.0" fill="rgb(215,102,38)" rx="2" ry="2" />
<text  x="649.97" y="511.5" >s..</text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (8 samples, 0.02%)</title><rect x="1075.5" y="341" width="0.2" height="15.0" fill="rgb(244,44,15)" rx="2" ry="2" />
<text  x="1078.46" y="351.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="678.7" y="469" width="0.5" height="15.0" fill="rgb(245,141,34)" rx="2" ry="2" />
<text  x="681.72" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,616 samples, 11.88%)</title><rect x="970.6" y="389" width="140.2" height="15.0" fill="rgb(249,70,1)" rx="2" ry="2" />
<text  x="973.60" y="399.5" >service::storage_..</text>
</g>
<g >
<title>cql3::expr::evaluate (342 samples, 0.72%)</title><rect x="906.3" y="325" width="8.5" height="15.0" fill="rgb(216,135,48)" rx="2" ry="2" />
<text  x="909.31" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%)</title><rect x="568.0" y="293" width="0.2" height="15.0" fill="rgb(208,40,28)" rx="2" ry="2" />
<text  x="571.00" y="303.5" ></text>
</g>
<g >
<title>dht::shard_of (21 samples, 0.04%)</title><rect x="1016.5" y="277" width="0.5" height="15.0" fill="rgb(214,76,32)" rx="2" ry="2" />
<text  x="1019.50" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (89 samples, 0.19%)</title><rect x="381.8" y="149" width="2.2" height="15.0" fill="rgb(208,95,34)" rx="2" ry="2" />
<text  x="384.80" y="159.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="532.4" y="309" width="0.2" height="15.0" fill="rgb(232,33,27)" rx="2" ry="2" />
<text  x="535.43" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (54 samples, 0.11%)</title><rect x="926.0" y="341" width="1.3" height="15.0" fill="rgb(246,117,5)" rx="2" ry="2" />
<text  x="928.95" y="351.5" ></text>
</g>
<g >
<title>seastar::gate::leave (9 samples, 0.02%)</title><rect x="64.3" y="405" width="0.2" height="15.0" fill="rgb(242,71,23)" rx="2" ry="2" />
<text  x="67.26" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="859.7" y="437" width="0.3" height="15.0" fill="rgb(253,68,31)" rx="2" ry="2" />
<text  x="862.73" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%)</title><rect x="646.3" y="485" width="0.4" height="15.0" fill="rgb(219,156,35)" rx="2" ry="2" />
<text  x="649.30" y="495.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%)</title><rect x="23.0" y="565" width="0.3" height="15.0" fill="rgb(253,89,28)" rx="2" ry="2" />
<text  x="26.03" y="575.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%)</title><rect x="721.1" y="469" width="0.2" height="15.0" fill="rgb(238,49,53)" rx="2" ry="2" />
<text  x="724.08" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.05%)</title><rect x="1060.5" y="213" width="0.7" height="15.0" fill="rgb(253,87,49)" rx="2" ry="2" />
<text  x="1063.53" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (17 samples, 0.04%)</title><rect x="71.7" y="373" width="0.4" height="15.0" fill="rgb(254,169,23)" rx="2" ry="2" />
<text  x="74.68" y="383.5" ></text>
</g>
<g >
<title>row_cache::make_reader (8 samples, 0.02%)</title><rect x="432.2" y="357" width="0.2" height="15.0" fill="rgb(232,57,9)" rx="2" ry="2" />
<text  x="435.17" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (13 samples, 0.03%)</title><rect x="1101.4" y="293" width="0.4" height="15.0" fill="rgb(219,165,15)" rx="2" ry="2" />
<text  x="1104.44" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (17 samples, 0.04%)</title><rect x="807.1" y="229" width="0.5" height="15.0" fill="rgb(237,191,33)" rx="2" ry="2" />
<text  x="810.14" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (23 samples, 0.05%)</title><rect x="1177.2" y="501" width="0.6" height="15.0" fill="rgb(211,58,50)" rx="2" ry="2" />
<text  x="1180.20" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (45 samples, 0.10%)</title><rect x="1148.7" y="485" width="1.1" height="15.0" fill="rgb(230,155,35)" rx="2" ry="2" />
<text  x="1151.69" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (23 samples, 0.05%)</title><rect x="845.7" y="293" width="0.6" height="15.0" fill="rgb(210,61,12)" rx="2" ry="2" />
<text  x="848.68" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (145 samples, 0.31%)</title><rect x="260.4" y="341" width="3.6" height="15.0" fill="rgb(214,218,5)" rx="2" ry="2" />
<text  x="263.37" y="351.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="576.9" y="341" width="0.8" height="15.0" fill="rgb(211,58,0)" rx="2" ry="2" />
<text  x="579.89" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (13 samples, 0.03%)</title><rect x="572.5" y="293" width="0.3" height="15.0" fill="rgb(209,32,49)" rx="2" ry="2" />
<text  x="575.49" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (23 samples, 0.05%)</title><rect x="831.0" y="277" width="0.6" height="15.0" fill="rgb(206,117,4)" rx="2" ry="2" />
<text  x="834.03" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="659.0" y="453" width="0.1" height="15.0" fill="rgb(242,225,34)" rx="2" ry="2" />
<text  x="661.96" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1142.6" y="437" width="0.8" height="15.0" fill="rgb(222,168,32)" rx="2" ry="2" />
<text  x="1145.58" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (5 samples, 0.01%)</title><rect x="1159.0" y="405" width="0.2" height="15.0" fill="rgb(244,24,22)" rx="2" ry="2" />
<text  x="1162.05" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (15 samples, 0.03%)</title><rect x="225.0" y="133" width="0.3" height="15.0" fill="rgb(223,127,31)" rx="2" ry="2" />
<text  x="227.95" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="846.0" y="261" width="0.2" height="15.0" fill="rgb(243,67,51)" rx="2" ry="2" />
<text  x="848.95" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (161 samples, 0.34%)</title><rect x="1057.2" y="261" width="4.0" height="15.0" fill="rgb(220,194,45)" rx="2" ry="2" />
<text  x="1060.21" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1009.0" y="245" width="0.2" height="15.0" fill="rgb(206,175,44)" rx="2" ry="2" />
<text  x="1011.97" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,083 samples, 4.41%)</title><rect x="900.4" y="421" width="52.0" height="15.0" fill="rgb(241,140,34)" rx="2" ry="2" />
<text  x="903.42" y="431.5" >cql3:..</text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (130 samples, 0.27%)</title><rect x="593.3" y="405" width="3.2" height="15.0" fill="rgb(230,198,16)" rx="2" ry="2" />
<text  x="596.26" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (166 samples, 0.35%)</title><rect x="739.5" y="373" width="4.1" height="15.0" fill="rgb(242,7,12)" rx="2" ry="2" />
<text  x="742.45" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (24 samples, 0.05%)</title><rect x="278.2" y="357" width="0.6" height="15.0" fill="rgb(225,185,42)" rx="2" ry="2" />
<text  x="281.22" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (13 samples, 0.03%)</title><rect x="592.9" y="405" width="0.3" height="15.0" fill="rgb(236,113,45)" rx="2" ry="2" />
<text  x="595.89" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%)</title><rect x="611.0" y="421" width="0.3" height="15.0" fill="rgb(228,146,2)" rx="2" ry="2" />
<text  x="614.03" y="431.5" ></text>
</g>
<g >
<title>database::has_keyspace (100 samples, 0.21%)</title><rect x="848.3" y="357" width="2.5" height="15.0" fill="rgb(206,13,25)" rx="2" ry="2" />
<text  x="851.30" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="942.3" y="357" width="0.1" height="15.0" fill="rgb(207,55,30)" rx="2" ry="2" />
<text  x="945.30" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="706.4" y="469" width="0.2" height="15.0" fill="rgb(218,134,31)" rx="2" ry="2" />
<text  x="709.43" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (10 samples, 0.02%)</title><rect x="1056.1" y="277" width="0.3" height="15.0" fill="rgb(220,33,1)" rx="2" ry="2" />
<text  x="1059.12" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%)</title><rect x="438.8" y="341" width="0.2" height="15.0" fill="rgb(211,145,37)" rx="2" ry="2" />
<text  x="441.83" y="351.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,689 samples, 14.15%)</title><rect x="113.0" y="373" width="166.9" height="15.0" fill="rgb(223,145,3)" rx="2" ry="2" />
<text  x="115.96" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="22.6" y="389" width="0.1" height="15.0" fill="rgb(242,166,24)" rx="2" ry="2" />
<text  x="25.58" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="788.0" y="357" width="0.4" height="15.0" fill="rgb(217,140,14)" rx="2" ry="2" />
<text  x="790.97" y="367.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (7 samples, 0.01%)</title><rect x="125.7" y="277" width="0.1" height="15.0" fill="rgb(230,16,15)" rx="2" ry="2" />
<text  x="128.66" y="287.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1102.8" y="245" width="0.2" height="15.0" fill="rgb(248,0,31)" rx="2" ry="2" />
<text  x="1105.82" y="255.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%)</title><rect x="390.6" y="213" width="0.2" height="15.0" fill="rgb(234,66,24)" rx="2" ry="2" />
<text  x="393.64" y="223.5" ></text>
</g>
</g>
</svg>
