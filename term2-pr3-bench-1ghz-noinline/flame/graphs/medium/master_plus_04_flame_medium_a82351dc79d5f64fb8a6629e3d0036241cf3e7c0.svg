<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (21 samples, 0.04%)</title><rect x="833.6" y="357" width="0.5" height="15.0" fill="rgb(230,188,3)" rx="2" ry="2" />
<text  x="836.56" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (141 samples, 0.30%)</title><rect x="606.1" y="421" width="3.6" height="15.0" fill="rgb(251,119,18)" rx="2" ry="2" />
<text  x="609.13" y="431.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="664.6" y="485" width="0.7" height="15.0" fill="rgb(226,191,53)" rx="2" ry="2" />
<text  x="667.65" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (52 samples, 0.11%)</title><rect x="1075.6" y="293" width="1.3" height="15.0" fill="rgb(222,208,31)" rx="2" ry="2" />
<text  x="1078.57" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (60 samples, 0.13%)</title><rect x="607.7" y="389" width="1.5" height="15.0" fill="rgb(224,191,29)" rx="2" ry="2" />
<text  x="610.70" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (16 samples, 0.03%)</title><rect x="788.4" y="117" width="0.4" height="15.0" fill="rgb(217,67,44)" rx="2" ry="2" />
<text  x="791.42" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="488.8" y="309" width="0.1" height="15.0" fill="rgb(222,19,24)" rx="2" ry="2" />
<text  x="491.81" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="671.0" y="453" width="0.2" height="15.0" fill="rgb(236,38,40)" rx="2" ry="2" />
<text  x="674.04" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (19 samples, 0.04%)</title><rect x="852.8" y="485" width="0.4" height="15.0" fill="rgb(220,187,21)" rx="2" ry="2" />
<text  x="855.75" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.01%)</title><rect x="280.0" y="389" width="0.2" height="15.0" fill="rgb(228,41,14)" rx="2" ry="2" />
<text  x="283.04" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (128 samples, 0.27%)</title><rect x="1063.6" y="309" width="3.2" height="15.0" fill="rgb(214,46,46)" rx="2" ry="2" />
<text  x="1066.58" y="319.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (6 samples, 0.01%)</title><rect x="1089.9" y="277" width="0.2" height="15.0" fill="rgb(253,163,28)" rx="2" ry="2" />
<text  x="1092.90" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (6 samples, 0.01%)</title><rect x="209.8" y="117" width="0.2" height="15.0" fill="rgb(210,46,2)" rx="2" ry="2" />
<text  x="212.84" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (4 samples, 0.01%)</title><rect x="778.5" y="261" width="0.1" height="15.0" fill="rgb(249,86,14)" rx="2" ry="2" />
<text  x="781.52" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="960.6" y="373" width="0.1" height="15.0" fill="rgb(210,196,20)" rx="2" ry="2" />
<text  x="963.63" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (98 samples, 0.21%)</title><rect x="376.0" y="149" width="2.4" height="15.0" fill="rgb(246,77,48)" rx="2" ry="2" />
<text  x="378.96" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (36 samples, 0.08%)</title><rect x="652.8" y="437" width="0.9" height="15.0" fill="rgb(240,177,2)" rx="2" ry="2" />
<text  x="655.81" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="623.0" y="485" width="0.1" height="15.0" fill="rgb(213,118,17)" rx="2" ry="2" />
<text  x="625.96" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.16%)</title><rect x="1117.8" y="341" width="1.8" height="15.0" fill="rgb(254,78,19)" rx="2" ry="2" />
<text  x="1120.76" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (4 samples, 0.01%)</title><rect x="659.7" y="469" width="0.1" height="15.0" fill="rgb(230,4,43)" rx="2" ry="2" />
<text  x="662.71" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1079.3" y="325" width="0.2" height="15.0" fill="rgb(228,0,51)" rx="2" ry="2" />
<text  x="1082.32" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="631.6" y="485" width="0.1" height="15.0" fill="rgb(224,196,54)" rx="2" ry="2" />
<text  x="634.60" y="495.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (4 samples, 0.01%)</title><rect x="253.1" y="309" width="0.1" height="15.0" fill="rgb(230,2,37)" rx="2" ry="2" />
<text  x="256.09" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (14 samples, 0.03%)</title><rect x="1053.4" y="293" width="0.3" height="15.0" fill="rgb(239,46,6)" rx="2" ry="2" />
<text  x="1056.35" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (191 samples, 0.41%)</title><rect x="232.6" y="213" width="4.8" height="15.0" fill="rgb(207,191,5)" rx="2" ry="2" />
<text  x="235.56" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="1140.0" y="453" width="0.2" height="15.0" fill="rgb(248,110,29)" rx="2" ry="2" />
<text  x="1142.95" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (46 samples, 0.10%)</title><rect x="681.5" y="453" width="1.2" height="15.0" fill="rgb(250,225,5)" rx="2" ry="2" />
<text  x="684.55" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="936.4" y="405" width="0.3" height="15.0" fill="rgb(241,100,14)" rx="2" ry="2" />
<text  x="939.35" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="312.7" y="197" width="0.2" height="15.0" fill="rgb(214,192,43)" rx="2" ry="2" />
<text  x="315.74" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="1144.1" y="501" width="0.1" height="15.0" fill="rgb(215,117,7)" rx="2" ry="2" />
<text  x="1147.06" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (24 samples, 0.05%)</title><rect x="554.2" y="277" width="0.6" height="15.0" fill="rgb(211,99,7)" rx="2" ry="2" />
<text  x="557.19" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (24 samples, 0.05%)</title><rect x="1130.7" y="373" width="0.6" height="15.0" fill="rgb(250,2,30)" rx="2" ry="2" />
<text  x="1133.71" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="1039.2" y="181" width="0.6" height="15.0" fill="rgb(235,26,24)" rx="2" ry="2" />
<text  x="1042.20" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (61 samples, 0.13%)</title><rect x="1148.8" y="485" width="1.5" height="15.0" fill="rgb(244,15,13)" rx="2" ry="2" />
<text  x="1151.79" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (12 samples, 0.03%)</title><rect x="1146.8" y="485" width="0.3" height="15.0" fill="rgb(240,141,24)" rx="2" ry="2" />
<text  x="1149.75" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="647.4" y="469" width="0.2" height="15.0" fill="rgb(229,85,54)" rx="2" ry="2" />
<text  x="650.44" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (19 samples, 0.04%)</title><rect x="907.1" y="389" width="0.4" height="15.0" fill="rgb(229,188,1)" rx="2" ry="2" />
<text  x="910.06" y="399.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (17 samples, 0.04%)</title><rect x="133.1" y="261" width="0.5" height="15.0" fill="rgb(220,26,40)" rx="2" ry="2" />
<text  x="136.15" y="271.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (8 samples, 0.02%)</title><rect x="644.9" y="437" width="0.2" height="15.0" fill="rgb(235,157,23)" rx="2" ry="2" />
<text  x="647.92" y="447.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (4 samples, 0.01%)</title><rect x="51.9" y="469" width="0.1" height="15.0" fill="rgb(220,58,16)" rx="2" ry="2" />
<text  x="54.94" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (39 samples, 0.08%)</title><rect x="1051.5" y="245" width="0.9" height="15.0" fill="rgb(252,81,43)" rx="2" ry="2" />
<text  x="1054.46" y="255.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,290 samples, 2.75%)</title><rect x="327.8" y="181" width="32.5" height="15.0" fill="rgb(238,71,33)" rx="2" ry="2" />
<text  x="330.80" y="191.5" >wr..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (52 samples, 0.11%)</title><rect x="890.8" y="245" width="1.3" height="15.0" fill="rgb(209,162,34)" rx="2" ry="2" />
<text  x="893.84" y="255.5" ></text>
</g>
<g >
<title>free (15 samples, 0.03%)</title><rect x="38.2" y="421" width="0.4" height="15.0" fill="rgb(240,6,50)" rx="2" ry="2" />
<text  x="41.19" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (6 samples, 0.01%)</title><rect x="19.0" y="197" width="0.1" height="15.0" fill="rgb(237,212,19)" rx="2" ry="2" />
<text  x="21.99" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (54 samples, 0.12%)</title><rect x="854.7" y="501" width="1.3" height="15.0" fill="rgb(210,43,7)" rx="2" ry="2" />
<text  x="857.67" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (8 samples, 0.02%)</title><rect x="197.5" y="149" width="0.2" height="15.0" fill="rgb(220,227,25)" rx="2" ry="2" />
<text  x="200.50" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (121 samples, 0.26%)</title><rect x="1049.4" y="261" width="3.0" height="15.0" fill="rgb(209,25,0)" rx="2" ry="2" />
<text  x="1052.40" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="856.3" y="325" width="0.3" height="15.0" fill="rgb(240,100,15)" rx="2" ry="2" />
<text  x="859.33" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="1063.2" y="309" width="0.3" height="15.0" fill="rgb(222,15,29)" rx="2" ry="2" />
<text  x="1066.18" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (9 samples, 0.02%)</title><rect x="92.0" y="405" width="0.2" height="15.0" fill="rgb(243,202,18)" rx="2" ry="2" />
<text  x="95.01" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (47 samples, 0.10%)</title><rect x="19.5" y="325" width="1.2" height="15.0" fill="rgb(213,171,6)" rx="2" ry="2" />
<text  x="22.52" y="335.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (19 samples, 0.04%)</title><rect x="1133.2" y="421" width="0.5" height="15.0" fill="rgb(226,199,20)" rx="2" ry="2" />
<text  x="1136.23" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (35 samples, 0.07%)</title><rect x="768.0" y="293" width="0.9" height="15.0" fill="rgb(215,145,0)" rx="2" ry="2" />
<text  x="770.99" y="303.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="600.2" y="421" width="0.3" height="15.0" fill="rgb(240,11,24)" rx="2" ry="2" />
<text  x="603.19" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (94 samples, 0.20%)</title><rect x="781.7" y="197" width="2.4" height="15.0" fill="rgb(222,4,10)" rx="2" ry="2" />
<text  x="784.72" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (827 samples, 1.77%)</title><rect x="633.0" y="501" width="20.8" height="15.0" fill="rgb(209,120,26)" rx="2" ry="2" />
<text  x="635.96" y="511.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (19 samples, 0.04%)</title><rect x="917.4" y="357" width="0.5" height="15.0" fill="rgb(246,63,39)" rx="2" ry="2" />
<text  x="920.41" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (23 samples, 0.05%)</title><rect x="440.8" y="277" width="0.6" height="15.0" fill="rgb(220,81,44)" rx="2" ry="2" />
<text  x="443.85" y="287.5" ></text>
</g>
<g >
<title>row_tombstone::apply (32 samples, 0.07%)</title><rect x="386.0" y="213" width="0.8" height="15.0" fill="rgb(243,31,30)" rx="2" ry="2" />
<text  x="389.01" y="223.5" ></text>
</g>
<g >
<title>schema::get_sharder (4 samples, 0.01%)</title><rect x="1012.5" y="277" width="0.1" height="15.0" fill="rgb(248,15,31)" rx="2" ry="2" />
<text  x="1015.47" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (13 samples, 0.03%)</title><rect x="504.6" y="181" width="0.4" height="15.0" fill="rgb(214,170,26)" rx="2" ry="2" />
<text  x="507.62" y="191.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (34 samples, 0.07%)</title><rect x="468.1" y="277" width="0.9" height="15.0" fill="rgb(232,116,52)" rx="2" ry="2" />
<text  x="471.13" y="287.5" ></text>
</g>
<g >
<title>db::filter_for_query (42 samples, 0.09%)</title><rect x="1067.8" y="341" width="1.1" height="15.0" fill="rgb(230,78,13)" rx="2" ry="2" />
<text  x="1070.81" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (5 samples, 0.01%)</title><rect x="562.5" y="277" width="0.1" height="15.0" fill="rgb(208,43,4)" rx="2" ry="2" />
<text  x="565.48" y="287.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%)</title><rect x="1053.5" y="277" width="0.2" height="15.0" fill="rgb(236,132,28)" rx="2" ry="2" />
<text  x="1056.48" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="555.0" y="293" width="0.2" height="15.0" fill="rgb(223,46,44)" rx="2" ry="2" />
<text  x="558.03" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (168 samples, 0.36%)</title><rect x="716.8" y="357" width="4.3" height="15.0" fill="rgb(234,144,43)" rx="2" ry="2" />
<text  x="719.84" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (4 samples, 0.01%)</title><rect x="24.8" y="517" width="0.1" height="15.0" fill="rgb(218,137,10)" rx="2" ry="2" />
<text  x="27.79" y="527.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="675.2" y="357" width="0.7" height="15.0" fill="rgb(230,34,19)" rx="2" ry="2" />
<text  x="678.17" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (54 samples, 0.12%)</title><rect x="923.8" y="373" width="1.3" height="15.0" fill="rgb(248,136,25)" rx="2" ry="2" />
<text  x="926.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1109.3" y="373" width="0.1" height="15.0" fill="rgb(224,153,19)" rx="2" ry="2" />
<text  x="1112.30" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (15 samples, 0.03%)</title><rect x="70.3" y="421" width="0.4" height="15.0" fill="rgb(245,2,47)" rx="2" ry="2" />
<text  x="73.33" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%)</title><rect x="909.6" y="389" width="0.1" height="15.0" fill="rgb(218,181,18)" rx="2" ry="2" />
<text  x="912.58" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="564.6" y="309" width="0.1" height="15.0" fill="rgb(215,217,45)" rx="2" ry="2" />
<text  x="567.60" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (102 samples, 0.22%)</title><rect x="59.1" y="453" width="2.6" height="15.0" fill="rgb(207,29,34)" rx="2" ry="2" />
<text  x="62.14" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="937.7" y="357" width="0.8" height="15.0" fill="rgb(254,215,30)" rx="2" ry="2" />
<text  x="940.71" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (28 samples, 0.06%)</title><rect x="1065.9" y="261" width="0.8" height="15.0" fill="rgb(223,207,5)" rx="2" ry="2" />
<text  x="1068.95" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (20 samples, 0.04%)</title><rect x="566.7" y="341" width="0.5" height="15.0" fill="rgb(209,159,34)" rx="2" ry="2" />
<text  x="569.69" y="351.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (13 samples, 0.03%)</title><rect x="794.1" y="101" width="0.3" height="15.0" fill="rgb(247,229,47)" rx="2" ry="2" />
<text  x="797.09" y="111.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (101 samples, 0.22%)</title><rect x="665.6" y="485" width="2.5" height="15.0" fill="rgb(238,70,10)" rx="2" ry="2" />
<text  x="668.58" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (97 samples, 0.21%)</title><rect x="843.6" y="373" width="2.4" height="15.0" fill="rgb(234,16,18)" rx="2" ry="2" />
<text  x="846.58" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (48 samples, 0.10%)</title><rect x="875.7" y="405" width="1.2" height="15.0" fill="rgb(209,56,41)" rx="2" ry="2" />
<text  x="878.67" y="415.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="559.8" y="277" width="0.9" height="15.0" fill="rgb(242,61,19)" rx="2" ry="2" />
<text  x="562.76" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="954.7" y="405" width="0.2" height="15.0" fill="rgb(248,31,45)" rx="2" ry="2" />
<text  x="957.66" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="72.8" y="453" width="0.2" height="15.0" fill="rgb(228,1,34)" rx="2" ry="2" />
<text  x="75.82" y="463.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (6 samples, 0.01%)</title><rect x="875.4" y="405" width="0.2" height="15.0" fill="rgb(250,91,44)" rx="2" ry="2" />
<text  x="878.42" y="415.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (394 samples, 0.84%)</title><rect x="459.1" y="293" width="9.9" height="15.0" fill="rgb(214,70,1)" rx="2" ry="2" />
<text  x="462.06" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (20 samples, 0.04%)</title><rect x="498.0" y="261" width="0.5" height="15.0" fill="rgb(232,50,50)" rx="2" ry="2" />
<text  x="501.00" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (8 samples, 0.02%)</title><rect x="68.3" y="389" width="0.2" height="15.0" fill="rgb(230,136,11)" rx="2" ry="2" />
<text  x="71.34" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (85 samples, 0.18%)</title><rect x="912.4" y="357" width="2.1" height="15.0" fill="rgb(237,77,26)" rx="2" ry="2" />
<text  x="915.37" y="367.5" ></text>
</g>
<g >
<title>table::as_mutation_source (140 samples, 0.30%)</title><rect x="613.5" y="437" width="3.5" height="15.0" fill="rgb(212,124,22)" rx="2" ry="2" />
<text  x="616.49" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="591.7" y="373" width="0.2" height="15.0" fill="rgb(207,102,53)" rx="2" ry="2" />
<text  x="594.65" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (28 samples, 0.06%)</title><rect x="788.2" y="149" width="0.7" height="15.0" fill="rgb(206,184,51)" rx="2" ry="2" />
<text  x="791.22" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (54 samples, 0.12%)</title><rect x="982.1" y="277" width="1.3" height="15.0" fill="rgb(220,104,25)" rx="2" ry="2" />
<text  x="985.07" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (20 samples, 0.04%)</title><rect x="701.6" y="501" width="0.5" height="15.0" fill="rgb(219,95,31)" rx="2" ry="2" />
<text  x="704.60" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (102 samples, 0.22%)</title><rect x="843.5" y="389" width="2.5" height="15.0" fill="rgb(253,213,32)" rx="2" ry="2" />
<text  x="846.46" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (63 samples, 0.13%)</title><rect x="496.3" y="261" width="1.6" height="15.0" fill="rgb(236,196,18)" rx="2" ry="2" />
<text  x="499.34" y="271.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (5 samples, 0.01%)</title><rect x="1141.1" y="245" width="0.2" height="15.0" fill="rgb(226,226,36)" rx="2" ry="2" />
<text  x="1144.13" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (94 samples, 0.20%)</title><rect x="583.3" y="405" width="2.3" height="15.0" fill="rgb(239,4,18)" rx="2" ry="2" />
<text  x="586.26" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="106.9" y="373" width="0.3" height="15.0" fill="rgb(219,124,28)" rx="2" ry="2" />
<text  x="109.92" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="552.9" y="309" width="0.1" height="15.0" fill="rgb(228,150,15)" rx="2" ry="2" />
<text  x="555.91" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="1000.8" y="293" width="0.2" height="15.0" fill="rgb(223,10,38)" rx="2" ry="2" />
<text  x="1003.78" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (10 samples, 0.02%)</title><rect x="901.2" y="341" width="0.2" height="15.0" fill="rgb(232,227,38)" rx="2" ry="2" />
<text  x="904.19" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="673.9" y="485" width="0.4" height="15.0" fill="rgb(236,175,3)" rx="2" ry="2" />
<text  x="676.89" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (25 samples, 0.05%)</title><rect x="221.9" y="213" width="0.7" height="15.0" fill="rgb(248,10,13)" rx="2" ry="2" />
<text  x="224.94" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="57.6" y="437" width="0.2" height="15.0" fill="rgb(224,148,29)" rx="2" ry="2" />
<text  x="60.58" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (13 samples, 0.03%)</title><rect x="235.8" y="165" width="0.3" height="15.0" fill="rgb(247,195,18)" rx="2" ry="2" />
<text  x="238.81" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (17 samples, 0.04%)</title><rect x="1056.8" y="357" width="0.5" height="15.0" fill="rgb(220,111,28)" rx="2" ry="2" />
<text  x="1059.83" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (690 samples, 1.47%)</title><rect x="548.2" y="373" width="17.4" height="15.0" fill="rgb(218,174,5)" rx="2" ry="2" />
<text  x="551.17" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="856.3" y="341" width="0.3" height="15.0" fill="rgb(230,128,44)" rx="2" ry="2" />
<text  x="859.33" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (4 samples, 0.01%)</title><rect x="807.9" y="309" width="0.1" height="15.0" fill="rgb(227,148,27)" rx="2" ry="2" />
<text  x="810.92" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (4 samples, 0.01%)</title><rect x="999.3" y="293" width="0.1" height="15.0" fill="rgb(224,3,38)" rx="2" ry="2" />
<text  x="1002.27" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (4 samples, 0.01%)</title><rect x="20.5" y="213" width="0.1" height="15.0" fill="rgb(236,98,27)" rx="2" ry="2" />
<text  x="23.48" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (11 samples, 0.02%)</title><rect x="648.6" y="485" width="0.3" height="15.0" fill="rgb(247,125,36)" rx="2" ry="2" />
<text  x="651.60" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (60 samples, 0.13%)</title><rect x="254.2" y="325" width="1.5" height="15.0" fill="rgb(226,223,47)" rx="2" ry="2" />
<text  x="257.18" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="373" width="0.8" height="15.0" fill="rgb(244,7,16)" rx="2" ry="2" />
<text  x="1143.23" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="701.4" y="485" width="0.1" height="15.0" fill="rgb(225,40,5)" rx="2" ry="2" />
<text  x="704.37" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (7 samples, 0.01%)</title><rect x="977.2" y="357" width="0.2" height="15.0" fill="rgb(210,190,11)" rx="2" ry="2" />
<text  x="980.18" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (107 samples, 0.23%)</title><rect x="1171.8" y="437" width="2.7" height="15.0" fill="rgb(240,162,52)" rx="2" ry="2" />
<text  x="1174.81" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="923.1" y="373" width="0.2" height="15.0" fill="rgb(240,154,43)" rx="2" ry="2" />
<text  x="926.13" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="668.1" y="485" width="0.2" height="15.0" fill="rgb(207,2,47)" rx="2" ry="2" />
<text  x="671.12" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (25 samples, 0.05%)</title><rect x="944.2" y="357" width="0.6" height="15.0" fill="rgb(243,38,4)" rx="2" ry="2" />
<text  x="947.16" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="898.0" y="293" width="0.1" height="15.0" fill="rgb(254,105,16)" rx="2" ry="2" />
<text  x="901.02" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="642.9" y="469" width="0.1" height="15.0" fill="rgb(228,76,29)" rx="2" ry="2" />
<text  x="645.86" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (22 samples, 0.05%)</title><rect x="20.7" y="341" width="0.6" height="15.0" fill="rgb(217,166,47)" rx="2" ry="2" />
<text  x="23.71" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="75.6" y="453" width="0.2" height="15.0" fill="rgb(227,151,7)" rx="2" ry="2" />
<text  x="78.57" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (27 samples, 0.06%)</title><rect x="1031.1" y="149" width="0.7" height="15.0" fill="rgb(252,222,8)" rx="2" ry="2" />
<text  x="1034.09" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (78 samples, 0.17%)</title><rect x="797.6" y="261" width="1.9" height="15.0" fill="rgb(242,172,2)" rx="2" ry="2" />
<text  x="800.57" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="811.7" y="389" width="0.2" height="15.0" fill="rgb(210,163,38)" rx="2" ry="2" />
<text  x="814.75" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (9 samples, 0.02%)</title><rect x="835.8" y="421" width="0.3" height="15.0" fill="rgb(226,169,40)" rx="2" ry="2" />
<text  x="838.83" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (385 samples, 0.82%)</title><rect x="303.0" y="197" width="9.7" height="15.0" fill="rgb(228,217,54)" rx="2" ry="2" />
<text  x="305.99" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="639.5" y="453" width="0.1" height="15.0" fill="rgb(239,220,20)" rx="2" ry="2" />
<text  x="642.46" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="52.1" y="469" width="0.3" height="15.0" fill="rgb(230,172,39)" rx="2" ry="2" />
<text  x="55.11" y="479.5" ></text>
</g>
<g >
<title>table::make_reader (4,344 samples, 9.27%)</title><rect x="422.6" y="357" width="109.5" height="15.0" fill="rgb(231,31,49)" rx="2" ry="2" />
<text  x="425.64" y="367.5" >table::make_r..</text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (119 samples, 0.25%)</title><rect x="18.4" y="373" width="3.0" height="15.0" fill="rgb(230,26,2)" rx="2" ry="2" />
<text  x="21.41" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="746.0" y="405" width="0.1" height="15.0" fill="rgb(212,178,33)" rx="2" ry="2" />
<text  x="749.03" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="760.8" y="357" width="0.2" height="15.0" fill="rgb(217,116,0)" rx="2" ry="2" />
<text  x="763.84" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (26 samples, 0.06%)</title><rect x="856.1" y="469" width="0.7" height="15.0" fill="rgb(242,205,42)" rx="2" ry="2" />
<text  x="859.13" y="479.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="514.2" y="277" width="0.8" height="15.0" fill="rgb(239,66,24)" rx="2" ry="2" />
<text  x="517.20" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (53 samples, 0.11%)</title><rect x="530.5" y="341" width="1.4" height="15.0" fill="rgb(243,34,32)" rx="2" ry="2" />
<text  x="533.52" y="351.5" ></text>
</g>
<g >
<title>operator delete (6 samples, 0.01%)</title><rect x="857.0" y="485" width="0.2" height="15.0" fill="rgb(232,144,7)" rx="2" ry="2" />
<text  x="860.01" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="848.2" y="453" width="0.4" height="15.0" fill="rgb(210,1,10)" rx="2" ry="2" />
<text  x="851.22" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (11 samples, 0.02%)</title><rect x="857.5" y="357" width="0.3" height="15.0" fill="rgb(243,3,52)" rx="2" ry="2" />
<text  x="860.51" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;std::vector&lt;cql3::query_options, std::allocator&lt;cql3::query_options&gt; &gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="662.7" y="453" width="0.1" height="15.0" fill="rgb(252,201,35)" rx="2" ry="2" />
<text  x="665.73" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="41.0" y="453" width="0.3" height="15.0" fill="rgb(218,94,53)" rx="2" ry="2" />
<text  x="43.98" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (45 samples, 0.10%)</title><rect x="639.6" y="469" width="1.2" height="15.0" fill="rgb(246,198,49)" rx="2" ry="2" />
<text  x="642.63" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="205.1" y="165" width="0.7" height="15.0" fill="rgb(216,55,3)" rx="2" ry="2" />
<text  x="208.13" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (82 samples, 0.18%)</title><rect x="565.9" y="373" width="2.0" height="15.0" fill="rgb(252,99,31)" rx="2" ry="2" />
<text  x="568.88" y="383.5" ></text>
</g>
<g >
<title>dht::tri_compare (95 samples, 0.20%)</title><rect x="471.2" y="261" width="2.4" height="15.0" fill="rgb(231,93,5)" rx="2" ry="2" />
<text  x="474.17" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (22 samples, 0.05%)</title><rect x="230.2" y="197" width="0.6" height="15.0" fill="rgb(239,223,41)" rx="2" ry="2" />
<text  x="233.25" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.03%)</title><rect x="784.5" y="213" width="0.3" height="15.0" fill="rgb(211,200,26)" rx="2" ry="2" />
<text  x="787.49" y="223.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,207 samples, 23.92%)</title><rect x="857.9" y="485" width="282.3" height="15.0" fill="rgb(251,32,9)" rx="2" ry="2" />
<text  x="860.94" y="495.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>seastar::reactor::del_timer (4 samples, 0.01%)</title><rect x="695.4" y="421" width="0.1" height="15.0" fill="rgb(244,92,44)" rx="2" ry="2" />
<text  x="698.38" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (9 samples, 0.02%)</title><rect x="544.5" y="389" width="0.2" height="15.0" fill="rgb(248,207,45)" rx="2" ry="2" />
<text  x="547.52" y="399.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (6 samples, 0.01%)</title><rect x="118.4" y="277" width="0.2" height="15.0" fill="rgb(248,85,25)" rx="2" ry="2" />
<text  x="121.44" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (10 samples, 0.02%)</title><rect x="517.1" y="325" width="0.2" height="15.0" fill="rgb(254,26,19)" rx="2" ry="2" />
<text  x="520.07" y="335.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="890.3" y="261" width="0.3" height="15.0" fill="rgb(213,214,20)" rx="2" ry="2" />
<text  x="893.28" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (7 samples, 0.01%)</title><rect x="826.4" y="373" width="0.1" height="15.0" fill="rgb(207,137,21)" rx="2" ry="2" />
<text  x="829.36" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (38 samples, 0.08%)</title><rect x="120.4" y="277" width="0.9" height="15.0" fill="rgb(223,154,7)" rx="2" ry="2" />
<text  x="123.38" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (21 samples, 0.04%)</title><rect x="785.8" y="165" width="0.5" height="15.0" fill="rgb(219,108,24)" rx="2" ry="2" />
<text  x="788.75" y="175.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (14 samples, 0.03%)</title><rect x="991.9" y="277" width="0.4" height="15.0" fill="rgb(239,228,16)" rx="2" ry="2" />
<text  x="994.92" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="422.3" y="357" width="0.2" height="15.0" fill="rgb(222,204,40)" rx="2" ry="2" />
<text  x="425.26" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (178 samples, 0.38%)</title><rect x="539.7" y="389" width="4.4" height="15.0" fill="rgb(231,181,27)" rx="2" ry="2" />
<text  x="542.66" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (9 samples, 0.02%)</title><rect x="850.7" y="421" width="0.2" height="15.0" fill="rgb(253,222,48)" rx="2" ry="2" />
<text  x="853.69" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (7 samples, 0.01%)</title><rect x="150.6" y="213" width="0.2" height="15.0" fill="rgb(218,144,2)" rx="2" ry="2" />
<text  x="153.63" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (106 samples, 0.23%)</title><rect x="637.0" y="469" width="2.6" height="15.0" fill="rgb(208,207,12)" rx="2" ry="2" />
<text  x="639.96" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (7 samples, 0.01%)</title><rect x="365.3" y="197" width="0.1" height="15.0" fill="rgb(225,194,27)" rx="2" ry="2" />
<text  x="368.26" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="575.2" y="357" width="0.3" height="15.0" fill="rgb(218,131,24)" rx="2" ry="2" />
<text  x="578.15" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (6 samples, 0.01%)</title><rect x="19.0" y="277" width="0.1" height="15.0" fill="rgb(230,186,37)" rx="2" ry="2" />
<text  x="21.99" y="287.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%)</title><rect x="880.1" y="309" width="1.4" height="15.0" fill="rgb(211,76,23)" rx="2" ry="2" />
<text  x="883.11" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (55 samples, 0.12%)</title><rect x="362.1" y="181" width="1.4" height="15.0" fill="rgb(244,63,4)" rx="2" ry="2" />
<text  x="365.13" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%)</title><rect x="914.1" y="325" width="0.1" height="15.0" fill="rgb(219,29,0)" rx="2" ry="2" />
<text  x="917.06" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (11 samples, 0.02%)</title><rect x="598.4" y="437" width="0.3" height="15.0" fill="rgb(233,44,27)" rx="2" ry="2" />
<text  x="601.38" y="447.5" ></text>
</g>
<g >
<title>partition_entry::read (80 samples, 0.17%)</title><rect x="513.0" y="309" width="2.1" height="15.0" fill="rgb(208,130,48)" rx="2" ry="2" />
<text  x="516.04" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="997.9" y="229" width="0.6" height="15.0" fill="rgb(229,219,34)" rx="2" ry="2" />
<text  x="1000.94" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="774.5" y="245" width="0.4" height="15.0" fill="rgb(233,182,21)" rx="2" ry="2" />
<text  x="777.49" y="255.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.17%)</title><rect x="272.2" y="277" width="1.9" height="15.0" fill="rgb(213,219,8)" rx="2" ry="2" />
<text  x="275.16" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (17 samples, 0.04%)</title><rect x="821.5" y="405" width="0.5" height="15.0" fill="rgb(254,27,31)" rx="2" ry="2" />
<text  x="824.54" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (8 samples, 0.02%)</title><rect x="680.4" y="453" width="0.2" height="15.0" fill="rgb(254,137,35)" rx="2" ry="2" />
<text  x="683.39" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="1052.4" y="277" width="0.3" height="15.0" fill="rgb(210,120,36)" rx="2" ry="2" />
<text  x="1055.45" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="641.9" y="453" width="0.2" height="15.0" fill="rgb(234,124,6)" rx="2" ry="2" />
<text  x="644.90" y="463.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (26 samples, 0.06%)</title><rect x="325.5" y="181" width="0.7" height="15.0" fill="rgb(242,225,7)" rx="2" ry="2" />
<text  x="328.53" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (395 samples, 0.84%)</title><rect x="1024.9" y="213" width="10.0" height="15.0" fill="rgb(233,145,10)" rx="2" ry="2" />
<text  x="1027.94" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (17 samples, 0.04%)</title><rect x="1148.1" y="485" width="0.4" height="15.0" fill="rgb(226,121,4)" rx="2" ry="2" />
<text  x="1151.09" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (7 samples, 0.01%)</title><rect x="388.1" y="229" width="0.1" height="15.0" fill="rgb(248,12,19)" rx="2" ry="2" />
<text  x="391.05" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (38 samples, 0.08%)</title><rect x="117.5" y="277" width="0.9" height="15.0" fill="rgb(214,146,31)" rx="2" ry="2" />
<text  x="120.48" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (22 samples, 0.05%)</title><rect x="289.3" y="293" width="0.6" height="15.0" fill="rgb(212,80,13)" rx="2" ry="2" />
<text  x="292.31" y="303.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (4 samples, 0.01%)</title><rect x="1167.7" y="469" width="0.1" height="15.0" fill="rgb(205,45,10)" rx="2" ry="2" />
<text  x="1170.71" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (5 samples, 0.01%)</title><rect x="743.9" y="357" width="0.1" height="15.0" fill="rgb(243,101,10)" rx="2" ry="2" />
<text  x="746.91" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (5 samples, 0.01%)</title><rect x="935.2" y="405" width="0.2" height="15.0" fill="rgb(224,19,11)" rx="2" ry="2" />
<text  x="938.24" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::empty (4 samples, 0.01%)</title><rect x="945.3" y="405" width="0.1" height="15.0" fill="rgb(217,123,18)" rx="2" ry="2" />
<text  x="948.27" y="415.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%)</title><rect x="441.5" y="293" width="0.1" height="15.0" fill="rgb(231,31,42)" rx="2" ry="2" />
<text  x="444.45" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="891.6" y="229" width="0.5" height="15.0" fill="rgb(244,106,11)" rx="2" ry="2" />
<text  x="894.64" y="239.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (29 samples, 0.06%)</title><rect x="1140.2" y="485" width="0.8" height="15.0" fill="rgb(209,197,50)" rx="2" ry="2" />
<text  x="1143.23" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (110 samples, 0.23%)</title><rect x="1117.3" y="373" width="2.8" height="15.0" fill="rgb(244,142,37)" rx="2" ry="2" />
<text  x="1120.33" y="383.5" ></text>
</g>
<g >
<title>db::filter_for_query (8 samples, 0.02%)</title><rect x="969.3" y="357" width="0.2" height="15.0" fill="rgb(241,181,23)" rx="2" ry="2" />
<text  x="972.32" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (523 samples, 1.12%)</title><rect x="263.7" y="357" width="13.2" height="15.0" fill="rgb(230,182,42)" rx="2" ry="2" />
<text  x="266.75" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (66 samples, 0.14%)</title><rect x="818.3" y="325" width="1.7" height="15.0" fill="rgb(214,92,1)" rx="2" ry="2" />
<text  x="821.30" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (280 samples, 0.60%)</title><rect x="214.3" y="229" width="7.1" height="15.0" fill="rgb(216,6,34)" rx="2" ry="2" />
<text  x="217.30" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (18 samples, 0.04%)</title><rect x="694.3" y="421" width="0.4" height="15.0" fill="rgb(215,229,11)" rx="2" ry="2" />
<text  x="697.29" y="431.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (25 samples, 0.05%)</title><rect x="1140.3" y="325" width="0.6" height="15.0" fill="rgb(241,56,54)" rx="2" ry="2" />
<text  x="1143.25" y="335.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (80 samples, 0.17%)</title><rect x="287.2" y="277" width="2.1" height="15.0" fill="rgb(246,75,31)" rx="2" ry="2" />
<text  x="290.25" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (59 samples, 0.13%)</title><rect x="537.9" y="357" width="1.5" height="15.0" fill="rgb(206,12,26)" rx="2" ry="2" />
<text  x="540.95" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="539.2" y="341" width="0.2" height="15.0" fill="rgb(250,186,4)" rx="2" ry="2" />
<text  x="542.18" y="351.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%)</title><rect x="601.8" y="437" width="0.2" height="15.0" fill="rgb(247,135,11)" rx="2" ry="2" />
<text  x="604.75" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (10 samples, 0.02%)</title><rect x="276.9" y="357" width="0.3" height="15.0" fill="rgb(219,5,42)" rx="2" ry="2" />
<text  x="279.92" y="367.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (12 samples, 0.03%)</title><rect x="907.5" y="389" width="0.3" height="15.0" fill="rgb(232,164,43)" rx="2" ry="2" />
<text  x="910.54" y="399.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (4 samples, 0.01%)</title><rect x="711.7" y="453" width="0.1" height="15.0" fill="rgb(213,209,47)" rx="2" ry="2" />
<text  x="714.72" y="463.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (124 samples, 0.26%)</title><rect x="613.7" y="421" width="3.1" height="15.0" fill="rgb(223,115,42)" rx="2" ry="2" />
<text  x="616.69" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="929.9" y="389" width="0.1" height="15.0" fill="rgb(253,179,15)" rx="2" ry="2" />
<text  x="932.85" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="24.9" y="517" width="0.2" height="15.0" fill="rgb(223,97,34)" rx="2" ry="2" />
<text  x="27.89" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (12 samples, 0.03%)</title><rect x="362.7" y="149" width="0.3" height="15.0" fill="rgb(251,144,23)" rx="2" ry="2" />
<text  x="365.71" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="782.5" y="149" width="0.1" height="15.0" fill="rgb(221,84,38)" rx="2" ry="2" />
<text  x="785.48" y="159.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (47 samples, 0.10%)</title><rect x="353.6" y="149" width="1.2" height="15.0" fill="rgb(205,212,44)" rx="2" ry="2" />
<text  x="356.62" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="42.5" y="469" width="0.1" height="15.0" fill="rgb(206,113,30)" rx="2" ry="2" />
<text  x="45.54" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="527.4" y="229" width="0.1" height="15.0" fill="rgb(222,26,36)" rx="2" ry="2" />
<text  x="530.37" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (8 samples, 0.02%)</title><rect x="1044.4" y="261" width="0.2" height="15.0" fill="rgb(225,199,27)" rx="2" ry="2" />
<text  x="1047.41" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (22 samples, 0.05%)</title><rect x="1034.3" y="197" width="0.5" height="15.0" fill="rgb(252,108,9)" rx="2" ry="2" />
<text  x="1037.29" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (7 samples, 0.01%)</title><rect x="676.0" y="501" width="0.2" height="15.0" fill="rgb(223,205,13)" rx="2" ry="2" />
<text  x="679.03" y="511.5" ></text>
</g>
<g >
<title>[unknown] (544 samples, 1.16%)</title><rect x="10.0" y="629" width="13.7" height="15.0" fill="rgb(236,11,7)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (11 samples, 0.02%)</title><rect x="667.8" y="437" width="0.3" height="15.0" fill="rgb(235,68,22)" rx="2" ry="2" />
<text  x="670.84" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (32 samples, 0.07%)</title><rect x="22.0" y="469" width="0.8" height="15.0" fill="rgb(250,44,50)" rx="2" ry="2" />
<text  x="25.01" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (4 samples, 0.01%)</title><rect x="239.4" y="181" width="0.1" height="15.0" fill="rgb(211,204,6)" rx="2" ry="2" />
<text  x="242.37" y="191.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.12%)</title><rect x="982.1" y="293" width="1.3" height="15.0" fill="rgb(233,76,17)" rx="2" ry="2" />
<text  x="985.07" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (35 samples, 0.07%)</title><rect x="1065.8" y="277" width="0.9" height="15.0" fill="rgb(243,14,43)" rx="2" ry="2" />
<text  x="1068.77" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,780 samples, 14.47%)</title><rect x="107.8" y="373" width="170.7" height="15.0" fill="rgb(211,224,13)" rx="2" ry="2" />
<text  x="110.76" y="383.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (67 samples, 0.14%)</title><rect x="825.0" y="421" width="1.7" height="15.0" fill="rgb(213,71,51)" rx="2" ry="2" />
<text  x="828.00" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="409.3" y="245" width="0.2" height="15.0" fill="rgb(226,226,45)" rx="2" ry="2" />
<text  x="412.31" y="255.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (7 samples, 0.01%)</title><rect x="210.3" y="133" width="0.1" height="15.0" fill="rgb(218,206,8)" rx="2" ry="2" />
<text  x="213.27" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (12 samples, 0.03%)</title><rect x="546.5" y="405" width="0.3" height="15.0" fill="rgb(218,77,21)" rx="2" ry="2" />
<text  x="549.54" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (12 samples, 0.03%)</title><rect x="856.3" y="373" width="0.3" height="15.0" fill="rgb(249,167,3)" rx="2" ry="2" />
<text  x="859.30" y="383.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,902 samples, 4.06%)</title><rect x="761.4" y="389" width="48.0" height="15.0" fill="rgb(231,142,49)" rx="2" ry="2" />
<text  x="764.44" y="399.5" >std:..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%)</title><rect x="1097.6" y="261" width="0.1" height="15.0" fill="rgb(254,0,42)" rx="2" ry="2" />
<text  x="1100.56" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (40 samples, 0.09%)</title><rect x="311.7" y="181" width="1.0" height="15.0" fill="rgb(229,131,20)" rx="2" ry="2" />
<text  x="314.68" y="191.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="582.2" y="405" width="0.7" height="15.0" fill="rgb(211,159,5)" rx="2" ry="2" />
<text  x="585.20" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (148 samples, 0.32%)</title><rect x="36.3" y="469" width="3.7" height="15.0" fill="rgb(217,34,36)" rx="2" ry="2" />
<text  x="39.30" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="250.7" y="261" width="0.1" height="15.0" fill="rgb(245,219,49)" rx="2" ry="2" />
<text  x="253.67" y="271.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (79 samples, 0.17%)</title><rect x="537.6" y="389" width="2.0" height="15.0" fill="rgb(252,215,28)" rx="2" ry="2" />
<text  x="540.57" y="399.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (49 samples, 0.10%)</title><rect x="822.6" y="421" width="1.2" height="15.0" fill="rgb(249,199,46)" rx="2" ry="2" />
<text  x="825.55" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="1167.3" y="485" width="0.1" height="15.0" fill="rgb(239,108,27)" rx="2" ry="2" />
<text  x="1170.33" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (4 samples, 0.01%)</title><rect x="69.2" y="389" width="0.1" height="15.0" fill="rgb(233,14,41)" rx="2" ry="2" />
<text  x="72.24" y="399.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="996.4" y="261" width="2.1" height="15.0" fill="rgb(240,199,26)" rx="2" ry="2" />
<text  x="999.43" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (46 samples, 0.10%)</title><rect x="743.0" y="389" width="1.1" height="15.0" fill="rgb(250,180,14)" rx="2" ry="2" />
<text  x="745.96" y="399.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (89 samples, 0.19%)</title><rect x="898.4" y="325" width="2.3" height="15.0" fill="rgb(241,163,49)" rx="2" ry="2" />
<text  x="901.44" y="335.5" ></text>
</g>
<g >
<title>database::query (25 samples, 0.05%)</title><rect x="1007.3" y="277" width="0.6" height="15.0" fill="rgb(233,65,19)" rx="2" ry="2" />
<text  x="1010.31" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (292 samples, 0.62%)</title><rect x="15.9" y="581" width="7.3" height="15.0" fill="rgb(216,113,9)" rx="2" ry="2" />
<text  x="18.89" y="591.5" ></text>
</g>
<g >
<title>query::digester::digester (23 samples, 0.05%)</title><rect x="588.8" y="405" width="0.6" height="15.0" fill="rgb(211,198,27)" rx="2" ry="2" />
<text  x="591.83" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (6 samples, 0.01%)</title><rect x="416.0" y="405" width="0.2" height="15.0" fill="rgb(246,100,35)" rx="2" ry="2" />
<text  x="419.01" y="415.5" ></text>
</g>
<g >
<title>local_schema_registry (10 samples, 0.02%)</title><rect x="969.7" y="357" width="0.3" height="15.0" fill="rgb(236,224,13)" rx="2" ry="2" />
<text  x="972.73" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (46 samples, 0.10%)</title><rect x="808.0" y="309" width="1.2" height="15.0" fill="rgb(251,150,38)" rx="2" ry="2" />
<text  x="811.04" y="319.5" ></text>
</g>
<g >
<title>schema::registry_entry (5 samples, 0.01%)</title><rect x="1009.4" y="261" width="0.1" height="15.0" fill="rgb(219,61,14)" rx="2" ry="2" />
<text  x="1012.37" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (20 samples, 0.04%)</title><rect x="818.7" y="309" width="0.5" height="15.0" fill="rgb(221,180,14)" rx="2" ry="2" />
<text  x="821.67" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (15 samples, 0.03%)</title><rect x="274.1" y="277" width="0.4" height="15.0" fill="rgb(220,154,37)" rx="2" ry="2" />
<text  x="277.13" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="547.3" y="421" width="0.1" height="15.0" fill="rgb(213,68,41)" rx="2" ry="2" />
<text  x="550.29" y="431.5" ></text>
</g>
<g >
<title>database::find_column_family (76 samples, 0.16%)</title><rect x="1060.9" y="341" width="1.9" height="15.0" fill="rgb(209,138,47)" rx="2" ry="2" />
<text  x="1063.86" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (232 samples, 0.50%)</title><rect x="246.3" y="293" width="5.8" height="15.0" fill="rgb(227,117,43)" rx="2" ry="2" />
<text  x="249.27" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (130 samples, 0.28%)</title><rect x="241.2" y="229" width="3.2" height="15.0" fill="rgb(230,12,25)" rx="2" ry="2" />
<text  x="244.15" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (138 samples, 0.29%)</title><rect x="941.8" y="405" width="3.5" height="15.0" fill="rgb(240,111,17)" rx="2" ry="2" />
<text  x="944.79" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="249.7" y="261" width="0.2" height="15.0" fill="rgb(233,104,16)" rx="2" ry="2" />
<text  x="252.74" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,421 samples, 9.44%)</title><rect x="420.7" y="373" width="111.4" height="15.0" fill="rgb(208,20,2)" rx="2" ry="2" />
<text  x="423.70" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>seastar::thread_context::thread_context (11 samples, 0.02%)</title><rect x="23.3" y="613" width="0.3" height="15.0" fill="rgb(253,143,0)" rx="2" ry="2" />
<text  x="26.27" y="623.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (55 samples, 0.12%)</title><rect x="399.6" y="213" width="1.4" height="15.0" fill="rgb(238,160,37)" rx="2" ry="2" />
<text  x="402.64" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="620.2" y="485" width="0.1" height="15.0" fill="rgb(239,214,36)" rx="2" ry="2" />
<text  x="623.21" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1046.2" y="277" width="0.2" height="15.0" fill="rgb(251,217,30)" rx="2" ry="2" />
<text  x="1049.22" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="417.2" y="405" width="0.2" height="15.0" fill="rgb(246,142,7)" rx="2" ry="2" />
<text  x="420.25" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (27 samples, 0.06%)</title><rect x="696.6" y="437" width="0.7" height="15.0" fill="rgb(225,151,35)" rx="2" ry="2" />
<text  x="699.64" y="447.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,033 samples, 10.74%)</title><rect x="283.7" y="341" width="126.8" height="15.0" fill="rgb(207,163,49)" rx="2" ry="2" />
<text  x="286.70" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="497.7" y="229" width="0.2" height="15.0" fill="rgb(231,77,29)" rx="2" ry="2" />
<text  x="500.72" y="239.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (7 samples, 0.01%)</title><rect x="1080.2" y="325" width="0.2" height="15.0" fill="rgb(228,110,0)" rx="2" ry="2" />
<text  x="1083.18" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="278.5" y="373" width="0.2" height="15.0" fill="rgb(254,27,8)" rx="2" ry="2" />
<text  x="281.53" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="1116.5" y="389" width="0.2" height="15.0" fill="rgb(238,30,43)" rx="2" ry="2" />
<text  x="1119.50" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%)</title><rect x="846.4" y="421" width="1.6" height="15.0" fill="rgb(213,107,42)" rx="2" ry="2" />
<text  x="849.35" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (20 samples, 0.04%)</title><rect x="71.7" y="453" width="0.5" height="15.0" fill="rgb(220,190,42)" rx="2" ry="2" />
<text  x="74.66" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (11 samples, 0.02%)</title><rect x="534.5" y="421" width="0.2" height="15.0" fill="rgb(217,187,29)" rx="2" ry="2" />
<text  x="537.47" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="313.2" y="213" width="0.1" height="15.0" fill="rgb(252,194,54)" rx="2" ry="2" />
<text  x="316.22" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (61 samples, 0.13%)</title><rect x="714.1" y="421" width="1.5" height="15.0" fill="rgb(237,7,41)" rx="2" ry="2" />
<text  x="717.09" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (8 samples, 0.02%)</title><rect x="896.3" y="325" width="0.2" height="15.0" fill="rgb(244,182,17)" rx="2" ry="2" />
<text  x="899.30" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%)</title><rect x="657.0" y="469" width="0.5" height="15.0" fill="rgb(215,107,49)" rx="2" ry="2" />
<text  x="660.04" y="479.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="216.2" y="181" width="0.2" height="15.0" fill="rgb(228,138,47)" rx="2" ry="2" />
<text  x="219.19" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (15 samples, 0.03%)</title><rect x="576.0" y="341" width="0.3" height="15.0" fill="rgb(219,172,38)" rx="2" ry="2" />
<text  x="578.96" y="351.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="47.4" y="501" width="0.3" height="15.0" fill="rgb(215,97,17)" rx="2" ry="2" />
<text  x="50.40" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.14%)</title><rect x="1049.7" y="229" width="1.6" height="15.0" fill="rgb(223,105,20)" rx="2" ry="2" />
<text  x="1052.65" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (320 samples, 0.68%)</title><rect x="35.2" y="485" width="8.0" height="15.0" fill="rgb(212,188,53)" rx="2" ry="2" />
<text  x="38.19" y="495.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (10 samples, 0.02%)</title><rect x="666.4" y="469" width="0.2" height="15.0" fill="rgb(211,187,53)" rx="2" ry="2" />
<text  x="669.36" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (6 samples, 0.01%)</title><rect x="19.0" y="181" width="0.1" height="15.0" fill="rgb(215,37,1)" rx="2" ry="2" />
<text  x="21.99" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="815.6" y="277" width="0.4" height="15.0" fill="rgb(239,179,35)" rx="2" ry="2" />
<text  x="818.60" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="640.3" y="405" width="0.4" height="15.0" fill="rgb(247,206,17)" rx="2" ry="2" />
<text  x="643.34" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (13 samples, 0.03%)</title><rect x="25.9" y="517" width="0.4" height="15.0" fill="rgb(209,180,29)" rx="2" ry="2" />
<text  x="28.94" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::stats (29 samples, 0.06%)</title><rect x="497.2" y="245" width="0.7" height="15.0" fill="rgb(242,125,39)" rx="2" ry="2" />
<text  x="500.19" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (72 samples, 0.15%)</title><rect x="40.0" y="469" width="1.8" height="15.0" fill="rgb(214,32,53)" rx="2" ry="2" />
<text  x="43.02" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.01%)</title><rect x="106.8" y="373" width="0.1" height="15.0" fill="rgb(211,150,12)" rx="2" ry="2" />
<text  x="109.80" y="383.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (8 samples, 0.02%)</title><rect x="518.1" y="341" width="0.2" height="15.0" fill="rgb(248,44,45)" rx="2" ry="2" />
<text  x="521.13" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="828.1" y="437" width="0.3" height="15.0" fill="rgb(212,35,22)" rx="2" ry="2" />
<text  x="831.09" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="443.1" y="277" width="0.1" height="15.0" fill="rgb(206,212,43)" rx="2" ry="2" />
<text  x="446.09" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (32 samples, 0.07%)</title><rect x="759.3" y="341" width="0.8" height="15.0" fill="rgb(216,72,21)" rx="2" ry="2" />
<text  x="762.33" y="351.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="239.9" y="229" width="0.1" height="15.0" fill="rgb(211,2,33)" rx="2" ry="2" />
<text  x="242.89" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="65.8" y="389" width="0.1" height="15.0" fill="rgb(208,52,35)" rx="2" ry="2" />
<text  x="68.79" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,652 samples, 9.93%)</title><rect x="289.9" y="293" width="117.1" height="15.0" fill="rgb(241,28,50)" rx="2" ry="2" />
<text  x="292.87" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="834.5" y="405" width="1.2" height="15.0" fill="rgb(218,101,32)" rx="2" ry="2" />
<text  x="837.54" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%)</title><rect x="760.4" y="373" width="0.1" height="15.0" fill="rgb(238,69,44)" rx="2" ry="2" />
<text  x="763.39" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (40 samples, 0.09%)</title><rect x="157.9" y="197" width="1.0" height="15.0" fill="rgb(218,78,25)" rx="2" ry="2" />
<text  x="160.88" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="686.6" y="469" width="0.4" height="15.0" fill="rgb(252,98,23)" rx="2" ry="2" />
<text  x="689.59" y="479.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (10 samples, 0.02%)</title><rect x="17.7" y="245" width="0.3" height="15.0" fill="rgb(235,141,22)" rx="2" ry="2" />
<text  x="20.71" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (7 samples, 0.01%)</title><rect x="691.8" y="437" width="0.2" height="15.0" fill="rgb(236,106,36)" rx="2" ry="2" />
<text  x="694.82" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (4 samples, 0.01%)</title><rect x="539.5" y="373" width="0.1" height="15.0" fill="rgb(238,221,33)" rx="2" ry="2" />
<text  x="542.46" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="990.0" y="261" width="0.2" height="15.0" fill="rgb(225,155,53)" rx="2" ry="2" />
<text  x="992.98" y="271.5" ></text>
</g>
<g >
<title>row::row (1,308 samples, 2.79%)</title><rect x="163.3" y="149" width="33.0" height="15.0" fill="rgb(242,94,4)" rx="2" ry="2" />
<text  x="166.35" y="159.5" >ro..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="276.5" y="325" width="0.3" height="15.0" fill="rgb(249,119,22)" rx="2" ry="2" />
<text  x="279.54" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="732.4" y="357" width="0.2" height="15.0" fill="rgb(212,66,45)" rx="2" ry="2" />
<text  x="735.43" y="367.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (4 samples, 0.01%)</title><rect x="47.2" y="437" width="0.1" height="15.0" fill="rgb(218,97,25)" rx="2" ry="2" />
<text  x="50.23" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="989.2" y="277" width="0.2" height="15.0" fill="rgb(236,82,34)" rx="2" ry="2" />
<text  x="992.22" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (36 samples, 0.08%)</title><rect x="1045.0" y="261" width="0.9" height="15.0" fill="rgb(247,144,6)" rx="2" ry="2" />
<text  x="1047.97" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="450.8" y="325" width="0.2" height="15.0" fill="rgb(243,75,52)" rx="2" ry="2" />
<text  x="453.82" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%)</title><rect x="828.8" y="421" width="0.9" height="15.0" fill="rgb(228,55,19)" rx="2" ry="2" />
<text  x="831.77" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (125 samples, 0.27%)</title><rect x="1117.0" y="389" width="3.1" height="15.0" fill="rgb(226,170,20)" rx="2" ry="2" />
<text  x="1119.95" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (6 samples, 0.01%)</title><rect x="393.7" y="229" width="0.1" height="15.0" fill="rgb(236,7,5)" rx="2" ry="2" />
<text  x="396.69" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="324.5" y="165" width="0.3" height="15.0" fill="rgb(235,182,19)" rx="2" ry="2" />
<text  x="327.48" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (13 samples, 0.03%)</title><rect x="1048.8" y="277" width="0.3" height="15.0" fill="rgb(243,199,41)" rx="2" ry="2" />
<text  x="1051.77" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (18 samples, 0.04%)</title><rect x="856.3" y="437" width="0.4" height="15.0" fill="rgb(243,91,24)" rx="2" ry="2" />
<text  x="859.25" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="534.2" y="389" width="0.1" height="15.0" fill="rgb(218,162,33)" rx="2" ry="2" />
<text  x="537.17" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (7 samples, 0.01%)</title><rect x="793.7" y="117" width="0.2" height="15.0" fill="rgb(232,204,53)" rx="2" ry="2" />
<text  x="796.71" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="778.4" y="261" width="0.1" height="15.0" fill="rgb(205,200,34)" rx="2" ry="2" />
<text  x="781.42" y="271.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%)</title><rect x="136.4" y="261" width="0.1" height="15.0" fill="rgb(230,151,52)" rx="2" ry="2" />
<text  x="139.42" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (16 samples, 0.03%)</title><rect x="220.1" y="181" width="0.4" height="15.0" fill="rgb(241,219,37)" rx="2" ry="2" />
<text  x="223.07" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="1174.5" y="437" width="0.1" height="15.0" fill="rgb(253,153,27)" rx="2" ry="2" />
<text  x="1177.51" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (69 samples, 0.15%)</title><rect x="292.3" y="261" width="1.7" height="15.0" fill="rgb(239,14,27)" rx="2" ry="2" />
<text  x="295.29" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (18 samples, 0.04%)</title><rect x="856.3" y="405" width="0.4" height="15.0" fill="rgb(238,113,34)" rx="2" ry="2" />
<text  x="859.25" y="415.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (35 samples, 0.07%)</title><rect x="791.3" y="149" width="0.9" height="15.0" fill="rgb(229,195,17)" rx="2" ry="2" />
<text  x="794.29" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%)</title><rect x="1038.1" y="197" width="1.7" height="15.0" fill="rgb(210,5,23)" rx="2" ry="2" />
<text  x="1041.06" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="685.3" y="469" width="0.3" height="15.0" fill="rgb(224,96,54)" rx="2" ry="2" />
<text  x="688.28" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="794.8" y="69" width="0.1" height="15.0" fill="rgb(230,140,54)" rx="2" ry="2" />
<text  x="797.82" y="79.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (4 samples, 0.01%)</title><rect x="799.9" y="277" width="0.1" height="15.0" fill="rgb(207,108,22)" rx="2" ry="2" />
<text  x="802.91" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (488 samples, 1.04%)</title><rect x="688.4" y="485" width="12.3" height="15.0" fill="rgb(211,24,27)" rx="2" ry="2" />
<text  x="691.40" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (18 samples, 0.04%)</title><rect x="1046.4" y="277" width="0.4" height="15.0" fill="rgb(246,120,51)" rx="2" ry="2" />
<text  x="1049.38" y="287.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.01%)</title><rect x="47.1" y="453" width="0.1" height="15.0" fill="rgb(247,216,32)" rx="2" ry="2" />
<text  x="50.10" y="463.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (19 samples, 0.04%)</title><rect x="611.2" y="421" width="0.5" height="15.0" fill="rgb(241,48,30)" rx="2" ry="2" />
<text  x="614.22" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="121.2" y="261" width="0.1" height="15.0" fill="rgb(213,226,20)" rx="2" ry="2" />
<text  x="124.16" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (79 samples, 0.17%)</title><rect x="651.7" y="453" width="2.0" height="15.0" fill="rgb(251,33,26)" rx="2" ry="2" />
<text  x="654.72" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="133.6" y="261" width="0.5" height="15.0" fill="rgb(226,3,22)" rx="2" ry="2" />
<text  x="136.57" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (4 samples, 0.01%)</title><rect x="819.2" y="309" width="0.1" height="15.0" fill="rgb(223,67,15)" rx="2" ry="2" />
<text  x="822.20" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="617.7" y="469" width="0.2" height="15.0" fill="rgb(209,157,24)" rx="2" ry="2" />
<text  x="620.75" y="479.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (7 samples, 0.01%)</title><rect x="232.3" y="197" width="0.2" height="15.0" fill="rgb(229,56,40)" rx="2" ry="2" />
<text  x="235.31" y="207.5" ></text>
</g>
<g >
<title>schema_registry_entry::load (4 samples, 0.01%)</title><rect x="47.2" y="453" width="0.1" height="15.0" fill="rgb(207,36,5)" rx="2" ry="2" />
<text  x="50.23" y="463.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (7 samples, 0.01%)</title><rect x="421.6" y="357" width="0.2" height="15.0" fill="rgb(253,33,17)" rx="2" ry="2" />
<text  x="424.60" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (47 samples, 0.10%)</title><rect x="702.5" y="501" width="1.1" height="15.0" fill="rgb(233,14,49)" rx="2" ry="2" />
<text  x="705.45" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="1138.8" y="405" width="0.1" height="15.0" fill="rgb(225,54,19)" rx="2" ry="2" />
<text  x="1141.79" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (16 samples, 0.03%)</title><rect x="362.6" y="165" width="0.4" height="15.0" fill="rgb(244,191,3)" rx="2" ry="2" />
<text  x="365.61" y="175.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (95 samples, 0.20%)</title><rect x="792.6" y="133" width="2.3" height="15.0" fill="rgb(216,11,49)" rx="2" ry="2" />
<text  x="795.55" y="143.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%)</title><rect x="19.0" y="309" width="0.1" height="15.0" fill="rgb(205,39,28)" rx="2" ry="2" />
<text  x="21.97" y="319.5" ></text>
</g>
<g >
<title>malloc (28 samples, 0.06%)</title><rect x="590.8" y="373" width="0.7" height="15.0" fill="rgb(211,29,19)" rx="2" ry="2" />
<text  x="593.84" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (91 samples, 0.19%)</title><rect x="259.2" y="325" width="2.3" height="15.0" fill="rgb(251,172,8)" rx="2" ry="2" />
<text  x="262.24" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (39 samples, 0.08%)</title><rect x="950.9" y="389" width="1.0" height="15.0" fill="rgb(233,130,51)" rx="2" ry="2" />
<text  x="953.89" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="841.0" y="437" width="0.1" height="15.0" fill="rgb(242,106,39)" rx="2" ry="2" />
<text  x="843.99" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::column_identifier_raw, false&gt;::make&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (4 samples, 0.01%)</title><rect x="19.2" y="309" width="0.1" height="15.0" fill="rgb(246,6,7)" rx="2" ry="2" />
<text  x="22.17" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (29 samples, 0.06%)</title><rect x="22.0" y="437" width="0.8" height="15.0" fill="rgb(246,189,30)" rx="2" ry="2" />
<text  x="25.04" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="848.0" y="437" width="0.2" height="15.0" fill="rgb(205,115,44)" rx="2" ry="2" />
<text  x="850.97" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="1108.6" y="389" width="0.4" height="15.0" fill="rgb(222,105,3)" rx="2" ry="2" />
<text  x="1111.62" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%)</title><rect x="288.5" y="245" width="0.6" height="15.0" fill="rgb(232,106,25)" rx="2" ry="2" />
<text  x="291.51" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (12 samples, 0.03%)</title><rect x="543.8" y="277" width="0.3" height="15.0" fill="rgb(240,82,7)" rx="2" ry="2" />
<text  x="546.79" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (6 samples, 0.01%)</title><rect x="678.8" y="469" width="0.1" height="15.0" fill="rgb(237,70,40)" rx="2" ry="2" />
<text  x="681.78" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (8 samples, 0.02%)</title><rect x="205.5" y="133" width="0.2" height="15.0" fill="rgb(235,114,10)" rx="2" ry="2" />
<text  x="208.46" y="143.5" ></text>
</g>
<g >
<title>database::do_apply (29 samples, 0.06%)</title><rect x="1140.2" y="341" width="0.8" height="15.0" fill="rgb(242,83,18)" rx="2" ry="2" />
<text  x="1143.23" y="351.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="995.7" y="277" width="0.1" height="15.0" fill="rgb(220,144,8)" rx="2" ry="2" />
<text  x="998.75" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20 samples, 0.04%)</title><rect x="735.9" y="277" width="0.5" height="15.0" fill="rgb(214,82,36)" rx="2" ry="2" />
<text  x="738.88" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="623.3" y="485" width="0.1" height="15.0" fill="rgb(224,17,7)" rx="2" ry="2" />
<text  x="626.26" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (37 samples, 0.08%)</title><rect x="262.8" y="357" width="0.9" height="15.0" fill="rgb(218,226,3)" rx="2" ry="2" />
<text  x="265.82" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="193.2" y="117" width="0.1" height="15.0" fill="rgb(250,194,25)" rx="2" ry="2" />
<text  x="196.22" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="547.0" y="421" width="0.2" height="15.0" fill="rgb(216,109,8)" rx="2" ry="2" />
<text  x="549.99" y="431.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (256 samples, 0.55%)</title><rect x="1083.4" y="245" width="6.5" height="15.0" fill="rgb(207,77,25)" rx="2" ry="2" />
<text  x="1086.43" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%)</title><rect x="483.9" y="325" width="0.2" height="15.0" fill="rgb(223,203,53)" rx="2" ry="2" />
<text  x="486.87" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="1009.9" y="277" width="0.2" height="15.0" fill="rgb(208,35,49)" rx="2" ry="2" />
<text  x="1012.93" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (4 samples, 0.01%)</title><rect x="302.6" y="197" width="0.1" height="15.0" fill="rgb(217,198,44)" rx="2" ry="2" />
<text  x="305.61" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="745.9" y="405" width="0.1" height="15.0" fill="rgb(216,78,43)" rx="2" ry="2" />
<text  x="748.90" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%)</title><rect x="833.0" y="341" width="0.2" height="15.0" fill="rgb(211,205,40)" rx="2" ry="2" />
<text  x="835.98" y="351.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="826.0" y="373" width="0.4" height="15.0" fill="rgb(221,186,40)" rx="2" ry="2" />
<text  x="828.95" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (4 samples, 0.01%)</title><rect x="277.2" y="357" width="0.1" height="15.0" fill="rgb(207,49,42)" rx="2" ry="2" />
<text  x="280.17" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (222 samples, 0.47%)</title><rect x="1169.1" y="485" width="5.6" height="15.0" fill="rgb(217,206,31)" rx="2" ry="2" />
<text  x="1172.09" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%)</title><rect x="648.5" y="485" width="0.1" height="15.0" fill="rgb(241,119,4)" rx="2" ry="2" />
<text  x="651.48" y="495.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (93 samples, 0.20%)</title><rect x="541.8" y="357" width="2.3" height="15.0" fill="rgb(238,166,10)" rx="2" ry="2" />
<text  x="544.80" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (21 samples, 0.04%)</title><rect x="130.9" y="229" width="0.6" height="15.0" fill="rgb(218,0,38)" rx="2" ry="2" />
<text  x="133.93" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (19 samples, 0.04%)</title><rect x="310.6" y="181" width="0.5" height="15.0" fill="rgb(211,91,51)" rx="2" ry="2" />
<text  x="313.57" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (69 samples, 0.15%)</title><rect x="943.2" y="389" width="1.8" height="15.0" fill="rgb(237,20,21)" rx="2" ry="2" />
<text  x="946.23" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (13 samples, 0.03%)</title><rect x="666.0" y="469" width="0.3" height="15.0" fill="rgb(218,107,38)" rx="2" ry="2" />
<text  x="668.98" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="575.0" y="357" width="0.2" height="15.0" fill="rgb(222,147,15)" rx="2" ry="2" />
<text  x="578.03" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1051.3" y="245" width="0.1" height="15.0" fill="rgb(238,75,28)" rx="2" ry="2" />
<text  x="1054.29" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (53 samples, 0.11%)</title><rect x="752.6" y="341" width="1.4" height="15.0" fill="rgb(209,165,36)" rx="2" ry="2" />
<text  x="755.63" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="69.3" y="389" width="0.2" height="15.0" fill="rgb(227,105,31)" rx="2" ry="2" />
<text  x="72.34" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="590.8" y="357" width="0.7" height="15.0" fill="rgb(244,190,23)" rx="2" ry="2" />
<text  x="593.84" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.06%)</title><rect x="709.2" y="389" width="0.6" height="15.0" fill="rgb(252,14,21)" rx="2" ry="2" />
<text  x="712.18" y="399.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (180 samples, 0.38%)</title><rect x="350.3" y="165" width="4.5" height="15.0" fill="rgb(209,120,17)" rx="2" ry="2" />
<text  x="353.27" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="447.0" y="261" width="0.3" height="15.0" fill="rgb(233,210,30)" rx="2" ry="2" />
<text  x="449.99" y="271.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (30 samples, 0.06%)</title><rect x="675.2" y="373" width="0.7" height="15.0" fill="rgb(252,165,46)" rx="2" ry="2" />
<text  x="678.17" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (14 samples, 0.03%)</title><rect x="691.6" y="453" width="0.4" height="15.0" fill="rgb(233,213,7)" rx="2" ry="2" />
<text  x="694.65" y="463.5" ></text>
</g>
<g >
<title>db::commitlog::segment::allocate (4 samples, 0.01%)</title><rect x="1140.7" y="277" width="0.1" height="15.0" fill="rgb(251,124,31)" rx="2" ry="2" />
<text  x="1143.71" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (51 samples, 0.11%)</title><rect x="615.4" y="405" width="1.3" height="15.0" fill="rgb(205,25,51)" rx="2" ry="2" />
<text  x="618.43" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (560 samples, 1.20%)</title><rect x="1151.9" y="485" width="14.1" height="15.0" fill="rgb(214,100,36)" rx="2" ry="2" />
<text  x="1154.86" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (588 samples, 1.26%)</title><rect x="780.9" y="229" width="14.8" height="15.0" fill="rgb(208,13,38)" rx="2" ry="2" />
<text  x="783.92" y="239.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="615.6" y="389" width="0.7" height="15.0" fill="rgb(241,72,29)" rx="2" ry="2" />
<text  x="618.60" y="399.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (49 samples, 0.10%)</title><rect x="93.5" y="405" width="1.3" height="15.0" fill="rgb(212,139,37)" rx="2" ry="2" />
<text  x="96.55" y="415.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%)</title><rect x="718.4" y="309" width="0.2" height="15.0" fill="rgb(254,141,43)" rx="2" ry="2" />
<text  x="721.45" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (113 samples, 0.24%)</title><rect x="200.0" y="117" width="2.8" height="15.0" fill="rgb(234,116,19)" rx="2" ry="2" />
<text  x="202.97" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="795.6" y="197" width="0.1" height="15.0" fill="rgb(226,173,28)" rx="2" ry="2" />
<text  x="798.60" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (33 samples, 0.07%)</title><rect x="759.3" y="357" width="0.8" height="15.0" fill="rgb(240,22,54)" rx="2" ry="2" />
<text  x="762.30" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (83 samples, 0.18%)</title><rect x="553.8" y="309" width="2.1" height="15.0" fill="rgb(206,115,22)" rx="2" ry="2" />
<text  x="556.82" y="319.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (8 samples, 0.02%)</title><rect x="699.6" y="405" width="0.2" height="15.0" fill="rgb(251,192,16)" rx="2" ry="2" />
<text  x="702.61" y="415.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="836.3" y="405" width="1.0" height="15.0" fill="rgb(207,214,25)" rx="2" ry="2" />
<text  x="839.33" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (4 samples, 0.01%)</title><rect x="19.8" y="309" width="0.1" height="15.0" fill="rgb(227,137,0)" rx="2" ry="2" />
<text  x="22.77" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="956.7" y="389" width="0.1" height="15.0" fill="rgb(223,115,35)" rx="2" ry="2" />
<text  x="959.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%)</title><rect x="1127.2" y="389" width="1.6" height="15.0" fill="rgb(250,165,25)" rx="2" ry="2" />
<text  x="1130.18" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1048.4" y="229" width="0.2" height="15.0" fill="rgb(220,165,27)" rx="2" ry="2" />
<text  x="1051.44" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (381 samples, 0.81%)</title><rect x="392.6" y="261" width="9.6" height="15.0" fill="rgb(254,14,14)" rx="2" ry="2" />
<text  x="395.64" y="271.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (4 samples, 0.01%)</title><rect x="427.5" y="341" width="0.1" height="15.0" fill="rgb(231,91,23)" rx="2" ry="2" />
<text  x="430.50" y="351.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (204 samples, 0.44%)</title><rect x="269.4" y="309" width="5.2" height="15.0" fill="rgb(245,22,2)" rx="2" ry="2" />
<text  x="272.44" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="609.0" y="357" width="0.1" height="15.0" fill="rgb(245,120,13)" rx="2" ry="2" />
<text  x="611.95" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="751.9" y="309" width="0.3" height="15.0" fill="rgb(252,99,38)" rx="2" ry="2" />
<text  x="754.95" y="319.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (59 samples, 0.13%)</title><rect x="851.2" y="453" width="1.5" height="15.0" fill="rgb(242,218,24)" rx="2" ry="2" />
<text  x="854.22" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="284.5" y="277" width="0.7" height="15.0" fill="rgb(226,62,10)" rx="2" ry="2" />
<text  x="287.45" y="287.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (32 samples, 0.07%)</title><rect x="740.4" y="405" width="0.8" height="15.0" fill="rgb(249,170,44)" rx="2" ry="2" />
<text  x="743.44" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (21 samples, 0.04%)</title><rect x="1122.2" y="389" width="0.5" height="15.0" fill="rgb(221,114,22)" rx="2" ry="2" />
<text  x="1125.22" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (79 samples, 0.17%)</title><rect x="809.7" y="389" width="2.0" height="15.0" fill="rgb(233,4,2)" rx="2" ry="2" />
<text  x="812.68" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (7 samples, 0.01%)</title><rect x="871.0" y="421" width="0.2" height="15.0" fill="rgb(245,1,42)" rx="2" ry="2" />
<text  x="874.04" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (214 samples, 0.46%)</title><rect x="1126.8" y="421" width="5.4" height="15.0" fill="rgb(251,203,26)" rx="2" ry="2" />
<text  x="1129.80" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (103 samples, 0.22%)</title><rect x="707.6" y="453" width="2.6" height="15.0" fill="rgb(249,39,36)" rx="2" ry="2" />
<text  x="710.59" y="463.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="484.7" y="309" width="0.3" height="15.0" fill="rgb(246,222,16)" rx="2" ry="2" />
<text  x="487.73" y="319.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (38 samples, 0.08%)</title><rect x="675.0" y="469" width="1.0" height="15.0" fill="rgb(245,142,50)" rx="2" ry="2" />
<text  x="678.05" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (90 samples, 0.19%)</title><rect x="806.9" y="325" width="2.3" height="15.0" fill="rgb(209,36,7)" rx="2" ry="2" />
<text  x="809.94" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (28 samples, 0.06%)</title><rect x="951.2" y="373" width="0.7" height="15.0" fill="rgb(230,30,5)" rx="2" ry="2" />
<text  x="954.16" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::stats (22 samples, 0.05%)</title><rect x="525.1" y="293" width="0.5" height="15.0" fill="rgb(213,194,4)" rx="2" ry="2" />
<text  x="528.05" y="303.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (4 samples, 0.01%)</title><rect x="190.7" y="101" width="0.1" height="15.0" fill="rgb(254,24,0)" rx="2" ry="2" />
<text  x="193.68" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="820.0" y="341" width="0.1" height="15.0" fill="rgb(211,80,46)" rx="2" ry="2" />
<text  x="822.98" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (7 samples, 0.01%)</title><rect x="314.2" y="197" width="0.2" height="15.0" fill="rgb(226,218,22)" rx="2" ry="2" />
<text  x="317.20" y="207.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (7 samples, 0.01%)</title><rect x="793.5" y="117" width="0.2" height="15.0" fill="rgb(212,87,50)" rx="2" ry="2" />
<text  x="796.53" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="130.2" y="213" width="0.3" height="15.0" fill="rgb(208,76,13)" rx="2" ry="2" />
<text  x="133.17" y="223.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="883.2" y="293" width="0.2" height="15.0" fill="rgb(211,67,16)" rx="2" ry="2" />
<text  x="886.16" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (136 samples, 0.29%)</title><rect x="147.5" y="229" width="3.4" height="15.0" fill="rgb(223,179,53)" rx="2" ry="2" />
<text  x="150.45" y="239.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (12 samples, 0.03%)</title><rect x="209.7" y="133" width="0.3" height="15.0" fill="rgb(233,71,21)" rx="2" ry="2" />
<text  x="212.69" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (4 samples, 0.01%)</title><rect x="264.7" y="341" width="0.1" height="15.0" fill="rgb(214,229,27)" rx="2" ry="2" />
<text  x="267.68" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (4 samples, 0.01%)</title><rect x="616.8" y="421" width="0.1" height="15.0" fill="rgb(215,80,52)" rx="2" ry="2" />
<text  x="619.81" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (40 samples, 0.09%)</title><rect x="17.2" y="277" width="1.0" height="15.0" fill="rgb(234,163,48)" rx="2" ry="2" />
<text  x="20.23" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (28 samples, 0.06%)</title><rect x="385.2" y="181" width="0.7" height="15.0" fill="rgb(206,106,53)" rx="2" ry="2" />
<text  x="388.23" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (22,769 samples, 48.60%)</title><rect x="47.8" y="501" width="573.5" height="15.0" fill="rgb(212,39,30)" rx="2" ry="2" />
<text  x="50.76" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (4 samples, 0.01%)</title><rect x="1176.6" y="501" width="0.1" height="15.0" fill="rgb(247,205,40)" rx="2" ry="2" />
<text  x="1179.57" y="511.5" ></text>
</g>
<g >
<title>fmt::v7::detail::buffer&lt;char&gt;::push_back (5 samples, 0.01%)</title><rect x="16.2" y="469" width="0.2" height="15.0" fill="rgb(230,42,34)" rx="2" ry="2" />
<text  x="19.25" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (30 samples, 0.06%)</title><rect x="1125.4" y="421" width="0.7" height="15.0" fill="rgb(230,113,51)" rx="2" ry="2" />
<text  x="1128.39" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (451 samples, 0.96%)</title><rect x="634.4" y="485" width="11.4" height="15.0" fill="rgb(239,43,0)" rx="2" ry="2" />
<text  x="637.39" y="495.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (122 samples, 0.26%)</title><rect x="525.8" y="309" width="3.0" height="15.0" fill="rgb(219,201,19)" rx="2" ry="2" />
<text  x="528.76" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.01%)</title><rect x="187.1" y="85" width="0.1" height="15.0" fill="rgb(228,115,51)" rx="2" ry="2" />
<text  x="190.12" y="95.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (42 samples, 0.09%)</title><rect x="196.4" y="149" width="1.1" height="15.0" fill="rgb(241,227,5)" rx="2" ry="2" />
<text  x="199.44" y="159.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="637.7" y="437" width="0.1" height="15.0" fill="rgb(242,163,46)" rx="2" ry="2" />
<text  x="640.69" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (59 samples, 0.13%)</title><rect x="989.4" y="277" width="1.5" height="15.0" fill="rgb(226,127,50)" rx="2" ry="2" />
<text  x="992.40" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="658.4" y="485" width="0.3" height="15.0" fill="rgb(224,229,11)" rx="2" ry="2" />
<text  x="661.42" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="284.4" y="293" width="0.8" height="15.0" fill="rgb(229,229,2)" rx="2" ry="2" />
<text  x="287.40" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (6 samples, 0.01%)</title><rect x="679.1" y="469" width="0.1" height="15.0" fill="rgb(240,133,20)" rx="2" ry="2" />
<text  x="682.08" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (11 samples, 0.02%)</title><rect x="399.4" y="197" width="0.2" height="15.0" fill="rgb(221,162,51)" rx="2" ry="2" />
<text  x="402.36" y="207.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,364 samples, 2.91%)</title><rect x="161.9" y="165" width="34.4" height="15.0" fill="rgb(237,129,46)" rx="2" ry="2" />
<text  x="164.94" y="175.5" >cl..</text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (4 samples, 0.01%)</title><rect x="240.0" y="229" width="0.1" height="15.0" fill="rgb(205,90,9)" rx="2" ry="2" />
<text  x="243.02" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="1095.6" y="277" width="0.3" height="15.0" fill="rgb(250,94,15)" rx="2" ry="2" />
<text  x="1098.57" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (76 samples, 0.16%)</title><rect x="1097.8" y="325" width="1.9" height="15.0" fill="rgb(206,200,48)" rx="2" ry="2" />
<text  x="1100.76" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (25 samples, 0.05%)</title><rect x="1062.1" y="293" width="0.7" height="15.0" fill="rgb(230,157,48)" rx="2" ry="2" />
<text  x="1065.14" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="92.5" y="373" width="1.0" height="15.0" fill="rgb(217,78,31)" rx="2" ry="2" />
<text  x="95.54" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="417.4" y="405" width="0.2" height="15.0" fill="rgb(218,152,38)" rx="2" ry="2" />
<text  x="420.37" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="413.0" y="341" width="0.1" height="15.0" fill="rgb(218,136,21)" rx="2" ry="2" />
<text  x="415.99" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%)</title><rect x="17.0" y="261" width="0.1" height="15.0" fill="rgb(214,189,26)" rx="2" ry="2" />
<text  x="20.03" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="756.6" y="357" width="0.6" height="15.0" fill="rgb(238,107,40)" rx="2" ry="2" />
<text  x="759.56" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="407.3" y="277" width="0.2" height="15.0" fill="rgb(236,215,16)" rx="2" ry="2" />
<text  x="410.32" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (33 samples, 0.07%)</title><rect x="770.6" y="277" width="0.8" height="15.0" fill="rgb(219,21,17)" rx="2" ry="2" />
<text  x="773.59" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (16 samples, 0.03%)</title><rect x="504.6" y="197" width="0.4" height="15.0" fill="rgb(209,78,11)" rx="2" ry="2" />
<text  x="507.57" y="207.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (264 samples, 0.56%)</title><rect x="16.4" y="501" width="6.6" height="15.0" fill="rgb(232,102,42)" rx="2" ry="2" />
<text  x="19.40" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (12 samples, 0.03%)</title><rect x="157.2" y="197" width="0.3" height="15.0" fill="rgb(208,189,12)" rx="2" ry="2" />
<text  x="160.23" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (4 samples, 0.01%)</title><rect x="639.4" y="453" width="0.1" height="15.0" fill="rgb(216,27,19)" rx="2" ry="2" />
<text  x="642.36" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (4 samples, 0.01%)</title><rect x="897.9" y="277" width="0.1" height="15.0" fill="rgb(237,8,21)" rx="2" ry="2" />
<text  x="900.92" y="287.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (10 samples, 0.02%)</title><rect x="922.7" y="389" width="0.2" height="15.0" fill="rgb(213,4,25)" rx="2" ry="2" />
<text  x="925.68" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (7 samples, 0.01%)</title><rect x="68.9" y="405" width="0.2" height="15.0" fill="rgb(228,201,4)" rx="2" ry="2" />
<text  x="71.94" y="415.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="776.6" y="245" width="0.6" height="15.0" fill="rgb(237,38,12)" rx="2" ry="2" />
<text  x="779.58" y="255.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (58 samples, 0.12%)</title><rect x="593.4" y="421" width="1.4" height="15.0" fill="rgb(215,176,48)" rx="2" ry="2" />
<text  x="596.36" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (114 samples, 0.24%)</title><rect x="792.2" y="149" width="2.8" height="15.0" fill="rgb(208,174,53)" rx="2" ry="2" />
<text  x="795.17" y="159.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (9 samples, 0.02%)</title><rect x="1120.3" y="405" width="0.2" height="15.0" fill="rgb(250,193,25)" rx="2" ry="2" />
<text  x="1123.30" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute (4 samples, 0.01%)</title><rect x="16.4" y="453" width="0.1" height="15.0" fill="rgb(221,71,4)" rx="2" ry="2" />
<text  x="19.42" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="45.7" y="485" width="0.1" height="15.0" fill="rgb(212,197,50)" rx="2" ry="2" />
<text  x="48.67" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="648.9" y="485" width="0.7" height="15.0" fill="rgb(209,226,53)" rx="2" ry="2" />
<text  x="651.90" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (10 samples, 0.02%)</title><rect x="269.2" y="293" width="0.2" height="15.0" fill="rgb(228,1,16)" rx="2" ry="2" />
<text  x="272.19" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (17 samples, 0.04%)</title><rect x="298.4" y="213" width="0.4" height="15.0" fill="rgb(227,199,32)" rx="2" ry="2" />
<text  x="301.38" y="223.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="469" width="1.0" height="15.0" fill="rgb(221,8,32)" rx="2" ry="2" />
<text  x="1143.98" y="479.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (11 samples, 0.02%)</title><rect x="23.3" y="581" width="0.3" height="15.0" fill="rgb(251,32,17)" rx="2" ry="2" />
<text  x="26.27" y="591.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.06%)</title><rect x="857.2" y="453" width="0.7" height="15.0" fill="rgb(214,44,42)" rx="2" ry="2" />
<text  x="860.16" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (2,955 samples, 6.31%)</title><rect x="746.1" y="421" width="74.5" height="15.0" fill="rgb(222,100,45)" rx="2" ry="2" />
<text  x="749.13" y="431.5" >cql3::st..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,506 samples, 7.48%)</title><rect x="138.6" y="261" width="88.3" height="15.0" fill="rgb(250,91,32)" rx="2" ry="2" />
<text  x="141.56" y="271.5" >partition_..</text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (29 samples, 0.06%)</title><rect x="1140.2" y="405" width="0.8" height="15.0" fill="rgb(244,12,22)" rx="2" ry="2" />
<text  x="1143.23" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (113 samples, 0.24%)</title><rect x="718.2" y="341" width="2.9" height="15.0" fill="rgb(229,207,54)" rx="2" ry="2" />
<text  x="721.22" y="351.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (39 samples, 0.08%)</title><rect x="1163.5" y="453" width="1.0" height="15.0" fill="rgb(208,6,42)" rx="2" ry="2" />
<text  x="1166.48" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="662.9" y="453" width="0.4" height="15.0" fill="rgb(235,201,8)" rx="2" ry="2" />
<text  x="665.91" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (50 samples, 0.11%)</title><rect x="729.6" y="325" width="1.3" height="15.0" fill="rgb(238,23,29)" rx="2" ry="2" />
<text  x="732.61" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (5 samples, 0.01%)</title><rect x="857.3" y="357" width="0.1" height="15.0" fill="rgb(236,156,0)" rx="2" ry="2" />
<text  x="860.29" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%)</title><rect x="527.5" y="245" width="0.1" height="15.0" fill="rgb(248,202,21)" rx="2" ry="2" />
<text  x="530.52" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%)</title><rect x="703.8" y="501" width="0.1" height="15.0" fill="rgb(238,135,22)" rx="2" ry="2" />
<text  x="706.76" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (5 samples, 0.01%)</title><rect x="18.6" y="325" width="0.1" height="15.0" fill="rgb(252,69,8)" rx="2" ry="2" />
<text  x="21.61" y="335.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (12 samples, 0.03%)</title><rect x="350.0" y="165" width="0.3" height="15.0" fill="rgb(247,171,1)" rx="2" ry="2" />
<text  x="352.97" y="175.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="407.1" y="293" width="0.4" height="15.0" fill="rgb(205,110,21)" rx="2" ry="2" />
<text  x="410.07" y="303.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="651.3" y="469" width="0.3" height="15.0" fill="rgb(254,162,14)" rx="2" ry="2" />
<text  x="654.32" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (37 samples, 0.08%)</title><rect x="1138.0" y="421" width="0.9" height="15.0" fill="rgb(246,4,49)" rx="2" ry="2" />
<text  x="1140.99" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (84 samples, 0.18%)</title><rect x="729.0" y="373" width="2.1" height="15.0" fill="rgb(233,150,16)" rx="2" ry="2" />
<text  x="732.03" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (33 samples, 0.07%)</title><rect x="507.7" y="229" width="0.8" height="15.0" fill="rgb(253,13,12)" rx="2" ry="2" />
<text  x="510.70" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="795.4" y="197" width="0.2" height="15.0" fill="rgb(225,152,40)" rx="2" ry="2" />
<text  x="798.45" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%)</title><rect x="579.2" y="421" width="0.1" height="15.0" fill="rgb(213,67,49)" rx="2" ry="2" />
<text  x="582.21" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (4 samples, 0.01%)</title><rect x="1100.0" y="341" width="0.1" height="15.0" fill="rgb(237,20,23)" rx="2" ry="2" />
<text  x="1103.00" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (11 samples, 0.02%)</title><rect x="592.6" y="437" width="0.3" height="15.0" fill="rgb(214,118,7)" rx="2" ry="2" />
<text  x="595.63" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1033.6" y="197" width="0.2" height="15.0" fill="rgb(227,214,45)" rx="2" ry="2" />
<text  x="1036.63" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (254 samples, 0.54%)</title><rect x="621.4" y="501" width="6.4" height="15.0" fill="rgb(247,197,7)" rx="2" ry="2" />
<text  x="624.40" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="313.9" y="197" width="0.2" height="15.0" fill="rgb(225,21,25)" rx="2" ry="2" />
<text  x="316.92" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (20 samples, 0.04%)</title><rect x="437.4" y="261" width="0.5" height="15.0" fill="rgb(207,214,12)" rx="2" ry="2" />
<text  x="440.40" y="271.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="1117.2" y="373" width="0.1" height="15.0" fill="rgb(230,102,52)" rx="2" ry="2" />
<text  x="1120.21" y="383.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (451 samples, 0.96%)</title><rect x="470.8" y="277" width="11.4" height="15.0" fill="rgb(231,19,37)" rx="2" ry="2" />
<text  x="473.85" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (8 samples, 0.02%)</title><rect x="1141.1" y="293" width="0.2" height="15.0" fill="rgb(221,142,12)" rx="2" ry="2" />
<text  x="1144.08" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (24 samples, 0.05%)</title><rect x="129.8" y="229" width="0.7" height="15.0" fill="rgb(225,70,19)" rx="2" ry="2" />
<text  x="132.85" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (49 samples, 0.10%)</title><rect x="524.4" y="309" width="1.2" height="15.0" fill="rgb(231,96,38)" rx="2" ry="2" />
<text  x="527.37" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="914.5" y="357" width="0.1" height="15.0" fill="rgb(234,76,11)" rx="2" ry="2" />
<text  x="917.51" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (672 samples, 1.43%)</title><rect x="1023.7" y="245" width="17.0" height="15.0" fill="rgb(232,182,35)" rx="2" ry="2" />
<text  x="1026.73" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (105 samples, 0.22%)</title><rect x="187.4" y="117" width="2.6" height="15.0" fill="rgb(209,140,0)" rx="2" ry="2" />
<text  x="190.40" y="127.5" ></text>
</g>
<g >
<title>seastar::schedule (8 samples, 0.02%)</title><rect x="1143.3" y="501" width="0.2" height="15.0" fill="rgb(234,197,10)" rx="2" ry="2" />
<text  x="1146.30" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="555.7" y="261" width="0.2" height="15.0" fill="rgb(254,202,17)" rx="2" ry="2" />
<text  x="558.73" y="271.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="743.8" y="341" width="0.1" height="15.0" fill="rgb(253,225,13)" rx="2" ry="2" />
<text  x="746.79" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="881.6" y="309" width="0.2" height="15.0" fill="rgb(214,213,42)" rx="2" ry="2" />
<text  x="884.57" y="319.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (113 samples, 0.24%)</title><rect x="378.4" y="149" width="2.9" height="15.0" fill="rgb(244,78,2)" rx="2" ry="2" />
<text  x="381.43" y="159.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,235 samples, 2.64%)</title><rect x="547.5" y="437" width="31.1" height="15.0" fill="rgb(231,185,42)" rx="2" ry="2" />
<text  x="550.49" y="447.5" >qu..</text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="638.9" y="389" width="0.1" height="15.0" fill="rgb(205,38,50)" rx="2" ry="2" />
<text  x="641.85" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (34 samples, 0.07%)</title><rect x="791.3" y="133" width="0.8" height="15.0" fill="rgb(222,228,26)" rx="2" ry="2" />
<text  x="794.29" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1131.7" y="373" width="0.2" height="15.0" fill="rgb(239,36,22)" rx="2" ry="2" />
<text  x="1134.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="146.0" y="165" width="0.6" height="15.0" fill="rgb(251,131,51)" rx="2" ry="2" />
<text  x="148.99" y="175.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="213.9" y="213" width="0.2" height="15.0" fill="rgb(212,42,4)" rx="2" ry="2" />
<text  x="216.90" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (6 samples, 0.01%)</title><rect x="252.7" y="293" width="0.1" height="15.0" fill="rgb(222,3,34)" rx="2" ry="2" />
<text  x="255.69" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="531.9" y="341" width="0.1" height="15.0" fill="rgb(220,181,49)" rx="2" ry="2" />
<text  x="534.85" y="351.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="885.1" y="261" width="0.5" height="15.0" fill="rgb(228,44,9)" rx="2" ry="2" />
<text  x="888.07" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%)</title><rect x="688.7" y="469" width="0.4" height="15.0" fill="rgb(208,49,19)" rx="2" ry="2" />
<text  x="691.65" y="479.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,492 samples, 9.59%)</title><rect x="419.0" y="405" width="113.2" height="15.0" fill="rgb(212,99,47)" rx="2" ry="2" />
<text  x="422.01" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>db::is_serial_consistency (4 samples, 0.01%)</title><rect x="1139.5" y="437" width="0.1" height="15.0" fill="rgb(233,165,28)" rx="2" ry="2" />
<text  x="1142.55" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (11 samples, 0.02%)</title><rect x="1035.4" y="213" width="0.3" height="15.0" fill="rgb(213,5,6)" rx="2" ry="2" />
<text  x="1038.39" y="223.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="937.7" y="373" width="0.8" height="15.0" fill="rgb(225,96,7)" rx="2" ry="2" />
<text  x="940.66" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (171 samples, 0.37%)</title><rect x="463.7" y="261" width="4.3" height="15.0" fill="rgb(248,66,3)" rx="2" ry="2" />
<text  x="466.67" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (11 samples, 0.02%)</title><rect x="1079.5" y="341" width="0.3" height="15.0" fill="rgb(215,76,22)" rx="2" ry="2" />
<text  x="1082.55" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (10 samples, 0.02%)</title><rect x="480.7" y="181" width="0.3" height="15.0" fill="rgb(210,164,23)" rx="2" ry="2" />
<text  x="483.75" y="191.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (5 samples, 0.01%)</title><rect x="892.4" y="277" width="0.1" height="15.0" fill="rgb(219,160,22)" rx="2" ry="2" />
<text  x="895.37" y="287.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (13 samples, 0.03%)</title><rect x="303.9" y="165" width="0.3" height="15.0" fill="rgb(243,148,49)" rx="2" ry="2" />
<text  x="306.87" y="175.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (26 samples, 0.06%)</title><rect x="146.8" y="213" width="0.7" height="15.0" fill="rgb(247,23,12)" rx="2" ry="2" />
<text  x="149.80" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (206 samples, 0.44%)</title><rect x="1169.5" y="469" width="5.2" height="15.0" fill="rgb(244,17,37)" rx="2" ry="2" />
<text  x="1172.50" y="479.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (4 samples, 0.01%)</title><rect x="441.6" y="293" width="0.1" height="15.0" fill="rgb(231,156,28)" rx="2" ry="2" />
<text  x="444.58" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (4 samples, 0.01%)</title><rect x="976.9" y="357" width="0.1" height="15.0" fill="rgb(244,150,32)" rx="2" ry="2" />
<text  x="979.88" y="367.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1045.9" y="261" width="0.1" height="15.0" fill="rgb(222,167,20)" rx="2" ry="2" />
<text  x="1048.90" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (20 samples, 0.04%)</title><rect x="567.4" y="357" width="0.5" height="15.0" fill="rgb(209,217,21)" rx="2" ry="2" />
<text  x="570.44" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (13 samples, 0.03%)</title><rect x="1143.0" y="501" width="0.3" height="15.0" fill="rgb(210,198,23)" rx="2" ry="2" />
<text  x="1145.97" y="511.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (7 samples, 0.01%)</title><rect x="836.1" y="421" width="0.1" height="15.0" fill="rgb(220,34,21)" rx="2" ry="2" />
<text  x="839.05" y="431.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (9 samples, 0.02%)</title><rect x="570.6" y="341" width="0.3" height="15.0" fill="rgb(211,4,19)" rx="2" ry="2" />
<text  x="573.64" y="351.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (213 samples, 0.45%)</title><rect x="16.6" y="437" width="5.4" height="15.0" fill="rgb(249,38,36)" rx="2" ry="2" />
<text  x="19.62" y="447.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (10 samples, 0.02%)</title><rect x="16.1" y="517" width="0.3" height="15.0" fill="rgb(240,14,28)" rx="2" ry="2" />
<text  x="19.12" y="527.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="513.5" y="293" width="0.1" height="15.0" fill="rgb(216,114,31)" rx="2" ry="2" />
<text  x="516.49" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="23.3" y="389" width="0.1" height="15.0" fill="rgb(242,86,12)" rx="2" ry="2" />
<text  x="26.32" y="399.5" ></text>
</g>
<g >
<title>query::result::result (28 samples, 0.06%)</title><rect x="586.1" y="421" width="0.7" height="15.0" fill="rgb(228,120,11)" rx="2" ry="2" />
<text  x="589.08" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,480 samples, 13.83%)</title><rect x="946.3" y="421" width="163.2" height="15.0" fill="rgb(213,152,37)" rx="2" ry="2" />
<text  x="949.25" y="431.5" >cql3::statements::sel..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="447.3" y="261" width="0.5" height="15.0" fill="rgb(214,149,11)" rx="2" ry="2" />
<text  x="450.35" y="271.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (79 samples, 0.17%)</title><rect x="789.0" y="149" width="1.9" height="15.0" fill="rgb(233,109,15)" rx="2" ry="2" />
<text  x="791.95" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (10 samples, 0.02%)</title><rect x="1115.4" y="373" width="0.2" height="15.0" fill="rgb(221,224,0)" rx="2" ry="2" />
<text  x="1118.37" y="383.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%)</title><rect x="751.7" y="293" width="0.1" height="15.0" fill="rgb(246,110,13)" rx="2" ry="2" />
<text  x="754.75" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (43 samples, 0.09%)</title><rect x="17.2" y="309" width="1.1" height="15.0" fill="rgb(253,81,18)" rx="2" ry="2" />
<text  x="20.18" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1095.4" y="277" width="0.2" height="15.0" fill="rgb(229,184,54)" rx="2" ry="2" />
<text  x="1098.42" y="287.5" ></text>
</g>
<g >
<title>ser::serializer&lt;partition_key&gt;::write&lt;bytes_ostream&gt; (4 samples, 0.01%)</title><rect x="1141.5" y="165" width="0.1" height="15.0" fill="rgb(226,211,23)" rx="2" ry="2" />
<text  x="1144.54" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="783.3" y="133" width="0.4" height="15.0" fill="rgb(254,211,49)" rx="2" ry="2" />
<text  x="786.31" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (173 samples, 0.37%)</title><rect x="1062.9" y="325" width="4.3" height="15.0" fill="rgb(209,195,50)" rx="2" ry="2" />
<text  x="1065.87" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="674.6" y="485" width="0.1" height="15.0" fill="rgb(211,223,29)" rx="2" ry="2" />
<text  x="677.62" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%)</title><rect x="554.8" y="277" width="0.2" height="15.0" fill="rgb(233,7,32)" rx="2" ry="2" />
<text  x="557.80" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="253.4" y="309" width="0.2" height="15.0" fill="rgb(213,3,6)" rx="2" ry="2" />
<text  x="256.40" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (4 samples, 0.01%)</title><rect x="237.8" y="213" width="0.1" height="15.0" fill="rgb(232,222,10)" rx="2" ry="2" />
<text  x="240.78" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="768.7" y="261" width="0.2" height="15.0" fill="rgb(246,164,16)" rx="2" ry="2" />
<text  x="771.75" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="476.6" y="181" width="0.3" height="15.0" fill="rgb(221,21,42)" rx="2" ry="2" />
<text  x="479.59" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (360 samples, 0.77%)</title><rect x="393.1" y="245" width="9.1" height="15.0" fill="rgb(248,146,13)" rx="2" ry="2" />
<text  x="396.12" y="255.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (91 samples, 0.19%)</title><rect x="756.4" y="389" width="2.3" height="15.0" fill="rgb(212,33,6)" rx="2" ry="2" />
<text  x="759.41" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (24 samples, 0.05%)</title><rect x="1051.8" y="229" width="0.6" height="15.0" fill="rgb(238,196,13)" rx="2" ry="2" />
<text  x="1054.79" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.01%)</title><rect x="846.2" y="421" width="0.1" height="15.0" fill="rgb(235,20,12)" rx="2" ry="2" />
<text  x="849.20" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (6 samples, 0.01%)</title><rect x="699.8" y="421" width="0.2" height="15.0" fill="rgb(237,92,36)" rx="2" ry="2" />
<text  x="702.81" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (6 samples, 0.01%)</title><rect x="25.5" y="517" width="0.2" height="15.0" fill="rgb(247,42,28)" rx="2" ry="2" />
<text  x="28.52" y="527.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (24 samples, 0.05%)</title><rect x="717.5" y="325" width="0.6" height="15.0" fill="rgb(234,59,23)" rx="2" ry="2" />
<text  x="720.54" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (4 samples, 0.01%)</title><rect x="16.4" y="485" width="0.1" height="15.0" fill="rgb(250,59,7)" rx="2" ry="2" />
<text  x="19.42" y="495.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (137 samples, 0.29%)</title><rect x="972.2" y="341" width="3.4" height="15.0" fill="rgb(244,106,51)" rx="2" ry="2" />
<text  x="975.17" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (42 samples, 0.09%)</title><rect x="785.3" y="197" width="1.1" height="15.0" fill="rgb(222,160,16)" rx="2" ry="2" />
<text  x="788.30" y="207.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,212 samples, 2.59%)</title><rect x="772.0" y="325" width="30.6" height="15.0" fill="rgb(213,94,2)" rx="2" ry="2" />
<text  x="775.05" y="335.5" >st..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (40 samples, 0.09%)</title><rect x="1141.0" y="485" width="1.0" height="15.0" fill="rgb(211,215,48)" rx="2" ry="2" />
<text  x="1143.96" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (110 samples, 0.23%)</title><rect x="37.2" y="453" width="2.8" height="15.0" fill="rgb(230,141,42)" rx="2" ry="2" />
<text  x="40.20" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (41 samples, 0.09%)</title><rect x="714.3" y="389" width="1.1" height="15.0" fill="rgb(233,212,34)" rx="2" ry="2" />
<text  x="717.32" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (11 samples, 0.02%)</title><rect x="257.3" y="341" width="0.3" height="15.0" fill="rgb(232,65,20)" rx="2" ry="2" />
<text  x="260.30" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="344.1" y="165" width="0.3" height="15.0" fill="rgb(209,204,35)" rx="2" ry="2" />
<text  x="347.15" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (15 samples, 0.03%)</title><rect x="819.4" y="293" width="0.4" height="15.0" fill="rgb(230,43,33)" rx="2" ry="2" />
<text  x="822.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="654.8" y="469" width="0.2" height="15.0" fill="rgb(207,86,2)" rx="2" ry="2" />
<text  x="657.80" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="45.5" y="485" width="0.1" height="15.0" fill="rgb(222,226,23)" rx="2" ry="2" />
<text  x="48.49" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (21 samples, 0.04%)</title><rect x="205.2" y="149" width="0.5" height="15.0" fill="rgb(215,169,5)" rx="2" ry="2" />
<text  x="208.18" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (64 samples, 0.14%)</title><rect x="435.8" y="261" width="1.6" height="15.0" fill="rgb(216,19,43)" rx="2" ry="2" />
<text  x="438.78" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (10 samples, 0.02%)</title><rect x="990.2" y="261" width="0.2" height="15.0" fill="rgb(214,211,23)" rx="2" ry="2" />
<text  x="993.18" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (25 samples, 0.05%)</title><rect x="584.4" y="389" width="0.7" height="15.0" fill="rgb(212,37,20)" rx="2" ry="2" />
<text  x="587.42" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (10 samples, 0.02%)</title><rect x="58.9" y="453" width="0.2" height="15.0" fill="rgb(250,204,31)" rx="2" ry="2" />
<text  x="61.89" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="533.3" y="389" width="0.3" height="15.0" fill="rgb(220,11,31)" rx="2" ry="2" />
<text  x="536.31" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (7 samples, 0.01%)</title><rect x="543.9" y="261" width="0.2" height="15.0" fill="rgb(224,209,47)" rx="2" ry="2" />
<text  x="546.89" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%)</title><rect x="442.8" y="293" width="0.1" height="15.0" fill="rgb(249,163,38)" rx="2" ry="2" />
<text  x="445.76" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="612.9" y="437" width="0.2" height="15.0" fill="rgb(247,80,35)" rx="2" ry="2" />
<text  x="615.88" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (41 samples, 0.09%)</title><rect x="990.9" y="277" width="1.0" height="15.0" fill="rgb(206,176,4)" rx="2" ry="2" />
<text  x="993.89" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%)</title><rect x="579.7" y="405" width="0.3" height="15.0" fill="rgb(215,128,34)" rx="2" ry="2" />
<text  x="582.74" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (85 samples, 0.18%)</title><rect x="390.4" y="229" width="2.2" height="15.0" fill="rgb(210,105,16)" rx="2" ry="2" />
<text  x="393.45" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="1103.8" y="357" width="0.2" height="15.0" fill="rgb(214,59,6)" rx="2" ry="2" />
<text  x="1106.75" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="612.2" y="389" width="0.2" height="15.0" fill="rgb(242,193,33)" rx="2" ry="2" />
<text  x="615.23" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (9 samples, 0.02%)</title><rect x="404.5" y="245" width="0.2" height="15.0" fill="rgb(221,128,35)" rx="2" ry="2" />
<text  x="407.45" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (42 samples, 0.09%)</title><rect x="832.2" y="373" width="1.0" height="15.0" fill="rgb(227,197,14)" rx="2" ry="2" />
<text  x="835.17" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (7 samples, 0.01%)</title><rect x="1056.3" y="325" width="0.2" height="15.0" fill="rgb(206,174,12)" rx="2" ry="2" />
<text  x="1059.27" y="335.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (6 samples, 0.01%)</title><rect x="486.0" y="325" width="0.2" height="15.0" fill="rgb(217,209,10)" rx="2" ry="2" />
<text  x="489.01" y="335.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (673 samples, 1.44%)</title><rect x="778.8" y="261" width="17.0" height="15.0" fill="rgb(240,126,31)" rx="2" ry="2" />
<text  x="781.80" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="1051.9" y="213" width="0.5" height="15.0" fill="rgb(218,60,2)" rx="2" ry="2" />
<text  x="1054.89" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (19 samples, 0.04%)</title><rect x="505.9" y="213" width="0.5" height="15.0" fill="rgb(248,180,31)" rx="2" ry="2" />
<text  x="508.93" y="223.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (226 samples, 0.48%)</title><rect x="1027.9" y="197" width="5.7" height="15.0" fill="rgb(243,199,52)" rx="2" ry="2" />
<text  x="1030.94" y="207.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (14 samples, 0.03%)</title><rect x="454.7" y="325" width="0.4" height="15.0" fill="rgb(220,111,24)" rx="2" ry="2" />
<text  x="457.70" y="335.5" ></text>
</g>
<g >
<title>create_partitions (283 samples, 0.60%)</title><rect x="16.1" y="533" width="7.1" height="15.0" fill="rgb(206,141,12)" rx="2" ry="2" />
<text  x="19.10" y="543.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="1141.3" y="245" width="0.6" height="15.0" fill="rgb(227,150,48)" rx="2" ry="2" />
<text  x="1144.29" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%)</title><rect x="941.1" y="405" width="0.1" height="15.0" fill="rgb(236,94,6)" rx="2" ry="2" />
<text  x="944.06" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="535.7" y="421" width="0.2" height="15.0" fill="rgb(249,177,0)" rx="2" ry="2" />
<text  x="538.71" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (53 samples, 0.11%)</title><rect x="193.8" y="117" width="1.3" height="15.0" fill="rgb(223,111,35)" rx="2" ry="2" />
<text  x="196.77" y="127.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (26 samples, 0.06%)</title><rect x="731.3" y="373" width="0.7" height="15.0" fill="rgb(225,24,31)" rx="2" ry="2" />
<text  x="734.32" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (10 samples, 0.02%)</title><rect x="638.8" y="405" width="0.2" height="15.0" fill="rgb(243,22,21)" rx="2" ry="2" />
<text  x="641.78" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (12 samples, 0.03%)</title><rect x="1109.5" y="421" width="0.3" height="15.0" fill="rgb(231,183,27)" rx="2" ry="2" />
<text  x="1112.47" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (2,007 samples, 4.28%)</title><rect x="1002.8" y="293" width="50.6" height="15.0" fill="rgb(229,99,30)" rx="2" ry="2" />
<text  x="1005.80" y="303.5" >servi..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (5 samples, 0.01%)</title><rect x="565.4" y="341" width="0.1" height="15.0" fill="rgb(242,77,27)" rx="2" ry="2" />
<text  x="568.35" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="96.6" y="421" width="0.1" height="15.0" fill="rgb(216,58,5)" rx="2" ry="2" />
<text  x="99.57" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (29 samples, 0.06%)</title><rect x="39.2" y="421" width="0.8" height="15.0" fill="rgb(240,211,6)" rx="2" ry="2" />
<text  x="42.24" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (115 samples, 0.25%)</title><rect x="879.6" y="325" width="2.9" height="15.0" fill="rgb(215,107,24)" rx="2" ry="2" />
<text  x="882.58" y="335.5" ></text>
</g>
<g >
<title>seastar::gate::enter (6 samples, 0.01%)</title><rect x="1040.5" y="181" width="0.1" height="15.0" fill="rgb(239,30,39)" rx="2" ry="2" />
<text  x="1043.48" y="191.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1141.4" y="149" width="0.1" height="15.0" fill="rgb(214,45,46)" rx="2" ry="2" />
<text  x="1144.39" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (26 samples, 0.06%)</title><rect x="580.0" y="421" width="0.7" height="15.0" fill="rgb(247,28,1)" rx="2" ry="2" />
<text  x="583.04" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%)</title><rect x="305.1" y="165" width="0.2" height="15.0" fill="rgb(218,103,22)" rx="2" ry="2" />
<text  x="308.06" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="712.4" y="453" width="0.1" height="15.0" fill="rgb(221,98,8)" rx="2" ry="2" />
<text  x="715.43" y="463.5" ></text>
</g>
<g >
<title>operator new (63 samples, 0.13%)</title><rect x="708.2" y="421" width="1.6" height="15.0" fill="rgb(244,229,6)" rx="2" ry="2" />
<text  x="711.25" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (32 samples, 0.07%)</title><rect x="1019.6" y="229" width="0.8" height="15.0" fill="rgb(234,58,7)" rx="2" ry="2" />
<text  x="1022.63" y="239.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (11 samples, 0.02%)</title><rect x="298.5" y="197" width="0.3" height="15.0" fill="rgb(247,129,24)" rx="2" ry="2" />
<text  x="301.53" y="207.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (12 samples, 0.03%)</title><rect x="509.2" y="245" width="0.3" height="15.0" fill="rgb(219,39,29)" rx="2" ry="2" />
<text  x="512.18" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (227 samples, 0.48%)</title><rect x="733.6" y="357" width="5.8" height="15.0" fill="rgb(233,134,14)" rx="2" ry="2" />
<text  x="736.64" y="367.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (67 samples, 0.14%)</title><rect x="537.8" y="373" width="1.7" height="15.0" fill="rgb(254,55,33)" rx="2" ry="2" />
<text  x="540.77" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="661.3" y="437" width="0.2" height="15.0" fill="rgb(216,116,15)" rx="2" ry="2" />
<text  x="664.32" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="629.7" y="469" width="0.1" height="15.0" fill="rgb(222,94,3)" rx="2" ry="2" />
<text  x="632.66" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%)</title><rect x="964.4" y="373" width="0.1" height="15.0" fill="rgb(247,214,4)" rx="2" ry="2" />
<text  x="967.41" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%)</title><rect x="640.7" y="437" width="0.1" height="15.0" fill="rgb(250,182,43)" rx="2" ry="2" />
<text  x="643.67" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (23 samples, 0.05%)</title><rect x="816.7" y="293" width="0.6" height="15.0" fill="rgb(231,15,25)" rx="2" ry="2" />
<text  x="819.73" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (218 samples, 0.47%)</title><rect x="89.8" y="437" width="5.5" height="15.0" fill="rgb(211,7,15)" rx="2" ry="2" />
<text  x="92.80" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="1012.6" y="277" width="0.3" height="15.0" fill="rgb(229,52,49)" rx="2" ry="2" />
<text  x="1015.65" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="642.7" y="469" width="0.2" height="15.0" fill="rgb(232,41,6)" rx="2" ry="2" />
<text  x="645.71" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (4 samples, 0.01%)</title><rect x="19.0" y="149" width="0.1" height="15.0" fill="rgb(222,92,54)" rx="2" ry="2" />
<text  x="22.04" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (11 samples, 0.02%)</title><rect x="821.7" y="389" width="0.3" height="15.0" fill="rgb(214,194,47)" rx="2" ry="2" />
<text  x="824.70" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="645.2" y="437" width="0.1" height="15.0" fill="rgb(211,12,2)" rx="2" ry="2" />
<text  x="648.20" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (46 samples, 0.10%)</title><rect x="611.7" y="421" width="1.2" height="15.0" fill="rgb(216,6,33)" rx="2" ry="2" />
<text  x="614.73" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (12 samples, 0.03%)</title><rect x="71.3" y="453" width="0.3" height="15.0" fill="rgb(223,183,9)" rx="2" ry="2" />
<text  x="74.31" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,018 samples, 2.17%)</title><rect x="775.2" y="293" width="25.7" height="15.0" fill="rgb(245,49,48)" rx="2" ry="2" />
<text  x="778.22" y="303.5" >s..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="993.5" y="325" width="0.7" height="15.0" fill="rgb(207,91,33)" rx="2" ry="2" />
<text  x="996.53" y="335.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.09%)</title><rect x="92.5" y="389" width="1.0" height="15.0" fill="rgb(237,185,30)" rx="2" ry="2" />
<text  x="95.52" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (21 samples, 0.04%)</title><rect x="628.6" y="485" width="0.5" height="15.0" fill="rgb(241,148,38)" rx="2" ry="2" />
<text  x="631.55" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.01%)</title><rect x="1104.5" y="373" width="0.2" height="15.0" fill="rgb(226,228,7)" rx="2" ry="2" />
<text  x="1107.54" y="383.5" ></text>
</g>
<g >
<title>db::validate_for_read (4 samples, 0.01%)</title><rect x="1124.0" y="421" width="0.1" height="15.0" fill="rgb(254,52,38)" rx="2" ry="2" />
<text  x="1126.98" y="431.5" ></text>
</g>
<g >
<title>row::row (18 samples, 0.04%)</title><rect x="243.8" y="197" width="0.5" height="15.0" fill="rgb(249,44,16)" rx="2" ry="2" />
<text  x="246.80" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="585.1" y="389" width="0.1" height="15.0" fill="rgb(250,23,47)" rx="2" ry="2" />
<text  x="588.05" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (17 samples, 0.04%)</title><rect x="69.7" y="373" width="0.4" height="15.0" fill="rgb(238,186,33)" rx="2" ry="2" />
<text  x="72.70" y="383.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (123 samples, 0.26%)</title><rect x="344.4" y="165" width="3.1" height="15.0" fill="rgb(222,127,34)" rx="2" ry="2" />
<text  x="347.38" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (18 samples, 0.04%)</title><rect x="406.4" y="261" width="0.4" height="15.0" fill="rgb(209,142,11)" rx="2" ry="2" />
<text  x="409.39" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (4 samples, 0.01%)</title><rect x="92.3" y="405" width="0.1" height="15.0" fill="rgb(209,195,11)" rx="2" ry="2" />
<text  x="95.32" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%)</title><rect x="799.2" y="213" width="0.3" height="15.0" fill="rgb(218,223,5)" rx="2" ry="2" />
<text  x="802.23" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (15 samples, 0.03%)</title><rect x="211.7" y="149" width="0.4" height="15.0" fill="rgb(221,47,24)" rx="2" ry="2" />
<text  x="214.71" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (9 samples, 0.02%)</title><rect x="309.7" y="181" width="0.3" height="15.0" fill="rgb(242,179,8)" rx="2" ry="2" />
<text  x="312.74" y="191.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (351 samples, 0.75%)</title><rect x="62.0" y="453" width="8.8" height="15.0" fill="rgb(233,146,1)" rx="2" ry="2" />
<text  x="64.96" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="802.0" y="277" width="0.1" height="15.0" fill="rgb(223,172,48)" rx="2" ry="2" />
<text  x="805.02" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (55 samples, 0.12%)</title><rect x="191.0" y="101" width="1.4" height="15.0" fill="rgb(238,22,25)" rx="2" ry="2" />
<text  x="194.00" y="111.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (82 samples, 0.18%)</title><rect x="590.0" y="405" width="2.1" height="15.0" fill="rgb(218,47,18)" rx="2" ry="2" />
<text  x="592.99" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (4 samples, 0.01%)</title><rect x="700.5" y="469" width="0.1" height="15.0" fill="rgb(226,43,45)" rx="2" ry="2" />
<text  x="703.49" y="479.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (12 samples, 0.03%)</title><rect x="736.7" y="277" width="0.3" height="15.0" fill="rgb(227,166,27)" rx="2" ry="2" />
<text  x="739.66" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::forward_to (4 samples, 0.01%)</title><rect x="702.4" y="501" width="0.1" height="15.0" fill="rgb(234,192,23)" rx="2" ry="2" />
<text  x="705.35" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,324 samples, 9.23%)</title><rect x="136.0" y="277" width="108.9" height="15.0" fill="rgb(207,207,25)" rx="2" ry="2" />
<text  x="138.99" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>flat_mutation_reader::close (1,212 samples, 2.59%)</title><rect x="547.9" y="405" width="30.6" height="15.0" fill="rgb(206,116,30)" rx="2" ry="2" />
<text  x="550.92" y="415.5" >fl..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="226.5" y="245" width="0.4" height="15.0" fill="rgb(225,40,42)" rx="2" ry="2" />
<text  x="229.54" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="1020.1" y="197" width="0.3" height="15.0" fill="rgb(244,194,18)" rx="2" ry="2" />
<text  x="1023.08" y="207.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="454.2" y="325" width="0.3" height="15.0" fill="rgb(234,68,1)" rx="2" ry="2" />
<text  x="457.25" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (16 samples, 0.03%)</title><rect x="443.7" y="277" width="0.4" height="15.0" fill="rgb(222,202,20)" rx="2" ry="2" />
<text  x="446.69" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="983.6" y="277" width="0.1" height="15.0" fill="rgb(205,5,51)" rx="2" ry="2" />
<text  x="986.58" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (13 samples, 0.03%)</title><rect x="437.9" y="261" width="0.3" height="15.0" fill="rgb(236,60,41)" rx="2" ry="2" />
<text  x="440.90" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (30 samples, 0.06%)</title><rect x="555.2" y="293" width="0.7" height="15.0" fill="rgb(214,140,7)" rx="2" ry="2" />
<text  x="558.15" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,166 samples, 4.62%)</title><rect x="158.9" y="197" width="54.6" height="15.0" fill="rgb(235,105,25)" rx="2" ry="2" />
<text  x="161.94" y="207.5" >parti..</text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="621.8" y="485" width="0.4" height="15.0" fill="rgb(210,46,52)" rx="2" ry="2" />
<text  x="624.80" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%)</title><rect x="116.8" y="293" width="0.1" height="15.0" fill="rgb(246,3,38)" rx="2" ry="2" />
<text  x="119.80" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="483.3" y="325" width="0.1" height="15.0" fill="rgb(251,27,18)" rx="2" ry="2" />
<text  x="486.31" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (15 samples, 0.03%)</title><rect x="794.5" y="85" width="0.4" height="15.0" fill="rgb(221,154,42)" rx="2" ry="2" />
<text  x="797.54" y="95.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="1175.4" y="373" width="0.2" height="15.0" fill="rgb(216,88,42)" rx="2" ry="2" />
<text  x="1178.44" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (20 samples, 0.04%)</title><rect x="209.5" y="149" width="0.5" height="15.0" fill="rgb(208,128,20)" rx="2" ry="2" />
<text  x="212.49" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%)</title><rect x="811.1" y="341" width="0.2" height="15.0" fill="rgb(247,83,5)" rx="2" ry="2" />
<text  x="814.07" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="881.8" y="309" width="0.1" height="15.0" fill="rgb(253,211,50)" rx="2" ry="2" />
<text  x="884.77" y="319.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (13 samples, 0.03%)</title><rect x="429.8" y="325" width="0.4" height="15.0" fill="rgb(238,153,33)" rx="2" ry="2" />
<text  x="432.84" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (11 samples, 0.02%)</title><rect x="1141.6" y="213" width="0.3" height="15.0" fill="rgb(235,120,23)" rx="2" ry="2" />
<text  x="1144.64" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="131.5" y="245" width="0.1" height="15.0" fill="rgb(242,20,50)" rx="2" ry="2" />
<text  x="134.46" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="141.3" y="245" width="0.2" height="15.0" fill="rgb(246,115,43)" rx="2" ry="2" />
<text  x="144.33" y="255.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="1097.4" y="245" width="0.2" height="15.0" fill="rgb(252,206,16)" rx="2" ry="2" />
<text  x="1100.38" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (111 samples, 0.24%)</title><rect x="736.4" y="309" width="2.8" height="15.0" fill="rgb(250,54,14)" rx="2" ry="2" />
<text  x="739.43" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (47 samples, 0.10%)</title><rect x="974.4" y="309" width="1.2" height="15.0" fill="rgb(237,220,6)" rx="2" ry="2" />
<text  x="977.44" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (30 samples, 0.06%)</title><rect x="601.0" y="437" width="0.8" height="15.0" fill="rgb(252,81,9)" rx="2" ry="2" />
<text  x="603.99" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (41 samples, 0.09%)</title><rect x="644.5" y="453" width="1.0" height="15.0" fill="rgb(215,147,28)" rx="2" ry="2" />
<text  x="647.50" y="463.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (118 samples, 0.25%)</title><rect x="707.3" y="469" width="2.9" height="15.0" fill="rgb(235,188,32)" rx="2" ry="2" />
<text  x="710.26" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (105 samples, 0.22%)</title><rect x="781.4" y="213" width="2.7" height="15.0" fill="rgb(242,159,53)" rx="2" ry="2" />
<text  x="784.44" y="223.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (3,101 samples, 6.62%)</title><rect x="978.6" y="357" width="78.1" height="15.0" fill="rgb(239,54,15)" rx="2" ry="2" />
<text  x="981.62" y="367.5" >service::..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,953 samples, 23.38%)</title><rect x="864.1" y="453" width="275.9" height="15.0" fill="rgb(247,82,22)" rx="2" ry="2" />
<text  x="867.06" y="463.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="805.3" y="357" width="0.1" height="15.0" fill="rgb(222,145,46)" rx="2" ry="2" />
<text  x="808.32" y="367.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (966 samples, 2.06%)</title><rect x="775.5" y="277" width="24.3" height="15.0" fill="rgb(215,107,54)" rx="2" ry="2" />
<text  x="778.47" y="287.5" >a..</text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="609.7" y="421" width="0.2" height="15.0" fill="rgb(220,59,48)" rx="2" ry="2" />
<text  x="612.68" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="628.9" y="469" width="0.2" height="15.0" fill="rgb(254,44,25)" rx="2" ry="2" />
<text  x="631.93" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (5 samples, 0.01%)</title><rect x="830.9" y="389" width="0.1" height="15.0" fill="rgb(222,111,37)" rx="2" ry="2" />
<text  x="833.86" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1044.8" y="261" width="0.1" height="15.0" fill="rgb(208,138,3)" rx="2" ry="2" />
<text  x="1047.76" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="880.9" y="277" width="0.6" height="15.0" fill="rgb(227,51,36)" rx="2" ry="2" />
<text  x="883.94" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (16 samples, 0.03%)</title><rect x="506.8" y="245" width="0.4" height="15.0" fill="rgb(210,121,33)" rx="2" ry="2" />
<text  x="509.84" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (22 samples, 0.05%)</title><rect x="1105.1" y="357" width="0.5" height="15.0" fill="rgb(231,85,15)" rx="2" ry="2" />
<text  x="1108.09" y="367.5" ></text>
</g>
<g >
<title>operator delete (64 samples, 0.14%)</title><rect x="557.9" y="293" width="1.6" height="15.0" fill="rgb(236,200,20)" rx="2" ry="2" />
<text  x="560.92" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (20 samples, 0.04%)</title><rect x="508.7" y="229" width="0.5" height="15.0" fill="rgb(217,92,6)" rx="2" ry="2" />
<text  x="511.68" y="239.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="1169.6" y="453" width="0.5" height="15.0" fill="rgb(226,85,15)" rx="2" ry="2" />
<text  x="1172.65" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (66 samples, 0.14%)</title><rect x="1061.1" y="325" width="1.7" height="15.0" fill="rgb(210,106,17)" rx="2" ry="2" />
<text  x="1064.11" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="1125.5" y="405" width="0.3" height="15.0" fill="rgb(213,174,0)" rx="2" ry="2" />
<text  x="1128.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (12 samples, 0.03%)</title><rect x="220.6" y="181" width="0.3" height="15.0" fill="rgb(238,199,30)" rx="2" ry="2" />
<text  x="223.63" y="191.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="213.3" y="181" width="0.1" height="15.0" fill="rgb(227,20,28)" rx="2" ry="2" />
<text  x="216.27" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="820.3" y="405" width="0.2" height="15.0" fill="rgb(236,12,42)" rx="2" ry="2" />
<text  x="823.34" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="19.0" y="229" width="0.1" height="15.0" fill="rgb(248,202,5)" rx="2" ry="2" />
<text  x="21.99" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.04%)</title><rect x="398.4" y="165" width="0.4" height="15.0" fill="rgb(231,124,4)" rx="2" ry="2" />
<text  x="401.38" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="856.8" y="485" width="0.1" height="15.0" fill="rgb(232,153,1)" rx="2" ry="2" />
<text  x="859.78" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.02%)</title><rect x="649.6" y="485" width="0.3" height="15.0" fill="rgb(222,27,29)" rx="2" ry="2" />
<text  x="652.61" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (82 samples, 0.18%)</title><rect x="230.1" y="213" width="2.1" height="15.0" fill="rgb(212,124,23)" rx="2" ry="2" />
<text  x="233.12" y="223.5" ></text>
</g>
<g >
<title>query_state::query_state (197 samples, 0.42%)</title><rect x="587.4" y="437" width="5.0" height="15.0" fill="rgb(242,216,17)" rx="2" ry="2" />
<text  x="590.42" y="447.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (116 samples, 0.25%)</title><rect x="305.4" y="181" width="2.9" height="15.0" fill="rgb(208,203,12)" rx="2" ry="2" />
<text  x="308.38" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="685.5" y="453" width="0.1" height="15.0" fill="rgb(248,122,1)" rx="2" ry="2" />
<text  x="688.45" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (4 samples, 0.01%)</title><rect x="20.0" y="293" width="0.1" height="15.0" fill="rgb(243,216,7)" rx="2" ry="2" />
<text  x="22.97" y="303.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (140 samples, 0.30%)</title><rect x="1185.3" y="613" width="3.5" height="15.0" fill="rgb(217,199,23)" rx="2" ry="2" />
<text  x="1188.26" y="623.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (45 samples, 0.10%)</title><rect x="836.2" y="421" width="1.2" height="15.0" fill="rgb(249,26,27)" rx="2" ry="2" />
<text  x="839.23" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (103 samples, 0.22%)</title><rect x="926.3" y="357" width="2.6" height="15.0" fill="rgb(235,213,44)" rx="2" ry="2" />
<text  x="929.33" y="367.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (57 samples, 0.12%)</title><rect x="17.0" y="373" width="1.4" height="15.0" fill="rgb(211,95,18)" rx="2" ry="2" />
<text  x="19.95" y="383.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="555.9" y="309" width="0.1" height="15.0" fill="rgb(241,113,11)" rx="2" ry="2" />
<text  x="558.91" y="319.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.12%)</title><rect x="773.5" y="277" width="1.4" height="15.0" fill="rgb(254,27,30)" rx="2" ry="2" />
<text  x="776.51" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="811.5" y="373" width="0.2" height="15.0" fill="rgb(224,55,15)" rx="2" ry="2" />
<text  x="814.52" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (7 samples, 0.01%)</title><rect x="134.1" y="261" width="0.2" height="15.0" fill="rgb(221,215,51)" rx="2" ry="2" />
<text  x="137.13" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%)</title><rect x="46.5" y="485" width="0.3" height="15.0" fill="rgb(238,108,28)" rx="2" ry="2" />
<text  x="49.47" y="495.5" ></text>
</g>
<g >
<title>operator delete (64 samples, 0.14%)</title><rect x="573.3" y="341" width="1.6" height="15.0" fill="rgb(245,204,28)" rx="2" ry="2" />
<text  x="576.26" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (242 samples, 0.52%)</title><rect x="215.1" y="213" width="6.1" height="15.0" fill="rgb(219,58,32)" rx="2" ry="2" />
<text  x="218.06" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (61 samples, 0.13%)</title><rect x="242.7" y="213" width="1.6" height="15.0" fill="rgb(219,5,52)" rx="2" ry="2" />
<text  x="245.72" y="223.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (4 samples, 0.01%)</title><rect x="638.2" y="405" width="0.1" height="15.0" fill="rgb(224,87,21)" rx="2" ry="2" />
<text  x="641.25" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (27 samples, 0.06%)</title><rect x="699.1" y="421" width="0.7" height="15.0" fill="rgb(241,156,2)" rx="2" ry="2" />
<text  x="702.13" y="431.5" ></text>
</g>
<g >
<title>table::query (21,497 samples, 45.89%)</title><rect x="75.9" y="453" width="541.4" height="15.0" fill="rgb(235,145,39)" rx="2" ry="2" />
<text  x="78.87" y="463.5" >table::query</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="956.8" y="389" width="0.1" height="15.0" fill="rgb(215,108,18)" rx="2" ry="2" />
<text  x="959.76" y="399.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,466 samples, 26.61%)</title><rect x="102.4" y="421" width="314.0" height="15.0" fill="rgb(240,44,6)" rx="2" ry="2" />
<text  x="105.39" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (56 samples, 0.12%)</title><rect x="1153.0" y="437" width="1.4" height="15.0" fill="rgb(240,126,33)" rx="2" ry="2" />
<text  x="1156.00" y="447.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.01%)</title><rect x="809.5" y="389" width="0.2" height="15.0" fill="rgb(232,116,53)" rx="2" ry="2" />
<text  x="812.50" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (4 samples, 0.01%)</title><rect x="676.1" y="469" width="0.1" height="15.0" fill="rgb(253,206,53)" rx="2" ry="2" />
<text  x="679.08" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (6 samples, 0.01%)</title><rect x="187.0" y="53" width="0.1" height="15.0" fill="rgb(253,80,5)" rx="2" ry="2" />
<text  x="189.97" y="63.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="802.9" y="309" width="0.6" height="15.0" fill="rgb(224,65,28)" rx="2" ry="2" />
<text  x="805.88" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (25 samples, 0.05%)</title><rect x="140.7" y="229" width="0.6" height="15.0" fill="rgb(216,198,14)" rx="2" ry="2" />
<text  x="143.70" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (9 samples, 0.02%)</title><rect x="95.1" y="405" width="0.2" height="15.0" fill="rgb(239,73,44)" rx="2" ry="2" />
<text  x="98.06" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,355 samples, 11.43%)</title><rect x="280.6" y="389" width="134.9" height="15.0" fill="rgb(220,172,5)" rx="2" ry="2" />
<text  x="283.62" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (36 samples, 0.08%)</title><rect x="623.4" y="485" width="0.9" height="15.0" fill="rgb(215,73,43)" rx="2" ry="2" />
<text  x="626.41" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%)</title><rect x="387.9" y="229" width="0.1" height="15.0" fill="rgb(250,160,33)" rx="2" ry="2" />
<text  x="390.85" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1105.6" y="357" width="0.4" height="15.0" fill="rgb(230,64,7)" rx="2" ry="2" />
<text  x="1108.64" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (4 samples, 0.01%)</title><rect x="799.7" y="245" width="0.1" height="15.0" fill="rgb(236,106,6)" rx="2" ry="2" />
<text  x="802.71" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="289.2" y="261" width="0.1" height="15.0" fill="rgb(210,11,0)" rx="2" ry="2" />
<text  x="292.16" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (72 samples, 0.15%)</title><rect x="903.3" y="357" width="1.8" height="15.0" fill="rgb(216,190,27)" rx="2" ry="2" />
<text  x="906.26" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (5 samples, 0.01%)</title><rect x="639.2" y="453" width="0.2" height="15.0" fill="rgb(235,165,51)" rx="2" ry="2" />
<text  x="642.23" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="314.1" y="197" width="0.1" height="15.0" fill="rgb(226,159,47)" rx="2" ry="2" />
<text  x="317.07" y="207.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,611 samples, 3.44%)</title><rect x="764.7" y="357" width="40.5" height="15.0" fill="rgb(253,99,46)" rx="2" ry="2" />
<text  x="767.67" y="367.5" >ser..</text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="407.9" y="277" width="0.5" height="15.0" fill="rgb(236,104,49)" rx="2" ry="2" />
<text  x="410.93" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="728.2" y="389" width="0.1" height="15.0" fill="rgb(212,203,29)" rx="2" ry="2" />
<text  x="731.22" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (9 samples, 0.02%)</title><rect x="807.7" y="309" width="0.2" height="15.0" fill="rgb(221,16,1)" rx="2" ry="2" />
<text  x="810.69" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="450.1" y="309" width="0.7" height="15.0" fill="rgb(221,13,20)" rx="2" ry="2" />
<text  x="453.09" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (228 samples, 0.49%)</title><rect x="604.2" y="437" width="5.8" height="15.0" fill="rgb(234,172,29)" rx="2" ry="2" />
<text  x="607.22" y="447.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="501.8" y="197" width="0.8" height="15.0" fill="rgb(218,208,10)" rx="2" ry="2" />
<text  x="504.83" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="1158.2" y="357" width="0.4" height="15.0" fill="rgb(208,59,21)" rx="2" ry="2" />
<text  x="1161.19" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (26 samples, 0.06%)</title><rect x="815.4" y="293" width="0.6" height="15.0" fill="rgb(227,79,4)" rx="2" ry="2" />
<text  x="818.37" y="303.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (118 samples, 0.25%)</title><rect x="1113.1" y="389" width="2.9" height="15.0" fill="rgb(254,129,42)" rx="2" ry="2" />
<text  x="1116.07" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="535.4" y="405" width="0.3" height="15.0" fill="rgb(248,145,49)" rx="2" ry="2" />
<text  x="538.40" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="984.2" y="341" width="0.3" height="15.0" fill="rgb(239,84,42)" rx="2" ry="2" />
<text  x="987.21" y="351.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (18 samples, 0.04%)</title><rect x="900.2" y="309" width="0.5" height="15.0" fill="rgb(211,193,15)" rx="2" ry="2" />
<text  x="903.23" y="319.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (536 samples, 1.14%)</title><rect x="726.0" y="405" width="13.5" height="15.0" fill="rgb(205,170,11)" rx="2" ry="2" />
<text  x="728.98" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (8 samples, 0.02%)</title><rect x="794.6" y="69" width="0.2" height="15.0" fill="rgb(232,74,41)" rx="2" ry="2" />
<text  x="797.62" y="79.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%)</title><rect x="678.4" y="469" width="0.4" height="15.0" fill="rgb(211,60,32)" rx="2" ry="2" />
<text  x="681.42" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (168 samples, 0.36%)</title><rect x="240.3" y="261" width="4.3" height="15.0" fill="rgb(217,130,43)" rx="2" ry="2" />
<text  x="243.35" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (7 samples, 0.01%)</title><rect x="140.4" y="245" width="0.2" height="15.0" fill="rgb(250,52,1)" rx="2" ry="2" />
<text  x="143.43" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%)</title><rect x="533.6" y="405" width="0.1" height="15.0" fill="rgb(247,139,17)" rx="2" ry="2" />
<text  x="536.57" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (8 samples, 0.02%)</title><rect x="254.0" y="325" width="0.2" height="15.0" fill="rgb(240,97,38)" rx="2" ry="2" />
<text  x="256.97" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (93 samples, 0.20%)</title><rect x="190.0" y="117" width="2.4" height="15.0" fill="rgb(240,42,47)" rx="2" ry="2" />
<text  x="193.05" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="410.3" y="325" width="0.2" height="15.0" fill="rgb(233,41,3)" rx="2" ry="2" />
<text  x="413.34" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,086 samples, 2.32%)</title><rect x="878.0" y="373" width="27.3" height="15.0" fill="rgb(213,136,42)" rx="2" ry="2" />
<text  x="880.97" y="383.5" >_..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (4 samples, 0.01%)</title><rect x="224.0" y="229" width="0.1" height="15.0" fill="rgb(235,102,15)" rx="2" ry="2" />
<text  x="226.95" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="846.1" y="421" width="0.1" height="15.0" fill="rgb(212,34,36)" rx="2" ry="2" />
<text  x="849.08" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (10 samples, 0.02%)</title><rect x="49.5" y="485" width="0.3" height="15.0" fill="rgb(251,118,16)" rx="2" ry="2" />
<text  x="52.52" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="487.7" y="277" width="0.8" height="15.0" fill="rgb(245,158,46)" rx="2" ry="2" />
<text  x="490.70" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (15 samples, 0.03%)</title><rect x="205.8" y="165" width="0.4" height="15.0" fill="rgb(213,50,37)" rx="2" ry="2" />
<text  x="208.81" y="175.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (44 samples, 0.09%)</title><rect x="782.6" y="149" width="1.1" height="15.0" fill="rgb(251,54,17)" rx="2" ry="2" />
<text  x="785.60" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="615.6" y="373" width="0.7" height="15.0" fill="rgb(241,206,24)" rx="2" ry="2" />
<text  x="618.63" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (4 samples, 0.01%)</title><rect x="857.7" y="309" width="0.1" height="15.0" fill="rgb(222,61,8)" rx="2" ry="2" />
<text  x="860.66" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (6 samples, 0.01%)</title><rect x="857.3" y="373" width="0.1" height="15.0" fill="rgb(229,139,12)" rx="2" ry="2" />
<text  x="860.29" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (68 samples, 0.15%)</title><rect x="729.4" y="341" width="1.7" height="15.0" fill="rgb(247,75,16)" rx="2" ry="2" />
<text  x="732.38" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (8 samples, 0.02%)</title><rect x="190.8" y="101" width="0.2" height="15.0" fill="rgb(231,159,4)" rx="2" ry="2" />
<text  x="193.78" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (609 samples, 1.30%)</title><rect x="550.0" y="341" width="15.3" height="15.0" fill="rgb(209,106,47)" rx="2" ry="2" />
<text  x="552.99" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="934.3" y="405" width="0.2" height="15.0" fill="rgb(223,171,39)" rx="2" ry="2" />
<text  x="937.29" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.01%)</title><rect x="402.4" y="261" width="0.1" height="15.0" fill="rgb(242,20,37)" rx="2" ry="2" />
<text  x="405.36" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="803.3" y="293" width="0.2" height="15.0" fill="rgb(214,220,8)" rx="2" ry="2" />
<text  x="806.33" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.03%)</title><rect x="557.0" y="293" width="0.3" height="15.0" fill="rgb(251,6,25)" rx="2" ry="2" />
<text  x="560.04" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (4 samples, 0.01%)</title><rect x="90.7" y="421" width="0.1" height="15.0" fill="rgb(230,131,22)" rx="2" ry="2" />
<text  x="93.73" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::close (6 samples, 0.01%)</title><rect x="58.4" y="453" width="0.1" height="15.0" fill="rgb(210,77,26)" rx="2" ry="2" />
<text  x="61.36" y="463.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="414.0" y="373" width="0.6" height="15.0" fill="rgb(216,147,14)" rx="2" ry="2" />
<text  x="416.97" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (132 samples, 0.28%)</title><rect x="1049.1" y="277" width="3.3" height="15.0" fill="rgb(242,20,44)" rx="2" ry="2" />
<text  x="1052.12" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (4 samples, 0.01%)</title><rect x="252.0" y="277" width="0.1" height="15.0" fill="rgb(241,128,48)" rx="2" ry="2" />
<text  x="255.01" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%)</title><rect x="839.8" y="325" width="0.2" height="15.0" fill="rgb(253,190,9)" rx="2" ry="2" />
<text  x="842.76" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="794.1" y="85" width="0.3" height="15.0" fill="rgb(237,31,0)" rx="2" ry="2" />
<text  x="797.11" y="95.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (6 samples, 0.01%)</title><rect x="1080.4" y="325" width="0.1" height="15.0" fill="rgb(221,205,15)" rx="2" ry="2" />
<text  x="1083.35" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="1141.3" y="309" width="0.6" height="15.0" fill="rgb(245,179,13)" rx="2" ry="2" />
<text  x="1144.29" y="319.5" ></text>
</g>
<g >
<title>database::query (1,055 samples, 2.25%)</title><rect x="1015.3" y="261" width="26.6" height="15.0" fill="rgb(205,126,45)" rx="2" ry="2" />
<text  x="1018.32" y="271.5" >d..</text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="896.9" y="309" width="0.7" height="15.0" fill="rgb(224,9,13)" rx="2" ry="2" />
<text  x="899.86" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (9 samples, 0.02%)</title><rect x="609.3" y="373" width="0.3" height="15.0" fill="rgb(207,2,26)" rx="2" ry="2" />
<text  x="612.33" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (35 samples, 0.07%)</title><rect x="675.1" y="453" width="0.9" height="15.0" fill="rgb(249,80,8)" rx="2" ry="2" />
<text  x="678.10" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (50 samples, 0.11%)</title><rect x="501.4" y="213" width="1.3" height="15.0" fill="rgb(242,160,41)" rx="2" ry="2" />
<text  x="504.43" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (9 samples, 0.02%)</title><rect x="950.9" y="373" width="0.3" height="15.0" fill="rgb(248,17,37)" rx="2" ry="2" />
<text  x="953.94" y="383.5" ></text>
</g>
<g >
<title>mutation_querier::consume (11 samples, 0.02%)</title><rect x="675.2" y="277" width="0.3" height="15.0" fill="rgb(248,98,49)" rx="2" ry="2" />
<text  x="678.23" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="1170.1" y="453" width="0.5" height="15.0" fill="rgb(232,173,28)" rx="2" ry="2" />
<text  x="1173.13" y="463.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (665 samples, 1.42%)</title><rect x="170.7" y="117" width="16.7" height="15.0" fill="rgb(206,202,41)" rx="2" ry="2" />
<text  x="173.65" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%)</title><rect x="218.6" y="117" width="0.2" height="15.0" fill="rgb(248,135,19)" rx="2" ry="2" />
<text  x="221.61" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (48 samples, 0.10%)</title><rect x="950.7" y="405" width="1.2" height="15.0" fill="rgb(209,64,28)" rx="2" ry="2" />
<text  x="953.66" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (26 samples, 0.06%)</title><rect x="856.1" y="485" width="0.7" height="15.0" fill="rgb(210,28,51)" rx="2" ry="2" />
<text  x="859.13" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="410.5" y="341" width="0.2" height="15.0" fill="rgb(232,97,35)" rx="2" ry="2" />
<text  x="413.52" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="567.2" y="341" width="0.1" height="15.0" fill="rgb(243,173,1)" rx="2" ry="2" />
<text  x="570.19" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1035.7" y="213" width="0.1" height="15.0" fill="rgb(217,215,1)" rx="2" ry="2" />
<text  x="1038.67" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (18 samples, 0.04%)</title><rect x="94.8" y="421" width="0.5" height="15.0" fill="rgb(215,220,31)" rx="2" ry="2" />
<text  x="97.83" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="1069.5" y="341" width="0.2" height="15.0" fill="rgb(212,224,14)" rx="2" ry="2" />
<text  x="1072.52" y="351.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.01%)</title><rect x="1177.9" y="629" width="0.1" height="15.0" fill="rgb(252,51,8)" rx="2" ry="2" />
<text  x="1180.93" y="639.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (7 samples, 0.01%)</title><rect x="237.6" y="213" width="0.2" height="15.0" fill="rgb(231,113,21)" rx="2" ry="2" />
<text  x="240.60" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (16 samples, 0.03%)</title><rect x="304.7" y="165" width="0.4" height="15.0" fill="rgb(248,126,0)" rx="2" ry="2" />
<text  x="307.65" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (23 samples, 0.05%)</title><rect x="871.2" y="421" width="0.6" height="15.0" fill="rgb(236,140,16)" rx="2" ry="2" />
<text  x="874.22" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="456.1" y="293" width="0.3" height="15.0" fill="rgb(205,199,1)" rx="2" ry="2" />
<text  x="459.06" y="303.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (8 samples, 0.02%)</title><rect x="1098.2" y="309" width="0.2" height="15.0" fill="rgb(208,1,43)" rx="2" ry="2" />
<text  x="1101.21" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (32 samples, 0.07%)</title><rect x="1160.6" y="453" width="0.8" height="15.0" fill="rgb(227,196,6)" rx="2" ry="2" />
<text  x="1163.58" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="43.0" y="469" width="0.2" height="15.0" fill="rgb(226,26,40)" rx="2" ry="2" />
<text  x="46.00" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="413.8" y="357" width="0.2" height="15.0" fill="rgb(224,29,9)" rx="2" ry="2" />
<text  x="416.82" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (52 samples, 0.11%)</title><rect x="287.9" y="261" width="1.3" height="15.0" fill="rgb(231,33,45)" rx="2" ry="2" />
<text  x="290.85" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="901.0" y="341" width="0.2" height="15.0" fill="rgb(253,126,17)" rx="2" ry="2" />
<text  x="904.04" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="138.5" y="261" width="0.1" height="15.0" fill="rgb(207,36,16)" rx="2" ry="2" />
<text  x="141.46" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="903.7" y="309" width="0.8" height="15.0" fill="rgb(212,120,11)" rx="2" ry="2" />
<text  x="906.68" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="564.8" y="309" width="0.2" height="15.0" fill="rgb(251,118,3)" rx="2" ry="2" />
<text  x="567.85" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (47 samples, 0.10%)</title><rect x="661.5" y="453" width="1.2" height="15.0" fill="rgb(249,191,4)" rx="2" ry="2" />
<text  x="664.55" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (21 samples, 0.04%)</title><rect x="656.5" y="469" width="0.5" height="15.0" fill="rgb(241,120,49)" rx="2" ry="2" />
<text  x="659.51" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="839.6" y="325" width="0.2" height="15.0" fill="rgb(213,39,20)" rx="2" ry="2" />
<text  x="842.63" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (23 samples, 0.05%)</title><rect x="826.9" y="437" width="0.5" height="15.0" fill="rgb(207,72,9)" rx="2" ry="2" />
<text  x="829.86" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (307 samples, 0.66%)</title><rect x="245.1" y="309" width="7.7" height="15.0" fill="rgb(205,16,36)" rx="2" ry="2" />
<text  x="248.11" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="434.3" y="261" width="0.4" height="15.0" fill="rgb(218,194,44)" rx="2" ry="2" />
<text  x="437.35" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (19 samples, 0.04%)</title><rect x="1064.9" y="261" width="0.5" height="15.0" fill="rgb(210,224,38)" rx="2" ry="2" />
<text  x="1067.94" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="627.2" y="469" width="0.6" height="15.0" fill="rgb(247,160,26)" rx="2" ry="2" />
<text  x="630.24" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%)</title><rect x="660.5" y="469" width="0.2" height="15.0" fill="rgb(251,159,15)" rx="2" ry="2" />
<text  x="663.49" y="479.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (5 samples, 0.01%)</title><rect x="19.1" y="325" width="0.2" height="15.0" fill="rgb(234,172,26)" rx="2" ry="2" />
<text  x="22.14" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%)</title><rect x="240.5" y="245" width="0.1" height="15.0" fill="rgb(212,86,41)" rx="2" ry="2" />
<text  x="243.52" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (322 samples, 0.69%)</title><rect x="787.0" y="197" width="8.1" height="15.0" fill="rgb(224,111,41)" rx="2" ry="2" />
<text  x="790.04" y="207.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (11 samples, 0.02%)</title><rect x="323.0" y="181" width="0.3" height="15.0" fill="rgb(210,4,53)" rx="2" ry="2" />
<text  x="325.99" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="1078.4" y="293" width="0.1" height="15.0" fill="rgb(206,164,17)" rx="2" ry="2" />
<text  x="1081.42" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (16 samples, 0.03%)</title><rect x="483.5" y="325" width="0.4" height="15.0" fill="rgb(245,211,45)" rx="2" ry="2" />
<text  x="486.47" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="646.6" y="469" width="0.1" height="15.0" fill="rgb(219,127,9)" rx="2" ry="2" />
<text  x="649.61" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="914.2" y="341" width="0.3" height="15.0" fill="rgb(219,0,49)" rx="2" ry="2" />
<text  x="917.19" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (22 samples, 0.05%)</title><rect x="1123.3" y="405" width="0.6" height="15.0" fill="rgb(218,22,3)" rx="2" ry="2" />
<text  x="1126.30" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.06%)</title><rect x="41.9" y="469" width="0.6" height="15.0" fill="rgb(206,37,29)" rx="2" ry="2" />
<text  x="44.89" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="617.3" y="469" width="0.4" height="15.0" fill="rgb(240,24,46)" rx="2" ry="2" />
<text  x="620.34" y="479.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (4 samples, 0.01%)</title><rect x="427.4" y="341" width="0.1" height="15.0" fill="rgb(216,222,21)" rx="2" ry="2" />
<text  x="430.40" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (7 samples, 0.01%)</title><rect x="1141.1" y="261" width="0.2" height="15.0" fill="rgb(221,128,46)" rx="2" ry="2" />
<text  x="1144.11" y="271.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (48 samples, 0.10%)</title><rect x="666.9" y="453" width="1.2" height="15.0" fill="rgb(222,117,22)" rx="2" ry="2" />
<text  x="669.91" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (5 samples, 0.01%)</title><rect x="422.5" y="357" width="0.1" height="15.0" fill="rgb(214,32,24)" rx="2" ry="2" />
<text  x="425.51" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,008 samples, 23.50%)</title><rect x="862.7" y="469" width="277.3" height="15.0" fill="rgb(238,28,4)" rx="2" ry="2" />
<text  x="865.68" y="479.5" >seastar::noncopyable_function&lt;seastar..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (21 samples, 0.04%)</title><rect x="40.4" y="453" width="0.5" height="15.0" fill="rgb(228,40,6)" rx="2" ry="2" />
<text  x="43.40" y="463.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (44 samples, 0.09%)</title><rect x="714.2" y="405" width="1.2" height="15.0" fill="rgb(206,48,4)" rx="2" ry="2" />
<text  x="717.24" y="415.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (290 samples, 0.62%)</title><rect x="1082.6" y="261" width="7.3" height="15.0" fill="rgb(209,145,15)" rx="2" ry="2" />
<text  x="1085.57" y="271.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1175.3" y="405" width="0.3" height="15.0" fill="rgb(207,2,25)" rx="2" ry="2" />
<text  x="1178.34" y="415.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.09%)</title><rect x="797.6" y="245" width="1.0" height="15.0" fill="rgb(221,161,34)" rx="2" ry="2" />
<text  x="800.62" y="255.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (23 samples, 0.05%)</title><rect x="163.8" y="133" width="0.6" height="15.0" fill="rgb(248,43,44)" rx="2" ry="2" />
<text  x="166.80" y="143.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="504.0" y="197" width="0.5" height="15.0" fill="rgb(252,32,9)" rx="2" ry="2" />
<text  x="506.97" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (5 samples, 0.01%)</title><rect x="643.5" y="453" width="0.1" height="15.0" fill="rgb(205,60,48)" rx="2" ry="2" />
<text  x="646.49" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (16 samples, 0.03%)</title><rect x="202.9" y="117" width="0.4" height="15.0" fill="rgb(249,179,24)" rx="2" ry="2" />
<text  x="205.94" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="572.3" y="341" width="0.2" height="15.0" fill="rgb(206,7,23)" rx="2" ry="2" />
<text  x="575.31" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="1143.8" y="501" width="0.1" height="15.0" fill="rgb(243,60,33)" rx="2" ry="2" />
<text  x="1146.75" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (4 samples, 0.01%)</title><rect x="1133.1" y="421" width="0.1" height="15.0" fill="rgb(209,74,2)" rx="2" ry="2" />
<text  x="1136.12" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (6 samples, 0.01%)</title><rect x="589.4" y="405" width="0.2" height="15.0" fill="rgb(223,92,38)" rx="2" ry="2" />
<text  x="592.41" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (5 samples, 0.01%)</title><rect x="539.1" y="341" width="0.1" height="15.0" fill="rgb(206,54,39)" rx="2" ry="2" />
<text  x="542.06" y="351.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="524.8" y="293" width="0.2" height="15.0" fill="rgb(231,27,22)" rx="2" ry="2" />
<text  x="527.80" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (9 samples, 0.02%)</title><rect x="769.3" y="309" width="0.2" height="15.0" fill="rgb(231,221,21)" rx="2" ry="2" />
<text  x="772.25" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (655 samples, 1.40%)</title><rect x="725.0" y="421" width="16.5" height="15.0" fill="rgb(228,126,0)" rx="2" ry="2" />
<text  x="728.00" y="431.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.09%)</title><rect x="687.2" y="485" width="1.0" height="15.0" fill="rgb(236,174,12)" rx="2" ry="2" />
<text  x="690.21" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (82 samples, 0.18%)</title><rect x="960.9" y="357" width="2.1" height="15.0" fill="rgb(212,171,39)" rx="2" ry="2" />
<text  x="963.89" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (166 samples, 0.35%)</title><rect x="830.2" y="405" width="4.2" height="15.0" fill="rgb(213,141,0)" rx="2" ry="2" />
<text  x="833.23" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%)</title><rect x="389.1" y="245" width="0.1" height="15.0" fill="rgb(225,115,2)" rx="2" ry="2" />
<text  x="392.11" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%)</title><rect x="532.2" y="389" width="1.0" height="15.0" fill="rgb(228,27,36)" rx="2" ry="2" />
<text  x="535.18" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (26 samples, 0.06%)</title><rect x="735.7" y="309" width="0.7" height="15.0" fill="rgb(234,162,50)" rx="2" ry="2" />
<text  x="738.73" y="319.5" ></text>
</g>
<g >
<title>auth::resource::resource (53 samples, 0.11%)</title><rect x="759.1" y="373" width="1.3" height="15.0" fill="rgb(249,154,21)" rx="2" ry="2" />
<text  x="762.05" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (15 samples, 0.03%)</title><rect x="582.9" y="405" width="0.4" height="15.0" fill="rgb(247,117,19)" rx="2" ry="2" />
<text  x="585.88" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (150 samples, 0.32%)</title><rect x="918.7" y="341" width="3.7" height="15.0" fill="rgb(207,24,32)" rx="2" ry="2" />
<text  x="921.67" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.04%)</title><rect x="320.8" y="181" width="0.6" height="15.0" fill="rgb(210,39,15)" rx="2" ry="2" />
<text  x="323.85" y="191.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (41 samples, 0.09%)</title><rect x="914.8" y="373" width="1.0" height="15.0" fill="rgb(225,81,43)" rx="2" ry="2" />
<text  x="917.79" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1072.8" y="325" width="0.1" height="15.0" fill="rgb(216,118,12)" rx="2" ry="2" />
<text  x="1075.80" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (12 samples, 0.03%)</title><rect x="530.2" y="341" width="0.3" height="15.0" fill="rgb(215,154,35)" rx="2" ry="2" />
<text  x="533.22" y="351.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (89 samples, 0.19%)</title><rect x="1133.8" y="405" width="2.2" height="15.0" fill="rgb(254,227,43)" rx="2" ry="2" />
<text  x="1136.78" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="656.3" y="469" width="0.2" height="15.0" fill="rgb(215,189,43)" rx="2" ry="2" />
<text  x="659.33" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (33 samples, 0.07%)</title><rect x="192.4" y="117" width="0.8" height="15.0" fill="rgb(228,94,52)" rx="2" ry="2" />
<text  x="195.39" y="127.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (36 samples, 0.08%)</title><rect x="458.2" y="293" width="0.9" height="15.0" fill="rgb(234,196,35)" rx="2" ry="2" />
<text  x="461.15" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (24 samples, 0.05%)</title><rect x="808.6" y="293" width="0.6" height="15.0" fill="rgb(226,118,52)" rx="2" ry="2" />
<text  x="811.60" y="303.5" ></text>
</g>
<g >
<title>partition_entry::read (24 samples, 0.05%)</title><rect x="516.5" y="325" width="0.6" height="15.0" fill="rgb(245,25,15)" rx="2" ry="2" />
<text  x="519.46" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="291.8" y="261" width="0.5" height="15.0" fill="rgb(240,39,8)" rx="2" ry="2" />
<text  x="294.76" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%)</title><rect x="931.8" y="405" width="0.4" height="15.0" fill="rgb(245,124,15)" rx="2" ry="2" />
<text  x="934.84" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="147.4" y="181" width="0.1" height="15.0" fill="rgb(222,16,14)" rx="2" ry="2" />
<text  x="150.35" y="191.5" ></text>
</g>
<g >
<title>posix_memalign (45 samples, 0.10%)</title><rect x="191.2" y="85" width="1.1" height="15.0" fill="rgb(225,174,53)" rx="2" ry="2" />
<text  x="194.18" y="95.5" ></text>
</g>
<g >
<title>perf_simple_que (46,845 samples, 100.00%)</title><rect x="10.0" y="645" width="1179.9" height="15.0" fill="rgb(230,141,10)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (5 samples, 0.01%)</title><rect x="515.1" y="309" width="0.1" height="15.0" fill="rgb(208,20,5)" rx="2" ry="2" />
<text  x="518.05" y="319.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (4 samples, 0.01%)</title><rect x="16.4" y="405" width="0.1" height="15.0" fill="rgb(224,100,51)" rx="2" ry="2" />
<text  x="19.42" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (101 samples, 0.22%)</title><rect x="445.8" y="277" width="2.6" height="15.0" fill="rgb(216,157,26)" rx="2" ry="2" />
<text  x="448.81" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="663.0" y="437" width="0.3" height="15.0" fill="rgb(248,63,0)" rx="2" ry="2" />
<text  x="666.03" y="447.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (469 samples, 1.00%)</title><rect x="457.3" y="309" width="11.8" height="15.0" fill="rgb(207,90,48)" rx="2" ry="2" />
<text  x="460.32" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (18 samples, 0.04%)</title><rect x="675.2" y="325" width="0.5" height="15.0" fill="rgb(240,165,3)" rx="2" ry="2" />
<text  x="678.23" y="335.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="653.0" y="421" width="0.7" height="15.0" fill="rgb(208,68,49)" rx="2" ry="2" />
<text  x="655.98" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="19.3" y="325" width="0.2" height="15.0" fill="rgb(242,184,52)" rx="2" ry="2" />
<text  x="22.34" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="680.3" y="453" width="0.1" height="15.0" fill="rgb(244,205,45)" rx="2" ry="2" />
<text  x="683.29" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (27 samples, 0.06%)</title><rect x="640.0" y="437" width="0.7" height="15.0" fill="rgb(220,85,54)" rx="2" ry="2" />
<text  x="642.99" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (11 samples, 0.02%)</title><rect x="1032.1" y="133" width="0.3" height="15.0" fill="rgb(251,173,39)" rx="2" ry="2" />
<text  x="1035.14" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (4 samples, 0.01%)</title><rect x="850.9" y="469" width="0.1" height="15.0" fill="rgb(205,38,9)" rx="2" ry="2" />
<text  x="853.94" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1033.2" y="181" width="0.1" height="15.0" fill="rgb(225,12,47)" rx="2" ry="2" />
<text  x="1036.20" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (4 samples, 0.01%)</title><rect x="1174.4" y="421" width="0.1" height="15.0" fill="rgb(208,173,44)" rx="2" ry="2" />
<text  x="1177.41" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (24 samples, 0.05%)</title><rect x="310.0" y="181" width="0.6" height="15.0" fill="rgb(229,77,34)" rx="2" ry="2" />
<text  x="312.97" y="191.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%)</title><rect x="381.3" y="165" width="1.2" height="15.0" fill="rgb(229,193,6)" rx="2" ry="2" />
<text  x="384.28" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="626.2" y="453" width="0.3" height="15.0" fill="rgb(248,56,49)" rx="2" ry="2" />
<text  x="629.23" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (79 samples, 0.17%)</title><rect x="1113.4" y="373" width="2.0" height="15.0" fill="rgb(243,198,51)" rx="2" ry="2" />
<text  x="1116.38" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="261.5" y="325" width="0.2" height="15.0" fill="rgb(216,220,0)" rx="2" ry="2" />
<text  x="264.53" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (67 samples, 0.14%)</title><rect x="637.5" y="453" width="1.7" height="15.0" fill="rgb(221,60,19)" rx="2" ry="2" />
<text  x="640.54" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (127 samples, 0.27%)</title><rect x="407.1" y="309" width="3.2" height="15.0" fill="rgb(220,0,15)" rx="2" ry="2" />
<text  x="410.07" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (6 samples, 0.01%)</title><rect x="442.6" y="293" width="0.2" height="15.0" fill="rgb(205,135,34)" rx="2" ry="2" />
<text  x="445.61" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="656.9" y="453" width="0.1" height="15.0" fill="rgb(244,19,22)" rx="2" ry="2" />
<text  x="659.89" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="1168.3" y="469" width="0.5" height="15.0" fill="rgb(238,43,29)" rx="2" ry="2" />
<text  x="1171.29" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%)</title><rect x="986.2" y="293" width="0.9" height="15.0" fill="rgb(223,132,0)" rx="2" ry="2" />
<text  x="989.20" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="800.3" y="261" width="0.1" height="15.0" fill="rgb(207,96,42)" rx="2" ry="2" />
<text  x="803.29" y="271.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.10%)</title><rect x="828.5" y="437" width="1.2" height="15.0" fill="rgb(219,223,47)" rx="2" ry="2" />
<text  x="831.52" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.02%)</title><rect x="674.3" y="485" width="0.3" height="15.0" fill="rgb(239,226,8)" rx="2" ry="2" />
<text  x="677.34" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (25 samples, 0.05%)</title><rect x="550.9" y="309" width="0.6" height="15.0" fill="rgb(228,96,20)" rx="2" ry="2" />
<text  x="553.90" y="319.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (359 samples, 0.77%)</title><rect x="786.4" y="213" width="9.0" height="15.0" fill="rgb(225,22,8)" rx="2" ry="2" />
<text  x="789.36" y="223.5" ></text>
</g>
<g >
<title>do_cql_test (284 samples, 0.61%)</title><rect x="16.1" y="549" width="7.1" height="15.0" fill="rgb(236,155,43)" rx="2" ry="2" />
<text  x="19.10" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (7 samples, 0.01%)</title><rect x="694.7" y="421" width="0.2" height="15.0" fill="rgb(245,177,25)" rx="2" ry="2" />
<text  x="697.75" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (20 samples, 0.04%)</title><rect x="788.3" y="133" width="0.5" height="15.0" fill="rgb(229,146,34)" rx="2" ry="2" />
<text  x="791.35" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (60 samples, 0.13%)</title><rect x="888.1" y="261" width="1.5" height="15.0" fill="rgb(246,229,49)" rx="2" ry="2" />
<text  x="891.12" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (23 samples, 0.05%)</title><rect x="406.3" y="277" width="0.5" height="15.0" fill="rgb(217,228,40)" rx="2" ry="2" />
<text  x="409.26" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="563.2" y="293" width="0.1" height="15.0" fill="rgb(234,31,6)" rx="2" ry="2" />
<text  x="566.21" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (45 samples, 0.10%)</title><rect x="580.9" y="421" width="1.1" height="15.0" fill="rgb(235,111,15)" rx="2" ry="2" />
<text  x="583.89" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (19 samples, 0.04%)</title><rect x="599.3" y="437" width="0.5" height="15.0" fill="rgb(235,158,19)" rx="2" ry="2" />
<text  x="602.33" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="840.8" y="405" width="0.2" height="15.0" fill="rgb(222,222,32)" rx="2" ry="2" />
<text  x="843.84" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,213 samples, 2.59%)</title><rect x="165.1" y="133" width="30.6" height="15.0" fill="rgb(209,143,35)" rx="2" ry="2" />
<text  x="168.11" y="143.5" >co..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="603.2" y="405" width="0.4" height="15.0" fill="rgb(206,69,2)" rx="2" ry="2" />
<text  x="606.19" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="256.8" y="325" width="0.2" height="15.0" fill="rgb(241,148,39)" rx="2" ry="2" />
<text  x="259.82" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (10 samples, 0.02%)</title><rect x="252.8" y="309" width="0.3" height="15.0" fill="rgb(226,98,48)" rx="2" ry="2" />
<text  x="255.84" y="319.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (1,060 samples, 2.26%)</title><rect x="456.5" y="325" width="26.7" height="15.0" fill="rgb(234,223,11)" rx="2" ry="2" />
<text  x="459.49" y="335.5" >d..</text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (116 samples, 0.25%)</title><rect x="271.7" y="293" width="2.9" height="15.0" fill="rgb(241,144,26)" rx="2" ry="2" />
<text  x="274.66" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (8 samples, 0.02%)</title><rect x="764.3" y="357" width="0.2" height="15.0" fill="rgb(241,8,31)" rx="2" ry="2" />
<text  x="767.34" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (33 samples, 0.07%)</title><rect x="672.4" y="453" width="0.8" height="15.0" fill="rgb(215,13,14)" rx="2" ry="2" />
<text  x="675.35" y="463.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (4 samples, 0.01%)</title><rect x="47.1" y="469" width="0.1" height="15.0" fill="rgb(228,157,32)" rx="2" ry="2" />
<text  x="50.10" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="1054.7" y="293" width="0.4" height="15.0" fill="rgb(216,46,46)" rx="2" ry="2" />
<text  x="1057.66" y="303.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (10 samples, 0.02%)</title><rect x="1143.5" y="501" width="0.3" height="15.0" fill="rgb(235,99,47)" rx="2" ry="2" />
<text  x="1146.50" y="511.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%)</title><rect x="274.7" y="309" width="0.1" height="15.0" fill="rgb(241,34,40)" rx="2" ry="2" />
<text  x="277.68" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (275 samples, 0.59%)</title><rect x="841.3" y="453" width="6.9" height="15.0" fill="rgb(219,76,36)" rx="2" ry="2" />
<text  x="844.29" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (11 samples, 0.02%)</title><rect x="1175.3" y="437" width="0.3" height="15.0" fill="rgb(223,223,46)" rx="2" ry="2" />
<text  x="1178.32" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (323 samples, 0.69%)</title><rect x="556.0" y="309" width="8.1" height="15.0" fill="rgb(248,174,22)" rx="2" ry="2" />
<text  x="559.01" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (73 samples, 0.16%)</title><rect x="1158.7" y="453" width="1.9" height="15.0" fill="rgb(212,183,52)" rx="2" ry="2" />
<text  x="1161.74" y="463.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (4 samples, 0.01%)</title><rect x="182.4" y="69" width="0.1" height="15.0" fill="rgb(253,207,14)" rx="2" ry="2" />
<text  x="185.36" y="79.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="945.4" y="405" width="0.1" height="15.0" fill="rgb(239,71,21)" rx="2" ry="2" />
<text  x="948.37" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="741.3" y="405" width="0.2" height="15.0" fill="rgb(216,45,49)" rx="2" ry="2" />
<text  x="744.32" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (4 samples, 0.01%)</title><rect x="61.1" y="405" width="0.1" height="15.0" fill="rgb(237,147,15)" rx="2" ry="2" />
<text  x="64.13" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,077 samples, 10.84%)</title><rect x="283.0" y="373" width="127.9" height="15.0" fill="rgb(248,225,30)" rx="2" ry="2" />
<text  x="286.02" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>make_combined_reader (779 samples, 1.66%)</title><rect x="430.2" y="325" width="19.6" height="15.0" fill="rgb(225,146,34)" rx="2" ry="2" />
<text  x="433.17" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (24 samples, 0.05%)</title><rect x="579.4" y="421" width="0.6" height="15.0" fill="rgb(225,150,34)" rx="2" ry="2" />
<text  x="582.43" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="737.2" y="261" width="0.4" height="15.0" fill="rgb(205,8,32)" rx="2" ry="2" />
<text  x="740.16" y="271.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (196 samples, 0.42%)</title><rect x="987.3" y="309" width="5.0" height="15.0" fill="rgb(237,64,7)" rx="2" ry="2" />
<text  x="990.33" y="319.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.03%)</title><rect x="783.8" y="165" width="0.3" height="15.0" fill="rgb(231,6,3)" rx="2" ry="2" />
<text  x="786.79" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="434.1" y="245" width="0.2" height="15.0" fill="rgb(209,68,48)" rx="2" ry="2" />
<text  x="437.12" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (87 samples, 0.19%)</title><rect x="361.3" y="213" width="2.2" height="15.0" fill="rgb(251,162,38)" rx="2" ry="2" />
<text  x="364.33" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="489.8" y="309" width="0.2" height="15.0" fill="rgb(226,178,33)" rx="2" ry="2" />
<text  x="492.84" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (35 samples, 0.07%)</title><rect x="1170.6" y="453" width="0.9" height="15.0" fill="rgb(244,13,11)" rx="2" ry="2" />
<text  x="1173.60" y="463.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (7 samples, 0.01%)</title><rect x="1169.3" y="469" width="0.2" height="15.0" fill="rgb(214,5,31)" rx="2" ry="2" />
<text  x="1172.32" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="1159.9" y="405" width="0.6" height="15.0" fill="rgb(222,188,35)" rx="2" ry="2" />
<text  x="1162.87" y="415.5" ></text>
</g>
<g >
<title>[[vdso]] (252 samples, 0.54%)</title><rect x="1178.9" y="613" width="6.4" height="15.0" fill="rgb(237,179,35)" rx="2" ry="2" />
<text  x="1181.92" y="623.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (28 samples, 0.06%)</title><rect x="1176.9" y="485" width="0.7" height="15.0" fill="rgb(248,191,44)" rx="2" ry="2" />
<text  x="1179.88" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (82 samples, 0.18%)</title><rect x="668.6" y="469" width="2.0" height="15.0" fill="rgb(224,164,38)" rx="2" ry="2" />
<text  x="671.58" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (60 samples, 0.13%)</title><rect x="379.8" y="133" width="1.5" height="15.0" fill="rgb(247,22,21)" rx="2" ry="2" />
<text  x="382.77" y="143.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (666 samples, 1.42%)</title><rect x="779.0" y="245" width="16.8" height="15.0" fill="rgb(253,114,26)" rx="2" ry="2" />
<text  x="781.98" y="255.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="767.2" y="309" width="0.6" height="15.0" fill="rgb(207,45,52)" rx="2" ry="2" />
<text  x="770.24" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (52 samples, 0.11%)</title><rect x="66.3" y="389" width="1.3" height="15.0" fill="rgb(221,183,6)" rx="2" ry="2" />
<text  x="69.27" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (35 samples, 0.07%)</title><rect x="440.0" y="277" width="0.8" height="15.0" fill="rgb(221,175,42)" rx="2" ry="2" />
<text  x="442.97" y="287.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (12 samples, 0.03%)</title><rect x="1141.3" y="181" width="0.3" height="15.0" fill="rgb(234,206,42)" rx="2" ry="2" />
<text  x="1144.34" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1107.0" y="373" width="0.4" height="15.0" fill="rgb(248,4,6)" rx="2" ry="2" />
<text  x="1110.03" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (10 samples, 0.02%)</title><rect x="856.3" y="357" width="0.3" height="15.0" fill="rgb(234,123,46)" rx="2" ry="2" />
<text  x="859.33" y="367.5" ></text>
</g>
<g >
<title>operator delete (5 samples, 0.01%)</title><rect x="1169.2" y="469" width="0.1" height="15.0" fill="rgb(235,64,24)" rx="2" ry="2" />
<text  x="1172.19" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (4 samples, 0.01%)</title><rect x="1175.9" y="485" width="0.1" height="15.0" fill="rgb(207,12,40)" rx="2" ry="2" />
<text  x="1178.94" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%)</title><rect x="506.5" y="229" width="0.1" height="15.0" fill="rgb(214,60,2)" rx="2" ry="2" />
<text  x="509.51" y="239.5" ></text>
</g>
<g >
<title>sstring_hash::operator (24 samples, 0.05%)</title><rect x="833.5" y="373" width="0.6" height="15.0" fill="rgb(234,1,48)" rx="2" ry="2" />
<text  x="836.53" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="585.4" y="389" width="0.2" height="15.0" fill="rgb(207,10,18)" rx="2" ry="2" />
<text  x="588.43" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (61 samples, 0.13%)</title><rect x="910.0" y="373" width="1.5" height="15.0" fill="rgb(242,88,41)" rx="2" ry="2" />
<text  x="912.98" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="511.0" y="277" width="0.4" height="15.0" fill="rgb(220,185,23)" rx="2" ry="2" />
<text  x="514.02" y="287.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (874 samples, 1.87%)</title><rect x="490.0" y="309" width="22.0" height="15.0" fill="rgb(210,6,10)" rx="2" ry="2" />
<text  x="492.96" y="319.5" >s..</text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (87 samples, 0.19%)</title><rect x="737.0" y="277" width="2.2" height="15.0" fill="rgb(205,24,19)" rx="2" ry="2" />
<text  x="739.96" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="1119.0" y="325" width="0.6" height="15.0" fill="rgb(235,117,51)" rx="2" ry="2" />
<text  x="1122.04" y="335.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="625.8" y="469" width="0.7" height="15.0" fill="rgb(211,75,0)" rx="2" ry="2" />
<text  x="628.78" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (14 samples, 0.03%)</title><rect x="533.2" y="405" width="0.4" height="15.0" fill="rgb(210,90,5)" rx="2" ry="2" />
<text  x="536.21" y="415.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="844.4" y="357" width="1.4" height="15.0" fill="rgb(238,72,6)" rx="2" ry="2" />
<text  x="847.44" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (17 samples, 0.04%)</title><rect x="415.1" y="373" width="0.4" height="15.0" fill="rgb(244,7,4)" rx="2" ry="2" />
<text  x="418.08" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="1128.1" y="373" width="0.7" height="15.0" fill="rgb(227,192,43)" rx="2" ry="2" />
<text  x="1131.11" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (101 samples, 0.22%)</title><rect x="1020.8" y="229" width="2.5" height="15.0" fill="rgb(250,207,1)" rx="2" ry="2" />
<text  x="1023.76" y="239.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (252 samples, 0.54%)</title><rect x="16.5" y="485" width="6.4" height="15.0" fill="rgb(215,155,33)" rx="2" ry="2" />
<text  x="19.52" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="934.2" y="405" width="0.1" height="15.0" fill="rgb(210,161,34)" rx="2" ry="2" />
<text  x="937.19" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (112 samples, 0.24%)</title><rect x="559.5" y="293" width="2.9" height="15.0" fill="rgb(221,61,6)" rx="2" ry="2" />
<text  x="562.53" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="982.9" y="261" width="0.5" height="15.0" fill="rgb(223,126,17)" rx="2" ry="2" />
<text  x="985.90" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (8 samples, 0.02%)</title><rect x="715.4" y="389" width="0.2" height="15.0" fill="rgb(224,108,52)" rx="2" ry="2" />
<text  x="718.43" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (10 samples, 0.02%)</title><rect x="65.5" y="389" width="0.3" height="15.0" fill="rgb(242,93,51)" rx="2" ry="2" />
<text  x="68.54" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (7 samples, 0.01%)</title><rect x="226.4" y="245" width="0.1" height="15.0" fill="rgb(217,214,2)" rx="2" ry="2" />
<text  x="229.37" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="416.6" y="405" width="0.3" height="15.0" fill="rgb(207,173,44)" rx="2" ry="2" />
<text  x="419.57" y="415.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%)</title><rect x="692.3" y="437" width="0.1" height="15.0" fill="rgb(236,178,31)" rx="2" ry="2" />
<text  x="695.28" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (184 samples, 0.39%)</title><rect x="741.5" y="421" width="4.6" height="15.0" fill="rgb(229,54,47)" rx="2" ry="2" />
<text  x="744.50" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (57 samples, 0.12%)</title><rect x="17.0" y="357" width="1.4" height="15.0" fill="rgb(222,76,34)" rx="2" ry="2" />
<text  x="19.95" y="367.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (9 samples, 0.02%)</title><rect x="876.7" y="389" width="0.2" height="15.0" fill="rgb(241,68,14)" rx="2" ry="2" />
<text  x="879.66" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,164 samples, 2.48%)</title><rect x="773.0" y="309" width="29.3" height="15.0" fill="rgb(228,213,43)" rx="2" ry="2" />
<text  x="775.98" y="319.5" >au..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (49 samples, 0.10%)</title><rect x="658.7" y="485" width="1.2" height="15.0" fill="rgb(254,87,0)" rx="2" ry="2" />
<text  x="661.65" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (11 samples, 0.02%)</title><rect x="360.4" y="197" width="0.2" height="15.0" fill="rgb(231,200,26)" rx="2" ry="2" />
<text  x="363.37" y="207.5" ></text>
</g>
<g >
<title>[unknown] (194 samples, 0.41%)</title><rect x="10.4" y="597" width="4.8" height="15.0" fill="rgb(254,187,1)" rx="2" ry="2" />
<text  x="13.35" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (67 samples, 0.14%)</title><rect x="849.3" y="469" width="1.6" height="15.0" fill="rgb(240,161,44)" rx="2" ry="2" />
<text  x="852.25" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="400.8" y="181" width="0.2" height="15.0" fill="rgb(254,134,38)" rx="2" ry="2" />
<text  x="403.85" y="191.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="515.2" y="325" width="0.6" height="15.0" fill="rgb(254,224,44)" rx="2" ry="2" />
<text  x="518.18" y="335.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (297 samples, 0.63%)</title><rect x="1082.4" y="277" width="7.5" height="15.0" fill="rgb(229,114,46)" rx="2" ry="2" />
<text  x="1085.42" y="287.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="981.5" y="309" width="0.1" height="15.0" fill="rgb(210,88,39)" rx="2" ry="2" />
<text  x="984.52" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="927.6" y="341" width="0.2" height="15.0" fill="rgb(225,179,24)" rx="2" ry="2" />
<text  x="930.61" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (25 samples, 0.05%)</title><rect x="1149.0" y="469" width="0.6" height="15.0" fill="rgb(205,30,46)" rx="2" ry="2" />
<text  x="1151.99" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (14 samples, 0.03%)</title><rect x="598.7" y="437" width="0.3" height="15.0" fill="rgb(232,118,49)" rx="2" ry="2" />
<text  x="601.65" y="447.5" ></text>
</g>
<g >
<title>operator new (67 samples, 0.14%)</title><rect x="1042.4" y="261" width="1.7" height="15.0" fill="rgb(221,198,37)" rx="2" ry="2" />
<text  x="1045.42" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1099.5" y="309" width="0.2" height="15.0" fill="rgb(212,90,33)" rx="2" ry="2" />
<text  x="1102.55" y="319.5" ></text>
</g>
<g >
<title>query::querier&lt; (16 samples, 0.03%)</title><rect x="58.0" y="453" width="0.4" height="15.0" fill="rgb(221,108,15)" rx="2" ry="2" />
<text  x="60.96" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (12 samples, 0.03%)</title><rect x="872.3" y="421" width="0.3" height="15.0" fill="rgb(239,166,33)" rx="2" ry="2" />
<text  x="875.30" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (211 samples, 0.45%)</title><rect x="1090.1" y="277" width="5.3" height="15.0" fill="rgb(210,91,19)" rx="2" ry="2" />
<text  x="1093.10" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (4 samples, 0.01%)</title><rect x="274.6" y="309" width="0.1" height="15.0" fill="rgb(209,154,11)" rx="2" ry="2" />
<text  x="277.58" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (4 samples, 0.01%)</title><rect x="20.9" y="325" width="0.1" height="15.0" fill="rgb(238,111,28)" rx="2" ry="2" />
<text  x="23.86" y="335.5" ></text>
</g>
<g >
<title>memtable::apply (15 samples, 0.03%)</title><rect x="1140.3" y="261" width="0.4" height="15.0" fill="rgb(234,112,41)" rx="2" ry="2" />
<text  x="1143.30" y="271.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (8 samples, 0.02%)</title><rect x="743.7" y="357" width="0.2" height="15.0" fill="rgb(208,181,26)" rx="2" ry="2" />
<text  x="746.71" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (4 samples, 0.01%)</title><rect x="45.9" y="485" width="0.1" height="15.0" fill="rgb(242,110,38)" rx="2" ry="2" />
<text  x="48.94" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (50 samples, 0.11%)</title><rect x="938.6" y="373" width="1.2" height="15.0" fill="rgb(235,138,20)" rx="2" ry="2" />
<text  x="941.57" y="383.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="614.3" y="389" width="0.6" height="15.0" fill="rgb(235,168,10)" rx="2" ry="2" />
<text  x="617.27" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (52 samples, 0.11%)</title><rect x="782.4" y="165" width="1.3" height="15.0" fill="rgb(208,12,33)" rx="2" ry="2" />
<text  x="785.40" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="757.6" y="341" width="0.2" height="15.0" fill="rgb(208,201,6)" rx="2" ry="2" />
<text  x="760.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="779.5" y="229" width="0.4" height="15.0" fill="rgb(230,163,9)" rx="2" ry="2" />
<text  x="782.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (16 samples, 0.03%)</title><rect x="610.1" y="437" width="0.4" height="15.0" fill="rgb(224,205,17)" rx="2" ry="2" />
<text  x="613.14" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (4 samples, 0.01%)</title><rect x="683.8" y="453" width="0.1" height="15.0" fill="rgb(233,99,43)" rx="2" ry="2" />
<text  x="686.84" y="463.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%)</title><rect x="532.2" y="405" width="1.0" height="15.0" fill="rgb(249,180,23)" rx="2" ry="2" />
<text  x="535.16" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (5 samples, 0.01%)</title><rect x="70.1" y="421" width="0.2" height="15.0" fill="rgb(223,129,43)" rx="2" ry="2" />
<text  x="73.15" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (5 samples, 0.01%)</title><rect x="1115.9" y="373" width="0.1" height="15.0" fill="rgb(225,152,20)" rx="2" ry="2" />
<text  x="1118.92" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="923.3" y="389" width="0.2" height="15.0" fill="rgb(252,54,15)" rx="2" ry="2" />
<text  x="926.26" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="780.4" y="229" width="0.2" height="15.0" fill="rgb(217,222,54)" rx="2" ry="2" />
<text  x="783.44" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (29 samples, 0.06%)</title><rect x="140.6" y="245" width="0.7" height="15.0" fill="rgb(248,220,28)" rx="2" ry="2" />
<text  x="143.60" y="255.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%)</title><rect x="846.3" y="437" width="1.7" height="15.0" fill="rgb(222,1,45)" rx="2" ry="2" />
<text  x="849.30" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (728 samples, 1.55%)</title><rect x="493.1" y="293" width="18.3" height="15.0" fill="rgb(234,109,3)" rx="2" ry="2" />
<text  x="496.09" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (10 samples, 0.02%)</title><rect x="323.3" y="181" width="0.3" height="15.0" fill="rgb(231,96,48)" rx="2" ry="2" />
<text  x="326.32" y="191.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.01%)</title><rect x="455.1" y="325" width="0.1" height="15.0" fill="rgb(236,58,22)" rx="2" ry="2" />
<text  x="458.05" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (7 samples, 0.01%)</title><rect x="24.6" y="517" width="0.2" height="15.0" fill="rgb(224,136,3)" rx="2" ry="2" />
<text  x="27.61" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (7 samples, 0.01%)</title><rect x="125.7" y="229" width="0.1" height="15.0" fill="rgb(222,110,0)" rx="2" ry="2" />
<text  x="128.67" y="239.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="23.3" y="405" width="0.1" height="15.0" fill="rgb(207,83,0)" rx="2" ry="2" />
<text  x="26.32" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (5 samples, 0.01%)</title><rect x="609.6" y="389" width="0.1" height="15.0" fill="rgb(233,163,36)" rx="2" ry="2" />
<text  x="612.56" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (13 samples, 0.03%)</title><rect x="977.9" y="357" width="0.3" height="15.0" fill="rgb(243,69,3)" rx="2" ry="2" />
<text  x="980.86" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (31 samples, 0.07%)</title><rect x="1064.7" y="293" width="0.8" height="15.0" fill="rgb(207,113,26)" rx="2" ry="2" />
<text  x="1067.71" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="277.9" y="357" width="0.1" height="15.0" fill="rgb(209,49,11)" rx="2" ry="2" />
<text  x="280.88" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="413.2" y="373" width="0.1" height="15.0" fill="rgb(236,55,24)" rx="2" ry="2" />
<text  x="416.19" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="357" width="1.0" height="15.0" fill="rgb(251,187,31)" rx="2" ry="2" />
<text  x="1143.98" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (7 samples, 0.01%)</title><rect x="581.9" y="405" width="0.1" height="15.0" fill="rgb(236,62,11)" rx="2" ry="2" />
<text  x="584.85" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="1068.9" y="341" width="0.1" height="15.0" fill="rgb(226,71,47)" rx="2" ry="2" />
<text  x="1071.89" y="351.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (74 samples, 0.16%)</title><rect x="521.8" y="309" width="1.8" height="15.0" fill="rgb(250,175,32)" rx="2" ry="2" />
<text  x="524.78" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="1132.8" y="421" width="0.3" height="15.0" fill="rgb(252,34,24)" rx="2" ry="2" />
<text  x="1135.77" y="431.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (11 samples, 0.02%)</title><rect x="427.0" y="341" width="0.2" height="15.0" fill="rgb(229,20,15)" rx="2" ry="2" />
<text  x="429.97" y="351.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="581.1" y="405" width="0.7" height="15.0" fill="rgb(218,71,28)" rx="2" ry="2" />
<text  x="584.12" y="415.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (11 samples, 0.02%)</title><rect x="1056.5" y="325" width="0.2" height="15.0" fill="rgb(220,178,54)" rx="2" ry="2" />
<text  x="1059.45" y="335.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (4 samples, 0.01%)</title><rect x="1046.0" y="261" width="0.1" height="15.0" fill="rgb(221,189,33)" rx="2" ry="2" />
<text  x="1049.02" y="271.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (17 samples, 0.04%)</title><rect x="589.6" y="405" width="0.4" height="15.0" fill="rgb(235,22,48)" rx="2" ry="2" />
<text  x="592.56" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%)</title><rect x="685.6" y="469" width="0.1" height="15.0" fill="rgb(246,92,24)" rx="2" ry="2" />
<text  x="688.55" y="479.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="50.5" y="469" width="0.7" height="15.0" fill="rgb(242,79,6)" rx="2" ry="2" />
<text  x="53.48" y="479.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="583.5" y="389" width="0.9" height="15.0" fill="rgb(243,93,36)" rx="2" ry="2" />
<text  x="586.46" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="602.8" y="437" width="0.1" height="15.0" fill="rgb(221,32,30)" rx="2" ry="2" />
<text  x="605.81" y="447.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="544.9" y="405" width="0.7" height="15.0" fill="rgb(207,34,29)" rx="2" ry="2" />
<text  x="547.88" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (4 samples, 0.01%)</title><rect x="784.3" y="213" width="0.1" height="15.0" fill="rgb(241,145,28)" rx="2" ry="2" />
<text  x="787.27" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%)</title><rect x="23.4" y="469" width="0.2" height="15.0" fill="rgb(250,210,34)" rx="2" ry="2" />
<text  x="26.43" y="479.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="523.4" y="277" width="0.1" height="15.0" fill="rgb(230,163,26)" rx="2" ry="2" />
<text  x="526.36" y="287.5" ></text>
</g>
<g >
<title>free (117 samples, 0.25%)</title><rect x="395.9" y="181" width="2.9" height="15.0" fill="rgb(221,186,49)" rx="2" ry="2" />
<text  x="398.86" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (4 samples, 0.01%)</title><rect x="595.5" y="437" width="0.1" height="15.0" fill="rgb(254,21,33)" rx="2" ry="2" />
<text  x="598.45" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="810.7" y="357" width="0.1" height="15.0" fill="rgb(232,66,33)" rx="2" ry="2" />
<text  x="813.71" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (12 samples, 0.03%)</title><rect x="401.6" y="213" width="0.3" height="15.0" fill="rgb(208,48,42)" rx="2" ry="2" />
<text  x="404.58" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="1079.1" y="325" width="0.1" height="15.0" fill="rgb(219,211,9)" rx="2" ry="2" />
<text  x="1082.10" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="673.3" y="437" width="0.4" height="15.0" fill="rgb(249,181,34)" rx="2" ry="2" />
<text  x="676.34" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (6 samples, 0.01%)</title><rect x="721.1" y="357" width="0.1" height="15.0" fill="rgb(211,121,22)" rx="2" ry="2" />
<text  x="724.07" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.01%)</title><rect x="19.0" y="213" width="0.1" height="15.0" fill="rgb(227,127,24)" rx="2" ry="2" />
<text  x="21.99" y="223.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,105 samples, 10.90%)</title><rect x="712.6" y="453" width="128.5" height="15.0" fill="rgb(252,167,10)" rx="2" ry="2" />
<text  x="715.55" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (6 samples, 0.01%)</title><rect x="337.5" y="165" width="0.2" height="15.0" fill="rgb(236,101,46)" rx="2" ry="2" />
<text  x="340.55" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (64 samples, 0.14%)</title><rect x="1157.0" y="421" width="1.6" height="15.0" fill="rgb(250,169,49)" rx="2" ry="2" />
<text  x="1160.00" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="899.1" y="277" width="0.9" height="15.0" fill="rgb(248,181,48)" rx="2" ry="2" />
<text  x="902.07" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="964.3" y="373" width="0.1" height="15.0" fill="rgb(222,119,27)" rx="2" ry="2" />
<text  x="967.29" y="383.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_data&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt;, true, true&gt;::operator= (4 samples, 0.01%)</title><rect x="20.0" y="261" width="0.1" height="15.0" fill="rgb(239,131,0)" rx="2" ry="2" />
<text  x="22.97" y="271.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="89.2" y="437" width="0.4" height="15.0" fill="rgb(234,125,51)" rx="2" ry="2" />
<text  x="92.24" y="447.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%)</title><rect x="985.0" y="325" width="2.1" height="15.0" fill="rgb(207,224,18)" rx="2" ry="2" />
<text  x="988.04" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (9 samples, 0.02%)</title><rect x="693.1" y="437" width="0.2" height="15.0" fill="rgb(227,121,7)" rx="2" ry="2" />
<text  x="696.08" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (66 samples, 0.14%)</title><rect x="923.5" y="389" width="1.7" height="15.0" fill="rgb(233,195,33)" rx="2" ry="2" />
<text  x="926.53" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (10 samples, 0.02%)</title><rect x="998.9" y="277" width="0.2" height="15.0" fill="rgb(227,133,24)" rx="2" ry="2" />
<text  x="1001.90" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (31 samples, 0.07%)</title><rect x="857.2" y="485" width="0.7" height="15.0" fill="rgb(244,167,10)" rx="2" ry="2" />
<text  x="860.16" y="495.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (35 samples, 0.07%)</title><rect x="611.9" y="405" width="0.8" height="15.0" fill="rgb(224,76,12)" rx="2" ry="2" />
<text  x="614.85" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%)</title><rect x="150.7" y="197" width="0.1" height="15.0" fill="rgb(208,49,47)" rx="2" ry="2" />
<text  x="153.70" y="207.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (13 samples, 0.03%)</title><rect x="327.2" y="181" width="0.4" height="15.0" fill="rgb(237,205,20)" rx="2" ry="2" />
<text  x="330.25" y="191.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (9 samples, 0.02%)</title><rect x="1140.4" y="245" width="0.2" height="15.0" fill="rgb(243,222,32)" rx="2" ry="2" />
<text  x="1143.40" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="155.2" y="213" width="0.2" height="15.0" fill="rgb(225,177,51)" rx="2" ry="2" />
<text  x="158.19" y="223.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%)</title><rect x="238.6" y="181" width="0.7" height="15.0" fill="rgb(244,66,19)" rx="2" ry="2" />
<text  x="241.63" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (9 samples, 0.02%)</title><rect x="740.0" y="389" width="0.2" height="15.0" fill="rgb(238,158,49)" rx="2" ry="2" />
<text  x="742.96" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (13 samples, 0.03%)</title><rect x="239.6" y="229" width="0.3" height="15.0" fill="rgb(205,126,36)" rx="2" ry="2" />
<text  x="242.57" y="239.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (22 samples, 0.05%)</title><rect x="1121.4" y="389" width="0.6" height="15.0" fill="rgb(214,153,39)" rx="2" ry="2" />
<text  x="1124.41" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (44 samples, 0.09%)</title><rect x="1047.5" y="277" width="1.1" height="15.0" fill="rgb(235,178,4)" rx="2" ry="2" />
<text  x="1050.46" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="778.1" y="213" width="0.1" height="15.0" fill="rgb(216,165,19)" rx="2" ry="2" />
<text  x="781.12" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (16 samples, 0.03%)</title><rect x="673.3" y="453" width="0.4" height="15.0" fill="rgb(232,178,32)" rx="2" ry="2" />
<text  x="676.26" y="463.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (5 samples, 0.01%)</title><rect x="327.1" y="181" width="0.1" height="15.0" fill="rgb(244,195,6)" rx="2" ry="2" />
<text  x="330.12" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (64 samples, 0.14%)</title><rect x="742.5" y="405" width="1.6" height="15.0" fill="rgb(211,106,54)" rx="2" ry="2" />
<text  x="745.50" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="983.7" y="309" width="0.1" height="15.0" fill="rgb(242,54,30)" rx="2" ry="2" />
<text  x="986.71" y="319.5" ></text>
</g>
<g >
<title>row::external_memory_usage (15 samples, 0.03%)</title><rect x="206.2" y="165" width="0.4" height="15.0" fill="rgb(209,130,32)" rx="2" ry="2" />
<text  x="209.24" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="551.6" y="309" width="0.3" height="15.0" fill="rgb(243,66,28)" rx="2" ry="2" />
<text  x="554.63" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (24 samples, 0.05%)</title><rect x="941.2" y="405" width="0.6" height="15.0" fill="rgb(246,158,5)" rx="2" ry="2" />
<text  x="944.19" y="415.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="211.4" y="149" width="0.1" height="15.0" fill="rgb(228,135,12)" rx="2" ry="2" />
<text  x="214.38" y="159.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%)</title><rect x="275.2" y="293" width="1.2" height="15.0" fill="rgb(247,55,17)" rx="2" ry="2" />
<text  x="278.21" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (22 samples, 0.05%)</title><rect x="1098.6" y="309" width="0.5" height="15.0" fill="rgb(218,219,30)" rx="2" ry="2" />
<text  x="1101.57" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.18%)</title><rect x="542.0" y="325" width="2.1" height="15.0" fill="rgb(214,86,33)" rx="2" ry="2" />
<text  x="545.00" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (25 samples, 0.05%)</title><rect x="594.8" y="437" width="0.7" height="15.0" fill="rgb(213,4,48)" rx="2" ry="2" />
<text  x="597.82" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,933 samples, 12.66%)</title><rect x="956.9" y="389" width="149.4" height="15.0" fill="rgb(220,208,49)" rx="2" ry="2" />
<text  x="959.88" y="399.5" >service::storage_pr..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (10 samples, 0.02%)</title><rect x="25.1" y="517" width="0.2" height="15.0" fill="rgb(223,75,43)" rx="2" ry="2" />
<text  x="28.09" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (16 samples, 0.03%)</title><rect x="800.0" y="277" width="0.4" height="15.0" fill="rgb(238,109,17)" rx="2" ry="2" />
<text  x="803.03" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="648.0" y="453" width="0.2" height="15.0" fill="rgb(252,211,1)" rx="2" ry="2" />
<text  x="651.02" y="463.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (6 samples, 0.01%)</title><rect x="46.9" y="485" width="0.1" height="15.0" fill="rgb(230,46,44)" rx="2" ry="2" />
<text  x="49.85" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (81 samples, 0.17%)</title><rect x="981.7" y="309" width="2.0" height="15.0" fill="rgb(219,32,10)" rx="2" ry="2" />
<text  x="984.67" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::stats (35 samples, 0.07%)</title><rect x="485.0" y="309" width="0.9" height="15.0" fill="rgb(207,52,29)" rx="2" ry="2" />
<text  x="488.00" y="319.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (514 samples, 1.10%)</title><rect x="909.7" y="389" width="13.0" height="15.0" fill="rgb(235,159,11)" rx="2" ry="2" />
<text  x="912.73" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (77 samples, 0.16%)</title><rect x="507.2" y="245" width="2.0" height="15.0" fill="rgb(219,91,39)" rx="2" ry="2" />
<text  x="510.24" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (313 samples, 0.67%)</title><rect x="787.2" y="181" width="7.9" height="15.0" fill="rgb(238,41,37)" rx="2" ry="2" />
<text  x="790.21" y="191.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="551.4" y="277" width="0.1" height="15.0" fill="rgb(234,156,8)" rx="2" ry="2" />
<text  x="554.42" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (22 samples, 0.05%)</title><rect x="819.4" y="309" width="0.5" height="15.0" fill="rgb(212,23,22)" rx="2" ry="2" />
<text  x="822.38" y="319.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (21 samples, 0.04%)</title><rect x="10.4" y="581" width="0.5" height="15.0" fill="rgb(213,101,52)" rx="2" ry="2" />
<text  x="13.35" y="591.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (36 samples, 0.08%)</title><rect x="727.3" y="373" width="0.9" height="15.0" fill="rgb(246,173,8)" rx="2" ry="2" />
<text  x="730.31" y="383.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%)</title><rect x="950.5" y="389" width="0.2" height="15.0" fill="rgb(224,185,18)" rx="2" ry="2" />
<text  x="953.53" y="399.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (62 samples, 0.13%)</title><rect x="475.5" y="213" width="1.5" height="15.0" fill="rgb(221,113,43)" rx="2" ry="2" />
<text  x="478.46" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="1157.8" y="373" width="0.8" height="15.0" fill="rgb(249,25,1)" rx="2" ry="2" />
<text  x="1160.81" y="383.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,539 samples, 3.29%)</title><rect x="765.9" y="341" width="38.8" height="15.0" fill="rgb(248,10,46)" rx="2" ry="2" />
<text  x="768.90" y="351.5" >ser..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%)</title><rect x="942.5" y="373" width="0.2" height="15.0" fill="rgb(218,109,6)" rx="2" ry="2" />
<text  x="945.52" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1067.2" y="325" width="0.3" height="15.0" fill="rgb(219,77,49)" rx="2" ry="2" />
<text  x="1070.23" y="335.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="809.8" y="373" width="0.5" height="15.0" fill="rgb(238,194,11)" rx="2" ry="2" />
<text  x="812.83" y="383.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="23.3" y="485" width="0.1" height="15.0" fill="rgb(205,192,45)" rx="2" ry="2" />
<text  x="26.27" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (8 samples, 0.02%)</title><rect x="1154.5" y="453" width="0.2" height="15.0" fill="rgb(252,24,48)" rx="2" ry="2" />
<text  x="1157.48" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="73.7" y="453" width="0.1" height="15.0" fill="rgb(215,208,20)" rx="2" ry="2" />
<text  x="76.68" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (6 samples, 0.01%)</title><rect x="937.1" y="389" width="0.1" height="15.0" fill="rgb(220,215,28)" rx="2" ry="2" />
<text  x="940.08" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="629.9" y="485" width="0.2" height="15.0" fill="rgb(237,126,14)" rx="2" ry="2" />
<text  x="632.89" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="481.7" y="213" width="0.4" height="15.0" fill="rgb(217,49,25)" rx="2" ry="2" />
<text  x="484.70" y="223.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (5 samples, 0.01%)</title><rect x="764.5" y="357" width="0.2" height="15.0" fill="rgb(227,100,42)" rx="2" ry="2" />
<text  x="767.54" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (19 samples, 0.04%)</title><rect x="620.8" y="469" width="0.5" height="15.0" fill="rgb(233,53,52)" rx="2" ry="2" />
<text  x="623.79" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (48 samples, 0.10%)</title><rect x="815.3" y="309" width="1.2" height="15.0" fill="rgb(220,39,39)" rx="2" ry="2" />
<text  x="818.27" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="906.1" y="373" width="0.1" height="15.0" fill="rgb(254,110,50)" rx="2" ry="2" />
<text  x="909.10" y="383.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.01%)</title><rect x="944.7" y="341" width="0.1" height="15.0" fill="rgb(205,90,0)" rx="2" ry="2" />
<text  x="947.69" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (56 samples, 0.12%)</title><rect x="672.3" y="469" width="1.4" height="15.0" fill="rgb(225,16,48)" rx="2" ry="2" />
<text  x="675.25" y="479.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%)</title><rect x="436.2" y="245" width="1.1" height="15.0" fill="rgb(252,129,13)" rx="2" ry="2" />
<text  x="439.16" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="745.1" y="373" width="0.4" height="15.0" fill="rgb(219,146,29)" rx="2" ry="2" />
<text  x="748.15" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (104 samples, 0.22%)</title><rect x="824.2" y="437" width="2.6" height="15.0" fill="rgb(243,103,48)" rx="2" ry="2" />
<text  x="827.19" y="447.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="552.2" y="325" width="0.8" height="15.0" fill="rgb(221,45,0)" rx="2" ry="2" />
<text  x="555.15" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.03%)</title><rect x="599.0" y="437" width="0.3" height="15.0" fill="rgb(250,79,32)" rx="2" ry="2" />
<text  x="602.01" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="523.9" y="309" width="0.3" height="15.0" fill="rgb(219,18,3)" rx="2" ry="2" />
<text  x="526.92" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%)</title><rect x="508.5" y="229" width="0.2" height="15.0" fill="rgb(225,18,52)" rx="2" ry="2" />
<text  x="511.53" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (27 samples, 0.06%)</title><rect x="935.7" y="389" width="0.7" height="15.0" fill="rgb(224,143,53)" rx="2" ry="2" />
<text  x="938.67" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (9 samples, 0.02%)</title><rect x="392.1" y="197" width="0.3" height="15.0" fill="rgb(252,67,6)" rx="2" ry="2" />
<text  x="395.13" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (9 samples, 0.02%)</title><rect x="551.9" y="325" width="0.3" height="15.0" fill="rgb(250,119,6)" rx="2" ry="2" />
<text  x="554.93" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (4 samples, 0.01%)</title><rect x="929.2" y="357" width="0.1" height="15.0" fill="rgb(249,208,9)" rx="2" ry="2" />
<text  x="932.17" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="241.0" y="229" width="0.2" height="15.0" fill="rgb(211,198,30)" rx="2" ry="2" />
<text  x="244.03" y="239.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="487.6" y="293" width="0.9" height="15.0" fill="rgb(250,164,8)" rx="2" ry="2" />
<text  x="490.65" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (74 samples, 0.16%)</title><rect x="144.9" y="213" width="1.8" height="15.0" fill="rgb(214,69,0)" rx="2" ry="2" />
<text  x="147.88" y="223.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,640 samples, 9.90%)</title><rect x="417.6" y="421" width="116.8" height="15.0" fill="rgb(222,212,31)" rx="2" ry="2" />
<text  x="420.57" y="431.5" >query::querier..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="448.9" y="277" width="0.1" height="15.0" fill="rgb(227,139,28)" rx="2" ry="2" />
<text  x="451.93" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,061 samples, 10.80%)</title><rect x="283.2" y="357" width="127.5" height="15.0" fill="rgb(231,228,10)" rx="2" ry="2" />
<text  x="286.24" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.01%)</title><rect x="945.2" y="389" width="0.1" height="15.0" fill="rgb(254,55,25)" rx="2" ry="2" />
<text  x="948.17" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (443 samples, 0.95%)</title><rect x="689.3" y="469" width="11.2" height="15.0" fill="rgb(221,66,35)" rx="2" ry="2" />
<text  x="692.33" y="479.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (47 samples, 0.10%)</title><rect x="1096.6" y="309" width="1.2" height="15.0" fill="rgb(230,200,36)" rx="2" ry="2" />
<text  x="1099.58" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="448.5" y="277" width="0.2" height="15.0" fill="rgb(228,87,12)" rx="2" ry="2" />
<text  x="451.53" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (4 samples, 0.01%)</title><rect x="681.2" y="437" width="0.1" height="15.0" fill="rgb(246,133,39)" rx="2" ry="2" />
<text  x="684.19" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="938.9" y="357" width="0.1" height="15.0" fill="rgb(207,135,7)" rx="2" ry="2" />
<text  x="941.90" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (303 samples, 0.65%)</title><rect x="62.5" y="421" width="7.6" height="15.0" fill="rgb(207,176,2)" rx="2" ry="2" />
<text  x="65.52" y="431.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%)</title><rect x="1002.7" y="277" width="0.1" height="15.0" fill="rgb(219,11,39)" rx="2" ry="2" />
<text  x="1005.70" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (8 samples, 0.02%)</title><rect x="203.4" y="165" width="0.2" height="15.0" fill="rgb(251,217,47)" rx="2" ry="2" />
<text  x="206.45" y="175.5" ></text>
</g>
<g >
<title>operator delete (58 samples, 0.12%)</title><rect x="571.0" y="357" width="1.5" height="15.0" fill="rgb(251,0,2)" rx="2" ry="2" />
<text  x="574.02" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="597.7" y="437" width="0.1" height="15.0" fill="rgb(239,70,32)" rx="2" ry="2" />
<text  x="600.67" y="447.5" ></text>
</g>
<g >
<title>schema::get_partitioner (9 samples, 0.02%)</title><rect x="933.8" y="405" width="0.3" height="15.0" fill="rgb(210,13,22)" rx="2" ry="2" />
<text  x="936.83" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (21 samples, 0.04%)</title><rect x="107.2" y="373" width="0.5" height="15.0" fill="rgb(222,216,44)" rx="2" ry="2" />
<text  x="110.15" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="436.2" y="229" width="1.1" height="15.0" fill="rgb(250,193,33)" rx="2" ry="2" />
<text  x="439.19" y="239.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="884.9" y="277" width="0.7" height="15.0" fill="rgb(206,70,34)" rx="2" ry="2" />
<text  x="887.94" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (7 samples, 0.01%)</title><rect x="361.7" y="197" width="0.1" height="15.0" fill="rgb(213,185,4)" rx="2" ry="2" />
<text  x="364.65" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="691.0" y="453" width="0.1" height="15.0" fill="rgb(254,171,0)" rx="2" ry="2" />
<text  x="694.04" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (4 samples, 0.01%)</title><rect x="686.5" y="453" width="0.1" height="15.0" fill="rgb(219,218,14)" rx="2" ry="2" />
<text  x="689.46" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="308.2" y="165" width="0.1" height="15.0" fill="rgb(210,79,19)" rx="2" ry="2" />
<text  x="311.15" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.12%)</title><rect x="744.1" y="389" width="1.4" height="15.0" fill="rgb(231,134,48)" rx="2" ry="2" />
<text  x="747.12" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (323 samples, 0.69%)</title><rect x="394.0" y="229" width="8.1" height="15.0" fill="rgb(221,133,22)" rx="2" ry="2" />
<text  x="396.97" y="239.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="903.7" y="325" width="0.8" height="15.0" fill="rgb(209,206,8)" rx="2" ry="2" />
<text  x="906.66" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (30 samples, 0.06%)</title><rect x="67.6" y="389" width="0.7" height="15.0" fill="rgb(239,113,29)" rx="2" ry="2" />
<text  x="70.58" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="732.2" y="357" width="0.2" height="15.0" fill="rgb(253,93,46)" rx="2" ry="2" />
<text  x="735.23" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (47 samples, 0.10%)</title><rect x="898.9" y="309" width="1.2" height="15.0" fill="rgb(207,13,3)" rx="2" ry="2" />
<text  x="901.87" y="319.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (8 samples, 0.02%)</title><rect x="411.9" y="341" width="0.2" height="15.0" fill="rgb(214,117,18)" rx="2" ry="2" />
<text  x="414.93" y="351.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="675.4" y="261" width="0.1" height="15.0" fill="rgb(211,90,6)" rx="2" ry="2" />
<text  x="678.35" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (5 samples, 0.01%)</title><rect x="72.2" y="453" width="0.1" height="15.0" fill="rgb(208,205,2)" rx="2" ry="2" />
<text  x="75.16" y="463.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.15%)</title><rect x="1071.0" y="325" width="1.8" height="15.0" fill="rgb(248,229,41)" rx="2" ry="2" />
<text  x="1074.04" y="335.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (8 samples, 0.02%)</title><rect x="302.7" y="197" width="0.2" height="15.0" fill="rgb(232,166,9)" rx="2" ry="2" />
<text  x="305.71" y="207.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,661 samples, 5.68%)</title><rect x="451.1" y="341" width="67.0" height="15.0" fill="rgb(233,104,20)" rx="2" ry="2" />
<text  x="454.10" y="351.5" >memtabl..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="603.1" y="421" width="0.5" height="15.0" fill="rgb(242,228,49)" rx="2" ry="2" />
<text  x="606.14" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="585.2" y="389" width="0.2" height="15.0" fill="rgb(205,202,33)" rx="2" ry="2" />
<text  x="588.15" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (10 samples, 0.02%)</title><rect x="202.6" y="85" width="0.2" height="15.0" fill="rgb(220,50,25)" rx="2" ry="2" />
<text  x="205.57" y="95.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,499 samples, 7.47%)</title><rect x="299.6" y="229" width="88.2" height="15.0" fill="rgb(214,76,47)" rx="2" ry="2" />
<text  x="302.64" y="239.5" >compact_mu..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (8 samples, 0.02%)</title><rect x="1141.1" y="277" width="0.2" height="15.0" fill="rgb(212,131,46)" rx="2" ry="2" />
<text  x="1144.08" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (9 samples, 0.02%)</title><rect x="636.7" y="469" width="0.3" height="15.0" fill="rgb(247,66,35)" rx="2" ry="2" />
<text  x="639.74" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="545.9" y="421" width="0.3" height="15.0" fill="rgb(207,162,4)" rx="2" ry="2" />
<text  x="548.93" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (14 samples, 0.03%)</title><rect x="17.6" y="261" width="0.4" height="15.0" fill="rgb(205,10,43)" rx="2" ry="2" />
<text  x="20.63" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (21 samples, 0.04%)</title><rect x="629.3" y="485" width="0.5" height="15.0" fill="rgb(217,202,14)" rx="2" ry="2" />
<text  x="632.28" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="810.2" y="357" width="0.1" height="15.0" fill="rgb(217,171,8)" rx="2" ry="2" />
<text  x="813.16" y="367.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (24 samples, 0.05%)</title><rect x="1176.9" y="469" width="0.6" height="15.0" fill="rgb(238,95,31)" rx="2" ry="2" />
<text  x="1179.90" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (5 samples, 0.01%)</title><rect x="848.9" y="469" width="0.2" height="15.0" fill="rgb(245,42,43)" rx="2" ry="2" />
<text  x="851.95" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (12 samples, 0.03%)</title><rect x="529.9" y="341" width="0.3" height="15.0" fill="rgb(241,176,52)" rx="2" ry="2" />
<text  x="532.91" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type&gt; (5 samples, 0.01%)</title><rect x="963.9" y="373" width="0.1" height="15.0" fill="rgb(254,125,49)" rx="2" ry="2" />
<text  x="966.88" y="383.5" ></text>
</g>
<g >
<title>seastar::app_template::run (45,814 samples, 97.79%)</title><rect x="23.7" y="597" width="1154.0" height="15.0" fill="rgb(212,187,16)" rx="2" ry="2" />
<text  x="26.70" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.04%)</title><rect x="1109.0" y="389" width="0.4" height="15.0" fill="rgb(232,156,1)" rx="2" ry="2" />
<text  x="1111.99" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="389" width="1.0" height="15.0" fill="rgb(253,210,37)" rx="2" ry="2" />
<text  x="1143.98" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (14 samples, 0.03%)</title><rect x="694.4" y="405" width="0.3" height="15.0" fill="rgb(248,19,52)" rx="2" ry="2" />
<text  x="697.39" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1121.7" y="373" width="0.3" height="15.0" fill="rgb(237,83,0)" rx="2" ry="2" />
<text  x="1124.71" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (4 samples, 0.01%)</title><rect x="388.5" y="229" width="0.1" height="15.0" fill="rgb(250,219,12)" rx="2" ry="2" />
<text  x="391.46" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="603.4" y="389" width="0.2" height="15.0" fill="rgb(231,177,49)" rx="2" ry="2" />
<text  x="606.41" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="930.0" y="389" width="0.5" height="15.0" fill="rgb(208,152,19)" rx="2" ry="2" />
<text  x="933.01" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="253.2" y="309" width="0.2" height="15.0" fill="rgb(245,150,40)" rx="2" ry="2" />
<text  x="256.19" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (15 samples, 0.03%)</title><rect x="1036.5" y="229" width="0.4" height="15.0" fill="rgb(242,66,41)" rx="2" ry="2" />
<text  x="1039.48" y="239.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,590 samples, 5.53%)</title><rect x="754.8" y="405" width="65.3" height="15.0" fill="rgb(225,195,27)" rx="2" ry="2" />
<text  x="757.85" y="415.5" >service..</text>
</g>
<g >
<title>dht::tri_compare (20 samples, 0.04%)</title><rect x="1082.9" y="245" width="0.5" height="15.0" fill="rgb(251,141,46)" rx="2" ry="2" />
<text  x="1085.92" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.01%)</title><rect x="1174.7" y="501" width="0.1" height="15.0" fill="rgb(252,46,53)" rx="2" ry="2" />
<text  x="1177.69" y="511.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (96 samples, 0.20%)</title><rect x="12.8" y="581" width="2.4" height="15.0" fill="rgb(239,195,12)" rx="2" ry="2" />
<text  x="15.82" y="591.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (20 samples, 0.04%)</title><rect x="114.5" y="309" width="0.5" height="15.0" fill="rgb(252,190,43)" rx="2" ry="2" />
<text  x="117.53" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="754.1" y="373" width="0.1" height="15.0" fill="rgb(207,93,19)" rx="2" ry="2" />
<text  x="757.06" y="383.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%)</title><rect x="975.6" y="341" width="0.2" height="15.0" fill="rgb(231,71,18)" rx="2" ry="2" />
<text  x="978.62" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="598.4" y="421" width="0.1" height="15.0" fill="rgb(245,70,42)" rx="2" ry="2" />
<text  x="601.40" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (230 samples, 0.49%)</title><rect x="126.4" y="261" width="5.8" height="15.0" fill="rgb(205,154,11)" rx="2" ry="2" />
<text  x="129.40" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (34 samples, 0.07%)</title><rect x="1039.8" y="213" width="0.8" height="15.0" fill="rgb(237,176,46)" rx="2" ry="2" />
<text  x="1042.78" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="528.6" y="277" width="0.2" height="15.0" fill="rgb(220,109,20)" rx="2" ry="2" />
<text  x="531.55" y="287.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (4 samples, 0.01%)</title><rect x="70.9" y="453" width="0.1" height="15.0" fill="rgb(246,56,14)" rx="2" ry="2" />
<text  x="73.88" y="463.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%)</title><rect x="1052.7" y="277" width="0.1" height="15.0" fill="rgb(205,150,17)" rx="2" ry="2" />
<text  x="1055.72" y="287.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (8 samples, 0.02%)</title><rect x="1140.7" y="309" width="0.2" height="15.0" fill="rgb(247,10,47)" rx="2" ry="2" />
<text  x="1143.68" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (10 samples, 0.02%)</title><rect x="74.7" y="453" width="0.3" height="15.0" fill="rgb(212,75,22)" rx="2" ry="2" />
<text  x="77.73" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="840.7" y="389" width="0.1" height="15.0" fill="rgb(230,106,3)" rx="2" ry="2" />
<text  x="843.66" y="399.5" ></text>
</g>
<g >
<title>__tls_init (16 samples, 0.03%)</title><rect x="137.2" y="245" width="0.4" height="15.0" fill="rgb(244,197,52)" rx="2" ry="2" />
<text  x="140.18" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (8 samples, 0.02%)</title><rect x="524.2" y="309" width="0.2" height="15.0" fill="rgb(230,44,28)" rx="2" ry="2" />
<text  x="527.17" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (10 samples, 0.02%)</title><rect x="983.4" y="293" width="0.3" height="15.0" fill="rgb(237,138,32)" rx="2" ry="2" />
<text  x="986.43" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (28 samples, 0.06%)</title><rect x="857.2" y="437" width="0.7" height="15.0" fill="rgb(253,174,29)" rx="2" ry="2" />
<text  x="860.19" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="639.9" y="437" width="0.1" height="15.0" fill="rgb(243,178,38)" rx="2" ry="2" />
<text  x="642.86" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="387.5" y="181" width="0.1" height="15.0" fill="rgb(225,147,34)" rx="2" ry="2" />
<text  x="390.47" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (511 samples, 1.09%)</title><rect x="174.4" y="101" width="12.8" height="15.0" fill="rgb(213,111,32)" rx="2" ry="2" />
<text  x="177.35" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (103 samples, 0.22%)</title><rect x="937.2" y="389" width="2.6" height="15.0" fill="rgb(207,142,22)" rx="2" ry="2" />
<text  x="940.23" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.03%)</title><rect x="857.5" y="389" width="0.3" height="15.0" fill="rgb(254,8,15)" rx="2" ry="2" />
<text  x="860.51" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="453" width="0.8" height="15.0" fill="rgb(240,199,39)" rx="2" ry="2" />
<text  x="1143.23" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="567.3" y="357" width="0.1" height="15.0" fill="rgb(220,220,11)" rx="2" ry="2" />
<text  x="570.34" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%)</title><rect x="638.3" y="405" width="0.2" height="15.0" fill="rgb(230,187,38)" rx="2" ry="2" />
<text  x="641.35" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (28 samples, 0.06%)</title><rect x="857.2" y="421" width="0.7" height="15.0" fill="rgb(239,63,17)" rx="2" ry="2" />
<text  x="860.19" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (12 samples, 0.03%)</title><rect x="1060.6" y="341" width="0.3" height="15.0" fill="rgb(250,168,46)" rx="2" ry="2" />
<text  x="1063.56" y="351.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (66 samples, 0.14%)</title><rect x="851.0" y="469" width="1.7" height="15.0" fill="rgb(254,83,8)" rx="2" ry="2" />
<text  x="854.04" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (8 samples, 0.02%)</title><rect x="20.4" y="277" width="0.2" height="15.0" fill="rgb(251,122,29)" rx="2" ry="2" />
<text  x="23.38" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="1051.9" y="197" width="0.5" height="15.0" fill="rgb(251,7,0)" rx="2" ry="2" />
<text  x="1054.94" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (44 samples, 0.09%)</title><rect x="382.5" y="165" width="1.1" height="15.0" fill="rgb(230,144,18)" rx="2" ry="2" />
<text  x="385.51" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="874.1" y="405" width="0.1" height="15.0" fill="rgb(245,229,9)" rx="2" ry="2" />
<text  x="877.09" y="415.5" ></text>
</g>
<g >
<title>std::type_info::operator== (11 samples, 0.02%)</title><rect x="1076.6" y="277" width="0.3" height="15.0" fill="rgb(235,155,48)" rx="2" ry="2" />
<text  x="1079.60" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (17 samples, 0.04%)</title><rect x="1099.1" y="309" width="0.4" height="15.0" fill="rgb(239,115,37)" rx="2" ry="2" />
<text  x="1102.12" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (84 samples, 0.18%)</title><rect x="610.8" y="437" width="2.1" height="15.0" fill="rgb(222,27,25)" rx="2" ry="2" />
<text  x="613.77" y="447.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (10 samples, 0.02%)</title><rect x="16.1" y="501" width="0.3" height="15.0" fill="rgb(237,23,4)" rx="2" ry="2" />
<text  x="19.12" y="511.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="660.0" y="469" width="0.5" height="15.0" fill="rgb(208,99,49)" rx="2" ry="2" />
<text  x="662.99" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (151 samples, 0.32%)</title><rect x="805.4" y="357" width="3.9" height="15.0" fill="rgb(222,65,5)" rx="2" ry="2" />
<text  x="808.45" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="953.5" y="373" width="0.7" height="15.0" fill="rgb(235,150,12)" rx="2" ry="2" />
<text  x="956.46" y="383.5" ></text>
</g>
<g >
<title>antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::CommonToken (4 samples, 0.01%)</title><rect x="17.0" y="213" width="0.1" height="15.0" fill="rgb(247,205,36)" rx="2" ry="2" />
<text  x="20.03" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1147.9" y="469" width="0.2" height="15.0" fill="rgb(243,136,14)" rx="2" ry="2" />
<text  x="1150.94" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="343.8" y="149" width="0.3" height="15.0" fill="rgb(231,48,6)" rx="2" ry="2" />
<text  x="346.85" y="159.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (14 samples, 0.03%)</title><rect x="1027.4" y="197" width="0.4" height="15.0" fill="rgb(209,65,23)" rx="2" ry="2" />
<text  x="1030.43" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="757.9" y="341" width="0.8" height="15.0" fill="rgb(213,201,0)" rx="2" ry="2" />
<text  x="760.89" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="421" width="0.8" height="15.0" fill="rgb(214,163,52)" rx="2" ry="2" />
<text  x="1143.23" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (11 samples, 0.02%)</title><rect x="257.0" y="341" width="0.3" height="15.0" fill="rgb(222,102,32)" rx="2" ry="2" />
<text  x="260.00" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (14 samples, 0.03%)</title><rect x="364.3" y="197" width="0.4" height="15.0" fill="rgb(235,192,47)" rx="2" ry="2" />
<text  x="367.32" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="507.5" y="229" width="0.2" height="15.0" fill="rgb(249,200,12)" rx="2" ry="2" />
<text  x="510.50" y="239.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (9 samples, 0.02%)</title><rect x="827.8" y="437" width="0.2" height="15.0" fill="rgb(235,32,49)" rx="2" ry="2" />
<text  x="830.82" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,465 samples, 5.26%)</title><rect x="994.2" y="325" width="62.1" height="15.0" fill="rgb(227,35,43)" rx="2" ry="2" />
<text  x="997.19" y="335.5" >servic..</text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (4 samples, 0.01%)</title><rect x="16.4" y="469" width="0.1" height="15.0" fill="rgb(210,30,43)" rx="2" ry="2" />
<text  x="19.42" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (18 samples, 0.04%)</title><rect x="60.2" y="421" width="0.5" height="15.0" fill="rgb(251,224,36)" rx="2" ry="2" />
<text  x="63.20" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (56 samples, 0.12%)</title><rect x="1108.1" y="405" width="1.4" height="15.0" fill="rgb(245,171,8)" rx="2" ry="2" />
<text  x="1111.06" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (109 samples, 0.23%)</title><rect x="606.9" y="405" width="2.8" height="15.0" fill="rgb(249,103,49)" rx="2" ry="2" />
<text  x="609.94" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="610.0" y="437" width="0.1" height="15.0" fill="rgb(236,195,20)" rx="2" ry="2" />
<text  x="613.01" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%)</title><rect x="1106.9" y="373" width="0.1" height="15.0" fill="rgb(210,128,45)" rx="2" ry="2" />
<text  x="1109.93" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (21 samples, 0.04%)</title><rect x="353.1" y="149" width="0.5" height="15.0" fill="rgb(251,221,27)" rx="2" ry="2" />
<text  x="356.09" y="159.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (18 samples, 0.04%)</title><rect x="1119.6" y="357" width="0.5" height="15.0" fill="rgb(238,56,8)" rx="2" ry="2" />
<text  x="1122.65" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (36 samples, 0.08%)</title><rect x="212.3" y="181" width="0.9" height="15.0" fill="rgb(247,181,42)" rx="2" ry="2" />
<text  x="215.34" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (535 samples, 1.14%)</title><rect x="882.6" y="309" width="13.5" height="15.0" fill="rgb(213,139,3)" rx="2" ry="2" />
<text  x="885.60" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1069.8" y="341" width="0.2" height="15.0" fill="rgb(240,214,26)" rx="2" ry="2" />
<text  x="1072.75" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (6 samples, 0.01%)</title><rect x="1163.0" y="469" width="0.2" height="15.0" fill="rgb(247,162,21)" rx="2" ry="2" />
<text  x="1166.02" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (6 samples, 0.01%)</title><rect x="673.7" y="485" width="0.2" height="15.0" fill="rgb(221,99,33)" rx="2" ry="2" />
<text  x="676.71" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%)</title><rect x="312.5" y="149" width="0.2" height="15.0" fill="rgb(232,30,11)" rx="2" ry="2" />
<text  x="315.54" y="159.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.19%)</title><rect x="960.7" y="373" width="2.3" height="15.0" fill="rgb(211,110,2)" rx="2" ry="2" />
<text  x="963.74" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="280.2" y="389" width="0.2" height="15.0" fill="rgb(244,145,43)" rx="2" ry="2" />
<text  x="283.25" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (7 samples, 0.01%)</title><rect x="66.1" y="389" width="0.2" height="15.0" fill="rgb(220,97,50)" rx="2" ry="2" />
<text  x="69.09" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (4 samples, 0.01%)</title><rect x="600.7" y="437" width="0.1" height="15.0" fill="rgb(242,135,4)" rx="2" ry="2" />
<text  x="603.74" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (45 samples, 0.10%)</title><rect x="487.4" y="309" width="1.2" height="15.0" fill="rgb(215,84,6)" rx="2" ry="2" />
<text  x="490.45" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="548.7" y="357" width="0.1" height="15.0" fill="rgb(224,189,38)" rx="2" ry="2" />
<text  x="551.68" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (14 samples, 0.03%)</title><rect x="856.3" y="389" width="0.3" height="15.0" fill="rgb(231,96,47)" rx="2" ry="2" />
<text  x="859.25" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="893.4" y="261" width="0.1" height="15.0" fill="rgb(222,60,5)" rx="2" ry="2" />
<text  x="896.38" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (31 samples, 0.07%)</title><rect x="1106.6" y="389" width="0.8" height="15.0" fill="rgb(247,182,34)" rx="2" ry="2" />
<text  x="1109.63" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (4 samples, 0.01%)</title><rect x="598.9" y="405" width="0.1" height="15.0" fill="rgb(224,109,3)" rx="2" ry="2" />
<text  x="601.88" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (16 samples, 0.03%)</title><rect x="560.9" y="277" width="0.4" height="15.0" fill="rgb(251,115,39)" rx="2" ry="2" />
<text  x="563.92" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (39 samples, 0.08%)</title><rect x="675.0" y="485" width="1.0" height="15.0" fill="rgb(209,94,25)" rx="2" ry="2" />
<text  x="678.05" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (73 samples, 0.16%)</title><rect x="729.3" y="357" width="1.8" height="15.0" fill="rgb(225,103,18)" rx="2" ry="2" />
<text  x="732.25" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (12 samples, 0.03%)</title><rect x="882.1" y="309" width="0.3" height="15.0" fill="rgb(215,39,9)" rx="2" ry="2" />
<text  x="885.15" y="319.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (5 samples, 0.01%)</title><rect x="1141.1" y="229" width="0.2" height="15.0" fill="rgb(228,187,24)" rx="2" ry="2" />
<text  x="1144.13" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="828.4" y="437" width="0.1" height="15.0" fill="rgb(225,36,7)" rx="2" ry="2" />
<text  x="831.37" y="447.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="556.8" y="293" width="0.2" height="15.0" fill="rgb(205,14,27)" rx="2" ry="2" />
<text  x="559.81" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="602.0" y="437" width="0.2" height="15.0" fill="rgb(209,177,52)" rx="2" ry="2" />
<text  x="605.03" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (44 samples, 0.09%)</title><rect x="1161.4" y="453" width="1.1" height="15.0" fill="rgb(221,19,40)" rx="2" ry="2" />
<text  x="1164.39" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (17 samples, 0.04%)</title><rect x="500.3" y="229" width="0.4" height="15.0" fill="rgb(252,40,34)" rx="2" ry="2" />
<text  x="503.27" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="584.8" y="373" width="0.3" height="15.0" fill="rgb(228,169,20)" rx="2" ry="2" />
<text  x="587.82" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="136.6" y="261" width="0.2" height="15.0" fill="rgb(249,180,41)" rx="2" ry="2" />
<text  x="139.60" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="771.5" y="293" width="0.2" height="15.0" fill="rgb(253,151,40)" rx="2" ry="2" />
<text  x="774.55" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (33 samples, 0.07%)</title><rect x="646.8" y="485" width="0.8" height="15.0" fill="rgb(206,43,46)" rx="2" ry="2" />
<text  x="649.79" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (23 samples, 0.05%)</title><rect x="224.5" y="229" width="0.6" height="15.0" fill="rgb(247,29,47)" rx="2" ry="2" />
<text  x="227.50" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,913 samples, 8.35%)</title><rect x="294.1" y="261" width="98.5" height="15.0" fill="rgb(250,158,24)" rx="2" ry="2" />
<text  x="297.07" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (508 samples, 1.08%)</title><rect x="227.4" y="245" width="12.8" height="15.0" fill="rgb(216,117,12)" rx="2" ry="2" />
<text  x="230.40" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%)</title><rect x="142.6" y="197" width="0.1" height="15.0" fill="rgb(239,2,46)" rx="2" ry="2" />
<text  x="145.64" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (183 samples, 0.39%)</title><rect x="716.6" y="373" width="4.6" height="15.0" fill="rgb(213,172,35)" rx="2" ry="2" />
<text  x="719.61" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (11 samples, 0.02%)</title><rect x="954.2" y="405" width="0.3" height="15.0" fill="rgb(239,98,10)" rx="2" ry="2" />
<text  x="957.21" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="262.4" y="341" width="0.2" height="15.0" fill="rgb(214,40,52)" rx="2" ry="2" />
<text  x="265.41" y="351.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (4 samples, 0.01%)</title><rect x="22.9" y="421" width="0.1" height="15.0" fill="rgb(227,202,48)" rx="2" ry="2" />
<text  x="25.87" y="431.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="220.9" y="197" width="0.2" height="15.0" fill="rgb(254,154,50)" rx="2" ry="2" />
<text  x="223.93" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (166 samples, 0.35%)</title><rect x="995.2" y="309" width="4.2" height="15.0" fill="rgb(252,151,18)" rx="2" ry="2" />
<text  x="998.19" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (43 samples, 0.09%)</title><rect x="1157.5" y="405" width="1.1" height="15.0" fill="rgb(221,52,45)" rx="2" ry="2" />
<text  x="1160.53" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,482 samples, 11.70%)</title><rect x="710.6" y="469" width="138.1" height="15.0" fill="rgb(218,159,18)" rx="2" ry="2" />
<text  x="713.59" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (21 samples, 0.04%)</title><rect x="839.5" y="341" width="0.5" height="15.0" fill="rgb(212,87,43)" rx="2" ry="2" />
<text  x="842.45" y="351.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="970.0" y="357" width="1.9" height="15.0" fill="rgb(215,49,8)" rx="2" ry="2" />
<text  x="973.00" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (202 samples, 0.43%)</title><rect x="16.9" y="421" width="5.1" height="15.0" fill="rgb(228,90,22)" rx="2" ry="2" />
<text  x="19.90" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (105 samples, 0.22%)</title><rect x="981.3" y="325" width="2.7" height="15.0" fill="rgb(224,12,42)" rx="2" ry="2" />
<text  x="984.34" y="335.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (144 samples, 0.31%)</title><rect x="837.4" y="421" width="3.6" height="15.0" fill="rgb(225,127,23)" rx="2" ry="2" />
<text  x="840.36" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (10 samples, 0.02%)</title><rect x="617.7" y="485" width="0.2" height="15.0" fill="rgb(210,24,32)" rx="2" ry="2" />
<text  x="620.69" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (74 samples, 0.16%)</title><rect x="303.4" y="181" width="1.9" height="15.0" fill="rgb(217,83,32)" rx="2" ry="2" />
<text  x="306.44" y="191.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (166 samples, 0.35%)</title><rect x="925.2" y="389" width="4.2" height="15.0" fill="rgb(238,33,32)" rx="2" ry="2" />
<text  x="928.22" y="399.5" ></text>
</g>
<g >
<title>frozen_schema::unfreeze (4 samples, 0.01%)</title><rect x="47.2" y="421" width="0.1" height="15.0" fill="rgb(212,106,15)" rx="2" ry="2" />
<text  x="50.23" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (37 samples, 0.08%)</title><rect x="924.2" y="357" width="0.9" height="15.0" fill="rgb(249,13,1)" rx="2" ry="2" />
<text  x="927.19" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (9 samples, 0.02%)</title><rect x="430.6" y="309" width="0.2" height="15.0" fill="rgb(237,99,15)" rx="2" ry="2" />
<text  x="433.62" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1032.2" y="117" width="0.2" height="15.0" fill="rgb(245,68,53)" rx="2" ry="2" />
<text  x="1035.25" y="127.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (292 samples, 0.62%)</title><rect x="15.9" y="597" width="7.3" height="15.0" fill="rgb(243,35,21)" rx="2" ry="2" />
<text  x="18.89" y="607.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (27 samples, 0.06%)</title><rect x="458.4" y="277" width="0.7" height="15.0" fill="rgb(212,212,32)" rx="2" ry="2" />
<text  x="461.38" y="287.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.02%)</title><rect x="659.5" y="469" width="0.2" height="15.0" fill="rgb(248,80,47)" rx="2" ry="2" />
<text  x="662.48" y="479.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (7 samples, 0.01%)</title><rect x="61.7" y="453" width="0.2" height="15.0" fill="rgb(215,120,5)" rx="2" ry="2" />
<text  x="64.71" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (20 samples, 0.04%)</title><rect x="963.4" y="373" width="0.5" height="15.0" fill="rgb(222,168,39)" rx="2" ry="2" />
<text  x="966.38" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="53.2" y="469" width="0.4" height="15.0" fill="rgb(205,26,41)" rx="2" ry="2" />
<text  x="56.20" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="645.6" y="469" width="0.2" height="15.0" fill="rgb(247,98,48)" rx="2" ry="2" />
<text  x="648.60" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="163.1" y="133" width="0.2" height="15.0" fill="rgb(240,156,2)" rx="2" ry="2" />
<text  x="166.12" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (16 samples, 0.03%)</title><rect x="285.2" y="293" width="0.4" height="15.0" fill="rgb(230,107,25)" rx="2" ry="2" />
<text  x="288.16" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="694.1" y="421" width="0.1" height="15.0" fill="rgb(244,206,33)" rx="2" ry="2" />
<text  x="697.14" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,313 samples, 4.94%)</title><rect x="155.6" y="213" width="58.3" height="15.0" fill="rgb(205,182,2)" rx="2" ry="2" />
<text  x="158.64" y="223.5" >logall..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,849 samples, 14.62%)</title><rect x="106.1" y="389" width="172.6" height="15.0" fill="rgb(207,132,46)" rx="2" ry="2" />
<text  x="109.14" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (60 samples, 0.13%)</title><rect x="484.4" y="325" width="1.5" height="15.0" fill="rgb(253,15,29)" rx="2" ry="2" />
<text  x="487.37" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (121 samples, 0.26%)</title><rect x="995.8" y="277" width="3.1" height="15.0" fill="rgb(224,181,30)" rx="2" ry="2" />
<text  x="998.85" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="35.0" y="485" width="0.1" height="15.0" fill="rgb(216,71,37)" rx="2" ry="2" />
<text  x="38.01" y="495.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (24 samples, 0.05%)</title><rect x="735.8" y="293" width="0.6" height="15.0" fill="rgb(205,41,35)" rx="2" ry="2" />
<text  x="738.78" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (18 samples, 0.04%)</title><rect x="615.0" y="389" width="0.4" height="15.0" fill="rgb(239,164,16)" rx="2" ry="2" />
<text  x="617.97" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (8 samples, 0.02%)</title><rect x="1099.7" y="325" width="0.2" height="15.0" fill="rgb(222,202,2)" rx="2" ry="2" />
<text  x="1102.67" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="983.8" y="309" width="0.2" height="15.0" fill="rgb(233,184,19)" rx="2" ry="2" />
<text  x="986.83" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (12 samples, 0.03%)</title><rect x="1115.6" y="373" width="0.3" height="15.0" fill="rgb(250,205,48)" rx="2" ry="2" />
<text  x="1118.62" y="383.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="32.7" y="485" width="0.8" height="15.0" fill="rgb(244,46,4)" rx="2" ry="2" />
<text  x="35.75" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="784.1" y="213" width="0.1" height="15.0" fill="rgb(242,37,10)" rx="2" ry="2" />
<text  x="787.09" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (8 samples, 0.02%)</title><rect x="24.0" y="517" width="0.2" height="15.0" fill="rgb(245,143,33)" rx="2" ry="2" />
<text  x="27.03" y="527.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%)</title><rect x="17.0" y="229" width="0.1" height="15.0" fill="rgb(210,185,51)" rx="2" ry="2" />
<text  x="20.03" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="896.1" y="325" width="0.2" height="15.0" fill="rgb(217,183,5)" rx="2" ry="2" />
<text  x="899.13" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="40.5" y="437" width="0.4" height="15.0" fill="rgb(251,18,38)" rx="2" ry="2" />
<text  x="43.53" y="447.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (4 samples, 0.01%)</title><rect x="23.3" y="453" width="0.1" height="15.0" fill="rgb(248,3,54)" rx="2" ry="2" />
<text  x="26.32" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="630.1" y="485" width="0.5" height="15.0" fill="rgb(236,118,27)" rx="2" ry="2" />
<text  x="633.14" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (15 samples, 0.03%)</title><rect x="951.5" y="341" width="0.4" height="15.0" fill="rgb(224,95,27)" rx="2" ry="2" />
<text  x="954.49" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="964.8" y="373" width="0.1" height="15.0" fill="rgb(251,118,9)" rx="2" ry="2" />
<text  x="967.79" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="964.1" y="373" width="0.2" height="15.0" fill="rgb(206,3,5)" rx="2" ry="2" />
<text  x="967.09" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="514.2" y="261" width="0.8" height="15.0" fill="rgb(254,208,24)" rx="2" ry="2" />
<text  x="517.20" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (287 samples, 0.61%)</title><rect x="569.2" y="373" width="7.3" height="15.0" fill="rgb(244,120,48)" rx="2" ry="2" />
<text  x="572.23" y="383.5" ></text>
</g>
<g >
<title>main (45,814 samples, 97.79%)</title><rect x="23.7" y="613" width="1154.0" height="15.0" fill="rgb(235,203,45)" rx="2" ry="2" />
<text  x="26.70" y="623.5" >main</text>
</g>
<g >
<title>operator new (58 samples, 0.12%)</title><rect x="1159.0" y="437" width="1.5" height="15.0" fill="rgb(214,182,46)" rx="2" ry="2" />
<text  x="1162.04" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="777.2" y="229" width="0.2" height="15.0" fill="rgb(244,75,13)" rx="2" ry="2" />
<text  x="780.24" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,539 samples, 11.82%)</title><rect x="965.0" y="373" width="139.5" height="15.0" fill="rgb(231,178,3)" rx="2" ry="2" />
<text  x="968.02" y="383.5" >service::storage_..</text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (43 samples, 0.09%)</title><rect x="767.8" y="309" width="1.1" height="15.0" fill="rgb(220,88,40)" rx="2" ry="2" />
<text  x="770.82" y="319.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (15 samples, 0.03%)</title><rect x="1140.3" y="309" width="0.4" height="15.0" fill="rgb(242,29,0)" rx="2" ry="2" />
<text  x="1143.30" y="319.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="902.3" y="357" width="0.8" height="15.0" fill="rgb(243,171,23)" rx="2" ry="2" />
<text  x="905.27" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="624.4" y="485" width="0.2" height="15.0" fill="rgb(222,221,15)" rx="2" ry="2" />
<text  x="627.37" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (5 samples, 0.01%)</title><rect x="483.2" y="325" width="0.1" height="15.0" fill="rgb(215,149,19)" rx="2" ry="2" />
<text  x="486.19" y="335.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (4 samples, 0.01%)</title><rect x="578.5" y="405" width="0.1" height="15.0" fill="rgb(247,45,45)" rx="2" ry="2" />
<text  x="581.50" y="415.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%)</title><rect x="17.0" y="293" width="0.2" height="15.0" fill="rgb(243,102,22)" rx="2" ry="2" />
<text  x="20.00" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (10 samples, 0.02%)</title><rect x="502.9" y="213" width="0.3" height="15.0" fill="rgb(225,110,47)" rx="2" ry="2" />
<text  x="505.91" y="223.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (109 samples, 0.23%)</title><rect x="898.1" y="341" width="2.8" height="15.0" fill="rgb(225,200,17)" rx="2" ry="2" />
<text  x="901.14" y="351.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (356 samples, 0.76%)</title><rect x="520.0" y="325" width="9.0" height="15.0" fill="rgb(218,65,40)" rx="2" ry="2" />
<text  x="523.01" y="335.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (117 samples, 0.25%)</title><rect x="1029.5" y="165" width="2.9" height="15.0" fill="rgb(230,148,45)" rx="2" ry="2" />
<text  x="1032.47" y="175.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (82 samples, 0.18%)</title><rect x="129.4" y="245" width="2.1" height="15.0" fill="rgb(231,106,39)" rx="2" ry="2" />
<text  x="132.39" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="128.2" y="245" width="0.1" height="15.0" fill="rgb(243,68,9)" rx="2" ry="2" />
<text  x="131.23" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="931.5" y="373" width="0.3" height="15.0" fill="rgb(248,193,6)" rx="2" ry="2" />
<text  x="934.54" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="747.5" y="341" width="0.1" height="15.0" fill="rgb(252,141,35)" rx="2" ry="2" />
<text  x="750.49" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (26 samples, 0.06%)</title><rect x="739.5" y="405" width="0.7" height="15.0" fill="rgb(234,123,22)" rx="2" ry="2" />
<text  x="742.53" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (5 samples, 0.01%)</title><rect x="617.0" y="437" width="0.1" height="15.0" fill="rgb(251,18,13)" rx="2" ry="2" />
<text  x="620.01" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (45,636 samples, 97.41%)</title><rect x="26.6" y="517" width="1149.5" height="15.0" fill="rgb(211,161,7)" rx="2" ry="2" />
<text  x="29.62" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>compact_mutation_state&lt; (415 samples, 0.89%)</title><rect x="302.5" y="213" width="10.5" height="15.0" fill="rgb(231,167,20)" rx="2" ry="2" />
<text  x="305.51" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="134.5" y="277" width="0.2" height="15.0" fill="rgb(227,224,49)" rx="2" ry="2" />
<text  x="137.51" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%)</title><rect x="23.4" y="485" width="0.2" height="15.0" fill="rgb(237,24,54)" rx="2" ry="2" />
<text  x="26.43" y="495.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (21 samples, 0.04%)</title><rect x="1052.8" y="277" width="0.6" height="15.0" fill="rgb(232,18,17)" rx="2" ry="2" />
<text  x="1055.82" y="287.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (11 samples, 0.02%)</title><rect x="199.7" y="117" width="0.3" height="15.0" fill="rgb(205,106,16)" rx="2" ry="2" />
<text  x="202.69" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="825.4" y="389" width="0.2" height="15.0" fill="rgb(220,189,12)" rx="2" ry="2" />
<text  x="828.42" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="624.1" y="469" width="0.1" height="15.0" fill="rgb(221,53,19)" rx="2" ry="2" />
<text  x="627.09" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="665.4" y="485" width="0.2" height="15.0" fill="rgb(225,168,41)" rx="2" ry="2" />
<text  x="668.38" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="581.9" y="389" width="0.1" height="15.0" fill="rgb(229,82,11)" rx="2" ry="2" />
<text  x="584.88" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (10 samples, 0.02%)</title><rect x="853.2" y="485" width="0.3" height="15.0" fill="rgb(213,52,35)" rx="2" ry="2" />
<text  x="856.23" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1120.0" y="341" width="0.1" height="15.0" fill="rgb(248,203,0)" rx="2" ry="2" />
<text  x="1122.98" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (13 samples, 0.03%)</title><rect x="833.8" y="341" width="0.3" height="15.0" fill="rgb(237,132,0)" rx="2" ry="2" />
<text  x="836.76" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (25 samples, 0.05%)</title><rect x="1064.9" y="277" width="0.6" height="15.0" fill="rgb(223,26,5)" rx="2" ry="2" />
<text  x="1067.86" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (23 samples, 0.05%)</title><rect x="433.8" y="261" width="0.5" height="15.0" fill="rgb(206,183,29)" rx="2" ry="2" />
<text  x="436.77" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1050.9" y="213" width="0.4" height="15.0" fill="rgb(252,169,33)" rx="2" ry="2" />
<text  x="1053.86" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%)</title><rect x="757.4" y="357" width="0.1" height="15.0" fill="rgb(253,44,41)" rx="2" ry="2" />
<text  x="760.36" y="367.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="146.0" y="181" width="0.6" height="15.0" fill="rgb(243,0,48)" rx="2" ry="2" />
<text  x="148.97" y="191.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (49 samples, 0.10%)</title><rect x="1163.2" y="469" width="1.3" height="15.0" fill="rgb(207,21,35)" rx="2" ry="2" />
<text  x="1166.25" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (23 samples, 0.05%)</title><rect x="643.0" y="469" width="0.6" height="15.0" fill="rgb(224,161,6)" rx="2" ry="2" />
<text  x="646.03" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%)</title><rect x="278.1" y="357" width="0.4" height="15.0" fill="rgb(225,198,5)" rx="2" ry="2" />
<text  x="281.05" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (4 samples, 0.01%)</title><rect x="532.1" y="373" width="0.1" height="15.0" fill="rgb(215,121,32)" rx="2" ry="2" />
<text  x="535.05" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="437" width="0.8" height="15.0" fill="rgb(208,155,22)" rx="2" ry="2" />
<text  x="1143.23" y="447.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (266 samples, 0.57%)</title><rect x="916.0" y="373" width="6.7" height="15.0" fill="rgb(226,102,25)" rx="2" ry="2" />
<text  x="918.98" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (12 samples, 0.03%)</title><rect x="232.2" y="213" width="0.3" height="15.0" fill="rgb(223,186,4)" rx="2" ry="2" />
<text  x="235.19" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (32 samples, 0.07%)</title><rect x="595.8" y="437" width="0.8" height="15.0" fill="rgb(250,80,35)" rx="2" ry="2" />
<text  x="598.76" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (574 samples, 1.23%)</title><rect x="687.0" y="501" width="14.5" height="15.0" fill="rgb(245,22,29)" rx="2" ry="2" />
<text  x="690.04" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (9 samples, 0.02%)</title><rect x="415.7" y="389" width="0.3" height="15.0" fill="rgb(225,138,43)" rx="2" ry="2" />
<text  x="418.73" y="399.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="483.7" y="309" width="0.2" height="15.0" fill="rgb(226,77,36)" rx="2" ry="2" />
<text  x="486.69" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="293.8" y="245" width="0.2" height="15.0" fill="rgb(210,90,24)" rx="2" ry="2" />
<text  x="296.77" y="255.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%)</title><rect x="595.2" y="421" width="0.2" height="15.0" fill="rgb(246,201,50)" rx="2" ry="2" />
<text  x="598.15" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="757.8" y="341" width="0.1" height="15.0" fill="rgb(222,144,10)" rx="2" ry="2" />
<text  x="760.77" y="351.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (51 samples, 0.11%)</title><rect x="1176.3" y="517" width="1.3" height="15.0" fill="rgb(222,124,33)" rx="2" ry="2" />
<text  x="1179.32" y="527.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (64 samples, 0.14%)</title><rect x="233.3" y="181" width="1.7" height="15.0" fill="rgb(246,8,54)" rx="2" ry="2" />
<text  x="236.35" y="191.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (59 samples, 0.13%)</title><rect x="522.2" y="293" width="1.4" height="15.0" fill="rgb(213,93,20)" rx="2" ry="2" />
<text  x="525.16" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (15 samples, 0.03%)</title><rect x="67.9" y="373" width="0.4" height="15.0" fill="rgb(234,19,3)" rx="2" ry="2" />
<text  x="70.91" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="144.8" y="197" width="0.1" height="15.0" fill="rgb(212,192,20)" rx="2" ry="2" />
<text  x="147.76" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::clear (7 samples, 0.01%)</title><rect x="597.9" y="437" width="0.1" height="15.0" fill="rgb(218,73,49)" rx="2" ry="2" />
<text  x="600.87" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="238.6" y="165" width="0.7" height="15.0" fill="rgb(243,150,2)" rx="2" ry="2" />
<text  x="241.63" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (61 samples, 0.13%)</title><rect x="825.0" y="405" width="1.6" height="15.0" fill="rgb(222,127,19)" rx="2" ry="2" />
<text  x="828.05" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="1141.3" y="261" width="0.6" height="15.0" fill="rgb(213,169,5)" rx="2" ry="2" />
<text  x="1144.29" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="565.2" y="325" width="0.1" height="15.0" fill="rgb(246,68,11)" rx="2" ry="2" />
<text  x="568.23" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="734.7" y="277" width="0.1" height="15.0" fill="rgb(241,13,49)" rx="2" ry="2" />
<text  x="737.72" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (22 samples, 0.05%)</title><rect x="60.7" y="421" width="0.5" height="15.0" fill="rgb(210,2,0)" rx="2" ry="2" />
<text  x="63.68" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (41 samples, 0.09%)</title><rect x="236.3" y="197" width="1.1" height="15.0" fill="rgb(208,226,35)" rx="2" ry="2" />
<text  x="239.34" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="914.3" y="325" width="0.2" height="15.0" fill="rgb(229,110,18)" rx="2" ry="2" />
<text  x="917.31" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (168 samples, 0.36%)</title><rect x="1091.2" y="261" width="4.2" height="15.0" fill="rgb(243,138,24)" rx="2" ry="2" />
<text  x="1094.19" y="271.5" ></text>
</g>
<g >
<title>seastar::app_template::run (45,814 samples, 97.79%)</title><rect x="23.7" y="581" width="1154.0" height="15.0" fill="rgb(217,40,14)" rx="2" ry="2" />
<text  x="26.70" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (64 samples, 0.14%)</title><rect x="747.5" y="357" width="1.6" height="15.0" fill="rgb(254,205,51)" rx="2" ry="2" />
<text  x="750.47" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (4 samples, 0.01%)</title><rect x="23.3" y="437" width="0.1" height="15.0" fill="rgb(207,104,52)" rx="2" ry="2" />
<text  x="26.32" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.01%)</title><rect x="575.4" y="341" width="0.1" height="15.0" fill="rgb(234,44,4)" rx="2" ry="2" />
<text  x="578.38" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (9 samples, 0.02%)</title><rect x="25.7" y="517" width="0.2" height="15.0" fill="rgb(209,28,51)" rx="2" ry="2" />
<text  x="28.67" y="527.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%)</title><rect x="676.7" y="485" width="1.2" height="15.0" fill="rgb(238,81,9)" rx="2" ry="2" />
<text  x="679.69" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (86 samples, 0.18%)</title><rect x="781.9" y="181" width="2.2" height="15.0" fill="rgb(242,124,39)" rx="2" ry="2" />
<text  x="784.92" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (205 samples, 0.44%)</title><rect x="198.2" y="133" width="5.1" height="15.0" fill="rgb(231,105,36)" rx="2" ry="2" />
<text  x="201.18" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::take (5 samples, 0.01%)</title><rect x="1148.4" y="469" width="0.1" height="15.0" fill="rgb(206,92,30)" rx="2" ry="2" />
<text  x="1151.39" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="727.0" y="389" width="0.1" height="15.0" fill="rgb(245,64,0)" rx="2" ry="2" />
<text  x="729.96" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="45.4" y="469" width="0.1" height="15.0" fill="rgb(241,228,17)" rx="2" ry="2" />
<text  x="48.39" y="479.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (10 samples, 0.02%)</title><rect x="178.9" y="85" width="0.2" height="15.0" fill="rgb(208,35,43)" rx="2" ry="2" />
<text  x="181.89" y="95.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (4 samples, 0.01%)</title><rect x="398.9" y="181" width="0.1" height="15.0" fill="rgb(225,198,36)" rx="2" ry="2" />
<text  x="401.88" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5,895 samples, 12.58%)</title><rect x="705.1" y="501" width="148.5" height="15.0" fill="rgb(250,179,11)" rx="2" ry="2" />
<text  x="708.10" y="511.5" >seastar::internal:..</text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (22 samples, 0.05%)</title><rect x="594.3" y="405" width="0.5" height="15.0" fill="rgb(242,67,10)" rx="2" ry="2" />
<text  x="597.27" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (18 samples, 0.04%)</title><rect x="830.4" y="389" width="0.5" height="15.0" fill="rgb(227,21,37)" rx="2" ry="2" />
<text  x="833.41" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%)</title><rect x="1136.0" y="405" width="0.3" height="15.0" fill="rgb(239,96,34)" rx="2" ry="2" />
<text  x="1139.02" y="415.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="47.2" y="469" width="0.1" height="15.0" fill="rgb(253,161,31)" rx="2" ry="2" />
<text  x="50.20" y="479.5" ></text>
</g>
<g >
<title>row::compact_and_expire (844 samples, 1.80%)</title><rect x="364.7" y="213" width="21.2" height="15.0" fill="rgb(239,105,43)" rx="2" ry="2" />
<text  x="367.68" y="223.5" >r..</text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="1117.7" y="357" width="1.9" height="15.0" fill="rgb(205,13,28)" rx="2" ry="2" />
<text  x="1120.71" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (11 samples, 0.02%)</title><rect x="832.3" y="357" width="0.3" height="15.0" fill="rgb(236,33,8)" rx="2" ry="2" />
<text  x="835.27" y="367.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (7 samples, 0.01%)</title><rect x="324.8" y="181" width="0.2" height="15.0" fill="rgb(226,28,44)" rx="2" ry="2" />
<text  x="327.78" y="191.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (26 samples, 0.06%)</title><rect x="15.2" y="613" width="0.7" height="15.0" fill="rgb(231,200,48)" rx="2" ry="2" />
<text  x="18.24" y="623.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (5 samples, 0.01%)</title><rect x="901.7" y="357" width="0.1" height="15.0" fill="rgb(234,26,7)" rx="2" ry="2" />
<text  x="904.72" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (6 samples, 0.01%)</title><rect x="53.0" y="469" width="0.2" height="15.0" fill="rgb(250,195,0)" rx="2" ry="2" />
<text  x="56.02" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="533.9" y="405" width="0.4" height="15.0" fill="rgb(211,49,44)" rx="2" ry="2" />
<text  x="536.94" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="162.8" y="149" width="0.5" height="15.0" fill="rgb(235,64,2)" rx="2" ry="2" />
<text  x="165.77" y="159.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (17 samples, 0.04%)</title><rect x="118.0" y="261" width="0.4" height="15.0" fill="rgb(230,43,40)" rx="2" ry="2" />
<text  x="121.01" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (94 samples, 0.20%)</title><rect x="142.5" y="213" width="2.4" height="15.0" fill="rgb(207,124,2)" rx="2" ry="2" />
<text  x="145.52" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1034.1" y="197" width="0.2" height="15.0" fill="rgb(228,84,18)" rx="2" ry="2" />
<text  x="1037.11" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (72 samples, 0.15%)</title><rect x="408.4" y="277" width="1.8" height="15.0" fill="rgb(238,222,20)" rx="2" ry="2" />
<text  x="411.38" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (8 samples, 0.02%)</title><rect x="896.5" y="325" width="0.2" height="15.0" fill="rgb(236,101,22)" rx="2" ry="2" />
<text  x="899.51" y="335.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="242.6" y="213" width="0.1" height="15.0" fill="rgb(227,24,26)" rx="2" ry="2" />
<text  x="245.59" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (46 samples, 0.10%)</title><rect x="801.1" y="293" width="1.2" height="15.0" fill="rgb(242,214,44)" rx="2" ry="2" />
<text  x="804.14" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (480 samples, 1.02%)</title><rect x="1024.4" y="229" width="12.1" height="15.0" fill="rgb(208,215,32)" rx="2" ry="2" />
<text  x="1027.39" y="239.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="1038.0" y="213" width="1.8" height="15.0" fill="rgb(228,9,24)" rx="2" ry="2" />
<text  x="1040.99" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (44 samples, 0.09%)</title><rect x="255.7" y="325" width="1.1" height="15.0" fill="rgb(215,200,3)" rx="2" ry="2" />
<text  x="258.71" y="335.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (163 samples, 0.35%)</title><rect x="340.0" y="165" width="4.1" height="15.0" fill="rgb(230,219,0)" rx="2" ry="2" />
<text  x="343.04" y="175.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (18 samples, 0.04%)</title><rect x="856.3" y="421" width="0.4" height="15.0" fill="rgb(252,218,34)" rx="2" ry="2" />
<text  x="859.25" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (6,932 samples, 14.80%)</title><rect x="104.8" y="405" width="174.6" height="15.0" fill="rgb(237,145,37)" rx="2" ry="2" />
<text  x="107.81" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>mutation_partition::lower_bound (55 samples, 0.12%)</title><rect x="230.8" y="197" width="1.4" height="15.0" fill="rgb(253,215,41)" rx="2" ry="2" />
<text  x="233.80" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_flush_accounter&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="23.3" y="421" width="0.1" height="15.0" fill="rgb(213,187,54)" rx="2" ry="2" />
<text  x="26.32" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.01%)</title><rect x="511.4" y="293" width="0.1" height="15.0" fill="rgb(209,197,50)" rx="2" ry="2" />
<text  x="514.43" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="1052.2" y="181" width="0.2" height="15.0" fill="rgb(210,40,10)" rx="2" ry="2" />
<text  x="1055.22" y="191.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (16 samples, 0.03%)</title><rect x="439.1" y="277" width="0.4" height="15.0" fill="rgb(206,90,13)" rx="2" ry="2" />
<text  x="442.13" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (4 samples, 0.01%)</title><rect x="1056.7" y="357" width="0.1" height="15.0" fill="rgb(250,34,33)" rx="2" ry="2" />
<text  x="1059.73" y="367.5" ></text>
</g>
<g >
<title>auth::resource::parent (110 samples, 0.23%)</title><rect x="769.0" y="325" width="2.7" height="15.0" fill="rgb(207,32,54)" rx="2" ry="2" />
<text  x="771.98" y="335.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="438.2" y="277" width="0.9" height="15.0" fill="rgb(250,70,40)" rx="2" ry="2" />
<text  x="441.23" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (89 samples, 0.19%)</title><rect x="617.9" y="485" width="2.3" height="15.0" fill="rgb(238,58,45)" rx="2" ry="2" />
<text  x="620.95" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (25 samples, 0.05%)</title><rect x="311.1" y="181" width="0.6" height="15.0" fill="rgb(232,157,4)" rx="2" ry="2" />
<text  x="314.05" y="191.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="1154.9" y="437" width="0.5" height="15.0" fill="rgb(236,110,1)" rx="2" ry="2" />
<text  x="1157.94" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="72.3" y="453" width="0.4" height="15.0" fill="rgb(242,74,39)" rx="2" ry="2" />
<text  x="75.29" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (26 samples, 0.06%)</title><rect x="1031.8" y="149" width="0.6" height="15.0" fill="rgb(225,161,5)" rx="2" ry="2" />
<text  x="1034.77" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (22 samples, 0.05%)</title><rect x="20.7" y="357" width="0.6" height="15.0" fill="rgb(241,90,20)" rx="2" ry="2" />
<text  x="23.71" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="271.4" y="293" width="0.3" height="15.0" fill="rgb(227,7,21)" rx="2" ry="2" />
<text  x="274.40" y="303.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (101 samples, 0.22%)</title><rect x="817.5" y="373" width="2.6" height="15.0" fill="rgb(209,13,31)" rx="2" ry="2" />
<text  x="820.54" y="383.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (4 samples, 0.01%)</title><rect x="901.6" y="357" width="0.1" height="15.0" fill="rgb(232,82,25)" rx="2" ry="2" />
<text  x="904.62" y="367.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (41 samples, 0.09%)</title><rect x="222.6" y="229" width="1.0" height="15.0" fill="rgb(211,183,10)" rx="2" ry="2" />
<text  x="225.56" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (11 samples, 0.02%)</title><rect x="549.7" y="341" width="0.3" height="15.0" fill="rgb(238,222,37)" rx="2" ry="2" />
<text  x="552.71" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%)</title><rect x="816.1" y="293" width="0.4" height="15.0" fill="rgb(238,41,31)" rx="2" ry="2" />
<text  x="819.08" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1032.0" y="133" width="0.1" height="15.0" fill="rgb(217,45,19)" rx="2" ry="2" />
<text  x="1035.02" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%)</title><rect x="826.7" y="421" width="0.1" height="15.0" fill="rgb(209,137,6)" rx="2" ry="2" />
<text  x="829.68" y="431.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (535 samples, 1.14%)</title><rect x="1082.4" y="293" width="13.5" height="15.0" fill="rgb(217,109,52)" rx="2" ry="2" />
<text  x="1085.40" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (108 samples, 0.23%)</title><rect x="503.2" y="213" width="2.7" height="15.0" fill="rgb(222,132,25)" rx="2" ry="2" />
<text  x="506.16" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="1142.3" y="485" width="0.2" height="15.0" fill="rgb(237,50,22)" rx="2" ry="2" />
<text  x="1145.29" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="735.0" y="277" width="0.1" height="15.0" fill="rgb(250,197,25)" rx="2" ry="2" />
<text  x="738.05" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (202 samples, 0.43%)</title><rect x="16.9" y="405" width="5.1" height="15.0" fill="rgb(245,3,52)" rx="2" ry="2" />
<text  x="19.90" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (18 samples, 0.04%)</title><rect x="603.6" y="437" width="0.4" height="15.0" fill="rgb(205,41,41)" rx="2" ry="2" />
<text  x="606.59" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1002.4" y="293" width="0.1" height="15.0" fill="rgb(228,53,45)" rx="2" ry="2" />
<text  x="1005.42" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="565.0" y="309" width="0.1" height="15.0" fill="rgb(214,205,39)" rx="2" ry="2" />
<text  x="567.98" y="319.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="906.2" y="373" width="0.1" height="15.0" fill="rgb(208,63,39)" rx="2" ry="2" />
<text  x="909.20" y="383.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (55 samples, 0.12%)</title><rect x="181.0" y="69" width="1.4" height="15.0" fill="rgb(248,82,32)" rx="2" ry="2" />
<text  x="183.98" y="79.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (410 samples, 0.88%)</title><rect x="653.8" y="501" width="10.3" height="15.0" fill="rgb(222,216,37)" rx="2" ry="2" />
<text  x="656.81" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="780.3" y="213" width="0.1" height="15.0" fill="rgb(249,100,34)" rx="2" ry="2" />
<text  x="783.31" y="223.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%)</title><rect x="815.8" y="261" width="0.2" height="15.0" fill="rgb(246,29,19)" rx="2" ry="2" />
<text  x="818.78" y="271.5" ></text>
</g>
<g >
<title>database::find_column_family (54 samples, 0.12%)</title><rect x="812.7" y="341" width="1.3" height="15.0" fill="rgb(217,96,42)" rx="2" ry="2" />
<text  x="815.68" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (6 samples, 0.01%)</title><rect x="1032.7" y="165" width="0.1" height="15.0" fill="rgb(234,59,22)" rx="2" ry="2" />
<text  x="1035.70" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,790 samples, 12.36%)</title><rect x="111.2" y="341" width="145.8" height="15.0" fill="rgb(254,61,34)" rx="2" ry="2" />
<text  x="114.16" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (11 samples, 0.02%)</title><rect x="496.1" y="261" width="0.2" height="15.0" fill="rgb(213,219,35)" rx="2" ry="2" />
<text  x="499.06" y="271.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (25 samples, 0.05%)</title><rect x="231.6" y="165" width="0.6" height="15.0" fill="rgb(222,126,51)" rx="2" ry="2" />
<text  x="234.56" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (46 samples, 0.10%)</title><rect x="1130.2" y="389" width="1.1" height="15.0" fill="rgb(247,126,13)" rx="2" ry="2" />
<text  x="1133.15" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (14 samples, 0.03%)</title><rect x="1162.5" y="453" width="0.3" height="15.0" fill="rgb(213,173,50)" rx="2" ry="2" />
<text  x="1165.49" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (30 samples, 0.06%)</title><rect x="562.4" y="293" width="0.7" height="15.0" fill="rgb(212,177,51)" rx="2" ry="2" />
<text  x="565.36" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (7 samples, 0.01%)</title><rect x="1120.1" y="405" width="0.2" height="15.0" fill="rgb(226,60,19)" rx="2" ry="2" />
<text  x="1123.13" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (35 samples, 0.07%)</title><rect x="976.0" y="357" width="0.9" height="15.0" fill="rgb(226,19,28)" rx="2" ry="2" />
<text  x="979.00" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,374 samples, 9.34%)</title><rect x="134.9" y="309" width="110.1" height="15.0" fill="rgb(234,108,34)" rx="2" ry="2" />
<text  x="137.86" y="319.5" >partition_sna..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (95 samples, 0.20%)</title><rect x="572.6" y="357" width="2.4" height="15.0" fill="rgb(220,159,44)" rx="2" ry="2" />
<text  x="575.56" y="367.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (4 samples, 0.01%)</title><rect x="47.1" y="501" width="0.1" height="15.0" fill="rgb(240,138,2)" rx="2" ry="2" />
<text  x="50.10" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="125.8" y="229" width="0.2" height="15.0" fill="rgb(248,12,8)" rx="2" ry="2" />
<text  x="128.84" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (18 samples, 0.04%)</title><rect x="210.0" y="149" width="0.4" height="15.0" fill="rgb(253,203,2)" rx="2" ry="2" />
<text  x="213.00" y="159.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (17 samples, 0.04%)</title><rect x="1009.5" y="261" width="0.4" height="15.0" fill="rgb(243,98,7)" rx="2" ry="2" />
<text  x="1012.50" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (63 samples, 0.13%)</title><rect x="274.8" y="309" width="1.6" height="15.0" fill="rgb(232,184,49)" rx="2" ry="2" />
<text  x="277.81" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (4 samples, 0.01%)</title><rect x="37.9" y="437" width="0.1" height="15.0" fill="rgb(246,191,16)" rx="2" ry="2" />
<text  x="40.93" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.01%)</title><rect x="700.6" y="469" width="0.1" height="15.0" fill="rgb(226,143,53)" rx="2" ry="2" />
<text  x="703.59" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (469 samples, 1.00%)</title><rect x="565.7" y="389" width="11.8" height="15.0" fill="rgb(209,153,47)" rx="2" ry="2" />
<text  x="568.68" y="399.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (15 samples, 0.03%)</title><rect x="1100.3" y="341" width="0.4" height="15.0" fill="rgb(223,89,17)" rx="2" ry="2" />
<text  x="1103.30" y="351.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (11 samples, 0.02%)</title><rect x="715.4" y="405" width="0.2" height="15.0" fill="rgb(221,62,16)" rx="2" ry="2" />
<text  x="718.35" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="661.6" y="437" width="0.3" height="15.0" fill="rgb(246,149,6)" rx="2" ry="2" />
<text  x="664.62" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (12 samples, 0.03%)</title><rect x="871.8" y="421" width="0.3" height="15.0" fill="rgb(233,188,21)" rx="2" ry="2" />
<text  x="874.80" y="431.5" ></text>
</g>
<g >
<title>free (40 samples, 0.09%)</title><rect x="400.0" y="197" width="1.0" height="15.0" fill="rgb(249,104,22)" rx="2" ry="2" />
<text  x="402.97" y="207.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (276 samples, 0.59%)</title><rect x="578.7" y="437" width="6.9" height="15.0" fill="rgb(245,115,20)" rx="2" ry="2" />
<text  x="581.68" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr, false&gt;::uninitialized_set&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (5 samples, 0.01%)</title><rect x="729.7" y="309" width="0.1" height="15.0" fill="rgb(207,1,15)" rx="2" ry="2" />
<text  x="732.68" y="319.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (7 samples, 0.01%)</title><rect x="16.2" y="485" width="0.2" height="15.0" fill="rgb(239,75,35)" rx="2" ry="2" />
<text  x="19.20" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (115 samples, 0.25%)</title><rect x="693.6" y="437" width="2.9" height="15.0" fill="rgb(209,83,15)" rx="2" ry="2" />
<text  x="696.64" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (5 samples, 0.01%)</title><rect x="32.6" y="485" width="0.1" height="15.0" fill="rgb(225,38,44)" rx="2" ry="2" />
<text  x="35.62" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (5 samples, 0.01%)</title><rect x="632.7" y="485" width="0.1" height="15.0" fill="rgb(252,198,11)" rx="2" ry="2" />
<text  x="635.71" y="495.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="555.4" y="277" width="0.5" height="15.0" fill="rgb(244,8,12)" rx="2" ry="2" />
<text  x="558.35" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (35 samples, 0.07%)</title><rect x="1026.6" y="197" width="0.8" height="15.0" fill="rgb(228,46,30)" rx="2" ry="2" />
<text  x="1029.55" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="220.5" y="181" width="0.1" height="15.0" fill="rgb(209,228,19)" rx="2" ry="2" />
<text  x="223.47" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (19 samples, 0.04%)</title><rect x="61.2" y="437" width="0.5" height="15.0" fill="rgb(217,208,19)" rx="2" ry="2" />
<text  x="64.23" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (5 samples, 0.01%)</title><rect x="589.3" y="389" width="0.1" height="15.0" fill="rgb(232,50,6)" rx="2" ry="2" />
<text  x="592.28" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (87 samples, 0.19%)</title><rect x="1101.5" y="357" width="2.2" height="15.0" fill="rgb(240,163,43)" rx="2" ry="2" />
<text  x="1104.51" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (95 samples, 0.20%)</title><rect x="147.9" y="197" width="2.4" height="15.0" fill="rgb(244,72,37)" rx="2" ry="2" />
<text  x="150.91" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%)</title><rect x="684.3" y="485" width="0.8" height="15.0" fill="rgb(221,174,25)" rx="2" ry="2" />
<text  x="687.34" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (17 samples, 0.04%)</title><rect x="1177.1" y="453" width="0.4" height="15.0" fill="rgb(213,78,21)" rx="2" ry="2" />
<text  x="1180.05" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="801.9" y="261" width="0.1" height="15.0" fill="rgb(245,184,26)" rx="2" ry="2" />
<text  x="804.92" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (380 samples, 0.81%)</title><rect x="1070.0" y="341" width="9.5" height="15.0" fill="rgb(228,46,22)" rx="2" ry="2" />
<text  x="1072.95" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (46 samples, 0.10%)</title><rect x="1001.2" y="293" width="1.1" height="15.0" fill="rgb(209,124,19)" rx="2" ry="2" />
<text  x="1004.19" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (295 samples, 0.63%)</title><rect x="1155.4" y="469" width="7.4" height="15.0" fill="rgb(246,41,41)" rx="2" ry="2" />
<text  x="1158.42" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (39 samples, 0.08%)</title><rect x="770.4" y="293" width="1.0" height="15.0" fill="rgb(232,80,23)" rx="2" ry="2" />
<text  x="773.44" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (6 samples, 0.01%)</title><rect x="313.0" y="213" width="0.2" height="15.0" fill="rgb(223,217,51)" rx="2" ry="2" />
<text  x="316.02" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (30 samples, 0.06%)</title><rect x="66.8" y="373" width="0.8" height="15.0" fill="rgb(213,65,39)" rx="2" ry="2" />
<text  x="69.82" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="563.3" y="293" width="0.2" height="15.0" fill="rgb(234,226,36)" rx="2" ry="2" />
<text  x="566.31" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (522 samples, 1.11%)</title><rect x="227.2" y="261" width="13.1" height="15.0" fill="rgb(209,55,48)" rx="2" ry="2" />
<text  x="230.20" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (59 samples, 0.13%)</title><rect x="1061.3" y="309" width="1.5" height="15.0" fill="rgb(233,6,19)" rx="2" ry="2" />
<text  x="1064.29" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (21 samples, 0.04%)</title><rect x="416.4" y="421" width="0.5" height="15.0" fill="rgb(246,135,49)" rx="2" ry="2" />
<text  x="419.39" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (685 samples, 1.46%)</title><rect x="1080.5" y="325" width="17.3" height="15.0" fill="rgb(206,210,23)" rx="2" ry="2" />
<text  x="1083.51" y="335.5" ></text>
</g>
<g >
<title>operator delete (59 samples, 0.13%)</title><rect x="403.0" y="245" width="1.5" height="15.0" fill="rgb(240,129,35)" rx="2" ry="2" />
<text  x="405.96" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.01%)</title><rect x="1141.2" y="197" width="0.1" height="15.0" fill="rgb(209,47,34)" rx="2" ry="2" />
<text  x="1144.16" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (110 samples, 0.23%)</title><rect x="718.3" y="325" width="2.8" height="15.0" fill="rgb(239,32,16)" rx="2" ry="2" />
<text  x="721.30" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="262.6" y="341" width="0.2" height="15.0" fill="rgb(244,88,19)" rx="2" ry="2" />
<text  x="265.61" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (38 samples, 0.08%)</title><rect x="796.6" y="245" width="1.0" height="15.0" fill="rgb(238,63,2)" rx="2" ry="2" />
<text  x="799.61" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (53 samples, 0.11%)</title><rect x="1166.0" y="485" width="1.3" height="15.0" fill="rgb(240,118,32)" rx="2" ry="2" />
<text  x="1168.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="798.4" y="229" width="0.2" height="15.0" fill="rgb(215,85,37)" rx="2" ry="2" />
<text  x="801.45" y="239.5" ></text>
</g>
<g >
<title>compound_type&lt; (158 samples, 0.34%)</title><rect x="925.3" y="373" width="4.0" height="15.0" fill="rgb(225,189,52)" rx="2" ry="2" />
<text  x="928.35" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (25 samples, 0.05%)</title><rect x="278.7" y="389" width="0.6" height="15.0" fill="rgb(240,136,54)" rx="2" ry="2" />
<text  x="281.66" y="399.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10 samples, 0.02%)</title><rect x="808.9" y="261" width="0.2" height="15.0" fill="rgb(220,140,46)" rx="2" ry="2" />
<text  x="811.87" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="405.5" y="229" width="0.5" height="15.0" fill="rgb(205,101,8)" rx="2" ry="2" />
<text  x="408.51" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.02%)</title><rect x="655.6" y="469" width="0.3" height="15.0" fill="rgb(214,73,32)" rx="2" ry="2" />
<text  x="658.63" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="642.1" y="469" width="0.1" height="15.0" fill="rgb(237,72,4)" rx="2" ry="2" />
<text  x="645.08" y="479.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="1145.8" y="485" width="0.6" height="15.0" fill="rgb(236,229,2)" rx="2" ry="2" />
<text  x="1148.77" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="1131.5" y="373" width="0.2" height="15.0" fill="rgb(211,62,49)" rx="2" ry="2" />
<text  x="1134.49" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (23 samples, 0.05%)</title><rect x="75.0" y="453" width="0.6" height="15.0" fill="rgb(216,85,11)" rx="2" ry="2" />
<text  x="77.99" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="399.0" y="197" width="0.4" height="15.0" fill="rgb(222,60,45)" rx="2" ry="2" />
<text  x="401.98" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (5 samples, 0.01%)</title><rect x="739.4" y="357" width="0.1" height="15.0" fill="rgb(210,68,49)" rx="2" ry="2" />
<text  x="742.35" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="818.0" y="325" width="0.3" height="15.0" fill="rgb(242,103,26)" rx="2" ry="2" />
<text  x="821.04" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (16 samples, 0.03%)</title><rect x="207.9" y="149" width="0.4" height="15.0" fill="rgb(212,200,18)" rx="2" ry="2" />
<text  x="210.85" y="159.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="270.9" y="293" width="0.2" height="15.0" fill="rgb(215,96,46)" rx="2" ry="2" />
<text  x="273.88" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (16 samples, 0.03%)</title><rect x="139.7" y="245" width="0.4" height="15.0" fill="rgb(244,179,46)" rx="2" ry="2" />
<text  x="142.67" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (128 samples, 0.27%)</title><rect x="1128.9" y="405" width="3.3" height="15.0" fill="rgb(211,171,29)" rx="2" ry="2" />
<text  x="1131.94" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (11 samples, 0.02%)</title><rect x="320.0" y="181" width="0.3" height="15.0" fill="rgb(210,209,44)" rx="2" ry="2" />
<text  x="322.99" y="191.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (20 samples, 0.04%)</title><rect x="808.1" y="293" width="0.5" height="15.0" fill="rgb(208,189,52)" rx="2" ry="2" />
<text  x="811.07" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (186 samples, 0.40%)</title><rect x="749.4" y="373" width="4.7" height="15.0" fill="rgb(211,99,0)" rx="2" ry="2" />
<text  x="752.38" y="383.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="36.8" y="453" width="0.4" height="15.0" fill="rgb(250,187,1)" rx="2" ry="2" />
<text  x="39.80" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (216 samples, 0.46%)</title><rect x="394.2" y="213" width="5.4" height="15.0" fill="rgb(211,42,40)" rx="2" ry="2" />
<text  x="397.20" y="223.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (4 samples, 0.01%)</title><rect x="942.1" y="389" width="0.1" height="15.0" fill="rgb(224,30,25)" rx="2" ry="2" />
<text  x="945.12" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="546.3" y="421" width="0.5" height="15.0" fill="rgb(238,31,29)" rx="2" ry="2" />
<text  x="549.31" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (9 samples, 0.02%)</title><rect x="1114.1" y="357" width="0.2" height="15.0" fill="rgb(252,229,15)" rx="2" ry="2" />
<text  x="1117.06" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="164.4" y="133" width="0.1" height="15.0" fill="rgb(214,55,48)" rx="2" ry="2" />
<text  x="167.38" y="143.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="827.6" y="437" width="0.2" height="15.0" fill="rgb(237,167,31)" rx="2" ry="2" />
<text  x="830.56" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (13 samples, 0.03%)</title><rect x="264.8" y="341" width="0.3" height="15.0" fill="rgb(250,30,27)" rx="2" ry="2" />
<text  x="267.78" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="684.1" y="485" width="0.2" height="15.0" fill="rgb(222,141,52)" rx="2" ry="2" />
<text  x="687.14" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (10 samples, 0.02%)</title><rect x="1069.1" y="341" width="0.2" height="15.0" fill="rgb(226,207,29)" rx="2" ry="2" />
<text  x="1072.10" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (9 samples, 0.02%)</title><rect x="942.2" y="389" width="0.2" height="15.0" fill="rgb(234,20,41)" rx="2" ry="2" />
<text  x="945.22" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="545.8" y="421" width="0.1" height="15.0" fill="rgb(216,106,48)" rx="2" ry="2" />
<text  x="548.76" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (153 samples, 0.33%)</title><rect x="240.7" y="245" width="3.9" height="15.0" fill="rgb(234,81,19)" rx="2" ry="2" />
<text  x="243.73" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="902.9" y="341" width="0.2" height="15.0" fill="rgb(250,202,17)" rx="2" ry="2" />
<text  x="905.93" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (28 samples, 0.06%)</title><rect x="1149.6" y="469" width="0.7" height="15.0" fill="rgb(212,177,46)" rx="2" ry="2" />
<text  x="1152.62" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="904.9" y="293" width="0.2" height="15.0" fill="rgb(225,146,28)" rx="2" ry="2" />
<text  x="907.94" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (5 samples, 0.01%)</title><rect x="812.4" y="357" width="0.1" height="15.0" fill="rgb(231,163,9)" rx="2" ry="2" />
<text  x="815.40" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (12 samples, 0.03%)</title><rect x="544.1" y="389" width="0.3" height="15.0" fill="rgb(210,121,37)" rx="2" ry="2" />
<text  x="547.14" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (8 samples, 0.02%)</title><rect x="204.0" y="165" width="0.2" height="15.0" fill="rgb(234,12,47)" rx="2" ry="2" />
<text  x="206.98" y="175.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (92 samples, 0.20%)</title><rect x="655.3" y="485" width="2.3" height="15.0" fill="rgb(219,17,0)" rx="2" ry="2" />
<text  x="658.28" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (19 samples, 0.04%)</title><rect x="734.9" y="293" width="0.4" height="15.0" fill="rgb(205,64,20)" rx="2" ry="2" />
<text  x="737.87" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (4 samples, 0.01%)</title><rect x="790.9" y="149" width="0.1" height="15.0" fill="rgb(216,22,12)" rx="2" ry="2" />
<text  x="793.94" y="159.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,229 samples, 2.62%)</title><rect x="876.9" y="405" width="30.9" height="15.0" fill="rgb(235,67,9)" rx="2" ry="2" />
<text  x="879.88" y="415.5" >cq..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="621.0" y="453" width="0.2" height="15.0" fill="rgb(253,161,54)" rx="2" ry="2" />
<text  x="624.02" y="463.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (79 samples, 0.17%)</title><rect x="708.0" y="437" width="2.0" height="15.0" fill="rgb(230,184,6)" rx="2" ry="2" />
<text  x="711.00" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.01%)</title><rect x="16.4" y="421" width="0.1" height="15.0" fill="rgb(227,185,6)" rx="2" ry="2" />
<text  x="19.42" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="204.2" y="149" width="0.9" height="15.0" fill="rgb(242,189,2)" rx="2" ry="2" />
<text  x="207.23" y="159.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (131 samples, 0.28%)</title><rect x="660.8" y="469" width="3.3" height="15.0" fill="rgb(244,141,8)" rx="2" ry="2" />
<text  x="663.82" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="770.3" y="293" width="0.1" height="15.0" fill="rgb(231,16,51)" rx="2" ry="2" />
<text  x="773.34" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="221.6" y="213" width="0.3" height="15.0" fill="rgb(213,143,27)" rx="2" ry="2" />
<text  x="224.56" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (11 samples, 0.02%)</title><rect x="680.6" y="453" width="0.3" height="15.0" fill="rgb(250,123,16)" rx="2" ry="2" />
<text  x="683.59" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="223.8" y="229" width="0.2" height="15.0" fill="rgb(234,17,6)" rx="2" ry="2" />
<text  x="226.85" y="239.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (23 samples, 0.05%)</title><rect x="210.7" y="133" width="0.6" height="15.0" fill="rgb(246,45,18)" rx="2" ry="2" />
<text  x="213.70" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="652.5" y="437" width="0.3" height="15.0" fill="rgb(221,74,36)" rx="2" ry="2" />
<text  x="655.48" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="34.2" y="485" width="0.3" height="15.0" fill="rgb(236,216,13)" rx="2" ry="2" />
<text  x="37.21" y="495.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%)</title><rect x="744.1" y="405" width="1.4" height="15.0" fill="rgb(238,51,42)" rx="2" ry="2" />
<text  x="747.12" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (5 samples, 0.01%)</title><rect x="18.8" y="357" width="0.1" height="15.0" fill="rgb(246,106,4)" rx="2" ry="2" />
<text  x="21.77" y="367.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (9 samples, 0.02%)</title><rect x="593.1" y="421" width="0.2" height="15.0" fill="rgb(206,187,36)" rx="2" ry="2" />
<text  x="596.09" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::CqlParser (4 samples, 0.01%)</title><rect x="16.7" y="421" width="0.1" height="15.0" fill="rgb(228,48,1)" rx="2" ry="2" />
<text  x="19.73" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (74 samples, 0.16%)</title><rect x="267.6" y="309" width="1.8" height="15.0" fill="rgb(239,158,27)" rx="2" ry="2" />
<text  x="270.58" y="319.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (12 samples, 0.03%)</title><rect x="325.2" y="181" width="0.3" height="15.0" fill="rgb(217,55,31)" rx="2" ry="2" />
<text  x="328.23" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (431 samples, 0.92%)</title><rect x="430.8" y="309" width="10.9" height="15.0" fill="rgb(213,100,44)" rx="2" ry="2" />
<text  x="433.85" y="319.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="631.0" y="485" width="0.6" height="15.0" fill="rgb(221,139,1)" rx="2" ry="2" />
<text  x="634.02" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (19 samples, 0.04%)</title><rect x="597.2" y="437" width="0.5" height="15.0" fill="rgb(205,110,10)" rx="2" ry="2" />
<text  x="600.19" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (30 samples, 0.06%)</title><rect x="1019.7" y="213" width="0.7" height="15.0" fill="rgb(237,135,8)" rx="2" ry="2" />
<text  x="1022.68" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (10 samples, 0.02%)</title><rect x="857.5" y="341" width="0.3" height="15.0" fill="rgb(208,212,31)" rx="2" ry="2" />
<text  x="860.51" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (17 samples, 0.04%)</title><rect x="853.7" y="501" width="0.4" height="15.0" fill="rgb(223,80,12)" rx="2" ry="2" />
<text  x="856.71" y="511.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (134 samples, 0.29%)</title><rect x="389.2" y="245" width="3.4" height="15.0" fill="rgb(234,81,25)" rx="2" ry="2" />
<text  x="392.21" y="255.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%)</title><rect x="1053.3" y="261" width="0.1" height="15.0" fill="rgb(236,19,17)" rx="2" ry="2" />
<text  x="1056.25" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (4 samples, 0.01%)</title><rect x="616.7" y="405" width="0.1" height="15.0" fill="rgb(207,153,35)" rx="2" ry="2" />
<text  x="619.71" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.04%)</title><rect x="675.2" y="309" width="0.5" height="15.0" fill="rgb(225,77,36)" rx="2" ry="2" />
<text  x="678.23" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (5 samples, 0.01%)</title><rect x="843.3" y="389" width="0.2" height="15.0" fill="rgb(209,155,30)" rx="2" ry="2" />
<text  x="846.33" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%)</title><rect x="822.9" y="405" width="0.9" height="15.0" fill="rgb(252,26,2)" rx="2" ry="2" />
<text  x="825.90" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="42.8" y="469" width="0.2" height="15.0" fill="rgb(252,201,1)" rx="2" ry="2" />
<text  x="45.80" y="479.5" ></text>
</g>
<g >
<title>sstring_hash::operator (38 samples, 0.08%)</title><rect x="1065.8" y="293" width="0.9" height="15.0" fill="rgb(241,64,31)" rx="2" ry="2" />
<text  x="1068.77" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (23 samples, 0.05%)</title><rect x="637.9" y="437" width="0.6" height="15.0" fill="rgb(229,6,16)" rx="2" ry="2" />
<text  x="640.90" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (7 samples, 0.01%)</title><rect x="414.6" y="373" width="0.2" height="15.0" fill="rgb(211,195,6)" rx="2" ry="2" />
<text  x="417.60" y="383.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (9 samples, 0.02%)</title><rect x="18.5" y="341" width="0.2" height="15.0" fill="rgb(229,135,23)" rx="2" ry="2" />
<text  x="21.51" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="794.9" y="133" width="0.1" height="15.0" fill="rgb(254,11,13)" rx="2" ry="2" />
<text  x="797.95" y="143.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (53 samples, 0.11%)</title><rect x="885.7" y="277" width="1.4" height="15.0" fill="rgb(223,97,13)" rx="2" ry="2" />
<text  x="888.72" y="287.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="834.5" y="421" width="1.2" height="15.0" fill="rgb(252,194,18)" rx="2" ry="2" />
<text  x="837.49" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (172 samples, 0.37%)</title><rect x="444.7" y="293" width="4.3" height="15.0" fill="rgb(245,192,53)" rx="2" ry="2" />
<text  x="447.70" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (10 samples, 0.02%)</title><rect x="819.5" y="277" width="0.3" height="15.0" fill="rgb(235,49,5)" rx="2" ry="2" />
<text  x="822.53" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (9 samples, 0.02%)</title><rect x="586.5" y="405" width="0.3" height="15.0" fill="rgb(215,96,16)" rx="2" ry="2" />
<text  x="589.54" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1027.2" y="165" width="0.2" height="15.0" fill="rgb(205,208,34)" rx="2" ry="2" />
<text  x="1030.21" y="175.5" ></text>
</g>
<g >
<title>validation::validate_column_family (324 samples, 0.69%)</title><rect x="811.9" y="389" width="8.2" height="15.0" fill="rgb(220,13,54)" rx="2" ry="2" />
<text  x="814.92" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (93 samples, 0.20%)</title><rect x="337.7" y="165" width="2.3" height="15.0" fill="rgb(211,43,49)" rx="2" ry="2" />
<text  x="340.70" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (156 samples, 0.33%)</title><rect x="90.9" y="421" width="3.9" height="15.0" fill="rgb(214,111,28)" rx="2" ry="2" />
<text  x="93.85" y="431.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (6 samples, 0.01%)</title><rect x="715.6" y="421" width="0.2" height="15.0" fill="rgb(239,123,6)" rx="2" ry="2" />
<text  x="718.63" y="431.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="521.6" y="309" width="0.2" height="15.0" fill="rgb(221,103,30)" rx="2" ry="2" />
<text  x="524.58" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="631.9" y="485" width="0.6" height="15.0" fill="rgb(207,64,25)" rx="2" ry="2" />
<text  x="634.85" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%)</title><rect x="990.7" y="245" width="0.2" height="15.0" fill="rgb(223,58,42)" rx="2" ry="2" />
<text  x="993.66" y="255.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (24 samples, 0.05%)</title><rect x="212.6" y="165" width="0.6" height="15.0" fill="rgb(207,153,54)" rx="2" ry="2" />
<text  x="215.64" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (133 samples, 0.28%)</title><rect x="402.6" y="261" width="3.4" height="15.0" fill="rgb(220,143,33)" rx="2" ry="2" />
<text  x="405.61" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (4 samples, 0.01%)</title><rect x="903.1" y="357" width="0.1" height="15.0" fill="rgb(209,47,0)" rx="2" ry="2" />
<text  x="906.05" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%)</title><rect x="838.3" y="373" width="0.2" height="15.0" fill="rgb(253,131,48)" rx="2" ry="2" />
<text  x="841.29" y="383.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (39 samples, 0.08%)</title><rect x="1141.0" y="405" width="1.0" height="15.0" fill="rgb(239,102,22)" rx="2" ry="2" />
<text  x="1143.98" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (160 samples, 0.34%)</title><rect x="749.9" y="357" width="4.1" height="15.0" fill="rgb(216,113,25)" rx="2" ry="2" />
<text  x="752.93" y="367.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (9 samples, 0.02%)</title><rect x="878.9" y="341" width="0.3" height="15.0" fill="rgb(210,91,24)" rx="2" ry="2" />
<text  x="881.95" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,895 samples, 23.26%)</title><rect x="865.1" y="437" width="274.4" height="15.0" fill="rgb(210,160,24)" rx="2" ry="2" />
<text  x="868.07" y="447.5" >cql3::statements::select_statement::..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (39 samples, 0.08%)</title><rect x="475.9" y="197" width="1.0" height="15.0" fill="rgb(246,40,45)" rx="2" ry="2" />
<text  x="478.88" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (67 samples, 0.14%)</title><rect x="669.0" y="453" width="1.6" height="15.0" fill="rgb(241,155,2)" rx="2" ry="2" />
<text  x="671.95" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="529.0" y="325" width="0.1" height="15.0" fill="rgb(231,96,41)" rx="2" ry="2" />
<text  x="532.01" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%)</title><rect x="243.4" y="197" width="0.2" height="15.0" fill="rgb(217,68,19)" rx="2" ry="2" />
<text  x="246.40" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="576.6" y="373" width="0.2" height="15.0" fill="rgb(217,157,36)" rx="2" ry="2" />
<text  x="579.64" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (15 samples, 0.03%)</title><rect x="1040.3" y="197" width="0.3" height="15.0" fill="rgb(236,64,50)" rx="2" ry="2" />
<text  x="1043.26" y="207.5" ></text>
</g>
<g >
<title>__strlen_avx2 (86 samples, 0.18%)</title><rect x="1017.2" y="245" width="2.2" height="15.0" fill="rgb(247,47,33)" rx="2" ry="2" />
<text  x="1020.23" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (67 samples, 0.14%)</title><rect x="361.8" y="197" width="1.7" height="15.0" fill="rgb(228,127,49)" rx="2" ry="2" />
<text  x="364.83" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (469 samples, 1.00%)</title><rect x="883.4" y="293" width="11.8" height="15.0" fill="rgb(215,119,14)" rx="2" ry="2" />
<text  x="886.43" y="303.5" ></text>
</g>
<g >
<title>operator new (93 samples, 0.20%)</title><rect x="951.9" y="405" width="2.3" height="15.0" fill="rgb(205,149,20)" rx="2" ry="2" />
<text  x="954.87" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (51 samples, 0.11%)</title><rect x="267.9" y="293" width="1.3" height="15.0" fill="rgb(246,136,42)" rx="2" ry="2" />
<text  x="270.90" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (146 samples, 0.31%)</title><rect x="208.4" y="165" width="3.7" height="15.0" fill="rgb(241,160,13)" rx="2" ry="2" />
<text  x="211.41" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (16 samples, 0.03%)</title><rect x="200.8" y="101" width="0.4" height="15.0" fill="rgb(243,108,24)" rx="2" ry="2" />
<text  x="203.80" y="111.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="102.2" y="421" width="0.2" height="15.0" fill="rgb(207,196,0)" rx="2" ry="2" />
<text  x="105.21" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (9 samples, 0.02%)</title><rect x="1106.4" y="389" width="0.2" height="15.0" fill="rgb(235,157,21)" rx="2" ry="2" />
<text  x="1109.37" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (20 samples, 0.04%)</title><rect x="1149.8" y="453" width="0.5" height="15.0" fill="rgb(226,62,2)" rx="2" ry="2" />
<text  x="1152.82" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (7 samples, 0.01%)</title><rect x="229.9" y="213" width="0.2" height="15.0" fill="rgb(205,78,42)" rx="2" ry="2" />
<text  x="232.94" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (24 samples, 0.05%)</title><rect x="561.7" y="261" width="0.6" height="15.0" fill="rgb(239,138,21)" rx="2" ry="2" />
<text  x="564.68" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%)</title><rect x="85.9" y="437" width="0.3" height="15.0" fill="rgb(245,11,16)" rx="2" ry="2" />
<text  x="88.87" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (112 samples, 0.24%)</title><rect x="627.8" y="501" width="2.8" height="15.0" fill="rgb(239,120,30)" rx="2" ry="2" />
<text  x="630.80" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (4 samples, 0.01%)</title><rect x="610.5" y="437" width="0.1" height="15.0" fill="rgb(229,13,10)" rx="2" ry="2" />
<text  x="613.54" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="753.8" y="325" width="0.2" height="15.0" fill="rgb(238,135,40)" rx="2" ry="2" />
<text  x="756.76" y="335.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="577.6" y="389" width="0.8" height="15.0" fill="rgb(229,102,20)" rx="2" ry="2" />
<text  x="580.65" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="751.6" y="293" width="0.1" height="15.0" fill="rgb(215,117,33)" rx="2" ry="2" />
<text  x="754.57" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (5 samples, 0.01%)</title><rect x="599.7" y="421" width="0.1" height="15.0" fill="rgb(225,107,29)" rx="2" ry="2" />
<text  x="602.69" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="531.0" y="309" width="0.7" height="15.0" fill="rgb(230,186,2)" rx="2" ry="2" />
<text  x="534.05" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (479 samples, 1.02%)</title><rect x="553.1" y="325" width="12.0" height="15.0" fill="rgb(236,25,26)" rx="2" ry="2" />
<text  x="556.06" y="335.5" ></text>
</g>
<g >
<title>operator delete (112 samples, 0.24%)</title><rect x="86.4" y="437" width="2.8" height="15.0" fill="rgb(254,76,40)" rx="2" ry="2" />
<text  x="89.42" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (26 samples, 0.06%)</title><rect x="810.9" y="357" width="0.6" height="15.0" fill="rgb(241,86,32)" rx="2" ry="2" />
<text  x="813.86" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="504.8" y="165" width="0.2" height="15.0" fill="rgb(244,98,16)" rx="2" ry="2" />
<text  x="507.78" y="175.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.03%)</title><rect x="150.9" y="229" width="0.3" height="15.0" fill="rgb(212,201,48)" rx="2" ry="2" />
<text  x="153.90" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (797 samples, 1.70%)</title><rect x="1079.8" y="341" width="20.1" height="15.0" fill="rgb(225,180,31)" rx="2" ry="2" />
<text  x="1082.83" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (4 samples, 0.01%)</title><rect x="736.6" y="277" width="0.1" height="15.0" fill="rgb(217,53,38)" rx="2" ry="2" />
<text  x="739.56" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="412.2" y="325" width="0.8" height="15.0" fill="rgb(242,43,30)" rx="2" ry="2" />
<text  x="415.16" y="335.5" ></text>
</g>
<g >
<title>database::find_column_family (41 samples, 0.09%)</title><rect x="1019.4" y="245" width="1.0" height="15.0" fill="rgb(205,165,54)" rx="2" ry="2" />
<text  x="1022.40" y="255.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="652.2" y="437" width="0.3" height="15.0" fill="rgb(229,137,34)" rx="2" ry="2" />
<text  x="655.15" y="447.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="894.9" y="277" width="0.3" height="15.0" fill="rgb(211,69,18)" rx="2" ry="2" />
<text  x="897.89" y="287.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (6 samples, 0.01%)</title><rect x="243.6" y="197" width="0.2" height="15.0" fill="rgb(252,136,49)" rx="2" ry="2" />
<text  x="246.65" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (22 samples, 0.05%)</title><rect x="942.7" y="373" width="0.5" height="15.0" fill="rgb(218,94,23)" rx="2" ry="2" />
<text  x="945.68" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="576.3" y="357" width="0.2" height="15.0" fill="rgb(207,202,38)" rx="2" ry="2" />
<text  x="579.34" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (21 samples, 0.04%)</title><rect x="754.3" y="405" width="0.5" height="15.0" fill="rgb(239,222,45)" rx="2" ry="2" />
<text  x="757.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%)</title><rect x="213.7" y="197" width="0.1" height="15.0" fill="rgb(215,135,1)" rx="2" ry="2" />
<text  x="216.72" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%)</title><rect x="708.2" y="405" width="1.6" height="15.0" fill="rgb(205,221,19)" rx="2" ry="2" />
<text  x="711.25" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="826.4" y="357" width="0.1" height="15.0" fill="rgb(246,32,25)" rx="2" ry="2" />
<text  x="829.41" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (18 samples, 0.04%)</title><rect x="224.1" y="229" width="0.4" height="15.0" fill="rgb(231,191,8)" rx="2" ry="2" />
<text  x="227.05" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (12 samples, 0.03%)</title><rect x="813.7" y="293" width="0.3" height="15.0" fill="rgb(247,3,43)" rx="2" ry="2" />
<text  x="816.74" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="832.8" y="341" width="0.2" height="15.0" fill="rgb(209,217,36)" rx="2" ry="2" />
<text  x="835.78" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="23.3" y="517" width="0.3" height="15.0" fill="rgb(219,222,3)" rx="2" ry="2" />
<text  x="26.27" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="1122.9" y="405" width="0.4" height="15.0" fill="rgb(244,208,30)" rx="2" ry="2" />
<text  x="1125.95" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%)</title><rect x="222.5" y="181" width="0.1" height="15.0" fill="rgb(232,4,29)" rx="2" ry="2" />
<text  x="225.46" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="672.2" y="469" width="0.1" height="15.0" fill="rgb(239,176,11)" rx="2" ry="2" />
<text  x="675.15" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="406.9" y="277" width="0.1" height="15.0" fill="rgb(214,21,52)" rx="2" ry="2" />
<text  x="409.94" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%)</title><rect x="505.3" y="181" width="0.4" height="15.0" fill="rgb(220,142,24)" rx="2" ry="2" />
<text  x="508.30" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (13 samples, 0.03%)</title><rect x="543.8" y="293" width="0.3" height="15.0" fill="rgb(213,85,34)" rx="2" ry="2" />
<text  x="546.77" y="303.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%)</title><rect x="666.2" y="453" width="0.1" height="15.0" fill="rgb(234,61,3)" rx="2" ry="2" />
<text  x="669.21" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (473 samples, 1.01%)</title><rect x="227.6" y="229" width="11.9" height="15.0" fill="rgb(239,211,9)" rx="2" ry="2" />
<text  x="230.55" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%)</title><rect x="740.2" y="405" width="0.1" height="15.0" fill="rgb(225,174,34)" rx="2" ry="2" />
<text  x="743.19" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (23 samples, 0.05%)</title><rect x="731.4" y="357" width="0.6" height="15.0" fill="rgb(205,32,13)" rx="2" ry="2" />
<text  x="734.40" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1078.5" y="309" width="0.3" height="15.0" fill="rgb(233,168,8)" rx="2" ry="2" />
<text  x="1081.52" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (5 samples, 0.01%)</title><rect x="841.1" y="453" width="0.2" height="15.0" fill="rgb(218,220,52)" rx="2" ry="2" />
<text  x="844.14" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (32 samples, 0.07%)</title><rect x="661.9" y="437" width="0.8" height="15.0" fill="rgb(205,175,14)" rx="2" ry="2" />
<text  x="664.88" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (6 samples, 0.01%)</title><rect x="936.7" y="405" width="0.2" height="15.0" fill="rgb(242,221,6)" rx="2" ry="2" />
<text  x="939.73" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (6 samples, 0.01%)</title><rect x="414.9" y="373" width="0.1" height="15.0" fill="rgb(206,192,31)" rx="2" ry="2" />
<text  x="417.85" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (32 samples, 0.07%)</title><rect x="64.3" y="405" width="0.8" height="15.0" fill="rgb(233,229,5)" rx="2" ry="2" />
<text  x="67.33" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="853.4" y="469" width="0.1" height="15.0" fill="rgb(207,49,7)" rx="2" ry="2" />
<text  x="856.36" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (4 samples, 0.01%)</title><rect x="900.7" y="325" width="0.1" height="15.0" fill="rgb(244,50,18)" rx="2" ry="2" />
<text  x="903.69" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="1125.8" y="405" width="0.3" height="15.0" fill="rgb(239,52,47)" rx="2" ry="2" />
<text  x="1128.82" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (4 samples, 0.01%)</title><rect x="840.1" y="357" width="0.1" height="15.0" fill="rgb(246,142,22)" rx="2" ry="2" />
<text  x="843.08" y="367.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (11 samples, 0.02%)</title><rect x="1030.8" y="149" width="0.3" height="15.0" fill="rgb(212,57,5)" rx="2" ry="2" />
<text  x="1033.81" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="785.0" y="197" width="0.3" height="15.0" fill="rgb(227,33,47)" rx="2" ry="2" />
<text  x="788.02" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (4 samples, 0.01%)</title><rect x="963.3" y="373" width="0.1" height="15.0" fill="rgb(248,172,32)" rx="2" ry="2" />
<text  x="966.28" y="383.5" ></text>
</g>
<g >
<title>__dynamic_cast (40 samples, 0.09%)</title><rect x="869.9" y="421" width="1.0" height="15.0" fill="rgb(241,32,9)" rx="2" ry="2" />
<text  x="872.91" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (25 samples, 0.05%)</title><rect x="489.1" y="309" width="0.7" height="15.0" fill="rgb(245,211,20)" rx="2" ry="2" />
<text  x="492.13" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (4 samples, 0.01%)</title><rect x="806.5" y="341" width="0.1" height="15.0" fill="rgb(210,11,6)" rx="2" ry="2" />
<text  x="809.48" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (8 samples, 0.02%)</title><rect x="1141.1" y="309" width="0.2" height="15.0" fill="rgb(237,54,18)" rx="2" ry="2" />
<text  x="1144.08" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (45 samples, 0.10%)</title><rect x="124.9" y="245" width="1.1" height="15.0" fill="rgb(228,32,35)" rx="2" ry="2" />
<text  x="127.88" y="255.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (196 samples, 0.42%)</title><rect x="692.4" y="453" width="4.9" height="15.0" fill="rgb(239,209,44)" rx="2" ry="2" />
<text  x="695.38" y="463.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.02%)</title><rect x="10.1" y="613" width="0.2" height="15.0" fill="rgb(217,117,44)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,819 samples, 12.42%)</title><rect x="706.1" y="485" width="146.6" height="15.0" fill="rgb(209,197,32)" rx="2" ry="2" />
<text  x="709.13" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="511.8" y="293" width="0.2" height="15.0" fill="rgb(224,31,16)" rx="2" ry="2" />
<text  x="514.80" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.01%)</title><rect x="19.0" y="245" width="0.1" height="15.0" fill="rgb(244,108,6)" rx="2" ry="2" />
<text  x="21.99" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="964.5" y="373" width="0.3" height="15.0" fill="rgb(224,14,19)" rx="2" ry="2" />
<text  x="967.51" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (25 samples, 0.05%)</title><rect x="455.8" y="309" width="0.6" height="15.0" fill="rgb(253,98,43)" rx="2" ry="2" />
<text  x="458.78" y="319.5" ></text>
</g>
<g >
<title>__tls_init (18 samples, 0.04%)</title><rect x="496.7" y="245" width="0.5" height="15.0" fill="rgb(252,179,2)" rx="2" ry="2" />
<text  x="499.72" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (56 samples, 0.12%)</title><rect x="921.0" y="325" width="1.4" height="15.0" fill="rgb(212,131,20)" rx="2" ry="2" />
<text  x="924.04" y="335.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,351 samples, 9.29%)</title><rect x="135.4" y="293" width="109.6" height="15.0" fill="rgb(232,42,39)" rx="2" ry="2" />
<text  x="138.44" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (6 samples, 0.01%)</title><rect x="1065.6" y="293" width="0.2" height="15.0" fill="rgb(221,54,27)" rx="2" ry="2" />
<text  x="1068.62" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (14 samples, 0.03%)</title><rect x="988.3" y="293" width="0.4" height="15.0" fill="rgb(232,112,44)" rx="2" ry="2" />
<text  x="991.34" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="502.7" y="229" width="0.1" height="15.0" fill="rgb(213,143,39)" rx="2" ry="2" />
<text  x="505.68" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="709.8" y="421" width="0.2" height="15.0" fill="rgb(251,23,38)" rx="2" ry="2" />
<text  x="712.83" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="799.6" y="261" width="0.2" height="15.0" fill="rgb(238,184,33)" rx="2" ry="2" />
<text  x="802.63" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%)</title><rect x="155.4" y="229" width="0.1" height="15.0" fill="rgb(235,10,16)" rx="2" ry="2" />
<text  x="158.41" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="897.5" y="293" width="0.1" height="15.0" fill="rgb(215,153,17)" rx="2" ry="2" />
<text  x="900.51" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (300 samples, 0.64%)</title><rect x="984.7" y="341" width="7.6" height="15.0" fill="rgb(240,43,47)" rx="2" ry="2" />
<text  x="987.74" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt (6 samples, 0.01%)</title><rect x="468.0" y="277" width="0.1" height="15.0" fill="rgb(252,7,20)" rx="2" ry="2" />
<text  x="470.98" y="287.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="1001.0" y="293" width="0.1" height="15.0" fill="rgb(234,66,5)" rx="2" ry="2" />
<text  x="1003.99" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="984.5" y="341" width="0.2" height="15.0" fill="rgb(219,4,41)" rx="2" ry="2" />
<text  x="987.46" y="351.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (33 samples, 0.07%)</title><rect x="1055.2" y="293" width="0.8" height="15.0" fill="rgb(221,18,30)" rx="2" ry="2" />
<text  x="1058.19" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="931.2" y="389" width="0.6" height="15.0" fill="rgb(223,3,19)" rx="2" ry="2" />
<text  x="934.24" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="833.3" y="373" width="0.2" height="15.0" fill="rgb(218,172,28)" rx="2" ry="2" />
<text  x="836.33" y="383.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (48 samples, 0.10%)</title><rect x="737.6" y="261" width="1.2" height="15.0" fill="rgb(253,143,22)" rx="2" ry="2" />
<text  x="740.57" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (49 samples, 0.10%)</title><rect x="404.7" y="245" width="1.3" height="15.0" fill="rgb(222,218,5)" rx="2" ry="2" />
<text  x="407.73" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1136.7" y="421" width="0.1" height="15.0" fill="rgb(240,126,25)" rx="2" ry="2" />
<text  x="1139.68" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (45 samples, 0.10%)</title><rect x="1008.8" y="277" width="1.1" height="15.0" fill="rgb(223,65,33)" rx="2" ry="2" />
<text  x="1011.79" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (91 samples, 0.19%)</title><rect x="630.7" y="501" width="2.3" height="15.0" fill="rgb(242,118,32)" rx="2" ry="2" />
<text  x="633.67" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (69 samples, 0.15%)</title><rect x="802.7" y="325" width="1.7" height="15.0" fill="rgb(232,191,10)" rx="2" ry="2" />
<text  x="805.70" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="804.5" y="325" width="0.2" height="15.0" fill="rgb(233,20,21)" rx="2" ry="2" />
<text  x="807.49" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="649.9" y="485" width="0.1" height="15.0" fill="rgb(247,185,22)" rx="2" ry="2" />
<text  x="652.91" y="495.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="126.0" y="245" width="0.2" height="15.0" fill="rgb(242,13,41)" rx="2" ry="2" />
<text  x="129.02" y="255.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="1141.3" y="277" width="0.6" height="15.0" fill="rgb(210,87,36)" rx="2" ry="2" />
<text  x="1144.29" y="287.5" ></text>
</g>
<g >
<title>__libc_start_main (45,814 samples, 97.79%)</title><rect x="23.7" y="629" width="1154.0" height="15.0" fill="rgb(231,7,33)" rx="2" ry="2" />
<text  x="26.70" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>row_cache::make_reader (403 samples, 0.86%)</title><rect x="519.0" y="341" width="10.2" height="15.0" fill="rgb(235,103,37)" rx="2" ry="2" />
<text  x="522.03" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="407.7" y="277" width="0.2" height="15.0" fill="rgb(254,156,3)" rx="2" ry="2" />
<text  x="410.75" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (9 samples, 0.02%)</title><rect x="251.4" y="277" width="0.2" height="15.0" fill="rgb(254,31,16)" rx="2" ry="2" />
<text  x="254.36" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="818.7" y="293" width="0.5" height="15.0" fill="rgb(251,135,26)" rx="2" ry="2" />
<text  x="821.75" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (8 samples, 0.02%)</title><rect x="115.5" y="309" width="0.2" height="15.0" fill="rgb(205,16,46)" rx="2" ry="2" />
<text  x="118.49" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (25 samples, 0.05%)</title><rect x="856.1" y="453" width="0.7" height="15.0" fill="rgb(248,21,10)" rx="2" ry="2" />
<text  x="859.13" y="463.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (33 samples, 0.07%)</title><rect x="721.3" y="405" width="0.8" height="15.0" fill="rgb(224,47,16)" rx="2" ry="2" />
<text  x="724.27" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (17 samples, 0.04%)</title><rect x="1023.3" y="245" width="0.4" height="15.0" fill="rgb(217,37,10)" rx="2" ry="2" />
<text  x="1026.30" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (13 samples, 0.03%)</title><rect x="393.4" y="229" width="0.3" height="15.0" fill="rgb(232,108,24)" rx="2" ry="2" />
<text  x="396.37" y="239.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (10 samples, 0.02%)</title><rect x="225.5" y="245" width="0.2" height="15.0" fill="rgb(211,175,43)" rx="2" ry="2" />
<text  x="228.49" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="822.4" y="421" width="0.2" height="15.0" fill="rgb(207,14,45)" rx="2" ry="2" />
<text  x="825.43" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1100.7" y="341" width="0.3" height="15.0" fill="rgb(229,150,40)" rx="2" ry="2" />
<text  x="1103.73" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (27 samples, 0.06%)</title><rect x="791.4" y="117" width="0.6" height="15.0" fill="rgb(232,169,2)" rx="2" ry="2" />
<text  x="794.37" y="127.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.02%)</title><rect x="636.2" y="469" width="0.2" height="15.0" fill="rgb(252,7,40)" rx="2" ry="2" />
<text  x="639.16" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (11 samples, 0.02%)</title><rect x="606.5" y="405" width="0.2" height="15.0" fill="rgb(240,104,5)" rx="2" ry="2" />
<text  x="609.46" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (8 samples, 0.02%)</title><rect x="18.0" y="261" width="0.2" height="15.0" fill="rgb(217,96,18)" rx="2" ry="2" />
<text  x="20.98" y="271.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="449.1" y="293" width="0.4" height="15.0" fill="rgb(226,54,33)" rx="2" ry="2" />
<text  x="452.08" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="1100.1" y="341" width="0.1" height="15.0" fill="rgb(246,61,32)" rx="2" ry="2" />
<text  x="1103.10" y="351.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (194 samples, 0.41%)</title><rect x="10.4" y="613" width="4.8" height="15.0" fill="rgb(212,48,40)" rx="2" ry="2" />
<text  x="13.35" y="623.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (58 samples, 0.12%)</title><rect x="217.4" y="165" width="1.5" height="15.0" fill="rgb(206,78,43)" rx="2" ry="2" />
<text  x="220.43" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (13 samples, 0.03%)</title><rect x="128.3" y="245" width="0.4" height="15.0" fill="rgb(250,191,46)" rx="2" ry="2" />
<text  x="131.34" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,940 samples, 6.28%)</title><rect x="151.4" y="245" width="74.1" height="15.0" fill="rgb(239,5,7)" rx="2" ry="2" />
<text  x="154.43" y="255.5" >partitio..</text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (7 samples, 0.01%)</title><rect x="840.3" y="325" width="0.2" height="15.0" fill="rgb(207,23,40)" rx="2" ry="2" />
<text  x="843.31" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="719.2" y="293" width="0.3" height="15.0" fill="rgb(246,186,41)" rx="2" ry="2" />
<text  x="722.20" y="303.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (4 samples, 0.01%)</title><rect x="22.9" y="453" width="0.1" height="15.0" fill="rgb(232,229,2)" rx="2" ry="2" />
<text  x="25.87" y="463.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (33 samples, 0.07%)</title><rect x="620.4" y="485" width="0.9" height="15.0" fill="rgb(248,37,27)" rx="2" ry="2" />
<text  x="623.44" y="495.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (21 samples, 0.04%)</title><rect x="37.4" y="437" width="0.5" height="15.0" fill="rgb(230,153,0)" rx="2" ry="2" />
<text  x="40.40" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (4 samples, 0.01%)</title><rect x="59.5" y="437" width="0.1" height="15.0" fill="rgb(239,177,17)" rx="2" ry="2" />
<text  x="62.47" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (79 samples, 0.17%)</title><rect x="643.6" y="469" width="2.0" height="15.0" fill="rgb(246,7,4)" rx="2" ry="2" />
<text  x="646.61" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (16 samples, 0.03%)</title><rect x="789.7" y="117" width="0.4" height="15.0" fill="rgb(230,117,36)" rx="2" ry="2" />
<text  x="792.66" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="617.2" y="437" width="0.1" height="15.0" fill="rgb(207,37,3)" rx="2" ry="2" />
<text  x="620.17" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (34 samples, 0.07%)</title><rect x="482.2" y="277" width="0.9" height="15.0" fill="rgb(225,82,0)" rx="2" ry="2" />
<text  x="485.21" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (35 samples, 0.07%)</title><rect x="63.4" y="405" width="0.9" height="15.0" fill="rgb(211,198,5)" rx="2" ry="2" />
<text  x="66.45" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (512 samples, 1.09%)</title><rect x="121.4" y="277" width="12.9" height="15.0" fill="rgb(206,157,4)" rx="2" ry="2" />
<text  x="124.41" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="384.7" y="149" width="0.3" height="15.0" fill="rgb(254,186,51)" rx="2" ry="2" />
<text  x="387.73" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (38 samples, 0.08%)</title><rect x="825.6" y="389" width="0.9" height="15.0" fill="rgb(233,58,46)" rx="2" ry="2" />
<text  x="828.57" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="862.2" y="437" width="0.1" height="15.0" fill="rgb(252,82,17)" rx="2" ry="2" />
<text  x="865.17" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::run (45,814 samples, 97.79%)</title><rect x="23.7" y="549" width="1154.0" height="15.0" fill="rgb(225,195,47)" rx="2" ry="2" />
<text  x="26.70" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (284 samples, 0.61%)</title><rect x="16.1" y="565" width="7.1" height="15.0" fill="rgb(247,126,44)" rx="2" ry="2" />
<text  x="19.10" y="575.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (10 samples, 0.02%)</title><rect x="213.0" y="149" width="0.2" height="15.0" fill="rgb(245,140,4)" rx="2" ry="2" />
<text  x="215.99" y="159.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,668 samples, 5.70%)</title><rect x="872.7" y="421" width="67.2" height="15.0" fill="rgb(220,86,31)" rx="2" ry="2" />
<text  x="875.65" y="431.5" >cql3::r..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (90 samples, 0.19%)</title><rect x="1156.4" y="453" width="2.3" height="15.0" fill="rgb(225,210,7)" rx="2" ry="2" />
<text  x="1159.42" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (11 samples, 0.02%)</title><rect x="89.4" y="421" width="0.2" height="15.0" fill="rgb(228,47,14)" rx="2" ry="2" />
<text  x="92.37" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="901.8" y="357" width="0.3" height="15.0" fill="rgb(243,68,41)" rx="2" ry="2" />
<text  x="904.84" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (15 samples, 0.03%)</title><rect x="683.5" y="453" width="0.3" height="15.0" fill="rgb(216,137,14)" rx="2" ry="2" />
<text  x="686.46" y="463.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.18%)</title><rect x="542.0" y="341" width="2.1" height="15.0" fill="rgb(215,191,27)" rx="2" ry="2" />
<text  x="545.00" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (8 samples, 0.02%)</title><rect x="595.6" y="437" width="0.2" height="15.0" fill="rgb(236,28,34)" rx="2" ry="2" />
<text  x="598.55" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="934.8" y="405" width="0.1" height="15.0" fill="rgb(245,19,45)" rx="2" ry="2" />
<text  x="937.82" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="781.3" y="213" width="0.1" height="15.0" fill="rgb(247,82,43)" rx="2" ry="2" />
<text  x="784.32" y="223.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="816.3" y="277" width="0.2" height="15.0" fill="rgb(241,72,52)" rx="2" ry="2" />
<text  x="819.28" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="892.9" y="277" width="0.3" height="15.0" fill="rgb(222,64,5)" rx="2" ry="2" />
<text  x="895.90" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="894.6" y="277" width="0.2" height="15.0" fill="rgb(208,200,24)" rx="2" ry="2" />
<text  x="897.62" y="287.5" ></text>
</g>
<g >
<title>database::query (143 samples, 0.31%)</title><rect x="43.4" y="501" width="3.6" height="15.0" fill="rgb(210,218,52)" rx="2" ry="2" />
<text  x="46.40" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (17 samples, 0.04%)</title><rect x="439.5" y="277" width="0.5" height="15.0" fill="rgb(225,118,27)" rx="2" ry="2" />
<text  x="442.54" y="287.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="1124.1" y="421" width="1.1" height="15.0" fill="rgb(252,98,28)" rx="2" ry="2" />
<text  x="1127.11" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (19 samples, 0.04%)</title><rect x="642.2" y="469" width="0.5" height="15.0" fill="rgb(220,56,28)" rx="2" ry="2" />
<text  x="645.18" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (31 samples, 0.07%)</title><rect x="785.5" y="181" width="0.8" height="15.0" fill="rgb(240,167,40)" rx="2" ry="2" />
<text  x="788.50" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%)</title><rect x="837.0" y="373" width="0.3" height="15.0" fill="rgb(240,203,28)" rx="2" ry="2" />
<text  x="840.01" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="540.7" y="341" width="1.1" height="15.0" fill="rgb(214,58,12)" rx="2" ry="2" />
<text  x="543.72" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%)</title><rect x="564.7" y="309" width="0.1" height="15.0" fill="rgb(252,133,14)" rx="2" ry="2" />
<text  x="567.72" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (104 samples, 0.22%)</title><rect x="736.5" y="293" width="2.7" height="15.0" fill="rgb(237,32,44)" rx="2" ry="2" />
<text  x="739.53" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,447 samples, 9.49%)</title><rect x="420.1" y="389" width="112.1" height="15.0" fill="rgb(209,123,20)" rx="2" ry="2" />
<text  x="423.14" y="399.5" >std::function..</text>
</g>
<g >
<title>cql3_parser::CqlParser::term (8 samples, 0.02%)</title><rect x="21.0" y="325" width="0.2" height="15.0" fill="rgb(251,150,29)" rx="2" ry="2" />
<text  x="23.98" y="335.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.04%)</title><rect x="1167.8" y="469" width="0.5" height="15.0" fill="rgb(252,160,47)" rx="2" ry="2" />
<text  x="1170.81" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="951.7" y="325" width="0.1" height="15.0" fill="rgb(211,192,7)" rx="2" ry="2" />
<text  x="954.69" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="1048.6" y="277" width="0.1" height="15.0" fill="rgb(226,165,2)" rx="2" ry="2" />
<text  x="1051.57" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (9 samples, 0.02%)</title><rect x="696.1" y="421" width="0.2" height="15.0" fill="rgb(226,97,32)" rx="2" ry="2" />
<text  x="699.06" y="431.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (9 samples, 0.02%)</title><rect x="18.5" y="357" width="0.2" height="15.0" fill="rgb(207,154,39)" rx="2" ry="2" />
<text  x="21.51" y="367.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (52 samples, 0.11%)</title><rect x="455.2" y="325" width="1.3" height="15.0" fill="rgb(212,95,3)" rx="2" ry="2" />
<text  x="458.18" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="449.2" y="277" width="0.3" height="15.0" fill="rgb(212,159,20)" rx="2" ry="2" />
<text  x="452.18" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (5 samples, 0.01%)</title><rect x="602.7" y="437" width="0.1" height="15.0" fill="rgb(233,75,27)" rx="2" ry="2" />
<text  x="605.68" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="140.1" y="245" width="0.1" height="15.0" fill="rgb(239,196,40)" rx="2" ry="2" />
<text  x="143.07" y="255.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (8 samples, 0.02%)</title><rect x="242.4" y="213" width="0.2" height="15.0" fill="rgb(240,200,26)" rx="2" ry="2" />
<text  x="245.39" y="223.5" ></text>
</g>
<g >
<title>compound_type&lt; (186 samples, 0.40%)</title><rect x="477.0" y="213" width="4.7" height="15.0" fill="rgb(252,118,42)" rx="2" ry="2" />
<text  x="480.02" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="993.4" y="325" width="0.1" height="15.0" fill="rgb(249,112,37)" rx="2" ry="2" />
<text  x="996.35" y="335.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (6 samples, 0.01%)</title><rect x="1080.0" y="325" width="0.2" height="15.0" fill="rgb(229,153,27)" rx="2" ry="2" />
<text  x="1083.03" y="335.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (21 samples, 0.04%)</title><rect x="405.0" y="229" width="0.5" height="15.0" fill="rgb(213,203,42)" rx="2" ry="2" />
<text  x="407.98" y="239.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="764.1" y="357" width="0.1" height="15.0" fill="rgb(215,148,5)" rx="2" ry="2" />
<text  x="767.11" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="598.8" y="421" width="0.2" height="15.0" fill="rgb(221,53,41)" rx="2" ry="2" />
<text  x="601.78" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (19 samples, 0.04%)</title><rect x="569.8" y="357" width="0.5" height="15.0" fill="rgb(215,23,47)" rx="2" ry="2" />
<text  x="572.84" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%)</title><rect x="291.7" y="261" width="0.1" height="15.0" fill="rgb(250,27,27)" rx="2" ry="2" />
<text  x="294.66" y="271.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="19.3" y="309" width="0.2" height="15.0" fill="rgb(244,186,1)" rx="2" ry="2" />
<text  x="22.34" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (29 samples, 0.06%)</title><rect x="1154.7" y="453" width="0.7" height="15.0" fill="rgb(248,39,41)" rx="2" ry="2" />
<text  x="1157.69" y="463.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (43 samples, 0.09%)</title><rect x="719.5" y="293" width="1.1" height="15.0" fill="rgb(227,108,12)" rx="2" ry="2" />
<text  x="722.48" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (48 samples, 0.10%)</title><rect x="321.8" y="181" width="1.2" height="15.0" fill="rgb(210,90,11)" rx="2" ry="2" />
<text  x="324.78" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="1151.4" y="485" width="0.4" height="15.0" fill="rgb(241,106,36)" rx="2" ry="2" />
<text  x="1154.41" y="495.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (12 samples, 0.03%)</title><rect x="1141.3" y="213" width="0.3" height="15.0" fill="rgb(215,216,27)" rx="2" ry="2" />
<text  x="1144.34" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (49 samples, 0.10%)</title><rect x="1104.8" y="373" width="1.2" height="15.0" fill="rgb(225,129,23)" rx="2" ry="2" />
<text  x="1107.79" y="383.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="525.6" y="309" width="0.1" height="15.0" fill="rgb(248,70,16)" rx="2" ry="2" />
<text  x="528.61" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (295 samples, 0.63%)</title><rect x="499.4" y="245" width="7.4" height="15.0" fill="rgb(228,155,5)" rx="2" ry="2" />
<text  x="502.39" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.03%)</title><rect x="321.4" y="181" width="0.4" height="15.0" fill="rgb(214,220,29)" rx="2" ry="2" />
<text  x="324.38" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (30 samples, 0.06%)</title><rect x="1076.9" y="293" width="0.8" height="15.0" fill="rgb(230,71,1)" rx="2" ry="2" />
<text  x="1079.90" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="584.6" y="373" width="0.2" height="15.0" fill="rgb(221,128,47)" rx="2" ry="2" />
<text  x="587.65" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (13 samples, 0.03%)</title><rect x="196.0" y="133" width="0.3" height="15.0" fill="rgb(250,191,29)" rx="2" ry="2" />
<text  x="198.97" y="143.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (4 samples, 0.01%)</title><rect x="116.9" y="293" width="0.1" height="15.0" fill="rgb(249,79,24)" rx="2" ry="2" />
<text  x="119.92" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,555 samples, 5.45%)</title><rect x="992.4" y="341" width="64.3" height="15.0" fill="rgb(205,51,39)" rx="2" ry="2" />
<text  x="995.37" y="351.5" >service..</text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (20 samples, 0.04%)</title><rect x="640.2" y="421" width="0.5" height="15.0" fill="rgb(245,10,47)" rx="2" ry="2" />
<text  x="643.16" y="431.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (28 samples, 0.06%)</title><rect x="570.3" y="357" width="0.7" height="15.0" fill="rgb(236,15,42)" rx="2" ry="2" />
<text  x="573.32" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (156 samples, 0.33%)</title><rect x="183.0" y="53" width="4.0" height="15.0" fill="rgb(215,65,23)" rx="2" ry="2" />
<text  x="186.04" y="63.5" ></text>
</g>
<g >
<title>schema::column_at (48 samples, 0.10%)</title><rect x="323.6" y="181" width="1.2" height="15.0" fill="rgb(240,120,21)" rx="2" ry="2" />
<text  x="326.57" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="700.8" y="485" width="0.4" height="15.0" fill="rgb(233,165,52)" rx="2" ry="2" />
<text  x="703.82" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1168.7" y="453" width="0.1" height="15.0" fill="rgb(239,214,41)" rx="2" ry="2" />
<text  x="1171.67" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="132.1" y="229" width="0.1" height="15.0" fill="rgb(250,73,29)" rx="2" ry="2" />
<text  x="135.09" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (26 samples, 0.06%)</title><rect x="638.5" y="437" width="0.6" height="15.0" fill="rgb(252,207,22)" rx="2" ry="2" />
<text  x="641.48" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (435 samples, 0.93%)</title><rect x="32.3" y="501" width="11.0" height="15.0" fill="rgb(240,10,40)" rx="2" ry="2" />
<text  x="35.32" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="643.2" y="437" width="0.3" height="15.0" fill="rgb(238,29,52)" rx="2" ry="2" />
<text  x="646.16" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (19 samples, 0.04%)</title><rect x="364.2" y="213" width="0.5" height="15.0" fill="rgb(245,228,13)" rx="2" ry="2" />
<text  x="367.20" y="223.5" ></text>
</g>
<g >
<title>operator delete (59 samples, 0.13%)</title><rect x="932.3" y="405" width="1.5" height="15.0" fill="rgb(228,138,36)" rx="2" ry="2" />
<text  x="935.27" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (24 samples, 0.05%)</title><rect x="904.5" y="325" width="0.6" height="15.0" fill="rgb(251,117,34)" rx="2" ry="2" />
<text  x="907.46" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="850.8" y="405" width="0.1" height="15.0" fill="rgb(249,47,12)" rx="2" ry="2" />
<text  x="853.79" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (21 samples, 0.04%)</title><rect x="1173.6" y="421" width="0.6" height="15.0" fill="rgb(228,129,22)" rx="2" ry="2" />
<text  x="1176.63" y="431.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="485.9" y="325" width="0.1" height="15.0" fill="rgb(245,170,5)" rx="2" ry="2" />
<text  x="488.88" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="848.7" y="469" width="0.2" height="15.0" fill="rgb(224,49,53)" rx="2" ry="2" />
<text  x="851.70" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="145.5" y="197" width="0.2" height="15.0" fill="rgb(231,98,16)" rx="2" ry="2" />
<text  x="148.54" y="207.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (6 samples, 0.01%)</title><rect x="142.4" y="213" width="0.1" height="15.0" fill="rgb(250,59,2)" rx="2" ry="2" />
<text  x="145.36" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.03%)</title><rect x="596.9" y="421" width="0.3" height="15.0" fill="rgb(252,26,3)" rx="2" ry="2" />
<text  x="599.86" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="564.3" y="309" width="0.3" height="15.0" fill="rgb(227,68,18)" rx="2" ry="2" />
<text  x="567.27" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (6 samples, 0.01%)</title><rect x="22.3" y="373" width="0.2" height="15.0" fill="rgb(210,146,0)" rx="2" ry="2" />
<text  x="25.34" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (23 samples, 0.05%)</title><rect x="905.3" y="373" width="0.6" height="15.0" fill="rgb(234,124,5)" rx="2" ry="2" />
<text  x="908.32" y="383.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (640 samples, 1.37%)</title><rect x="118.7" y="293" width="16.2" height="15.0" fill="rgb(254,124,22)" rx="2" ry="2" />
<text  x="121.74" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (8 samples, 0.02%)</title><rect x="216.0" y="181" width="0.2" height="15.0" fill="rgb(210,169,17)" rx="2" ry="2" />
<text  x="218.99" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="836.4" y="389" width="0.9" height="15.0" fill="rgb(227,87,9)" rx="2" ry="2" />
<text  x="839.36" y="399.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (5 samples, 0.01%)</title><rect x="930.5" y="405" width="0.1" height="15.0" fill="rgb(239,169,52)" rx="2" ry="2" />
<text  x="933.51" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (214 samples, 0.46%)</title><rect x="16.6" y="469" width="5.4" height="15.0" fill="rgb(227,32,49)" rx="2" ry="2" />
<text  x="19.62" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="1069.3" y="341" width="0.2" height="15.0" fill="rgb(236,11,18)" rx="2" ry="2" />
<text  x="1072.35" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (10 samples, 0.02%)</title><rect x="834.2" y="389" width="0.2" height="15.0" fill="rgb(214,131,31)" rx="2" ry="2" />
<text  x="837.16" y="399.5" ></text>
</g>
<g >
<title>all (46,847 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(226,0,43)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (12 samples, 0.03%)</title><rect x="307.7" y="165" width="0.3" height="15.0" fill="rgb(220,221,39)" rx="2" ry="2" />
<text  x="310.70" y="175.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (48 samples, 0.10%)</title><rect x="221.4" y="229" width="1.2" height="15.0" fill="rgb(219,20,31)" rx="2" ry="2" />
<text  x="224.36" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (41 samples, 0.09%)</title><rect x="777.2" y="245" width="1.0" height="15.0" fill="rgb(222,212,14)" rx="2" ry="2" />
<text  x="780.21" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (97 samples, 0.21%)</title><rect x="718.6" y="309" width="2.5" height="15.0" fill="rgb(212,215,21)" rx="2" ry="2" />
<text  x="721.62" y="319.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="412.1" y="341" width="0.9" height="15.0" fill="rgb(213,212,54)" rx="2" ry="2" />
<text  x="415.13" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (13 samples, 0.03%)</title><rect x="627.5" y="453" width="0.3" height="15.0" fill="rgb(253,62,5)" rx="2" ry="2" />
<text  x="630.47" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (8 samples, 0.02%)</title><rect x="255.5" y="309" width="0.2" height="15.0" fill="rgb(229,160,21)" rx="2" ry="2" />
<text  x="258.49" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (48 samples, 0.10%)</title><rect x="812.8" y="309" width="1.2" height="15.0" fill="rgb(229,138,19)" rx="2" ry="2" />
<text  x="815.83" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1037.5" y="229" width="0.2" height="15.0" fill="rgb(219,2,15)" rx="2" ry="2" />
<text  x="1040.46" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (45 samples, 0.10%)</title><rect x="92.4" y="405" width="1.1" height="15.0" fill="rgb(228,119,12)" rx="2" ry="2" />
<text  x="95.42" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (7 samples, 0.01%)</title><rect x="216.4" y="181" width="0.2" height="15.0" fill="rgb(230,27,26)" rx="2" ry="2" />
<text  x="219.39" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (19 samples, 0.04%)</title><rect x="446.5" y="261" width="0.5" height="15.0" fill="rgb(213,63,23)" rx="2" ry="2" />
<text  x="449.51" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (7 samples, 0.01%)</title><rect x="416.2" y="405" width="0.1" height="15.0" fill="rgb(234,19,2)" rx="2" ry="2" />
<text  x="419.16" y="415.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="849.8" y="437" width="0.7" height="15.0" fill="rgb(226,94,1)" rx="2" ry="2" />
<text  x="852.76" y="447.5" ></text>
</g>
<g >
<title>database::find_uuid (202 samples, 0.43%)</title><rect x="749.2" y="389" width="5.0" height="15.0" fill="rgb(253,81,47)" rx="2" ry="2" />
<text  x="752.15" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="1053.7" y="293" width="0.3" height="15.0" fill="rgb(251,137,49)" rx="2" ry="2" />
<text  x="1056.71" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="971.4" y="325" width="0.5" height="15.0" fill="rgb(228,151,4)" rx="2" ry="2" />
<text  x="974.36" y="335.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.02%)</title><rect x="237.4" y="213" width="0.2" height="15.0" fill="rgb(248,134,42)" rx="2" ry="2" />
<text  x="240.38" y="223.5" ></text>
</g>
<g >
<title>query::result::result (7 samples, 0.01%)</title><rect x="600.5" y="421" width="0.2" height="15.0" fill="rgb(219,49,42)" rx="2" ry="2" />
<text  x="603.54" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="74.1" y="453" width="0.2" height="15.0" fill="rgb(241,122,28)" rx="2" ry="2" />
<text  x="77.08" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="818.9" y="277" width="0.1" height="15.0" fill="rgb(225,88,19)" rx="2" ry="2" />
<text  x="821.87" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="41.7" y="453" width="0.1" height="15.0" fill="rgb(209,106,11)" rx="2" ry="2" />
<text  x="44.69" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (117 samples, 0.25%)</title><rect x="981.1" y="341" width="3.0" height="15.0" fill="rgb(220,33,15)" rx="2" ry="2" />
<text  x="984.14" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (79 samples, 0.17%)</title><rect x="838.6" y="373" width="2.0" height="15.0" fill="rgb(217,109,0)" rx="2" ry="2" />
<text  x="841.60" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="902.1" y="357" width="0.2" height="15.0" fill="rgb(253,95,30)" rx="2" ry="2" />
<text  x="905.15" y="367.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (78 samples, 0.17%)</title><rect x="500.7" y="229" width="2.0" height="15.0" fill="rgb(229,119,38)" rx="2" ry="2" />
<text  x="503.72" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="578.2" y="373" width="0.2" height="15.0" fill="rgb(242,120,2)" rx="2" ry="2" />
<text  x="581.22" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (33 samples, 0.07%)</title><rect x="249.1" y="277" width="0.8" height="15.0" fill="rgb(231,178,27)" rx="2" ry="2" />
<text  x="252.09" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="1046.1" y="277" width="0.1" height="15.0" fill="rgb(240,124,27)" rx="2" ry="2" />
<text  x="1049.12" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (41 samples, 0.09%)</title><rect x="1147.1" y="485" width="1.0" height="15.0" fill="rgb(228,225,4)" rx="2" ry="2" />
<text  x="1150.05" y="495.5" ></text>
</g>
<g >
<title>query::result::builder::builder (150 samples, 0.32%)</title><rect x="588.4" y="421" width="3.8" height="15.0" fill="rgb(244,148,30)" rx="2" ry="2" />
<text  x="591.43" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (15 samples, 0.03%)</title><rect x="18.9" y="341" width="0.4" height="15.0" fill="rgb(225,194,8)" rx="2" ry="2" />
<text  x="21.92" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (58 samples, 0.12%)</title><rect x="1164.5" y="469" width="1.5" height="15.0" fill="rgb(253,214,46)" rx="2" ry="2" />
<text  x="1167.51" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (30 samples, 0.06%)</title><rect x="856.1" y="501" width="0.8" height="15.0" fill="rgb(232,157,35)" rx="2" ry="2" />
<text  x="859.13" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="748.6" y="325" width="0.5" height="15.0" fill="rgb(241,135,26)" rx="2" ry="2" />
<text  x="751.62" y="335.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (4 samples, 0.01%)</title><rect x="764.2" y="357" width="0.1" height="15.0" fill="rgb(224,2,33)" rx="2" ry="2" />
<text  x="767.24" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="570.9" y="341" width="0.1" height="15.0" fill="rgb(242,183,51)" rx="2" ry="2" />
<text  x="573.87" y="351.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (6 samples, 0.01%)</title><rect x="386.6" y="181" width="0.1" height="15.0" fill="rgb(230,69,45)" rx="2" ry="2" />
<text  x="389.59" y="191.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (127 samples, 0.27%)</title><rect x="911.5" y="373" width="3.2" height="15.0" fill="rgb(213,188,53)" rx="2" ry="2" />
<text  x="914.52" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (4 samples, 0.01%)</title><rect x="1109.8" y="421" width="0.1" height="15.0" fill="rgb(207,168,27)" rx="2" ry="2" />
<text  x="1112.80" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (33 samples, 0.07%)</title><rect x="322.2" y="165" width="0.8" height="15.0" fill="rgb(206,63,40)" rx="2" ry="2" />
<text  x="325.16" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (47 samples, 0.10%)</title><rect x="218.9" y="165" width="1.2" height="15.0" fill="rgb(247,216,21)" rx="2" ry="2" />
<text  x="221.89" y="175.5" ></text>
</g>
<g >
<title>query::querier_base::close (17 samples, 0.04%)</title><rect x="1175.3" y="485" width="0.4" height="15.0" fill="rgb(220,16,8)" rx="2" ry="2" />
<text  x="1178.32" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (4 samples, 0.01%)</title><rect x="563.0" y="261" width="0.1" height="15.0" fill="rgb(211,39,39)" rx="2" ry="2" />
<text  x="566.01" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="515.7" y="309" width="0.1" height="15.0" fill="rgb(244,30,43)" rx="2" ry="2" />
<text  x="518.66" y="319.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (27 samples, 0.06%)</title><rect x="39.3" y="405" width="0.6" height="15.0" fill="rgb(217,142,45)" rx="2" ry="2" />
<text  x="42.27" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="928.6" y="309" width="0.2" height="15.0" fill="rgb(239,217,48)" rx="2" ry="2" />
<text  x="931.65" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (17 samples, 0.04%)</title><rect x="263.3" y="341" width="0.4" height="15.0" fill="rgb(206,197,32)" rx="2" ry="2" />
<text  x="266.32" y="351.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (117 samples, 0.25%)</title><rect x="354.8" y="165" width="3.0" height="15.0" fill="rgb(220,100,8)" rx="2" ry="2" />
<text  x="357.80" y="175.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (442 samples, 0.94%)</title><rect x="829.9" y="437" width="11.1" height="15.0" fill="rgb(239,149,49)" rx="2" ry="2" />
<text  x="832.86" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="202.8" y="117" width="0.1" height="15.0" fill="rgb(240,13,0)" rx="2" ry="2" />
<text  x="205.82" y="127.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (430 samples, 0.92%)</title><rect x="664.2" y="501" width="10.8" height="15.0" fill="rgb(209,15,12)" rx="2" ry="2" />
<text  x="667.17" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="240.2" y="245" width="0.1" height="15.0" fill="rgb(250,12,10)" rx="2" ry="2" />
<text  x="243.20" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%)</title><rect x="19.0" y="325" width="0.1" height="15.0" fill="rgb(216,191,17)" rx="2" ry="2" />
<text  x="21.97" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (31 samples, 0.07%)</title><rect x="942.4" y="389" width="0.8" height="15.0" fill="rgb(246,165,15)" rx="2" ry="2" />
<text  x="945.45" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="41.4" y="453" width="0.3" height="15.0" fill="rgb(245,25,27)" rx="2" ry="2" />
<text  x="44.44" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="90.4" y="421" width="0.3" height="15.0" fill="rgb(220,3,25)" rx="2" ry="2" />
<text  x="93.38" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="41.5" y="437" width="0.2" height="15.0" fill="rgb(250,37,29)" rx="2" ry="2" />
<text  x="44.54" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="1154.2" y="405" width="0.1" height="15.0" fill="rgb(208,163,14)" rx="2" ry="2" />
<text  x="1157.18" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (13 samples, 0.03%)</title><rect x="596.8" y="437" width="0.4" height="15.0" fill="rgb(220,70,14)" rx="2" ry="2" />
<text  x="599.84" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%)</title><rect x="784.5" y="197" width="0.3" height="15.0" fill="rgb(238,141,2)" rx="2" ry="2" />
<text  x="787.54" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (62 samples, 0.13%)</title><rect x="784.8" y="213" width="1.6" height="15.0" fill="rgb(216,43,46)" rx="2" ry="2" />
<text  x="787.79" y="223.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (577 samples, 1.23%)</title><rect x="495.1" y="277" width="14.5" height="15.0" fill="rgb(223,145,25)" rx="2" ry="2" />
<text  x="498.08" y="287.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (139 samples, 0.30%)</title><rect x="842.5" y="405" width="3.5" height="15.0" fill="rgb(206,218,28)" rx="2" ry="2" />
<text  x="845.53" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="645.4" y="437" width="0.1" height="15.0" fill="rgb(246,117,23)" rx="2" ry="2" />
<text  x="648.35" y="447.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.01%)</title><rect x="735.3" y="293" width="0.2" height="15.0" fill="rgb(219,193,3)" rx="2" ry="2" />
<text  x="738.35" y="303.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (148 samples, 0.32%)</title><rect x="502.8" y="229" width="3.7" height="15.0" fill="rgb(241,140,47)" rx="2" ry="2" />
<text  x="505.79" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (82 samples, 0.18%)</title><rect x="817.9" y="341" width="2.1" height="15.0" fill="rgb(206,35,47)" rx="2" ry="2" />
<text  x="820.92" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="954.6" y="405" width="0.1" height="15.0" fill="rgb(212,13,37)" rx="2" ry="2" />
<text  x="957.56" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="249.9" y="277" width="0.2" height="15.0" fill="rgb(251,94,2)" rx="2" ry="2" />
<text  x="252.94" y="287.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (19 samples, 0.04%)</title><rect x="130.5" y="229" width="0.4" height="15.0" fill="rgb(236,192,40)" rx="2" ry="2" />
<text  x="133.45" y="239.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.01%)</title><rect x="1032.8" y="165" width="0.2" height="15.0" fill="rgb(231,217,45)" rx="2" ry="2" />
<text  x="1035.85" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (10 samples, 0.02%)</title><rect x="1104.3" y="357" width="0.2" height="15.0" fill="rgb(221,167,43)" rx="2" ry="2" />
<text  x="1107.26" y="367.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (214 samples, 0.46%)</title><rect x="16.6" y="453" width="5.4" height="15.0" fill="rgb(228,74,41)" rx="2" ry="2" />
<text  x="19.62" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="623.1" y="485" width="0.2" height="15.0" fill="rgb(239,112,45)" rx="2" ry="2" />
<text  x="626.11" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (63 samples, 0.13%)</title><rect x="237.9" y="213" width="1.6" height="15.0" fill="rgb(215,122,27)" rx="2" ry="2" />
<text  x="240.88" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (18 samples, 0.04%)</title><rect x="804.0" y="293" width="0.4" height="15.0" fill="rgb(229,226,44)" rx="2" ry="2" />
<text  x="806.96" y="303.5" ></text>
</g>
<g >
<title>row::external_memory_usage (228 samples, 0.49%)</title><rect x="197.7" y="149" width="5.7" height="15.0" fill="rgb(240,167,40)" rx="2" ry="2" />
<text  x="200.70" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (168 samples, 0.36%)</title><rect x="659.9" y="485" width="4.2" height="15.0" fill="rgb(205,50,40)" rx="2" ry="2" />
<text  x="662.91" y="495.5" ></text>
</g>
<g >
<title>query::result::builder::build (48 samples, 0.10%)</title><rect x="585.6" y="437" width="1.2" height="15.0" fill="rgb(220,33,6)" rx="2" ry="2" />
<text  x="588.63" y="447.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (211 samples, 0.45%)</title><rect x="887.1" y="277" width="5.3" height="15.0" fill="rgb(206,19,33)" rx="2" ry="2" />
<text  x="890.06" y="287.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,893 samples, 4.04%)</title><rect x="313.3" y="213" width="47.7" height="15.0" fill="rgb(226,69,15)" rx="2" ry="2" />
<text  x="316.34" y="223.5" >quer..</text>
</g>
<g >
<title>database::find_keyspace (187 samples, 0.40%)</title><rect x="1062.8" y="341" width="4.7" height="15.0" fill="rgb(226,186,50)" rx="2" ry="2" />
<text  x="1065.77" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="1170.0" y="437" width="0.1" height="15.0" fill="rgb(224,67,27)" rx="2" ry="2" />
<text  x="1172.98" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="815.7" y="261" width="0.1" height="15.0" fill="rgb(254,70,29)" rx="2" ry="2" />
<text  x="818.68" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="272.3" y="261" width="1.8" height="15.0" fill="rgb(246,44,18)" rx="2" ry="2" />
<text  x="275.26" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="559.3" y="277" width="0.2" height="15.0" fill="rgb(211,172,30)" rx="2" ry="2" />
<text  x="562.31" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (4 samples, 0.01%)</title><rect x="777.4" y="229" width="0.1" height="15.0" fill="rgb(213,94,35)" rx="2" ry="2" />
<text  x="780.39" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (206 samples, 0.44%)</title><rect x="716.0" y="405" width="5.2" height="15.0" fill="rgb(241,49,43)" rx="2" ry="2" />
<text  x="719.03" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,016 samples, 10.71%)</title><rect x="283.9" y="325" width="126.4" height="15.0" fill="rgb(215,57,31)" rx="2" ry="2" />
<text  x="286.92" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="288.9" y="229" width="0.2" height="15.0" fill="rgb(239,228,44)" rx="2" ry="2" />
<text  x="291.91" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="598.5" y="421" width="0.2" height="15.0" fill="rgb(234,40,32)" rx="2" ry="2" />
<text  x="601.53" y="431.5" ></text>
</g>
<g >
<title>__libc_read (4 samples, 0.01%)</title><rect x="1176.9" y="453" width="0.1" height="15.0" fill="rgb(235,98,45)" rx="2" ry="2" />
<text  x="1179.90" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (17 samples, 0.04%)</title><rect x="897.7" y="309" width="0.4" height="15.0" fill="rgb(217,189,51)" rx="2" ry="2" />
<text  x="900.71" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (8 samples, 0.02%)</title><rect x="1151.2" y="485" width="0.2" height="15.0" fill="rgb(250,209,12)" rx="2" ry="2" />
<text  x="1154.21" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="20.2" y="261" width="0.1" height="15.0" fill="rgb(233,49,13)" rx="2" ry="2" />
<text  x="23.20" y="271.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (64 samples, 0.14%)</title><rect x="1152.8" y="453" width="1.7" height="15.0" fill="rgb(215,91,41)" rx="2" ry="2" />
<text  x="1155.85" y="463.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (10 samples, 0.02%)</title><rect x="86.2" y="437" width="0.2" height="15.0" fill="rgb(211,120,12)" rx="2" ry="2" />
<text  x="89.17" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (37 samples, 0.08%)</title><rect x="145.8" y="197" width="0.9" height="15.0" fill="rgb(221,54,52)" rx="2" ry="2" />
<text  x="148.82" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (29 samples, 0.06%)</title><rect x="1176.9" y="501" width="0.7" height="15.0" fill="rgb(218,130,18)" rx="2" ry="2" />
<text  x="1179.85" y="511.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,823 samples, 3.89%)</title><rect x="314.4" y="197" width="45.9" height="15.0" fill="rgb(224,45,25)" rx="2" ry="2" />
<text  x="317.38" y="207.5" >muta..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="149.6" y="181" width="0.7" height="15.0" fill="rgb(205,147,22)" rx="2" ry="2" />
<text  x="152.59" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (57 samples, 0.12%)</title><rect x="17.0" y="341" width="1.4" height="15.0" fill="rgb(243,118,24)" rx="2" ry="2" />
<text  x="19.95" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (26 samples, 0.06%)</title><rect x="622.2" y="485" width="0.7" height="15.0" fill="rgb(236,194,4)" rx="2" ry="2" />
<text  x="625.20" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="39.8" y="389" width="0.1" height="15.0" fill="rgb(205,111,29)" rx="2" ry="2" />
<text  x="42.80" y="399.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.09%)</title><rect x="899.0" y="293" width="1.0" height="15.0" fill="rgb(252,175,3)" rx="2" ry="2" />
<text  x="902.02" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="704.2" y="501" width="0.2" height="15.0" fill="rgb(245,52,38)" rx="2" ry="2" />
<text  x="707.19" y="511.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (49 samples, 0.10%)</title><rect x="734.3" y="309" width="1.2" height="15.0" fill="rgb(223,102,53)" rx="2" ry="2" />
<text  x="737.27" y="319.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="408.6" y="261" width="0.9" height="15.0" fill="rgb(245,224,50)" rx="2" ry="2" />
<text  x="411.56" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (10 samples, 0.02%)</title><rect x="934.6" y="405" width="0.2" height="15.0" fill="rgb(248,19,35)" rx="2" ry="2" />
<text  x="937.56" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (44 samples, 0.09%)</title><rect x="810.4" y="373" width="1.1" height="15.0" fill="rgb(236,15,46)" rx="2" ry="2" />
<text  x="813.41" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,222 samples, 2.61%)</title><rect x="547.8" y="421" width="30.8" height="15.0" fill="rgb(205,45,30)" rx="2" ry="2" />
<text  x="550.82" y="431.5" >st..</text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (6 samples, 0.01%)</title><rect x="402.5" y="261" width="0.1" height="15.0" fill="rgb(219,205,30)" rx="2" ry="2" />
<text  x="405.46" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="771.8" y="325" width="0.1" height="15.0" fill="rgb(233,28,11)" rx="2" ry="2" />
<text  x="774.80" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (59 samples, 0.13%)</title><rect x="433.2" y="277" width="1.5" height="15.0" fill="rgb(219,115,25)" rx="2" ry="2" />
<text  x="436.19" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="745.6" y="405" width="0.2" height="15.0" fill="rgb(223,145,10)" rx="2" ry="2" />
<text  x="748.60" y="415.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (293 samples, 0.63%)</title><rect x="474.8" y="229" width="7.4" height="15.0" fill="rgb(251,2,13)" rx="2" ry="2" />
<text  x="477.78" y="239.5" ></text>
</g>
<g >
<title>__dynamic_cast (17 samples, 0.04%)</title><rect x="12.4" y="581" width="0.4" height="15.0" fill="rgb(250,110,24)" rx="2" ry="2" />
<text  x="15.39" y="591.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (25 samples, 0.05%)</title><rect x="181.7" y="53" width="0.7" height="15.0" fill="rgb(211,158,32)" rx="2" ry="2" />
<text  x="184.73" y="63.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.07%)</title><rect x="962.2" y="341" width="0.8" height="15.0" fill="rgb(242,172,48)" rx="2" ry="2" />
<text  x="965.17" y="351.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (15 samples, 0.03%)</title><rect x="1140.3" y="277" width="0.4" height="15.0" fill="rgb(208,33,12)" rx="2" ry="2" />
<text  x="1143.30" y="287.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (58 samples, 0.12%)</title><rect x="284.2" y="309" width="1.5" height="15.0" fill="rgb(225,153,16)" rx="2" ry="2" />
<text  x="287.20" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::stats (33 samples, 0.07%)</title><rect x="137.6" y="245" width="0.8" height="15.0" fill="rgb(239,169,21)" rx="2" ry="2" />
<text  x="140.60" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (181 samples, 0.39%)</title><rect x="679.4" y="469" width="4.5" height="15.0" fill="rgb(248,132,48)" rx="2" ry="2" />
<text  x="682.38" y="479.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_a82351dc79d5f64fb8a6629e3d0036241cf3e7c0] (7 samples, 0.01%)</title><rect x="927.3" y="341" width="0.2" height="15.0" fill="rgb(215,189,3)" rx="2" ry="2" />
<text  x="930.29" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (4 samples, 0.01%)</title><rect x="660.7" y="469" width="0.1" height="15.0" fill="rgb(216,189,45)" rx="2" ry="2" />
<text  x="663.67" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (59 samples, 0.13%)</title><rect x="757.2" y="373" width="1.5" height="15.0" fill="rgb(235,115,10)" rx="2" ry="2" />
<text  x="760.21" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (34 samples, 0.07%)</title><rect x="554.1" y="293" width="0.9" height="15.0" fill="rgb(220,121,47)" rx="2" ry="2" />
<text  x="557.12" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (38 samples, 0.08%)</title><rect x="297.4" y="213" width="1.0" height="15.0" fill="rgb(220,182,4)" rx="2" ry="2" />
<text  x="300.42" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="939.7" y="309" width="0.1" height="15.0" fill="rgb(222,71,31)" rx="2" ry="2" />
<text  x="942.68" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (47 samples, 0.10%)</title><rect x="913.0" y="341" width="1.2" height="15.0" fill="rgb(205,182,10)" rx="2" ry="2" />
<text  x="916.00" y="351.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (42 samples, 0.09%)</title><rect x="927.9" y="341" width="1.0" height="15.0" fill="rgb(251,131,17)" rx="2" ry="2" />
<text  x="930.86" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (4 samples, 0.01%)</title><rect x="843.2" y="373" width="0.1" height="15.0" fill="rgb(247,153,12)" rx="2" ry="2" />
<text  x="846.23" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="701.2" y="485" width="0.2" height="15.0" fill="rgb(243,221,2)" rx="2" ry="2" />
<text  x="704.22" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%)</title><rect x="692.0" y="453" width="0.4" height="15.0" fill="rgb(206,106,37)" rx="2" ry="2" />
<text  x="695.03" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (9 samples, 0.02%)</title><rect x="227.0" y="261" width="0.2" height="15.0" fill="rgb(225,34,42)" rx="2" ry="2" />
<text  x="229.97" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="911.1" y="341" width="0.4" height="15.0" fill="rgb(236,95,39)" rx="2" ry="2" />
<text  x="914.14" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (15 samples, 0.03%)</title><rect x="1026.2" y="197" width="0.4" height="15.0" fill="rgb(242,3,24)" rx="2" ry="2" />
<text  x="1029.17" y="207.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="450.1" y="325" width="0.7" height="15.0" fill="rgb(254,38,19)" rx="2" ry="2" />
<text  x="453.07" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (217 samples, 0.46%)</title><rect x="206.9" y="181" width="5.4" height="15.0" fill="rgb(244,90,4)" rx="2" ry="2" />
<text  x="209.87" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,801 samples, 3.84%)</title><rect x="161.3" y="181" width="45.4" height="15.0" fill="rgb(218,141,22)" rx="2" ry="2" />
<text  x="164.31" y="191.5" >muta..</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="944.8" y="373" width="0.2" height="15.0" fill="rgb(210,75,1)" rx="2" ry="2" />
<text  x="947.84" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="517.6" y="325" width="0.1" height="15.0" fill="rgb(219,182,53)" rx="2" ry="2" />
<text  x="520.62" y="335.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (292 samples, 0.62%)</title><rect x="1112.7" y="405" width="7.4" height="15.0" fill="rgb(222,45,10)" rx="2" ry="2" />
<text  x="1115.75" y="415.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="605.4" y="421" width="0.7" height="15.0" fill="rgb(243,61,51)" rx="2" ry="2" />
<text  x="608.35" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="1114.3" y="357" width="0.3" height="15.0" fill="rgb(227,83,17)" rx="2" ry="2" />
<text  x="1117.28" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="134.7" y="277" width="0.2" height="15.0" fill="rgb(223,50,53)" rx="2" ry="2" />
<text  x="137.66" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (143 samples, 0.31%)</title><rect x="582.0" y="421" width="3.6" height="15.0" fill="rgb(226,216,17)" rx="2" ry="2" />
<text  x="585.03" y="431.5" ></text>
</g>
<g >
<title>table::query (34 samples, 0.07%)</title><rect x="1175.2" y="501" width="0.9" height="15.0" fill="rgb(251,144,7)" rx="2" ry="2" />
<text  x="1178.21" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="930.2" y="373" width="0.3" height="15.0" fill="rgb(222,73,38)" rx="2" ry="2" />
<text  x="933.16" y="383.5" ></text>
</g>
<g >
<title>__start_context (292 samples, 0.62%)</title><rect x="15.9" y="613" width="7.3" height="15.0" fill="rgb(221,60,47)" rx="2" ry="2" />
<text  x="18.89" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (19 samples, 0.04%)</title><rect x="88.8" y="421" width="0.4" height="15.0" fill="rgb(219,103,24)" rx="2" ry="2" />
<text  x="91.76" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (15 samples, 0.03%)</title><rect x="638.7" y="421" width="0.3" height="15.0" fill="rgb(227,160,43)" rx="2" ry="2" />
<text  x="641.65" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%)</title><rect x="826.0" y="357" width="0.4" height="15.0" fill="rgb(211,92,35)" rx="2" ry="2" />
<text  x="829.03" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="1155.0" y="421" width="0.4" height="15.0" fill="rgb(213,115,53)" rx="2" ry="2" />
<text  x="1158.01" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (9 samples, 0.02%)</title><rect x="613.2" y="437" width="0.2" height="15.0" fill="rgb(245,118,19)" rx="2" ry="2" />
<text  x="616.19" y="447.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="645.8" y="485" width="0.9" height="15.0" fill="rgb(243,40,43)" rx="2" ry="2" />
<text  x="648.75" y="495.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (16 samples, 0.03%)</title><rect x="911.1" y="357" width="0.4" height="15.0" fill="rgb(205,82,23)" rx="2" ry="2" />
<text  x="914.06" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (14 samples, 0.03%)</title><rect x="132.2" y="261" width="0.3" height="15.0" fill="rgb(207,13,24)" rx="2" ry="2" />
<text  x="135.19" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="203.6" y="165" width="0.4" height="15.0" fill="rgb(208,128,6)" rx="2" ry="2" />
<text  x="206.65" y="175.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="327.0" y="181" width="0.1" height="15.0" fill="rgb(211,44,32)" rx="2" ry="2" />
<text  x="330.00" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (18 samples, 0.04%)</title><rect x="990.4" y="261" width="0.5" height="15.0" fill="rgb(210,124,9)" rx="2" ry="2" />
<text  x="993.43" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (77 samples, 0.16%)</title><rect x="38.0" y="437" width="2.0" height="15.0" fill="rgb(209,95,35)" rx="2" ry="2" />
<text  x="41.03" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (5 samples, 0.01%)</title><rect x="1139.3" y="421" width="0.1" height="15.0" fill="rgb(207,190,28)" rx="2" ry="2" />
<text  x="1142.27" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (7 samples, 0.01%)</title><rect x="17.0" y="309" width="0.2" height="15.0" fill="rgb(248,148,39)" rx="2" ry="2" />
<text  x="20.00" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (40 samples, 0.09%)</title><rect x="717.1" y="341" width="1.0" height="15.0" fill="rgb(244,165,4)" rx="2" ry="2" />
<text  x="720.14" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (171 samples, 0.37%)</title><rect x="539.8" y="373" width="4.3" height="15.0" fill="rgb(232,71,36)" rx="2" ry="2" />
<text  x="542.84" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (15 samples, 0.03%)</title><rect x="388.7" y="229" width="0.3" height="15.0" fill="rgb(228,216,32)" rx="2" ry="2" />
<text  x="391.66" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (8 samples, 0.02%)</title><rect x="977.4" y="357" width="0.2" height="15.0" fill="rgb(213,201,15)" rx="2" ry="2" />
<text  x="980.44" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1107.2" y="357" width="0.2" height="15.0" fill="rgb(213,96,9)" rx="2" ry="2" />
<text  x="1110.23" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="357" width="0.8" height="15.0" fill="rgb(225,158,44)" rx="2" ry="2" />
<text  x="1143.23" y="367.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.09%)</title><rect x="729.8" y="309" width="1.0" height="15.0" fill="rgb(228,204,30)" rx="2" ry="2" />
<text  x="732.81" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (4 samples, 0.01%)</title><rect x="1144.0" y="501" width="0.1" height="15.0" fill="rgb(222,101,5)" rx="2" ry="2" />
<text  x="1146.96" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%)</title><rect x="811.3" y="341" width="0.2" height="15.0" fill="rgb(249,159,19)" rx="2" ry="2" />
<text  x="814.29" y="351.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="1027.8" y="197" width="0.1" height="15.0" fill="rgb(205,177,17)" rx="2" ry="2" />
<text  x="1030.79" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,581 samples, 7.64%)</title><rect x="298.8" y="245" width="90.2" height="15.0" fill="rgb(215,166,11)" rx="2" ry="2" />
<text  x="301.84" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>malloc (5 samples, 0.01%)</title><rect x="591.9" y="389" width="0.1" height="15.0" fill="rgb(207,206,20)" rx="2" ry="2" />
<text  x="594.85" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (4 samples, 0.01%)</title><rect x="811.8" y="373" width="0.1" height="15.0" fill="rgb(229,26,29)" rx="2" ry="2" />
<text  x="814.82" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (4 samples, 0.01%)</title><rect x="140.3" y="245" width="0.1" height="15.0" fill="rgb(246,24,25)" rx="2" ry="2" />
<text  x="143.32" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (6 samples, 0.01%)</title><rect x="140.2" y="245" width="0.1" height="15.0" fill="rgb(232,69,9)" rx="2" ry="2" />
<text  x="143.17" y="255.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%)</title><rect x="808.7" y="277" width="0.5" height="15.0" fill="rgb(225,40,36)" rx="2" ry="2" />
<text  x="811.75" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%)</title><rect x="732.5" y="341" width="0.1" height="15.0" fill="rgb(241,50,9)" rx="2" ry="2" />
<text  x="735.53" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="225.1" y="229" width="0.4" height="15.0" fill="rgb(218,224,29)" rx="2" ry="2" />
<text  x="228.08" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="270.7" y="293" width="0.2" height="15.0" fill="rgb(219,140,9)" rx="2" ry="2" />
<text  x="273.72" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (27 samples, 0.06%)</title><rect x="481.0" y="197" width="0.7" height="15.0" fill="rgb(251,193,24)" rx="2" ry="2" />
<text  x="484.00" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (8 samples, 0.02%)</title><rect x="279.1" y="373" width="0.2" height="15.0" fill="rgb(252,112,13)" rx="2" ry="2" />
<text  x="282.09" y="383.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.01%)</title><rect x="1140.7" y="293" width="0.1" height="15.0" fill="rgb(242,101,17)" rx="2" ry="2" />
<text  x="1143.71" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1026.8" y="181" width="0.3" height="15.0" fill="rgb(209,106,23)" rx="2" ry="2" />
<text  x="1029.83" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="222.3" y="197" width="0.3" height="15.0" fill="rgb(224,151,16)" rx="2" ry="2" />
<text  x="225.29" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (192 samples, 0.41%)</title><rect x="257.6" y="341" width="4.8" height="15.0" fill="rgb(208,206,12)" rx="2" ry="2" />
<text  x="260.58" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="876.5" y="389" width="0.2" height="15.0" fill="rgb(246,142,27)" rx="2" ry="2" />
<text  x="879.53" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (38 samples, 0.08%)</title><rect x="639.8" y="453" width="1.0" height="15.0" fill="rgb(254,156,38)" rx="2" ry="2" />
<text  x="642.81" y="463.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.02%)</title><rect x="1095.1" y="245" width="0.3" height="15.0" fill="rgb(253,86,45)" rx="2" ry="2" />
<text  x="1098.14" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (6 samples, 0.01%)</title><rect x="253.8" y="309" width="0.1" height="15.0" fill="rgb(222,102,18)" rx="2" ry="2" />
<text  x="256.77" y="319.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (10 samples, 0.02%)</title><rect x="1067.5" y="341" width="0.2" height="15.0" fill="rgb(211,157,43)" rx="2" ry="2" />
<text  x="1070.48" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (18 samples, 0.04%)</title><rect x="33.7" y="469" width="0.5" height="15.0" fill="rgb(222,129,6)" rx="2" ry="2" />
<text  x="36.73" y="479.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (56 samples, 0.12%)</title><rect x="526.4" y="261" width="1.4" height="15.0" fill="rgb(220,143,43)" rx="2" ry="2" />
<text  x="529.36" y="271.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (180 samples, 0.38%)</title><rect x="463.4" y="277" width="4.6" height="15.0" fill="rgb(216,99,36)" rx="2" ry="2" />
<text  x="466.44" y="287.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="628.1" y="485" width="0.4" height="15.0" fill="rgb(216,216,29)" rx="2" ry="2" />
<text  x="631.15" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (32 samples, 0.07%)</title><rect x="575.5" y="357" width="0.8" height="15.0" fill="rgb(211,213,1)" rx="2" ry="2" />
<text  x="578.53" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.01%)</title><rect x="428.2" y="341" width="0.1" height="15.0" fill="rgb(211,213,14)" rx="2" ry="2" />
<text  x="431.15" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,075 samples, 12.97%)</title><rect x="109.8" y="357" width="153.0" height="15.0" fill="rgb(205,166,35)" rx="2" ry="2" />
<text  x="112.80" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (8 samples, 0.02%)</title><rect x="22.3" y="389" width="0.2" height="15.0" fill="rgb(222,80,17)" rx="2" ry="2" />
<text  x="25.32" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (16 samples, 0.03%)</title><rect x="229.1" y="213" width="0.4" height="15.0" fill="rgb(219,10,5)" rx="2" ry="2" />
<text  x="232.06" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (23 samples, 0.05%)</title><rect x="320.3" y="181" width="0.5" height="15.0" fill="rgb(220,9,3)" rx="2" ry="2" />
<text  x="323.27" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (57 samples, 0.12%)</title><rect x="849.5" y="453" width="1.4" height="15.0" fill="rgb(206,150,26)" rx="2" ry="2" />
<text  x="852.50" y="463.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (34 samples, 0.07%)</title><rect x="1041.0" y="245" width="0.9" height="15.0" fill="rgb(235,130,40)" rx="2" ry="2" />
<text  x="1044.04" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (94 samples, 0.20%)</title><rect x="1010.1" y="261" width="2.4" height="15.0" fill="rgb(248,125,48)" rx="2" ry="2" />
<text  x="1013.10" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (64 samples, 0.14%)</title><rect x="789.2" y="133" width="1.6" height="15.0" fill="rgb(222,207,0)" rx="2" ry="2" />
<text  x="792.18" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (26 samples, 0.06%)</title><rect x="751.2" y="325" width="0.6" height="15.0" fill="rgb(238,64,23)" rx="2" ry="2" />
<text  x="754.19" y="335.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="1157.7" y="389" width="0.9" height="15.0" fill="rgb(239,220,32)" rx="2" ry="2" />
<text  x="1160.73" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="996.5" y="245" width="2.0" height="15.0" fill="rgb(248,145,49)" rx="2" ry="2" />
<text  x="999.48" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (18 samples, 0.04%)</title><rect x="906.3" y="373" width="0.5" height="15.0" fill="rgb(212,191,43)" rx="2" ry="2" />
<text  x="909.30" y="383.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (102 samples, 0.22%)</title><rect x="512.6" y="325" width="2.6" height="15.0" fill="rgb(231,214,8)" rx="2" ry="2" />
<text  x="515.61" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (92 samples, 0.20%)</title><rect x="973.3" y="325" width="2.3" height="15.0" fill="rgb(233,106,7)" rx="2" ry="2" />
<text  x="976.30" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="796.2" y="245" width="0.3" height="15.0" fill="rgb(250,160,16)" rx="2" ry="2" />
<text  x="799.15" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (15 samples, 0.03%)</title><rect x="1175.3" y="453" width="0.4" height="15.0" fill="rgb(212,40,52)" rx="2" ry="2" />
<text  x="1178.32" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (84 samples, 0.18%)</title><rect x="651.6" y="469" width="2.1" height="15.0" fill="rgb(219,126,15)" rx="2" ry="2" />
<text  x="654.60" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (6 samples, 0.01%)</title><rect x="492.9" y="293" width="0.2" height="15.0" fill="rgb(216,153,54)" rx="2" ry="2" />
<text  x="495.94" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (4 samples, 0.01%)</title><rect x="22.1" y="389" width="0.1" height="15.0" fill="rgb(241,173,14)" rx="2" ry="2" />
<text  x="25.14" y="399.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (135 samples, 0.29%)</title><rect x="65.1" y="405" width="3.4" height="15.0" fill="rgb(208,103,32)" rx="2" ry="2" />
<text  x="68.14" y="415.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%)</title><rect x="720.6" y="293" width="0.5" height="15.0" fill="rgb(229,65,9)" rx="2" ry="2" />
<text  x="723.56" y="303.5" ></text>
</g>
<g >
<title>schema::position (5 samples, 0.01%)</title><rect x="934.1" y="405" width="0.1" height="15.0" fill="rgb(220,108,47)" rx="2" ry="2" />
<text  x="937.06" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (62 samples, 0.13%)</title><rect x="117.0" y="293" width="1.6" height="15.0" fill="rgb(254,131,20)" rx="2" ry="2" />
<text  x="120.03" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%)</title><rect x="971.8" y="309" width="0.1" height="15.0" fill="rgb(229,7,3)" rx="2" ry="2" />
<text  x="974.82" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1105.8" y="341" width="0.2" height="15.0" fill="rgb(253,175,12)" rx="2" ry="2" />
<text  x="1108.85" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (6 samples, 0.01%)</title><rect x="534.3" y="405" width="0.1" height="15.0" fill="rgb(227,137,26)" rx="2" ry="2" />
<text  x="537.27" y="415.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="146.8" y="197" width="0.7" height="15.0" fill="rgb(230,102,20)" rx="2" ry="2" />
<text  x="149.85" y="207.5" ></text>
</g>
<g >
<title>tracing::add_table_name (14 samples, 0.03%)</title><rect x="1138.9" y="421" width="0.4" height="15.0" fill="rgb(229,84,35)" rx="2" ry="2" />
<text  x="1141.92" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="495.9" y="261" width="0.2" height="15.0" fill="rgb(215,139,45)" rx="2" ry="2" />
<text  x="498.88" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (38 samples, 0.08%)</title><rect x="743.1" y="373" width="1.0" height="15.0" fill="rgb(218,71,16)" rx="2" ry="2" />
<text  x="746.11" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="1141.3" y="293" width="0.6" height="15.0" fill="rgb(221,55,29)" rx="2" ry="2" />
<text  x="1144.29" y="303.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (4 samples, 0.01%)</title><rect x="402.0" y="213" width="0.1" height="15.0" fill="rgb(252,150,19)" rx="2" ry="2" />
<text  x="405.01" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (10 samples, 0.02%)</title><rect x="845.8" y="357" width="0.2" height="15.0" fill="rgb(223,51,41)" rx="2" ry="2" />
<text  x="848.78" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="577.3" y="373" width="0.2" height="15.0" fill="rgb(251,78,24)" rx="2" ry="2" />
<text  x="580.32" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (11 samples, 0.02%)</title><rect x="1047.1" y="277" width="0.3" height="15.0" fill="rgb(215,140,24)" rx="2" ry="2" />
<text  x="1050.11" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (467 samples, 1.00%)</title><rect x="265.1" y="341" width="11.8" height="15.0" fill="rgb(208,191,38)" rx="2" ry="2" />
<text  x="268.11" y="351.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="230.0" y="197" width="0.1" height="15.0" fill="rgb(208,78,11)" rx="2" ry="2" />
<text  x="233.00" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="927.5" y="341" width="0.1" height="15.0" fill="rgb(212,1,25)" rx="2" ry="2" />
<text  x="930.46" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (30 samples, 0.06%)</title><rect x="939.1" y="341" width="0.7" height="15.0" fill="rgb(205,198,47)" rx="2" ry="2" />
<text  x="942.07" y="351.5" ></text>
</g>
<g >
<title>db::block_for (5 samples, 0.01%)</title><rect x="1068.3" y="325" width="0.1" height="15.0" fill="rgb(208,79,14)" rx="2" ry="2" />
<text  x="1071.29" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="46.1" y="485" width="0.3" height="15.0" fill="rgb(214,167,33)" rx="2" ry="2" />
<text  x="49.07" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (18 samples, 0.04%)</title><rect x="950.2" y="405" width="0.5" height="15.0" fill="rgb(206,228,32)" rx="2" ry="2" />
<text  x="953.21" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (131 samples, 0.28%)</title><rect x="814.1" y="341" width="3.3" height="15.0" fill="rgb(244,147,21)" rx="2" ry="2" />
<text  x="817.14" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (28 samples, 0.06%)</title><rect x="1047.9" y="261" width="0.7" height="15.0" fill="rgb(238,141,32)" rx="2" ry="2" />
<text  x="1050.86" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="798.6" y="245" width="0.1" height="15.0" fill="rgb(218,117,4)" rx="2" ry="2" />
<text  x="801.62" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,420 samples, 11.57%)</title><rect x="279.5" y="405" width="136.5" height="15.0" fill="rgb(221,30,28)" rx="2" ry="2" />
<text  x="282.49" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%)</title><rect x="562.6" y="277" width="0.5" height="15.0" fill="rgb(228,92,22)" rx="2" ry="2" />
<text  x="565.61" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.14%)</title><rect x="201.2" y="101" width="1.6" height="15.0" fill="rgb(222,69,15)" rx="2" ry="2" />
<text  x="204.20" y="111.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (27 samples, 0.06%)</title><rect x="768.2" y="277" width="0.7" height="15.0" fill="rgb(205,104,53)" rx="2" ry="2" />
<text  x="771.20" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (18 samples, 0.04%)</title><rect x="22.2" y="421" width="0.5" height="15.0" fill="rgb(220,39,10)" rx="2" ry="2" />
<text  x="25.24" y="431.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.02%)</title><rect x="857.5" y="325" width="0.3" height="15.0" fill="rgb(251,29,37)" rx="2" ry="2" />
<text  x="860.51" y="335.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (4 samples, 0.01%)</title><rect x="1104.1" y="357" width="0.1" height="15.0" fill="rgb(226,98,19)" rx="2" ry="2" />
<text  x="1107.13" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (27 samples, 0.06%)</title><rect x="839.3" y="357" width="0.7" height="15.0" fill="rgb(233,85,22)" rx="2" ry="2" />
<text  x="842.30" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (900 samples, 1.92%)</title><rect x="907.8" y="405" width="22.7" height="15.0" fill="rgb(212,172,47)" rx="2" ry="2" />
<text  x="910.84" y="415.5" >c..</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (59 samples, 0.13%)</title><rect x="1167.4" y="485" width="1.5" height="15.0" fill="rgb(219,211,34)" rx="2" ry="2" />
<text  x="1170.43" y="495.5" ></text>
</g>
<g >
<title>database::find_schema (84 samples, 0.18%)</title><rect x="747.0" y="389" width="2.2" height="15.0" fill="rgb(224,126,9)" rx="2" ry="2" />
<text  x="750.04" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="1114.6" y="357" width="0.2" height="15.0" fill="rgb(243,81,17)" rx="2" ry="2" />
<text  x="1117.56" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (22 samples, 0.05%)</title><rect x="494.4" y="277" width="0.6" height="15.0" fill="rgb(235,110,37)" rx="2" ry="2" />
<text  x="497.45" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (28 samples, 0.06%)</title><rect x="19.9" y="309" width="0.7" height="15.0" fill="rgb(220,111,5)" rx="2" ry="2" />
<text  x="22.87" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="1132.2" y="421" width="0.2" height="15.0" fill="rgb(227,159,26)" rx="2" ry="2" />
<text  x="1135.19" y="431.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (195 samples, 0.42%)</title><rect x="1028.2" y="181" width="5.0" height="15.0" fill="rgb(240,209,44)" rx="2" ry="2" />
<text  x="1031.24" y="191.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="20.5" y="245" width="0.1" height="15.0" fill="rgb(238,73,50)" rx="2" ry="2" />
<text  x="23.45" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (16 samples, 0.03%)</title><rect x="22.3" y="405" width="0.4" height="15.0" fill="rgb(216,52,51)" rx="2" ry="2" />
<text  x="25.27" y="415.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (35 samples, 0.07%)</title><rect x="752.9" y="325" width="0.9" height="15.0" fill="rgb(206,218,54)" rx="2" ry="2" />
<text  x="755.88" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="448.4" y="277" width="0.1" height="15.0" fill="rgb(210,184,27)" rx="2" ry="2" />
<text  x="451.35" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (64 samples, 0.14%)</title><rect x="796.0" y="261" width="1.6" height="15.0" fill="rgb(208,46,37)" rx="2" ry="2" />
<text  x="798.95" y="271.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%)</title><rect x="1141.4" y="165" width="0.1" height="15.0" fill="rgb(246,223,38)" rx="2" ry="2" />
<text  x="1144.36" y="175.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (6 samples, 0.01%)</title><rect x="89.6" y="437" width="0.2" height="15.0" fill="rgb(221,10,21)" rx="2" ry="2" />
<text  x="92.65" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (64 samples, 0.14%)</title><rect x="903.5" y="341" width="1.6" height="15.0" fill="rgb(217,60,40)" rx="2" ry="2" />
<text  x="906.46" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (9 samples, 0.02%)</title><rect x="68.7" y="405" width="0.2" height="15.0" fill="rgb(237,150,1)" rx="2" ry="2" />
<text  x="71.71" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="577.2" y="373" width="0.1" height="15.0" fill="rgb(243,92,46)" rx="2" ry="2" />
<text  x="580.17" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (6 samples, 0.01%)</title><rect x="706.0" y="485" width="0.1" height="15.0" fill="rgb(212,153,40)" rx="2" ry="2" />
<text  x="708.98" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (4 samples, 0.01%)</title><rect x="406.0" y="277" width="0.1" height="15.0" fill="rgb(239,49,28)" rx="2" ry="2" />
<text  x="408.96" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="648.2" y="453" width="0.2" height="15.0" fill="rgb(223,52,42)" rx="2" ry="2" />
<text  x="651.20" y="463.5" ></text>
</g>
<g >
<title>database::find_schema (298 samples, 0.64%)</title><rect x="746.7" y="405" width="7.5" height="15.0" fill="rgb(246,139,45)" rx="2" ry="2" />
<text  x="749.73" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="293.4" y="245" width="0.4" height="15.0" fill="rgb(222,152,40)" rx="2" ry="2" />
<text  x="296.44" y="255.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (116 samples, 0.25%)</title><rect x="525.8" y="293" width="3.0" height="15.0" fill="rgb(217,122,34)" rx="2" ry="2" />
<text  x="528.83" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (48 samples, 0.10%)</title><rect x="10.9" y="581" width="1.2" height="15.0" fill="rgb(214,147,6)" rx="2" ry="2" />
<text  x="13.88" y="591.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (234 samples, 0.50%)</title><rect x="1072.9" y="325" width="5.9" height="15.0" fill="rgb(227,61,27)" rx="2" ry="2" />
<text  x="1075.95" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="420.6" y="373" width="0.1" height="15.0" fill="rgb(220,111,6)" rx="2" ry="2" />
<text  x="423.57" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="1077.7" y="293" width="0.3" height="15.0" fill="rgb(231,132,38)" rx="2" ry="2" />
<text  x="1080.71" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.15%)</title><rect x="1071.1" y="309" width="1.7" height="15.0" fill="rgb(236,159,8)" rx="2" ry="2" />
<text  x="1074.06" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (123 samples, 0.26%)</title><rect x="1086.8" y="229" width="3.1" height="15.0" fill="rgb(216,11,15)" rx="2" ry="2" />
<text  x="1089.78" y="239.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (4 samples, 0.01%)</title><rect x="696.2" y="405" width="0.1" height="15.0" fill="rgb(246,193,51)" rx="2" ry="2" />
<text  x="699.18" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="531.7" y="325" width="0.2" height="15.0" fill="rgb(206,165,34)" rx="2" ry="2" />
<text  x="534.73" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="389" width="0.8" height="15.0" fill="rgb(235,54,27)" rx="2" ry="2" />
<text  x="1143.23" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="543.3" y="309" width="0.8" height="15.0" fill="rgb(245,185,46)" rx="2" ry="2" />
<text  x="546.34" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%)</title><rect x="404.1" y="229" width="0.4" height="15.0" fill="rgb(229,112,22)" rx="2" ry="2" />
<text  x="407.12" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (4 samples, 0.01%)</title><rect x="1141.2" y="213" width="0.1" height="15.0" fill="rgb(238,67,0)" rx="2" ry="2" />
<text  x="1144.16" y="223.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (12 samples, 0.03%)</title><rect x="361.0" y="213" width="0.3" height="15.0" fill="rgb(250,47,37)" rx="2" ry="2" />
<text  x="364.03" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.03%)</title><rect x="1101.2" y="357" width="0.3" height="15.0" fill="rgb(238,131,39)" rx="2" ry="2" />
<text  x="1104.21" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (104 samples, 0.22%)</title><rect x="296.2" y="245" width="2.6" height="15.0" fill="rgb(220,144,4)" rx="2" ry="2" />
<text  x="299.22" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%)</title><rect x="512.1" y="325" width="0.1" height="15.0" fill="rgb(245,69,11)" rx="2" ry="2" />
<text  x="515.05" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,179 samples, 2.52%)</title><rect x="877.4" y="389" width="29.7" height="15.0" fill="rgb(217,54,16)" rx="2" ry="2" />
<text  x="880.36" y="399.5" >_Z..</text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (4 samples, 0.01%)</title><rect x="1056.0" y="293" width="0.1" height="15.0" fill="rgb(245,186,17)" rx="2" ry="2" />
<text  x="1059.02" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%)</title><rect x="1037.1" y="229" width="0.2" height="15.0" fill="rgb(209,90,8)" rx="2" ry="2" />
<text  x="1040.11" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (10 samples, 0.02%)</title><rect x="271.2" y="293" width="0.2" height="15.0" fill="rgb(223,74,14)" rx="2" ry="2" />
<text  x="274.15" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="94.5" y="389" width="0.3" height="15.0" fill="rgb(252,62,14)" rx="2" ry="2" />
<text  x="97.53" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (42 samples, 0.09%)</title><rect x="641.0" y="469" width="1.1" height="15.0" fill="rgb(206,140,29)" rx="2" ry="2" />
<text  x="644.02" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="510.7" y="277" width="0.3" height="15.0" fill="rgb(238,104,43)" rx="2" ry="2" />
<text  x="513.69" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="494.9" y="261" width="0.1" height="15.0" fill="rgb(229,192,11)" rx="2" ry="2" />
<text  x="497.88" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (54 samples, 0.12%)</title><rect x="773.5" y="261" width="1.4" height="15.0" fill="rgb(239,64,42)" rx="2" ry="2" />
<text  x="776.51" y="271.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (6 samples, 0.01%)</title><rect x="730.9" y="325" width="0.2" height="15.0" fill="rgb(212,212,20)" rx="2" ry="2" />
<text  x="733.94" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (5 samples, 0.01%)</title><rect x="21.1" y="309" width="0.1" height="15.0" fill="rgb(216,124,40)" rx="2" ry="2" />
<text  x="24.06" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="515.9" y="309" width="0.6" height="15.0" fill="rgb(223,123,18)" rx="2" ry="2" />
<text  x="518.86" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.04%)</title><rect x="1035.9" y="213" width="0.5" height="15.0" fill="rgb(231,226,3)" rx="2" ry="2" />
<text  x="1038.92" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (17 samples, 0.04%)</title><rect x="218.4" y="133" width="0.4" height="15.0" fill="rgb(251,111,26)" rx="2" ry="2" />
<text  x="221.41" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="401.0" y="213" width="0.3" height="15.0" fill="rgb(245,141,54)" rx="2" ry="2" />
<text  x="404.02" y="223.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.06%)</title><rect x="413.3" y="373" width="0.7" height="15.0" fill="rgb(210,228,20)" rx="2" ry="2" />
<text  x="416.32" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="25.3" y="517" width="0.2" height="15.0" fill="rgb(235,156,25)" rx="2" ry="2" />
<text  x="28.34" y="527.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (5 samples, 0.01%)</title><rect x="703.9" y="501" width="0.1" height="15.0" fill="rgb(210,139,18)" rx="2" ry="2" />
<text  x="706.91" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (35 samples, 0.07%)</title><rect x="650.3" y="485" width="0.8" height="15.0" fill="rgb(245,15,47)" rx="2" ry="2" />
<text  x="653.26" y="495.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (22 samples, 0.05%)</title><rect x="1114.8" y="357" width="0.6" height="15.0" fill="rgb(242,49,30)" rx="2" ry="2" />
<text  x="1117.81" y="367.5" ></text>
</g>
<g >
<title>table::set_hit_rate (88 samples, 0.19%)</title><rect x="697.8" y="453" width="2.2" height="15.0" fill="rgb(244,31,14)" rx="2" ry="2" />
<text  x="700.77" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="745.8" y="405" width="0.1" height="15.0" fill="rgb(227,42,7)" rx="2" ry="2" />
<text  x="748.78" y="415.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (6 samples, 0.01%)</title><rect x="742.8" y="389" width="0.1" height="15.0" fill="rgb(239,99,47)" rx="2" ry="2" />
<text  x="745.76" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (8 samples, 0.02%)</title><rect x="636.5" y="469" width="0.2" height="15.0" fill="rgb(244,187,26)" rx="2" ry="2" />
<text  x="639.54" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (13 samples, 0.03%)</title><rect x="576.8" y="373" width="0.3" height="15.0" fill="rgb(242,189,29)" rx="2" ry="2" />
<text  x="579.81" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (71 samples, 0.15%)</title><rect x="685.2" y="485" width="1.8" height="15.0" fill="rgb(230,51,1)" rx="2" ry="2" />
<text  x="688.17" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="814.3" y="325" width="0.3" height="15.0" fill="rgb(239,41,37)" rx="2" ry="2" />
<text  x="817.29" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (56 samples, 0.12%)</title><rect x="19.3" y="341" width="1.4" height="15.0" fill="rgb(241,221,54)" rx="2" ry="2" />
<text  x="22.29" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="445.7" y="261" width="0.1" height="15.0" fill="rgb(207,84,47)" rx="2" ry="2" />
<text  x="448.68" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (338 samples, 0.72%)</title><rect x="62.3" y="437" width="8.5" height="15.0" fill="rgb(228,10,4)" rx="2" ry="2" />
<text  x="65.27" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::operator= (5 samples, 0.01%)</title><rect x="900.1" y="309" width="0.1" height="15.0" fill="rgb(253,90,36)" rx="2" ry="2" />
<text  x="903.06" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="20.2" y="277" width="0.1" height="15.0" fill="rgb(231,135,38)" rx="2" ry="2" />
<text  x="23.20" y="287.5" ></text>
</g>
<g >
<title>operator new (65 samples, 0.14%)</title><rect x="1049.7" y="245" width="1.6" height="15.0" fill="rgb(234,54,19)" rx="2" ry="2" />
<text  x="1052.65" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%)</title><rect x="551.5" y="309" width="0.1" height="15.0" fill="rgb(212,184,5)" rx="2" ry="2" />
<text  x="554.52" y="319.5" ></text>
</g>
<g >
<title>operator new (96 samples, 0.20%)</title><rect x="147.9" y="213" width="2.4" height="15.0" fill="rgb(254,145,29)" rx="2" ry="2" />
<text  x="150.91" y="223.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (14 samples, 0.03%)</title><rect x="73.3" y="453" width="0.4" height="15.0" fill="rgb(249,203,50)" rx="2" ry="2" />
<text  x="76.32" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="133.0" y="261" width="0.1" height="15.0" fill="rgb(205,93,38)" rx="2" ry="2" />
<text  x="135.99" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (56 samples, 0.12%)</title><rect x="383.6" y="165" width="1.4" height="15.0" fill="rgb(253,112,39)" rx="2" ry="2" />
<text  x="386.62" y="175.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (89 samples, 0.19%)</title><rect x="410.9" y="373" width="2.3" height="15.0" fill="rgb(249,65,19)" rx="2" ry="2" />
<text  x="413.95" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (62 samples, 0.13%)</title><rect x="297.3" y="229" width="1.5" height="15.0" fill="rgb(209,50,16)" rx="2" ry="2" />
<text  x="300.27" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (223 samples, 0.48%)</title><rect x="733.7" y="341" width="5.6" height="15.0" fill="rgb(218,167,29)" rx="2" ry="2" />
<text  x="736.71" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="760.5" y="373" width="0.7" height="15.0" fill="rgb(224,143,54)" rx="2" ry="2" />
<text  x="763.54" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (126 samples, 0.27%)</title><rect x="1171.5" y="453" width="3.2" height="15.0" fill="rgb(236,144,5)" rx="2" ry="2" />
<text  x="1174.51" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (31 samples, 0.07%)</title><rect x="526.7" y="245" width="0.8" height="15.0" fill="rgb(236,99,10)" rx="2" ry="2" />
<text  x="529.74" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="1157.3" y="405" width="0.2" height="15.0" fill="rgb(234,7,7)" rx="2" ry="2" />
<text  x="1160.31" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.06%)</title><rect x="602.9" y="437" width="0.7" height="15.0" fill="rgb(230,197,2)" rx="2" ry="2" />
<text  x="605.93" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (50 samples, 0.11%)</title><rect x="812.8" y="325" width="1.2" height="15.0" fill="rgb(206,134,26)" rx="2" ry="2" />
<text  x="815.78" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (6 samples, 0.01%)</title><rect x="823.9" y="437" width="0.1" height="15.0" fill="rgb(248,84,42)" rx="2" ry="2" />
<text  x="826.89" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%)</title><rect x="902.0" y="341" width="0.1" height="15.0" fill="rgb(249,131,43)" rx="2" ry="2" />
<text  x="905.05" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (7 samples, 0.01%)</title><rect x="696.4" y="421" width="0.1" height="15.0" fill="rgb(235,35,29)" rx="2" ry="2" />
<text  x="699.36" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (93 samples, 0.20%)</title><rect x="951.9" y="389" width="2.3" height="15.0" fill="rgb(205,46,45)" rx="2" ry="2" />
<text  x="954.87" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (8 samples, 0.02%)</title><rect x="449.8" y="325" width="0.2" height="15.0" fill="rgb(229,125,39)" rx="2" ry="2" />
<text  x="452.79" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="480.4" y="181" width="0.3" height="15.0" fill="rgb(239,222,46)" rx="2" ry="2" />
<text  x="483.39" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="626.5" y="469" width="0.6" height="15.0" fill="rgb(244,136,21)" rx="2" ry="2" />
<text  x="629.54" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (13 samples, 0.03%)</title><rect x="695.7" y="405" width="0.4" height="15.0" fill="rgb(222,131,19)" rx="2" ry="2" />
<text  x="698.73" y="415.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (4 samples, 0.01%)</title><rect x="388.3" y="229" width="0.1" height="15.0" fill="rgb(216,89,23)" rx="2" ry="2" />
<text  x="391.30" y="239.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%)</title><rect x="607.9" y="373" width="1.2" height="15.0" fill="rgb(231,39,26)" rx="2" ry="2" />
<text  x="610.92" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (4 samples, 0.01%)</title><rect x="1157.2" y="405" width="0.1" height="15.0" fill="rgb(232,50,48)" rx="2" ry="2" />
<text  x="1160.20" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (65 samples, 0.14%)</title><rect x="136.8" y="261" width="1.6" height="15.0" fill="rgb(209,0,41)" rx="2" ry="2" />
<text  x="139.80" y="271.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,339 samples, 24.20%)</title><rect x="856.9" y="501" width="285.6" height="15.0" fill="rgb(223,140,48)" rx="2" ry="2" />
<text  x="859.91" y="511.5" >seastar::lambda_task&lt;seastar::executio..</text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="820.1" y="405" width="0.2" height="15.0" fill="rgb(236,174,52)" rx="2" ry="2" />
<text  x="823.08" y="415.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (121 samples, 0.26%)</title><rect x="1152.4" y="469" width="3.0" height="15.0" fill="rgb(225,199,45)" rx="2" ry="2" />
<text  x="1155.37" y="479.5" ></text>
</g>
<g >
<title>service::client_state::has_access (4 samples, 0.01%)</title><rect x="22.9" y="437" width="0.1" height="15.0" fill="rgb(211,169,41)" rx="2" ry="2" />
<text  x="25.87" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (48 samples, 0.10%)</title><rect x="238.3" y="197" width="1.2" height="15.0" fill="rgb(252,201,25)" rx="2" ry="2" />
<text  x="241.26" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.01%)</title><rect x="1142.5" y="501" width="0.1" height="15.0" fill="rgb(228,101,54)" rx="2" ry="2" />
<text  x="1145.55" y="511.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (390 samples, 0.83%)</title><rect x="535.9" y="421" width="9.8" height="15.0" fill="rgb(227,181,49)" rx="2" ry="2" />
<text  x="538.86" y="431.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (26 samples, 0.06%)</title><rect x="416.9" y="421" width="0.7" height="15.0" fill="rgb(206,183,30)" rx="2" ry="2" />
<text  x="419.92" y="431.5" ></text>
</g>
<g >
<title>query::querier&lt; (17,895 samples, 38.20%)</title><rect x="96.7" y="437" width="450.8" height="15.0" fill="rgb(220,96,48)" rx="2" ry="2" />
<text  x="99.75" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (19 samples, 0.04%)</title><rect x="1126.2" y="421" width="0.5" height="15.0" fill="rgb(208,103,27)" rx="2" ry="2" />
<text  x="1129.25" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="563.7" y="293" width="0.4" height="15.0" fill="rgb(215,217,20)" rx="2" ry="2" />
<text  x="566.74" y="303.5" ></text>
</g>
<g >
<title>freeze (12 samples, 0.03%)</title><rect x="1141.3" y="197" width="0.3" height="15.0" fill="rgb(227,208,43)" rx="2" ry="2" />
<text  x="1144.34" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="401.9" y="213" width="0.1" height="15.0" fill="rgb(224,210,48)" rx="2" ry="2" />
<text  x="404.88" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="96.4" y="421" width="0.2" height="15.0" fill="rgb(243,170,41)" rx="2" ry="2" />
<text  x="99.42" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (21 samples, 0.04%)</title><rect x="682.7" y="453" width="0.5" height="15.0" fill="rgb(241,214,29)" rx="2" ry="2" />
<text  x="685.71" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,812 samples, 10.27%)</title><rect x="285.9" y="309" width="121.2" height="15.0" fill="rgb(213,168,41)" rx="2" ry="2" />
<text  x="288.86" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.01%)</title><rect x="252.3" y="293" width="0.1" height="15.0" fill="rgb(247,159,22)" rx="2" ry="2" />
<text  x="255.31" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (139 samples, 0.30%)</title><rect x="216.6" y="181" width="3.5" height="15.0" fill="rgb(213,194,31)" rx="2" ry="2" />
<text  x="219.57" y="191.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (29 samples, 0.06%)</title><rect x="308.3" y="181" width="0.7" height="15.0" fill="rgb(207,49,19)" rx="2" ry="2" />
<text  x="311.31" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (24 samples, 0.05%)</title><rect x="832.6" y="357" width="0.6" height="15.0" fill="rgb(240,52,50)" rx="2" ry="2" />
<text  x="835.63" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="208.1" y="133" width="0.1" height="15.0" fill="rgb(253,87,32)" rx="2" ry="2" />
<text  x="211.08" y="143.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="453" width="1.0" height="15.0" fill="rgb(222,44,1)" rx="2" ry="2" />
<text  x="1143.98" y="463.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="606.4" y="405" width="0.1" height="15.0" fill="rgb(240,3,20)" rx="2" ry="2" />
<text  x="609.36" y="415.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="492.2" y="293" width="0.7" height="15.0" fill="rgb(215,80,51)" rx="2" ry="2" />
<text  x="495.16" y="303.5" ></text>
</g>
<g >
<title>db::schema_tables::create_table_from_mutations (4 samples, 0.01%)</title><rect x="47.2" y="405" width="0.1" height="15.0" fill="rgb(238,178,13)" rx="2" ry="2" />
<text  x="50.23" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (8 samples, 0.02%)</title><rect x="252.5" y="293" width="0.2" height="15.0" fill="rgb(248,29,36)" rx="2" ry="2" />
<text  x="255.49" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (20 samples, 0.04%)</title><rect x="553.3" y="309" width="0.5" height="15.0" fill="rgb(240,33,39)" rx="2" ry="2" />
<text  x="556.29" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (401 samples, 0.86%)</title><rect x="266.3" y="325" width="10.1" height="15.0" fill="rgb(219,186,21)" rx="2" ry="2" />
<text  x="269.29" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume (11 samples, 0.02%)</title><rect x="205.9" y="149" width="0.3" height="15.0" fill="rgb(217,53,40)" rx="2" ry="2" />
<text  x="208.92" y="159.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (6 samples, 0.01%)</title><rect x="856.4" y="261" width="0.1" height="15.0" fill="rgb(238,19,0)" rx="2" ry="2" />
<text  x="859.35" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (4 samples, 0.01%)</title><rect x="406.8" y="277" width="0.1" height="15.0" fill="rgb(240,49,34)" rx="2" ry="2" />
<text  x="409.84" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%)</title><rect x="850.3" y="405" width="0.2" height="15.0" fill="rgb(208,188,48)" rx="2" ry="2" />
<text  x="853.26" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="640.8" y="469" width="0.1" height="15.0" fill="rgb(225,214,23)" rx="2" ry="2" />
<text  x="643.77" y="479.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (16 samples, 0.03%)</title><rect x="512.2" y="325" width="0.4" height="15.0" fill="rgb(247,183,4)" rx="2" ry="2" />
<text  x="515.21" y="335.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,028 samples, 2.19%)</title><rect x="486.2" y="325" width="25.9" height="15.0" fill="rgb(230,206,38)" rx="2" ry="2" />
<text  x="489.16" y="335.5" >m..</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1168.8" y="469" width="0.1" height="15.0" fill="rgb(225,29,26)" rx="2" ry="2" />
<text  x="1171.79" y="479.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (10 samples, 0.02%)</title><rect x="74.3" y="453" width="0.3" height="15.0" fill="rgb(209,112,9)" rx="2" ry="2" />
<text  x="77.31" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (18 samples, 0.04%)</title><rect x="115.0" y="309" width="0.5" height="15.0" fill="rgb(217,19,7)" rx="2" ry="2" />
<text  x="118.04" y="319.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (18 samples, 0.04%)</title><rect x="304.2" y="165" width="0.5" height="15.0" fill="rgb(207,2,11)" rx="2" ry="2" />
<text  x="307.20" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,547 samples, 48.13%)</title><rect x="49.8" y="485" width="567.9" height="15.0" fill="rgb(236,111,38)" rx="2" ry="2" />
<text  x="52.77" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.01%)</title><rect x="22.1" y="421" width="0.1" height="15.0" fill="rgb(215,46,51)" rx="2" ry="2" />
<text  x="25.09" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="802.2" y="277" width="0.1" height="15.0" fill="rgb(214,219,26)" rx="2" ry="2" />
<text  x="805.17" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="717.7" y="293" width="0.3" height="15.0" fill="rgb(221,112,35)" rx="2" ry="2" />
<text  x="720.74" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (5 samples, 0.01%)</title><rect x="22.1" y="405" width="0.1" height="15.0" fill="rgb(205,157,31)" rx="2" ry="2" />
<text  x="25.12" y="415.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (48 samples, 0.10%)</title><rect x="757.5" y="357" width="1.2" height="15.0" fill="rgb(205,169,33)" rx="2" ry="2" />
<text  x="760.47" y="367.5" ></text>
</g>
<g >
<title>__start_context (11 samples, 0.02%)</title><rect x="23.3" y="597" width="0.3" height="15.0" fill="rgb(249,52,54)" rx="2" ry="2" />
<text  x="26.27" y="607.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (6 samples, 0.01%)</title><rect x="1142.7" y="501" width="0.2" height="15.0" fill="rgb(211,44,47)" rx="2" ry="2" />
<text  x="1145.72" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (15 samples, 0.03%)</title><rect x="893.2" y="277" width="0.3" height="15.0" fill="rgb(244,207,17)" rx="2" ry="2" />
<text  x="896.15" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,574 samples, 9.76%)</title><rect x="290.7" y="277" width="115.3" height="15.0" fill="rgb(235,11,16)" rx="2" ry="2" />
<text  x="293.75" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="279.3" y="389" width="0.1" height="15.0" fill="rgb(210,114,29)" rx="2" ry="2" />
<text  x="282.29" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="675.1" y="421" width="0.9" height="15.0" fill="rgb(221,11,35)" rx="2" ry="2" />
<text  x="678.10" y="431.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (5 samples, 0.01%)</title><rect x="905.9" y="373" width="0.1" height="15.0" fill="rgb(231,99,39)" rx="2" ry="2" />
<text  x="908.90" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1141.4" y="117" width="0.1" height="15.0" fill="rgb(243,214,42)" rx="2" ry="2" />
<text  x="1144.39" y="127.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (272 samples, 0.58%)</title><rect x="732.6" y="373" width="6.9" height="15.0" fill="rgb(223,166,52)" rx="2" ry="2" />
<text  x="735.63" y="383.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (74 samples, 0.16%)</title><rect x="776.4" y="261" width="1.9" height="15.0" fill="rgb(205,83,3)" rx="2" ry="2" />
<text  x="779.43" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,333 samples, 4.98%)</title><rect x="155.5" y="229" width="58.8" height="15.0" fill="rgb(236,16,31)" rx="2" ry="2" />
<text  x="158.54" y="239.5" >partit..</text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (61 samples, 0.13%)</title><rect x="411.6" y="357" width="1.6" height="15.0" fill="rgb(207,192,31)" rx="2" ry="2" />
<text  x="414.63" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="527.8" y="245" width="0.6" height="15.0" fill="rgb(216,216,1)" rx="2" ry="2" />
<text  x="530.82" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (18 samples, 0.04%)</title><rect x="700.0" y="453" width="0.4" height="15.0" fill="rgb(209,149,29)" rx="2" ry="2" />
<text  x="702.99" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (23 samples, 0.05%)</title><rect x="250.8" y="277" width="0.6" height="15.0" fill="rgb(233,105,41)" rx="2" ry="2" />
<text  x="253.78" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="1124.9" y="405" width="0.3" height="15.0" fill="rgb(238,22,52)" rx="2" ry="2" />
<text  x="1127.94" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="776.6" y="229" width="0.6" height="15.0" fill="rgb(224,10,7)" rx="2" ry="2" />
<text  x="779.58" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (16 samples, 0.03%)</title><rect x="799.1" y="229" width="0.4" height="15.0" fill="rgb(214,216,53)" rx="2" ry="2" />
<text  x="802.08" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="671.5" y="485" width="0.1" height="15.0" fill="rgb(236,18,27)" rx="2" ry="2" />
<text  x="674.50" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%)</title><rect x="1048.0" y="245" width="0.6" height="15.0" fill="rgb(226,21,6)" rx="2" ry="2" />
<text  x="1050.96" y="255.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (11 samples, 0.02%)</title><rect x="325.0" y="181" width="0.2" height="15.0" fill="rgb(214,62,50)" rx="2" ry="2" />
<text  x="327.96" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1122.0" y="389" width="0.1" height="15.0" fill="rgb(236,162,13)" rx="2" ry="2" />
<text  x="1124.97" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="206.7" y="181" width="0.1" height="15.0" fill="rgb(245,65,29)" rx="2" ry="2" />
<text  x="209.72" y="191.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (4 samples, 0.01%)</title><rect x="20.5" y="229" width="0.1" height="15.0" fill="rgb(244,184,49)" rx="2" ry="2" />
<text  x="23.48" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (12 samples, 0.03%)</title><rect x="934.9" y="405" width="0.3" height="15.0" fill="rgb(246,46,37)" rx="2" ry="2" />
<text  x="937.94" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (206 samples, 0.44%)</title><rect x="987.1" y="325" width="5.2" height="15.0" fill="rgb(205,178,1)" rx="2" ry="2" />
<text  x="990.08" y="335.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (31 samples, 0.07%)</title><rect x="432.0" y="293" width="0.8" height="15.0" fill="rgb(230,164,35)" rx="2" ry="2" />
<text  x="434.98" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (33 samples, 0.07%)</title><rect x="311.8" y="165" width="0.9" height="15.0" fill="rgb(220,156,49)" rx="2" ry="2" />
<text  x="314.83" y="175.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (18 samples, 0.04%)</title><rect x="1116.0" y="389" width="0.5" height="15.0" fill="rgb(234,150,20)" rx="2" ry="2" />
<text  x="1119.05" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (17 samples, 0.04%)</title><rect x="1175.3" y="469" width="0.4" height="15.0" fill="rgb(220,24,5)" rx="2" ry="2" />
<text  x="1178.32" y="479.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (9 samples, 0.02%)</title><rect x="1177.7" y="629" width="0.2" height="15.0" fill="rgb(210,140,21)" rx="2" ry="2" />
<text  x="1180.71" y="639.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.06%)</title><rect x="939.2" y="325" width="0.6" height="15.0" fill="rgb(219,116,36)" rx="2" ry="2" />
<text  x="942.17" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (126 samples, 0.27%)</title><rect x="831.0" y="389" width="3.2" height="15.0" fill="rgb(244,109,41)" rx="2" ry="2" />
<text  x="833.99" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (38 samples, 0.08%)</title><rect x="893.7" y="277" width="0.9" height="15.0" fill="rgb(224,170,32)" rx="2" ry="2" />
<text  x="896.66" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (4 samples, 0.01%)</title><rect x="740.3" y="405" width="0.1" height="15.0" fill="rgb(205,207,34)" rx="2" ry="2" />
<text  x="743.34" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%)</title><rect x="881.9" y="309" width="0.2" height="15.0" fill="rgb(248,61,46)" rx="2" ry="2" />
<text  x="884.92" y="319.5" ></text>
</g>
<g >
<title>sstring_hash::operator (15 samples, 0.03%)</title><rect x="840.2" y="357" width="0.4" height="15.0" fill="rgb(219,160,30)" rx="2" ry="2" />
<text  x="843.18" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (99 samples, 0.21%)</title><rect x="171.9" y="101" width="2.5" height="15.0" fill="rgb(220,74,5)" rx="2" ry="2" />
<text  x="174.86" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (4 samples, 0.01%)</title><rect x="17.0" y="245" width="0.1" height="15.0" fill="rgb(223,15,54)" rx="2" ry="2" />
<text  x="20.03" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (40 samples, 0.09%)</title><rect x="675.0" y="501" width="1.0" height="15.0" fill="rgb(249,156,33)" rx="2" ry="2" />
<text  x="678.02" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="584.3" y="373" width="0.1" height="15.0" fill="rgb(231,153,38)" rx="2" ry="2" />
<text  x="587.27" y="383.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (5 samples, 0.01%)</title><rect x="1098.4" y="309" width="0.1" height="15.0" fill="rgb(237,101,40)" rx="2" ry="2" />
<text  x="1101.42" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (9 samples, 0.02%)</title><rect x="488.6" y="309" width="0.2" height="15.0" fill="rgb(234,139,49)" rx="2" ry="2" />
<text  x="491.58" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="23.3" y="501" width="0.3" height="15.0" fill="rgb(237,56,27)" rx="2" ry="2" />
<text  x="26.27" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="760.1" y="357" width="0.3" height="15.0" fill="rgb(236,121,35)" rx="2" ry="2" />
<text  x="763.14" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="751.4" y="309" width="0.4" height="15.0" fill="rgb(205,31,52)" rx="2" ry="2" />
<text  x="754.39" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (62 samples, 0.13%)</title><rect x="59.7" y="437" width="1.5" height="15.0" fill="rgb(252,141,34)" rx="2" ry="2" />
<text  x="62.67" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (80 samples, 0.17%)</title><rect x="142.7" y="197" width="2.1" height="15.0" fill="rgb(225,33,24)" rx="2" ry="2" />
<text  x="145.74" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 0.05%)</title><rect x="352.5" y="149" width="0.6" height="15.0" fill="rgb(207,107,44)" rx="2" ry="2" />
<text  x="355.51" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (118 samples, 0.25%)</title><rect x="624.8" y="485" width="3.0" height="15.0" fill="rgb(250,123,2)" rx="2" ry="2" />
<text  x="627.82" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (18 samples, 0.04%)</title><rect x="602.2" y="437" width="0.5" height="15.0" fill="rgb(229,12,15)" rx="2" ry="2" />
<text  x="605.23" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (56 samples, 0.12%)</title><rect x="513.6" y="293" width="1.5" height="15.0" fill="rgb(239,185,24)" rx="2" ry="2" />
<text  x="516.64" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="33.3" y="469" width="0.2" height="15.0" fill="rgb(211,1,49)" rx="2" ry="2" />
<text  x="36.30" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%)</title><rect x="756.6" y="373" width="0.6" height="15.0" fill="rgb(242,118,27)" rx="2" ry="2" />
<text  x="759.56" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="600.2" y="405" width="0.3" height="15.0" fill="rgb(228,126,44)" rx="2" ry="2" />
<text  x="603.19" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="528.5" y="261" width="0.1" height="15.0" fill="rgb(232,106,14)" rx="2" ry="2" />
<text  x="531.45" y="271.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (13 samples, 0.03%)</title><rect x="593.6" y="405" width="0.3" height="15.0" fill="rgb(225,95,26)" rx="2" ry="2" />
<text  x="596.61" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (72 samples, 0.15%)</title><rect x="18.9" y="357" width="1.8" height="15.0" fill="rgb(239,203,19)" rx="2" ry="2" />
<text  x="21.89" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (24 samples, 0.05%)</title><rect x="1141.3" y="229" width="0.6" height="15.0" fill="rgb(218,114,42)" rx="2" ry="2" />
<text  x="1144.31" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (8 samples, 0.02%)</title><rect x="150.4" y="197" width="0.2" height="15.0" fill="rgb(214,40,14)" rx="2" ry="2" />
<text  x="153.37" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (19 samples, 0.04%)</title><rect x="779.9" y="229" width="0.5" height="15.0" fill="rgb(224,47,54)" rx="2" ry="2" />
<text  x="782.93" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (11 samples, 0.02%)</title><rect x="1175.3" y="421" width="0.3" height="15.0" fill="rgb(242,107,32)" rx="2" ry="2" />
<text  x="1178.32" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (30 samples, 0.06%)</title><rect x="857.2" y="469" width="0.7" height="15.0" fill="rgb(205,23,41)" rx="2" ry="2" />
<text  x="860.16" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="685.7" y="469" width="0.2" height="15.0" fill="rgb(214,21,22)" rx="2" ry="2" />
<text  x="688.73" y="479.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (666 samples, 1.42%)</title><rect x="548.8" y="357" width="16.8" height="15.0" fill="rgb(220,181,37)" rx="2" ry="2" />
<text  x="551.78" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (108 samples, 0.23%)</title><rect x="814.6" y="325" width="2.8" height="15.0" fill="rgb(218,208,21)" rx="2" ry="2" />
<text  x="817.64" y="335.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="515.8" y="325" width="0.7" height="15.0" fill="rgb(207,138,13)" rx="2" ry="2" />
<text  x="518.78" y="335.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (21 samples, 0.04%)</title><rect x="1041.9" y="261" width="0.5" height="15.0" fill="rgb(245,229,47)" rx="2" ry="2" />
<text  x="1044.89" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (105 samples, 0.22%)</title><rect x="806.6" y="341" width="2.7" height="15.0" fill="rgb(244,100,45)" rx="2" ry="2" />
<text  x="809.61" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (27 samples, 0.06%)</title><rect x="672.5" y="437" width="0.7" height="15.0" fill="rgb(227,162,1)" rx="2" ry="2" />
<text  x="675.50" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (106 samples, 0.23%)</title><rect x="407.5" y="293" width="2.7" height="15.0" fill="rgb(234,85,26)" rx="2" ry="2" />
<text  x="410.52" y="303.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="138.3" y="229" width="0.1" height="15.0" fill="rgb(218,190,25)" rx="2" ry="2" />
<text  x="141.28" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="600.8" y="437" width="0.2" height="15.0" fill="rgb(228,173,13)" rx="2" ry="2" />
<text  x="603.84" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (11 samples, 0.02%)</title><rect x="1140.0" y="469" width="0.2" height="15.0" fill="rgb(245,66,9)" rx="2" ry="2" />
<text  x="1142.95" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="420.4" y="373" width="0.2" height="15.0" fill="rgb(236,165,23)" rx="2" ry="2" />
<text  x="423.42" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="795.4" y="213" width="0.3" height="15.0" fill="rgb(248,123,54)" rx="2" ry="2" />
<text  x="798.40" y="223.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (197 samples, 0.42%)</title><rect x="716.3" y="389" width="4.9" height="15.0" fill="rgb(252,51,0)" rx="2" ry="2" />
<text  x="719.26" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%)</title><rect x="795.1" y="197" width="0.3" height="15.0" fill="rgb(249,212,43)" rx="2" ry="2" />
<text  x="798.15" y="207.5" ></text>
</g>
<g >
<title>row::row (7 samples, 0.01%)</title><rect x="856.3" y="277" width="0.2" height="15.0" fill="rgb(205,33,12)" rx="2" ry="2" />
<text  x="859.33" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (342 samples, 0.73%)</title><rect x="432.8" y="293" width="8.7" height="15.0" fill="rgb(206,98,21)" rx="2" ry="2" />
<text  x="435.84" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (697 samples, 1.49%)</title><rect x="548.1" y="389" width="17.6" height="15.0" fill="rgb(232,26,20)" rx="2" ry="2" />
<text  x="551.12" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (12 samples, 0.03%)</title><rect x="12.1" y="581" width="0.3" height="15.0" fill="rgb(220,67,21)" rx="2" ry="2" />
<text  x="15.09" y="591.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (4 samples, 0.01%)</title><rect x="1139.7" y="437" width="0.1" height="15.0" fill="rgb(237,180,9)" rx="2" ry="2" />
<text  x="1142.67" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (89 samples, 0.19%)</title><rect x="817.8" y="357" width="2.3" height="15.0" fill="rgb(237,188,17)" rx="2" ry="2" />
<text  x="820.84" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,383 samples, 47.78%)</title><rect x="53.6" y="469" width="563.7" height="15.0" fill="rgb(244,205,34)" rx="2" ry="2" />
<text  x="56.55" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="890.0" y="261" width="0.3" height="15.0" fill="rgb(220,156,3)" rx="2" ry="2" />
<text  x="892.96" y="271.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (6 samples, 0.01%)</title><rect x="829.7" y="437" width="0.1" height="15.0" fill="rgb(236,146,43)" rx="2" ry="2" />
<text  x="832.66" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1122.1" y="389" width="0.1" height="15.0" fill="rgb(226,139,38)" rx="2" ry="2" />
<text  x="1125.09" y="399.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="40.1" y="453" width="0.3" height="15.0" fill="rgb(248,58,14)" rx="2" ry="2" />
<text  x="43.07" y="463.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (45 samples, 0.10%)</title><rect x="874.2" y="405" width="1.1" height="15.0" fill="rgb(207,130,27)" rx="2" ry="2" />
<text  x="877.21" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (141 samples, 0.30%)</title><rect x="434.7" y="277" width="3.5" height="15.0" fill="rgb(228,88,27)" rx="2" ry="2" />
<text  x="437.68" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="978.3" y="357" width="0.2" height="15.0" fill="rgb(223,221,23)" rx="2" ry="2" />
<text  x="981.27" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (7 samples, 0.01%)</title><rect x="211.0" y="117" width="0.1" height="15.0" fill="rgb(220,150,35)" rx="2" ry="2" />
<text  x="213.95" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (57 samples, 0.12%)</title><rect x="896.7" y="325" width="1.4" height="15.0" fill="rgb(243,151,38)" rx="2" ry="2" />
<text  x="899.71" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (119 samples, 0.25%)</title><rect x="1037.7" y="229" width="3.0" height="15.0" fill="rgb(237,132,29)" rx="2" ry="2" />
<text  x="1040.66" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="675.1" y="389" width="0.8" height="15.0" fill="rgb(222,59,12)" rx="2" ry="2" />
<text  x="678.12" y="399.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (32 samples, 0.07%)</title><rect x="326.2" y="181" width="0.8" height="15.0" fill="rgb(216,18,6)" rx="2" ry="2" />
<text  x="329.19" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (5 samples, 0.01%)</title><rect x="728.8" y="373" width="0.2" height="15.0" fill="rgb(248,80,10)" rx="2" ry="2" />
<text  x="731.83" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (77 samples, 0.16%)</title><rect x="970.0" y="341" width="1.9" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="973.00" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (4 samples, 0.01%)</title><rect x="469.0" y="293" width="0.1" height="15.0" fill="rgb(233,197,8)" rx="2" ry="2" />
<text  x="472.03" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="276.2" y="277" width="0.2" height="15.0" fill="rgb(225,175,33)" rx="2" ry="2" />
<text  x="279.22" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (33 samples, 0.07%)</title><rect x="1141.1" y="325" width="0.8" height="15.0" fill="rgb(254,48,15)" rx="2" ry="2" />
<text  x="1144.08" y="335.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.10%)</title><rect x="540.6" y="357" width="1.2" height="15.0" fill="rgb(224,89,13)" rx="2" ry="2" />
<text  x="543.64" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (142 samples, 0.30%)</title><rect x="988.7" y="293" width="3.6" height="15.0" fill="rgb(244,133,46)" rx="2" ry="2" />
<text  x="991.69" y="303.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="23.3" y="469" width="0.1" height="15.0" fill="rgb(209,21,26)" rx="2" ry="2" />
<text  x="26.27" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (18 samples, 0.04%)</title><rect x="132.5" y="261" width="0.5" height="15.0" fill="rgb(228,174,46)" rx="2" ry="2" />
<text  x="135.54" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="999.1" y="277" width="0.2" height="15.0" fill="rgb(209,82,0)" rx="2" ry="2" />
<text  x="1002.15" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (251 samples, 0.54%)</title><rect x="939.9" y="421" width="6.3" height="15.0" fill="rgb(210,193,13)" rx="2" ry="2" />
<text  x="942.85" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (33 samples, 0.07%)</title><rect x="281.7" y="373" width="0.8" height="15.0" fill="rgb(205,119,42)" rx="2" ry="2" />
<text  x="284.66" y="383.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (570 samples, 1.22%)</title><rect x="1082.1" y="309" width="14.4" height="15.0" fill="rgb(222,191,5)" rx="2" ry="2" />
<text  x="1085.14" y="319.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (190 samples, 0.41%)</title><rect x="917.9" y="357" width="4.8" height="15.0" fill="rgb(207,41,48)" rx="2" ry="2" />
<text  x="920.89" y="367.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.06%)</title><rect x="531.0" y="325" width="0.7" height="15.0" fill="rgb(214,216,50)" rx="2" ry="2" />
<text  x="534.05" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="826.6" y="405" width="0.1" height="15.0" fill="rgb(233,51,18)" rx="2" ry="2" />
<text  x="829.58" y="415.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (238 samples, 0.51%)</title><rect x="678.1" y="485" width="6.0" height="15.0" fill="rgb(221,121,44)" rx="2" ry="2" />
<text  x="681.15" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (27 samples, 0.06%)</title><rect x="261.7" y="325" width="0.7" height="15.0" fill="rgb(236,26,49)" rx="2" ry="2" />
<text  x="264.73" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="448.8" y="277" width="0.1" height="15.0" fill="rgb(252,104,16)" rx="2" ry="2" />
<text  x="451.81" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="19.0" y="261" width="0.1" height="15.0" fill="rgb(250,180,52)" rx="2" ry="2" />
<text  x="21.99" y="271.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="567.5" y="341" width="0.4" height="15.0" fill="rgb(209,66,11)" rx="2" ry="2" />
<text  x="570.49" y="351.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (39 samples, 0.08%)</title><rect x="1096.8" y="293" width="0.9" height="15.0" fill="rgb(242,42,15)" rx="2" ry="2" />
<text  x="1099.75" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (18 samples, 0.04%)</title><rect x="33.7" y="485" width="0.5" height="15.0" fill="rgb(237,97,52)" rx="2" ry="2" />
<text  x="36.73" y="495.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (8 samples, 0.02%)</title><rect x="722.1" y="405" width="0.2" height="15.0" fill="rgb(207,135,40)" rx="2" ry="2" />
<text  x="725.10" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (20 samples, 0.04%)</title><rect x="1107.5" y="405" width="0.5" height="15.0" fill="rgb(240,103,23)" rx="2" ry="2" />
<text  x="1110.53" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (18 samples, 0.04%)</title><rect x="313.5" y="197" width="0.4" height="15.0" fill="rgb(205,126,53)" rx="2" ry="2" />
<text  x="316.47" y="207.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (259 samples, 0.55%)</title><rect x="715.8" y="421" width="6.5" height="15.0" fill="rgb(243,47,5)" rx="2" ry="2" />
<text  x="718.78" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (214 samples, 0.46%)</title><rect x="142.1" y="229" width="5.4" height="15.0" fill="rgb(215,42,10)" rx="2" ry="2" />
<text  x="145.06" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (45,812 samples, 97.79%)</title><rect x="23.7" y="533" width="1154.0" height="15.0" fill="rgb(233,182,41)" rx="2" ry="2" />
<text  x="26.73" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (4 samples, 0.01%)</title><rect x="18.6" y="309" width="0.1" height="15.0" fill="rgb(241,47,28)" rx="2" ry="2" />
<text  x="21.64" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (4 samples, 0.01%)</title><rect x="803.5" y="309" width="0.1" height="15.0" fill="rgb(237,174,13)" rx="2" ry="2" />
<text  x="806.53" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="749.6" y="357" width="0.3" height="15.0" fill="rgb(240,211,5)" rx="2" ry="2" />
<text  x="752.58" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="656.0" y="469" width="0.3" height="15.0" fill="rgb(212,83,52)" rx="2" ry="2" />
<text  x="658.96" y="479.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (51 samples, 0.11%)</title><rect x="1134.7" y="389" width="1.3" height="15.0" fill="rgb(213,222,7)" rx="2" ry="2" />
<text  x="1137.74" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (11 samples, 0.02%)</title><rect x="73.0" y="453" width="0.3" height="15.0" fill="rgb(235,57,5)" rx="2" ry="2" />
<text  x="76.05" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (4 samples, 0.01%)</title><rect x="712.3" y="453" width="0.1" height="15.0" fill="rgb(219,47,2)" rx="2" ry="2" />
<text  x="715.25" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="767.3" y="293" width="0.5" height="15.0" fill="rgb(224,140,16)" rx="2" ry="2" />
<text  x="770.31" y="303.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (58 samples, 0.12%)</title><rect x="590.4" y="389" width="1.5" height="15.0" fill="rgb(252,15,28)" rx="2" ry="2" />
<text  x="593.39" y="399.5" ></text>
</g>
<g >
<title>row::compact_and_expire (4 samples, 0.01%)</title><rect x="675.6" y="293" width="0.1" height="15.0" fill="rgb(244,177,40)" rx="2" ry="2" />
<text  x="678.58" y="303.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="1125.2" y="421" width="0.2" height="15.0" fill="rgb(222,47,11)" rx="2" ry="2" />
<text  x="1128.22" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="393.8" y="229" width="0.2" height="15.0" fill="rgb(251,73,52)" rx="2" ry="2" />
<text  x="396.85" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="533.7" y="405" width="0.1" height="15.0" fill="rgb(234,134,54)" rx="2" ry="2" />
<text  x="536.67" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%)</title><rect x="1150.5" y="485" width="0.7" height="15.0" fill="rgb(216,13,37)" rx="2" ry="2" />
<text  x="1153.48" y="495.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="45.1" y="485" width="0.4" height="15.0" fill="rgb(251,221,20)" rx="2" ry="2" />
<text  x="48.11" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (30 samples, 0.06%)</title><rect x="777.5" y="229" width="0.7" height="15.0" fill="rgb(213,28,43)" rx="2" ry="2" />
<text  x="780.49" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (13 samples, 0.03%)</title><rect x="721.8" y="389" width="0.3" height="15.0" fill="rgb(205,125,9)" rx="2" ry="2" />
<text  x="724.77" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,736 samples, 3.71%)</title><rect x="1057.3" y="357" width="43.7" height="15.0" fill="rgb(218,163,38)" rx="2" ry="2" />
<text  x="1060.26" y="367.5" >serv..</text>
</g>
<g >
<title>reader_permit::impl::signal (35 samples, 0.07%)</title><rect x="566.4" y="357" width="0.9" height="15.0" fill="rgb(249,193,6)" rx="2" ry="2" />
<text  x="569.44" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (437 samples, 0.93%)</title><rect x="498.5" y="261" width="11.0" height="15.0" fill="rgb(211,23,23)" rx="2" ry="2" />
<text  x="501.53" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (17 samples, 0.04%)</title><rect x="1034.9" y="213" width="0.4" height="15.0" fill="rgb(208,107,24)" rx="2" ry="2" />
<text  x="1037.89" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (15 samples, 0.03%)</title><rect x="612.4" y="389" width="0.3" height="15.0" fill="rgb(247,136,0)" rx="2" ry="2" />
<text  x="615.35" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (54 samples, 0.12%)</title><rect x="751.1" y="341" width="1.4" height="15.0" fill="rgb(226,183,33)" rx="2" ry="2" />
<text  x="754.09" y="351.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="643.9" y="453" width="0.4" height="15.0" fill="rgb(216,73,16)" rx="2" ry="2" />
<text  x="646.87" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%)</title><rect x="23.3" y="565" width="0.3" height="15.0" fill="rgb(211,159,12)" rx="2" ry="2" />
<text  x="26.27" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (26 samples, 0.06%)</title><rect x="796.9" y="229" width="0.6" height="15.0" fill="rgb(229,164,35)" rx="2" ry="2" />
<text  x="799.88" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%)</title><rect x="433.1" y="277" width="0.1" height="15.0" fill="rgb(229,132,17)" rx="2" ry="2" />
<text  x="436.09" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (4 samples, 0.01%)</title><rect x="936.9" y="389" width="0.1" height="15.0" fill="rgb(247,10,41)" rx="2" ry="2" />
<text  x="939.91" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="910.4" y="357" width="0.7" height="15.0" fill="rgb(213,221,27)" rx="2" ry="2" />
<text  x="913.36" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (36 samples, 0.08%)</title><rect x="210.5" y="149" width="0.9" height="15.0" fill="rgb(231,55,13)" rx="2" ry="2" />
<text  x="213.47" y="159.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (4 samples, 0.01%)</title><rect x="22.9" y="405" width="0.1" height="15.0" fill="rgb(237,142,19)" rx="2" ry="2" />
<text  x="25.87" y="415.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (8 samples, 0.02%)</title><rect x="969.5" y="357" width="0.2" height="15.0" fill="rgb(249,32,24)" rx="2" ry="2" />
<text  x="972.53" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="213.6" y="197" width="0.1" height="15.0" fill="rgb(245,99,52)" rx="2" ry="2" />
<text  x="216.60" y="207.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (6 samples, 0.01%)</title><rect x="819.8" y="293" width="0.1" height="15.0" fill="rgb(252,70,12)" rx="2" ry="2" />
<text  x="822.78" y="303.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (6 samples, 0.01%)</title><rect x="592.1" y="405" width="0.1" height="15.0" fill="rgb(242,110,31)" rx="2" ry="2" />
<text  x="595.05" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::operator= (4 samples, 0.01%)</title><rect x="20.0" y="277" width="0.1" height="15.0" fill="rgb(239,118,24)" rx="2" ry="2" />
<text  x="22.97" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="414.0" y="357" width="0.6" height="15.0" fill="rgb(231,66,5)" rx="2" ry="2" />
<text  x="416.97" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (13 samples, 0.03%)</title><rect x="71.0" y="453" width="0.3" height="15.0" fill="rgb(252,99,19)" rx="2" ry="2" />
<text  x="73.98" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (26 samples, 0.06%)</title><rect x="128.7" y="245" width="0.6" height="15.0" fill="rgb(208,70,13)" rx="2" ry="2" />
<text  x="131.66" y="255.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (30 samples, 0.06%)</title><rect x="22.0" y="453" width="0.8" height="15.0" fill="rgb(246,49,24)" rx="2" ry="2" />
<text  x="25.01" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="628.4" y="469" width="0.1" height="15.0" fill="rgb(248,87,5)" rx="2" ry="2" />
<text  x="631.40" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (162 samples, 0.35%)</title><rect x="842.0" y="421" width="4.1" height="15.0" fill="rgb(213,37,38)" rx="2" ry="2" />
<text  x="845.00" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="574.6" y="325" width="0.3" height="15.0" fill="rgb(221,72,32)" rx="2" ry="2" />
<text  x="577.60" y="335.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%)</title><rect x="1055.1" y="293" width="0.1" height="15.0" fill="rgb(238,24,48)" rx="2" ry="2" />
<text  x="1058.09" y="303.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (350 samples, 0.75%)</title><rect x="372.5" y="165" width="8.8" height="15.0" fill="rgb(208,62,49)" rx="2" ry="2" />
<text  x="375.46" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (753 samples, 1.61%)</title><rect x="879.2" y="341" width="18.9" height="15.0" fill="rgb(230,32,16)" rx="2" ry="2" />
<text  x="882.18" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,611 samples, 11.98%)</title><rect x="112.6" y="325" width="141.3" height="15.0" fill="rgb(226,139,40)" rx="2" ry="2" />
<text  x="115.59" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1044.2" y="261" width="0.1" height="15.0" fill="rgb(215,153,43)" rx="2" ry="2" />
<text  x="1047.18" y="271.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%)</title><rect x="525.5" y="277" width="0.1" height="15.0" fill="rgb(205,156,35)" rx="2" ry="2" />
<text  x="528.51" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (5 samples, 0.01%)</title><rect x="1107.4" y="389" width="0.1" height="15.0" fill="rgb(254,103,34)" rx="2" ry="2" />
<text  x="1110.41" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (26 samples, 0.06%)</title><rect x="561.6" y="277" width="0.7" height="15.0" fill="rgb(211,182,3)" rx="2" ry="2" />
<text  x="564.63" y="287.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (6 samples, 0.01%)</title><rect x="1020.4" y="245" width="0.2" height="15.0" fill="rgb(250,26,27)" rx="2" ry="2" />
<text  x="1023.43" y="255.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (31 samples, 0.07%)</title><rect x="803.6" y="309" width="0.8" height="15.0" fill="rgb(213,165,48)" rx="2" ry="2" />
<text  x="806.64" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (24 samples, 0.05%)</title><rect x="751.8" y="325" width="0.7" height="15.0" fill="rgb(219,159,16)" rx="2" ry="2" />
<text  x="754.85" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.09%)</title><rect x="207.3" y="165" width="1.0" height="15.0" fill="rgb(234,109,23)" rx="2" ry="2" />
<text  x="210.30" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="1077.5" y="277" width="0.2" height="15.0" fill="rgb(206,203,16)" rx="2" ry="2" />
<text  x="1080.48" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (556 samples, 1.19%)</title><rect x="1109.9" y="421" width="14.0" height="15.0" fill="rgb(229,67,36)" rx="2" ry="2" />
<text  x="1112.90" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,211 samples, 2.59%)</title><rect x="1144.2" y="501" width="30.5" height="15.0" fill="rgb(242,192,10)" rx="2" ry="2" />
<text  x="1147.18" y="511.5" >se..</text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (99 samples, 0.21%)</title><rect x="347.5" y="165" width="2.5" height="15.0" fill="rgb(218,161,10)" rx="2" ry="2" />
<text  x="350.47" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (57 samples, 0.12%)</title><rect x="747.6" y="341" width="1.5" height="15.0" fill="rgb(254,60,48)" rx="2" ry="2" />
<text  x="750.64" y="351.5" ></text>
</g>
<g >
<title>dht::sharder::shard_of (4 samples, 0.01%)</title><rect x="1000.7" y="293" width="0.1" height="15.0" fill="rgb(248,4,21)" rx="2" ry="2" />
<text  x="1003.66" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (46 samples, 0.10%)</title><rect x="943.7" y="373" width="1.1" height="15.0" fill="rgb(226,175,9)" rx="2" ry="2" />
<text  x="946.68" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (117 samples, 0.25%)</title><rect x="936.9" y="405" width="2.9" height="15.0" fill="rgb(217,31,28)" rx="2" ry="2" />
<text  x="939.88" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="660.4" y="453" width="0.1" height="15.0" fill="rgb(208,45,52)" rx="2" ry="2" />
<text  x="663.36" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (33 samples, 0.07%)</title><rect x="681.9" y="437" width="0.8" height="15.0" fill="rgb(246,151,16)" rx="2" ry="2" />
<text  x="684.87" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (11 samples, 0.02%)</title><rect x="549.4" y="341" width="0.3" height="15.0" fill="rgb(223,182,19)" rx="2" ry="2" />
<text  x="552.43" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="587.2" y="437" width="0.2" height="15.0" fill="rgb(247,224,4)" rx="2" ry="2" />
<text  x="590.19" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (21 samples, 0.04%)</title><rect x="1153.8" y="421" width="0.5" height="15.0" fill="rgb(230,44,28)" rx="2" ry="2" />
<text  x="1156.80" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (10 samples, 0.02%)</title><rect x="1137.1" y="421" width="0.2" height="15.0" fill="rgb(234,185,29)" rx="2" ry="2" />
<text  x="1140.05" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="421" width="1.0" height="15.0" fill="rgb(208,69,42)" rx="2" ry="2" />
<text  x="1143.98" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="187.2" y="101" width="0.2" height="15.0" fill="rgb(208,179,38)" rx="2" ry="2" />
<text  x="190.23" y="111.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (6 samples, 0.01%)</title><rect x="954.9" y="405" width="0.1" height="15.0" fill="rgb(253,109,49)" rx="2" ry="2" />
<text  x="957.89" y="415.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="607.2" y="389" width="0.5" height="15.0" fill="rgb(220,26,0)" rx="2" ry="2" />
<text  x="610.19" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (19 samples, 0.04%)</title><rect x="20.1" y="293" width="0.5" height="15.0" fill="rgb(216,213,0)" rx="2" ry="2" />
<text  x="23.10" y="303.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (32 samples, 0.07%)</title><rect x="235.3" y="181" width="0.8" height="15.0" fill="rgb(208,114,40)" rx="2" ry="2" />
<text  x="238.34" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (11 samples, 0.02%)</title><rect x="441.1" y="261" width="0.3" height="15.0" fill="rgb(210,170,14)" rx="2" ry="2" />
<text  x="444.15" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (14 samples, 0.03%)</title><rect x="224.7" y="213" width="0.4" height="15.0" fill="rgb(233,30,18)" rx="2" ry="2" />
<text  x="227.73" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1078.1" y="309" width="0.4" height="15.0" fill="rgb(215,5,45)" rx="2" ry="2" />
<text  x="1081.09" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (15 samples, 0.03%)</title><rect x="1096.0" y="293" width="0.3" height="15.0" fill="rgb(227,100,15)" rx="2" ry="2" />
<text  x="1098.97" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (7 samples, 0.01%)</title><rect x="17.0" y="277" width="0.2" height="15.0" fill="rgb(223,179,18)" rx="2" ry="2" />
<text  x="20.00" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="58.6" y="453" width="0.2" height="15.0" fill="rgb(212,127,26)" rx="2" ry="2" />
<text  x="61.59" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (8 samples, 0.02%)</title><rect x="150.4" y="213" width="0.2" height="15.0" fill="rgb(219,53,2)" rx="2" ry="2" />
<text  x="153.37" y="223.5" ></text>
</g>
<g >
<title>free (4 samples, 0.01%)</title><rect x="37.3" y="437" width="0.1" height="15.0" fill="rgb(242,212,16)" rx="2" ry="2" />
<text  x="40.28" y="447.5" ></text>
</g>
<g >
<title>timerfd_settime (4 samples, 0.01%)</title><rect x="1177.4" y="437" width="0.1" height="15.0" fill="rgb(231,46,30)" rx="2" ry="2" />
<text  x="1180.38" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (13 samples, 0.03%)</title><rect x="820.9" y="421" width="0.3" height="15.0" fill="rgb(226,173,19)" rx="2" ry="2" />
<text  x="823.89" y="431.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (29 samples, 0.06%)</title><rect x="1140.2" y="469" width="0.8" height="15.0" fill="rgb(228,56,32)" rx="2" ry="2" />
<text  x="1143.23" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (6 samples, 0.01%)</title><rect x="308.0" y="165" width="0.2" height="15.0" fill="rgb(234,77,52)" rx="2" ry="2" />
<text  x="311.00" y="175.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (270 samples, 0.58%)</title><rect x="16.4" y="517" width="6.8" height="15.0" fill="rgb(233,17,32)" rx="2" ry="2" />
<text  x="19.37" y="527.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (221 samples, 0.47%)</title><rect x="215.4" y="197" width="5.5" height="15.0" fill="rgb(208,199,44)" rx="2" ry="2" />
<text  x="218.36" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="1043.6" y="229" width="0.5" height="15.0" fill="rgb(237,133,26)" rx="2" ry="2" />
<text  x="1046.61" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="73.8" y="453" width="0.3" height="15.0" fill="rgb(209,94,9)" rx="2" ry="2" />
<text  x="76.78" y="463.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%)</title><rect x="1127.1" y="405" width="1.7" height="15.0" fill="rgb(224,93,39)" rx="2" ry="2" />
<text  x="1130.13" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="253.6" y="309" width="0.2" height="15.0" fill="rgb(232,64,36)" rx="2" ry="2" />
<text  x="256.65" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="675.1" y="405" width="0.9" height="15.0" fill="rgb(220,71,6)" rx="2" ry="2" />
<text  x="678.10" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (15 samples, 0.03%)</title><rect x="427.6" y="341" width="0.4" height="15.0" fill="rgb(207,184,51)" rx="2" ry="2" />
<text  x="430.62" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (317 samples, 0.68%)</title><rect x="179.1" y="85" width="8.0" height="15.0" fill="rgb(253,44,36)" rx="2" ry="2" />
<text  x="182.14" y="95.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (15 samples, 0.03%)</title><rect x="1081.8" y="309" width="0.3" height="15.0" fill="rgb(225,163,37)" rx="2" ry="2" />
<text  x="1084.77" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%)</title><rect x="146.6" y="181" width="0.1" height="15.0" fill="rgb(235,72,13)" rx="2" ry="2" />
<text  x="149.60" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="632.6" y="485" width="0.1" height="15.0" fill="rgb(235,227,45)" rx="2" ry="2" />
<text  x="635.58" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="785.1" y="181" width="0.2" height="15.0" fill="rgb(215,133,17)" rx="2" ry="2" />
<text  x="788.10" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (7 samples, 0.01%)</title><rect x="580.7" y="421" width="0.2" height="15.0" fill="rgb(207,182,35)" rx="2" ry="2" />
<text  x="583.72" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%)</title><rect x="804.1" y="277" width="0.3" height="15.0" fill="rgb(244,100,31)" rx="2" ry="2" />
<text  x="807.14" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (11 samples, 0.02%)</title><rect x="523.6" y="309" width="0.3" height="15.0" fill="rgb(205,190,47)" rx="2" ry="2" />
<text  x="526.64" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (98 samples, 0.21%)</title><rect x="441.7" y="309" width="2.5" height="15.0" fill="rgb(235,211,48)" rx="2" ry="2" />
<text  x="444.70" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (4 samples, 0.01%)</title><rect x="444.3" y="309" width="0.1" height="15.0" fill="rgb(224,165,37)" rx="2" ry="2" />
<text  x="447.27" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,243 samples, 4.79%)</title><rect x="999.6" y="309" width="56.5" height="15.0" fill="rgb(216,186,23)" rx="2" ry="2" />
<text  x="1002.63" y="319.5" >servi..</text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (26 samples, 0.06%)</title><rect x="1097.1" y="277" width="0.6" height="15.0" fill="rgb(230,28,30)" rx="2" ry="2" />
<text  x="1100.08" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (33 samples, 0.07%)</title><rect x="939.0" y="357" width="0.8" height="15.0" fill="rgb(229,98,43)" rx="2" ry="2" />
<text  x="942.00" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="905.1" y="357" width="0.2" height="15.0" fill="rgb(236,110,15)" rx="2" ry="2" />
<text  x="908.07" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (681 samples, 1.45%)</title><rect x="368.1" y="181" width="17.1" height="15.0" fill="rgb(206,138,11)" rx="2" ry="2" />
<text  x="371.08" y="191.5" ></text>
</g>
<g >
<title>sstring_hash::operator (13 samples, 0.03%)</title><rect x="1066.9" y="309" width="0.3" height="15.0" fill="rgb(243,72,1)" rx="2" ry="2" />
<text  x="1069.90" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (12 samples, 0.03%)</title><rect x="561.3" y="277" width="0.3" height="15.0" fill="rgb(228,68,41)" rx="2" ry="2" />
<text  x="564.32" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (11 samples, 0.02%)</title><rect x="840.2" y="341" width="0.3" height="15.0" fill="rgb(243,228,36)" rx="2" ry="2" />
<text  x="843.21" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (18 samples, 0.04%)</title><rect x="730.4" y="293" width="0.4" height="15.0" fill="rgb(250,177,48)" rx="2" ry="2" />
<text  x="733.36" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (10 samples, 0.02%)</title><rect x="37.7" y="421" width="0.2" height="15.0" fill="rgb(240,217,3)" rx="2" ry="2" />
<text  x="40.68" y="431.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (67 samples, 0.14%)</title><rect x="773.4" y="293" width="1.6" height="15.0" fill="rgb(212,227,8)" rx="2" ry="2" />
<text  x="776.36" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="442.9" y="293" width="0.3" height="15.0" fill="rgb(214,44,16)" rx="2" ry="2" />
<text  x="445.91" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (9 samples, 0.02%)</title><rect x="1175.4" y="389" width="0.2" height="15.0" fill="rgb(246,56,53)" rx="2" ry="2" />
<text  x="1178.37" y="399.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%)</title><rect x="676.1" y="485" width="0.1" height="15.0" fill="rgb(239,65,47)" rx="2" ry="2" />
<text  x="679.06" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_bound_terms (8 samples, 0.02%)</title><rect x="712.0" y="453" width="0.2" height="15.0" fill="rgb(214,198,46)" rx="2" ry="2" />
<text  x="714.97" y="463.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (7 samples, 0.01%)</title><rect x="190.5" y="85" width="0.2" height="15.0" fill="rgb(241,1,21)" rx="2" ry="2" />
<text  x="193.50" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="688.1" y="469" width="0.1" height="15.0" fill="rgb(213,110,14)" rx="2" ry="2" />
<text  x="691.10" y="479.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (76 samples, 0.16%)</title><rect x="592.9" y="437" width="1.9" height="15.0" fill="rgb(235,170,38)" rx="2" ry="2" />
<text  x="595.91" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (16 samples, 0.03%)</title><rect x="850.5" y="437" width="0.4" height="15.0" fill="rgb(228,56,33)" rx="2" ry="2" />
<text  x="853.54" y="447.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (6 samples, 0.01%)</title><rect x="1136.3" y="405" width="0.1" height="15.0" fill="rgb(222,157,50)" rx="2" ry="2" />
<text  x="1139.30" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (33 samples, 0.07%)</title><rect x="599.9" y="437" width="0.8" height="15.0" fill="rgb(222,160,3)" rx="2" ry="2" />
<text  x="602.91" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (22 samples, 0.05%)</title><rect x="131.6" y="245" width="0.6" height="15.0" fill="rgb(238,70,25)" rx="2" ry="2" />
<text  x="134.63" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="781.6" y="197" width="0.1" height="15.0" fill="rgb(224,133,26)" rx="2" ry="2" />
<text  x="784.62" y="207.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (55 samples, 0.12%)</title><rect x="17.0" y="325" width="1.3" height="15.0" fill="rgb(232,112,38)" rx="2" ry="2" />
<text  x="19.95" y="335.5" ></text>
</g>
<g >
<title>operator new (108 samples, 0.23%)</title><rect x="1020.6" y="245" width="2.7" height="15.0" fill="rgb(250,118,39)" rx="2" ry="2" />
<text  x="1023.58" y="255.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (15 samples, 0.03%)</title><rect x="309.0" y="181" width="0.4" height="15.0" fill="rgb(235,71,53)" rx="2" ry="2" />
<text  x="312.04" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="835.7" y="421" width="0.1" height="15.0" fill="rgb(209,112,9)" rx="2" ry="2" />
<text  x="838.73" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (4 samples, 0.01%)</title><rect x="704.1" y="501" width="0.1" height="15.0" fill="rgb(206,35,30)" rx="2" ry="2" />
<text  x="707.09" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (126 samples, 0.27%)</title><rect x="668.3" y="485" width="3.2" height="15.0" fill="rgb(233,203,41)" rx="2" ry="2" />
<text  x="671.32" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (39 samples, 0.08%)</title><rect x="935.4" y="405" width="1.0" height="15.0" fill="rgb(241,13,17)" rx="2" ry="2" />
<text  x="938.37" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="847.6" y="405" width="0.4" height="15.0" fill="rgb(236,205,24)" rx="2" ry="2" />
<text  x="850.64" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="862.5" y="469" width="0.1" height="15.0" fill="rgb(226,170,22)" rx="2" ry="2" />
<text  x="865.48" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (5 samples, 0.01%)</title><rect x="963.1" y="373" width="0.2" height="15.0" fill="rgb(235,103,14)" rx="2" ry="2" />
<text  x="966.13" y="383.5" ></text>
</g>
<g >
<title>database::has_keyspace (172 samples, 0.37%)</title><rect x="830.2" y="421" width="4.3" height="15.0" fill="rgb(221,30,42)" rx="2" ry="2" />
<text  x="833.16" y="431.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (29 samples, 0.06%)</title><rect x="790.1" y="117" width="0.7" height="15.0" fill="rgb(235,191,35)" rx="2" ry="2" />
<text  x="793.06" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (9 samples, 0.02%)</title><rect x="765.6" y="341" width="0.3" height="15.0" fill="rgb(234,70,29)" rx="2" ry="2" />
<text  x="768.63" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (4 samples, 0.01%)</title><rect x="1137.8" y="421" width="0.1" height="15.0" fill="rgb(248,93,2)" rx="2" ry="2" />
<text  x="1140.81" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (7 samples, 0.01%)</title><rect x="1033.4" y="181" width="0.2" height="15.0" fill="rgb(254,213,51)" rx="2" ry="2" />
<text  x="1036.43" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="65.9" y="389" width="0.2" height="15.0" fill="rgb(210,76,19)" rx="2" ry="2" />
<text  x="68.89" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get (156 samples, 0.33%)</title><rect x="971.9" y="357" width="4.0" height="15.0" fill="rgb(254,8,12)" rx="2" ry="2" />
<text  x="974.94" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (78 samples, 0.17%)</title><rect x="985.1" y="309" width="2.0" height="15.0" fill="rgb(237,158,27)" rx="2" ry="2" />
<text  x="988.09" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="892.5" y="277" width="0.4" height="15.0" fill="rgb(250,124,44)" rx="2" ry="2" />
<text  x="895.50" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (159 samples, 0.34%)</title><rect x="1074.0" y="309" width="4.0" height="15.0" fill="rgb(237,50,1)" rx="2" ry="2" />
<text  x="1077.03" y="319.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (9 samples, 0.02%)</title><rect x="360.8" y="197" width="0.2" height="15.0" fill="rgb(231,174,45)" rx="2" ry="2" />
<text  x="363.80" y="207.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (339 samples, 0.72%)</title><rect x="536.2" y="405" width="8.6" height="15.0" fill="rgb(240,36,27)" rx="2" ry="2" />
<text  x="539.24" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (10 samples, 0.02%)</title><rect x="1054.4" y="293" width="0.2" height="15.0" fill="rgb(205,97,37)" rx="2" ry="2" />
<text  x="1057.36" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (14 samples, 0.03%)</title><rect x="609.2" y="389" width="0.4" height="15.0" fill="rgb(253,133,12)" rx="2" ry="2" />
<text  x="612.21" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="670.7" y="469" width="0.1" height="15.0" fill="rgb(235,78,51)" rx="2" ry="2" />
<text  x="673.69" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (396 samples, 0.85%)</title><rect x="141.5" y="245" width="9.9" height="15.0" fill="rgb(243,9,8)" rx="2" ry="2" />
<text  x="144.46" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%)</title><rect x="759.8" y="325" width="0.3" height="15.0" fill="rgb(251,133,31)" rx="2" ry="2" />
<text  x="762.81" y="335.5" ></text>
</g>
<g >
<title>database::apply_in_memory (15 samples, 0.03%)</title><rect x="1140.3" y="293" width="0.4" height="15.0" fill="rgb(244,129,45)" rx="2" ry="2" />
<text  x="1143.30" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (6 samples, 0.01%)</title><rect x="800.9" y="293" width="0.2" height="15.0" fill="rgb(249,194,16)" rx="2" ry="2" />
<text  x="803.94" y="303.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (55 samples, 0.12%)</title><rect x="666.7" y="469" width="1.4" height="15.0" fill="rgb(220,166,5)" rx="2" ry="2" />
<text  x="669.74" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="481.3" y="181" width="0.4" height="15.0" fill="rgb(231,107,27)" rx="2" ry="2" />
<text  x="484.30" y="191.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (21 samples, 0.04%)</title><rect x="794.4" y="101" width="0.5" height="15.0" fill="rgb(238,219,36)" rx="2" ry="2" />
<text  x="797.42" y="111.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (6 samples, 0.01%)</title><rect x="323.4" y="165" width="0.2" height="15.0" fill="rgb(217,82,53)" rx="2" ry="2" />
<text  x="326.42" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="1103.5" y="341" width="0.2" height="15.0" fill="rgb(206,165,52)" rx="2" ry="2" />
<text  x="1106.53" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (21 samples, 0.04%)</title><rect x="695.5" y="421" width="0.6" height="15.0" fill="rgb(216,144,27)" rx="2" ry="2" />
<text  x="698.53" y="431.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (17 samples, 0.04%)</title><rect x="1097.1" y="261" width="0.5" height="15.0" fill="rgb(244,135,13)" rx="2" ry="2" />
<text  x="1100.13" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="922.4" y="341" width="0.3" height="15.0" fill="rgb(211,39,16)" rx="2" ry="2" />
<text  x="925.45" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (46 samples, 0.10%)</title><rect x="1011.3" y="245" width="1.2" height="15.0" fill="rgb(206,34,37)" rx="2" ry="2" />
<text  x="1014.31" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (195 samples, 0.42%)</title><rect x="16.9" y="389" width="4.9" height="15.0" fill="rgb(232,124,49)" rx="2" ry="2" />
<text  x="19.93" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (14 samples, 0.03%)</title><rect x="157.5" y="197" width="0.4" height="15.0" fill="rgb(252,160,31)" rx="2" ry="2" />
<text  x="160.53" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (32 samples, 0.07%)</title><rect x="1030.0" y="149" width="0.8" height="15.0" fill="rgb(219,91,18)" rx="2" ry="2" />
<text  x="1033.00" y="159.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (109 samples, 0.23%)</title><rect x="1133.7" y="421" width="2.7" height="15.0" fill="rgb(207,90,52)" rx="2" ry="2" />
<text  x="1136.70" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (63 samples, 0.13%)</title><rect x="1042.5" y="245" width="1.6" height="15.0" fill="rgb(245,139,23)" rx="2" ry="2" />
<text  x="1045.52" y="255.5" ></text>
</g>
<g >
<title>tombstone::apply (5 samples, 0.01%)</title><rect x="387.6" y="213" width="0.2" height="15.0" fill="rgb(207,44,20)" rx="2" ry="2" />
<text  x="390.65" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,054 samples, 12.92%)</title><rect x="955.0" y="405" width="152.5" height="15.0" fill="rgb(216,32,49)" rx="2" ry="2" />
<text  x="958.04" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (4 samples, 0.01%)</title><rect x="319.9" y="181" width="0.1" height="15.0" fill="rgb(233,70,10)" rx="2" ry="2" />
<text  x="322.89" y="191.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (13 samples, 0.03%)</title><rect x="804.7" y="341" width="0.3" height="15.0" fill="rgb(227,49,13)" rx="2" ry="2" />
<text  x="807.67" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="439.0" y="261" width="0.1" height="15.0" fill="rgb(237,63,48)" rx="2" ry="2" />
<text  x="442.01" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="904.7" y="309" width="0.4" height="15.0" fill="rgb(242,174,0)" rx="2" ry="2" />
<text  x="907.67" y="319.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="204.2" y="165" width="0.9" height="15.0" fill="rgb(207,87,25)" rx="2" ry="2" />
<text  x="207.18" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="492.1" y="293" width="0.1" height="15.0" fill="rgb(238,31,35)" rx="2" ry="2" />
<text  x="495.06" y="303.5" ></text>
</g>
<g >
<title>database::has_keyspace (105 samples, 0.22%)</title><rect x="838.2" y="405" width="2.6" height="15.0" fill="rgb(214,226,52)" rx="2" ry="2" />
<text  x="841.19" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (208 samples, 0.44%)</title><rect x="444.4" y="309" width="5.2" height="15.0" fill="rgb(252,187,21)" rx="2" ry="2" />
<text  x="447.37" y="319.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (26 samples, 0.06%)</title><rect x="387.0" y="213" width="0.6" height="15.0" fill="rgb(224,197,12)" rx="2" ry="2" />
<text  x="389.99" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%)</title><rect x="1072.0" y="293" width="0.8" height="15.0" fill="rgb(238,172,12)" rx="2" ry="2" />
<text  x="1074.97" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (15 samples, 0.03%)</title><rect x="998.5" y="261" width="0.3" height="15.0" fill="rgb(247,119,32)" rx="2" ry="2" />
<text  x="1001.47" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="710.3" y="469" width="0.2" height="15.0" fill="rgb(239,156,26)" rx="2" ry="2" />
<text  x="713.29" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%)</title><rect x="387.1" y="197" width="0.5" height="15.0" fill="rgb(243,93,15)" rx="2" ry="2" />
<text  x="390.15" y="207.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (17 samples, 0.04%)</title><rect x="842.9" y="389" width="0.4" height="15.0" fill="rgb(225,223,54)" rx="2" ry="2" />
<text  x="845.90" y="399.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (18 samples, 0.04%)</title><rect x="307.2" y="165" width="0.5" height="15.0" fill="rgb(207,170,11)" rx="2" ry="2" />
<text  x="310.25" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="928.9" y="357" width="0.3" height="15.0" fill="rgb(216,196,31)" rx="2" ry="2" />
<text  x="931.92" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (45 samples, 0.10%)</title><rect x="231.1" y="181" width="1.1" height="15.0" fill="rgb(232,187,42)" rx="2" ry="2" />
<text  x="234.05" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (82 samples, 0.18%)</title><rect x="697.9" y="437" width="2.1" height="15.0" fill="rgb(244,2,34)" rx="2" ry="2" />
<text  x="700.92" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (524 samples, 1.12%)</title><rect x="469.9" y="293" width="13.2" height="15.0" fill="rgb(228,225,11)" rx="2" ry="2" />
<text  x="472.94" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="504.0" y="181" width="0.5" height="15.0" fill="rgb(229,173,51)" rx="2" ry="2" />
<text  x="507.04" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="930.6" y="405" width="0.2" height="15.0" fill="rgb(253,85,17)" rx="2" ry="2" />
<text  x="933.64" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (24 samples, 0.05%)</title><rect x="367.5" y="181" width="0.6" height="15.0" fill="rgb(239,172,10)" rx="2" ry="2" />
<text  x="370.47" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="838.0" y="405" width="0.2" height="15.0" fill="rgb(232,128,49)" rx="2" ry="2" />
<text  x="841.04" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (12 samples, 0.03%)</title><rect x="1142.0" y="485" width="0.3" height="15.0" fill="rgb(212,44,14)" rx="2" ry="2" />
<text  x="1144.97" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (8 samples, 0.02%)</title><rect x="221.2" y="213" width="0.2" height="15.0" fill="rgb(242,220,52)" rx="2" ry="2" />
<text  x="224.15" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="977.0" y="357" width="0.2" height="15.0" fill="rgb(229,111,20)" rx="2" ry="2" />
<text  x="979.98" y="367.5" ></text>
</g>
<g >
<title>dht::shard_of (30 samples, 0.06%)</title><rect x="1007.9" y="277" width="0.8" height="15.0" fill="rgb(240,108,48)" rx="2" ry="2" />
<text  x="1010.94" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="816.1" y="277" width="0.2" height="15.0" fill="rgb(237,162,35)" rx="2" ry="2" />
<text  x="819.13" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (11 samples, 0.02%)</title><rect x="671.2" y="453" width="0.3" height="15.0" fill="rgb(252,65,53)" rx="2" ry="2" />
<text  x="674.22" y="463.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="654.1" y="485" width="0.9" height="15.0" fill="rgb(234,41,10)" rx="2" ry="2" />
<text  x="657.12" y="495.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (341 samples, 0.73%)</title><rect x="473.6" y="261" width="8.6" height="15.0" fill="rgb(249,59,40)" rx="2" ry="2" />
<text  x="476.57" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (43 samples, 0.09%)</title><rect x="17.2" y="293" width="1.1" height="15.0" fill="rgb(232,46,9)" rx="2" ry="2" />
<text  x="20.18" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (4 samples, 0.01%)</title><rect x="963.0" y="373" width="0.1" height="15.0" fill="rgb(254,207,24)" rx="2" ry="2" />
<text  x="966.03" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,027 samples, 8.60%)</title><rect x="722.5" y="437" width="101.4" height="15.0" fill="rgb(232,193,16)" rx="2" ry="2" />
<text  x="725.45" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>query::result_memory_accounter::done (4 samples, 0.01%)</title><rect x="587.0" y="437" width="0.1" height="15.0" fill="rgb(253,104,2)" rx="2" ry="2" />
<text  x="590.02" y="447.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (15 samples, 0.03%)</title><rect x="738.8" y="261" width="0.4" height="15.0" fill="rgb(207,5,21)" rx="2" ry="2" />
<text  x="741.78" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (67 samples, 0.14%)</title><rect x="769.8" y="309" width="1.6" height="15.0" fill="rgb(238,208,47)" rx="2" ry="2" />
<text  x="772.76" y="319.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (45,814 samples, 97.79%)</title><rect x="23.7" y="565" width="1154.0" height="15.0" fill="rgb(249,195,43)" rx="2" ry="2" />
<text  x="26.70" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.01%)</title><rect x="639.0" y="421" width="0.1" height="15.0" fill="rgb(226,142,40)" rx="2" ry="2" />
<text  x="642.03" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4 samples, 0.01%)</title><rect x="420.0" y="389" width="0.1" height="15.0" fill="rgb(220,131,26)" rx="2" ry="2" />
<text  x="423.04" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="1022.6" y="213" width="0.7" height="15.0" fill="rgb(240,15,29)" rx="2" ry="2" />
<text  x="1025.62" y="223.5" ></text>
</g>
<g >
<title>seastar::gate::enter (24 samples, 0.05%)</title><rect x="1041.3" y="229" width="0.6" height="15.0" fill="rgb(241,43,24)" rx="2" ry="2" />
<text  x="1044.29" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="214.2" y="213" width="0.1" height="15.0" fill="rgb(246,19,10)" rx="2" ry="2" />
<text  x="217.18" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (11 samples, 0.02%)</title><rect x="23.3" y="549" width="0.3" height="15.0" fill="rgb(251,126,0)" rx="2" ry="2" />
<text  x="26.27" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (32 samples, 0.07%)</title><rect x="663.3" y="453" width="0.8" height="15.0" fill="rgb(251,214,34)" rx="2" ry="2" />
<text  x="666.31" y="463.5" ></text>
</g>
<g >
<title>operator new (96 samples, 0.20%)</title><rect x="1010.1" y="277" width="2.4" height="15.0" fill="rgb(238,226,13)" rx="2" ry="2" />
<text  x="1013.05" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (29 samples, 0.06%)</title><rect x="798.7" y="245" width="0.8" height="15.0" fill="rgb(243,197,24)" rx="2" ry="2" />
<text  x="801.75" y="255.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="697.5" y="437" width="0.2" height="15.0" fill="rgb(237,27,3)" rx="2" ry="2" />
<text  x="700.49" y="447.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (188 samples, 0.40%)</title><rect x="841.6" y="437" width="4.7" height="15.0" fill="rgb(211,226,15)" rx="2" ry="2" />
<text  x="844.57" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (9 samples, 0.02%)</title><rect x="392.4" y="213" width="0.2" height="15.0" fill="rgb(229,14,21)" rx="2" ry="2" />
<text  x="395.36" y="223.5" ></text>
</g>
<g >
<title>query::result::builder::builder (4 samples, 0.01%)</title><rect x="586.8" y="437" width="0.1" height="15.0" fill="rgb(244,160,52)" rx="2" ry="2" />
<text  x="589.84" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (8 samples, 0.02%)</title><rect x="856.3" y="309" width="0.2" height="15.0" fill="rgb(208,120,24)" rx="2" ry="2" />
<text  x="859.33" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (18 samples, 0.04%)</title><rect x="286.3" y="293" width="0.4" height="15.0" fill="rgb(229,62,33)" rx="2" ry="2" />
<text  x="289.27" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (57 samples, 0.12%)</title><rect x="1159.1" y="421" width="1.4" height="15.0" fill="rgb(209,159,13)" rx="2" ry="2" />
<text  x="1162.07" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (24 samples, 0.05%)</title><rect x="277.3" y="357" width="0.6" height="15.0" fill="rgb(221,138,52)" rx="2" ry="2" />
<text  x="280.27" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (30 samples, 0.06%)</title><rect x="816.6" y="309" width="0.8" height="15.0" fill="rgb(239,166,52)" rx="2" ry="2" />
<text  x="819.61" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="437" width="1.0" height="15.0" fill="rgb(221,60,19)" rx="2" ry="2" />
<text  x="1143.98" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (17 samples, 0.04%)</title><rect x="251.6" y="277" width="0.4" height="15.0" fill="rgb(215,14,15)" rx="2" ry="2" />
<text  x="254.58" y="287.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (27 samples, 0.06%)</title><rect x="522.7" y="261" width="0.7" height="15.0" fill="rgb(223,115,28)" rx="2" ry="2" />
<text  x="525.68" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (14 samples, 0.03%)</title><rect x="808.2" y="277" width="0.3" height="15.0" fill="rgb(221,173,22)" rx="2" ry="2" />
<text  x="811.19" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (14 samples, 0.03%)</title><rect x="717.7" y="309" width="0.4" height="15.0" fill="rgb(209,161,10)" rx="2" ry="2" />
<text  x="720.74" y="319.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (40 samples, 0.09%)</title><rect x="793.9" y="117" width="1.0" height="15.0" fill="rgb(228,171,22)" rx="2" ry="2" />
<text  x="796.94" y="127.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (8 samples, 0.02%)</title><rect x="1098.2" y="293" width="0.2" height="15.0" fill="rgb(250,96,39)" rx="2" ry="2" />
<text  x="1101.21" y="303.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (23 samples, 0.05%)</title><rect x="69.5" y="389" width="0.6" height="15.0" fill="rgb(240,66,48)" rx="2" ry="2" />
<text  x="72.55" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (36 samples, 0.08%)</title><rect x="1141.0" y="341" width="0.9" height="15.0" fill="rgb(254,224,20)" rx="2" ry="2" />
<text  x="1144.01" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (28 samples, 0.06%)</title><rect x="443.4" y="293" width="0.7" height="15.0" fill="rgb(252,31,14)" rx="2" ry="2" />
<text  x="446.39" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (57 samples, 0.12%)</title><rect x="880.1" y="293" width="1.4" height="15.0" fill="rgb(224,8,29)" rx="2" ry="2" />
<text  x="883.11" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="665.3" y="485" width="0.1" height="15.0" fill="rgb(245,174,32)" rx="2" ry="2" />
<text  x="668.25" y="495.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="527.8" y="261" width="0.6" height="15.0" fill="rgb(215,101,38)" rx="2" ry="2" />
<text  x="530.77" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (9 samples, 0.02%)</title><rect x="857.3" y="389" width="0.2" height="15.0" fill="rgb(210,37,14)" rx="2" ry="2" />
<text  x="860.29" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="573.0" y="341" width="0.3" height="15.0" fill="rgb(207,171,9)" rx="2" ry="2" />
<text  x="576.01" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (5 samples, 0.01%)</title><rect x="23.8" y="517" width="0.1" height="15.0" fill="rgb(244,97,47)" rx="2" ry="2" />
<text  x="26.80" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.03%)</title><rect x="857.5" y="373" width="0.3" height="15.0" fill="rgb(219,175,53)" rx="2" ry="2" />
<text  x="860.51" y="383.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (144 samples, 0.31%)</title><rect x="735.6" y="325" width="3.6" height="15.0" fill="rgb(218,127,3)" rx="2" ry="2" />
<text  x="738.60" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="269.1" y="277" width="0.1" height="15.0" fill="rgb(246,3,10)" rx="2" ry="2" />
<text  x="272.06" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (102 samples, 0.22%)</title><rect x="478.4" y="197" width="2.6" height="15.0" fill="rgb(222,120,31)" rx="2" ry="2" />
<text  x="481.43" y="207.5" ></text>
</g>
<g >
<title>database::find_schema (61 samples, 0.13%)</title><rect x="812.5" y="357" width="1.6" height="15.0" fill="rgb(243,47,53)" rx="2" ry="2" />
<text  x="815.53" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="657.8" y="485" width="0.6" height="15.0" fill="rgb(236,145,45)" rx="2" ry="2" />
<text  x="660.79" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="409.6" y="261" width="0.6" height="15.0" fill="rgb(246,187,24)" rx="2" ry="2" />
<text  x="412.61" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.01%)</title><rect x="16.4" y="437" width="0.1" height="15.0" fill="rgb(228,174,4)" rx="2" ry="2" />
<text  x="19.42" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="501.9" y="181" width="0.7" height="15.0" fill="rgb(230,157,27)" rx="2" ry="2" />
<text  x="504.85" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (14 samples, 0.03%)</title><rect x="980.8" y="341" width="0.3" height="15.0" fill="rgb(214,215,43)" rx="2" ry="2" />
<text  x="983.79" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%)</title><rect x="838.2" y="389" width="2.5" height="15.0" fill="rgb(223,199,51)" rx="2" ry="2" />
<text  x="841.24" y="399.5" ></text>
</g>
<g >
<title>__tls_init (4 samples, 0.01%)</title><rect x="496.0" y="245" width="0.1" height="15.0" fill="rgb(247,104,32)" rx="2" ry="2" />
<text  x="498.96" y="255.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="506.6" y="229" width="0.2" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="509.64" y="239.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (10 samples, 0.02%)</title><rect x="1046.9" y="277" width="0.2" height="15.0" fill="rgb(237,60,52)" rx="2" ry="2" />
<text  x="1049.85" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (28 samples, 0.06%)</title><rect x="670.8" y="469" width="0.7" height="15.0" fill="rgb(229,201,27)" rx="2" ry="2" />
<text  x="673.79" y="479.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (99 samples, 0.21%)</title><rect x="526.1" y="277" width="2.5" height="15.0" fill="rgb(236,95,23)" rx="2" ry="2" />
<text  x="529.06" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%)</title><rect x="321.9" y="165" width="0.2" height="15.0" fill="rgb(241,214,15)" rx="2" ry="2" />
<text  x="324.91" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="849.1" y="469" width="0.2" height="15.0" fill="rgb(249,194,13)" rx="2" ry="2" />
<text  x="852.10" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%)</title><rect x="484.1" y="325" width="0.3" height="15.0" fill="rgb(216,63,46)" rx="2" ry="2" />
<text  x="487.10" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (8 samples, 0.02%)</title><rect x="956.4" y="389" width="0.2" height="15.0" fill="rgb(232,118,28)" rx="2" ry="2" />
<text  x="959.38" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (9 samples, 0.02%)</title><rect x="1101.0" y="357" width="0.2" height="15.0" fill="rgb(225,51,32)" rx="2" ry="2" />
<text  x="1103.98" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (7 samples, 0.01%)</title><rect x="443.2" y="293" width="0.2" height="15.0" fill="rgb(214,228,51)" rx="2" ry="2" />
<text  x="446.21" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="386.8" y="213" width="0.2" height="15.0" fill="rgb(235,157,38)" rx="2" ry="2" />
<text  x="389.82" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (10 samples, 0.02%)</title><rect x="1116.7" y="389" width="0.3" height="15.0" fill="rgb(217,9,9)" rx="2" ry="2" />
<text  x="1119.70" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="872.1" y="421" width="0.2" height="15.0" fill="rgb(246,132,4)" rx="2" ry="2" />
<text  x="875.15" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="677.7" y="469" width="0.2" height="15.0" fill="rgb(215,12,9)" rx="2" ry="2" />
<text  x="680.67" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1044.6" y="261" width="0.2" height="15.0" fill="rgb(233,144,13)" rx="2" ry="2" />
<text  x="1047.61" y="271.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="476.9" y="197" width="0.1" height="15.0" fill="rgb(250,39,53)" rx="2" ry="2" />
<text  x="479.87" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%)</title><rect x="944.5" y="341" width="0.2" height="15.0" fill="rgb(241,180,43)" rx="2" ry="2" />
<text  x="947.49" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (73 samples, 0.16%)</title><rect x="747.2" y="373" width="1.9" height="15.0" fill="rgb(230,172,20)" rx="2" ry="2" />
<text  x="750.24" y="383.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,849 samples, 3.95%)</title><rect x="762.7" y="373" width="46.6" height="15.0" fill="rgb(237,220,6)" rx="2" ry="2" />
<text  x="765.70" y="383.5" >serv..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="760.3" y="341" width="0.1" height="15.0" fill="rgb(248,227,32)" rx="2" ry="2" />
<text  x="763.26" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (17 samples, 0.04%)</title><rect x="680.9" y="453" width="0.4" height="15.0" fill="rgb(207,21,32)" rx="2" ry="2" />
<text  x="683.87" y="463.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (7 samples, 0.01%)</title><rect x="454.5" y="325" width="0.2" height="15.0" fill="rgb(228,196,21)" rx="2" ry="2" />
<text  x="457.52" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="492.2" y="277" width="0.7" height="15.0" fill="rgb(239,53,39)" rx="2" ry="2" />
<text  x="495.18" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (35 samples, 0.07%)</title><rect x="675.1" y="437" width="0.9" height="15.0" fill="rgb(244,216,0)" rx="2" ry="2" />
<text  x="678.10" y="447.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="56.7" y="453" width="1.1" height="15.0" fill="rgb(206,222,36)" rx="2" ry="2" />
<text  x="59.70" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (23 samples, 0.05%)</title><rect x="895.3" y="293" width="0.6" height="15.0" fill="rgb(215,93,53)" rx="2" ry="2" />
<text  x="898.32" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (97 samples, 0.21%)</title><rect x="286.9" y="293" width="2.4" height="15.0" fill="rgb(236,225,21)" rx="2" ry="2" />
<text  x="289.87" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (15 samples, 0.03%)</title><rect x="24.2" y="517" width="0.4" height="15.0" fill="rgb(236,1,53)" rx="2" ry="2" />
<text  x="27.23" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (814 samples, 1.74%)</title><rect x="365.4" y="197" width="20.5" height="15.0" fill="rgb(231,0,42)" rx="2" ry="2" />
<text  x="368.43" y="207.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (7 samples, 0.01%)</title><rect x="223.7" y="229" width="0.1" height="15.0" fill="rgb(252,147,52)" rx="2" ry="2" />
<text  x="226.67" y="239.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(209,164,41)" rx="2" ry="2" />
<text  x="1191.84" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (4 samples, 0.01%)</title><rect x="1136.8" y="421" width="0.1" height="15.0" fill="rgb(246,133,20)" rx="2" ry="2" />
<text  x="1139.80" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (22 samples, 0.05%)</title><rect x="675.2" y="341" width="0.6" height="15.0" fill="rgb(226,185,41)" rx="2" ry="2" />
<text  x="678.20" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="622.8" y="469" width="0.1" height="15.0" fill="rgb(250,128,4)" rx="2" ry="2" />
<text  x="625.76" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%)</title><rect x="193.3" y="117" width="0.5" height="15.0" fill="rgb(208,70,34)" rx="2" ry="2" />
<text  x="196.35" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="796.4" y="229" width="0.1" height="15.0" fill="rgb(220,111,54)" rx="2" ry="2" />
<text  x="799.36" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (25 samples, 0.05%)</title><rect x="38.6" y="421" width="0.6" height="15.0" fill="rgb(247,173,7)" rx="2" ry="2" />
<text  x="41.61" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (761 samples, 1.62%)</title><rect x="115.7" y="309" width="19.2" height="15.0" fill="rgb(235,87,13)" rx="2" ry="2" />
<text  x="118.69" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="1137.4" y="421" width="0.4" height="15.0" fill="rgb(237,213,10)" rx="2" ry="2" />
<text  x="1140.38" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (906 samples, 1.93%)</title><rect x="878.8" y="357" width="22.8" height="15.0" fill="rgb(222,186,16)" rx="2" ry="2" />
<text  x="881.80" y="367.5" >c..</text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="801.2" y="277" width="0.8" height="15.0" fill="rgb(207,27,27)" rx="2" ry="2" />
<text  x="804.24" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%)</title><rect x="943.0" y="357" width="0.2" height="15.0" fill="rgb(211,58,32)" rx="2" ry="2" />
<text  x="945.98" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1136.6" y="421" width="0.1" height="15.0" fill="rgb(228,204,41)" rx="2" ry="2" />
<text  x="1139.55" y="431.5" ></text>
</g>
<g >
<title>local_schema_registry (23 samples, 0.05%)</title><rect x="960.1" y="373" width="0.5" height="15.0" fill="rgb(225,203,4)" rx="2" ry="2" />
<text  x="963.06" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="211.1" y="117" width="0.2" height="15.0" fill="rgb(230,50,17)" rx="2" ry="2" />
<text  x="214.13" y="127.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (156 samples, 0.33%)</title><rect x="995.3" y="293" width="4.0" height="15.0" fill="rgb(223,150,2)" rx="2" ry="2" />
<text  x="998.34" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="849.8" y="421" width="0.7" height="15.0" fill="rgb(214,17,54)" rx="2" ry="2" />
<text  x="852.78" y="431.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.01%)</title><rect x="593.9" y="405" width="0.1" height="15.0" fill="rgb(239,106,45)" rx="2" ry="2" />
<text  x="596.94" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (20 samples, 0.04%)</title><rect x="945.5" y="405" width="0.6" height="15.0" fill="rgb(251,92,39)" rx="2" ry="2" />
<text  x="948.55" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="614.3" y="373" width="0.6" height="15.0" fill="rgb(233,5,42)" rx="2" ry="2" />
<text  x="617.34" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="936.6" y="389" width="0.1" height="15.0" fill="rgb(216,146,18)" rx="2" ry="2" />
<text  x="939.60" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (16 samples, 0.03%)</title><rect x="987.8" y="293" width="0.4" height="15.0" fill="rgb(226,62,34)" rx="2" ry="2" />
<text  x="990.81" y="303.5" ></text>
</g>
<g >
<title>database::find_uuid (136 samples, 0.29%)</title><rect x="814.1" y="357" width="3.4" height="15.0" fill="rgb(232,65,44)" rx="2" ry="2" />
<text  x="817.06" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (4 samples, 0.01%)</title><rect x="409.5" y="261" width="0.1" height="15.0" fill="rgb(247,116,7)" rx="2" ry="2" />
<text  x="412.49" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (11 samples, 0.02%)</title><rect x="211.8" y="133" width="0.3" height="15.0" fill="rgb(238,164,45)" rx="2" ry="2" />
<text  x="214.81" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%)</title><rect x="59.6" y="437" width="0.1" height="15.0" fill="rgb(222,107,16)" rx="2" ry="2" />
<text  x="62.57" y="447.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (9 samples, 0.02%)</title><rect x="594.0" y="405" width="0.3" height="15.0" fill="rgb(249,112,41)" rx="2" ry="2" />
<text  x="597.04" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (11 samples, 0.02%)</title><rect x="596.6" y="437" width="0.2" height="15.0" fill="rgb(240,187,42)" rx="2" ry="2" />
<text  x="599.56" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="527.6" y="245" width="0.2" height="15.0" fill="rgb(228,192,49)" rx="2" ry="2" />
<text  x="530.62" y="255.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="488.9" y="309" width="0.2" height="15.0" fill="rgb(231,40,35)" rx="2" ry="2" />
<text  x="491.91" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="518.4" y="341" width="0.1" height="15.0" fill="rgb(250,166,39)" rx="2" ry="2" />
<text  x="521.40" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="41.3" y="453" width="0.1" height="15.0" fill="rgb(248,153,23)" rx="2" ry="2" />
<text  x="44.28" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="933.5" y="389" width="0.3" height="15.0" fill="rgb(246,150,54)" rx="2" ry="2" />
<text  x="936.48" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="327.6" y="181" width="0.2" height="15.0" fill="rgb(241,151,32)" rx="2" ry="2" />
<text  x="330.63" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (10 samples, 0.02%)</title><rect x="854.1" y="501" width="0.3" height="15.0" fill="rgb(254,36,25)" rx="2" ry="2" />
<text  x="857.14" y="511.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (8 samples, 0.02%)</title><rect x="735.1" y="277" width="0.2" height="15.0" fill="rgb(212,209,14)" rx="2" ry="2" />
<text  x="738.15" y="287.5" ></text>
</g>
<g >
<title>database::find_keyspace (6 samples, 0.01%)</title><rect x="969.0" y="357" width="0.2" height="15.0" fill="rgb(251,69,46)" rx="2" ry="2" />
<text  x="972.02" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (17 samples, 0.04%)</title><rect x="52.4" y="469" width="0.5" height="15.0" fill="rgb(231,8,24)" rx="2" ry="2" />
<text  x="55.44" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (21 samples, 0.04%)</title><rect x="647.9" y="469" width="0.5" height="15.0" fill="rgb(229,28,5)" rx="2" ry="2" />
<text  x="650.90" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (21 samples, 0.04%)</title><rect x="529.3" y="341" width="0.6" height="15.0" fill="rgb(248,86,37)" rx="2" ry="2" />
<text  x="532.33" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (15 samples, 0.03%)</title><rect x="235.0" y="181" width="0.3" height="15.0" fill="rgb(247,113,19)" rx="2" ry="2" />
<text  x="237.96" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="889.6" y="261" width="0.3" height="15.0" fill="rgb(245,191,17)" rx="2" ry="2" />
<text  x="892.63" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (88 samples, 0.19%)</title><rect x="1120.5" y="405" width="2.2" height="15.0" fill="rgb(238,52,4)" rx="2" ry="2" />
<text  x="1123.53" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="998.7" y="245" width="0.1" height="15.0" fill="rgb(205,41,26)" rx="2" ry="2" />
<text  x="1001.74" y="255.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (5 samples, 0.01%)</title><rect x="592.3" y="421" width="0.1" height="15.0" fill="rgb(254,151,0)" rx="2" ry="2" />
<text  x="595.25" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="385.0" y="165" width="0.2" height="15.0" fill="rgb(239,81,1)" rx="2" ry="2" />
<text  x="388.03" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="126.2" y="245" width="0.2" height="15.0" fill="rgb(219,164,25)" rx="2" ry="2" />
<text  x="129.22" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="1132.5" y="421" width="0.3" height="15.0" fill="rgb(248,123,17)" rx="2" ry="2" />
<text  x="1135.47" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (4 samples, 0.01%)</title><rect x="449.6" y="309" width="0.1" height="15.0" fill="rgb(254,224,9)" rx="2" ry="2" />
<text  x="452.64" y="319.5" ></text>
</g>
<g >
<title>std::operator+ (5 samples, 0.01%)</title><rect x="19.0" y="165" width="0.1" height="15.0" fill="rgb(244,112,15)" rx="2" ry="2" />
<text  x="22.02" y="175.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (4 samples, 0.01%)</title><rect x="822.2" y="421" width="0.2" height="15.0" fill="rgb(239,122,13)" rx="2" ry="2" />
<text  x="825.25" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (441 samples, 0.94%)</title><rect x="728.4" y="389" width="11.1" height="15.0" fill="rgb(242,198,14)" rx="2" ry="2" />
<text  x="731.37" y="399.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (5 samples, 0.01%)</title><rect x="1177.2" y="437" width="0.2" height="15.0" fill="rgb(254,100,33)" rx="2" ry="2" />
<text  x="1180.23" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="820.8" y="421" width="0.1" height="15.0" fill="rgb(250,114,20)" rx="2" ry="2" />
<text  x="823.79" y="431.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="819.0" y="277" width="0.2" height="15.0" fill="rgb(231,5,29)" rx="2" ry="2" />
<text  x="822.03" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="475.2" y="213" width="0.3" height="15.0" fill="rgb(215,206,18)" rx="2" ry="2" />
<text  x="478.23" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (11 samples, 0.02%)</title><rect x="23.3" y="533" width="0.3" height="15.0" fill="rgb(213,4,51)" rx="2" ry="2" />
<text  x="26.27" y="543.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="47.2" y="485" width="0.1" height="15.0" fill="rgb(238,221,34)" rx="2" ry="2" />
<text  x="50.20" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (10 samples, 0.02%)</title><rect x="752.2" y="309" width="0.3" height="15.0" fill="rgb(223,194,7)" rx="2" ry="2" />
<text  x="755.20" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (9 samples, 0.02%)</title><rect x="769.5" y="309" width="0.2" height="15.0" fill="rgb(248,125,42)" rx="2" ry="2" />
<text  x="772.48" y="319.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (14 samples, 0.03%)</title><rect x="882.8" y="293" width="0.4" height="15.0" fill="rgb(215,38,43)" rx="2" ry="2" />
<text  x="885.80" y="303.5" ></text>
</g>
<g >
<title>dht::shard_of (4 samples, 0.01%)</title><rect x="1000.6" y="293" width="0.1" height="15.0" fill="rgb(223,145,48)" rx="2" ry="2" />
<text  x="1003.56" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (7 samples, 0.01%)</title><rect x="211.5" y="149" width="0.2" height="15.0" fill="rgb(249,178,40)" rx="2" ry="2" />
<text  x="214.51" y="159.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (4 samples, 0.01%)</title><rect x="428.3" y="341" width="0.1" height="15.0" fill="rgb(244,121,36)" rx="2" ry="2" />
<text  x="431.30" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (182 samples, 0.39%)</title><rect x="182.5" y="69" width="4.6" height="15.0" fill="rgb(227,108,39)" rx="2" ry="2" />
<text  x="185.54" y="79.5" ></text>
</g>
<g >
<title>tombstone::apply (16 samples, 0.03%)</title><rect x="386.3" y="197" width="0.4" height="15.0" fill="rgb(217,93,23)" rx="2" ry="2" />
<text  x="389.34" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%)</title><rect x="226.1" y="245" width="0.3" height="15.0" fill="rgb(222,60,5)" rx="2" ry="2" />
<text  x="229.09" y="255.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (10 samples, 0.02%)</title><rect x="161.0" y="181" width="0.3" height="15.0" fill="rgb(248,176,4)" rx="2" ry="2" />
<text  x="164.03" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (10 samples, 0.02%)</title><rect x="560.7" y="277" width="0.2" height="15.0" fill="rgb(225,197,12)" rx="2" ry="2" />
<text  x="563.67" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (18 samples, 0.04%)</title><rect x="694.9" y="421" width="0.5" height="15.0" fill="rgb(234,179,46)" rx="2" ry="2" />
<text  x="697.92" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (14 samples, 0.03%)</title><rect x="697.3" y="453" width="0.4" height="15.0" fill="rgb(223,225,2)" rx="2" ry="2" />
<text  x="700.34" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (7 samples, 0.01%)</title><rect x="820.6" y="421" width="0.1" height="15.0" fill="rgb(232,11,10)" rx="2" ry="2" />
<text  x="823.56" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="780.6" y="229" width="0.2" height="15.0" fill="rgb(222,111,16)" rx="2" ry="2" />
<text  x="783.64" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1037.3" y="229" width="0.2" height="15.0" fill="rgb(226,184,38)" rx="2" ry="2" />
<text  x="1040.28" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="1033.9" y="197" width="0.2" height="15.0" fill="rgb(244,125,22)" rx="2" ry="2" />
<text  x="1036.86" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (24 samples, 0.05%)</title><rect x="732.0" y="373" width="0.6" height="15.0" fill="rgb(233,159,54)" rx="2" ry="2" />
<text  x="735.02" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (27 samples, 0.06%)</title><rect x="363.5" y="213" width="0.7" height="15.0" fill="rgb(209,157,13)" rx="2" ry="2" />
<text  x="366.52" y="223.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (16 samples, 0.03%)</title><rect x="929.4" y="389" width="0.4" height="15.0" fill="rgb(236,32,48)" rx="2" ry="2" />
<text  x="932.40" y="399.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (4 samples, 0.01%)</title><rect x="1162.9" y="469" width="0.1" height="15.0" fill="rgb(228,12,41)" rx="2" ry="2" />
<text  x="1165.90" y="479.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (45 samples, 0.10%)</title><rect x="550.8" y="325" width="1.1" height="15.0" fill="rgb(227,193,17)" rx="2" ry="2" />
<text  x="553.79" y="335.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (58 samples, 0.12%)</title><rect x="614.0" y="405" width="1.4" height="15.0" fill="rgb(223,92,17)" rx="2" ry="2" />
<text  x="616.97" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (58 samples, 0.12%)</title><rect x="95.3" y="437" width="1.4" height="15.0" fill="rgb(229,208,31)" rx="2" ry="2" />
<text  x="98.29" y="447.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (4 samples, 0.01%)</title><rect x="47.1" y="485" width="0.1" height="15.0" fill="rgb(228,191,51)" rx="2" ry="2" />
<text  x="50.10" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (4 samples, 0.01%)</title><rect x="18.8" y="341" width="0.1" height="15.0" fill="rgb(251,9,49)" rx="2" ry="2" />
<text  x="21.79" y="351.5" ></text>
</g>
<g >
<title>make_combined_reader (897 samples, 1.91%)</title><rect x="428.4" y="341" width="22.6" height="15.0" fill="rgb(231,205,34)" rx="2" ry="2" />
<text  x="431.40" y="351.5" >m..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (427 samples, 0.91%)</title><rect x="1178.0" y="629" width="10.8" height="15.0" fill="rgb(227,28,34)" rx="2" ry="2" />
<text  x="1181.04" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (6 samples, 0.01%)</title><rect x="52.9" y="469" width="0.1" height="15.0" fill="rgb(217,186,6)" rx="2" ry="2" />
<text  x="55.87" y="479.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="935.8" y="373" width="0.6" height="15.0" fill="rgb(212,194,8)" rx="2" ry="2" />
<text  x="938.85" y="383.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (6 samples, 0.01%)</title><rect x="857.5" y="309" width="0.2" height="15.0" fill="rgb(254,186,4)" rx="2" ry="2" />
<text  x="860.51" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (20 samples, 0.04%)</title><rect x="190.2" y="101" width="0.5" height="15.0" fill="rgb(206,64,50)" rx="2" ry="2" />
<text  x="193.17" y="111.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (24 samples, 0.05%)</title><rect x="445.2" y="277" width="0.6" height="15.0" fill="rgb(231,145,54)" rx="2" ry="2" />
<text  x="448.20" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (40 samples, 0.09%)</title><rect x="509.6" y="277" width="1.0" height="15.0" fill="rgb(246,147,51)" rx="2" ry="2" />
<text  x="512.61" y="287.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (4 samples, 0.01%)</title><rect x="1069.0" y="341" width="0.1" height="15.0" fill="rgb(209,61,54)" rx="2" ry="2" />
<text  x="1072.00" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="1068.4" y="325" width="0.5" height="15.0" fill="rgb(249,75,54)" rx="2" ry="2" />
<text  x="1071.44" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (20 samples, 0.04%)</title><rect x="34.5" y="485" width="0.5" height="15.0" fill="rgb(237,116,25)" rx="2" ry="2" />
<text  x="37.48" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="592.4" y="437" width="0.2" height="15.0" fill="rgb(241,119,16)" rx="2" ry="2" />
<text  x="595.38" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="533.8" y="405" width="0.1" height="15.0" fill="rgb(206,104,3)" rx="2" ry="2" />
<text  x="536.82" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (32 samples, 0.07%)</title><rect x="154.6" y="229" width="0.8" height="15.0" fill="rgb(248,213,27)" rx="2" ry="2" />
<text  x="157.61" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%)</title><rect x="195.7" y="133" width="0.3" height="15.0" fill="rgb(239,64,41)" rx="2" ry="2" />
<text  x="198.66" y="143.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="551.4" y="293" width="0.1" height="15.0" fill="rgb(224,6,12)" rx="2" ry="2" />
<text  x="554.37" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (15 samples, 0.03%)</title><rect x="1031.4" y="133" width="0.4" height="15.0" fill="rgb(246,128,21)" rx="2" ry="2" />
<text  x="1034.39" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (22 samples, 0.05%)</title><rect x="195.1" y="117" width="0.6" height="15.0" fill="rgb(241,156,29)" rx="2" ry="2" />
<text  x="198.11" y="127.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%)</title><rect x="691.2" y="453" width="0.4" height="15.0" fill="rgb(237,116,41)" rx="2" ry="2" />
<text  x="694.17" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (21 samples, 0.04%)</title><rect x="861.7" y="453" width="0.6" height="15.0" fill="rgb(205,16,16)" rx="2" ry="2" />
<text  x="864.75" y="463.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.03%)</title><rect x="643.1" y="453" width="0.4" height="15.0" fill="rgb(205,79,31)" rx="2" ry="2" />
<text  x="646.14" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (39 samples, 0.08%)</title><rect x="1141.0" y="373" width="1.0" height="15.0" fill="rgb(226,40,42)" rx="2" ry="2" />
<text  x="1143.98" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (5 samples, 0.01%)</title><rect x="162.6" y="149" width="0.2" height="15.0" fill="rgb(235,217,43)" rx="2" ry="2" />
<text  x="165.64" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1037.0" y="229" width="0.1" height="15.0" fill="rgb(214,188,27)" rx="2" ry="2" />
<text  x="1039.96" y="239.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (31 samples, 0.07%)</title><rect x="522.6" y="277" width="0.8" height="15.0" fill="rgb(219,166,26)" rx="2" ry="2" />
<text  x="525.58" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="897.8" y="293" width="0.2" height="15.0" fill="rgb(237,101,2)" rx="2" ry="2" />
<text  x="900.76" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (26 samples, 0.06%)</title><rect x="685.9" y="469" width="0.7" height="15.0" fill="rgb(214,227,27)" rx="2" ry="2" />
<text  x="688.93" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (83 samples, 0.18%)</title><rect x="671.6" y="485" width="2.1" height="15.0" fill="rgb(222,47,1)" rx="2" ry="2" />
<text  x="674.62" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (154 samples, 0.33%)</title><rect x="395.1" y="197" width="3.9" height="15.0" fill="rgb(223,76,15)" rx="2" ry="2" />
<text  x="398.11" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="447.8" y="261" width="0.6" height="15.0" fill="rgb(215,67,26)" rx="2" ry="2" />
<text  x="450.85" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (8 samples, 0.02%)</title><rect x="309.5" y="181" width="0.2" height="15.0" fill="rgb(249,22,3)" rx="2" ry="2" />
<text  x="312.49" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (17 samples, 0.04%)</title><rect x="616.3" y="389" width="0.4" height="15.0" fill="rgb(243,189,2)" rx="2" ry="2" />
<text  x="619.28" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (37 samples, 0.08%)</title><rect x="534.7" y="421" width="1.0" height="15.0" fill="rgb(233,156,4)" rx="2" ry="2" />
<text  x="537.75" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="895.9" y="293" width="0.1" height="15.0" fill="rgb(218,112,29)" rx="2" ry="2" />
<text  x="898.90" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="928.1" y="325" width="0.7" height="15.0" fill="rgb(211,197,19)" rx="2" ry="2" />
<text  x="931.12" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="901.4" y="341" width="0.2" height="15.0" fill="rgb(253,99,5)" rx="2" ry="2" />
<text  x="904.44" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (101 samples, 0.22%)</title><rect x="651.2" y="485" width="2.6" height="15.0" fill="rgb(245,8,45)" rx="2" ry="2" />
<text  x="654.22" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="922.9" y="389" width="0.4" height="15.0" fill="rgb(252,70,17)" rx="2" ry="2" />
<text  x="925.93" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="252.1" y="293" width="0.1" height="15.0" fill="rgb(238,140,16)" rx="2" ry="2" />
<text  x="255.11" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (12 samples, 0.03%)</title><rect x="638.2" y="421" width="0.3" height="15.0" fill="rgb(234,67,19)" rx="2" ry="2" />
<text  x="641.17" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="677.9" y="485" width="0.1" height="15.0" fill="rgb(218,145,7)" rx="2" ry="2" />
<text  x="680.87" y="495.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (7 samples, 0.01%)</title><rect x="223.4" y="213" width="0.2" height="15.0" fill="rgb(239,80,11)" rx="2" ry="2" />
<text  x="226.42" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (4 samples, 0.01%)</title><rect x="145.4" y="197" width="0.1" height="15.0" fill="rgb(242,79,53)" rx="2" ry="2" />
<text  x="148.44" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="598.2" y="437" width="0.2" height="15.0" fill="rgb(225,63,20)" rx="2" ry="2" />
<text  x="601.20" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (30 samples, 0.06%)</title><rect x="505.0" y="197" width="0.7" height="15.0" fill="rgb(222,226,45)" rx="2" ry="2" />
<text  x="507.98" y="207.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (127 samples, 0.27%)</title><rect x="232.9" y="197" width="3.2" height="15.0" fill="rgb(230,207,24)" rx="2" ry="2" />
<text  x="235.94" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="644.0" y="437" width="0.3" height="15.0" fill="rgb(248,219,45)" rx="2" ry="2" />
<text  x="646.97" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (5 samples, 0.01%)</title><rect x="988.2" y="293" width="0.1" height="15.0" fill="rgb(224,72,13)" rx="2" ry="2" />
<text  x="991.22" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (9 samples, 0.02%)</title><rect x="225.7" y="245" width="0.3" height="15.0" fill="rgb(222,222,7)" rx="2" ry="2" />
<text  x="228.74" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1078.8" y="325" width="0.3" height="15.0" fill="rgb(248,229,49)" rx="2" ry="2" />
<text  x="1081.84" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="609.1" y="373" width="0.1" height="15.0" fill="rgb(231,5,12)" rx="2" ry="2" />
<text  x="612.08" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="511.5" y="293" width="0.2" height="15.0" fill="rgb(231,151,50)" rx="2" ry="2" />
<text  x="514.53" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="862.3" y="469" width="0.2" height="15.0" fill="rgb(238,37,43)" rx="2" ry="2" />
<text  x="865.27" y="479.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="892.1" y="245" width="0.3" height="15.0" fill="rgb(211,229,8)" rx="2" ry="2" />
<text  x="895.15" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="797.2" y="213" width="0.3" height="15.0" fill="rgb(238,136,35)" rx="2" ry="2" />
<text  x="800.16" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="1136.9" y="421" width="0.1" height="15.0" fill="rgb(233,181,47)" rx="2" ry="2" />
<text  x="1139.90" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (27 samples, 0.06%)</title><rect x="857.2" y="405" width="0.7" height="15.0" fill="rgb(211,209,49)" rx="2" ry="2" />
<text  x="860.19" y="415.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (7 samples, 0.01%)</title><rect x="856.3" y="293" width="0.2" height="15.0" fill="rgb(220,24,10)" rx="2" ry="2" />
<text  x="859.33" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (27 samples, 0.06%)</title><rect x="647.7" y="485" width="0.7" height="15.0" fill="rgb(222,149,30)" rx="2" ry="2" />
<text  x="650.74" y="495.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (13 samples, 0.03%)</title><rect x="726.6" y="389" width="0.4" height="15.0" fill="rgb(236,57,47)" rx="2" ry="2" />
<text  x="729.63" y="399.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="35.4" y="469" width="0.9" height="15.0" fill="rgb(219,60,20)" rx="2" ry="2" />
<text  x="38.42" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (70 samples, 0.15%)</title><rect x="390.6" y="213" width="1.8" height="15.0" fill="rgb(234,171,14)" rx="2" ry="2" />
<text  x="393.60" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (137 samples, 0.29%)</title><rect x="183.5" y="37" width="3.5" height="15.0" fill="rgb(225,114,45)" rx="2" ry="2" />
<text  x="186.52" y="47.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="761.0" y="357" width="0.2" height="15.0" fill="rgb(239,61,44)" rx="2" ry="2" />
<text  x="763.97" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (19 samples, 0.04%)</title><rect x="229.5" y="213" width="0.4" height="15.0" fill="rgb(206,6,32)" rx="2" ry="2" />
<text  x="232.47" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (67 samples, 0.14%)</title><rect x="733.9" y="325" width="1.7" height="15.0" fill="rgb(250,144,54)" rx="2" ry="2" />
<text  x="736.91" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (5 samples, 0.01%)</title><rect x="22.9" y="485" width="0.1" height="15.0" fill="rgb(210,210,18)" rx="2" ry="2" />
<text  x="25.87" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (5 samples, 0.01%)</title><rect x="22.9" y="469" width="0.1" height="15.0" fill="rgb(216,166,43)" rx="2" ry="2" />
<text  x="25.87" y="479.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (302 samples, 0.64%)</title><rect x="474.5" y="245" width="7.7" height="15.0" fill="rgb(210,37,48)" rx="2" ry="2" />
<text  x="477.55" y="255.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (42 samples, 0.09%)</title><rect x="727.2" y="389" width="1.0" height="15.0" fill="rgb(248,217,1)" rx="2" ry="2" />
<text  x="730.16" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (21 samples, 0.04%)</title><rect x="164.6" y="133" width="0.5" height="15.0" fill="rgb(230,176,30)" rx="2" ry="2" />
<text  x="167.58" y="143.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (20 samples, 0.04%)</title><rect x="363.0" y="165" width="0.5" height="15.0" fill="rgb(224,150,5)" rx="2" ry="2" />
<text  x="366.02" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (27 samples, 0.06%)</title><rect x="861.6" y="469" width="0.7" height="15.0" fill="rgb(208,168,7)" rx="2" ry="2" />
<text  x="864.59" y="479.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="47.2" y="501" width="0.1" height="15.0" fill="rgb(242,3,34)" rx="2" ry="2" />
<text  x="50.20" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (39 samples, 0.08%)</title><rect x="191.3" y="69" width="1.0" height="15.0" fill="rgb(215,75,51)" rx="2" ry="2" />
<text  x="194.33" y="79.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="517.8" y="325" width="0.3" height="15.0" fill="rgb(224,128,26)" rx="2" ry="2" />
<text  x="520.82" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="49.1" y="485" width="0.3" height="15.0" fill="rgb(236,22,14)" rx="2" ry="2" />
<text  x="52.07" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (15 samples, 0.03%)</title><rect x="1027.1" y="181" width="0.3" height="15.0" fill="rgb(228,219,54)" rx="2" ry="2" />
<text  x="1030.06" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="1054.1" y="293" width="0.2" height="15.0" fill="rgb(237,108,14)" rx="2" ry="2" />
<text  x="1057.06" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (6 samples, 0.01%)</title><rect x="1150.3" y="485" width="0.2" height="15.0" fill="rgb(250,154,27)" rx="2" ry="2" />
<text  x="1153.33" y="495.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.01%)</title><rect x="18.1" y="245" width="0.1" height="15.0" fill="rgb(254,212,49)" rx="2" ry="2" />
<text  x="21.06" y="255.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="20.5" y="261" width="0.1" height="15.0" fill="rgb(241,61,14)" rx="2" ry="2" />
<text  x="23.45" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="640.9" y="469" width="0.1" height="15.0" fill="rgb(219,154,22)" rx="2" ry="2" />
<text  x="643.89" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (22 samples, 0.05%)</title><rect x="389.9" y="229" width="0.5" height="15.0" fill="rgb(206,64,26)" rx="2" ry="2" />
<text  x="392.89" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (47 samples, 0.10%)</title><rect x="217.7" y="149" width="1.2" height="15.0" fill="rgb(225,64,1)" rx="2" ry="2" />
<text  x="220.70" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (20 samples, 0.04%)</title><rect x="557.4" y="293" width="0.5" height="15.0" fill="rgb(213,191,9)" rx="2" ry="2" />
<text  x="560.42" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (15 samples, 0.03%)</title><rect x="1146.4" y="485" width="0.4" height="15.0" fill="rgb(213,125,32)" rx="2" ry="2" />
<text  x="1149.37" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (4 samples, 0.01%)</title><rect x="599.8" y="437" width="0.1" height="15.0" fill="rgb(214,219,38)" rx="2" ry="2" />
<text  x="602.81" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="563.6" y="293" width="0.1" height="15.0" fill="rgb(231,184,30)" rx="2" ry="2" />
<text  x="566.64" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="194.8" y="101" width="0.3" height="15.0" fill="rgb(230,13,0)" rx="2" ry="2" />
<text  x="197.76" y="111.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.02%)</title><rect x="435.5" y="261" width="0.3" height="15.0" fill="rgb(248,190,33)" rx="2" ry="2" />
<text  x="438.53" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (40 samples, 0.09%)</title><rect x="930.8" y="405" width="1.0" height="15.0" fill="rgb(237,11,47)" rx="2" ry="2" />
<text  x="933.84" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="790.8" y="133" width="0.1" height="15.0" fill="rgb(237,132,20)" rx="2" ry="2" />
<text  x="793.79" y="143.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (334 samples, 0.71%)</title><rect x="714.0" y="437" width="8.4" height="15.0" fill="rgb(249,98,25)" rx="2" ry="2" />
<text  x="716.99" y="447.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="660.9" y="453" width="0.6" height="15.0" fill="rgb(207,206,47)" rx="2" ry="2" />
<text  x="663.94" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (66 samples, 0.14%)</title><rect x="1157.0" y="437" width="1.6" height="15.0" fill="rgb(212,170,15)" rx="2" ry="2" />
<text  x="1159.95" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="844.4" y="341" width="1.4" height="15.0" fill="rgb(233,173,39)" rx="2" ry="2" />
<text  x="847.44" y="351.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (4 samples, 0.01%)</title><rect x="360.7" y="197" width="0.1" height="15.0" fill="rgb(242,173,53)" rx="2" ry="2" />
<text  x="363.67" y="207.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (8 samples, 0.02%)</title><rect x="236.1" y="197" width="0.2" height="15.0" fill="rgb(218,139,28)" rx="2" ry="2" />
<text  x="239.14" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (421 samples, 0.90%)</title><rect x="676.4" y="501" width="10.6" height="15.0" fill="rgb(248,197,14)" rx="2" ry="2" />
<text  x="679.43" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (27 samples, 0.06%)</title><rect x="250.1" y="277" width="0.7" height="15.0" fill="rgb(225,221,21)" rx="2" ry="2" />
<text  x="253.10" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="544.9" y="389" width="0.7" height="15.0" fill="rgb(222,91,50)" rx="2" ry="2" />
<text  x="547.90" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="906.8" y="373" width="0.1" height="15.0" fill="rgb(219,66,31)" rx="2" ry="2" />
<text  x="909.81" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (14 samples, 0.03%)</title><rect x="223.1" y="213" width="0.3" height="15.0" fill="rgb(236,61,50)" rx="2" ry="2" />
<text  x="226.07" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="145.7" y="197" width="0.1" height="15.0" fill="rgb(209,56,33)" rx="2" ry="2" />
<text  x="148.69" y="207.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.01%)</title><rect x="291.5" y="261" width="0.2" height="15.0" fill="rgb(238,228,42)" rx="2" ry="2" />
<text  x="294.53" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (11 samples, 0.02%)</title><rect x="401.3" y="213" width="0.3" height="15.0" fill="rgb(245,225,28)" rx="2" ry="2" />
<text  x="404.30" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="134.4" y="277" width="0.1" height="15.0" fill="rgb(233,184,47)" rx="2" ry="2" />
<text  x="137.36" y="287.5" ></text>
</g>
<g >
<title>std::type_info::operator== (9 samples, 0.02%)</title><rect x="1173.9" y="405" width="0.3" height="15.0" fill="rgb(227,107,40)" rx="2" ry="2" />
<text  x="1176.93" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (19 samples, 0.04%)</title><rect x="421.8" y="357" width="0.5" height="15.0" fill="rgb(223,178,33)" rx="2" ry="2" />
<text  x="424.78" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (13 samples, 0.03%)</title><rect x="734.5" y="293" width="0.4" height="15.0" fill="rgb(211,22,51)" rx="2" ry="2" />
<text  x="737.54" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="624.2" y="469" width="0.1" height="15.0" fill="rgb(251,54,34)" rx="2" ry="2" />
<text  x="627.19" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (32 samples, 0.07%)</title><rect x="821.2" y="421" width="0.8" height="15.0" fill="rgb(246,54,54)" rx="2" ry="2" />
<text  x="824.24" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.01%)</title><rect x="1174.8" y="501" width="0.1" height="15.0" fill="rgb(210,148,28)" rx="2" ry="2" />
<text  x="1177.84" y="511.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (10 samples, 0.02%)</title><rect x="1002.5" y="293" width="0.3" height="15.0" fill="rgb(226,67,49)" rx="2" ry="2" />
<text  x="1005.55" y="303.5" ></text>
</g>
<g >
<title>database::find_schema (211 samples, 0.45%)</title><rect x="812.2" y="373" width="5.3" height="15.0" fill="rgb(215,119,5)" rx="2" ry="2" />
<text  x="815.17" y="383.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="915.8" y="373" width="0.2" height="15.0" fill="rgb(228,48,7)" rx="2" ry="2" />
<text  x="918.82" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="906.9" y="373" width="0.2" height="15.0" fill="rgb(206,177,45)" rx="2" ry="2" />
<text  x="909.93" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (92 samples, 0.20%)</title><rect x="124.1" y="261" width="2.3" height="15.0" fill="rgb(205,229,13)" rx="2" ry="2" />
<text  x="127.08" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (29 samples, 0.06%)</title><rect x="51.2" y="469" width="0.7" height="15.0" fill="rgb(206,12,12)" rx="2" ry="2" />
<text  x="54.18" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (6 samples, 0.01%)</title><rect x="495.7" y="261" width="0.2" height="15.0" fill="rgb(220,163,39)" rx="2" ry="2" />
<text  x="498.73" y="271.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (10 samples, 0.02%)</title><rect x="683.5" y="437" width="0.3" height="15.0" fill="rgb(207,111,35)" rx="2" ry="2" />
<text  x="686.51" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="622.0" y="469" width="0.2" height="15.0" fill="rgb(247,78,54)" rx="2" ry="2" />
<text  x="624.98" y="479.5" ></text>
</g>
<g >
<title>auth::resource::resource (98 samples, 0.21%)</title><rect x="758.7" y="389" width="2.5" height="15.0" fill="rgb(234,31,41)" rx="2" ry="2" />
<text  x="761.70" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="37.0" y="437" width="0.2" height="15.0" fill="rgb(246,14,4)" rx="2" ry="2" />
<text  x="40.03" y="447.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (70 samples, 0.15%)</title><rect x="767.2" y="325" width="1.8" height="15.0" fill="rgb(238,142,24)" rx="2" ry="2" />
<text  x="770.19" y="335.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (284 samples, 0.61%)</title><rect x="196.3" y="165" width="7.1" height="15.0" fill="rgb(214,163,52)" rx="2" ry="2" />
<text  x="199.29" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="1141.4" y="133" width="0.1" height="15.0" fill="rgb(218,17,10)" rx="2" ry="2" />
<text  x="1144.39" y="143.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (140 samples, 0.30%)</title><rect x="787.5" y="165" width="3.5" height="15.0" fill="rgb(228,110,1)" rx="2" ry="2" />
<text  x="790.51" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (24 samples, 0.05%)</title><rect x="1131.3" y="389" width="0.6" height="15.0" fill="rgb(223,206,20)" rx="2" ry="2" />
<text  x="1134.31" y="399.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (6 samples, 0.01%)</title><rect x="427.2" y="341" width="0.2" height="15.0" fill="rgb(223,178,23)" rx="2" ry="2" />
<text  x="430.25" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (25 samples, 0.05%)</title><rect x="951.2" y="357" width="0.7" height="15.0" fill="rgb(238,2,51)" rx="2" ry="2" />
<text  x="954.24" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="289.1" y="245" width="0.1" height="15.0" fill="rgb(252,99,50)" rx="2" ry="2" />
<text  x="292.06" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%)</title><rect x="60.9" y="405" width="0.2" height="15.0" fill="rgb(209,65,43)" rx="2" ry="2" />
<text  x="63.93" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (7 samples, 0.01%)</title><rect x="704.5" y="501" width="0.2" height="15.0" fill="rgb(245,2,32)" rx="2" ry="2" />
<text  x="707.49" y="511.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (7 samples, 0.01%)</title><rect x="235.2" y="165" width="0.1" height="15.0" fill="rgb(240,116,5)" rx="2" ry="2" />
<text  x="238.16" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="36.1" y="453" width="0.2" height="15.0" fill="rgb(218,79,11)" rx="2" ry="2" />
<text  x="39.12" y="463.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (4 samples, 0.01%)</title><rect x="977.7" y="357" width="0.1" height="15.0" fill="rgb(207,227,28)" rx="2" ry="2" />
<text  x="980.71" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,319 samples, 2.82%)</title><rect x="1012.9" y="277" width="33.2" height="15.0" fill="rgb(207,11,13)" rx="2" ry="2" />
<text  x="1015.90" y="287.5" >se..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="287.7" y="261" width="0.2" height="15.0" fill="rgb(207,211,23)" rx="2" ry="2" />
<text  x="290.68" y="271.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (6 samples, 0.01%)</title><rect x="19.0" y="293" width="0.1" height="15.0" fill="rgb(207,90,33)" rx="2" ry="2" />
<text  x="21.99" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%)</title><rect x="740.5" y="389" width="0.7" height="15.0" fill="rgb(222,106,32)" rx="2" ry="2" />
<text  x="743.54" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume (11 samples, 0.02%)</title><rect x="675.2" y="293" width="0.3" height="15.0" fill="rgb(231,25,50)" rx="2" ry="2" />
<text  x="678.23" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%)</title><rect x="875.6" y="405" width="0.1" height="15.0" fill="rgb(234,72,6)" rx="2" ry="2" />
<text  x="878.57" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (6 samples, 0.01%)</title><rect x="624.6" y="485" width="0.2" height="15.0" fill="rgb(216,55,24)" rx="2" ry="2" />
<text  x="627.65" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="774.9" y="277" width="0.1" height="15.0" fill="rgb(240,48,5)" rx="2" ry="2" />
<text  x="777.87" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (159 samples, 0.34%)</title><rect x="791.1" y="165" width="4.0" height="15.0" fill="rgb(216,14,8)" rx="2" ry="2" />
<text  x="794.09" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="935.9" y="357" width="0.5" height="15.0" fill="rgb(235,122,19)" rx="2" ry="2" />
<text  x="938.87" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1096.3" y="293" width="0.2" height="15.0" fill="rgb(239,87,54)" rx="2" ry="2" />
<text  x="1099.35" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (51 samples, 0.11%)</title><rect x="567.9" y="373" width="1.3" height="15.0" fill="rgb(214,16,46)" rx="2" ry="2" />
<text  x="570.95" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="261.3" y="309" width="0.2" height="15.0" fill="rgb(229,172,7)" rx="2" ry="2" />
<text  x="264.28" y="319.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (555 samples, 1.18%)</title><rect x="469.2" y="309" width="14.0" height="15.0" fill="rgb(253,63,4)" rx="2" ry="2" />
<text  x="472.21" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (21 samples, 0.04%)</title><rect x="282.5" y="373" width="0.5" height="15.0" fill="rgb(235,186,41)" rx="2" ry="2" />
<text  x="285.49" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (16 samples, 0.03%)</title><rect x="518.6" y="341" width="0.4" height="15.0" fill="rgb(220,83,2)" rx="2" ry="2" />
<text  x="521.58" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (6 samples, 0.01%)</title><rect x="683.9" y="469" width="0.2" height="15.0" fill="rgb(208,7,4)" rx="2" ry="2" />
<text  x="686.94" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (40 samples, 0.09%)</title><rect x="69.1" y="405" width="1.0" height="15.0" fill="rgb(228,110,32)" rx="2" ry="2" />
<text  x="72.12" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (540 samples, 1.15%)</title><rect x="882.5" y="325" width="13.6" height="15.0" fill="rgb(246,46,6)" rx="2" ry="2" />
<text  x="885.48" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="792.0" y="117" width="0.1" height="15.0" fill="rgb(205,165,44)" rx="2" ry="2" />
<text  x="795.05" y="127.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (101 samples, 0.22%)</title><rect x="357.8" y="165" width="2.5" height="15.0" fill="rgb(233,180,11)" rx="2" ry="2" />
<text  x="360.75" y="175.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="993.1" y="325" width="0.1" height="15.0" fill="rgb(236,225,16)" rx="2" ry="2" />
<text  x="996.08" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%)</title><rect x="1029.8" y="149" width="0.1" height="15.0" fill="rgb(212,103,0)" rx="2" ry="2" />
<text  x="1032.75" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="511.7" y="293" width="0.1" height="15.0" fill="rgb(218,46,44)" rx="2" ry="2" />
<text  x="514.70" y="303.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (72 samples, 0.15%)</title><rect x="890.6" y="261" width="1.8" height="15.0" fill="rgb(223,68,38)" rx="2" ry="2" />
<text  x="893.56" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="771.4" y="309" width="0.3" height="15.0" fill="rgb(230,172,52)" rx="2" ry="2" />
<text  x="774.44" y="319.5" ></text>
</g>
</g>
</svg>
