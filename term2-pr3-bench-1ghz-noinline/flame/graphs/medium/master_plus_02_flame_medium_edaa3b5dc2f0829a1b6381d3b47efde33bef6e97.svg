<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="1066.5" y="309" width="0.1" height="15.0" fill="rgb(219,3,5)" rx="2" ry="2" />
<text  x="1069.47" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (18 samples, 0.04%)</title><rect x="688.2" y="469" width="0.4" height="15.0" fill="rgb(220,69,44)" rx="2" ry="2" />
<text  x="691.20" y="479.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (53 samples, 0.11%)</title><rect x="327.6" y="181" width="1.3" height="15.0" fill="rgb(243,82,41)" rx="2" ry="2" />
<text  x="330.62" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="1157.3" y="421" width="0.4" height="15.0" fill="rgb(242,186,49)" rx="2" ry="2" />
<text  x="1160.26" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (353 samples, 0.73%)</title><rect x="392.5" y="245" width="8.6" height="15.0" fill="rgb(245,137,43)" rx="2" ry="2" />
<text  x="395.48" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (14 samples, 0.03%)</title><rect x="98.9" y="405" width="0.3" height="15.0" fill="rgb(226,43,27)" rx="2" ry="2" />
<text  x="101.88" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (89 samples, 0.18%)</title><rect x="1174.0" y="437" width="2.1" height="15.0" fill="rgb(234,43,14)" rx="2" ry="2" />
<text  x="1176.96" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="400.1" y="213" width="0.2" height="15.0" fill="rgb(243,97,2)" rx="2" ry="2" />
<text  x="403.14" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="1124.4" y="405" width="0.4" height="15.0" fill="rgb(240,188,3)" rx="2" ry="2" />
<text  x="1127.44" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="484.0" y="277" width="0.6" height="15.0" fill="rgb(214,32,28)" rx="2" ry="2" />
<text  x="487.02" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="894.4" y="261" width="0.3" height="15.0" fill="rgb(236,223,47)" rx="2" ry="2" />
<text  x="897.35" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="399.9" y="181" width="0.2" height="15.0" fill="rgb(219,76,26)" rx="2" ry="2" />
<text  x="402.92" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (47 samples, 0.10%)</title><rect x="788.5" y="213" width="1.2" height="15.0" fill="rgb(254,199,33)" rx="2" ry="2" />
<text  x="791.53" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (11 samples, 0.02%)</title><rect x="824.7" y="293" width="0.3" height="15.0" fill="rgb(207,226,22)" rx="2" ry="2" />
<text  x="827.71" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="284.0" y="357" width="0.4" height="15.0" fill="rgb(239,138,33)" rx="2" ry="2" />
<text  x="286.99" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="357" width="0.8" height="15.0" fill="rgb(205,133,12)" rx="2" ry="2" />
<text  x="1144.48" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;std::vector&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::allocator&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="852.0" y="421" width="0.1" height="15.0" fill="rgb(206,92,34)" rx="2" ry="2" />
<text  x="854.99" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="1030.2" y="165" width="0.2" height="15.0" fill="rgb(215,38,14)" rx="2" ry="2" />
<text  x="1033.21" y="175.5" ></text>
</g>
<g >
<title>row::row (22 samples, 0.05%)</title><rect x="250.5" y="197" width="0.5" height="15.0" fill="rgb(218,82,29)" rx="2" ry="2" />
<text  x="253.51" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%)</title><rect x="821.2" y="293" width="0.5" height="15.0" fill="rgb(249,210,22)" rx="2" ry="2" />
<text  x="824.22" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (23 samples, 0.05%)</title><rect x="583.2" y="389" width="0.5" height="15.0" fill="rgb(230,101,51)" rx="2" ry="2" />
<text  x="586.18" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="570.3" y="341" width="0.2" height="15.0" fill="rgb(228,130,36)" rx="2" ry="2" />
<text  x="573.31" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (285 samples, 0.59%)</title><rect x="624.5" y="501" width="6.9" height="15.0" fill="rgb(228,84,31)" rx="2" ry="2" />
<text  x="627.49" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (46 samples, 0.10%)</title><rect x="215.4" y="165" width="1.1" height="15.0" fill="rgb(222,131,26)" rx="2" ry="2" />
<text  x="218.38" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (114 samples, 0.24%)</title><rect x="609.9" y="405" width="2.7" height="15.0" fill="rgb(245,19,38)" rx="2" ry="2" />
<text  x="612.86" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="242.6" y="197" width="0.2" height="15.0" fill="rgb(219,4,7)" rx="2" ry="2" />
<text  x="245.65" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="784.8" y="229" width="0.2" height="15.0" fill="rgb(228,192,8)" rx="2" ry="2" />
<text  x="787.79" y="239.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="485.1" y="309" width="0.2" height="15.0" fill="rgb(207,5,14)" rx="2" ry="2" />
<text  x="488.14" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (32 samples, 0.07%)</title><rect x="72.2" y="373" width="0.8" height="15.0" fill="rgb(209,189,33)" rx="2" ry="2" />
<text  x="75.22" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (441 samples, 0.91%)</title><rect x="887.9" y="325" width="10.8" height="15.0" fill="rgb(242,170,2)" rx="2" ry="2" />
<text  x="890.93" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (543 samples, 1.12%)</title><rect x="234.1" y="245" width="13.2" height="15.0" fill="rgb(229,81,21)" rx="2" ry="2" />
<text  x="237.05" y="255.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="582.2" y="389" width="1.0" height="15.0" fill="rgb(211,153,53)" rx="2" ry="2" />
<text  x="585.20" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (9 samples, 0.02%)</title><rect x="329.4" y="165" width="0.2" height="15.0" fill="rgb(206,151,47)" rx="2" ry="2" />
<text  x="332.41" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (10 samples, 0.02%)</title><rect x="135.6" y="245" width="0.2" height="15.0" fill="rgb(226,0,11)" rx="2" ry="2" />
<text  x="138.58" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="544.0" y="421" width="0.2" height="15.0" fill="rgb(212,23,16)" rx="2" ry="2" />
<text  x="547.01" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (10 samples, 0.02%)</title><rect x="695.2" y="421" width="0.2" height="15.0" fill="rgb(230,139,13)" rx="2" ry="2" />
<text  x="698.20" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (148 samples, 0.31%)</title><rect x="401.5" y="261" width="3.6" height="15.0" fill="rgb(250,203,10)" rx="2" ry="2" />
<text  x="404.46" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (84 samples, 0.17%)</title><rect x="719.5" y="309" width="2.1" height="15.0" fill="rgb(235,86,10)" rx="2" ry="2" />
<text  x="722.55" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (5 samples, 0.01%)</title><rect x="906.8" y="357" width="0.1" height="15.0" fill="rgb(248,33,16)" rx="2" ry="2" />
<text  x="909.81" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="705.3" y="501" width="0.1" height="15.0" fill="rgb(212,196,33)" rx="2" ry="2" />
<text  x="708.26" y="511.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (29 samples, 0.06%)</title><rect x="595.2" y="405" width="0.7" height="15.0" fill="rgb(251,82,29)" rx="2" ry="2" />
<text  x="598.17" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (27 samples, 0.06%)</title><rect x="1108.0" y="405" width="0.7" height="15.0" fill="rgb(247,29,11)" rx="2" ry="2" />
<text  x="1111.03" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (5 samples, 0.01%)</title><rect x="979.4" y="357" width="0.1" height="15.0" fill="rgb(225,201,24)" rx="2" ry="2" />
<text  x="982.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (87 samples, 0.18%)</title><rect x="699.3" y="437" width="2.1" height="15.0" fill="rgb(240,183,7)" rx="2" ry="2" />
<text  x="702.28" y="447.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.18%)</title><rect x="540.5" y="341" width="2.2" height="15.0" fill="rgb(209,191,44)" rx="2" ry="2" />
<text  x="543.54" y="351.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (82 samples, 0.17%)</title><rect x="1134.7" y="405" width="2.0" height="15.0" fill="rgb(223,109,15)" rx="2" ry="2" />
<text  x="1137.69" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (13 samples, 0.03%)</title><rect x="443.9" y="261" width="0.3" height="15.0" fill="rgb(212,166,53)" rx="2" ry="2" />
<text  x="446.87" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (28 samples, 0.06%)</title><rect x="642.7" y="437" width="0.7" height="15.0" fill="rgb(240,49,5)" rx="2" ry="2" />
<text  x="645.68" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (214 samples, 0.44%)</title><rect x="735.0" y="357" width="5.2" height="15.0" fill="rgb(218,66,8)" rx="2" ry="2" />
<text  x="738.00" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (9 samples, 0.02%)</title><rect x="574.3" y="341" width="0.3" height="15.0" fill="rgb(244,97,45)" rx="2" ry="2" />
<text  x="577.34" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (10 samples, 0.02%)</title><rect x="211.2" y="133" width="0.3" height="15.0" fill="rgb(208,25,52)" rx="2" ry="2" />
<text  x="214.22" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (9 samples, 0.02%)</title><rect x="851.6" y="357" width="0.2" height="15.0" fill="rgb(237,96,13)" rx="2" ry="2" />
<text  x="854.60" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (72 samples, 0.15%)</title><rect x="149.9" y="213" width="1.7" height="15.0" fill="rgb(235,39,30)" rx="2" ry="2" />
<text  x="152.86" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="865.9" y="437" width="0.1" height="15.0" fill="rgb(235,131,49)" rx="2" ry="2" />
<text  x="868.86" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="746.1" y="389" width="1.0" height="15.0" fill="rgb(219,127,9)" rx="2" ry="2" />
<text  x="749.11" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (44 samples, 0.09%)</title><rect x="263.2" y="325" width="1.0" height="15.0" fill="rgb(228,208,8)" rx="2" ry="2" />
<text  x="266.16" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (17 samples, 0.04%)</title><rect x="1101.0" y="357" width="0.4" height="15.0" fill="rgb(223,206,23)" rx="2" ry="2" />
<text  x="1104.02" y="367.5" ></text>
</g>
<g >
<title>database::has_keyspace (117 samples, 0.24%)</title><rect x="843.1" y="405" width="2.9" height="15.0" fill="rgb(240,59,9)" rx="2" ry="2" />
<text  x="846.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (61 samples, 0.13%)</title><rect x="852.2" y="421" width="1.5" height="15.0" fill="rgb(219,207,51)" rx="2" ry="2" />
<text  x="855.18" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (61 samples, 0.13%)</title><rect x="907.2" y="341" width="1.5" height="15.0" fill="rgb(245,177,21)" rx="2" ry="2" />
<text  x="910.17" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (31 samples, 0.06%)</title><rect x="61.9" y="437" width="0.8" height="15.0" fill="rgb(211,71,7)" rx="2" ry="2" />
<text  x="64.94" y="447.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="610.2" y="389" width="0.8" height="15.0" fill="rgb(250,17,34)" rx="2" ry="2" />
<text  x="613.21" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (16 samples, 0.03%)</title><rect x="564.6" y="357" width="0.4" height="15.0" fill="rgb(248,176,39)" rx="2" ry="2" />
<text  x="567.59" y="367.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (11 samples, 0.02%)</title><rect x="744.3" y="389" width="0.3" height="15.0" fill="rgb(234,173,9)" rx="2" ry="2" />
<text  x="747.28" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (6 samples, 0.01%)</title><rect x="762.9" y="373" width="0.1" height="15.0" fill="rgb(237,221,42)" rx="2" ry="2" />
<text  x="765.89" y="383.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (20 samples, 0.04%)</title><rect x="1039.1" y="245" width="0.4" height="15.0" fill="rgb(249,118,1)" rx="2" ry="2" />
<text  x="1042.05" y="255.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (56 samples, 0.12%)</title><rect x="613.7" y="437" width="1.4" height="15.0" fill="rgb(215,166,26)" rx="2" ry="2" />
<text  x="616.72" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="821.0" y="261" width="0.1" height="15.0" fill="rgb(208,85,23)" rx="2" ry="2" />
<text  x="823.95" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (730 samples, 1.51%)</title><rect x="546.4" y="389" width="17.8" height="15.0" fill="rgb(224,136,26)" rx="2" ry="2" />
<text  x="549.38" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="454.9" y="293" width="0.2" height="15.0" fill="rgb(233,228,54)" rx="2" ry="2" />
<text  x="457.89" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (212 samples, 0.44%)</title><rect x="1089.7" y="277" width="5.2" height="15.0" fill="rgb(242,6,40)" rx="2" ry="2" />
<text  x="1092.72" y="287.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (7 samples, 0.01%)</title><rect x="743.9" y="405" width="0.2" height="15.0" fill="rgb(216,223,51)" rx="2" ry="2" />
<text  x="746.89" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (15 samples, 0.03%)</title><rect x="619.9" y="469" width="0.4" height="15.0" fill="rgb(241,126,13)" rx="2" ry="2" />
<text  x="622.92" y="479.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.02%)</title><rect x="12.2" y="581" width="0.2" height="15.0" fill="rgb(205,19,22)" rx="2" ry="2" />
<text  x="15.20" y="591.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="733.7" y="357" width="0.2" height="15.0" fill="rgb(220,119,42)" rx="2" ry="2" />
<text  x="736.71" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (85 samples, 0.18%)</title><rect x="131.7" y="261" width="2.1" height="15.0" fill="rgb(235,61,0)" rx="2" ry="2" />
<text  x="134.72" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="604.0" y="437" width="0.2" height="15.0" fill="rgb(210,152,29)" rx="2" ry="2" />
<text  x="607.03" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.8" y="261" width="0.3" height="15.0" fill="rgb(231,66,49)" rx="2" ry="2" />
<text  x="1145.80" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (40 samples, 0.08%)</title><rect x="121.5" y="309" width="1.0" height="15.0" fill="rgb(220,199,48)" rx="2" ry="2" />
<text  x="124.49" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (23 samples, 0.05%)</title><rect x="1178.0" y="485" width="0.6" height="15.0" fill="rgb(248,63,35)" rx="2" ry="2" />
<text  x="1181.04" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="138.9" y="261" width="0.1" height="15.0" fill="rgb(244,140,49)" rx="2" ry="2" />
<text  x="141.85" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (6 samples, 0.01%)</title><rect x="20.6" y="405" width="0.2" height="15.0" fill="rgb(241,139,53)" rx="2" ry="2" />
<text  x="23.62" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="528.0" y="341" width="0.6" height="15.0" fill="rgb(213,83,50)" rx="2" ry="2" />
<text  x="530.97" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (106 samples, 0.22%)</title><rect x="708.5" y="469" width="2.6" height="15.0" fill="rgb(234,111,38)" rx="2" ry="2" />
<text  x="711.46" y="479.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (16 samples, 0.03%)</title><rect x="437.4" y="277" width="0.4" height="15.0" fill="rgb(241,174,54)" rx="2" ry="2" />
<text  x="440.40" y="287.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,049 samples, 2.17%)</title><rect x="482.3" y="325" width="25.6" height="15.0" fill="rgb(248,61,13)" rx="2" ry="2" />
<text  x="485.31" y="335.5" >m..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="18.0" y="229" width="0.1" height="15.0" fill="rgb(250,215,23)" rx="2" ry="2" />
<text  x="20.96" y="239.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (52 samples, 0.11%)</title><rect x="926.2" y="357" width="1.3" height="15.0" fill="rgb(205,198,25)" rx="2" ry="2" />
<text  x="929.19" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="654.9" y="485" width="0.1" height="15.0" fill="rgb(227,96,42)" rx="2" ry="2" />
<text  x="657.91" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="761.1" y="325" width="0.1" height="15.0" fill="rgb(225,39,39)" rx="2" ry="2" />
<text  x="764.11" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (15 samples, 0.03%)</title><rect x="210.9" y="117" width="0.3" height="15.0" fill="rgb(239,87,24)" rx="2" ry="2" />
<text  x="213.86" y="127.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (18 samples, 0.04%)</title><rect x="139.7" y="261" width="0.4" height="15.0" fill="rgb(235,184,38)" rx="2" ry="2" />
<text  x="142.71" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (5 samples, 0.01%)</title><rect x="1137.9" y="421" width="0.1" height="15.0" fill="rgb(221,214,32)" rx="2" ry="2" />
<text  x="1140.92" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (6 samples, 0.01%)</title><rect x="687.9" y="469" width="0.1" height="15.0" fill="rgb(205,45,50)" rx="2" ry="2" />
<text  x="690.90" y="479.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (54 samples, 0.11%)</title><rect x="670.2" y="469" width="1.3" height="15.0" fill="rgb(252,163,43)" rx="2" ry="2" />
<text  x="673.20" y="479.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="663.5" y="469" width="0.4" height="15.0" fill="rgb(217,46,40)" rx="2" ry="2" />
<text  x="666.49" y="479.5" ></text>
</g>
<g >
<title>compound_type&lt; (6 samples, 0.01%)</title><rect x="538.2" y="341" width="0.2" height="15.0" fill="rgb(215,151,43)" rx="2" ry="2" />
<text  x="541.22" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="905.1" y="357" width="0.4" height="15.0" fill="rgb(218,41,52)" rx="2" ry="2" />
<text  x="908.10" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="680.3" y="469" width="0.2" height="15.0" fill="rgb(254,164,18)" rx="2" ry="2" />
<text  x="683.33" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (8 samples, 0.02%)</title><rect x="219.8" y="133" width="0.2" height="15.0" fill="rgb(236,150,39)" rx="2" ry="2" />
<text  x="222.77" y="143.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="754.1" y="309" width="0.1" height="15.0" fill="rgb(226,89,47)" rx="2" ry="2" />
<text  x="757.10" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (16 samples, 0.03%)</title><rect x="860.8" y="485" width="0.4" height="15.0" fill="rgb(206,193,45)" rx="2" ry="2" />
<text  x="863.83" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="635.5" y="485" width="0.2" height="15.0" fill="rgb(229,1,25)" rx="2" ry="2" />
<text  x="638.53" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (90 samples, 0.19%)</title><rect x="519.5" y="293" width="2.2" height="15.0" fill="rgb(223,107,49)" rx="2" ry="2" />
<text  x="522.50" y="303.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="50.6" y="469" width="0.3" height="15.0" fill="rgb(243,200,31)" rx="2" ry="2" />
<text  x="53.56" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (17 samples, 0.04%)</title><rect x="740.6" y="405" width="0.4" height="15.0" fill="rgb(241,176,38)" rx="2" ry="2" />
<text  x="743.62" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (32 samples, 0.07%)</title><rect x="296.2" y="245" width="0.8" height="15.0" fill="rgb(247,31,34)" rx="2" ry="2" />
<text  x="299.20" y="255.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (9 samples, 0.02%)</title><rect x="813.8" y="277" width="0.2" height="15.0" fill="rgb(244,72,35)" rx="2" ry="2" />
<text  x="816.80" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (14 samples, 0.03%)</title><rect x="367.5" y="197" width="0.4" height="15.0" fill="rgb(217,14,28)" rx="2" ry="2" />
<text  x="370.52" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1100.5" y="341" width="0.4" height="15.0" fill="rgb(239,119,10)" rx="2" ry="2" />
<text  x="1103.53" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1106.4" y="373" width="0.1" height="15.0" fill="rgb(223,105,39)" rx="2" ry="2" />
<text  x="1109.42" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (83 samples, 0.17%)</title><rect x="642.2" y="453" width="2.0" height="15.0" fill="rgb(240,126,19)" rx="2" ry="2" />
<text  x="645.17" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (11 samples, 0.02%)</title><rect x="506.9" y="293" width="0.3" height="15.0" fill="rgb(213,34,12)" rx="2" ry="2" />
<text  x="509.94" y="303.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="770.8" y="309" width="0.4" height="15.0" fill="rgb(214,165,17)" rx="2" ry="2" />
<text  x="773.75" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (402 samples, 0.83%)</title><rect x="1069.5" y="341" width="9.8" height="15.0" fill="rgb(245,29,25)" rx="2" ry="2" />
<text  x="1072.48" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (19 samples, 0.04%)</title><rect x="789.2" y="165" width="0.4" height="15.0" fill="rgb(236,175,47)" rx="2" ry="2" />
<text  x="792.16" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (295 samples, 0.61%)</title><rect x="252.9" y="309" width="7.2" height="15.0" fill="rgb(218,6,3)" rx="2" ry="2" />
<text  x="255.93" y="319.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (321 samples, 0.66%)</title><rect x="374.5" y="165" width="7.8" height="15.0" fill="rgb(234,224,28)" rx="2" ry="2" />
<text  x="377.46" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (11 samples, 0.02%)</title><rect x="957.2" y="405" width="0.2" height="15.0" fill="rgb(234,5,6)" rx="2" ry="2" />
<text  x="960.15" y="415.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (8 samples, 0.02%)</title><rect x="908.9" y="373" width="0.2" height="15.0" fill="rgb(240,56,29)" rx="2" ry="2" />
<text  x="911.93" y="383.5" ></text>
</g>
<g >
<title>operator delete (76 samples, 0.16%)</title><rect x="401.7" y="245" width="1.9" height="15.0" fill="rgb(205,50,1)" rx="2" ry="2" />
<text  x="404.73" y="255.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.05%)</title><rect x="355.9" y="149" width="0.5" height="15.0" fill="rgb(208,48,37)" rx="2" ry="2" />
<text  x="358.87" y="159.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (52 samples, 0.11%)</title><rect x="1114.9" y="373" width="1.3" height="15.0" fill="rgb(232,193,54)" rx="2" ry="2" />
<text  x="1117.89" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="775.3" y="325" width="0.1" height="15.0" fill="rgb(207,163,17)" rx="2" ry="2" />
<text  x="778.27" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="1140.2" y="421" width="0.2" height="15.0" fill="rgb(218,184,19)" rx="2" ry="2" />
<text  x="1143.16" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%)</title><rect x="1160.3" y="373" width="0.9" height="15.0" fill="rgb(213,125,27)" rx="2" ry="2" />
<text  x="1163.33" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="652.4" y="485" width="0.5" height="15.0" fill="rgb(217,53,7)" rx="2" ry="2" />
<text  x="655.40" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (13 samples, 0.03%)</title><rect x="881.9" y="389" width="0.3" height="15.0" fill="rgb(220,215,28)" rx="2" ry="2" />
<text  x="884.85" y="399.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (14 samples, 0.03%)</title><rect x="649.3" y="437" width="0.3" height="15.0" fill="rgb(243,145,28)" rx="2" ry="2" />
<text  x="652.25" y="447.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (52 samples, 0.11%)</title><rect x="356.4" y="149" width="1.3" height="15.0" fill="rgb(224,108,11)" rx="2" ry="2" />
<text  x="359.41" y="159.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (20 samples, 0.04%)</title><rect x="125.8" y="261" width="0.5" height="15.0" fill="rgb(244,132,11)" rx="2" ry="2" />
<text  x="128.79" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%)</title><rect x="506.6" y="277" width="0.3" height="15.0" fill="rgb(209,43,4)" rx="2" ry="2" />
<text  x="509.63" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (6 samples, 0.01%)</title><rect x="251.8" y="261" width="0.2" height="15.0" fill="rgb(221,115,32)" rx="2" ry="2" />
<text  x="254.83" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="133.3" y="229" width="0.1" height="15.0" fill="rgb(226,168,41)" rx="2" ry="2" />
<text  x="136.31" y="239.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (29 samples, 0.06%)</title><rect x="1041.6" y="261" width="0.7" height="15.0" fill="rgb(211,168,4)" rx="2" ry="2" />
<text  x="1044.57" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (7 samples, 0.01%)</title><rect x="218.1" y="149" width="0.2" height="15.0" fill="rgb(206,104,45)" rx="2" ry="2" />
<text  x="221.09" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (424 samples, 0.88%)</title><rect x="888.3" y="309" width="10.4" height="15.0" fill="rgb(218,141,41)" rx="2" ry="2" />
<text  x="891.35" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="896.6" y="277" width="0.4" height="15.0" fill="rgb(222,11,5)" rx="2" ry="2" />
<text  x="899.60" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="439.7" y="293" width="0.2" height="15.0" fill="rgb(230,219,52)" rx="2" ry="2" />
<text  x="442.75" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (5 samples, 0.01%)</title><rect x="452.1" y="325" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="455.05" y="335.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (352 samples, 0.73%)</title><rect x="470.1" y="261" width="8.6" height="15.0" fill="rgb(217,158,53)" rx="2" ry="2" />
<text  x="473.10" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (30 samples, 0.06%)</title><rect x="1057.4" y="341" width="0.8" height="15.0" fill="rgb(220,228,38)" rx="2" ry="2" />
<text  x="1060.44" y="351.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (59 samples, 0.12%)</title><rect x="1166.0" y="469" width="1.5" height="15.0" fill="rgb(239,87,19)" rx="2" ry="2" />
<text  x="1169.02" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.01%)</title><rect x="525.9" y="261" width="0.2" height="15.0" fill="rgb(215,55,20)" rx="2" ry="2" />
<text  x="528.94" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (7 samples, 0.01%)</title><rect x="827.3" y="389" width="0.1" height="15.0" fill="rgb(251,1,28)" rx="2" ry="2" />
<text  x="830.25" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (298 samples, 0.62%)</title><rect x="471.4" y="229" width="7.3" height="15.0" fill="rgb(235,62,19)" rx="2" ry="2" />
<text  x="474.42" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="709.5" y="405" width="1.1" height="15.0" fill="rgb(245,7,31)" rx="2" ry="2" />
<text  x="712.46" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (12 samples, 0.02%)</title><rect x="448.0" y="325" width="0.3" height="15.0" fill="rgb(232,8,35)" rx="2" ry="2" />
<text  x="451.00" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (9 samples, 0.02%)</title><rect x="304.3" y="197" width="0.2" height="15.0" fill="rgb(254,19,27)" rx="2" ry="2" />
<text  x="307.28" y="207.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (8 samples, 0.02%)</title><rect x="412.0" y="341" width="0.2" height="15.0" fill="rgb(230,47,33)" rx="2" ry="2" />
<text  x="415.03" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (13 samples, 0.03%)</title><rect x="698.6" y="453" width="0.4" height="15.0" fill="rgb(240,188,39)" rx="2" ry="2" />
<text  x="701.65" y="463.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (70 samples, 0.14%)</title><rect x="537.1" y="389" width="1.8" height="15.0" fill="rgb(211,226,22)" rx="2" ry="2" />
<text  x="540.15" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (277 samples, 0.57%)</title><rect x="536.4" y="405" width="6.8" height="15.0" fill="rgb(245,228,18)" rx="2" ry="2" />
<text  x="539.42" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (33 samples, 0.07%)</title><rect x="1131.9" y="389" width="0.8" height="15.0" fill="rgb(235,59,45)" rx="2" ry="2" />
<text  x="1134.91" y="399.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="941.5" y="373" width="1.1" height="15.0" fill="rgb(241,62,12)" rx="2" ry="2" />
<text  x="944.50" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (221 samples, 0.46%)</title><rect x="1072.9" y="325" width="5.4" height="15.0" fill="rgb(222,209,46)" rx="2" ry="2" />
<text  x="1075.92" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (17 samples, 0.04%)</title><rect x="314.6" y="165" width="0.4" height="15.0" fill="rgb(212,160,27)" rx="2" ry="2" />
<text  x="317.56" y="175.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (8 samples, 0.02%)</title><rect x="585.5" y="405" width="0.2" height="15.0" fill="rgb(231,14,19)" rx="2" ry="2" />
<text  x="588.50" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (26 samples, 0.05%)</title><rect x="733.6" y="373" width="0.7" height="15.0" fill="rgb(253,17,21)" rx="2" ry="2" />
<text  x="736.64" y="383.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (110 samples, 0.23%)</title><rect x="901.2" y="341" width="2.7" height="15.0" fill="rgb(216,219,31)" rx="2" ry="2" />
<text  x="904.24" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="945.6" y="389" width="0.2" height="15.0" fill="rgb(227,183,28)" rx="2" ry="2" />
<text  x="948.61" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="21.8" y="517" width="0.3" height="15.0" fill="rgb(233,8,17)" rx="2" ry="2" />
<text  x="24.82" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1145.8" y="501" width="0.2" height="15.0" fill="rgb(246,20,27)" rx="2" ry="2" />
<text  x="1148.83" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (5 samples, 0.01%)</title><rect x="434.4" y="261" width="0.1" height="15.0" fill="rgb(228,186,27)" rx="2" ry="2" />
<text  x="437.40" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (74 samples, 0.15%)</title><rect x="295.3" y="277" width="1.8" height="15.0" fill="rgb(224,137,45)" rx="2" ry="2" />
<text  x="298.27" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (30 samples, 0.06%)</title><rect x="1029.3" y="149" width="0.7" height="15.0" fill="rgb(243,151,40)" rx="2" ry="2" />
<text  x="1032.31" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.02%)</title><rect x="664.0" y="469" width="0.3" height="15.0" fill="rgb(238,94,40)" rx="2" ry="2" />
<text  x="667.00" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (62 samples, 0.13%)</title><rect x="237.7" y="181" width="1.5" height="15.0" fill="rgb(220,18,8)" rx="2" ry="2" />
<text  x="240.69" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="437.9" y="277" width="0.4" height="15.0" fill="rgb(220,11,48)" rx="2" ry="2" />
<text  x="440.89" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="327.8" y="165" width="0.1" height="15.0" fill="rgb(238,31,35)" rx="2" ry="2" />
<text  x="330.77" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (6 samples, 0.01%)</title><rect x="245.6" y="181" width="0.2" height="15.0" fill="rgb(208,83,33)" rx="2" ry="2" />
<text  x="248.60" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1047.6" y="245" width="0.1" height="15.0" fill="rgb(216,191,2)" rx="2" ry="2" />
<text  x="1050.57" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (73 samples, 0.15%)</title><rect x="38.7" y="469" width="1.8" height="15.0" fill="rgb(217,101,10)" rx="2" ry="2" />
<text  x="41.69" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (10 samples, 0.02%)</title><rect x="686.3" y="469" width="0.2" height="15.0" fill="rgb(232,112,50)" rx="2" ry="2" />
<text  x="689.29" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="908.4" y="293" width="0.3" height="15.0" fill="rgb(247,57,34)" rx="2" ry="2" />
<text  x="911.44" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (11 samples, 0.02%)</title><rect x="518.5" y="309" width="0.2" height="15.0" fill="rgb(216,134,41)" rx="2" ry="2" />
<text  x="521.47" y="319.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (323 samples, 0.67%)</title><rect x="470.8" y="245" width="7.9" height="15.0" fill="rgb(223,112,45)" rx="2" ry="2" />
<text  x="473.81" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1040.8" y="261" width="0.1" height="15.0" fill="rgb(222,124,34)" rx="2" ry="2" />
<text  x="1043.76" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (93 samples, 0.19%)</title><rect x="475.0" y="197" width="2.2" height="15.0" fill="rgb(239,37,36)" rx="2" ry="2" />
<text  x="477.96" y="207.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1107.3" y="373" width="0.2" height="15.0" fill="rgb(214,79,36)" rx="2" ry="2" />
<text  x="1110.32" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (50 samples, 0.10%)</title><rect x="1167.5" y="469" width="1.2" height="15.0" fill="rgb(219,226,20)" rx="2" ry="2" />
<text  x="1170.46" y="479.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (18 samples, 0.04%)</title><rect x="457.4" y="277" width="0.4" height="15.0" fill="rgb(242,39,47)" rx="2" ry="2" />
<text  x="460.40" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="1158.8" y="453" width="0.2" height="15.0" fill="rgb(251,105,28)" rx="2" ry="2" />
<text  x="1161.82" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (11 samples, 0.02%)</title><rect x="498.8" y="197" width="0.3" height="15.0" fill="rgb(244,75,39)" rx="2" ry="2" />
<text  x="501.84" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="409.0" y="261" width="0.1" height="15.0" fill="rgb(254,160,52)" rx="2" ry="2" />
<text  x="412.01" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (7 samples, 0.01%)</title><rect x="804.0" y="245" width="0.1" height="15.0" fill="rgb(252,172,44)" rx="2" ry="2" />
<text  x="806.96" y="255.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (5 samples, 0.01%)</title><rect x="1065.4" y="293" width="0.1" height="15.0" fill="rgb(242,80,27)" rx="2" ry="2" />
<text  x="1068.40" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (26 samples, 0.05%)</title><rect x="684.5" y="437" width="0.6" height="15.0" fill="rgb(233,120,26)" rx="2" ry="2" />
<text  x="687.51" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="784.2" y="229" width="0.1" height="15.0" fill="rgb(229,10,49)" rx="2" ry="2" />
<text  x="787.16" y="239.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="902.4" y="293" width="0.8" height="15.0" fill="rgb(251,96,39)" rx="2" ry="2" />
<text  x="905.44" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (744 samples, 1.54%)</title><rect x="488.8" y="293" width="18.1" height="15.0" fill="rgb(210,218,46)" rx="2" ry="2" />
<text  x="491.78" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,398 samples, 7.03%)</title><rect x="304.9" y="245" width="82.9" height="15.0" fill="rgb(230,157,12)" rx="2" ry="2" />
<text  x="307.87" y="255.5" >flat_muta..</text>
</g>
<g >
<title>operator new (46 samples, 0.10%)</title><rect x="1161.6" y="437" width="1.1" height="15.0" fill="rgb(207,209,29)" rx="2" ry="2" />
<text  x="1164.60" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (25 samples, 0.05%)</title><rect x="619.7" y="485" width="0.6" height="15.0" fill="rgb(253,126,45)" rx="2" ry="2" />
<text  x="622.68" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="737.1" y="309" width="0.4" height="15.0" fill="rgb(205,148,18)" rx="2" ry="2" />
<text  x="740.08" y="319.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (19 samples, 0.04%)</title><rect x="739.5" y="261" width="0.5" height="15.0" fill="rgb(213,39,31)" rx="2" ry="2" />
<text  x="742.55" y="271.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="1157.3" y="437" width="0.4" height="15.0" fill="rgb(239,16,1)" rx="2" ry="2" />
<text  x="1160.26" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (82 samples, 0.17%)</title><rect x="169.7" y="133" width="2.0" height="15.0" fill="rgb(214,14,23)" rx="2" ry="2" />
<text  x="172.67" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%)</title><rect x="484.6" y="309" width="0.4" height="15.0" fill="rgb(214,209,49)" rx="2" ry="2" />
<text  x="487.63" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (11 samples, 0.02%)</title><rect x="727.6" y="389" width="0.3" height="15.0" fill="rgb(212,152,17)" rx="2" ry="2" />
<text  x="730.61" y="399.5" ></text>
</g>
<g >
<title>std::type_info::operator== (8 samples, 0.02%)</title><rect x="1075.9" y="277" width="0.2" height="15.0" fill="rgb(247,92,46)" rx="2" ry="2" />
<text  x="1078.90" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (27 samples, 0.06%)</title><rect x="925.5" y="357" width="0.7" height="15.0" fill="rgb(234,6,36)" rx="2" ry="2" />
<text  x="928.53" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (13 samples, 0.03%)</title><rect x="599.1" y="437" width="0.4" height="15.0" fill="rgb(228,27,43)" rx="2" ry="2" />
<text  x="602.15" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (9 samples, 0.02%)</title><rect x="19.0" y="277" width="0.2" height="15.0" fill="rgb(208,108,3)" rx="2" ry="2" />
<text  x="22.01" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="228.6" y="181" width="0.2" height="15.0" fill="rgb(213,8,34)" rx="2" ry="2" />
<text  x="231.56" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.01%)</title><rect x="15.8" y="261" width="0.2" height="15.0" fill="rgb(252,79,36)" rx="2" ry="2" />
<text  x="18.84" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (22 samples, 0.05%)</title><rect x="442.0" y="277" width="0.5" height="15.0" fill="rgb(244,126,17)" rx="2" ry="2" />
<text  x="444.97" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (11 samples, 0.02%)</title><rect x="314.3" y="165" width="0.3" height="15.0" fill="rgb(254,74,6)" rx="2" ry="2" />
<text  x="317.29" y="175.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (236 samples, 0.49%)</title><rect x="254.0" y="293" width="5.8" height="15.0" fill="rgb(206,177,46)" rx="2" ry="2" />
<text  x="257.00" y="303.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (189 samples, 0.39%)</title><rect x="717.3" y="389" width="4.6" height="15.0" fill="rgb(220,105,33)" rx="2" ry="2" />
<text  x="720.28" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="788.3" y="213" width="0.1" height="15.0" fill="rgb(226,177,39)" rx="2" ry="2" />
<text  x="791.26" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (55 samples, 0.11%)</title><rect x="730.8" y="325" width="1.3" height="15.0" fill="rgb(218,162,34)" rx="2" ry="2" />
<text  x="733.76" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1041.0" y="261" width="0.2" height="15.0" fill="rgb(208,122,40)" rx="2" ry="2" />
<text  x="1044.03" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5 samples, 0.01%)</title><rect x="116.4" y="357" width="0.1" height="15.0" fill="rgb(232,36,16)" rx="2" ry="2" />
<text  x="119.39" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (46 samples, 0.10%)</title><rect x="491.9" y="261" width="1.2" height="15.0" fill="rgb(215,144,31)" rx="2" ry="2" />
<text  x="494.93" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="1127.1" y="405" width="0.3" height="15.0" fill="rgb(223,70,38)" rx="2" ry="2" />
<text  x="1130.15" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,677 samples, 48.99%)</title><rect x="46.1" y="501" width="578.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="49.14" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (52 samples, 0.11%)</title><rect x="18.1" y="325" width="1.3" height="15.0" fill="rgb(209,192,28)" rx="2" ry="2" />
<text  x="21.11" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (12 samples, 0.02%)</title><rect x="627.9" y="485" width="0.3" height="15.0" fill="rgb(242,82,24)" rx="2" ry="2" />
<text  x="630.88" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="897.6" y="277" width="0.4" height="15.0" fill="rgb(210,50,24)" rx="2" ry="2" />
<text  x="900.65" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.02%)</title><rect x="400.8" y="213" width="0.2" height="15.0" fill="rgb(205,217,45)" rx="2" ry="2" />
<text  x="403.75" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1120.6" y="357" width="0.1" height="15.0" fill="rgb(252,100,44)" rx="2" ry="2" />
<text  x="1123.58" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="1130.1" y="373" width="0.5" height="15.0" fill="rgb(228,103,16)" rx="2" ry="2" />
<text  x="1133.08" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (14 samples, 0.03%)</title><rect x="701.5" y="453" width="0.3" height="15.0" fill="rgb(231,9,52)" rx="2" ry="2" />
<text  x="704.45" y="463.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (11 samples, 0.02%)</title><rect x="1165.2" y="453" width="0.2" height="15.0" fill="rgb(215,207,40)" rx="2" ry="2" />
<text  x="1168.17" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (13 samples, 0.03%)</title><rect x="676.4" y="453" width="0.3" height="15.0" fill="rgb(249,228,9)" rx="2" ry="2" />
<text  x="679.43" y="463.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (10 samples, 0.02%)</title><rect x="809.7" y="341" width="0.2" height="15.0" fill="rgb(221,39,32)" rx="2" ry="2" />
<text  x="812.70" y="351.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (204 samples, 0.42%)</title><rect x="352.7" y="165" width="5.0" height="15.0" fill="rgb(244,196,12)" rx="2" ry="2" />
<text  x="355.70" y="175.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="499.1" y="197" width="0.5" height="15.0" fill="rgb(242,63,16)" rx="2" ry="2" />
<text  x="502.11" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%)</title><rect x="1151.2" y="485" width="0.2" height="15.0" fill="rgb(218,149,45)" rx="2" ry="2" />
<text  x="1154.23" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,474 samples, 5.12%)</title><rect x="992.8" y="341" width="60.4" height="15.0" fill="rgb(234,83,49)" rx="2" ry="2" />
<text  x="995.76" y="351.5" >servic..</text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (48 samples, 0.10%)</title><rect x="841.2" y="421" width="1.2" height="15.0" fill="rgb(238,197,28)" rx="2" ry="2" />
<text  x="844.24" y="431.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (6 samples, 0.01%)</title><rect x="810.1" y="357" width="0.2" height="15.0" fill="rgb(248,52,2)" rx="2" ry="2" />
<text  x="813.11" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (38 samples, 0.08%)</title><rect x="1116.2" y="373" width="0.9" height="15.0" fill="rgb(209,166,13)" rx="2" ry="2" />
<text  x="1119.16" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (492 samples, 1.02%)</title><rect x="271.5" y="341" width="12.0" height="15.0" fill="rgb(231,209,50)" rx="2" ry="2" />
<text  x="274.54" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (205 samples, 0.42%)</title><rect x="15.4" y="469" width="5.1" height="15.0" fill="rgb(229,29,41)" rx="2" ry="2" />
<text  x="18.45" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (5 samples, 0.01%)</title><rect x="401.3" y="261" width="0.2" height="15.0" fill="rgb(209,87,23)" rx="2" ry="2" />
<text  x="404.34" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (16 samples, 0.03%)</title><rect x="683.4" y="453" width="0.4" height="15.0" fill="rgb(253,11,0)" rx="2" ry="2" />
<text  x="686.39" y="463.5" ></text>
</g>
<g >
<title>operator new (150 samples, 0.31%)</title><rect x="1007.8" y="277" width="3.6" height="15.0" fill="rgb(224,43,6)" rx="2" ry="2" />
<text  x="1010.77" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (16 samples, 0.03%)</title><rect x="1178.1" y="453" width="0.4" height="15.0" fill="rgb(248,153,43)" rx="2" ry="2" />
<text  x="1181.11" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (28 samples, 0.06%)</title><rect x="1127.5" y="421" width="0.7" height="15.0" fill="rgb(215,173,52)" rx="2" ry="2" />
<text  x="1130.54" y="431.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="448.4" y="325" width="0.7" height="15.0" fill="rgb(212,145,35)" rx="2" ry="2" />
<text  x="451.39" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (57 samples, 0.12%)</title><rect x="224.9" y="165" width="1.4" height="15.0" fill="rgb(243,66,40)" rx="2" ry="2" />
<text  x="227.90" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="1132.3" y="373" width="0.4" height="15.0" fill="rgb(230,221,3)" rx="2" ry="2" />
<text  x="1135.25" y="383.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (606 samples, 1.25%)</title><rect x="126.6" y="293" width="14.8" height="15.0" fill="rgb(232,181,51)" rx="2" ry="2" />
<text  x="129.62" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (17 samples, 0.04%)</title><rect x="400.3" y="213" width="0.5" height="15.0" fill="rgb(220,42,27)" rx="2" ry="2" />
<text  x="403.34" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (11 samples, 0.02%)</title><rect x="193.9" y="53" width="0.2" height="15.0" fill="rgb(209,61,6)" rx="2" ry="2" />
<text  x="196.86" y="63.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%)</title><rect x="232.7" y="245" width="0.3" height="15.0" fill="rgb(211,227,32)" rx="2" ry="2" />
<text  x="235.69" y="255.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="634.9" y="485" width="0.6" height="15.0" fill="rgb(207,155,35)" rx="2" ry="2" />
<text  x="637.92" y="495.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (12 samples, 0.02%)</title><rect x="218.6" y="117" width="0.3" height="15.0" fill="rgb(216,9,27)" rx="2" ry="2" />
<text  x="221.60" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="538.4" y="341" width="0.2" height="15.0" fill="rgb(206,85,47)" rx="2" ry="2" />
<text  x="541.37" y="351.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (15 samples, 0.03%)</title><rect x="848.2" y="389" width="0.4" height="15.0" fill="rgb(241,129,36)" rx="2" ry="2" />
<text  x="851.20" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (93 samples, 0.19%)</title><rect x="467.8" y="261" width="2.3" height="15.0" fill="rgb(228,180,41)" rx="2" ry="2" />
<text  x="470.83" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (15 samples, 0.03%)</title><rect x="884.6" y="341" width="0.4" height="15.0" fill="rgb(222,43,1)" rx="2" ry="2" />
<text  x="887.59" y="351.5" ></text>
</g>
<g >
<title>database::has_keyspace (146 samples, 0.30%)</title><rect x="836.0" y="421" width="3.5" height="15.0" fill="rgb(234,22,28)" rx="2" ry="2" />
<text  x="838.97" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,889 samples, 10.12%)</title><rect x="291.2" y="357" width="119.4" height="15.0" fill="rgb(221,130,48)" rx="2" ry="2" />
<text  x="294.19" y="367.5" >flat_mutation_..</text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (30 samples, 0.06%)</title><rect x="332.1" y="181" width="0.7" height="15.0" fill="rgb(254,44,43)" rx="2" ry="2" />
<text  x="335.09" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%)</title><rect x="677.4" y="485" width="0.3" height="15.0" fill="rgb(217,183,23)" rx="2" ry="2" />
<text  x="680.38" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="532.9" y="389" width="0.3" height="15.0" fill="rgb(215,33,54)" rx="2" ry="2" />
<text  x="535.93" y="399.5" ></text>
</g>
<g >
<title>tracing::add_table_name (28 samples, 0.06%)</title><rect x="1139.3" y="421" width="0.7" height="15.0" fill="rgb(253,63,28)" rx="2" ry="2" />
<text  x="1142.28" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (36 samples, 0.07%)</title><rect x="834.5" y="421" width="0.9" height="15.0" fill="rgb(218,37,53)" rx="2" ry="2" />
<text  x="837.51" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (232 samples, 0.48%)</title><rect x="205.6" y="133" width="5.6" height="15.0" fill="rgb(212,67,10)" rx="2" ry="2" />
<text  x="208.56" y="143.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (20 samples, 0.04%)</title><rect x="309.8" y="165" width="0.5" height="15.0" fill="rgb(222,186,22)" rx="2" ry="2" />
<text  x="312.85" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%)</title><rect x="1142.4" y="453" width="0.8" height="15.0" fill="rgb(226,89,41)" rx="2" ry="2" />
<text  x="1145.36" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (62 samples, 0.13%)</title><rect x="800.1" y="245" width="1.5" height="15.0" fill="rgb(209,153,2)" rx="2" ry="2" />
<text  x="803.10" y="255.5" ></text>
</g>
<g >
<title>schema::get_sharder (9 samples, 0.02%)</title><rect x="1011.4" y="277" width="0.3" height="15.0" fill="rgb(246,166,18)" rx="2" ry="2" />
<text  x="1014.43" y="287.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (136 samples, 0.28%)</title><rect x="920.3" y="341" width="3.3" height="15.0" fill="rgb(225,223,8)" rx="2" ry="2" />
<text  x="923.26" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="678.3" y="389" width="0.6" height="15.0" fill="rgb(254,155,5)" rx="2" ry="2" />
<text  x="681.26" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (13 samples, 0.03%)</title><rect x="542.8" y="389" width="0.4" height="15.0" fill="rgb(220,55,42)" rx="2" ry="2" />
<text  x="545.84" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="980.0" y="357" width="0.1" height="15.0" fill="rgb(246,57,24)" rx="2" ry="2" />
<text  x="982.96" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (11 samples, 0.02%)</title><rect x="845.4" y="341" width="0.3" height="15.0" fill="rgb(249,213,8)" rx="2" ry="2" />
<text  x="848.40" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="845.1" y="325" width="0.1" height="15.0" fill="rgb(235,18,19)" rx="2" ry="2" />
<text  x="848.13" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="473.2" y="181" width="0.2" height="15.0" fill="rgb(245,161,38)" rx="2" ry="2" />
<text  x="476.22" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (6 samples, 0.01%)</title><rect x="794.3" y="149" width="0.2" height="15.0" fill="rgb(229,227,21)" rx="2" ry="2" />
<text  x="797.34" y="159.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%)</title><rect x="679.5" y="485" width="1.0" height="15.0" fill="rgb(218,44,38)" rx="2" ry="2" />
<text  x="682.50" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="932.6" y="357" width="0.1" height="15.0" fill="rgb(234,40,15)" rx="2" ry="2" />
<text  x="935.57" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (82 samples, 0.17%)</title><rect x="377.8" y="149" width="2.0" height="15.0" fill="rgb(223,175,5)" rx="2" ry="2" />
<text  x="380.75" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (9 samples, 0.02%)</title><rect x="576.0" y="389" width="0.2" height="15.0" fill="rgb(219,113,24)" rx="2" ry="2" />
<text  x="578.97" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (27 samples, 0.06%)</title><rect x="241.4" y="181" width="0.7" height="15.0" fill="rgb(246,3,39)" rx="2" ry="2" />
<text  x="244.43" y="191.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%)</title><rect x="387.2" y="229" width="0.1" height="15.0" fill="rgb(233,5,13)" rx="2" ry="2" />
<text  x="390.23" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (15 samples, 0.03%)</title><rect x="415.0" y="373" width="0.4" height="15.0" fill="rgb(231,226,10)" rx="2" ry="2" />
<text  x="417.99" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%)</title><rect x="143.5" y="261" width="0.1" height="15.0" fill="rgb(215,211,36)" rx="2" ry="2" />
<text  x="146.51" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (119 samples, 0.25%)</title><rect x="641.6" y="469" width="2.9" height="15.0" fill="rgb(252,24,53)" rx="2" ry="2" />
<text  x="644.63" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::consume (6 samples, 0.01%)</title><rect x="18.0" y="293" width="0.1" height="15.0" fill="rgb(242,76,35)" rx="2" ry="2" />
<text  x="20.96" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (17 samples, 0.04%)</title><rect x="67.0" y="389" width="0.5" height="15.0" fill="rgb(247,198,27)" rx="2" ry="2" />
<text  x="70.04" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (95 samples, 0.20%)</title><rect x="985.3" y="309" width="2.3" height="15.0" fill="rgb(243,69,42)" rx="2" ry="2" />
<text  x="988.28" y="319.5" ></text>
</g>
<g >
<title>__tls_init (17 samples, 0.04%)</title><rect x="492.1" y="245" width="0.4" height="15.0" fill="rgb(235,12,8)" rx="2" ry="2" />
<text  x="495.10" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.04%)</title><rect x="643.0" y="421" width="0.4" height="15.0" fill="rgb(246,73,9)" rx="2" ry="2" />
<text  x="645.95" y="431.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (44 samples, 0.09%)</title><rect x="670.4" y="453" width="1.1" height="15.0" fill="rgb(212,111,10)" rx="2" ry="2" />
<text  x="673.44" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (27 samples, 0.06%)</title><rect x="1065.5" y="277" width="0.7" height="15.0" fill="rgb(251,84,24)" rx="2" ry="2" />
<text  x="1068.52" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (10 samples, 0.02%)</title><rect x="403.6" y="245" width="0.2" height="15.0" fill="rgb(247,38,32)" rx="2" ry="2" />
<text  x="406.59" y="255.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (21 samples, 0.04%)</title><rect x="693.8" y="453" width="0.5" height="15.0" fill="rgb(239,229,36)" rx="2" ry="2" />
<text  x="696.79" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%)</title><rect x="750.0" y="325" width="0.4" height="15.0" fill="rgb(242,201,16)" rx="2" ry="2" />
<text  x="753.05" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="943.3" y="341" width="0.5" height="15.0" fill="rgb(211,109,33)" rx="2" ry="2" />
<text  x="946.31" y="351.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="648.3" y="453" width="0.4" height="15.0" fill="rgb(250,85,45)" rx="2" ry="2" />
<text  x="651.27" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (21 samples, 0.04%)</title><rect x="1028.8" y="133" width="0.5" height="15.0" fill="rgb(225,176,45)" rx="2" ry="2" />
<text  x="1031.80" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (158 samples, 0.33%)</title><rect x="810.3" y="357" width="3.8" height="15.0" fill="rgb(248,229,50)" rx="2" ry="2" />
<text  x="813.26" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="527.6" y="325" width="0.2" height="15.0" fill="rgb(242,51,0)" rx="2" ry="2" />
<text  x="530.60" y="335.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (16 samples, 0.03%)</title><rect x="603.6" y="437" width="0.4" height="15.0" fill="rgb(240,21,29)" rx="2" ry="2" />
<text  x="606.64" y="447.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="647.3" y="453" width="0.4" height="15.0" fill="rgb(241,218,22)" rx="2" ry="2" />
<text  x="650.30" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;flat_mutation_reader&gt;::allocate (6 samples, 0.01%)</title><rect x="425.9" y="341" width="0.1" height="15.0" fill="rgb(230,172,18)" rx="2" ry="2" />
<text  x="428.88" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="629.9" y="453" width="0.2" height="15.0" fill="rgb(219,163,33)" rx="2" ry="2" />
<text  x="632.91" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (29 samples, 0.06%)</title><rect x="535.3" y="421" width="0.8" height="15.0" fill="rgb(240,50,26)" rx="2" ry="2" />
<text  x="538.34" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="446.5" y="277" width="0.2" height="15.0" fill="rgb(235,126,42)" rx="2" ry="2" />
<text  x="449.49" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (10 samples, 0.02%)</title><rect x="1032.0" y="197" width="0.2" height="15.0" fill="rgb(229,21,11)" rx="2" ry="2" />
<text  x="1034.97" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (29 samples, 0.06%)</title><rect x="1172.9" y="453" width="0.7" height="15.0" fill="rgb(239,123,15)" rx="2" ry="2" />
<text  x="1175.86" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (54 samples, 0.11%)</title><rect x="295.7" y="261" width="1.3" height="15.0" fill="rgb(249,45,50)" rx="2" ry="2" />
<text  x="298.71" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (74 samples, 0.15%)</title><rect x="912.0" y="373" width="1.8" height="15.0" fill="rgb(215,36,6)" rx="2" ry="2" />
<text  x="914.98" y="383.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%)</title><rect x="531.3" y="405" width="1.2" height="15.0" fill="rgb(248,168,10)" rx="2" ry="2" />
<text  x="534.29" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (886 samples, 1.83%)</title><rect x="485.9" y="309" width="21.6" height="15.0" fill="rgb(229,80,37)" rx="2" ry="2" />
<text  x="488.87" y="319.5" >s..</text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (43 samples, 0.09%)</title><rect x="722.4" y="389" width="1.0" height="15.0" fill="rgb(248,216,51)" rx="2" ry="2" />
<text  x="725.38" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (6 samples, 0.01%)</title><rect x="805.0" y="277" width="0.1" height="15.0" fill="rgb(214,222,12)" rx="2" ry="2" />
<text  x="807.96" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (40 samples, 0.08%)</title><rect x="648.8" y="453" width="1.0" height="15.0" fill="rgb(221,83,52)" rx="2" ry="2" />
<text  x="651.83" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="606.1" y="437" width="0.2" height="15.0" fill="rgb(248,52,2)" rx="2" ry="2" />
<text  x="609.13" y="447.5" ></text>
</g>
<g >
<title>partition_entry::read (95 samples, 0.20%)</title><rect x="509.0" y="309" width="2.3" height="15.0" fill="rgb(232,228,50)" rx="2" ry="2" />
<text  x="512.02" y="319.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (96 samples, 0.20%)</title><rect x="708.7" y="453" width="2.3" height="15.0" fill="rgb(249,60,44)" rx="2" ry="2" />
<text  x="711.66" y="463.5" ></text>
</g>
<g >
<title>table::make_reader (5 samples, 0.01%)</title><rect x="531.2" y="373" width="0.1" height="15.0" fill="rgb(216,132,30)" rx="2" ry="2" />
<text  x="534.17" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (483 samples, 1.00%)</title><rect x="690.2" y="485" width="11.8" height="15.0" fill="rgb(249,216,52)" rx="2" ry="2" />
<text  x="693.22" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="531.0" y="341" width="0.1" height="15.0" fill="rgb(208,215,11)" rx="2" ry="2" />
<text  x="533.97" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="843.4" y="373" width="0.2" height="15.0" fill="rgb(233,194,41)" rx="2" ry="2" />
<text  x="846.37" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="32.2" y="485" width="0.1" height="15.0" fill="rgb(244,128,10)" rx="2" ry="2" />
<text  x="35.17" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (44 samples, 0.09%)</title><rect x="771.2" y="309" width="1.1" height="15.0" fill="rgb(218,107,33)" rx="2" ry="2" />
<text  x="774.24" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (35 samples, 0.07%)</title><rect x="1028.5" y="149" width="0.8" height="15.0" fill="rgb(210,146,6)" rx="2" ry="2" />
<text  x="1031.45" y="159.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (6 samples, 0.01%)</title><rect x="325.9" y="181" width="0.1" height="15.0" fill="rgb(239,195,10)" rx="2" ry="2" />
<text  x="328.89" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (147 samples, 0.30%)</title><rect x="394.5" y="197" width="3.6" height="15.0" fill="rgb(210,169,22)" rx="2" ry="2" />
<text  x="397.48" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,848 samples, 10.03%)</title><rect x="291.7" y="325" width="118.4" height="15.0" fill="rgb(221,186,48)" rx="2" ry="2" />
<text  x="294.73" y="335.5" >seastar::inter..</text>
</g>
<g >
<title>flat_mutation_reader::close (11 samples, 0.02%)</title><rect x="1177.0" y="453" width="0.3" height="15.0" fill="rgb(253,90,29)" rx="2" ry="2" />
<text  x="1179.99" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1139.1" y="405" width="0.1" height="15.0" fill="rgb(222,134,25)" rx="2" ry="2" />
<text  x="1142.07" y="415.5" ></text>
</g>
<g >
<title>tombstone::apply (11 samples, 0.02%)</title><rect x="385.7" y="197" width="0.3" height="15.0" fill="rgb(248,30,36)" rx="2" ry="2" />
<text  x="388.74" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (6 samples, 0.01%)</title><rect x="767.0" y="357" width="0.1" height="15.0" fill="rgb(237,142,25)" rx="2" ry="2" />
<text  x="769.99" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="855.7" y="405" width="0.3" height="15.0" fill="rgb(228,139,28)" rx="2" ry="2" />
<text  x="858.72" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (53 samples, 0.11%)</title><rect x="880.9" y="405" width="1.3" height="15.0" fill="rgb(217,62,40)" rx="2" ry="2" />
<text  x="883.95" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (21 samples, 0.04%)</title><rect x="838.7" y="357" width="0.5" height="15.0" fill="rgb(224,36,36)" rx="2" ry="2" />
<text  x="841.73" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="258.4" y="261" width="0.2" height="15.0" fill="rgb(243,165,1)" rx="2" ry="2" />
<text  x="261.35" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (13 samples, 0.03%)</title><rect x="660.3" y="469" width="0.3" height="15.0" fill="rgb(226,214,2)" rx="2" ry="2" />
<text  x="663.29" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (129 samples, 0.27%)</title><rect x="1118.1" y="373" width="3.2" height="15.0" fill="rgb(244,163,41)" rx="2" ry="2" />
<text  x="1121.14" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (10 samples, 0.02%)</title><rect x="67.5" y="389" width="0.2" height="15.0" fill="rgb(206,46,10)" rx="2" ry="2" />
<text  x="70.45" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (163 samples, 0.34%)</title><rect x="442.5" y="277" width="4.0" height="15.0" fill="rgb(233,182,37)" rx="2" ry="2" />
<text  x="445.51" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (35 samples, 0.07%)</title><rect x="647.1" y="469" width="0.9" height="15.0" fill="rgb(210,65,0)" rx="2" ry="2" />
<text  x="650.10" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="932.3" y="389" width="0.4" height="15.0" fill="rgb(208,137,31)" rx="2" ry="2" />
<text  x="935.27" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (17 samples, 0.04%)</title><rect x="1066.7" y="325" width="0.4" height="15.0" fill="rgb(239,185,18)" rx="2" ry="2" />
<text  x="1069.67" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.01%)</title><rect x="18.0" y="245" width="0.1" height="15.0" fill="rgb(222,152,42)" rx="2" ry="2" />
<text  x="20.96" y="255.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="539.7" y="357" width="0.6" height="15.0" fill="rgb(251,10,41)" rx="2" ry="2" />
<text  x="542.71" y="367.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (6 samples, 0.01%)</title><rect x="595.9" y="405" width="0.1" height="15.0" fill="rgb(231,201,4)" rx="2" ry="2" />
<text  x="598.87" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="439.9" y="293" width="0.1" height="15.0" fill="rgb(253,20,8)" rx="2" ry="2" />
<text  x="442.92" y="303.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (11 samples, 0.02%)</title><rect x="521.2" y="277" width="0.3" height="15.0" fill="rgb(248,20,43)" rx="2" ry="2" />
<text  x="524.20" y="287.5" ></text>
</g>
<g >
<title>database::find_keyspace (282 samples, 0.58%)</title><rect x="1060.3" y="341" width="6.9" height="15.0" fill="rgb(223,219,36)" rx="2" ry="2" />
<text  x="1063.34" y="351.5" ></text>
</g>
<g >
<title>row::row (1,424 samples, 2.95%)</title><rect x="168.2" y="149" width="34.7" height="15.0" fill="rgb(212,192,45)" rx="2" ry="2" />
<text  x="171.18" y="159.5" >ro..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (98 samples, 0.20%)</title><rect x="975.2" y="325" width="2.4" height="15.0" fill="rgb(214,158,46)" rx="2" ry="2" />
<text  x="978.25" y="335.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="804.8" y="277" width="0.2" height="15.0" fill="rgb(240,0,0)" rx="2" ry="2" />
<text  x="807.84" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="655.1" y="469" width="0.3" height="15.0" fill="rgb(230,76,48)" rx="2" ry="2" />
<text  x="658.13" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (21 samples, 0.04%)</title><rect x="574.9" y="373" width="0.5" height="15.0" fill="rgb(206,198,13)" rx="2" ry="2" />
<text  x="577.87" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="838.2" y="341" width="0.1" height="15.0" fill="rgb(228,123,4)" rx="2" ry="2" />
<text  x="841.22" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="317.2" y="149" width="0.2" height="15.0" fill="rgb(232,4,53)" rx="2" ry="2" />
<text  x="320.22" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1079.0" y="325" width="0.3" height="15.0" fill="rgb(240,3,50)" rx="2" ry="2" />
<text  x="1082.02" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="563.2" y="309" width="0.1" height="15.0" fill="rgb(214,90,8)" rx="2" ry="2" />
<text  x="566.18" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (213 samples, 0.44%)</title><rect x="215.0" y="181" width="5.2" height="15.0" fill="rgb(215,41,14)" rx="2" ry="2" />
<text  x="217.96" y="191.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (19 samples, 0.04%)</title><rect x="329.2" y="181" width="0.4" height="15.0" fill="rgb(238,34,5)" rx="2" ry="2" />
<text  x="332.16" y="191.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (42 samples, 0.09%)</title><rect x="188.7" y="69" width="1.1" height="15.0" fill="rgb(228,37,50)" rx="2" ry="2" />
<text  x="191.74" y="79.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (8 samples, 0.02%)</title><rect x="430.5" y="309" width="0.2" height="15.0" fill="rgb(232,189,28)" rx="2" ry="2" />
<text  x="433.54" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (12 samples, 0.02%)</title><rect x="992.4" y="341" width="0.3" height="15.0" fill="rgb(235,94,14)" rx="2" ry="2" />
<text  x="995.36" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::stats (25 samples, 0.05%)</title><rect x="523.1" y="293" width="0.6" height="15.0" fill="rgb(233,166,9)" rx="2" ry="2" />
<text  x="526.11" y="303.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,173 samples, 12.77%)</title><rect x="707.4" y="485" width="150.8" height="15.0" fill="rgb(242,193,13)" rx="2" ry="2" />
<text  x="710.44" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="659.8" y="469" width="0.3" height="15.0" fill="rgb(254,183,0)" rx="2" ry="2" />
<text  x="662.77" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="1146.0" y="501" width="0.1" height="15.0" fill="rgb(227,99,48)" rx="2" ry="2" />
<text  x="1148.98" y="511.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (17 samples, 0.04%)</title><rect x="1097.7" y="309" width="0.4" height="15.0" fill="rgb(213,93,36)" rx="2" ry="2" />
<text  x="1100.68" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1043.6" y="277" width="0.1" height="15.0" fill="rgb(246,108,42)" rx="2" ry="2" />
<text  x="1046.59" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (135 samples, 0.28%)</title><rect x="58.0" y="453" width="3.3" height="15.0" fill="rgb(236,95,49)" rx="2" ry="2" />
<text  x="60.98" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (6,022 samples, 12.46%)</title><rect x="959.8" y="389" width="147.1" height="15.0" fill="rgb(205,219,39)" rx="2" ry="2" />
<text  x="962.84" y="399.5" >service::storage_p..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%)</title><rect x="934.4" y="405" width="0.4" height="15.0" fill="rgb(246,65,49)" rx="2" ry="2" />
<text  x="937.40" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="1132.7" y="389" width="0.5" height="15.0" fill="rgb(247,7,49)" rx="2" ry="2" />
<text  x="1135.72" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (10 samples, 0.02%)</title><rect x="216.3" y="149" width="0.2" height="15.0" fill="rgb(253,57,18)" rx="2" ry="2" />
<text  x="219.25" y="159.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1104.0" y="341" width="0.1" height="15.0" fill="rgb(225,21,42)" rx="2" ry="2" />
<text  x="1106.98" y="351.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (11 samples, 0.02%)</title><rect x="514.9" y="341" width="0.2" height="15.0" fill="rgb(234,211,49)" rx="2" ry="2" />
<text  x="517.88" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (103 samples, 0.21%)</title><rect x="719.1" y="341" width="2.5" height="15.0" fill="rgb(237,7,27)" rx="2" ry="2" />
<text  x="722.11" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="646.7" y="469" width="0.2" height="15.0" fill="rgb(224,167,5)" rx="2" ry="2" />
<text  x="649.74" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%)</title><rect x="816.2" y="341" width="0.3" height="15.0" fill="rgb(232,202,12)" rx="2" ry="2" />
<text  x="819.24" y="351.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (507 samples, 1.05%)</title><rect x="466.7" y="309" width="12.4" height="15.0" fill="rgb(221,154,21)" rx="2" ry="2" />
<text  x="469.70" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="413.1" y="357" width="0.1" height="15.0" fill="rgb(205,88,9)" rx="2" ry="2" />
<text  x="416.08" y="367.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (5 samples, 0.01%)</title><rect x="648.2" y="453" width="0.1" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="651.15" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (13 samples, 0.03%)</title><rect x="245.8" y="229" width="0.3" height="15.0" fill="rgb(248,22,31)" rx="2" ry="2" />
<text  x="248.75" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="937.8" y="389" width="0.1" height="15.0" fill="rgb(234,226,36)" rx="2" ry="2" />
<text  x="940.79" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.02%)</title><rect x="634.2" y="485" width="0.3" height="15.0" fill="rgb(221,98,10)" rx="2" ry="2" />
<text  x="637.18" y="495.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (37 samples, 0.08%)</title><rect x="1096.1" y="293" width="0.9" height="15.0" fill="rgb(237,18,3)" rx="2" ry="2" />
<text  x="1099.09" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (5 samples, 0.01%)</title><rect x="843.0" y="405" width="0.1" height="15.0" fill="rgb(214,37,7)" rx="2" ry="2" />
<text  x="845.95" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (28 samples, 0.06%)</title><rect x="49.8" y="469" width="0.6" height="15.0" fill="rgb(233,172,16)" rx="2" ry="2" />
<text  x="52.75" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (44 samples, 0.09%)</title><rect x="754.6" y="341" width="1.1" height="15.0" fill="rgb(244,31,39)" rx="2" ry="2" />
<text  x="757.59" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (497 samples, 1.03%)</title><rect x="493.2" y="261" width="12.2" height="15.0" fill="rgb(246,63,38)" rx="2" ry="2" />
<text  x="496.22" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (8 samples, 0.02%)</title><rect x="23.9" y="517" width="0.2" height="15.0" fill="rgb(222,25,52)" rx="2" ry="2" />
<text  x="26.94" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="841.3" y="389" width="1.1" height="15.0" fill="rgb(207,163,22)" rx="2" ry="2" />
<text  x="844.29" y="399.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,257 samples, 2.60%)</title><rect x="776.3" y="309" width="30.7" height="15.0" fill="rgb(230,143,26)" rx="2" ry="2" />
<text  x="779.34" y="319.5" >au..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="834.0" y="437" width="0.2" height="15.0" fill="rgb(206,164,14)" rx="2" ry="2" />
<text  x="836.97" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="650.7" y="485" width="0.5" height="15.0" fill="rgb(251,67,39)" rx="2" ry="2" />
<text  x="653.69" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (570 samples, 1.18%)</title><rect x="370.9" y="181" width="13.9" height="15.0" fill="rgb(209,60,37)" rx="2" ry="2" />
<text  x="373.87" y="191.5" ></text>
</g>
<g >
<title>sstring_hash::operator (14 samples, 0.03%)</title><rect x="825.1" y="309" width="0.3" height="15.0" fill="rgb(208,117,15)" rx="2" ry="2" />
<text  x="828.10" y="319.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.04%)</title><rect x="1170.3" y="469" width="0.5" height="15.0" fill="rgb(219,0,31)" rx="2" ry="2" />
<text  x="1173.32" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="40.3" y="453" width="0.2" height="15.0" fill="rgb(225,30,0)" rx="2" ry="2" />
<text  x="43.33" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (18 samples, 0.04%)</title><rect x="1096.6" y="277" width="0.4" height="15.0" fill="rgb(214,128,21)" rx="2" ry="2" />
<text  x="1099.55" y="287.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (173 samples, 0.36%)</title><rect x="919.5" y="357" width="4.2" height="15.0" fill="rgb(215,184,0)" rx="2" ry="2" />
<text  x="922.45" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="750.8" y="357" width="0.3" height="15.0" fill="rgb(231,46,49)" rx="2" ry="2" />
<text  x="753.83" y="367.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="902.1" y="309" width="0.2" height="15.0" fill="rgb(241,112,40)" rx="2" ry="2" />
<text  x="905.14" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (22 samples, 0.05%)</title><rect x="139.0" y="261" width="0.6" height="15.0" fill="rgb(224,169,50)" rx="2" ry="2" />
<text  x="142.05" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="943.6" y="309" width="0.2" height="15.0" fill="rgb(246,191,44)" rx="2" ry="2" />
<text  x="946.60" y="319.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="23.3" y="517" width="0.1" height="15.0" fill="rgb(241,179,13)" rx="2" ry="2" />
<text  x="26.28" y="527.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (5 samples, 0.01%)</title><rect x="1034.8" y="229" width="0.1" height="15.0" fill="rgb(231,25,47)" rx="2" ry="2" />
<text  x="1037.75" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="22.5" y="517" width="0.1" height="15.0" fill="rgb(245,214,40)" rx="2" ry="2" />
<text  x="25.45" y="527.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%)</title><rect x="1107.9" y="389" width="0.1" height="15.0" fill="rgb(244,191,33)" rx="2" ry="2" />
<text  x="1110.86" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="643.7" y="405" width="0.1" height="15.0" fill="rgb(211,17,12)" rx="2" ry="2" />
<text  x="646.71" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (11 samples, 0.02%)</title><rect x="416.8" y="421" width="0.2" height="15.0" fill="rgb(240,191,24)" rx="2" ry="2" />
<text  x="419.77" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (5 samples, 0.01%)</title><rect x="20.6" y="389" width="0.1" height="15.0" fill="rgb(205,198,54)" rx="2" ry="2" />
<text  x="23.62" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="318.9" y="197" width="0.2" height="15.0" fill="rgb(254,197,46)" rx="2" ry="2" />
<text  x="321.93" y="207.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (34 samples, 0.07%)</title><rect x="678.2" y="485" width="0.9" height="15.0" fill="rgb(224,174,33)" rx="2" ry="2" />
<text  x="681.23" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (31 samples, 0.06%)</title><rect x="861.5" y="405" width="0.8" height="15.0" fill="rgb(227,160,33)" rx="2" ry="2" />
<text  x="864.51" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (252 samples, 0.52%)</title><rect x="734.3" y="373" width="6.1" height="15.0" fill="rgb(213,7,10)" rx="2" ry="2" />
<text  x="737.27" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (125 samples, 0.26%)</title><rect x="190.8" y="37" width="3.1" height="15.0" fill="rgb(210,61,39)" rx="2" ry="2" />
<text  x="193.81" y="47.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="651.1" y="469" width="0.1" height="15.0" fill="rgb(214,157,41)" rx="2" ry="2" />
<text  x="654.11" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="201.4" y="101" width="0.2" height="15.0" fill="rgb(221,127,40)" rx="2" ry="2" />
<text  x="204.41" y="111.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,055 samples, 2.18%)</title><rect x="883.1" y="373" width="25.7" height="15.0" fill="rgb(213,54,11)" rx="2" ry="2" />
<text  x="886.07" y="383.5" >_..</text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%)</title><rect x="1173.8" y="437" width="0.2" height="15.0" fill="rgb(243,32,48)" rx="2" ry="2" />
<text  x="1176.81" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (6 samples, 0.01%)</title><rect x="1117.5" y="389" width="0.1" height="15.0" fill="rgb(251,202,22)" rx="2" ry="2" />
<text  x="1120.46" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (11 samples, 0.02%)</title><rect x="1027.3" y="149" width="0.3" height="15.0" fill="rgb(247,38,54)" rx="2" ry="2" />
<text  x="1030.33" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (6 samples, 0.01%)</title><rect x="741.1" y="405" width="0.2" height="15.0" fill="rgb(243,191,36)" rx="2" ry="2" />
<text  x="744.11" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="766.7" y="357" width="0.1" height="15.0" fill="rgb(253,137,32)" rx="2" ry="2" />
<text  x="769.72" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.13%)</title><rect x="279.4" y="261" width="1.6" height="15.0" fill="rgb(220,141,42)" rx="2" ry="2" />
<text  x="282.40" y="271.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="1036.2" y="213" width="2.0" height="15.0" fill="rgb(226,96,44)" rx="2" ry="2" />
<text  x="1039.22" y="223.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (28 samples, 0.06%)</title><rect x="500.4" y="197" width="0.6" height="15.0" fill="rgb(241,28,34)" rx="2" ry="2" />
<text  x="503.35" y="207.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (37 samples, 0.08%)</title><rect x="37.6" y="405" width="0.9" height="15.0" fill="rgb(228,134,54)" rx="2" ry="2" />
<text  x="40.62" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (69 samples, 0.14%)</title><rect x="715.2" y="421" width="1.7" height="15.0" fill="rgb(218,217,17)" rx="2" ry="2" />
<text  x="718.20" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (138 samples, 0.29%)</title><rect x="388.0" y="245" width="3.4" height="15.0" fill="rgb(235,20,39)" rx="2" ry="2" />
<text  x="391.03" y="255.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (47,364 samples, 98.01%)</title><rect x="22.2" y="565" width="1156.5" height="15.0" fill="rgb(231,69,14)" rx="2" ry="2" />
<text  x="25.18" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="1061.3" y="309" width="0.1" height="15.0" fill="rgb(248,197,0)" rx="2" ry="2" />
<text  x="1064.27" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (12 samples, 0.02%)</title><rect x="292.9" y="293" width="0.3" height="15.0" fill="rgb(232,38,33)" rx="2" ry="2" />
<text  x="295.90" y="303.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,667 samples, 5.52%)</title><rect x="449.4" y="341" width="65.1" height="15.0" fill="rgb(223,220,17)" rx="2" ry="2" />
<text  x="452.37" y="351.5" >memtabl..</text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="473.4" y="197" width="0.3" height="15.0" fill="rgb(215,80,3)" rx="2" ry="2" />
<text  x="476.44" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="788.7" y="181" width="0.2" height="15.0" fill="rgb(238,90,9)" rx="2" ry="2" />
<text  x="791.70" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (6 samples, 0.01%)</title><rect x="36.1" y="421" width="0.1" height="15.0" fill="rgb(221,149,33)" rx="2" ry="2" />
<text  x="39.08" y="431.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (213 samples, 0.44%)</title><rect x="1026.1" y="197" width="5.2" height="15.0" fill="rgb(232,186,54)" rx="2" ry="2" />
<text  x="1029.06" y="207.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (359 samples, 0.74%)</title><rect x="457.8" y="293" width="8.8" height="15.0" fill="rgb(222,209,35)" rx="2" ry="2" />
<text  x="460.84" y="303.5" ></text>
</g>
<g >
<title>operator new (81 samples, 0.17%)</title><rect x="849.6" y="357" width="2.0" height="15.0" fill="rgb(252,96,36)" rx="2" ry="2" />
<text  x="852.60" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (11 samples, 0.02%)</title><rect x="60.9" y="405" width="0.2" height="15.0" fill="rgb(222,122,29)" rx="2" ry="2" />
<text  x="63.86" y="415.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (6 samples, 0.01%)</title><rect x="1143.9" y="501" width="0.2" height="15.0" fill="rgb(229,108,1)" rx="2" ry="2" />
<text  x="1146.95" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (19 samples, 0.04%)</title><rect x="940.0" y="405" width="0.5" height="15.0" fill="rgb(216,103,46)" rx="2" ry="2" />
<text  x="943.01" y="415.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (60 samples, 0.12%)</title><rect x="744.6" y="389" width="1.5" height="15.0" fill="rgb(219,1,23)" rx="2" ry="2" />
<text  x="747.60" y="399.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="805.9" y="277" width="0.7" height="15.0" fill="rgb(222,15,27)" rx="2" ry="2" />
<text  x="808.86" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (5 samples, 0.01%)</title><rect x="1045.4" y="261" width="0.1" height="15.0" fill="rgb(230,175,51)" rx="2" ry="2" />
<text  x="1048.42" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.01%)</title><rect x="1176.5" y="501" width="0.2" height="15.0" fill="rgb(253,166,14)" rx="2" ry="2" />
<text  x="1179.50" y="511.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (50 samples, 0.10%)</title><rect x="1095.8" y="309" width="1.2" height="15.0" fill="rgb(219,41,13)" rx="2" ry="2" />
<text  x="1098.77" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (15 samples, 0.03%)</title><rect x="407.6" y="277" width="0.4" height="15.0" fill="rgb(248,227,33)" rx="2" ry="2" />
<text  x="410.59" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (272 samples, 0.56%)</title><rect x="606.3" y="437" width="6.7" height="15.0" fill="rgb(238,213,18)" rx="2" ry="2" />
<text  x="609.35" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (20 samples, 0.04%)</title><rect x="1148.8" y="485" width="0.4" height="15.0" fill="rgb(245,188,17)" rx="2" ry="2" />
<text  x="1151.76" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (9 samples, 0.02%)</title><rect x="73.2" y="421" width="0.2" height="15.0" fill="rgb(242,106,28)" rx="2" ry="2" />
<text  x="76.17" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.07%)</title><rect x="939.1" y="357" width="0.9" height="15.0" fill="rgb(251,194,16)" rx="2" ry="2" />
<text  x="942.13" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (79 samples, 0.16%)</title><rect x="408.0" y="277" width="1.9" height="15.0" fill="rgb(220,100,48)" rx="2" ry="2" />
<text  x="410.96" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (11 samples, 0.02%)</title><rect x="825.2" y="293" width="0.2" height="15.0" fill="rgb(206,167,10)" rx="2" ry="2" />
<text  x="828.15" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (5 samples, 0.01%)</title><rect x="597.5" y="437" width="0.1" height="15.0" fill="rgb(205,11,19)" rx="2" ry="2" />
<text  x="600.48" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (43 samples, 0.09%)</title><rect x="1168.7" y="485" width="1.0" height="15.0" fill="rgb(226,98,19)" rx="2" ry="2" />
<text  x="1171.68" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="656.1" y="421" width="0.2" height="15.0" fill="rgb(236,113,48)" rx="2" ry="2" />
<text  x="659.14" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (53 samples, 0.11%)</title><rect x="792.9" y="133" width="1.3" height="15.0" fill="rgb(249,190,20)" rx="2" ry="2" />
<text  x="795.92" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (22 samples, 0.05%)</title><rect x="1077.8" y="309" width="0.5" height="15.0" fill="rgb(225,19,22)" rx="2" ry="2" />
<text  x="1080.78" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="896.1" y="229" width="0.2" height="15.0" fill="rgb(249,169,10)" rx="2" ry="2" />
<text  x="899.11" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (8 samples, 0.02%)</title><rect x="1121.3" y="405" width="0.2" height="15.0" fill="rgb(205,88,46)" rx="2" ry="2" />
<text  x="1124.31" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (7 samples, 0.01%)</title><rect x="679.1" y="469" width="0.2" height="15.0" fill="rgb(216,69,36)" rx="2" ry="2" />
<text  x="682.09" y="479.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="510.5" y="277" width="0.8" height="15.0" fill="rgb(239,193,2)" rx="2" ry="2" />
<text  x="513.49" y="287.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (11 samples, 0.02%)</title><rect x="1089.4" y="277" width="0.3" height="15.0" fill="rgb(225,176,12)" rx="2" ry="2" />
<text  x="1092.42" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="499.1" y="181" width="0.5" height="15.0" fill="rgb(233,21,28)" rx="2" ry="2" />
<text  x="502.11" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="258.6" y="277" width="0.3" height="15.0" fill="rgb(220,164,15)" rx="2" ry="2" />
<text  x="261.59" y="287.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (80 samples, 0.17%)</title><rect x="770.6" y="325" width="2.0" height="15.0" fill="rgb(228,22,23)" rx="2" ry="2" />
<text  x="773.63" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (40 samples, 0.08%)</title><rect x="16.1" y="309" width="1.0" height="15.0" fill="rgb(249,145,26)" rx="2" ry="2" />
<text  x="19.10" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (24 samples, 0.05%)</title><rect x="797.5" y="85" width="0.6" height="15.0" fill="rgb(222,192,19)" rx="2" ry="2" />
<text  x="800.51" y="95.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (5 samples, 0.01%)</title><rect x="1106.8" y="373" width="0.1" height="15.0" fill="rgb(245,77,51)" rx="2" ry="2" />
<text  x="1109.76" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (14 samples, 0.03%)</title><rect x="1098.9" y="341" width="0.4" height="15.0" fill="rgb(249,88,24)" rx="2" ry="2" />
<text  x="1101.95" y="351.5" ></text>
</g>
<g >
<title>query::result::builder::builder (207 samples, 0.43%)</title><rect x="588.1" y="421" width="5.0" height="15.0" fill="rgb(233,117,42)" rx="2" ry="2" />
<text  x="591.06" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (942 samples, 1.95%)</title><rect x="909.8" y="405" width="23.0" height="15.0" fill="rgb(235,91,1)" rx="2" ry="2" />
<text  x="912.76" y="415.5" >c..</text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (695 samples, 1.44%)</title><rect x="1080.0" y="325" width="17.0" height="15.0" fill="rgb(225,71,9)" rx="2" ry="2" />
<text  x="1083.02" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (272 samples, 0.56%)</title><rect x="96.3" y="437" width="6.6" height="15.0" fill="rgb(210,32,53)" rx="2" ry="2" />
<text  x="99.27" y="447.5" ></text>
</g>
<g >
<title>seastar::task_quota_aio_completion::complete_with (5 samples, 0.01%)</title><rect x="1144.0" y="485" width="0.1" height="15.0" fill="rgb(215,58,15)" rx="2" ry="2" />
<text  x="1146.97" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (6 samples, 0.01%)</title><rect x="984.3" y="341" width="0.1" height="15.0" fill="rgb(230,92,28)" rx="2" ry="2" />
<text  x="987.26" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (24 samples, 0.05%)</title><rect x="1138.7" y="421" width="0.6" height="15.0" fill="rgb(212,0,35)" rx="2" ry="2" />
<text  x="1141.70" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="133.6" y="245" width="0.2" height="15.0" fill="rgb(224,198,31)" rx="2" ry="2" />
<text  x="136.58" y="255.5" ></text>
</g>
<g >
<title>db::block_for (12 samples, 0.02%)</title><rect x="1067.9" y="325" width="0.3" height="15.0" fill="rgb(252,167,14)" rx="2" ry="2" />
<text  x="1070.91" y="335.5" ></text>
</g>
<g >
<title>database::query (1,061 samples, 2.20%)</title><rect x="1013.6" y="261" width="25.9" height="15.0" fill="rgb(234,194,28)" rx="2" ry="2" />
<text  x="1016.63" y="271.5" >d..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (15 samples, 0.03%)</title><rect x="427.0" y="341" width="0.3" height="15.0" fill="rgb(218,205,26)" rx="2" ry="2" />
<text  x="429.95" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (5 samples, 0.01%)</title><rect x="792.4" y="149" width="0.2" height="15.0" fill="rgb(207,95,14)" rx="2" ry="2" />
<text  x="795.43" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="811.2" y="341" width="0.1" height="15.0" fill="rgb(214,219,21)" rx="2" ry="2" />
<text  x="814.16" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="816.0" y="357" width="0.5" height="15.0" fill="rgb(211,22,44)" rx="2" ry="2" />
<text  x="819.00" y="367.5" ></text>
</g>
<g >
<title>posix_memalign (30 samples, 0.06%)</title><rect x="198.3" y="85" width="0.7" height="15.0" fill="rgb(251,200,16)" rx="2" ry="2" />
<text  x="201.31" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="661.5" y="485" width="0.6" height="15.0" fill="rgb(215,196,7)" rx="2" ry="2" />
<text  x="664.51" y="495.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (10 samples, 0.02%)</title><rect x="163.4" y="197" width="0.3" height="15.0" fill="rgb(233,14,0)" rx="2" ry="2" />
<text  x="166.42" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="79.4" y="453" width="0.1" height="15.0" fill="rgb(215,133,15)" rx="2" ry="2" />
<text  x="82.37" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (68 samples, 0.14%)</title><rect x="102.9" y="437" width="1.7" height="15.0" fill="rgb(210,187,49)" rx="2" ry="2" />
<text  x="105.91" y="447.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (10 samples, 0.02%)</title><rect x="678.0" y="485" width="0.2" height="15.0" fill="rgb(224,87,38)" rx="2" ry="2" />
<text  x="680.99" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (92 samples, 0.19%)</title><rect x="1101.4" y="357" width="2.3" height="15.0" fill="rgb(214,166,26)" rx="2" ry="2" />
<text  x="1104.44" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (57 samples, 0.12%)</title><rect x="434.5" y="261" width="1.4" height="15.0" fill="rgb(221,36,4)" rx="2" ry="2" />
<text  x="437.52" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,251 samples, 48.11%)</title><rect x="51.8" y="469" width="567.7" height="15.0" fill="rgb(209,196,17)" rx="2" ry="2" />
<text  x="54.80" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>service::client_state::has_access (2,005 samples, 4.15%)</title><rect x="765.3" y="373" width="48.9" height="15.0" fill="rgb(206,212,19)" rx="2" ry="2" />
<text  x="768.28" y="383.5" >serv..</text>
</g>
<g >
<title>operator delete (66 samples, 0.14%)</title><rect x="571.6" y="341" width="1.6" height="15.0" fill="rgb(245,228,8)" rx="2" ry="2" />
<text  x="574.55" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (6 samples, 0.01%)</title><rect x="22.0" y="485" width="0.1" height="15.0" fill="rgb(205,223,8)" rx="2" ry="2" />
<text  x="24.99" y="495.5" ></text>
</g>
<g >
<title>abstract_type::from_string (5 samples, 0.01%)</title><rect x="20.6" y="373" width="0.1" height="15.0" fill="rgb(216,198,24)" rx="2" ry="2" />
<text  x="23.62" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="816.1" y="341" width="0.1" height="15.0" fill="rgb(213,154,49)" rx="2" ry="2" />
<text  x="819.07" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="760.1" y="341" width="0.2" height="15.0" fill="rgb(242,97,34)" rx="2" ry="2" />
<text  x="763.11" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="99.3" y="405" width="0.2" height="15.0" fill="rgb(243,93,33)" rx="2" ry="2" />
<text  x="102.34" y="415.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (46 samples, 0.10%)</title><rect x="728.5" y="389" width="1.1" height="15.0" fill="rgb(242,41,29)" rx="2" ry="2" />
<text  x="731.46" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="897.1" y="277" width="0.2" height="15.0" fill="rgb(222,181,17)" rx="2" ry="2" />
<text  x="900.06" y="287.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="34.1" y="469" width="0.8" height="15.0" fill="rgb(219,174,28)" rx="2" ry="2" />
<text  x="37.12" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="152.1" y="197" width="0.2" height="15.0" fill="rgb(239,12,35)" rx="2" ry="2" />
<text  x="155.11" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="612.0" y="357" width="0.2" height="15.0" fill="rgb(219,20,46)" rx="2" ry="2" />
<text  x="615.01" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (11 samples, 0.02%)</title><rect x="626.3" y="485" width="0.3" height="15.0" fill="rgb(229,13,25)" rx="2" ry="2" />
<text  x="629.30" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="282.8" y="277" width="0.2" height="15.0" fill="rgb(220,170,52)" rx="2" ry="2" />
<text  x="285.82" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.02%)</title><rect x="705.5" y="501" width="0.3" height="15.0" fill="rgb(225,125,15)" rx="2" ry="2" />
<text  x="708.53" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (10 samples, 0.02%)</title><rect x="264.8" y="341" width="0.2" height="15.0" fill="rgb(242,184,8)" rx="2" ry="2" />
<text  x="267.80" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (20 samples, 0.04%)</title><rect x="1150.6" y="485" width="0.5" height="15.0" fill="rgb(234,130,2)" rx="2" ry="2" />
<text  x="1153.61" y="495.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="814.8" y="373" width="0.8" height="15.0" fill="rgb(250,123,43)" rx="2" ry="2" />
<text  x="817.85" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (18 samples, 0.04%)</title><rect x="832.6" y="437" width="0.5" height="15.0" fill="rgb(246,98,45)" rx="2" ry="2" />
<text  x="835.63" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (12 samples, 0.02%)</title><rect x="143.2" y="261" width="0.3" height="15.0" fill="rgb(220,21,4)" rx="2" ry="2" />
<text  x="146.22" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (5 samples, 0.01%)</title><rect x="16.9" y="261" width="0.1" height="15.0" fill="rgb(221,196,37)" rx="2" ry="2" />
<text  x="19.86" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (27 samples, 0.06%)</title><rect x="630.7" y="469" width="0.7" height="15.0" fill="rgb(244,194,53)" rx="2" ry="2" />
<text  x="633.74" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (19 samples, 0.04%)</title><rect x="1127.7" y="405" width="0.4" height="15.0" fill="rgb(243,102,23)" rx="2" ry="2" />
<text  x="1130.66" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (6 samples, 0.01%)</title><rect x="1030.8" y="165" width="0.1" height="15.0" fill="rgb(227,91,8)" rx="2" ry="2" />
<text  x="1033.77" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (35 samples, 0.07%)</title><rect x="20.5" y="469" width="0.8" height="15.0" fill="rgb(244,138,9)" rx="2" ry="2" />
<text  x="23.45" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (25 samples, 0.05%)</title><rect x="1178.0" y="501" width="0.6" height="15.0" fill="rgb(252,95,13)" rx="2" ry="2" />
<text  x="1180.99" y="511.5" ></text>
</g>
<g >
<title>database::find_schema (65 samples, 0.13%)</title><rect x="817.2" y="357" width="1.6" height="15.0" fill="rgb(253,53,45)" rx="2" ry="2" />
<text  x="820.22" y="367.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,457 samples, 9.22%)</title><rect x="297.4" y="293" width="108.8" height="15.0" fill="rgb(249,208,16)" rx="2" ry="2" />
<text  x="300.42" y="303.5" >seastar::repe..</text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (28 samples, 0.06%)</title><rect x="1142.5" y="325" width="0.6" height="15.0" fill="rgb(217,91,11)" rx="2" ry="2" />
<text  x="1145.46" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (16 samples, 0.03%)</title><rect x="1109.7" y="389" width="0.4" height="15.0" fill="rgb(239,206,14)" rx="2" ry="2" />
<text  x="1112.72" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (94 samples, 0.19%)</title><rect x="830.0" y="421" width="2.3" height="15.0" fill="rgb(243,152,33)" rx="2" ry="2" />
<text  x="832.99" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="827.8" y="421" width="0.2" height="15.0" fill="rgb(219,96,12)" rx="2" ry="2" />
<text  x="830.84" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="530.8" y="325" width="0.2" height="15.0" fill="rgb(235,195,39)" rx="2" ry="2" />
<text  x="533.85" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (5 samples, 0.01%)</title><rect x="260.9" y="309" width="0.1" height="15.0" fill="rgb(211,116,11)" rx="2" ry="2" />
<text  x="263.91" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (79 samples, 0.16%)</title><rect x="261.2" y="325" width="2.0" height="15.0" fill="rgb(235,128,0)" rx="2" ry="2" />
<text  x="264.23" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (5 samples, 0.01%)</title><rect x="609.7" y="405" width="0.2" height="15.0" fill="rgb(228,220,13)" rx="2" ry="2" />
<text  x="612.74" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (207 samples, 0.43%)</title><rect x="943.8" y="421" width="5.1" height="15.0" fill="rgb(222,167,20)" rx="2" ry="2" />
<text  x="946.82" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="845.8" y="389" width="0.2" height="15.0" fill="rgb(227,191,42)" rx="2" ry="2" />
<text  x="848.79" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="618.6" y="421" width="0.1" height="15.0" fill="rgb(219,95,32)" rx="2" ry="2" />
<text  x="621.61" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="747.2" y="405" width="0.1" height="15.0" fill="rgb(220,207,41)" rx="2" ry="2" />
<text  x="750.16" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (18 samples, 0.04%)</title><rect x="631.0" y="453" width="0.4" height="15.0" fill="rgb(228,176,28)" rx="2" ry="2" />
<text  x="633.96" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (372 samples, 0.77%)</title><rect x="308.6" y="213" width="9.1" height="15.0" fill="rgb(205,44,17)" rx="2" ry="2" />
<text  x="311.58" y="223.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="807.7" y="309" width="0.6" height="15.0" fill="rgb(239,25,19)" rx="2" ry="2" />
<text  x="810.70" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="230.5" y="229" width="0.5" height="15.0" fill="rgb(241,207,32)" rx="2" ry="2" />
<text  x="233.47" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (72 samples, 0.15%)</title><rect x="389.5" y="213" width="1.7" height="15.0" fill="rgb(252,129,24)" rx="2" ry="2" />
<text  x="392.47" y="223.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (14 samples, 0.03%)</title><rect x="812.4" y="309" width="0.3" height="15.0" fill="rgb(241,139,13)" rx="2" ry="2" />
<text  x="815.38" y="319.5" ></text>
</g>
<g >
<title>std::type_info::operator== (9 samples, 0.02%)</title><rect x="1001.9" y="277" width="0.3" height="15.0" fill="rgb(224,0,39)" rx="2" ry="2" />
<text  x="1004.94" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="774.8" y="309" width="0.2" height="15.0" fill="rgb(215,209,28)" rx="2" ry="2" />
<text  x="777.78" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="646.5" y="453" width="0.2" height="15.0" fill="rgb(243,223,26)" rx="2" ry="2" />
<text  x="649.49" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="995.3" y="293" width="0.1" height="15.0" fill="rgb(212,18,41)" rx="2" ry="2" />
<text  x="998.32" y="303.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="49.2" y="469" width="0.5" height="15.0" fill="rgb(249,12,50)" rx="2" ry="2" />
<text  x="52.21" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (123 samples, 0.25%)</title><rect x="498.1" y="213" width="3.0" height="15.0" fill="rgb(219,192,20)" rx="2" ry="2" />
<text  x="501.11" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="444.2" y="261" width="0.3" height="15.0" fill="rgb(247,94,22)" rx="2" ry="2" />
<text  x="447.19" y="271.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,095 samples, 14.68%)</title><rect x="112.0" y="389" width="173.2" height="15.0" fill="rgb(207,13,30)" rx="2" ry="2" />
<text  x="114.99" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (7 samples, 0.01%)</title><rect x="1058.4" y="325" width="0.2" height="15.0" fill="rgb(209,209,52)" rx="2" ry="2" />
<text  x="1061.39" y="335.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (14 samples, 0.03%)</title><rect x="861.9" y="325" width="0.3" height="15.0" fill="rgb(240,19,8)" rx="2" ry="2" />
<text  x="864.88" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="941.5" y="357" width="1.1" height="15.0" fill="rgb(221,205,45)" rx="2" ry="2" />
<text  x="944.53" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (14 samples, 0.03%)</title><rect x="122.1" y="293" width="0.3" height="15.0" fill="rgb(225,95,27)" rx="2" ry="2" />
<text  x="125.10" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (9 samples, 0.02%)</title><rect x="319.1" y="197" width="0.2" height="15.0" fill="rgb(250,227,51)" rx="2" ry="2" />
<text  x="322.10" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (259 samples, 0.54%)</title><rect x="15.3" y="517" width="6.4" height="15.0" fill="rgb(243,138,26)" rx="2" ry="2" />
<text  x="18.35" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (21 samples, 0.04%)</title><rect x="674.3" y="469" width="0.5" height="15.0" fill="rgb(219,73,7)" rx="2" ry="2" />
<text  x="677.33" y="479.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="484.0" y="293" width="0.6" height="15.0" fill="rgb(240,9,45)" rx="2" ry="2" />
<text  x="486.99" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="408.9" y="261" width="0.1" height="15.0" fill="rgb(240,37,51)" rx="2" ry="2" />
<text  x="411.88" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="140.7" y="261" width="0.2" height="15.0" fill="rgb(250,30,19)" rx="2" ry="2" />
<text  x="143.71" y="271.5" ></text>
</g>
<g >
<title>database::has_keyspace (90 samples, 0.19%)</title><rect x="823.4" y="357" width="2.2" height="15.0" fill="rgb(246,210,51)" rx="2" ry="2" />
<text  x="826.37" y="367.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (119 samples, 0.25%)</title><rect x="508.5" y="325" width="2.9" height="15.0" fill="rgb(221,30,21)" rx="2" ry="2" />
<text  x="511.48" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%)</title><rect x="1071.9" y="293" width="0.8" height="15.0" fill="rgb(235,106,11)" rx="2" ry="2" />
<text  x="1074.94" y="303.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (57 samples, 0.12%)</title><rect x="351.2" y="165" width="1.4" height="15.0" fill="rgb(233,15,4)" rx="2" ry="2" />
<text  x="354.21" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (55 samples, 0.11%)</title><rect x="1129.3" y="389" width="1.3" height="15.0" fill="rgb(245,132,49)" rx="2" ry="2" />
<text  x="1132.30" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (19 samples, 0.04%)</title><rect x="678.3" y="309" width="0.4" height="15.0" fill="rgb(248,22,15)" rx="2" ry="2" />
<text  x="681.28" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="964.6" y="373" width="0.1" height="15.0" fill="rgb(206,41,40)" rx="2" ry="2" />
<text  x="967.58" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.10%)</title><rect x="531.3" y="389" width="1.2" height="15.0" fill="rgb(243,182,25)" rx="2" ry="2" />
<text  x="534.31" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (37 samples, 0.08%)</title><rect x="505.4" y="277" width="0.9" height="15.0" fill="rgb(237,94,37)" rx="2" ry="2" />
<text  x="508.38" y="287.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1,041 samples, 2.15%)</title><rect x="778.7" y="277" width="25.4" height="15.0" fill="rgb(240,111,33)" rx="2" ry="2" />
<text  x="781.71" y="287.5" >a..</text>
</g>
<g >
<title>compact_mutation_state&lt; (93 samples, 0.19%)</title><rect x="302.6" y="245" width="2.3" height="15.0" fill="rgb(229,219,16)" rx="2" ry="2" />
<text  x="305.59" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (62 samples, 0.13%)</title><rect x="687.5" y="485" width="1.5" height="15.0" fill="rgb(225,124,7)" rx="2" ry="2" />
<text  x="690.46" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (5 samples, 0.01%)</title><rect x="697.7" y="421" width="0.2" height="15.0" fill="rgb(211,44,9)" rx="2" ry="2" />
<text  x="700.74" y="431.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,261 samples, 2.61%)</title><rect x="545.8" y="437" width="30.8" height="15.0" fill="rgb(208,34,14)" rx="2" ry="2" />
<text  x="548.84" y="447.5" >qu..</text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (46 samples, 0.10%)</title><rect x="456.7" y="293" width="1.1" height="15.0" fill="rgb(228,13,18)" rx="2" ry="2" />
<text  x="459.72" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (18 samples, 0.04%)</title><rect x="363.6" y="213" width="0.5" height="15.0" fill="rgb(215,105,40)" rx="2" ry="2" />
<text  x="366.61" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (13 samples, 0.03%)</title><rect x="163.7" y="197" width="0.3" height="15.0" fill="rgb(248,36,41)" rx="2" ry="2" />
<text  x="166.66" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (28 samples, 0.06%)</title><rect x="820.5" y="293" width="0.6" height="15.0" fill="rgb(227,72,34)" rx="2" ry="2" />
<text  x="823.47" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="347.7" y="149" width="0.7" height="15.0" fill="rgb(249,15,12)" rx="2" ry="2" />
<text  x="350.67" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (12 samples, 0.02%)</title><rect x="833.1" y="437" width="0.3" height="15.0" fill="rgb(208,173,40)" rx="2" ry="2" />
<text  x="836.07" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (8 samples, 0.02%)</title><rect x="861.6" y="389" width="0.2" height="15.0" fill="rgb(222,190,53)" rx="2" ry="2" />
<text  x="864.63" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (130 samples, 0.27%)</title><rect x="634.6" y="501" width="3.1" height="15.0" fill="rgb(242,222,16)" rx="2" ry="2" />
<text  x="637.55" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="1176.0" y="421" width="0.1" height="15.0" fill="rgb(234,101,16)" rx="2" ry="2" />
<text  x="1178.96" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="202.0" y="133" width="0.1" height="15.0" fill="rgb(231,101,43)" rx="2" ry="2" />
<text  x="204.97" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (31 samples, 0.06%)</title><rect x="1043.7" y="277" width="0.8" height="15.0" fill="rgb(228,154,1)" rx="2" ry="2" />
<text  x="1046.74" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="946.0" y="373" width="0.1" height="15.0" fill="rgb(210,128,8)" rx="2" ry="2" />
<text  x="948.97" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (5 samples, 0.01%)</title><rect x="317.7" y="213" width="0.1" height="15.0" fill="rgb(250,171,44)" rx="2" ry="2" />
<text  x="320.66" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="746.8" y="373" width="0.3" height="15.0" fill="rgb(249,128,29)" rx="2" ry="2" />
<text  x="749.77" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="989.2" y="277" width="0.2" height="15.0" fill="rgb(205,50,29)" rx="2" ry="2" />
<text  x="992.24" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (28 samples, 0.06%)</title><rect x="559.1" y="277" width="0.7" height="15.0" fill="rgb(214,17,7)" rx="2" ry="2" />
<text  x="562.10" y="287.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (31 samples, 0.06%)</title><rect x="331.3" y="181" width="0.8" height="15.0" fill="rgb(209,30,25)" rx="2" ry="2" />
<text  x="334.33" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (19 samples, 0.04%)</title><rect x="316.0" y="181" width="0.5" height="15.0" fill="rgb(243,167,17)" rx="2" ry="2" />
<text  x="319.05" y="191.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (32 samples, 0.07%)</title><rect x="793.4" y="117" width="0.8" height="15.0" fill="rgb(251,199,48)" rx="2" ry="2" />
<text  x="796.44" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="268.1" y="309" width="0.3" height="15.0" fill="rgb(220,72,48)" rx="2" ry="2" />
<text  x="271.12" y="319.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="549.9" y="293" width="0.2" height="15.0" fill="rgb(218,100,43)" rx="2" ry="2" />
<text  x="552.94" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume (5 samples, 0.01%)</title><rect x="386.9" y="229" width="0.1" height="15.0" fill="rgb(215,146,29)" rx="2" ry="2" />
<text  x="389.88" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="1155.9" y="421" width="0.6" height="15.0" fill="rgb(233,214,16)" rx="2" ry="2" />
<text  x="1158.94" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (9 samples, 0.02%)</title><rect x="1030.5" y="165" width="0.2" height="15.0" fill="rgb(215,176,7)" rx="2" ry="2" />
<text  x="1033.46" y="175.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (9 samples, 0.02%)</title><rect x="846.3" y="453" width="0.2" height="15.0" fill="rgb(254,84,34)" rx="2" ry="2" />
<text  x="849.32" y="463.5" ></text>
</g>
<g >
<title>create_partitions (271 samples, 0.56%)</title><rect x="15.1" y="533" width="6.6" height="15.0" fill="rgb(210,29,16)" rx="2" ry="2" />
<text  x="18.08" y="543.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="831.3" y="357" width="0.6" height="15.0" fill="rgb(215,101,29)" rx="2" ry="2" />
<text  x="834.31" y="367.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%)</title><rect x="550.6" y="325" width="1.0" height="15.0" fill="rgb(219,222,26)" rx="2" ry="2" />
<text  x="553.63" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="276.2" y="293" width="0.2" height="15.0" fill="rgb(235,182,35)" rx="2" ry="2" />
<text  x="279.25" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,669 samples, 5.52%)</title><rect x="878.7" y="421" width="65.1" height="15.0" fill="rgb(245,148,33)" rx="2" ry="2" />
<text  x="881.65" y="431.5" >cql3::r..</text>
</g>
<g >
<title>__dynamic_cast (37 samples, 0.08%)</title><rect x="875.9" y="421" width="0.9" height="15.0" fill="rgb(227,150,49)" rx="2" ry="2" />
<text  x="878.94" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (39 samples, 0.08%)</title><rect x="808.5" y="309" width="0.9" height="15.0" fill="rgb(226,96,48)" rx="2" ry="2" />
<text  x="811.48" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="1059.8" y="293" width="0.5" height="15.0" fill="rgb(228,25,43)" rx="2" ry="2" />
<text  x="1062.76" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (302 samples, 0.62%)</title><rect x="1082.1" y="277" width="7.3" height="15.0" fill="rgb(249,150,2)" rx="2" ry="2" />
<text  x="1085.05" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (35 samples, 0.07%)</title><rect x="218.3" y="149" width="0.9" height="15.0" fill="rgb(247,66,30)" rx="2" ry="2" />
<text  x="221.33" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="1159.9" y="405" width="0.2" height="15.0" fill="rgb(236,106,20)" rx="2" ry="2" />
<text  x="1162.92" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="602.1" y="405" width="0.3" height="15.0" fill="rgb(247,218,1)" rx="2" ry="2" />
<text  x="605.05" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (8 samples, 0.02%)</title><rect x="704.9" y="501" width="0.2" height="15.0" fill="rgb(236,120,16)" rx="2" ry="2" />
<text  x="707.90" y="511.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (13 samples, 0.03%)</title><rect x="35.9" y="437" width="0.3" height="15.0" fill="rgb(254,198,15)" rx="2" ry="2" />
<text  x="38.91" y="447.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="939.1" y="373" width="0.9" height="15.0" fill="rgb(206,6,19)" rx="2" ry="2" />
<text  x="942.09" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,565 samples, 9.45%)</title><rect x="141.4" y="309" width="111.5" height="15.0" fill="rgb(237,193,18)" rx="2" ry="2" />
<text  x="144.41" y="319.5" >partition_sna..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (411 samples, 0.85%)</title><rect x="63.0" y="421" width="10.0" height="15.0" fill="rgb(213,64,6)" rx="2" ry="2" />
<text  x="65.99" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (8 samples, 0.02%)</title><rect x="1007.5" y="261" width="0.2" height="15.0" fill="rgb(225,23,11)" rx="2" ry="2" />
<text  x="1010.45" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="18.4" y="245" width="0.1" height="15.0" fill="rgb(205,122,14)" rx="2" ry="2" />
<text  x="21.42" y="255.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (20 samples, 0.04%)</title><rect x="588.9" y="389" width="0.5" height="15.0" fill="rgb(234,109,12)" rx="2" ry="2" />
<text  x="591.89" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="866.0" y="469" width="0.2" height="15.0" fill="rgb(250,202,18)" rx="2" ry="2" />
<text  x="868.98" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="158.1" y="229" width="0.1" height="15.0" fill="rgb(243,38,13)" rx="2" ry="2" />
<text  x="161.07" y="239.5" ></text>
</g>
<g >
<title>row::external_memory_usage (10 samples, 0.02%)</title><rect x="214.3" y="165" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="217.25" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (19 samples, 0.04%)</title><rect x="643.4" y="421" width="0.5" height="15.0" fill="rgb(249,49,27)" rx="2" ry="2" />
<text  x="646.44" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (437 samples, 0.90%)</title><rect x="729.8" y="389" width="10.6" height="15.0" fill="rgb(215,90,41)" rx="2" ry="2" />
<text  x="732.75" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (8 samples, 0.02%)</title><rect x="60.7" y="405" width="0.2" height="15.0" fill="rgb(237,36,29)" rx="2" ry="2" />
<text  x="63.67" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.8" y="293" width="0.3" height="15.0" fill="rgb(226,213,48)" rx="2" ry="2" />
<text  x="1145.80" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="1044.3" y="229" width="0.2" height="15.0" fill="rgb(231,27,24)" rx="2" ry="2" />
<text  x="1047.33" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%)</title><rect x="479.2" y="325" width="0.4" height="15.0" fill="rgb(243,4,46)" rx="2" ry="2" />
<text  x="482.23" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (109 samples, 0.23%)</title><rect x="17.3" y="373" width="2.6" height="15.0" fill="rgb(241,210,46)" rx="2" ry="2" />
<text  x="20.25" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="632.3" y="485" width="0.1" height="15.0" fill="rgb(210,163,27)" rx="2" ry="2" />
<text  x="635.30" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="624.1" y="453" width="0.2" height="15.0" fill="rgb(217,142,9)" rx="2" ry="2" />
<text  x="627.15" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (8 samples, 0.02%)</title><rect x="988.4" y="293" width="0.2" height="15.0" fill="rgb(234,141,15)" rx="2" ry="2" />
<text  x="991.38" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (6 samples, 0.01%)</title><rect x="858.6" y="485" width="0.2" height="15.0" fill="rgb(216,24,34)" rx="2" ry="2" />
<text  x="861.61" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1034.3" y="213" width="0.2" height="15.0" fill="rgb(223,68,12)" rx="2" ry="2" />
<text  x="1037.27" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (30 samples, 0.06%)</title><rect x="1142.4" y="341" width="0.7" height="15.0" fill="rgb(210,206,13)" rx="2" ry="2" />
<text  x="1145.41" y="351.5" ></text>
</g>
<g >
<title>std::__uniq_ptr_impl&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::reset (7 samples, 0.01%)</title><rect x="592.7" y="389" width="0.1" height="15.0" fill="rgb(217,99,6)" rx="2" ry="2" />
<text  x="595.65" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (12 samples, 0.02%)</title><rect x="845.4" y="357" width="0.3" height="15.0" fill="rgb(237,104,41)" rx="2" ry="2" />
<text  x="848.40" y="367.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="218.1" y="133" width="0.2" height="15.0" fill="rgb(211,49,43)" rx="2" ry="2" />
<text  x="221.13" y="143.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="822.9" y="293" width="0.1" height="15.0" fill="rgb(244,205,2)" rx="2" ry="2" />
<text  x="825.86" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%)</title><rect x="1031.3" y="197" width="0.2" height="15.0" fill="rgb(228,39,24)" rx="2" ry="2" />
<text  x="1034.34" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (9 samples, 0.02%)</title><rect x="1103.5" y="341" width="0.2" height="15.0" fill="rgb(249,82,4)" rx="2" ry="2" />
<text  x="1106.46" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="886.0" y="293" width="1.1" height="15.0" fill="rgb(216,24,9)" rx="2" ry="2" />
<text  x="888.98" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (272 samples, 0.56%)</title><rect x="15.1" y="565" width="6.6" height="15.0" fill="rgb(240,114,11)" rx="2" ry="2" />
<text  x="18.08" y="575.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (15 samples, 0.03%)</title><rect x="700.8" y="405" width="0.4" height="15.0" fill="rgb(254,119,14)" rx="2" ry="2" />
<text  x="703.82" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (567 samples, 1.17%)</title><rect x="785.4" y="229" width="13.9" height="15.0" fill="rgb(253,65,52)" rx="2" ry="2" />
<text  x="788.43" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (19 samples, 0.04%)</title><rect x="598.7" y="437" width="0.4" height="15.0" fill="rgb(220,207,29)" rx="2" ry="2" />
<text  x="601.68" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="645.8" y="469" width="0.1" height="15.0" fill="rgb(234,123,26)" rx="2" ry="2" />
<text  x="648.76" y="479.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (109 samples, 0.23%)</title><rect x="1173.7" y="453" width="2.7" height="15.0" fill="rgb(216,103,26)" rx="2" ry="2" />
<text  x="1176.74" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (16 samples, 0.03%)</title><rect x="365.8" y="165" width="0.4" height="15.0" fill="rgb(209,93,30)" rx="2" ry="2" />
<text  x="368.84" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.01%)</title><rect x="1106.9" y="389" width="0.2" height="15.0" fill="rgb(230,72,29)" rx="2" ry="2" />
<text  x="1109.91" y="399.5" ></text>
</g>
<g >
<title>free (7 samples, 0.01%)</title><rect x="394.3" y="197" width="0.2" height="15.0" fill="rgb(247,188,24)" rx="2" ry="2" />
<text  x="397.31" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%)</title><rect x="782.3" y="229" width="0.8" height="15.0" fill="rgb(229,141,37)" rx="2" ry="2" />
<text  x="785.30" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (13 samples, 0.03%)</title><rect x="32.4" y="469" width="0.4" height="15.0" fill="rgb(253,62,1)" rx="2" ry="2" />
<text  x="35.44" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (6 samples, 0.01%)</title><rect x="441.0" y="309" width="0.1" height="15.0" fill="rgb(246,219,28)" rx="2" ry="2" />
<text  x="443.99" y="319.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (6 samples, 0.01%)</title><rect x="1141.6" y="229" width="0.1" height="15.0" fill="rgb(209,122,47)" rx="2" ry="2" />
<text  x="1144.58" y="239.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1141.5" y="469" width="0.8" height="15.0" fill="rgb(207,25,42)" rx="2" ry="2" />
<text  x="1144.46" y="479.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (157 samples, 0.32%)</title><rect x="311.1" y="181" width="3.9" height="15.0" fill="rgb(246,32,31)" rx="2" ry="2" />
<text  x="314.14" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1142.4" y="421" width="0.8" height="15.0" fill="rgb(230,11,25)" rx="2" ry="2" />
<text  x="1145.39" y="431.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="21.4" y="469" width="0.2" height="15.0" fill="rgb(222,116,36)" rx="2" ry="2" />
<text  x="24.38" y="479.5" ></text>
</g>
<g >
<title>[[vdso]] (248 samples, 0.51%)</title><rect x="1179.6" y="613" width="6.1" height="15.0" fill="rgb(253,157,3)" rx="2" ry="2" />
<text  x="1182.65" y="623.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (11 samples, 0.02%)</title><rect x="1049.4" y="277" width="0.3" height="15.0" fill="rgb(238,207,30)" rx="2" ry="2" />
<text  x="1052.40" y="287.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%)</title><rect x="1129.3" y="405" width="1.3" height="15.0" fill="rgb(235,162,24)" rx="2" ry="2" />
<text  x="1132.27" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (9 samples, 0.02%)</title><rect x="66.6" y="389" width="0.2" height="15.0" fill="rgb(244,75,3)" rx="2" ry="2" />
<text  x="69.58" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="856.5" y="421" width="0.2" height="15.0" fill="rgb(213,161,30)" rx="2" ry="2" />
<text  x="859.53" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="1152.9" y="485" width="0.7" height="15.0" fill="rgb(222,208,10)" rx="2" ry="2" />
<text  x="1155.91" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (6 samples, 0.01%)</title><rect x="1165.8" y="469" width="0.1" height="15.0" fill="rgb(210,101,45)" rx="2" ry="2" />
<text  x="1168.80" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="421" width="0.8" height="15.0" fill="rgb(234,95,5)" rx="2" ry="2" />
<text  x="1144.48" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (27 samples, 0.06%)</title><rect x="1065.5" y="293" width="0.7" height="15.0" fill="rgb(215,94,30)" rx="2" ry="2" />
<text  x="1068.52" y="303.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (13 samples, 0.03%)</title><rect x="11.9" y="581" width="0.3" height="15.0" fill="rgb(227,62,28)" rx="2" ry="2" />
<text  x="14.88" y="591.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (242 samples, 0.50%)</title><rect x="680.7" y="485" width="5.9" height="15.0" fill="rgb(219,17,33)" rx="2" ry="2" />
<text  x="683.68" y="495.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (23 samples, 0.05%)</title><rect x="362.9" y="197" width="0.5" height="15.0" fill="rgb(235,160,49)" rx="2" ry="2" />
<text  x="365.86" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (14 samples, 0.03%)</title><rect x="415.9" y="405" width="0.3" height="15.0" fill="rgb(211,174,3)" rx="2" ry="2" />
<text  x="418.87" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="410.2" y="341" width="0.1" height="15.0" fill="rgb(216,151,47)" rx="2" ry="2" />
<text  x="413.15" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,094 samples, 2.26%)</title><rect x="882.9" y="389" width="26.7" height="15.0" fill="rgb(221,221,26)" rx="2" ry="2" />
<text  x="885.90" y="399.5" >_..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (23 samples, 0.05%)</title><rect x="1109.2" y="389" width="0.5" height="15.0" fill="rgb(233,109,8)" rx="2" ry="2" />
<text  x="1112.15" y="399.5" ></text>
</g>
<g >
<title>free (25 samples, 0.05%)</title><rect x="399.5" y="197" width="0.6" height="15.0" fill="rgb(205,211,29)" rx="2" ry="2" />
<text  x="402.48" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.02%)</title><rect x="447.6" y="277" width="0.3" height="15.0" fill="rgb(216,99,0)" rx="2" ry="2" />
<text  x="450.59" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (27 samples, 0.06%)</title><rect x="826.9" y="421" width="0.6" height="15.0" fill="rgb(235,202,51)" rx="2" ry="2" />
<text  x="829.86" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="477.9" y="213" width="0.2" height="15.0" fill="rgb(252,59,16)" rx="2" ry="2" />
<text  x="480.86" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (79 samples, 0.16%)</title><rect x="552.3" y="309" width="1.9" height="15.0" fill="rgb(247,13,52)" rx="2" ry="2" />
<text  x="555.29" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (35 samples, 0.07%)</title><rect x="1082.6" y="245" width="0.8" height="15.0" fill="rgb(221,62,39)" rx="2" ry="2" />
<text  x="1085.59" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (82 samples, 0.17%)</title><rect x="1118.6" y="341" width="2.0" height="15.0" fill="rgb(244,86,17)" rx="2" ry="2" />
<text  x="1121.55" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (133 samples, 0.28%)</title><rect x="945.1" y="405" width="3.3" height="15.0" fill="rgb(227,11,37)" rx="2" ry="2" />
<text  x="948.12" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="653.6" y="485" width="0.2" height="15.0" fill="rgb(250,12,43)" rx="2" ry="2" />
<text  x="656.65" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="40.0" y="453" width="0.3" height="15.0" fill="rgb(214,52,30)" rx="2" ry="2" />
<text  x="42.98" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="979.1" y="357" width="0.1" height="15.0" fill="rgb(226,163,49)" rx="2" ry="2" />
<text  x="982.11" y="367.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="480.9" y="309" width="0.2" height="15.0" fill="rgb(244,179,50)" rx="2" ry="2" />
<text  x="483.89" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="665.0" y="437" width="0.2" height="15.0" fill="rgb(235,202,2)" rx="2" ry="2" />
<text  x="668.00" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="1172.0" y="437" width="0.2" height="15.0" fill="rgb(223,143,44)" rx="2" ry="2" />
<text  x="1174.98" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="661.2" y="485" width="0.2" height="15.0" fill="rgb(254,26,14)" rx="2" ry="2" />
<text  x="664.24" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="485.0" y="309" width="0.1" height="15.0" fill="rgb(241,156,47)" rx="2" ry="2" />
<text  x="488.02" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (37 samples, 0.08%)</title><rect x="275.3" y="293" width="0.9" height="15.0" fill="rgb(209,124,4)" rx="2" ry="2" />
<text  x="278.34" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (139 samples, 0.29%)</title><rect x="539.3" y="373" width="3.4" height="15.0" fill="rgb(211,157,44)" rx="2" ry="2" />
<text  x="542.30" y="383.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="496.6" y="197" width="0.7" height="15.0" fill="rgb(224,29,15)" rx="2" ry="2" />
<text  x="499.62" y="207.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (38 samples, 0.08%)</title><rect x="890.9" y="277" width="0.9" height="15.0" fill="rgb(206,21,41)" rx="2" ry="2" />
<text  x="893.86" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (14 samples, 0.03%)</title><rect x="113.0" y="373" width="0.3" height="15.0" fill="rgb(206,35,26)" rx="2" ry="2" />
<text  x="115.99" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (321 samples, 0.66%)</title><rect x="536.2" y="421" width="7.8" height="15.0" fill="rgb(242,120,15)" rx="2" ry="2" />
<text  x="539.17" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (130 samples, 0.27%)</title><rect x="848.6" y="389" width="3.2" height="15.0" fill="rgb(228,88,6)" rx="2" ry="2" />
<text  x="851.64" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (76 samples, 0.16%)</title><rect x="823.6" y="325" width="1.8" height="15.0" fill="rgb(218,71,16)" rx="2" ry="2" />
<text  x="826.59" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (47 samples, 0.10%)</title><rect x="269.2" y="357" width="1.1" height="15.0" fill="rgb(239,128,25)" rx="2" ry="2" />
<text  x="272.19" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (27 samples, 0.06%)</title><rect x="596.8" y="437" width="0.7" height="15.0" fill="rgb(210,112,15)" rx="2" ry="2" />
<text  x="599.83" y="447.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (60 samples, 0.12%)</title><rect x="537.2" y="373" width="1.5" height="15.0" fill="rgb(220,165,19)" rx="2" ry="2" />
<text  x="540.25" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (15 samples, 0.03%)</title><rect x="471.9" y="213" width="0.3" height="15.0" fill="rgb(239,47,44)" rx="2" ry="2" />
<text  x="474.86" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (60 samples, 0.12%)</title><rect x="735.6" y="325" width="1.4" height="15.0" fill="rgb(219,120,45)" rx="2" ry="2" />
<text  x="738.57" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (38 samples, 0.08%)</title><rect x="942.9" y="373" width="0.9" height="15.0" fill="rgb(214,74,19)" rx="2" ry="2" />
<text  x="945.87" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (26 samples, 0.05%)</title><rect x="685.1" y="453" width="0.7" height="15.0" fill="rgb(217,181,10)" rx="2" ry="2" />
<text  x="688.14" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (8 samples, 0.02%)</title><rect x="1066.3" y="309" width="0.2" height="15.0" fill="rgb(245,61,22)" rx="2" ry="2" />
<text  x="1069.28" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (9 samples, 0.02%)</title><rect x="977.9" y="341" width="0.2" height="15.0" fill="rgb(219,147,10)" rx="2" ry="2" />
<text  x="980.91" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (18 samples, 0.04%)</title><rect x="597.6" y="437" width="0.4" height="15.0" fill="rgb(245,201,37)" rx="2" ry="2" />
<text  x="600.61" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (414 samples, 0.86%)</title><rect x="657.6" y="501" width="10.1" height="15.0" fill="rgb(206,50,51)" rx="2" ry="2" />
<text  x="660.60" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (10 samples, 0.02%)</title><rect x="639.1" y="485" width="0.3" height="15.0" fill="rgb(228,33,17)" rx="2" ry="2" />
<text  x="642.12" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (14 samples, 0.03%)</title><rect x="856.2" y="421" width="0.3" height="15.0" fill="rgb(212,182,5)" rx="2" ry="2" />
<text  x="859.19" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (24 samples, 0.05%)</title><rect x="742.2" y="405" width="0.6" height="15.0" fill="rgb(236,61,38)" rx="2" ry="2" />
<text  x="745.21" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (18 samples, 0.04%)</title><rect x="73.9" y="453" width="0.4" height="15.0" fill="rgb(217,80,43)" rx="2" ry="2" />
<text  x="76.85" y="463.5" ></text>
</g>
<g >
<title>row_cache::make_reader (515 samples, 1.07%)</title><rect x="515.2" y="341" width="12.6" height="15.0" fill="rgb(225,199,42)" rx="2" ry="2" />
<text  x="518.20" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="51.5" y="469" width="0.3" height="15.0" fill="rgb(226,52,15)" rx="2" ry="2" />
<text  x="54.53" y="479.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (752 samples, 1.56%)</title><rect x="123.1" y="309" width="18.3" height="15.0" fill="rgb(248,171,41)" rx="2" ry="2" />
<text  x="126.05" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (431 samples, 0.89%)</title><rect x="639.4" y="485" width="10.5" height="15.0" fill="rgb(226,105,31)" rx="2" ry="2" />
<text  x="642.36" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (39 samples, 0.08%)</title><rect x="549.2" y="309" width="0.9" height="15.0" fill="rgb(249,133,18)" rx="2" ry="2" />
<text  x="552.16" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (45 samples, 0.09%)</title><rect x="404.0" y="245" width="1.1" height="15.0" fill="rgb(245,102,54)" rx="2" ry="2" />
<text  x="406.98" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (45 samples, 0.09%)</title><rect x="203.1" y="149" width="1.1" height="15.0" fill="rgb(212,76,19)" rx="2" ry="2" />
<text  x="206.07" y="159.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%)</title><rect x="642.4" y="437" width="0.2" height="15.0" fill="rgb(230,223,18)" rx="2" ry="2" />
<text  x="645.36" y="447.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="1098.3" y="293" width="0.2" height="15.0" fill="rgb(238,57,0)" rx="2" ry="2" />
<text  x="1101.31" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (29 samples, 0.06%)</title><rect x="326.6" y="181" width="0.7" height="15.0" fill="rgb(212,201,19)" rx="2" ry="2" />
<text  x="329.57" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (35 samples, 0.07%)</title><rect x="794.9" y="133" width="0.9" height="15.0" fill="rgb(235,112,34)" rx="2" ry="2" />
<text  x="797.90" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::stats (32 samples, 0.07%)</title><rect x="144.4" y="245" width="0.8" height="15.0" fill="rgb(236,57,7)" rx="2" ry="2" />
<text  x="147.39" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="497.5" y="229" width="0.1" height="15.0" fill="rgb(209,85,38)" rx="2" ry="2" />
<text  x="500.50" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="389" width="0.8" height="15.0" fill="rgb(206,110,43)" rx="2" ry="2" />
<text  x="1144.48" y="399.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (354 samples, 0.73%)</title><rect x="202.9" y="165" width="8.7" height="15.0" fill="rgb(252,132,47)" rx="2" ry="2" />
<text  x="205.95" y="175.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (12 samples, 0.02%)</title><rect x="218.9" y="117" width="0.3" height="15.0" fill="rgb(220,45,51)" rx="2" ry="2" />
<text  x="221.89" y="127.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="278.0" y="293" width="0.2" height="15.0" fill="rgb(227,220,33)" rx="2" ry="2" />
<text  x="281.01" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (10 samples, 0.02%)</title><rect x="77.6" y="453" width="0.3" height="15.0" fill="rgb(252,133,8)" rx="2" ry="2" />
<text  x="80.64" y="463.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (210 samples, 0.43%)</title><rect x="847.1" y="437" width="5.1" height="15.0" fill="rgb(254,105,40)" rx="2" ry="2" />
<text  x="850.06" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (92 samples, 0.19%)</title><rect x="796.1" y="133" width="2.3" height="15.0" fill="rgb(219,109,9)" rx="2" ry="2" />
<text  x="799.15" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="1043.9" y="261" width="0.6" height="15.0" fill="rgb(245,72,2)" rx="2" ry="2" />
<text  x="1046.89" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,164 samples, 23.10%)</title><rect x="868.6" y="453" width="272.6" height="15.0" fill="rgb(214,92,52)" rx="2" ry="2" />
<text  x="871.57" y="463.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>freeze (11 samples, 0.02%)</title><rect x="1142.8" y="197" width="0.3" height="15.0" fill="rgb(246,134,46)" rx="2" ry="2" />
<text  x="1145.80" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnFamilyName (8 samples, 0.02%)</title><rect x="17.4" y="357" width="0.2" height="15.0" fill="rgb(237,0,53)" rx="2" ry="2" />
<text  x="20.45" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (96 samples, 0.20%)</title><rect x="695.7" y="437" width="2.4" height="15.0" fill="rgb(223,3,38)" rx="2" ry="2" />
<text  x="698.72" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (278 samples, 0.58%)</title><rect x="441.1" y="309" width="6.8" height="15.0" fill="rgb(207,150,13)" rx="2" ry="2" />
<text  x="444.14" y="319.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="776.9" y="277" width="1.3" height="15.0" fill="rgb(213,150,28)" rx="2" ry="2" />
<text  x="779.93" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (113 samples, 0.23%)</title><rect x="836.6" y="389" width="2.7" height="15.0" fill="rgb(227,177,4)" rx="2" ry="2" />
<text  x="839.56" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (20 samples, 0.04%)</title><rect x="1044.7" y="277" width="0.5" height="15.0" fill="rgb(213,184,52)" rx="2" ry="2" />
<text  x="1047.69" y="287.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (45 samples, 0.09%)</title><rect x="67.7" y="389" width="1.1" height="15.0" fill="rgb(243,190,22)" rx="2" ry="2" />
<text  x="70.70" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (34 samples, 0.07%)</title><rect x="285.2" y="389" width="0.9" height="15.0" fill="rgb(246,175,25)" rx="2" ry="2" />
<text  x="288.23" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (14 samples, 0.03%)</title><rect x="135.9" y="245" width="0.4" height="15.0" fill="rgb(245,181,1)" rx="2" ry="2" />
<text  x="138.95" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="101.6" y="389" width="0.4" height="15.0" fill="rgb(221,137,10)" rx="2" ry="2" />
<text  x="104.64" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (17 samples, 0.04%)</title><rect x="1061.4" y="309" width="0.4" height="15.0" fill="rgb(241,50,29)" rx="2" ry="2" />
<text  x="1064.42" y="319.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (8 samples, 0.02%)</title><rect x="16.5" y="245" width="0.2" height="15.0" fill="rgb(248,118,48)" rx="2" ry="2" />
<text  x="19.54" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%)</title><rect x="552.8" y="277" width="0.3" height="15.0" fill="rgb(237,1,51)" rx="2" ry="2" />
<text  x="555.78" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (19 samples, 0.04%)</title><rect x="660.6" y="469" width="0.5" height="15.0" fill="rgb(246,164,9)" rx="2" ry="2" />
<text  x="663.60" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (53 samples, 0.11%)</title><rect x="820.4" y="309" width="1.3" height="15.0" fill="rgb(225,207,32)" rx="2" ry="2" />
<text  x="823.39" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (181 samples, 0.37%)</title><rect x="1061.9" y="309" width="4.4" height="15.0" fill="rgb(226,177,32)" rx="2" ry="2" />
<text  x="1064.86" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="932.9" y="405" width="0.2" height="15.0" fill="rgb(244,86,40)" rx="2" ry="2" />
<text  x="935.88" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (259 samples, 0.54%)</title><rect x="817.0" y="373" width="6.3" height="15.0" fill="rgb(242,11,5)" rx="2" ry="2" />
<text  x="819.97" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="998.6" y="277" width="0.1" height="15.0" fill="rgb(239,102,34)" rx="2" ry="2" />
<text  x="1001.59" y="287.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (11 samples, 0.02%)</title><rect x="596.0" y="405" width="0.3" height="15.0" fill="rgb(241,72,1)" rx="2" ry="2" />
<text  x="599.02" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (14 samples, 0.03%)</title><rect x="136.3" y="245" width="0.3" height="15.0" fill="rgb(219,138,54)" rx="2" ry="2" />
<text  x="139.29" y="255.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%)</title><rect x="854.3" y="469" width="0.1" height="15.0" fill="rgb(241,178,10)" rx="2" ry="2" />
<text  x="857.26" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (5 samples, 0.01%)</title><rect x="102.8" y="405" width="0.1" height="15.0" fill="rgb(211,151,14)" rx="2" ry="2" />
<text  x="105.79" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (229 samples, 0.47%)</title><rect x="1061.1" y="325" width="5.6" height="15.0" fill="rgb(205,141,3)" rx="2" ry="2" />
<text  x="1064.08" y="335.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="491.1" y="261" width="0.2" height="15.0" fill="rgb(208,191,1)" rx="2" ry="2" />
<text  x="494.07" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (12 samples, 0.02%)</title><rect x="15.8" y="277" width="0.3" height="15.0" fill="rgb(244,179,34)" rx="2" ry="2" />
<text  x="18.81" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (14 samples, 0.03%)</title><rect x="1001.8" y="293" width="0.4" height="15.0" fill="rgb(253,137,54)" rx="2" ry="2" />
<text  x="1004.81" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="785.1" y="229" width="0.2" height="15.0" fill="rgb(211,226,28)" rx="2" ry="2" />
<text  x="788.08" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="1076.9" y="293" width="0.4" height="15.0" fill="rgb(214,37,15)" rx="2" ry="2" />
<text  x="1079.92" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (14 samples, 0.03%)</title><rect x="601.5" y="437" width="0.3" height="15.0" fill="rgb(245,128,54)" rx="2" ry="2" />
<text  x="604.47" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="931.4" y="357" width="0.3" height="15.0" fill="rgb(252,79,1)" rx="2" ry="2" />
<text  x="934.44" y="367.5" ></text>
</g>
<g >
<title>database::find_column_family (89 samples, 0.18%)</title><rect x="1058.2" y="341" width="2.1" height="15.0" fill="rgb(248,25,0)" rx="2" ry="2" />
<text  x="1061.17" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (14 samples, 0.03%)</title><rect x="513.5" y="325" width="0.4" height="15.0" fill="rgb(216,91,54)" rx="2" ry="2" />
<text  x="516.51" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="1133.7" y="421" width="0.3" height="15.0" fill="rgb(246,170,20)" rx="2" ry="2" />
<text  x="1136.74" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (6 samples, 0.01%)</title><rect x="15.8" y="245" width="0.2" height="15.0" fill="rgb(214,47,11)" rx="2" ry="2" />
<text  x="18.84" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="433.4" y="261" width="0.3" height="15.0" fill="rgb(222,136,24)" rx="2" ry="2" />
<text  x="436.42" y="271.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (10 samples, 0.02%)</title><rect x="1178.2" y="437" width="0.3" height="15.0" fill="rgb(236,112,20)" rx="2" ry="2" />
<text  x="1181.23" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (20 samples, 0.04%)</title><rect x="68.3" y="373" width="0.5" height="15.0" fill="rgb(220,169,41)" rx="2" ry="2" />
<text  x="71.31" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (431 samples, 0.89%)</title><rect x="667.7" y="501" width="10.5" height="15.0" fill="rgb(245,174,51)" rx="2" ry="2" />
<text  x="670.71" y="511.5" ></text>
</g>
<g >
<title>[perf_simple_query_flame_edaa3b5dc2f0829a1b6381d3b47efde33bef6e97] (5 samples, 0.01%)</title><rect x="177.4" y="101" width="0.1" height="15.0" fill="rgb(238,199,30)" rx="2" ry="2" />
<text  x="180.38" y="111.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="890.4" y="261" width="0.3" height="15.0" fill="rgb(216,98,22)" rx="2" ry="2" />
<text  x="893.45" y="271.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (32 samples, 0.07%)</title><rect x="382.5" y="165" width="0.8" height="15.0" fill="rgb(231,54,30)" rx="2" ry="2" />
<text  x="385.49" y="175.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (26 samples, 0.05%)</title><rect x="797.5" y="101" width="0.6" height="15.0" fill="rgb(206,154,26)" rx="2" ry="2" />
<text  x="800.46" y="111.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (74 samples, 0.15%)</title><rect x="237.4" y="197" width="1.8" height="15.0" fill="rgb(238,14,3)" rx="2" ry="2" />
<text  x="240.40" y="207.5" ></text>
</g>
<g >
<title>schema::get_partitioner (19 samples, 0.04%)</title><rect x="936.0" y="405" width="0.5" height="15.0" fill="rgb(244,33,4)" rx="2" ry="2" />
<text  x="939.03" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (5 samples, 0.01%)</title><rect x="73.6" y="453" width="0.1" height="15.0" fill="rgb(206,136,36)" rx="2" ry="2" />
<text  x="76.56" y="463.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (6 samples, 0.01%)</title><rect x="890.7" y="277" width="0.2" height="15.0" fill="rgb(224,182,14)" rx="2" ry="2" />
<text  x="893.71" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="1047.2" y="213" width="0.4" height="15.0" fill="rgb(205,225,41)" rx="2" ry="2" />
<text  x="1050.21" y="223.5" ></text>
</g>
<g >
<title>__dynamic_cast (20 samples, 0.04%)</title><rect x="640.8" y="469" width="0.5" height="15.0" fill="rgb(247,86,14)" rx="2" ry="2" />
<text  x="643.78" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (79 samples, 0.16%)</title><rect x="659.3" y="485" width="1.9" height="15.0" fill="rgb(235,130,19)" rx="2" ry="2" />
<text  x="662.31" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (25 samples, 0.05%)</title><rect x="645.0" y="437" width="0.6" height="15.0" fill="rgb(229,37,8)" rx="2" ry="2" />
<text  x="648.03" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (23 samples, 0.05%)</title><rect x="502.1" y="245" width="0.5" height="15.0" fill="rgb(248,25,11)" rx="2" ry="2" />
<text  x="505.06" y="255.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (62 samples, 0.13%)</title><rect x="776.8" y="293" width="1.5" height="15.0" fill="rgb(254,228,6)" rx="2" ry="2" />
<text  x="779.83" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="292.1" y="277" width="0.8" height="15.0" fill="rgb(254,131,21)" rx="2" ry="2" />
<text  x="295.12" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (19 samples, 0.04%)</title><rect x="246.4" y="229" width="0.4" height="15.0" fill="rgb(240,158,14)" rx="2" ry="2" />
<text  x="249.36" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (144 samples, 0.30%)</title><rect x="1045.2" y="277" width="3.5" height="15.0" fill="rgb(222,205,37)" rx="2" ry="2" />
<text  x="1048.23" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (23 samples, 0.05%)</title><rect x="229.9" y="229" width="0.6" height="15.0" fill="rgb(221,54,42)" rx="2" ry="2" />
<text  x="232.90" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_S_relocate (6 samples, 0.01%)</title><rect x="18.4" y="261" width="0.1" height="15.0" fill="rgb(206,130,33)" rx="2" ry="2" />
<text  x="21.40" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (8 samples, 0.02%)</title><rect x="386.7" y="229" width="0.2" height="15.0" fill="rgb(237,204,47)" rx="2" ry="2" />
<text  x="389.69" y="239.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (10 samples, 0.02%)</title><rect x="736.4" y="277" width="0.3" height="15.0" fill="rgb(248,113,7)" rx="2" ry="2" />
<text  x="739.44" y="287.5" ></text>
</g>
<g >
<title>schema::column_at (33 samples, 0.07%)</title><rect x="202.1" y="133" width="0.8" height="15.0" fill="rgb(210,224,12)" rx="2" ry="2" />
<text  x="205.14" y="143.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (10 samples, 0.02%)</title><rect x="17.9" y="325" width="0.2" height="15.0" fill="rgb(205,125,47)" rx="2" ry="2" />
<text  x="20.86" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (113 samples, 0.23%)</title><rect x="1130.8" y="405" width="2.7" height="15.0" fill="rgb(239,152,34)" rx="2" ry="2" />
<text  x="1133.76" y="415.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (99 samples, 0.20%)</title><rect x="758.9" y="389" width="2.5" height="15.0" fill="rgb(215,7,45)" rx="2" ry="2" />
<text  x="761.93" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (193 samples, 0.40%)</title><rect x="149.5" y="229" width="4.7" height="15.0" fill="rgb(207,132,35)" rx="2" ry="2" />
<text  x="152.52" y="239.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (5 samples, 0.01%)</title><rect x="938.2" y="405" width="0.2" height="15.0" fill="rgb(244,220,20)" rx="2" ry="2" />
<text  x="941.23" y="415.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="913.2" y="357" width="0.6" height="15.0" fill="rgb(209,90,51)" rx="2" ry="2" />
<text  x="916.20" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (206 samples, 0.43%)</title><rect x="735.2" y="341" width="5.0" height="15.0" fill="rgb(209,45,24)" rx="2" ry="2" />
<text  x="738.15" y="351.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (155 samples, 0.32%)</title><rect x="842.4" y="421" width="3.8" height="15.0" fill="rgb(226,61,24)" rx="2" ry="2" />
<text  x="845.42" y="431.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="511.4" y="325" width="0.8" height="15.0" fill="rgb(224,174,27)" rx="2" ry="2" />
<text  x="514.39" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (21 samples, 0.04%)</title><rect x="226.3" y="165" width="0.5" height="15.0" fill="rgb(245,26,42)" rx="2" ry="2" />
<text  x="229.29" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="448.4" y="309" width="0.7" height="15.0" fill="rgb(249,214,20)" rx="2" ry="2" />
<text  x="451.42" y="319.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.01%)</title><rect x="15.2" y="501" width="0.1" height="15.0" fill="rgb(221,112,45)" rx="2" ry="2" />
<text  x="18.15" y="511.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (43 samples, 0.09%)</title><rect x="520.2" y="277" width="1.0" height="15.0" fill="rgb(219,191,17)" rx="2" ry="2" />
<text  x="523.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (18 samples, 0.04%)</title><rect x="1124.0" y="405" width="0.4" height="15.0" fill="rgb(227,19,48)" rx="2" ry="2" />
<text  x="1127.00" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (24 samples, 0.05%)</title><rect x="1120.7" y="357" width="0.6" height="15.0" fill="rgb(225,28,22)" rx="2" ry="2" />
<text  x="1123.70" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="539.8" y="341" width="0.5" height="15.0" fill="rgb(244,122,19)" rx="2" ry="2" />
<text  x="542.76" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (6 samples, 0.01%)</title><rect x="23.5" y="517" width="0.1" height="15.0" fill="rgb(213,124,20)" rx="2" ry="2" />
<text  x="26.45" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="330.6" y="165" width="0.1" height="15.0" fill="rgb(217,29,23)" rx="2" ry="2" />
<text  x="333.60" y="175.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.18%)</title><rect x="962.1" y="373" width="2.1" height="15.0" fill="rgb(208,153,29)" rx="2" ry="2" />
<text  x="965.09" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (483 samples, 1.00%)</title><rect x="129.1" y="277" width="11.8" height="15.0" fill="rgb(221,26,52)" rx="2" ry="2" />
<text  x="132.06" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="18.4" y="293" width="0.1" height="15.0" fill="rgb(208,145,2)" rx="2" ry="2" />
<text  x="21.38" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="414.0" y="357" width="0.3" height="15.0" fill="rgb(254,222,1)" rx="2" ry="2" />
<text  x="416.99" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (137 samples, 0.28%)</title><rect x="995.4" y="293" width="3.4" height="15.0" fill="rgb(239,59,48)" rx="2" ry="2" />
<text  x="998.44" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (18 samples, 0.04%)</title><rect x="1065.7" y="261" width="0.5" height="15.0" fill="rgb(218,129,47)" rx="2" ry="2" />
<text  x="1068.74" y="271.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.02%)</title><rect x="1142.5" y="277" width="0.2" height="15.0" fill="rgb(238,189,0)" rx="2" ry="2" />
<text  x="1145.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="514.3" y="325" width="0.2" height="15.0" fill="rgb(209,105,48)" rx="2" ry="2" />
<text  x="517.32" y="335.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (10 samples, 0.02%)</title><rect x="1142.0" y="309" width="0.3" height="15.0" fill="rgb(208,93,37)" rx="2" ry="2" />
<text  x="1145.04" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="838.1" y="357" width="0.4" height="15.0" fill="rgb(243,52,43)" rx="2" ry="2" />
<text  x="841.07" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="227.3" y="197" width="0.1" height="15.0" fill="rgb(236,194,40)" rx="2" ry="2" />
<text  x="230.27" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%)</title><rect x="600.3" y="437" width="0.4" height="15.0" fill="rgb(237,26,42)" rx="2" ry="2" />
<text  x="603.34" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (9 samples, 0.02%)</title><rect x="575.8" y="389" width="0.2" height="15.0" fill="rgb(216,92,49)" rx="2" ry="2" />
<text  x="578.75" y="399.5" ></text>
</g>
<g >
<title>operator new (41 samples, 0.08%)</title><rect x="839.5" y="421" width="1.0" height="15.0" fill="rgb(208,189,28)" rx="2" ry="2" />
<text  x="842.54" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (317 samples, 0.66%)</title><rect x="1157.7" y="469" width="7.7" height="15.0" fill="rgb(233,227,35)" rx="2" ry="2" />
<text  x="1160.70" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="1132.7" y="373" width="0.2" height="15.0" fill="rgb(225,18,29)" rx="2" ry="2" />
<text  x="1135.74" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="386.4" y="181" width="0.1" height="15.0" fill="rgb(236,19,10)" rx="2" ry="2" />
<text  x="389.37" y="191.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.01%)</title><rect x="1000.6" y="293" width="0.1" height="15.0" fill="rgb(222,115,35)" rx="2" ry="2" />
<text  x="1003.57" y="303.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (5 samples, 0.01%)</title><rect x="330.9" y="181" width="0.1" height="15.0" fill="rgb(206,62,43)" rx="2" ry="2" />
<text  x="333.87" y="191.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (16 samples, 0.03%)</title><rect x="19.4" y="357" width="0.4" height="15.0" fill="rgb(248,144,15)" rx="2" ry="2" />
<text  x="22.43" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (15 samples, 0.03%)</title><rect x="861.9" y="357" width="0.3" height="15.0" fill="rgb(235,148,46)" rx="2" ry="2" />
<text  x="864.85" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.04%)</title><rect x="199.1" y="117" width="0.4" height="15.0" fill="rgb(222,148,9)" rx="2" ry="2" />
<text  x="202.06" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (16 samples, 0.03%)</title><rect x="860.8" y="469" width="0.4" height="15.0" fill="rgb(206,184,47)" rx="2" ry="2" />
<text  x="863.83" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (27 samples, 0.06%)</title><rect x="837.9" y="373" width="0.6" height="15.0" fill="rgb(209,223,37)" rx="2" ry="2" />
<text  x="840.85" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (23 samples, 0.05%)</title><rect x="1068.7" y="341" width="0.6" height="15.0" fill="rgb(226,1,36)" rx="2" ry="2" />
<text  x="1071.69" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="386.6" y="229" width="0.1" height="15.0" fill="rgb(208,123,14)" rx="2" ry="2" />
<text  x="389.57" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="507.5" y="309" width="0.4" height="15.0" fill="rgb(238,180,48)" rx="2" ry="2" />
<text  x="510.51" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="40.6" y="469" width="0.6" height="15.0" fill="rgb(249,86,53)" rx="2" ry="2" />
<text  x="43.57" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="676.5" y="437" width="0.2" height="15.0" fill="rgb(234,207,37)" rx="2" ry="2" />
<text  x="679.55" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (61 samples, 0.13%)</title><rect x="892.9" y="261" width="1.5" height="15.0" fill="rgb(234,199,53)" rx="2" ry="2" />
<text  x="895.86" y="271.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (44 samples, 0.09%)</title><rect x="1099.3" y="341" width="1.1" height="15.0" fill="rgb(220,93,5)" rx="2" ry="2" />
<text  x="1102.29" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.06%)</title><rect x="718.4" y="325" width="0.6" height="15.0" fill="rgb(238,192,10)" rx="2" ry="2" />
<text  x="721.35" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (302 samples, 0.62%)</title><rect x="985.0" y="341" width="7.4" height="15.0" fill="rgb(237,56,3)" rx="2" ry="2" />
<text  x="987.99" y="351.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (22 samples, 0.05%)</title><rect x="313.2" y="165" width="0.6" height="15.0" fill="rgb(233,123,44)" rx="2" ry="2" />
<text  x="316.22" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (44 samples, 0.09%)</title><rect x="75.3" y="453" width="1.1" height="15.0" fill="rgb(210,179,10)" rx="2" ry="2" />
<text  x="78.29" y="463.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,631 samples, 9.58%)</title><rect x="418.2" y="405" width="113.1" height="15.0" fill="rgb(232,57,7)" rx="2" ry="2" />
<text  x="421.21" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (9 samples, 0.02%)</title><rect x="229.7" y="229" width="0.2" height="15.0" fill="rgb(206,214,11)" rx="2" ry="2" />
<text  x="232.68" y="239.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (93 samples, 0.19%)</title><rect x="901.5" y="325" width="2.3" height="15.0" fill="rgb(231,110,47)" rx="2" ry="2" />
<text  x="904.51" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="983.8" y="277" width="0.1" height="15.0" fill="rgb(215,177,7)" rx="2" ry="2" />
<text  x="986.79" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="1121.1" y="341" width="0.2" height="15.0" fill="rgb(238,96,2)" rx="2" ry="2" />
<text  x="1124.09" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%)</title><rect x="697.6" y="405" width="0.1" height="15.0" fill="rgb(253,161,44)" rx="2" ry="2" />
<text  x="700.57" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (21 samples, 0.04%)</title><rect x="953.0" y="405" width="0.5" height="15.0" fill="rgb(214,155,17)" rx="2" ry="2" />
<text  x="956.03" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (68 samples, 0.14%)</title><rect x="303.2" y="229" width="1.7" height="15.0" fill="rgb(241,211,10)" rx="2" ry="2" />
<text  x="306.21" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1044.5" y="277" width="0.1" height="15.0" fill="rgb(242,125,38)" rx="2" ry="2" />
<text  x="1047.50" y="287.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (67 samples, 0.14%)</title><rect x="10.2" y="581" width="1.7" height="15.0" fill="rgb(236,52,32)" rx="2" ry="2" />
<text  x="13.24" y="591.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (6 samples, 0.01%)</title><rect x="239.4" y="213" width="0.2" height="15.0" fill="rgb(209,143,10)" rx="2" ry="2" />
<text  x="242.43" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="476.7" y="181" width="0.1" height="15.0" fill="rgb(207,166,20)" rx="2" ry="2" />
<text  x="479.72" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (95 samples, 0.20%)</title><rect x="236.9" y="213" width="2.3" height="15.0" fill="rgb(245,0,44)" rx="2" ry="2" />
<text  x="239.89" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="77.3" y="453" width="0.1" height="15.0" fill="rgb(217,98,44)" rx="2" ry="2" />
<text  x="80.29" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="935.8" y="389" width="0.1" height="15.0" fill="rgb(250,168,7)" rx="2" ry="2" />
<text  x="938.77" y="399.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (640 samples, 1.32%)</title><rect x="783.8" y="245" width="15.6" height="15.0" fill="rgb(249,107,30)" rx="2" ry="2" />
<text  x="786.77" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (280 samples, 0.58%)</title><rect x="14.9" y="581" width="6.8" height="15.0" fill="rgb(216,113,4)" rx="2" ry="2" />
<text  x="17.88" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="138.7" y="229" width="0.2" height="15.0" fill="rgb(225,78,22)" rx="2" ry="2" />
<text  x="141.73" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="696.7" y="421" width="0.1" height="15.0" fill="rgb(218,192,3)" rx="2" ry="2" />
<text  x="699.69" y="431.5" ></text>
</g>
<g >
<title>tracing::add_table_name (5 samples, 0.01%)</title><rect x="1141.0" y="437" width="0.2" height="15.0" fill="rgb(247,150,47)" rx="2" ry="2" />
<text  x="1144.04" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="860.9" y="437" width="0.3" height="15.0" fill="rgb(217,15,28)" rx="2" ry="2" />
<text  x="863.95" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="408.7" y="245" width="0.2" height="15.0" fill="rgb(215,196,26)" rx="2" ry="2" />
<text  x="411.74" y="255.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (29 samples, 0.06%)</title><rect x="197.2" y="101" width="0.7" height="15.0" fill="rgb(242,78,7)" rx="2" ry="2" />
<text  x="200.16" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1141.3" y="453" width="0.2" height="15.0" fill="rgb(233,107,4)" rx="2" ry="2" />
<text  x="1144.26" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="416.5" y="405" width="0.3" height="15.0" fill="rgb(215,34,24)" rx="2" ry="2" />
<text  x="419.50" y="415.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="30.9" y="485" width="1.0" height="15.0" fill="rgb(230,200,39)" rx="2" ry="2" />
<text  x="33.93" y="495.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="886.0" y="309" width="1.1" height="15.0" fill="rgb(244,168,33)" rx="2" ry="2" />
<text  x="888.95" y="319.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="898.0" y="277" width="0.2" height="15.0" fill="rgb(252,218,4)" rx="2" ry="2" />
<text  x="901.04" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (180 samples, 0.37%)</title><rect x="222.7" y="197" width="4.3" height="15.0" fill="rgb(253,42,26)" rx="2" ry="2" />
<text  x="225.65" y="207.5" ></text>
</g>
<g >
<title>compound_type&lt; (17 samples, 0.04%)</title><rect x="471.0" y="229" width="0.4" height="15.0" fill="rgb(246,67,54)" rx="2" ry="2" />
<text  x="474.00" y="239.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (12 samples, 0.02%)</title><rect x="332.8" y="181" width="0.3" height="15.0" fill="rgb(232,117,6)" rx="2" ry="2" />
<text  x="335.82" y="191.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="42.9" y="485" width="0.4" height="15.0" fill="rgb(237,218,46)" rx="2" ry="2" />
<text  x="45.87" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (101 samples, 0.21%)</title><rect x="581.8" y="405" width="2.4" height="15.0" fill="rgb(222,111,53)" rx="2" ry="2" />
<text  x="584.76" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1138.6" y="421" width="0.1" height="15.0" fill="rgb(237,172,6)" rx="2" ry="2" />
<text  x="1141.58" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%)</title><rect x="403.2" y="229" width="0.4" height="15.0" fill="rgb(217,161,41)" rx="2" ry="2" />
<text  x="406.22" y="239.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,758 samples, 3.64%)</title><rect x="767.2" y="357" width="42.9" height="15.0" fill="rgb(240,184,41)" rx="2" ry="2" />
<text  x="770.19" y="367.5" >serv..</text>
</g>
<g >
<title>seastar::memory::allocate (138 samples, 0.29%)</title><rect x="1008.0" y="261" width="3.4" height="15.0" fill="rgb(227,134,4)" rx="2" ry="2" />
<text  x="1011.04" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (73 samples, 0.15%)</title><rect x="17.6" y="357" width="1.8" height="15.0" fill="rgb(243,224,31)" rx="2" ry="2" />
<text  x="20.64" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (304 samples, 0.63%)</title><rect x="34.1" y="485" width="7.4" height="15.0" fill="rgb(242,105,26)" rx="2" ry="2" />
<text  x="37.05" y="495.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (8 samples, 0.02%)</title><rect x="1053.0" y="325" width="0.2" height="15.0" fill="rgb(209,224,34)" rx="2" ry="2" />
<text  x="1055.97" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (408 samples, 0.84%)</title><rect x="1178.9" y="629" width="9.9" height="15.0" fill="rgb(212,184,27)" rx="2" ry="2" />
<text  x="1181.87" y="639.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (666 samples, 1.38%)</title><rect x="1022.5" y="245" width="16.3" height="15.0" fill="rgb(215,203,48)" rx="2" ry="2" />
<text  x="1025.52" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (13 samples, 0.03%)</title><rect x="21.8" y="549" width="0.3" height="15.0" fill="rgb(248,26,6)" rx="2" ry="2" />
<text  x="24.82" y="559.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (48 samples, 0.10%)</title><rect x="275.2" y="309" width="1.2" height="15.0" fill="rgb(247,81,32)" rx="2" ry="2" />
<text  x="278.20" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (6 samples, 0.01%)</title><rect x="988.6" y="293" width="0.1" height="15.0" fill="rgb(245,97,3)" rx="2" ry="2" />
<text  x="991.58" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="580.2" y="389" width="0.1" height="15.0" fill="rgb(207,131,43)" rx="2" ry="2" />
<text  x="583.20" y="399.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="624.9" y="485" width="0.5" height="15.0" fill="rgb(213,185,15)" rx="2" ry="2" />
<text  x="627.93" y="495.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.01%)</title><rect x="16.9" y="245" width="0.1" height="15.0" fill="rgb(222,137,5)" rx="2" ry="2" />
<text  x="19.86" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (37 samples, 0.08%)</title><rect x="945.8" y="389" width="1.0" height="15.0" fill="rgb(240,100,49)" rx="2" ry="2" />
<text  x="948.85" y="399.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="608.2" y="421" width="1.0" height="15.0" fill="rgb(250,129,4)" rx="2" ry="2" />
<text  x="611.18" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (17 samples, 0.04%)</title><rect x="695.0" y="437" width="0.4" height="15.0" fill="rgb(231,142,12)" rx="2" ry="2" />
<text  x="698.03" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="1107.5" y="373" width="0.3" height="15.0" fill="rgb(218,27,40)" rx="2" ry="2" />
<text  x="1110.47" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (15 samples, 0.03%)</title><rect x="791.8" y="133" width="0.4" height="15.0" fill="rgb(251,13,46)" rx="2" ry="2" />
<text  x="794.80" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%)</title><rect x="849.6" y="341" width="2.0" height="15.0" fill="rgb(250,226,24)" rx="2" ry="2" />
<text  x="852.62" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (30 samples, 0.06%)</title><rect x="1124.8" y="405" width="0.7" height="15.0" fill="rgb(254,67,4)" rx="2" ry="2" />
<text  x="1127.76" y="415.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (10 samples, 0.02%)</title><rect x="79.0" y="453" width="0.2" height="15.0" fill="rgb(223,162,50)" rx="2" ry="2" />
<text  x="81.98" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (28 samples, 0.06%)</title><rect x="774.1" y="293" width="0.7" height="15.0" fill="rgb(251,59,8)" rx="2" ry="2" />
<text  x="777.10" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="793.2" y="117" width="0.2" height="15.0" fill="rgb(227,104,3)" rx="2" ry="2" />
<text  x="796.22" y="127.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="649.9" y="485" width="0.8" height="15.0" fill="rgb(234,155,4)" rx="2" ry="2" />
<text  x="652.88" y="495.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="153.9" y="197" width="0.3" height="15.0" fill="rgb(238,120,53)" rx="2" ry="2" />
<text  x="156.87" y="207.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1175.7" y="405" width="0.2" height="15.0" fill="rgb(253,135,29)" rx="2" ry="2" />
<text  x="1178.74" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="508.0" y="325" width="0.3" height="15.0" fill="rgb(232,194,9)" rx="2" ry="2" />
<text  x="510.99" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (18 samples, 0.04%)</title><rect x="364.3" y="197" width="0.4" height="15.0" fill="rgb(223,197,4)" rx="2" ry="2" />
<text  x="367.27" y="207.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (65 samples, 0.13%)</title><rect x="565.7" y="373" width="1.6" height="15.0" fill="rgb(249,189,7)" rx="2" ry="2" />
<text  x="568.67" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (15 samples, 0.03%)</title><rect x="1025.0" y="181" width="0.3" height="15.0" fill="rgb(225,98,8)" rx="2" ry="2" />
<text  x="1027.96" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%)</title><rect x="260.1" y="309" width="0.2" height="15.0" fill="rgb(223,65,6)" rx="2" ry="2" />
<text  x="263.13" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="738.2" y="261" width="0.2" height="15.0" fill="rgb(251,83,51)" rx="2" ry="2" />
<text  x="741.20" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (28 samples, 0.06%)</title><rect x="18.6" y="293" width="0.7" height="15.0" fill="rgb(213,155,21)" rx="2" ry="2" />
<text  x="21.57" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (46 samples, 0.10%)</title><rect x="812.9" y="309" width="1.1" height="15.0" fill="rgb(210,78,15)" rx="2" ry="2" />
<text  x="815.90" y="319.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (166 samples, 0.34%)</title><rect x="927.8" y="389" width="4.1" height="15.0" fill="rgb(223,204,50)" rx="2" ry="2" />
<text  x="930.80" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="283.2" y="325" width="0.3" height="15.0" fill="rgb(226,161,21)" rx="2" ry="2" />
<text  x="286.18" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="318.7" y="197" width="0.2" height="15.0" fill="rgb(222,196,24)" rx="2" ry="2" />
<text  x="321.66" y="207.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.03%)</title><rect x="21.8" y="581" width="0.3" height="15.0" fill="rgb(209,135,10)" rx="2" ry="2" />
<text  x="24.82" y="591.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (13 samples, 0.03%)</title><rect x="95.9" y="437" width="0.4" height="15.0" fill="rgb(230,155,40)" rx="2" ry="2" />
<text  x="98.95" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (7 samples, 0.01%)</title><rect x="1156.6" y="421" width="0.2" height="15.0" fill="rgb(227,138,9)" rx="2" ry="2" />
<text  x="1159.60" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="440.2" y="277" width="0.3" height="15.0" fill="rgb(207,202,11)" rx="2" ry="2" />
<text  x="443.24" y="287.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (6 samples, 0.01%)</title><rect x="898.2" y="293" width="0.1" height="15.0" fill="rgb(206,13,41)" rx="2" ry="2" />
<text  x="901.19" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (21 samples, 0.04%)</title><rect x="954.4" y="357" width="0.5" height="15.0" fill="rgb(212,224,30)" rx="2" ry="2" />
<text  x="957.37" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (105 samples, 0.22%)</title><rect x="843.2" y="389" width="2.6" height="15.0" fill="rgb(235,67,41)" rx="2" ry="2" />
<text  x="846.22" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,796 samples, 11.99%)</title><rect x="119.5" y="325" width="141.5" height="15.0" fill="rgb(237,121,52)" rx="2" ry="2" />
<text  x="122.51" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="488.0" y="277" width="0.8" height="15.0" fill="rgb(240,206,3)" rx="2" ry="2" />
<text  x="491.05" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,391 samples, 48.40%)</title><rect x="48.5" y="485" width="571.2" height="15.0" fill="rgb(253,160,21)" rx="2" ry="2" />
<text  x="51.53" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (18 samples, 0.04%)</title><rect x="264.2" y="325" width="0.5" height="15.0" fill="rgb(215,132,0)" rx="2" ry="2" />
<text  x="267.23" y="335.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1000.7" y="293" width="0.2" height="15.0" fill="rgb(222,29,40)" rx="2" ry="2" />
<text  x="1003.74" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="682.9" y="453" width="0.2" height="15.0" fill="rgb(240,62,19)" rx="2" ry="2" />
<text  x="685.92" y="463.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (11 samples, 0.02%)</title><rect x="1156.3" y="405" width="0.2" height="15.0" fill="rgb(215,48,28)" rx="2" ry="2" />
<text  x="1159.26" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (96 samples, 0.20%)</title><rect x="540.3" y="357" width="2.4" height="15.0" fill="rgb(241,197,25)" rx="2" ry="2" />
<text  x="543.35" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (55 samples, 0.11%)</title><rect x="71.7" y="405" width="1.3" height="15.0" fill="rgb(241,156,44)" rx="2" ry="2" />
<text  x="74.65" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.02%)</title><rect x="820.9" y="277" width="0.2" height="15.0" fill="rgb(216,26,44)" rx="2" ry="2" />
<text  x="823.86" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (14 samples, 0.03%)</title><rect x="223.7" y="181" width="0.3" height="15.0" fill="rgb(240,45,27)" rx="2" ry="2" />
<text  x="226.65" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="615.1" y="437" width="0.1" height="15.0" fill="rgb(243,8,49)" rx="2" ry="2" />
<text  x="618.09" y="447.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="246.8" y="229" width="0.2" height="15.0" fill="rgb(252,135,6)" rx="2" ry="2" />
<text  x="249.83" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="701.2" y="421" width="0.1" height="15.0" fill="rgb(239,101,44)" rx="2" ry="2" />
<text  x="704.19" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="647.3" y="437" width="0.4" height="15.0" fill="rgb(215,37,4)" rx="2" ry="2" />
<text  x="650.30" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (203 samples, 0.42%)</title><rect x="1171.4" y="485" width="5.0" height="15.0" fill="rgb(209,183,11)" rx="2" ry="2" />
<text  x="1174.44" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (45 samples, 0.09%)</title><rect x="329.6" y="181" width="1.1" height="15.0" fill="rgb(243,110,6)" rx="2" ry="2" />
<text  x="332.63" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="555.5" y="293" width="0.2" height="15.0" fill="rgb(249,110,53)" rx="2" ry="2" />
<text  x="558.51" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (79 samples, 0.16%)</title><rect x="814.6" y="389" width="2.0" height="15.0" fill="rgb(206,202,23)" rx="2" ry="2" />
<text  x="817.63" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (10 samples, 0.02%)</title><rect x="618.4" y="421" width="0.2" height="15.0" fill="rgb(224,56,12)" rx="2" ry="2" />
<text  x="621.36" y="431.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (24 samples, 0.05%)</title><rect x="721.0" y="293" width="0.6" height="15.0" fill="rgb(253,85,27)" rx="2" ry="2" />
<text  x="724.01" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%)</title><rect x="223.4" y="181" width="0.3" height="15.0" fill="rgb(226,134,53)" rx="2" ry="2" />
<text  x="226.38" y="191.5" ></text>
</g>
<g >
<title>auth::resource::parent (99 samples, 0.20%)</title><rect x="772.6" y="325" width="2.4" height="15.0" fill="rgb(214,165,31)" rx="2" ry="2" />
<text  x="775.61" y="335.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (164 samples, 0.34%)</title><rect x="497.6" y="229" width="4.0" height="15.0" fill="rgb(243,184,52)" rx="2" ry="2" />
<text  x="500.64" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="934.3" y="389" width="0.1" height="15.0" fill="rgb(217,197,22)" rx="2" ry="2" />
<text  x="937.28" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (45 samples, 0.09%)</title><rect x="1050.3" y="293" width="1.1" height="15.0" fill="rgb(225,218,5)" rx="2" ry="2" />
<text  x="1053.33" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="854.7" y="469" width="0.2" height="15.0" fill="rgb(247,115,22)" rx="2" ry="2" />
<text  x="857.67" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (111 samples, 0.23%)</title><rect x="620.3" y="485" width="2.7" height="15.0" fill="rgb(238,40,51)" rx="2" ry="2" />
<text  x="623.29" y="495.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.19%)</title><rect x="954.9" y="405" width="2.3" height="15.0" fill="rgb(249,211,33)" rx="2" ry="2" />
<text  x="957.93" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="788.6" y="197" width="0.3" height="15.0" fill="rgb(209,41,41)" rx="2" ry="2" />
<text  x="791.63" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (32 samples, 0.07%)</title><rect x="1076.1" y="293" width="0.8" height="15.0" fill="rgb(215,177,26)" rx="2" ry="2" />
<text  x="1079.09" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="906.3" y="341" width="0.2" height="15.0" fill="rgb(252,229,43)" rx="2" ry="2" />
<text  x="909.27" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="526.9" y="277" width="0.2" height="15.0" fill="rgb(221,118,13)" rx="2" ry="2" />
<text  x="529.92" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="210.7" y="101" width="0.1" height="15.0" fill="rgb(239,62,32)" rx="2" ry="2" />
<text  x="213.69" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (92 samples, 0.19%)</title><rect x="154.7" y="197" width="2.2" height="15.0" fill="rgb(211,124,32)" rx="2" ry="2" />
<text  x="157.70" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (6 samples, 0.01%)</title><rect x="80.1" y="453" width="0.1" height="15.0" fill="rgb(232,42,15)" rx="2" ry="2" />
<text  x="83.08" y="463.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="1142.3" y="469" width="0.9" height="15.0" fill="rgb(228,52,21)" rx="2" ry="2" />
<text  x="1145.34" y="479.5" ></text>
</g>
<g >
<title>database::find_uuid (221 samples, 0.46%)</title><rect x="750.5" y="389" width="5.4" height="15.0" fill="rgb(220,129,21)" rx="2" ry="2" />
<text  x="753.51" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1029.5" y="133" width="0.2" height="15.0" fill="rgb(222,43,49)" rx="2" ry="2" />
<text  x="1032.53" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (7 samples, 0.01%)</title><rect x="605.1" y="437" width="0.2" height="15.0" fill="rgb(212,127,16)" rx="2" ry="2" />
<text  x="608.13" y="447.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (9 samples, 0.02%)</title><rect x="508.3" y="325" width="0.2" height="15.0" fill="rgb(207,136,53)" rx="2" ry="2" />
<text  x="511.26" y="335.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="108.4" y="421" width="0.2" height="15.0" fill="rgb(231,56,31)" rx="2" ry="2" />
<text  x="111.40" y="431.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="664.7" y="453" width="0.5" height="15.0" fill="rgb(210,213,51)" rx="2" ry="2" />
<text  x="667.66" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (17 samples, 0.04%)</title><rect x="501.2" y="213" width="0.4" height="15.0" fill="rgb(251,220,5)" rx="2" ry="2" />
<text  x="504.16" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (23 samples, 0.05%)</title><rect x="686.8" y="485" width="0.5" height="15.0" fill="rgb(228,113,30)" rx="2" ry="2" />
<text  x="689.78" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="932.4" y="373" width="0.3" height="15.0" fill="rgb(222,69,7)" rx="2" ry="2" />
<text  x="935.42" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="497.4" y="197" width="0.1" height="15.0" fill="rgb(244,68,0)" rx="2" ry="2" />
<text  x="500.37" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (17 samples, 0.04%)</title><rect x="558.7" y="277" width="0.4" height="15.0" fill="rgb(242,69,37)" rx="2" ry="2" />
<text  x="561.69" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="605.9" y="389" width="0.1" height="15.0" fill="rgb(244,170,10)" rx="2" ry="2" />
<text  x="608.86" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="839.6" y="405" width="0.9" height="15.0" fill="rgb(241,151,23)" rx="2" ry="2" />
<text  x="842.58" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (33 samples, 0.07%)</title><rect x="1075.3" y="293" width="0.8" height="15.0" fill="rgb(246,77,40)" rx="2" ry="2" />
<text  x="1078.29" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%)</title><rect x="861.5" y="469" width="0.8" height="15.0" fill="rgb(235,196,26)" rx="2" ry="2" />
<text  x="864.49" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (7 samples, 0.01%)</title><rect x="1177.0" y="437" width="0.2" height="15.0" fill="rgb(227,30,43)" rx="2" ry="2" />
<text  x="1179.99" y="447.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (34 samples, 0.07%)</title><rect x="1141.5" y="405" width="0.8" height="15.0" fill="rgb(226,152,29)" rx="2" ry="2" />
<text  x="1144.48" y="415.5" ></text>
</g>
<g >
<title>operator new (95 samples, 0.20%)</title><rect x="985.3" y="325" width="2.3" height="15.0" fill="rgb(229,54,53)" rx="2" ry="2" />
<text  x="988.28" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (24 samples, 0.05%)</title><rect x="605.4" y="421" width="0.6" height="15.0" fill="rgb(231,173,42)" rx="2" ry="2" />
<text  x="608.45" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::future (5 samples, 0.01%)</title><rect x="964.3" y="373" width="0.1" height="15.0" fill="rgb(213,61,7)" rx="2" ry="2" />
<text  x="967.26" y="383.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (14 samples, 0.03%)</title><rect x="304.5" y="213" width="0.3" height="15.0" fill="rgb(237,116,33)" rx="2" ry="2" />
<text  x="307.50" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (11 samples, 0.02%)</title><rect x="1038.4" y="197" width="0.3" height="15.0" fill="rgb(249,186,28)" rx="2" ry="2" />
<text  x="1041.42" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (7 samples, 0.01%)</title><rect x="901.0" y="277" width="0.2" height="15.0" fill="rgb(239,218,25)" rx="2" ry="2" />
<text  x="904.02" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1138.4" y="421" width="0.2" height="15.0" fill="rgb(249,222,53)" rx="2" ry="2" />
<text  x="1141.43" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%)</title><rect x="844.7" y="357" width="0.5" height="15.0" fill="rgb(244,140,48)" rx="2" ry="2" />
<text  x="847.66" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (11 samples, 0.02%)</title><rect x="1079.8" y="325" width="0.2" height="15.0" fill="rgb(233,35,44)" rx="2" ry="2" />
<text  x="1082.75" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="1133.5" y="421" width="0.2" height="15.0" fill="rgb(245,193,52)" rx="2" ry="2" />
<text  x="1136.52" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (8 samples, 0.02%)</title><rect x="713.2" y="453" width="0.2" height="15.0" fill="rgb(246,52,25)" rx="2" ry="2" />
<text  x="716.18" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="627.4" y="469" width="0.2" height="15.0" fill="rgb(224,62,14)" rx="2" ry="2" />
<text  x="630.45" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (33 samples, 0.07%)</title><rect x="666.8" y="453" width="0.8" height="15.0" fill="rgb(253,47,24)" rx="2" ry="2" />
<text  x="669.81" y="463.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="95.5" y="437" width="0.4" height="15.0" fill="rgb(253,53,20)" rx="2" ry="2" />
<text  x="98.51" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (9 samples, 0.02%)</title><rect x="796.9" y="117" width="0.2" height="15.0" fill="rgb(206,12,33)" rx="2" ry="2" />
<text  x="799.93" y="127.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1122.8" y="373" width="0.3" height="15.0" fill="rgb(209,172,22)" rx="2" ry="2" />
<text  x="1125.80" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (29 samples, 0.06%)</title><rect x="18.5" y="309" width="0.8" height="15.0" fill="rgb(251,120,39)" rx="2" ry="2" />
<text  x="21.55" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (37 samples, 0.08%)</title><rect x="662.5" y="485" width="0.9" height="15.0" fill="rgb(232,224,50)" rx="2" ry="2" />
<text  x="665.48" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (26 samples, 0.05%)</title><rect x="333.1" y="181" width="0.7" height="15.0" fill="rgb(207,183,21)" rx="2" ry="2" />
<text  x="336.12" y="191.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (5 samples, 0.01%)</title><rect x="22.0" y="421" width="0.1" height="15.0" fill="rgb(216,135,36)" rx="2" ry="2" />
<text  x="24.99" y="431.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (35 samples, 0.07%)</title><rect x="1142.4" y="405" width="0.8" height="15.0" fill="rgb(236,68,1)" rx="2" ry="2" />
<text  x="1145.39" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (26 samples, 0.05%)</title><rect x="71.0" y="405" width="0.7" height="15.0" fill="rgb(235,33,43)" rx="2" ry="2" />
<text  x="74.02" y="415.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (41 samples, 0.08%)</title><rect x="786.9" y="149" width="1.0" height="15.0" fill="rgb(230,18,23)" rx="2" ry="2" />
<text  x="789.89" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="44.3" y="485" width="0.2" height="15.0" fill="rgb(218,21,20)" rx="2" ry="2" />
<text  x="47.33" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (7 samples, 0.01%)</title><rect x="1177.0" y="421" width="0.2" height="15.0" fill="rgb(243,35,3)" rx="2" ry="2" />
<text  x="1179.99" y="431.5" ></text>
</g>
<g >
<title>all (48,326 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(242,191,37)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (99 samples, 0.20%)</title><rect x="194.4" y="117" width="2.4" height="15.0" fill="rgb(206,177,22)" rx="2" ry="2" />
<text  x="197.38" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (135 samples, 0.28%)</title><rect x="1019.2" y="229" width="3.3" height="15.0" fill="rgb(237,166,21)" rx="2" ry="2" />
<text  x="1022.20" y="239.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (85 samples, 0.18%)</title><rect x="151.6" y="213" width="2.1" height="15.0" fill="rgb(234,203,8)" rx="2" ry="2" />
<text  x="154.65" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (42 samples, 0.09%)</title><rect x="1064.0" y="261" width="1.1" height="15.0" fill="rgb(212,128,46)" rx="2" ry="2" />
<text  x="1067.03" y="271.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.02%)</title><rect x="35.4" y="453" width="0.3" height="15.0" fill="rgb(247,46,31)" rx="2" ry="2" />
<text  x="38.44" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="904.0" y="341" width="0.3" height="15.0" fill="rgb(236,146,0)" rx="2" ry="2" />
<text  x="907.05" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="278.5" y="293" width="0.2" height="15.0" fill="rgb(242,195,43)" rx="2" ry="2" />
<text  x="281.49" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (16 samples, 0.03%)</title><rect x="737.1" y="277" width="0.4" height="15.0" fill="rgb(246,53,28)" rx="2" ry="2" />
<text  x="740.10" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (14 samples, 0.03%)</title><rect x="327.3" y="181" width="0.3" height="15.0" fill="rgb(239,202,53)" rx="2" ry="2" />
<text  x="330.28" y="191.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (30 samples, 0.06%)</title><rect x="64.9" y="405" width="0.7" height="15.0" fill="rgb(244,47,33)" rx="2" ry="2" />
<text  x="67.87" y="415.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="480.3" y="309" width="0.1" height="15.0" fill="rgb(254,155,38)" rx="2" ry="2" />
<text  x="483.31" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="447.0" y="277" width="0.3" height="15.0" fill="rgb(210,160,29)" rx="2" ry="2" />
<text  x="450.02" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="702.0" y="485" width="0.1" height="15.0" fill="rgb(227,43,54)" rx="2" ry="2" />
<text  x="705.02" y="495.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="45.4" y="469" width="0.1" height="15.0" fill="rgb(253,97,35)" rx="2" ry="2" />
<text  x="48.41" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="815.5" y="357" width="0.1" height="15.0" fill="rgb(228,206,15)" rx="2" ry="2" />
<text  x="818.48" y="367.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (10 samples, 0.02%)</title><rect x="186.7" y="85" width="0.3" height="15.0" fill="rgb(205,199,38)" rx="2" ry="2" />
<text  x="189.73" y="95.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%)</title><rect x="152.6" y="165" width="0.8" height="15.0" fill="rgb(237,181,38)" rx="2" ry="2" />
<text  x="155.60" y="175.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,547 samples, 9.41%)</title><rect x="141.9" y="293" width="111.0" height="15.0" fill="rgb(208,39,37)" rx="2" ry="2" />
<text  x="144.85" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="710.6" y="421" width="0.1" height="15.0" fill="rgb(205,17,43)" rx="2" ry="2" />
<text  x="713.59" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (29 samples, 0.06%)</title><rect x="1000.9" y="293" width="0.7" height="15.0" fill="rgb(247,24,32)" rx="2" ry="2" />
<text  x="1003.94" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (22 samples, 0.05%)</title><rect x="477.2" y="197" width="0.6" height="15.0" fill="rgb(212,41,10)" rx="2" ry="2" />
<text  x="480.23" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,446 samples, 5.06%)</title><rect x="162.0" y="229" width="59.7" height="15.0" fill="rgb(228,17,27)" rx="2" ry="2" />
<text  x="165.00" y="239.5" >partit..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (15 samples, 0.03%)</title><rect x="20.8" y="405" width="0.3" height="15.0" fill="rgb(205,200,31)" rx="2" ry="2" />
<text  x="23.77" y="415.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (135 samples, 0.28%)</title><rect x="523.9" y="309" width="3.3" height="15.0" fill="rgb(210,75,4)" rx="2" ry="2" />
<text  x="526.92" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="943.4" y="325" width="0.4" height="15.0" fill="rgb(205,170,46)" rx="2" ry="2" />
<text  x="946.41" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (6 samples, 0.01%)</title><rect x="1137.7" y="421" width="0.1" height="15.0" fill="rgb(211,18,36)" rx="2" ry="2" />
<text  x="1140.70" y="431.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (11 samples, 0.02%)</title><rect x="835.4" y="437" width="0.3" height="15.0" fill="rgb(222,78,11)" rx="2" ry="2" />
<text  x="838.38" y="447.5" ></text>
</g>
<g >
<title>operator new (94 samples, 0.19%)</title><rect x="971.0" y="357" width="2.3" height="15.0" fill="rgb(247,194,51)" rx="2" ry="2" />
<text  x="974.00" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (20 samples, 0.04%)</title><rect x="285.5" y="373" width="0.4" height="15.0" fill="rgb(254,133,3)" rx="2" ry="2" />
<text  x="288.45" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="573.5" y="357" width="0.4" height="15.0" fill="rgb(209,159,13)" rx="2" ry="2" />
<text  x="576.51" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (240 samples, 0.50%)</title><rect x="221.7" y="229" width="5.9" height="15.0" fill="rgb(240,84,47)" rx="2" ry="2" />
<text  x="224.72" y="239.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (49 samples, 0.10%)</title><rect x="760.0" y="357" width="1.2" height="15.0" fill="rgb(236,10,45)" rx="2" ry="2" />
<text  x="763.03" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (13 samples, 0.03%)</title><rect x="803.4" y="213" width="0.3" height="15.0" fill="rgb(230,95,18)" rx="2" ry="2" />
<text  x="806.40" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="747.3" y="405" width="0.2" height="15.0" fill="rgb(209,207,13)" rx="2" ry="2" />
<text  x="750.34" y="415.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (588 samples, 1.22%)</title><rect x="1081.4" y="309" width="14.3" height="15.0" fill="rgb(217,4,52)" rx="2" ry="2" />
<text  x="1084.39" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="753.3" y="309" width="0.5" height="15.0" fill="rgb(251,90,14)" rx="2" ry="2" />
<text  x="756.34" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (32 samples, 0.07%)</title><rect x="303.7" y="213" width="0.8" height="15.0" fill="rgb(223,159,48)" rx="2" ry="2" />
<text  x="306.72" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="930.3" y="341" width="0.2" height="15.0" fill="rgb(211,84,28)" rx="2" ry="2" />
<text  x="933.34" y="351.5" ></text>
</g>
<g >
<title>db::filter_for_query (24 samples, 0.05%)</title><rect x="1067.7" y="341" width="0.6" height="15.0" fill="rgb(213,127,13)" rx="2" ry="2" />
<text  x="1070.74" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (48 samples, 0.10%)</title><rect x="738.4" y="261" width="1.1" height="15.0" fill="rgb(221,228,30)" rx="2" ry="2" />
<text  x="741.37" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (93 samples, 0.19%)</title><rect x="1121.6" y="405" width="2.2" height="15.0" fill="rgb(222,53,31)" rx="2" ry="2" />
<text  x="1124.56" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="384.4" y="149" width="0.2" height="15.0" fill="rgb(237,20,29)" rx="2" ry="2" />
<text  x="387.42" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (21 samples, 0.04%)</title><rect x="1032.4" y="213" width="0.5" height="15.0" fill="rgb(246,154,12)" rx="2" ry="2" />
<text  x="1035.36" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (51 samples, 0.11%)</title><rect x="147.1" y="245" width="1.3" height="15.0" fill="rgb(221,123,51)" rx="2" ry="2" />
<text  x="150.13" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (45 samples, 0.09%)</title><rect x="782.0" y="245" width="1.1" height="15.0" fill="rgb(208,70,45)" rx="2" ry="2" />
<text  x="784.98" y="255.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (74 samples, 0.15%)</title><rect x="360.6" y="165" width="1.8" height="15.0" fill="rgb(234,195,0)" rx="2" ry="2" />
<text  x="363.64" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="525.7" y="245" width="0.2" height="15.0" fill="rgb(207,119,53)" rx="2" ry="2" />
<text  x="528.72" y="255.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="279.3" y="277" width="1.7" height="15.0" fill="rgb(215,218,35)" rx="2" ry="2" />
<text  x="282.33" y="287.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (13 samples, 0.03%)</title><rect x="904.8" y="357" width="0.3" height="15.0" fill="rgb(250,68,22)" rx="2" ry="2" />
<text  x="907.78" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (12 samples, 0.02%)</title><rect x="909.1" y="373" width="0.3" height="15.0" fill="rgb(240,94,25)" rx="2" ry="2" />
<text  x="912.15" y="383.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,306 samples, 2.70%)</title><rect x="775.5" y="325" width="31.9" height="15.0" fill="rgb(248,86,36)" rx="2" ry="2" />
<text  x="778.49" y="335.5" >st..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="625.3" y="469" width="0.1" height="15.0" fill="rgb(208,97,27)" rx="2" ry="2" />
<text  x="628.27" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (19 samples, 0.04%)</title><rect x="1077.3" y="309" width="0.5" height="15.0" fill="rgb(216,210,15)" rx="2" ry="2" />
<text  x="1080.31" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (14 samples, 0.03%)</title><rect x="555.2" y="293" width="0.3" height="15.0" fill="rgb(207,63,40)" rx="2" ry="2" />
<text  x="558.17" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (19 samples, 0.04%)</title><rect x="755.9" y="405" width="0.5" height="15.0" fill="rgb(231,128,53)" rx="2" ry="2" />
<text  x="758.93" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (142 samples, 0.29%)</title><rect x="216.5" y="165" width="3.5" height="15.0" fill="rgb(240,10,45)" rx="2" ry="2" />
<text  x="219.50" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (15 samples, 0.03%)</title><rect x="32.4" y="485" width="0.4" height="15.0" fill="rgb(214,58,36)" rx="2" ry="2" />
<text  x="35.39" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="333.9" y="181" width="0.1" height="15.0" fill="rgb(205,223,4)" rx="2" ry="2" />
<text  x="336.92" y="191.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1098.5" y="309" width="0.1" height="15.0" fill="rgb(228,113,20)" rx="2" ry="2" />
<text  x="1101.46" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (26 samples, 0.05%)</title><rect x="1152.1" y="469" width="0.7" height="15.0" fill="rgb(235,124,2)" rx="2" ry="2" />
<text  x="1155.13" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (60 samples, 0.12%)</title><rect x="380.8" y="133" width="1.5" height="15.0" fill="rgb(230,69,19)" rx="2" ry="2" />
<text  x="383.83" y="143.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%)</title><rect x="284.8" y="357" width="0.1" height="15.0" fill="rgb(248,110,44)" rx="2" ry="2" />
<text  x="287.77" y="367.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,017 samples, 14.52%)</title><rect x="113.8" y="373" width="171.4" height="15.0" fill="rgb(222,141,53)" rx="2" ry="2" />
<text  x="116.85" y="383.5" >seastar::repeat&lt;mergin..</text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,704 samples, 11.80%)</title><rect x="965.7" y="373" width="139.2" height="15.0" fill="rgb(205,195,12)" rx="2" ry="2" />
<text  x="968.65" y="383.5" >service::storage_..</text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="412.2" y="341" width="0.8" height="15.0" fill="rgb(241,177,48)" rx="2" ry="2" />
<text  x="415.23" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="702.5" y="485" width="0.3" height="15.0" fill="rgb(254,173,35)" rx="2" ry="2" />
<text  x="705.50" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (58 samples, 0.12%)</title><rect x="533.9" y="421" width="1.4" height="15.0" fill="rgb(221,155,16)" rx="2" ry="2" />
<text  x="536.93" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (5 samples, 0.01%)</title><rect x="189.8" y="69" width="0.1" height="15.0" fill="rgb(235,207,32)" rx="2" ry="2" />
<text  x="192.76" y="79.5" ></text>
</g>
<g >
<title>query::querier&lt; (17 samples, 0.04%)</title><rect x="56.4" y="453" width="0.4" height="15.0" fill="rgb(221,39,30)" rx="2" ry="2" />
<text  x="59.37" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (5 samples, 0.01%)</title><rect x="277.9" y="293" width="0.1" height="15.0" fill="rgb(249,207,18)" rx="2" ry="2" />
<text  x="280.88" y="303.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="580.6" y="405" width="0.8" height="15.0" fill="rgb(213,28,42)" rx="2" ry="2" />
<text  x="583.59" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="803.9" y="261" width="0.2" height="15.0" fill="rgb(239,3,53)" rx="2" ry="2" />
<text  x="806.86" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="38.3" y="389" width="0.2" height="15.0" fill="rgb(231,204,1)" rx="2" ry="2" />
<text  x="41.30" y="399.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (15 samples, 0.03%)</title><rect x="619.2" y="437" width="0.3" height="15.0" fill="rgb(212,123,15)" rx="2" ry="2" />
<text  x="622.17" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (14 samples, 0.03%)</title><rect x="16.4" y="261" width="0.4" height="15.0" fill="rgb(239,204,19)" rx="2" ry="2" />
<text  x="19.42" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (9 samples, 0.02%)</title><rect x="233.6" y="261" width="0.2" height="15.0" fill="rgb(222,5,17)" rx="2" ry="2" />
<text  x="236.62" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::consume (5 samples, 0.01%)</title><rect x="678.4" y="277" width="0.1" height="15.0" fill="rgb(217,226,16)" rx="2" ry="2" />
<text  x="681.40" y="287.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (17 samples, 0.04%)</title><rect x="840.8" y="421" width="0.4" height="15.0" fill="rgb(210,194,19)" rx="2" ry="2" />
<text  x="843.83" y="431.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (6 samples, 0.01%)</title><rect x="670.0" y="469" width="0.2" height="15.0" fill="rgb(228,137,5)" rx="2" ry="2" />
<text  x="673.03" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (47 samples, 0.10%)</title><rect x="821.9" y="309" width="1.1" height="15.0" fill="rgb(231,146,18)" rx="2" ry="2" />
<text  x="824.86" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="257.6" y="277" width="0.3" height="15.0" fill="rgb(237,73,37)" rx="2" ry="2" />
<text  x="260.59" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (12 samples, 0.02%)</title><rect x="946.5" y="357" width="0.3" height="15.0" fill="rgb(226,21,20)" rx="2" ry="2" />
<text  x="949.46" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (237 samples, 0.49%)</title><rect x="441.8" y="293" width="5.7" height="15.0" fill="rgb(246,183,11)" rx="2" ry="2" />
<text  x="444.75" y="303.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="45.7" y="501" width="0.4" height="15.0" fill="rgb(223,113,39)" rx="2" ry="2" />
<text  x="48.67" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.8" y="277" width="0.3" height="15.0" fill="rgb(232,121,15)" rx="2" ry="2" />
<text  x="1145.80" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="575.6" y="373" width="0.2" height="15.0" fill="rgb(223,155,40)" rx="2" ry="2" />
<text  x="578.58" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (10 samples, 0.02%)</title><rect x="683.8" y="453" width="0.2" height="15.0" fill="rgb(206,53,40)" rx="2" ry="2" />
<text  x="686.78" y="463.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="143.0" y="261" width="0.2" height="15.0" fill="rgb(233,204,36)" rx="2" ry="2" />
<text  x="146.00" y="271.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%)</title><rect x="952.8" y="405" width="0.1" height="15.0" fill="rgb(242,173,19)" rx="2" ry="2" />
<text  x="955.81" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="420.7" y="357" width="0.2" height="15.0" fill="rgb(248,88,29)" rx="2" ry="2" />
<text  x="423.68" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (19 samples, 0.04%)</title><rect x="838.8" y="341" width="0.4" height="15.0" fill="rgb(247,117,3)" rx="2" ry="2" />
<text  x="841.78" y="351.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="736.7" y="277" width="0.1" height="15.0" fill="rgb(232,200,2)" rx="2" ry="2" />
<text  x="739.69" y="287.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="668.2" y="485" width="0.7" height="15.0" fill="rgb(209,149,1)" rx="2" ry="2" />
<text  x="671.20" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="614.6" y="389" width="0.1" height="15.0" fill="rgb(226,80,54)" rx="2" ry="2" />
<text  x="617.55" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (12 samples, 0.02%)</title><rect x="992.1" y="277" width="0.3" height="15.0" fill="rgb(239,185,10)" rx="2" ry="2" />
<text  x="995.07" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="416.8" y="405" width="0.2" height="15.0" fill="rgb(208,93,50)" rx="2" ry="2" />
<text  x="419.84" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (10 samples, 0.02%)</title><rect x="542.4" y="261" width="0.2" height="15.0" fill="rgb(234,119,25)" rx="2" ry="2" />
<text  x="545.35" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (667 samples, 1.38%)</title><rect x="885.0" y="341" width="16.2" height="15.0" fill="rgb(219,159,40)" rx="2" ry="2" />
<text  x="887.95" y="351.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="830.5" y="389" width="0.1" height="15.0" fill="rgb(241,43,50)" rx="2" ry="2" />
<text  x="833.48" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="213.5" y="133" width="0.1" height="15.0" fill="rgb(231,136,43)" rx="2" ry="2" />
<text  x="216.47" y="143.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="17.3" y="341" width="0.1" height="15.0" fill="rgb(249,94,16)" rx="2" ry="2" />
<text  x="20.30" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="902.4" y="277" width="0.8" height="15.0" fill="rgb(240,157,48)" rx="2" ry="2" />
<text  x="905.44" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="211.6" y="165" width="0.3" height="15.0" fill="rgb(250,14,34)" rx="2" ry="2" />
<text  x="214.64" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (30 samples, 0.06%)</title><rect x="605.3" y="437" width="0.7" height="15.0" fill="rgb(206,226,44)" rx="2" ry="2" />
<text  x="608.30" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (9 samples, 0.02%)</title><rect x="651.5" y="469" width="0.2" height="15.0" fill="rgb(229,88,35)" rx="2" ry="2" />
<text  x="654.47" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (10 samples, 0.02%)</title><rect x="600.1" y="437" width="0.2" height="15.0" fill="rgb(247,126,28)" rx="2" ry="2" />
<text  x="603.10" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (11,042 samples, 22.85%)</title><rect x="870.8" y="437" width="269.6" height="15.0" fill="rgb(205,157,31)" rx="2" ry="2" />
<text  x="873.79" y="447.5" >cql3::statements::select_statement::..</text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="658.0" y="485" width="1.0" height="15.0" fill="rgb(250,61,52)" rx="2" ry="2" />
<text  x="661.02" y="495.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (233 samples, 0.48%)</title><rect x="918.0" y="373" width="5.7" height="15.0" fill="rgb(241,72,26)" rx="2" ry="2" />
<text  x="920.99" y="383.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (20 samples, 0.04%)</title><rect x="14.3" y="613" width="0.5" height="15.0" fill="rgb(220,201,29)" rx="2" ry="2" />
<text  x="17.35" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="528.6" y="341" width="0.1" height="15.0" fill="rgb(239,166,42)" rx="2" ry="2" />
<text  x="531.58" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="972.8" y="325" width="0.5" height="15.0" fill="rgb(216,151,4)" rx="2" ry="2" />
<text  x="975.76" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (61 samples, 0.13%)</title><rect x="15.7" y="373" width="1.5" height="15.0" fill="rgb(221,208,47)" rx="2" ry="2" />
<text  x="18.71" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="545.5" y="421" width="0.2" height="15.0" fill="rgb(238,199,31)" rx="2" ry="2" />
<text  x="548.55" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (84 samples, 0.17%)</title><rect x="982.1" y="325" width="2.0" height="15.0" fill="rgb(240,170,14)" rx="2" ry="2" />
<text  x="985.06" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="1048.7" y="277" width="0.5" height="15.0" fill="rgb(218,35,25)" rx="2" ry="2" />
<text  x="1051.74" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="846.0" y="405" width="0.2" height="15.0" fill="rgb(243,91,27)" rx="2" ry="2" />
<text  x="848.96" y="415.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (12 samples, 0.02%)</title><rect x="44.9" y="485" width="0.3" height="15.0" fill="rgb(230,205,53)" rx="2" ry="2" />
<text  x="47.94" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="1123.2" y="389" width="0.6" height="15.0" fill="rgb(241,5,4)" rx="2" ry="2" />
<text  x="1126.22" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (42 samples, 0.09%)</title><rect x="828.2" y="405" width="1.0" height="15.0" fill="rgb(248,26,36)" rx="2" ry="2" />
<text  x="831.18" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="659.2" y="485" width="0.1" height="15.0" fill="rgb(208,175,6)" rx="2" ry="2" />
<text  x="662.19" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (23 samples, 0.05%)</title><rect x="1025.3" y="181" width="0.6" height="15.0" fill="rgb(219,152,4)" rx="2" ry="2" />
<text  x="1028.33" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (19 samples, 0.04%)</title><rect x="1048.2" y="213" width="0.5" height="15.0" fill="rgb(229,209,22)" rx="2" ry="2" />
<text  x="1051.23" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (41 samples, 0.08%)</title><rect x="644.7" y="453" width="1.0" height="15.0" fill="rgb(237,63,47)" rx="2" ry="2" />
<text  x="647.68" y="463.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="599.3" y="421" width="0.2" height="15.0" fill="rgb(245,206,1)" rx="2" ry="2" />
<text  x="602.27" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (86 samples, 0.18%)</title><rect x="669.4" y="485" width="2.1" height="15.0" fill="rgb(244,144,36)" rx="2" ry="2" />
<text  x="672.42" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (8 samples, 0.02%)</title><rect x="805.1" y="277" width="0.2" height="15.0" fill="rgb(227,156,26)" rx="2" ry="2" />
<text  x="808.11" y="287.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="833.4" y="437" width="0.2" height="15.0" fill="rgb(207,122,46)" rx="2" ry="2" />
<text  x="836.43" y="447.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (7 samples, 0.01%)</title><rect x="505.2" y="245" width="0.1" height="15.0" fill="rgb(226,103,20)" rx="2" ry="2" />
<text  x="508.16" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="258.9" y="277" width="0.3" height="15.0" fill="rgb(216,132,31)" rx="2" ry="2" />
<text  x="261.94" y="287.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (25 samples, 0.05%)</title><rect x="504.6" y="229" width="0.6" height="15.0" fill="rgb(226,149,41)" rx="2" ry="2" />
<text  x="507.55" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (10 samples, 0.02%)</title><rect x="97.6" y="421" width="0.3" height="15.0" fill="rgb(254,120,45)" rx="2" ry="2" />
<text  x="100.61" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (63 samples, 0.13%)</title><rect x="522.2" y="309" width="1.5" height="15.0" fill="rgb(227,180,26)" rx="2" ry="2" />
<text  x="525.18" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%)</title><rect x="589.4" y="405" width="0.2" height="15.0" fill="rgb(229,22,13)" rx="2" ry="2" />
<text  x="592.38" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (21 samples, 0.04%)</title><rect x="761.9" y="341" width="0.5" height="15.0" fill="rgb(205,199,46)" rx="2" ry="2" />
<text  x="764.86" y="351.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (11 samples, 0.02%)</title><rect x="1142.8" y="213" width="0.3" height="15.0" fill="rgb(249,117,45)" rx="2" ry="2" />
<text  x="1145.80" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="806.5" y="261" width="0.1" height="15.0" fill="rgb(232,50,15)" rx="2" ry="2" />
<text  x="809.52" y="271.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (448 samples, 0.93%)</title><rect x="455.7" y="309" width="11.0" height="15.0" fill="rgb(228,113,53)" rx="2" ry="2" />
<text  x="458.74" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="392.9" y="229" width="0.2" height="15.0" fill="rgb(240,147,31)" rx="2" ry="2" />
<text  x="395.87" y="239.5" ></text>
</g>
<g >
<title>database::find_column_family (72 samples, 0.15%)</title><rect x="1017.3" y="245" width="1.8" height="15.0" fill="rgb(209,110,6)" rx="2" ry="2" />
<text  x="1020.32" y="255.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="526.1" y="261" width="0.7" height="15.0" fill="rgb(236,183,20)" rx="2" ry="2" />
<text  x="529.09" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (13 samples, 0.03%)</title><rect x="683.1" y="453" width="0.3" height="15.0" fill="rgb(229,90,0)" rx="2" ry="2" />
<text  x="686.07" y="463.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="522.4" y="293" width="0.2" height="15.0" fill="rgb(230,139,42)" rx="2" ry="2" />
<text  x="525.43" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%)</title><rect x="817.6" y="309" width="1.1" height="15.0" fill="rgb(228,136,7)" rx="2" ry="2" />
<text  x="820.58" y="319.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (170 samples, 0.35%)</title><rect x="461.5" y="277" width="4.2" height="15.0" fill="rgb(216,127,44)" rx="2" ry="2" />
<text  x="464.50" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (18 samples, 0.04%)</title><rect x="230.0" y="213" width="0.5" height="15.0" fill="rgb(242,152,51)" rx="2" ry="2" />
<text  x="233.03" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="507.2" y="293" width="0.2" height="15.0" fill="rgb(217,136,38)" rx="2" ry="2" />
<text  x="510.24" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,423 samples, 5.01%)</title><rect x="162.2" y="213" width="59.2" height="15.0" fill="rgb(208,98,36)" rx="2" ry="2" />
<text  x="165.22" y="223.5" >logall..</text>
</g>
<g >
<title>[unknown] (5 samples, 0.01%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(225,130,24)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (54 samples, 0.11%)</title><rect x="1169.9" y="485" width="1.3" height="15.0" fill="rgb(223,132,19)" rx="2" ry="2" />
<text  x="1172.93" y="495.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (51 samples, 0.11%)</title><rect x="227.6" y="229" width="1.2" height="15.0" fill="rgb(241,167,47)" rx="2" ry="2" />
<text  x="230.58" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%)</title><rect x="500.6" y="181" width="0.4" height="15.0" fill="rgb(225,39,45)" rx="2" ry="2" />
<text  x="503.62" y="191.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (10 samples, 0.02%)</title><rect x="1096.7" y="261" width="0.2" height="15.0" fill="rgb(226,74,7)" rx="2" ry="2" />
<text  x="1099.65" y="271.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (5 samples, 0.01%)</title><rect x="854.6" y="469" width="0.1" height="15.0" fill="rgb(232,215,15)" rx="2" ry="2" />
<text  x="857.55" y="479.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="45.4" y="485" width="0.1" height="15.0" fill="rgb(229,75,14)" rx="2" ry="2" />
<text  x="48.41" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (25 samples, 0.05%)</title><rect x="678.3" y="341" width="0.6" height="15.0" fill="rgb(221,198,20)" rx="2" ry="2" />
<text  x="681.28" y="351.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (57 samples, 0.12%)</title><rect x="100.6" y="405" width="1.4" height="15.0" fill="rgb(219,71,48)" rx="2" ry="2" />
<text  x="103.61" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (74 samples, 0.15%)</title><rect x="1159.5" y="437" width="1.8" height="15.0" fill="rgb(233,103,5)" rx="2" ry="2" />
<text  x="1162.50" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (32 samples, 0.07%)</title><rect x="567.5" y="357" width="0.8" height="15.0" fill="rgb(223,67,35)" rx="2" ry="2" />
<text  x="570.55" y="367.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (9 samples, 0.02%)</title><rect x="898.3" y="293" width="0.3" height="15.0" fill="rgb(224,2,9)" rx="2" ry="2" />
<text  x="901.33" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (90 samples, 0.19%)</title><rect x="982.0" y="341" width="2.2" height="15.0" fill="rgb(231,177,19)" rx="2" ry="2" />
<text  x="984.96" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (6 samples, 0.01%)</title><rect x="1140.0" y="421" width="0.1" height="15.0" fill="rgb(223,226,51)" rx="2" ry="2" />
<text  x="1142.97" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,390 samples, 4.95%)</title><rect x="994.5" y="325" width="58.4" height="15.0" fill="rgb(225,10,23)" rx="2" ry="2" />
<text  x="997.54" y="335.5" >servic..</text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.01%)</title><rect x="617.0" y="389" width="0.2" height="15.0" fill="rgb(213,97,37)" rx="2" ry="2" />
<text  x="620.02" y="399.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (459 samples, 0.95%)</title><rect x="467.6" y="277" width="11.2" height="15.0" fill="rgb(245,207,3)" rx="2" ry="2" />
<text  x="470.58" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%)</title><rect x="658.6" y="469" width="0.4" height="15.0" fill="rgb(208,183,30)" rx="2" ry="2" />
<text  x="661.60" y="479.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (19 samples, 0.04%)</title><rect x="153.8" y="213" width="0.4" height="15.0" fill="rgb(254,1,4)" rx="2" ry="2" />
<text  x="156.77" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (51 samples, 0.11%)</title><rect x="577.4" y="421" width="1.3" height="15.0" fill="rgb(209,151,19)" rx="2" ry="2" />
<text  x="580.44" y="431.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,163 samples, 2.41%)</title><rect x="334.0" y="181" width="28.4" height="15.0" fill="rgb(227,126,16)" rx="2" ry="2" />
<text  x="337.04" y="191.5" >wr..</text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (25 samples, 0.05%)</title><rect x="489.7" y="277" width="0.6" height="15.0" fill="rgb(253,203,5)" rx="2" ry="2" />
<text  x="492.68" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (20 samples, 0.04%)</title><rect x="326.1" y="181" width="0.5" height="15.0" fill="rgb(241,50,7)" rx="2" ry="2" />
<text  x="329.08" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (152 samples, 0.31%)</title><rect x="35.0" y="469" width="3.7" height="15.0" fill="rgb(211,123,23)" rx="2" ry="2" />
<text  x="37.98" y="479.5" ></text>
</g>
<g >
<title>row::external_memory_usage (264 samples, 0.55%)</title><rect x="205.1" y="149" width="6.5" height="15.0" fill="rgb(249,101,10)" rx="2" ry="2" />
<text  x="208.14" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="525.4" y="229" width="0.2" height="15.0" fill="rgb(244,107,5)" rx="2" ry="2" />
<text  x="528.36" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (5 samples, 0.01%)</title><rect x="773.0" y="309" width="0.1" height="15.0" fill="rgb(210,185,21)" rx="2" ry="2" />
<text  x="776.02" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (78 samples, 0.16%)</title><rect x="266.5" y="325" width="1.9" height="15.0" fill="rgb(214,47,48)" rx="2" ry="2" />
<text  x="269.46" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (34 samples, 0.07%)</title><rect x="256.8" y="277" width="0.8" height="15.0" fill="rgb(254,158,20)" rx="2" ry="2" />
<text  x="259.76" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (19 samples, 0.04%)</title><rect x="798.8" y="213" width="0.5" height="15.0" fill="rgb(211,195,22)" rx="2" ry="2" />
<text  x="801.81" y="223.5" ></text>
</g>
<g >
<title>schema::column_at (55 samples, 0.11%)</title><rect x="383.3" y="165" width="1.3" height="15.0" fill="rgb(234,143,11)" rx="2" ry="2" />
<text  x="386.27" y="175.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (9 samples, 0.02%)</title><rect x="426.6" y="341" width="0.2" height="15.0" fill="rgb(218,125,42)" rx="2" ry="2" />
<text  x="429.56" y="351.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,211 samples, 10.78%)</title><rect x="288.1" y="389" width="127.3" height="15.0" fill="rgb(221,61,46)" rx="2" ry="2" />
<text  x="291.12" y="399.5" >query::consume_..</text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="898.8" y="325" width="0.2" height="15.0" fill="rgb(233,163,23)" rx="2" ry="2" />
<text  x="901.82" y="335.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (6 samples, 0.01%)</title><rect x="870.6" y="437" width="0.2" height="15.0" fill="rgb(243,116,20)" rx="2" ry="2" />
<text  x="873.64" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (12 samples, 0.02%)</title><rect x="1042.8" y="277" width="0.3" height="15.0" fill="rgb(253,97,13)" rx="2" ry="2" />
<text  x="1045.79" y="287.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (18 samples, 0.04%)</title><rect x="890.3" y="277" width="0.4" height="15.0" fill="rgb(208,177,44)" rx="2" ry="2" />
<text  x="893.28" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="51.3" y="469" width="0.1" height="15.0" fill="rgb(246,108,23)" rx="2" ry="2" />
<text  x="54.29" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,497 samples, 9.31%)</title><rect x="142.5" y="277" width="109.8" height="15.0" fill="rgb(207,79,22)" rx="2" ry="2" />
<text  x="145.49" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (24 samples, 0.05%)</title><rect x="574.0" y="357" width="0.6" height="15.0" fill="rgb(221,229,6)" rx="2" ry="2" />
<text  x="576.97" y="367.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (8 samples, 0.02%)</title><rect x="1142.1" y="293" width="0.2" height="15.0" fill="rgb(249,9,5)" rx="2" ry="2" />
<text  x="1145.07" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (565 samples, 1.17%)</title><rect x="689.1" y="501" width="13.7" height="15.0" fill="rgb(237,20,37)" rx="2" ry="2" />
<text  x="692.05" y="511.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="631.9" y="485" width="0.4" height="15.0" fill="rgb(210,205,52)" rx="2" ry="2" />
<text  x="634.86" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (244 samples, 0.50%)</title><rect x="432.3" y="293" width="6.0" height="15.0" fill="rgb(248,69,10)" rx="2" ry="2" />
<text  x="435.35" y="303.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,824 samples, 5.84%)</title><rect x="756.6" y="405" width="69.0" height="15.0" fill="rgb(238,145,25)" rx="2" ry="2" />
<text  x="759.64" y="415.5" >service..</text>
</g>
<g >
<title>query::partition_slice::partition_slice (26 samples, 0.05%)</title><rect x="1122.4" y="389" width="0.7" height="15.0" fill="rgb(230,137,14)" rx="2" ry="2" />
<text  x="1125.44" y="399.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (8 samples, 0.02%)</title><rect x="890.1" y="277" width="0.2" height="15.0" fill="rgb(238,170,46)" rx="2" ry="2" />
<text  x="893.08" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (8 samples, 0.02%)</title><rect x="30.7" y="485" width="0.2" height="15.0" fill="rgb(228,221,6)" rx="2" ry="2" />
<text  x="33.73" y="495.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%)</title><rect x="397.9" y="181" width="0.2" height="15.0" fill="rgb(207,194,15)" rx="2" ry="2" />
<text  x="400.95" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (6 samples, 0.01%)</title><rect x="686.1" y="453" width="0.2" height="15.0" fill="rgb(230,85,2)" rx="2" ry="2" />
<text  x="689.14" y="463.5" ></text>
</g>
<g >
<title>auth::resource::resource (49 samples, 0.10%)</title><rect x="761.6" y="373" width="1.2" height="15.0" fill="rgb(216,49,44)" rx="2" ry="2" />
<text  x="764.64" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.04%)</title><rect x="813.1" y="277" width="0.5" height="15.0" fill="rgb(252,58,41)" rx="2" ry="2" />
<text  x="816.09" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (813 samples, 1.68%)</title><rect x="637.7" y="501" width="19.9" height="15.0" fill="rgb(241,211,2)" rx="2" ry="2" />
<text  x="640.73" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (403 samples, 0.83%)</title><rect x="273.2" y="325" width="9.8" height="15.0" fill="rgb(219,153,39)" rx="2" ry="2" />
<text  x="276.17" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (107 samples, 0.22%)</title><rect x="795.8" y="149" width="2.6" height="15.0" fill="rgb(217,147,38)" rx="2" ry="2" />
<text  x="798.83" y="159.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="21.8" y="485" width="0.2" height="15.0" fill="rgb(248,223,39)" rx="2" ry="2" />
<text  x="24.84" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="296.9" y="229" width="0.1" height="15.0" fill="rgb(229,80,31)" rx="2" ry="2" />
<text  x="299.86" y="239.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.01%)</title><rect x="1141.6" y="245" width="0.2" height="15.0" fill="rgb(214,35,25)" rx="2" ry="2" />
<text  x="1144.58" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (114 samples, 0.24%)</title><rect x="811.3" y="341" width="2.8" height="15.0" fill="rgb(206,147,9)" rx="2" ry="2" />
<text  x="814.33" y="351.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (13 samples, 0.03%)</title><rect x="697.2" y="421" width="0.3" height="15.0" fill="rgb(249,212,22)" rx="2" ry="2" />
<text  x="700.18" y="431.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (21 samples, 0.04%)</title><rect x="888.5" y="293" width="0.5" height="15.0" fill="rgb(254,31,39)" rx="2" ry="2" />
<text  x="891.49" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (7 samples, 0.01%)</title><rect x="167.5" y="149" width="0.2" height="15.0" fill="rgb(252,48,18)" rx="2" ry="2" />
<text  x="170.49" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="161.8" y="213" width="0.2" height="15.0" fill="rgb(228,219,7)" rx="2" ry="2" />
<text  x="164.83" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (26 samples, 0.05%)</title><rect x="532.5" y="405" width="0.7" height="15.0" fill="rgb(251,188,8)" rx="2" ry="2" />
<text  x="535.53" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (6 samples, 0.01%)</title><rect x="819.1" y="325" width="0.1" height="15.0" fill="rgb(208,189,7)" rx="2" ry="2" />
<text  x="822.10" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="1115.7" y="357" width="0.2" height="15.0" fill="rgb(218,5,52)" rx="2" ry="2" />
<text  x="1118.72" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (11,255 samples, 23.29%)</title><rect x="866.3" y="469" width="274.9" height="15.0" fill="rgb(205,143,18)" rx="2" ry="2" />
<text  x="869.35" y="479.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="831.3" y="373" width="0.6" height="15.0" fill="rgb(251,94,40)" rx="2" ry="2" />
<text  x="834.28" y="383.5" ></text>
</g>
<g >
<title>std::construct_at&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="15.9" y="229" width="0.1" height="15.0" fill="rgb(241,77,40)" rx="2" ry="2" />
<text  x="18.86" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,265 samples, 12.96%)</title><rect x="706.1" y="501" width="153.0" height="15.0" fill="rgb(254,56,20)" rx="2" ry="2" />
<text  x="709.14" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>operator new (45 samples, 0.09%)</title><rect x="746.1" y="405" width="1.1" height="15.0" fill="rgb(250,62,43)" rx="2" ry="2" />
<text  x="749.07" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (115 samples, 0.24%)</title><rect x="433.7" y="277" width="2.8" height="15.0" fill="rgb(206,23,10)" rx="2" ry="2" />
<text  x="436.74" y="287.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1049.8" y="277" width="0.2" height="15.0" fill="rgb(251,75,39)" rx="2" ry="2" />
<text  x="1052.84" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (8 samples, 0.02%)</title><rect x="697.9" y="421" width="0.2" height="15.0" fill="rgb(249,158,1)" rx="2" ry="2" />
<text  x="700.87" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.05%)</title><rect x="1048.1" y="229" width="0.6" height="15.0" fill="rgb(251,158,11)" rx="2" ry="2" />
<text  x="1051.06" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="410.7" y="357" width="0.1" height="15.0" fill="rgb(224,44,31)" rx="2" ry="2" />
<text  x="413.69" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (8 samples, 0.02%)</title><rect x="521.7" y="309" width="0.2" height="15.0" fill="rgb(215,89,3)" rx="2" ry="2" />
<text  x="524.69" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (67 samples, 0.14%)</title><rect x="730.5" y="341" width="1.7" height="15.0" fill="rgb(224,49,9)" rx="2" ry="2" />
<text  x="733.54" y="351.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (5 samples, 0.01%)</title><rect x="20.6" y="357" width="0.1" height="15.0" fill="rgb(223,187,28)" rx="2" ry="2" />
<text  x="23.62" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,605 samples, 9.53%)</title><rect x="418.8" y="389" width="112.5" height="15.0" fill="rgb(228,142,20)" rx="2" ry="2" />
<text  x="421.85" y="399.5" >std::function..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,241 samples, 2.57%)</title><rect x="171.7" y="133" width="30.3" height="15.0" fill="rgb(208,149,14)" rx="2" ry="2" />
<text  x="174.67" y="143.5" >co..</text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (11 samples, 0.02%)</title><rect x="1063.6" y="277" width="0.3" height="15.0" fill="rgb(249,191,54)" rx="2" ry="2" />
<text  x="1066.64" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (18 samples, 0.04%)</title><rect x="861.8" y="389" width="0.5" height="15.0" fill="rgb(232,121,24)" rx="2" ry="2" />
<text  x="864.83" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (29 samples, 0.06%)</title><rect x="20.5" y="437" width="0.8" height="15.0" fill="rgb(236,112,49)" rx="2" ry="2" />
<text  x="23.55" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (596 samples, 1.23%)</title><rect x="1154.1" y="485" width="14.6" height="15.0" fill="rgb(228,147,4)" rx="2" ry="2" />
<text  x="1157.13" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (9 samples, 0.02%)</title><rect x="163.2" y="197" width="0.2" height="15.0" fill="rgb(238,112,1)" rx="2" ry="2" />
<text  x="166.20" y="207.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,439 samples, 11.25%)</title><rect x="713.5" y="453" width="132.8" height="15.0" fill="rgb(219,102,53)" rx="2" ry="2" />
<text  x="716.52" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,370 samples, 9.04%)</title><rect x="298.4" y="277" width="106.7" height="15.0" fill="rgb(220,222,1)" rx="2" ry="2" />
<text  x="301.37" y="287.5" >flat_mutation..</text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.8" y="309" width="0.3" height="15.0" fill="rgb(209,92,16)" rx="2" ry="2" />
<text  x="1145.80" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="528.7" y="341" width="0.2" height="15.0" fill="rgb(233,11,22)" rx="2" ry="2" />
<text  x="531.75" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (10 samples, 0.02%)</title><rect x="887.2" y="309" width="0.2" height="15.0" fill="rgb(232,163,42)" rx="2" ry="2" />
<text  x="890.20" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (12 samples, 0.02%)</title><rect x="798.4" y="149" width="0.3" height="15.0" fill="rgb(238,229,10)" rx="2" ry="2" />
<text  x="801.44" y="159.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="678.3" y="373" width="0.6" height="15.0" fill="rgb(206,10,41)" rx="2" ry="2" />
<text  x="681.26" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (26 samples, 0.05%)</title><rect x="565.0" y="357" width="0.7" height="15.0" fill="rgb(227,85,52)" rx="2" ry="2" />
<text  x="568.03" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="138.1" y="245" width="0.1" height="15.0" fill="rgb(224,23,38)" rx="2" ry="2" />
<text  x="141.07" y="255.5" ></text>
</g>
<g >
<title>operator delete (41 samples, 0.08%)</title><rect x="611.2" y="373" width="1.0" height="15.0" fill="rgb(242,192,16)" rx="2" ry="2" />
<text  x="614.16" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="563.4" y="309" width="0.1" height="15.0" fill="rgb(216,114,50)" rx="2" ry="2" />
<text  x="566.37" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="900.4" y="293" width="0.1" height="15.0" fill="rgb(229,210,9)" rx="2" ry="2" />
<text  x="903.36" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (55 samples, 0.11%)</title><rect x="560.0" y="277" width="1.3" height="15.0" fill="rgb(225,152,27)" rx="2" ry="2" />
<text  x="562.96" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="21.8" y="533" width="0.3" height="15.0" fill="rgb(232,37,6)" rx="2" ry="2" />
<text  x="24.82" y="543.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,655 samples, 3.42%)</title><rect x="769.3" y="341" width="40.4" height="15.0" fill="rgb(225,38,31)" rx="2" ry="2" />
<text  x="772.29" y="351.5" >ser..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%)</title><rect x="95.2" y="421" width="0.3" height="15.0" fill="rgb(243,67,36)" rx="2" ry="2" />
<text  x="98.19" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (17 samples, 0.04%)</title><rect x="236.1" y="213" width="0.4" height="15.0" fill="rgb(244,90,43)" rx="2" ry="2" />
<text  x="239.06" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (14 samples, 0.03%)</title><rect x="58.3" y="437" width="0.3" height="15.0" fill="rgb(234,49,2)" rx="2" ry="2" />
<text  x="61.27" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (22 samples, 0.05%)</title><rect x="1038.2" y="213" width="0.5" height="15.0" fill="rgb(235,113,37)" rx="2" ry="2" />
<text  x="1041.20" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::run (47,363 samples, 98.01%)</title><rect x="22.2" y="549" width="1156.5" height="15.0" fill="rgb(243,228,27)" rx="2" ry="2" />
<text  x="25.18" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (20 samples, 0.04%)</title><rect x="146.4" y="245" width="0.5" height="15.0" fill="rgb(248,7,49)" rx="2" ry="2" />
<text  x="149.42" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (30 samples, 0.06%)</title><rect x="791.7" y="149" width="0.7" height="15.0" fill="rgb(240,192,9)" rx="2" ry="2" />
<text  x="794.70" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="836.3" y="389" width="0.2" height="15.0" fill="rgb(212,26,3)" rx="2" ry="2" />
<text  x="839.31" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (134 samples, 0.28%)</title><rect x="913.8" y="373" width="3.3" height="15.0" fill="rgb(253,201,52)" rx="2" ry="2" />
<text  x="916.79" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (19 samples, 0.04%)</title><rect x="637.0" y="485" width="0.5" height="15.0" fill="rgb(254,161,3)" rx="2" ry="2" />
<text  x="640.04" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (18 samples, 0.04%)</title><rect x="217.6" y="149" width="0.5" height="15.0" fill="rgb(215,136,37)" rx="2" ry="2" />
<text  x="220.65" y="159.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (47,223 samples, 97.72%)</title><rect x="24.5" y="517" width="1153.0" height="15.0" fill="rgb(248,91,33)" rx="2" ry="2" />
<text  x="27.48" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%)</title><rect x="816.7" y="373" width="0.1" height="15.0" fill="rgb(229,88,4)" rx="2" ry="2" />
<text  x="819.68" y="383.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (49 samples, 0.10%)</title><rect x="238.0" y="165" width="1.2" height="15.0" fill="rgb(212,139,44)" rx="2" ry="2" />
<text  x="241.01" y="175.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (107 samples, 0.22%)</title><rect x="885.3" y="325" width="2.6" height="15.0" fill="rgb(241,65,19)" rx="2" ry="2" />
<text  x="888.32" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (8 samples, 0.02%)</title><rect x="612.4" y="373" width="0.2" height="15.0" fill="rgb(250,65,46)" rx="2" ry="2" />
<text  x="615.36" y="383.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (349 samples, 0.72%)</title><rect x="309.0" y="197" width="8.6" height="15.0" fill="rgb(245,106,33)" rx="2" ry="2" />
<text  x="312.04" y="207.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="616.4" y="389" width="0.5" height="15.0" fill="rgb(249,64,1)" rx="2" ry="2" />
<text  x="619.38" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (54 samples, 0.11%)</title><rect x="1161.4" y="453" width="1.3" height="15.0" fill="rgb(242,187,50)" rx="2" ry="2" />
<text  x="1164.41" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="575.4" y="373" width="0.2" height="15.0" fill="rgb(227,104,15)" rx="2" ry="2" />
<text  x="578.39" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="39.8" y="453" width="0.1" height="15.0" fill="rgb(220,111,39)" rx="2" ry="2" />
<text  x="42.79" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="1076.7" y="277" width="0.2" height="15.0" fill="rgb(229,131,36)" rx="2" ry="2" />
<text  x="1079.70" y="287.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (6 samples, 0.01%)</title><rect x="330.7" y="181" width="0.2" height="15.0" fill="rgb(217,188,3)" rx="2" ry="2" />
<text  x="333.72" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (29 samples, 0.06%)</title><rect x="600.7" y="437" width="0.7" height="15.0" fill="rgb(237,195,14)" rx="2" ry="2" />
<text  x="603.66" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (161 samples, 0.33%)</title><rect x="239.6" y="213" width="3.9" height="15.0" fill="rgb(232,7,47)" rx="2" ry="2" />
<text  x="242.57" y="223.5" ></text>
</g>
<g >
<title>operator new (61 samples, 0.13%)</title><rect x="852.2" y="437" width="1.5" height="15.0" fill="rgb(234,138,7)" rx="2" ry="2" />
<text  x="855.18" y="447.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (7 samples, 0.01%)</title><rect x="1165.6" y="469" width="0.2" height="15.0" fill="rgb(251,125,17)" rx="2" ry="2" />
<text  x="1168.61" y="479.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (125 samples, 0.26%)</title><rect x="1154.6" y="469" width="3.1" height="15.0" fill="rgb(243,182,40)" rx="2" ry="2" />
<text  x="1157.64" y="479.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (14 samples, 0.03%)</title><rect x="1052.3" y="293" width="0.4" height="15.0" fill="rgb(225,110,15)" rx="2" ry="2" />
<text  x="1055.31" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (26 samples, 0.05%)</title><rect x="568.3" y="357" width="0.7" height="15.0" fill="rgb(209,188,21)" rx="2" ry="2" />
<text  x="571.33" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (95 samples, 0.20%)</title><rect x="364.1" y="213" width="2.3" height="15.0" fill="rgb(223,4,53)" rx="2" ry="2" />
<text  x="367.05" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (24 samples, 0.05%)</title><rect x="33.3" y="485" width="0.6" height="15.0" fill="rgb(245,37,46)" rx="2" ry="2" />
<text  x="36.29" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="986.9" y="293" width="0.7" height="15.0" fill="rgb(223,73,14)" rx="2" ry="2" />
<text  x="989.94" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="145.2" y="261" width="0.1" height="15.0" fill="rgb(220,38,36)" rx="2" ry="2" />
<text  x="148.22" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="984.6" y="341" width="0.4" height="15.0" fill="rgb(233,164,23)" rx="2" ry="2" />
<text  x="987.65" y="351.5" ></text>
</g>
<g >
<title>schema::position (6 samples, 0.01%)</title><rect x="936.5" y="405" width="0.2" height="15.0" fill="rgb(241,59,23)" rx="2" ry="2" />
<text  x="939.55" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator::operator* (6 samples, 0.01%)</title><rect x="1067.1" y="325" width="0.1" height="15.0" fill="rgb(228,106,3)" rx="2" ry="2" />
<text  x="1070.08" y="335.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (5 samples, 0.01%)</title><rect x="811.6" y="325" width="0.1" height="15.0" fill="rgb(244,107,42)" rx="2" ry="2" />
<text  x="814.55" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,433 samples, 23.66%)</title><rect x="862.3" y="485" width="279.2" height="15.0" fill="rgb(250,158,6)" rx="2" ry="2" />
<text  x="865.29" y="495.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (8 samples, 0.02%)</title><rect x="140.9" y="277" width="0.1" height="15.0" fill="rgb(239,191,27)" rx="2" ry="2" />
<text  x="143.85" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (15 samples, 0.03%)</title><rect x="900.8" y="293" width="0.4" height="15.0" fill="rgb(246,150,35)" rx="2" ry="2" />
<text  x="903.82" y="303.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (7 samples, 0.01%)</title><rect x="333.8" y="181" width="0.1" height="15.0" fill="rgb(246,154,21)" rx="2" ry="2" />
<text  x="336.75" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="66.8" y="389" width="0.2" height="15.0" fill="rgb(215,89,51)" rx="2" ry="2" />
<text  x="69.80" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (14 samples, 0.03%)</title><rect x="858.3" y="485" width="0.3" height="15.0" fill="rgb(228,126,46)" rx="2" ry="2" />
<text  x="861.26" y="495.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (49 samples, 0.10%)</title><rect x="857.0" y="453" width="1.2" height="15.0" fill="rgb(232,15,51)" rx="2" ry="2" />
<text  x="859.97" y="463.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="602.0" y="421" width="0.4" height="15.0" fill="rgb(220,184,25)" rx="2" ry="2" />
<text  x="605.00" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="32.8" y="485" width="0.5" height="15.0" fill="rgb(254,222,24)" rx="2" ry="2" />
<text  x="35.76" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1148.6" y="485" width="0.2" height="15.0" fill="rgb(230,178,2)" rx="2" ry="2" />
<text  x="1151.61" y="495.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.06%)</title><rect x="656.7" y="421" width="0.8" height="15.0" fill="rgb(227,0,44)" rx="2" ry="2" />
<text  x="659.70" y="431.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (50 samples, 0.10%)</title><rect x="828.0" y="421" width="1.2" height="15.0" fill="rgb(236,89,33)" rx="2" ry="2" />
<text  x="830.99" y="431.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (6 samples, 0.01%)</title><rect x="21.4" y="453" width="0.1" height="15.0" fill="rgb(213,80,50)" rx="2" ry="2" />
<text  x="24.40" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="533.7" y="389" width="0.1" height="15.0" fill="rgb(212,141,41)" rx="2" ry="2" />
<text  x="536.68" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (16 samples, 0.03%)</title><rect x="79.6" y="453" width="0.4" height="15.0" fill="rgb(207,226,11)" rx="2" ry="2" />
<text  x="82.59" y="463.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (8 samples, 0.02%)</title><rect x="385.4" y="213" width="0.2" height="15.0" fill="rgb(226,15,4)" rx="2" ry="2" />
<text  x="388.39" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (65 samples, 0.13%)</title><rect x="1097.0" y="325" width="1.6" height="15.0" fill="rgb(207,198,16)" rx="2" ry="2" />
<text  x="1099.99" y="335.5" ></text>
</g>
<g >
<title>local_schema_registry (7 samples, 0.01%)</title><rect x="961.9" y="373" width="0.2" height="15.0" fill="rgb(246,153,20)" rx="2" ry="2" />
<text  x="964.92" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (103 samples, 0.21%)</title><rect x="655.0" y="485" width="2.6" height="15.0" fill="rgb(220,147,34)" rx="2" ry="2" />
<text  x="658.04" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (38 samples, 0.08%)</title><rect x="1053.2" y="357" width="0.9" height="15.0" fill="rgb(248,54,15)" rx="2" ry="2" />
<text  x="1056.16" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="551.4" y="309" width="0.2" height="15.0" fill="rgb(236,145,30)" rx="2" ry="2" />
<text  x="554.38" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (15 samples, 0.03%)</title><rect x="265.0" y="341" width="0.4" height="15.0" fill="rgb(221,142,44)" rx="2" ry="2" />
<text  x="268.04" y="351.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (39 samples, 0.08%)</title><rect x="930.5" y="341" width="0.9" height="15.0" fill="rgb(209,19,35)" rx="2" ry="2" />
<text  x="933.49" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (7 samples, 0.01%)</title><rect x="792.3" y="133" width="0.1" height="15.0" fill="rgb(221,148,33)" rx="2" ry="2" />
<text  x="795.26" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="99.6" y="373" width="1.0" height="15.0" fill="rgb(225,115,12)" rx="2" ry="2" />
<text  x="102.64" y="383.5" ></text>
</g>
<g >
<title>database::query (151 samples, 0.31%)</title><rect x="41.5" y="501" width="3.7" height="15.0" fill="rgb(245,47,22)" rx="2" ry="2" />
<text  x="44.55" y="511.5" ></text>
</g>
<g >
<title>local_schema_registry (11 samples, 0.02%)</title><rect x="970.6" y="357" width="0.3" height="15.0" fill="rgb(220,8,24)" rx="2" ry="2" />
<text  x="973.58" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (53 samples, 0.11%)</title><rect x="1151.5" y="485" width="1.3" height="15.0" fill="rgb(252,200,51)" rx="2" ry="2" />
<text  x="1154.47" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cfName (5 samples, 0.01%)</title><rect x="17.5" y="341" width="0.1" height="15.0" fill="rgb(223,192,7)" rx="2" ry="2" />
<text  x="20.52" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (11 samples, 0.02%)</title><rect x="157.3" y="213" width="0.3" height="15.0" fill="rgb(224,192,27)" rx="2" ry="2" />
<text  x="160.29" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (139 samples, 0.29%)</title><rect x="154.2" y="229" width="3.4" height="15.0" fill="rgb(240,86,26)" rx="2" ry="2" />
<text  x="157.23" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.01%)</title><rect x="317.8" y="213" width="0.1" height="15.0" fill="rgb(251,45,27)" rx="2" ry="2" />
<text  x="320.78" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (33 samples, 0.07%)</title><rect x="645.9" y="469" width="0.8" height="15.0" fill="rgb(239,205,38)" rx="2" ry="2" />
<text  x="648.88" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (5 samples, 0.01%)</title><rect x="220.8" y="181" width="0.1" height="15.0" fill="rgb(252,0,4)" rx="2" ry="2" />
<text  x="223.77" y="191.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (8 samples, 0.02%)</title><rect x="1079.6" y="325" width="0.2" height="15.0" fill="rgb(207,123,12)" rx="2" ry="2" />
<text  x="1082.56" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%)</title><rect x="1107.6" y="357" width="0.2" height="15.0" fill="rgb(219,150,4)" rx="2" ry="2" />
<text  x="1110.62" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (5 samples, 0.01%)</title><rect x="702.9" y="485" width="0.1" height="15.0" fill="rgb(240,101,46)" rx="2" ry="2" />
<text  x="705.92" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (12 samples, 0.02%)</title><rect x="366.6" y="197" width="0.3" height="15.0" fill="rgb(240,205,40)" rx="2" ry="2" />
<text  x="369.64" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="908.7" y="357" width="0.1" height="15.0" fill="rgb(223,151,53)" rx="2" ry="2" />
<text  x="911.66" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="710.9" y="437" width="0.1" height="15.0" fill="rgb(231,121,26)" rx="2" ry="2" />
<text  x="713.88" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="453" width="0.8" height="15.0" fill="rgb(217,164,7)" rx="2" ry="2" />
<text  x="1144.48" y="463.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (24 samples, 0.05%)</title><rect x="1039.5" y="261" width="0.6" height="15.0" fill="rgb(245,137,29)" rx="2" ry="2" />
<text  x="1042.54" y="271.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (34 samples, 0.07%)</title><rect x="198.2" y="101" width="0.9" height="15.0" fill="rgb(250,12,54)" rx="2" ry="2" />
<text  x="201.23" y="111.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (15 samples, 0.03%)</title><rect x="827.1" y="405" width="0.3" height="15.0" fill="rgb(248,70,45)" rx="2" ry="2" />
<text  x="830.06" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (11 samples, 0.02%)</title><rect x="674.4" y="453" width="0.3" height="15.0" fill="rgb(208,192,32)" rx="2" ry="2" />
<text  x="677.40" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%)</title><rect x="641.4" y="469" width="0.1" height="15.0" fill="rgb(217,17,40)" rx="2" ry="2" />
<text  x="644.39" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="490.2" y="261" width="0.1" height="15.0" fill="rgb(207,84,36)" rx="2" ry="2" />
<text  x="493.17" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (107 samples, 0.22%)</title><rect x="570.6" y="357" width="2.6" height="15.0" fill="rgb(223,185,40)" rx="2" ry="2" />
<text  x="573.63" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="674.7" y="453" width="0.1" height="15.0" fill="rgb(220,195,51)" rx="2" ry="2" />
<text  x="677.67" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (9 samples, 0.02%)</title><rect x="833.6" y="437" width="0.2" height="15.0" fill="rgb(231,171,34)" rx="2" ry="2" />
<text  x="836.58" y="447.5" ></text>
</g>
<g >
<title>database::find_column_family (54 samples, 0.11%)</title><rect x="817.4" y="341" width="1.3" height="15.0" fill="rgb(236,209,16)" rx="2" ry="2" />
<text  x="820.41" y="351.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (28 samples, 0.06%)</title><rect x="623.6" y="485" width="0.7" height="15.0" fill="rgb(219,74,8)" rx="2" ry="2" />
<text  x="626.59" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%)</title><rect x="510.5" y="261" width="0.8" height="15.0" fill="rgb(228,186,23)" rx="2" ry="2" />
<text  x="513.53" y="271.5" ></text>
</g>
<g >
<title>table::set_hit_rate (96 samples, 0.20%)</title><rect x="699.1" y="453" width="2.4" height="15.0" fill="rgb(220,217,9)" rx="2" ry="2" />
<text  x="702.11" y="463.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (13 samples, 0.03%)</title><rect x="370.5" y="181" width="0.4" height="15.0" fill="rgb(217,3,18)" rx="2" ry="2" />
<text  x="373.55" y="191.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (13 samples, 0.03%)</title><rect x="315.0" y="181" width="0.3" height="15.0" fill="rgb(229,205,20)" rx="2" ry="2" />
<text  x="317.97" y="191.5" ></text>
</g>
<g >
<title>__tls_init (18 samples, 0.04%)</title><rect x="143.9" y="245" width="0.4" height="15.0" fill="rgb(233,167,49)" rx="2" ry="2" />
<text  x="146.88" y="255.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (5 samples, 0.01%)</title><rect x="833.8" y="437" width="0.2" height="15.0" fill="rgb(237,54,53)" rx="2" ry="2" />
<text  x="836.85" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (17 samples, 0.04%)</title><rect x="690.7" y="469" width="0.4" height="15.0" fill="rgb(254,174,23)" rx="2" ry="2" />
<text  x="693.66" y="479.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.01%)</title><rect x="690.5" y="469" width="0.1" height="15.0" fill="rgb(225,49,1)" rx="2" ry="2" />
<text  x="693.47" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (430 samples, 0.89%)</title><rect x="691.3" y="469" width="10.5" height="15.0" fill="rgb(254,77,7)" rx="2" ry="2" />
<text  x="694.35" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (56 samples, 0.12%)</title><rect x="1149.2" y="485" width="1.4" height="15.0" fill="rgb(225,80,54)" rx="2" ry="2" />
<text  x="1152.25" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (70 samples, 0.14%)</title><rect x="899.5" y="325" width="1.7" height="15.0" fill="rgb(249,76,51)" rx="2" ry="2" />
<text  x="902.53" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%)</title><rect x="823.0" y="325" width="0.1" height="15.0" fill="rgb(222,103,44)" rx="2" ry="2" />
<text  x="826.01" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (13 samples, 0.03%)</title><rect x="728.1" y="389" width="0.4" height="15.0" fill="rgb(233,122,12)" rx="2" ry="2" />
<text  x="731.14" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="936.8" y="405" width="0.2" height="15.0" fill="rgb(205,173,15)" rx="2" ry="2" />
<text  x="939.81" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (12 samples, 0.02%)</title><rect x="800.2" y="229" width="0.3" height="15.0" fill="rgb(208,221,12)" rx="2" ry="2" />
<text  x="803.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (11 samples, 0.02%)</title><rect x="1177.0" y="469" width="0.3" height="15.0" fill="rgb(234,204,27)" rx="2" ry="2" />
<text  x="1179.99" y="479.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="694.1" y="437" width="0.2" height="15.0" fill="rgb(240,80,20)" rx="2" ry="2" />
<text  x="697.13" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (11 samples, 0.02%)</title><rect x="983.7" y="293" width="0.2" height="15.0" fill="rgb(229,164,39)" rx="2" ry="2" />
<text  x="986.67" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="197.9" y="101" width="0.3" height="15.0" fill="rgb(208,95,16)" rx="2" ry="2" />
<text  x="200.92" y="111.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (22 samples, 0.05%)</title><rect x="293.7" y="293" width="0.5" height="15.0" fill="rgb(216,88,1)" rx="2" ry="2" />
<text  x="296.68" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="661.1" y="469" width="0.1" height="15.0" fill="rgb(231,65,44)" rx="2" ry="2" />
<text  x="664.07" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,981 samples, 6.17%)</title><rect x="980.4" y="357" width="72.8" height="15.0" fill="rgb(246,149,48)" rx="2" ry="2" />
<text  x="983.38" y="367.5" >service:..</text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (9 samples, 0.02%)</title><rect x="366.4" y="213" width="0.2" height="15.0" fill="rgb(253,102,21)" rx="2" ry="2" />
<text  x="369.37" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (68 samples, 0.14%)</title><rect x="249.4" y="213" width="1.7" height="15.0" fill="rgb(213,60,6)" rx="2" ry="2" />
<text  x="252.44" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (67 samples, 0.14%)</title><rect x="1063.6" y="293" width="1.7" height="15.0" fill="rgb(238,199,22)" rx="2" ry="2" />
<text  x="1066.64" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (35 samples, 0.07%)</title><rect x="715.5" y="405" width="0.9" height="15.0" fill="rgb(213,216,54)" rx="2" ry="2" />
<text  x="718.54" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (14 samples, 0.03%)</title><rect x="861.9" y="341" width="0.3" height="15.0" fill="rgb(237,12,38)" rx="2" ry="2" />
<text  x="864.88" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (17 samples, 0.04%)</title><rect x="937.5" y="405" width="0.4" height="15.0" fill="rgb(248,56,35)" rx="2" ry="2" />
<text  x="940.52" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (17 samples, 0.04%)</title><rect x="824.6" y="309" width="0.4" height="15.0" fill="rgb(224,116,19)" rx="2" ry="2" />
<text  x="827.57" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (80 samples, 0.17%)</title><rect x="299.3" y="261" width="2.0" height="15.0" fill="rgb(216,76,23)" rx="2" ry="2" />
<text  x="302.32" y="271.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.17%)</title><rect x="996.2" y="261" width="2.0" height="15.0" fill="rgb(242,163,5)" rx="2" ry="2" />
<text  x="999.22" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="78.5" y="453" width="0.5" height="15.0" fill="rgb(246,133,50)" rx="2" ry="2" />
<text  x="81.49" y="463.5" ></text>
</g>
<g >
<title>table::make_reader (4,501 samples, 9.31%)</title><rect x="421.3" y="357" width="109.9" height="15.0" fill="rgb(228,90,9)" rx="2" ry="2" />
<text  x="424.26" y="367.5" >table::make_r..</text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%)</title><rect x="225.9" y="117" width="0.2" height="15.0" fill="rgb(216,78,38)" rx="2" ry="2" />
<text  x="228.92" y="127.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (43 samples, 0.09%)</title><rect x="1006.6" y="277" width="1.1" height="15.0" fill="rgb(224,159,15)" rx="2" ry="2" />
<text  x="1009.60" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,213 samples, 6.65%)</title><rect x="747.6" y="421" width="78.5" height="15.0" fill="rgb(236,183,31)" rx="2" ry="2" />
<text  x="750.63" y="431.5" >cql3::sta..</text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (46 samples, 0.10%)</title><rect x="496.4" y="213" width="1.1" height="15.0" fill="rgb(232,192,49)" rx="2" ry="2" />
<text  x="499.37" y="223.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.02%)</title><rect x="602.4" y="421" width="0.2" height="15.0" fill="rgb(223,163,12)" rx="2" ry="2" />
<text  x="605.44" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (12 samples, 0.02%)</title><rect x="645.3" y="405" width="0.3" height="15.0" fill="rgb(224,181,6)" rx="2" ry="2" />
<text  x="648.34" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (29 samples, 0.06%)</title><rect x="561.3" y="293" width="0.7" height="15.0" fill="rgb(208,97,33)" rx="2" ry="2" />
<text  x="564.32" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (47 samples, 0.10%)</title><rect x="946.8" y="389" width="1.1" height="15.0" fill="rgb(242,216,13)" rx="2" ry="2" />
<text  x="949.75" y="399.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (99 samples, 0.20%)</title><rect x="615.9" y="421" width="2.5" height="15.0" fill="rgb(233,5,22)" rx="2" ry="2" />
<text  x="618.94" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1142.4" y="389" width="0.8" height="15.0" fill="rgb(215,168,50)" rx="2" ry="2" />
<text  x="1145.41" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (12 samples, 0.02%)</title><rect x="593.7" y="437" width="0.3" height="15.0" fill="rgb(241,42,31)" rx="2" ry="2" />
<text  x="596.68" y="447.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (41 samples, 0.08%)</title><rect x="1166.4" y="453" width="1.0" height="15.0" fill="rgb(242,75,47)" rx="2" ry="2" />
<text  x="1169.41" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="627.6" y="485" width="0.3" height="15.0" fill="rgb(212,73,20)" rx="2" ry="2" />
<text  x="630.62" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (104 samples, 0.22%)</title><rect x="502.6" y="245" width="2.6" height="15.0" fill="rgb(216,113,28)" rx="2" ry="2" />
<text  x="505.62" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (23 samples, 0.05%)</title><rect x="140.1" y="261" width="0.6" height="15.0" fill="rgb(226,204,54)" rx="2" ry="2" />
<text  x="143.15" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (15 samples, 0.03%)</title><rect x="208.8" y="101" width="0.4" height="15.0" fill="rgb(218,55,44)" rx="2" ry="2" />
<text  x="211.81" y="111.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="565.1" y="341" width="0.5" height="15.0" fill="rgb(205,143,46)" rx="2" ry="2" />
<text  x="568.08" y="351.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (117 samples, 0.24%)</title><rect x="594.0" y="437" width="2.8" height="15.0" fill="rgb(234,37,10)" rx="2" ry="2" />
<text  x="596.97" y="447.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (109 samples, 0.23%)</title><rect x="240.0" y="197" width="2.6" height="15.0" fill="rgb(206,123,19)" rx="2" ry="2" />
<text  x="242.99" y="207.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (10 samples, 0.02%)</title><rect x="718.8" y="293" width="0.2" height="15.0" fill="rgb(229,125,40)" rx="2" ry="2" />
<text  x="721.77" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (11 samples, 0.02%)</title><rect x="721.6" y="357" width="0.3" height="15.0" fill="rgb(215,32,24)" rx="2" ry="2" />
<text  x="724.62" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.02%)</title><rect x="15.8" y="309" width="0.3" height="15.0" fill="rgb(239,147,37)" rx="2" ry="2" />
<text  x="18.81" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="925.3" y="357" width="0.2" height="15.0" fill="rgb(232,183,32)" rx="2" ry="2" />
<text  x="928.34" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (41 samples, 0.08%)</title><rect x="946.8" y="373" width="1.0" height="15.0" fill="rgb(231,159,15)" rx="2" ry="2" />
<text  x="949.83" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="526.1" y="245" width="0.7" height="15.0" fill="rgb(227,157,52)" rx="2" ry="2" />
<text  x="529.09" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (94 samples, 0.19%)</title><rect x="737.7" y="293" width="2.3" height="15.0" fill="rgb(217,15,52)" rx="2" ry="2" />
<text  x="740.71" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,235 samples, 2.56%)</title><rect x="1146.2" y="501" width="30.2" height="15.0" fill="rgb(229,222,53)" rx="2" ry="2" />
<text  x="1149.24" y="511.5" >se..</text>
</g>
<g >
<title>auth::resource::resource (104 samples, 0.22%)</title><rect x="761.4" y="389" width="2.5" height="15.0" fill="rgb(254,124,2)" rx="2" ry="2" />
<text  x="764.35" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="268.9" y="341" width="0.3" height="15.0" fill="rgb(234,134,53)" rx="2" ry="2" />
<text  x="271.95" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (11 samples, 0.02%)</title><rect x="998.2" y="261" width="0.3" height="15.0" fill="rgb(205,200,5)" rx="2" ry="2" />
<text  x="1001.25" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (43 samples, 0.09%)</title><rect x="976.6" y="309" width="1.0" height="15.0" fill="rgb(238,22,43)" rx="2" ry="2" />
<text  x="979.59" y="319.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1031.0" y="181" width="0.3" height="15.0" fill="rgb(205,176,3)" rx="2" ry="2" />
<text  x="1034.02" y="191.5" ></text>
</g>
<g >
<title>database::find_column_family (52 samples, 0.11%)</title><rect x="749.2" y="373" width="1.2" height="15.0" fill="rgb(241,218,32)" rx="2" ry="2" />
<text  x="752.17" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (173 samples, 0.36%)</title><rect x="1090.7" y="261" width="4.2" height="15.0" fill="rgb(206,221,41)" rx="2" ry="2" />
<text  x="1093.67" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (6 samples, 0.01%)</title><rect x="22.0" y="469" width="0.1" height="15.0" fill="rgb(211,100,4)" rx="2" ry="2" />
<text  x="24.99" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (19 samples, 0.04%)</title><rect x="731.4" y="293" width="0.5" height="15.0" fill="rgb(212,223,2)" rx="2" ry="2" />
<text  x="734.39" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (11 samples, 0.02%)</title><rect x="644.7" y="437" width="0.3" height="15.0" fill="rgb(233,203,7)" rx="2" ry="2" />
<text  x="647.71" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (156 samples, 0.32%)</title><rect x="248.0" y="245" width="3.8" height="15.0" fill="rgb(221,2,28)" rx="2" ry="2" />
<text  x="251.02" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (35 samples, 0.07%)</title><rect x="954.0" y="373" width="0.9" height="15.0" fill="rgb(246,55,29)" rx="2" ry="2" />
<text  x="957.03" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (13 samples, 0.03%)</title><rect x="318.3" y="197" width="0.4" height="15.0" fill="rgb(227,229,16)" rx="2" ry="2" />
<text  x="321.34" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.18%)</title><rect x="540.5" y="325" width="2.2" height="15.0" fill="rgb(242,159,4)" rx="2" ry="2" />
<text  x="543.54" y="335.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (186 samples, 0.38%)</title><rect x="1026.4" y="181" width="4.5" height="15.0" fill="rgb(208,156,29)" rx="2" ry="2" />
<text  x="1029.38" y="191.5" ></text>
</g>
<g >
<title>free (16 samples, 0.03%)</title><rect x="36.4" y="421" width="0.4" height="15.0" fill="rgb(217,178,24)" rx="2" ry="2" />
<text  x="39.37" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (15 samples, 0.03%)</title><rect x="1049.7" y="293" width="0.3" height="15.0" fill="rgb(248,52,25)" rx="2" ry="2" />
<text  x="1052.67" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (15 samples, 0.03%)</title><rect x="485.4" y="309" width="0.4" height="15.0" fill="rgb(228,57,46)" rx="2" ry="2" />
<text  x="488.38" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (5 samples, 0.01%)</title><rect x="415.7" y="405" width="0.2" height="15.0" fill="rgb(212,12,31)" rx="2" ry="2" />
<text  x="418.75" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,618 samples, 9.56%)</title><rect x="293.5" y="309" width="112.7" height="15.0" fill="rgb(243,64,51)" rx="2" ry="2" />
<text  x="296.49" y="319.5" >std::__invoke..</text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (14 samples, 0.03%)</title><rect x="386.2" y="213" width="0.3" height="15.0" fill="rgb(230,157,49)" rx="2" ry="2" />
<text  x="389.15" y="223.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="1171.8" y="453" width="0.4" height="15.0" fill="rgb(228,125,8)" rx="2" ry="2" />
<text  x="1174.76" y="463.5" ></text>
</g>
<g >
<title>operator new (92 samples, 0.19%)</title><rect x="154.7" y="213" width="2.2" height="15.0" fill="rgb(225,30,19)" rx="2" ry="2" />
<text  x="157.70" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (39 samples, 0.08%)</title><rect x="656.6" y="437" width="0.9" height="15.0" fill="rgb(234,202,37)" rx="2" ry="2" />
<text  x="659.55" y="447.5" ></text>
</g>
<g >
<title>__strlen_avx2 (89 samples, 0.18%)</title><rect x="1015.1" y="245" width="2.2" height="15.0" fill="rgb(240,63,31)" rx="2" ry="2" />
<text  x="1018.15" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%)</title><rect x="625.5" y="485" width="0.6" height="15.0" fill="rgb(248,44,11)" rx="2" ry="2" />
<text  x="628.52" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (34 samples, 0.07%)</title><rect x="763.1" y="373" width="0.8" height="15.0" fill="rgb(237,130,9)" rx="2" ry="2" />
<text  x="766.06" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="40.1" y="437" width="0.2" height="15.0" fill="rgb(248,14,31)" rx="2" ry="2" />
<text  x="43.11" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (102 samples, 0.21%)</title><rect x="58.7" y="437" width="2.5" height="15.0" fill="rgb(222,129,5)" rx="2" ry="2" />
<text  x="61.66" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%)</title><rect x="924.3" y="389" width="0.3" height="15.0" fill="rgb(249,139,11)" rx="2" ry="2" />
<text  x="927.26" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (20 samples, 0.04%)</title><rect x="698.2" y="437" width="0.4" height="15.0" fill="rgb(230,49,4)" rx="2" ry="2" />
<text  x="701.16" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1176.3" y="437" width="0.1" height="15.0" fill="rgb(243,135,47)" rx="2" ry="2" />
<text  x="1179.28" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.02%)</title><rect x="21.4" y="485" width="0.2" height="15.0" fill="rgb(232,55,23)" rx="2" ry="2" />
<text  x="24.38" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="619.0" y="437" width="0.2" height="15.0" fill="rgb(206,216,37)" rx="2" ry="2" />
<text  x="622.02" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (693 samples, 1.43%)</title><rect x="547.1" y="357" width="17.0" height="15.0" fill="rgb(228,80,1)" rx="2" ry="2" />
<text  x="550.14" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (34 samples, 0.07%)</title><rect x="865.1" y="469" width="0.9" height="15.0" fill="rgb(237,201,25)" rx="2" ry="2" />
<text  x="868.15" y="479.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (52 samples, 0.11%)</title><rect x="611.0" y="389" width="1.2" height="15.0" fill="rgb(219,40,28)" rx="2" ry="2" />
<text  x="613.96" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (87 samples, 0.18%)</title><rect x="843.6" y="373" width="2.1" height="15.0" fill="rgb(243,95,41)" rx="2" ry="2" />
<text  x="846.59" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (13 samples, 0.03%)</title><rect x="696.4" y="421" width="0.3" height="15.0" fill="rgb(221,212,30)" rx="2" ry="2" />
<text  x="699.38" y="431.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (22 samples, 0.05%)</title><rect x="426.0" y="341" width="0.6" height="15.0" fill="rgb(243,133,33)" rx="2" ry="2" />
<text  x="429.03" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (181 samples, 0.37%)</title><rect x="987.9" y="309" width="4.5" height="15.0" fill="rgb(213,67,50)" rx="2" ry="2" />
<text  x="990.95" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (5 samples, 0.01%)</title><rect x="769.2" y="341" width="0.1" height="15.0" fill="rgb(243,118,39)" rx="2" ry="2" />
<text  x="772.16" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1168.5" y="453" width="0.2" height="15.0" fill="rgb(205,59,22)" rx="2" ry="2" />
<text  x="1171.54" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,255 samples, 2.60%)</title><rect x="1011.9" y="277" width="30.6" height="15.0" fill="rgb(253,99,15)" rx="2" ry="2" />
<text  x="1014.87" y="287.5" >se..</text>
</g>
<g >
<title>seastar::schedule_urgent (37 samples, 0.08%)</title><rect x="1144.6" y="501" width="0.9" height="15.0" fill="rgb(212,186,51)" rx="2" ry="2" />
<text  x="1147.61" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (120 samples, 0.25%)</title><rect x="848.9" y="373" width="2.9" height="15.0" fill="rgb(252,29,5)" rx="2" ry="2" />
<text  x="851.89" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (6 samples, 0.01%)</title><rect x="695.5" y="437" width="0.1" height="15.0" fill="rgb(219,191,16)" rx="2" ry="2" />
<text  x="698.50" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (16 samples, 0.03%)</title><rect x="433.0" y="261" width="0.4" height="15.0" fill="rgb(238,7,29)" rx="2" ry="2" />
<text  x="436.03" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,858 samples, 3.84%)</title><rect x="318.2" y="213" width="45.4" height="15.0" fill="rgb(241,92,12)" rx="2" ry="2" />
<text  x="321.25" y="223.5" >quer..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="23.1" y="517" width="0.2" height="15.0" fill="rgb(236,195,53)" rx="2" ry="2" />
<text  x="26.09" y="527.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="233.1" y="245" width="0.3" height="15.0" fill="rgb(247,93,43)" rx="2" ry="2" />
<text  x="236.05" y="255.5" ></text>
</g>
<g >
<title>from_hex (5 samples, 0.01%)</title><rect x="20.6" y="341" width="0.1" height="15.0" fill="rgb(240,210,44)" rx="2" ry="2" />
<text  x="23.62" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="718.5" y="293" width="0.3" height="15.0" fill="rgb(249,170,39)" rx="2" ry="2" />
<text  x="721.55" y="303.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (15 samples, 0.03%)</title><rect x="813.7" y="293" width="0.3" height="15.0" fill="rgb(236,94,25)" rx="2" ry="2" />
<text  x="816.65" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (6 samples, 0.01%)</title><rect x="22.9" y="517" width="0.1" height="15.0" fill="rgb(229,42,47)" rx="2" ry="2" />
<text  x="25.89" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%)</title><rect x="659.6" y="469" width="0.1" height="15.0" fill="rgb(247,110,25)" rx="2" ry="2" />
<text  x="662.60" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (6 samples, 0.01%)</title><rect x="19.6" y="309" width="0.1" height="15.0" fill="rgb(238,173,23)" rx="2" ry="2" />
<text  x="22.57" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="832.4" y="437" width="0.2" height="15.0" fill="rgb(228,105,53)" rx="2" ry="2" />
<text  x="835.43" y="447.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (40 samples, 0.08%)</title><rect x="730.9" y="309" width="1.0" height="15.0" fill="rgb(208,211,39)" rx="2" ry="2" />
<text  x="733.88" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (21 samples, 0.04%)</title><rect x="388.7" y="229" width="0.6" height="15.0" fill="rgb(209,81,35)" rx="2" ry="2" />
<text  x="391.74" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="499.7" y="197" width="0.6" height="15.0" fill="rgb(230,112,40)" rx="2" ry="2" />
<text  x="502.69" y="207.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (32 samples, 0.07%)</title><rect x="398.4" y="197" width="0.7" height="15.0" fill="rgb(223,193,2)" rx="2" ry="2" />
<text  x="401.36" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (82 samples, 0.17%)</title><rect x="744.1" y="405" width="2.0" height="15.0" fill="rgb(207,226,13)" rx="2" ry="2" />
<text  x="747.06" y="415.5" ></text>
</g>
<g >
<title>main (47,364 samples, 98.01%)</title><rect x="22.2" y="613" width="1156.5" height="15.0" fill="rgb(233,181,11)" rx="2" ry="2" />
<text  x="25.18" y="623.5" >main</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (39 samples, 0.08%)</title><rect x="204.2" y="149" width="0.9" height="15.0" fill="rgb(235,57,13)" rx="2" ry="2" />
<text  x="207.17" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="21.8" y="501" width="0.3" height="15.0" fill="rgb(226,111,7)" rx="2" ry="2" />
<text  x="24.82" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="18.4" y="277" width="0.1" height="15.0" fill="rgb(240,53,52)" rx="2" ry="2" />
<text  x="21.38" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (39 samples, 0.08%)</title><rect x="614.1" y="421" width="1.0" height="15.0" fill="rgb(221,103,20)" rx="2" ry="2" />
<text  x="617.14" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (14 samples, 0.03%)</title><rect x="597.1" y="421" width="0.3" height="15.0" fill="rgb(247,88,25)" rx="2" ry="2" />
<text  x="600.09" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (8 samples, 0.02%)</title><rect x="497.9" y="213" width="0.2" height="15.0" fill="rgb(232,42,28)" rx="2" ry="2" />
<text  x="500.91" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (93 samples, 0.19%)</title><rect x="196.8" y="117" width="2.3" height="15.0" fill="rgb(241,195,21)" rx="2" ry="2" />
<text  x="199.79" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (96 samples, 0.20%)</title><rect x="1159.0" y="453" width="2.3" height="15.0" fill="rgb(253,135,33)" rx="2" ry="2" />
<text  x="1161.99" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (6 samples, 0.01%)</title><rect x="479.1" y="325" width="0.1" height="15.0" fill="rgb(233,119,3)" rx="2" ry="2" />
<text  x="482.08" y="335.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (5 samples, 0.01%)</title><rect x="218.8" y="101" width="0.1" height="15.0" fill="rgb(253,87,0)" rx="2" ry="2" />
<text  x="221.77" y="111.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="529.8" y="325" width="1.0" height="15.0" fill="rgb(213,218,37)" rx="2" ry="2" />
<text  x="532.78" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="414.7" y="373" width="0.3" height="15.0" fill="rgb(232,50,51)" rx="2" ry="2" />
<text  x="417.72" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (41 samples, 0.08%)</title><rect x="399.1" y="213" width="1.0" height="15.0" fill="rgb(240,65,40)" rx="2" ry="2" />
<text  x="402.14" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (18 samples, 0.04%)</title><rect x="219.5" y="149" width="0.5" height="15.0" fill="rgb(248,142,46)" rx="2" ry="2" />
<text  x="222.53" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (7 samples, 0.01%)</title><rect x="615.5" y="437" width="0.1" height="15.0" fill="rgb(240,157,53)" rx="2" ry="2" />
<text  x="618.46" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1042.6" y="277" width="0.2" height="15.0" fill="rgb(236,27,30)" rx="2" ry="2" />
<text  x="1045.62" y="287.5" ></text>
</g>
<g >
<title>utils::array_search_gt (19 samples, 0.04%)</title><rect x="465.7" y="277" width="0.4" height="15.0" fill="rgb(228,39,26)" rx="2" ry="2" />
<text  x="468.65" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (25 samples, 0.05%)</title><rect x="1175.3" y="421" width="0.6" height="15.0" fill="rgb(207,76,38)" rx="2" ry="2" />
<text  x="1178.25" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="555.7" y="293" width="0.1" height="15.0" fill="rgb(241,33,23)" rx="2" ry="2" />
<text  x="558.66" y="303.5" ></text>
</g>
<g >
<title>database::find_schema (302 samples, 0.62%)</title><rect x="748.5" y="405" width="7.4" height="15.0" fill="rgb(236,199,4)" rx="2" ry="2" />
<text  x="751.53" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (12 samples, 0.02%)</title><rect x="43.3" y="485" width="0.3" height="15.0" fill="rgb(219,136,35)" rx="2" ry="2" />
<text  x="46.31" y="495.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="895.6" y="245" width="0.7" height="15.0" fill="rgb(205,2,21)" rx="2" ry="2" />
<text  x="898.65" y="255.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%)</title><rect x="124.2" y="293" width="0.2" height="15.0" fill="rgb(253,183,3)" rx="2" ry="2" />
<text  x="127.23" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (26 samples, 0.05%)</title><rect x="570.9" y="341" width="0.7" height="15.0" fill="rgb(213,177,25)" rx="2" ry="2" />
<text  x="573.92" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (38 samples, 0.08%)</title><rect x="902.3" y="309" width="0.9" height="15.0" fill="rgb(224,146,6)" rx="2" ry="2" />
<text  x="905.29" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (5 samples, 0.01%)</title><rect x="1038.8" y="245" width="0.1" height="15.0" fill="rgb(219,100,19)" rx="2" ry="2" />
<text  x="1041.81" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%)</title><rect x="652.9" y="485" width="0.5" height="15.0" fill="rgb(224,105,14)" rx="2" ry="2" />
<text  x="655.94" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="1132.9" y="373" width="0.3" height="15.0" fill="rgb(235,82,39)" rx="2" ry="2" />
<text  x="1135.94" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%)</title><rect x="957.4" y="405" width="0.1" height="15.0" fill="rgb(236,9,8)" rx="2" ry="2" />
<text  x="960.42" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (16 samples, 0.03%)</title><rect x="44.5" y="485" width="0.4" height="15.0" fill="rgb(214,101,30)" rx="2" ry="2" />
<text  x="47.48" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%)</title><rect x="614.7" y="389" width="0.3" height="15.0" fill="rgb(217,139,19)" rx="2" ry="2" />
<text  x="617.75" y="399.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="759.2" y="373" width="0.6" height="15.0" fill="rgb(249,0,32)" rx="2" ry="2" />
<text  x="762.23" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="816.6" y="389" width="0.2" height="15.0" fill="rgb(226,228,37)" rx="2" ry="2" />
<text  x="819.58" y="399.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (34 samples, 0.07%)</title><rect x="289.5" y="373" width="0.8" height="15.0" fill="rgb(243,185,18)" rx="2" ry="2" />
<text  x="292.46" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (33 samples, 0.07%)</title><rect x="601.8" y="437" width="0.8" height="15.0" fill="rgb(228,49,15)" rx="2" ry="2" />
<text  x="604.83" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (47 samples, 0.10%)</title><rect x="953.8" y="389" width="1.1" height="15.0" fill="rgb(209,17,24)" rx="2" ry="2" />
<text  x="956.79" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%)</title><rect x="1070.7" y="309" width="2.0" height="15.0" fill="rgb(230,149,42)" rx="2" ry="2" />
<text  x="1073.74" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,315 samples, 6.86%)</title><rect x="305.6" y="229" width="81.0" height="15.0" fill="rgb(237,177,21)" rx="2" ry="2" />
<text  x="308.62" y="239.5" >compact_m..</text>
</g>
<g >
<title>table::query (22,068 samples, 45.66%)</title><rect x="80.7" y="453" width="538.8" height="15.0" fill="rgb(253,155,6)" rx="2" ry="2" />
<text  x="83.69" y="463.5" >table::query</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%)</title><rect x="283.6" y="357" width="0.1" height="15.0" fill="rgb(232,178,5)" rx="2" ry="2" />
<text  x="286.60" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6,009 samples, 12.43%)</title><rect x="118.0" y="341" width="146.8" height="15.0" fill="rgb(213,117,2)" rx="2" ry="2" />
<text  x="121.05" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (7 samples, 0.01%)</title><rect x="70.4" y="389" width="0.2" height="15.0" fill="rgb(238,38,31)" rx="2" ry="2" />
<text  x="73.41" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (94 samples, 0.19%)</title><rect x="36.3" y="437" width="2.3" height="15.0" fill="rgb(226,101,35)" rx="2" ry="2" />
<text  x="39.27" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (42 samples, 0.09%)</title><rect x="72.0" y="389" width="1.0" height="15.0" fill="rgb(244,37,49)" rx="2" ry="2" />
<text  x="74.97" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (792 samples, 1.64%)</title><rect x="1079.4" y="341" width="19.3" height="15.0" fill="rgb(246,45,6)" rx="2" ry="2" />
<text  x="1082.39" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (8 samples, 0.02%)</title><rect x="807.4" y="325" width="0.2" height="15.0" fill="rgb(242,90,52)" rx="2" ry="2" />
<text  x="810.38" y="335.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (5 samples, 0.01%)</title><rect x="479.0" y="293" width="0.1" height="15.0" fill="rgb(236,183,5)" rx="2" ry="2" />
<text  x="481.96" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (24 samples, 0.05%)</title><rect x="198.5" y="69" width="0.5" height="15.0" fill="rgb(209,207,50)" rx="2" ry="2" />
<text  x="201.45" y="79.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="970.9" y="357" width="0.1" height="15.0" fill="rgb(252,73,17)" rx="2" ry="2" />
<text  x="973.85" y="367.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (27 samples, 0.06%)</title><rect x="484.0" y="309" width="0.6" height="15.0" fill="rgb(210,56,31)" rx="2" ry="2" />
<text  x="486.97" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (11 samples, 0.02%)</title><rect x="991.1" y="245" width="0.3" height="15.0" fill="rgb(217,205,28)" rx="2" ry="2" />
<text  x="994.10" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10 samples, 0.02%)</title><rect x="612.7" y="421" width="0.2" height="15.0" fill="rgb(218,170,12)" rx="2" ry="2" />
<text  x="615.67" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (33 samples, 0.07%)</title><rect x="132.7" y="245" width="0.8" height="15.0" fill="rgb(216,61,51)" rx="2" ry="2" />
<text  x="135.67" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="148.4" y="245" width="0.1" height="15.0" fill="rgb(245,119,9)" rx="2" ry="2" />
<text  x="151.37" y="255.5" ></text>
</g>
<g >
<title>dht::shard_of (9 samples, 0.02%)</title><rect x="1000.3" y="293" width="0.2" height="15.0" fill="rgb(205,94,43)" rx="2" ry="2" />
<text  x="1003.28" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (104 samples, 0.22%)</title><rect x="342.7" y="165" width="2.5" height="15.0" fill="rgb(233,3,17)" rx="2" ry="2" />
<text  x="345.69" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.02%)</title><rect x="562.4" y="293" width="0.3" height="15.0" fill="rgb(240,140,45)" rx="2" ry="2" />
<text  x="565.45" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (11 samples, 0.02%)</title><rect x="878.3" y="421" width="0.3" height="15.0" fill="rgb(211,195,13)" rx="2" ry="2" />
<text  x="881.29" y="431.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="903.3" y="309" width="0.5" height="15.0" fill="rgb(239,193,7)" rx="2" ry="2" />
<text  x="906.31" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="1007.7" y="277" width="0.1" height="15.0" fill="rgb(228,128,46)" rx="2" ry="2" />
<text  x="1010.65" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (6 samples, 0.01%)</title><rect x="122.9" y="309" width="0.2" height="15.0" fill="rgb(242,133,52)" rx="2" ry="2" />
<text  x="125.91" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="34.6" y="453" width="0.3" height="15.0" fill="rgb(213,1,38)" rx="2" ry="2" />
<text  x="37.64" y="463.5" ></text>
</g>
<g >
<title>schema::position (15 samples, 0.03%)</title><rect x="1128.3" y="421" width="0.3" height="15.0" fill="rgb(242,185,36)" rx="2" ry="2" />
<text  x="1131.27" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="440.5" y="293" width="0.2" height="15.0" fill="rgb(206,60,53)" rx="2" ry="2" />
<text  x="443.48" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%)</title><rect x="244.7" y="165" width="0.8" height="15.0" fill="rgb(225,60,9)" rx="2" ry="2" />
<text  x="247.73" y="175.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="678.3" y="421" width="0.6" height="15.0" fill="rgb(242,192,38)" rx="2" ry="2" />
<text  x="681.26" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (16 samples, 0.03%)</title><rect x="1041.2" y="261" width="0.4" height="15.0" fill="rgb(236,193,29)" rx="2" ry="2" />
<text  x="1044.18" y="271.5" ></text>
</g>
<g >
<title>operator delete (47 samples, 0.10%)</title><rect x="281.9" y="293" width="1.1" height="15.0" fill="rgb(250,12,42)" rx="2" ry="2" />
<text  x="284.86" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (14 samples, 0.03%)</title><rect x="1142.8" y="245" width="0.3" height="15.0" fill="rgb(222,133,1)" rx="2" ry="2" />
<text  x="1145.80" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (143 samples, 0.30%)</title><rect x="609.2" y="421" width="3.4" height="15.0" fill="rgb(252,103,5)" rx="2" ry="2" />
<text  x="612.16" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (183 samples, 0.38%)</title><rect x="247.4" y="261" width="4.4" height="15.0" fill="rgb(218,122,6)" rx="2" ry="2" />
<text  x="250.36" y="271.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (91 samples, 0.19%)</title><rect x="594.6" y="421" width="2.2" height="15.0" fill="rgb(231,199,11)" rx="2" ry="2" />
<text  x="597.60" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (59 samples, 0.12%)</title><rect x="578.9" y="421" width="1.4" height="15.0" fill="rgb(242,86,39)" rx="2" ry="2" />
<text  x="581.90" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="18.8" y="277" width="0.1" height="15.0" fill="rgb(223,61,9)" rx="2" ry="2" />
<text  x="21.79" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (101 samples, 0.21%)</title><rect x="719.1" y="325" width="2.5" height="15.0" fill="rgb(213,153,21)" rx="2" ry="2" />
<text  x="722.13" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (7 samples, 0.01%)</title><rect x="250.1" y="197" width="0.2" height="15.0" fill="rgb(244,7,50)" rx="2" ry="2" />
<text  x="253.15" y="207.5" ></text>
</g>
<g >
<title>posix_memalign (6 samples, 0.01%)</title><rect x="189.9" y="69" width="0.1" height="15.0" fill="rgb(243,173,24)" rx="2" ry="2" />
<text  x="192.88" y="79.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (5 samples, 0.01%)</title><rect x="1019.1" y="245" width="0.1" height="15.0" fill="rgb(234,76,53)" rx="2" ry="2" />
<text  x="1022.08" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (5 samples, 0.01%)</title><rect x="813.8" y="261" width="0.1" height="15.0" fill="rgb(236,110,38)" rx="2" ry="2" />
<text  x="816.82" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (25 samples, 0.05%)</title><rect x="138.2" y="245" width="0.7" height="15.0" fill="rgb(246,34,23)" rx="2" ry="2" />
<text  x="141.24" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="529.9" y="309" width="0.9" height="15.0" fill="rgb(237,73,12)" rx="2" ry="2" />
<text  x="532.90" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (5 samples, 0.01%)</title><rect x="77.4" y="453" width="0.2" height="15.0" fill="rgb(205,145,6)" rx="2" ry="2" />
<text  x="80.44" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="761.2" y="357" width="0.2" height="15.0" fill="rgb(227,23,16)" rx="2" ry="2" />
<text  x="764.23" y="367.5" ></text>
</g>
<g >
<title>compound_type&lt; (154 samples, 0.32%)</title><rect x="928.0" y="373" width="3.7" height="15.0" fill="rgb(252,182,24)" rx="2" ry="2" />
<text  x="930.98" y="383.5" ></text>
</g>
<g >
<title>query::result::builder::build (61 samples, 0.13%)</title><rect x="584.3" y="437" width="1.4" height="15.0" fill="rgb(206,224,30)" rx="2" ry="2" />
<text  x="587.25" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (194 samples, 0.40%)</title><rect x="15.7" y="421" width="4.7" height="15.0" fill="rgb(233,48,22)" rx="2" ry="2" />
<text  x="18.66" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (184 samples, 0.38%)</title><rect x="751.2" y="357" width="4.5" height="15.0" fill="rgb(227,124,46)" rx="2" ry="2" />
<text  x="754.17" y="367.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (123 samples, 0.25%)</title><rect x="737.0" y="325" width="3.0" height="15.0" fill="rgb(250,130,46)" rx="2" ry="2" />
<text  x="740.03" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.08%)</title><rect x="225.3" y="149" width="1.0" height="15.0" fill="rgb(224,79,1)" rx="2" ry="2" />
<text  x="228.29" y="159.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (55 samples, 0.11%)</title><rect x="281.7" y="309" width="1.3" height="15.0" fill="rgb(222,149,1)" rx="2" ry="2" />
<text  x="284.67" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%)</title><rect x="391.2" y="213" width="0.2" height="15.0" fill="rgb(236,96,51)" rx="2" ry="2" />
<text  x="394.23" y="223.5" ></text>
</g>
<g >
<title>operator delete (48 samples, 0.10%)</title><rect x="1126.2" y="421" width="1.2" height="15.0" fill="rgb(243,94,45)" rx="2" ry="2" />
<text  x="1129.20" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (32 samples, 0.07%)</title><rect x="472.7" y="197" width="0.7" height="15.0" fill="rgb(239,103,50)" rx="2" ry="2" />
<text  x="475.66" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="762.2" y="325" width="0.2" height="15.0" fill="rgb(252,77,51)" rx="2" ry="2" />
<text  x="765.23" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (19 samples, 0.04%)</title><rect x="737.1" y="293" width="0.4" height="15.0" fill="rgb(253,182,20)" rx="2" ry="2" />
<text  x="740.08" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (113 samples, 0.23%)</title><rect x="1036.0" y="229" width="2.8" height="15.0" fill="rgb(220,155,36)" rx="2" ry="2" />
<text  x="1039.02" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (833 samples, 1.72%)</title><rect x="884.4" y="357" width="20.3" height="15.0" fill="rgb(243,113,54)" rx="2" ry="2" />
<text  x="887.39" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (9 samples, 0.02%)</title><rect x="697.3" y="405" width="0.2" height="15.0" fill="rgb(237,42,9)" rx="2" ry="2" />
<text  x="700.28" y="415.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (5 samples, 0.01%)</title><rect x="291.6" y="325" width="0.1" height="15.0" fill="rgb(247,52,21)" rx="2" ry="2" />
<text  x="294.61" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (77 samples, 0.16%)</title><rect x="124.5" y="293" width="1.9" height="15.0" fill="rgb(217,126,45)" rx="2" ry="2" />
<text  x="127.52" y="303.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%)</title><rect x="841.3" y="405" width="1.1" height="15.0" fill="rgb(214,73,6)" rx="2" ry="2" />
<text  x="844.27" y="415.5" ></text>
</g>
<g >
<title>db::block_for (7 samples, 0.01%)</title><rect x="1067.6" y="341" width="0.1" height="15.0" fill="rgb(230,194,34)" rx="2" ry="2" />
<text  x="1070.57" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (290 samples, 0.60%)</title><rect x="1114.2" y="405" width="7.1" height="15.0" fill="rgb(243,199,22)" rx="2" ry="2" />
<text  x="1117.21" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="1117.6" y="389" width="0.2" height="15.0" fill="rgb(230,208,39)" rx="2" ry="2" />
<text  x="1120.60" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (6 samples, 0.01%)</title><rect x="811.4" y="325" width="0.2" height="15.0" fill="rgb(239,145,32)" rx="2" ry="2" />
<text  x="814.41" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (54 samples, 0.11%)</title><rect x="564.4" y="373" width="1.3" height="15.0" fill="rgb(220,198,50)" rx="2" ry="2" />
<text  x="567.35" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (391 samples, 0.81%)</title><rect x="391.6" y="261" width="9.6" height="15.0" fill="rgb(245,121,50)" rx="2" ry="2" />
<text  x="394.62" y="271.5" ></text>
</g>
<g >
<title>operator delete (69 samples, 0.14%)</title><rect x="555.8" y="293" width="1.7" height="15.0" fill="rgb(230,27,48)" rx="2" ry="2" />
<text  x="558.78" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (88 samples, 0.18%)</title><rect x="655.4" y="469" width="2.1" height="15.0" fill="rgb(241,194,53)" rx="2" ry="2" />
<text  x="658.35" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="630.1" y="469" width="0.5" height="15.0" fill="rgb(236,110,17)" rx="2" ry="2" />
<text  x="633.11" y="479.5" ></text>
</g>
<g >
<title>reader_permit::consume (5 samples, 0.01%)</title><rect x="387.8" y="245" width="0.2" height="15.0" fill="rgb(213,92,26)" rx="2" ry="2" />
<text  x="390.84" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (160 samples, 0.33%)</title><rect x="580.3" y="421" width="4.0" height="15.0" fill="rgb(228,35,49)" rx="2" ry="2" />
<text  x="583.34" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (45 samples, 0.09%)</title><rect x="147.3" y="229" width="1.1" height="15.0" fill="rgb(237,1,33)" rx="2" ry="2" />
<text  x="150.28" y="239.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,601 samples, 26.07%)</title><rect x="108.6" y="421" width="307.7" height="15.0" fill="rgb(228,88,11)" rx="2" ry="2" />
<text  x="111.60" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (132 samples, 0.27%)</title><rect x="628.2" y="485" width="3.2" height="15.0" fill="rgb(214,223,47)" rx="2" ry="2" />
<text  x="631.18" y="495.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (6 samples, 0.01%)</title><rect x="671.4" y="437" width="0.1" height="15.0" fill="rgb(206,98,33)" rx="2" ry="2" />
<text  x="674.37" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (19 samples, 0.04%)</title><rect x="499.8" y="181" width="0.5" height="15.0" fill="rgb(254,120,29)" rx="2" ry="2" />
<text  x="502.79" y="191.5" ></text>
</g>
<g >
<title>row_tombstone::apply (20 samples, 0.04%)</title><rect x="385.6" y="213" width="0.5" height="15.0" fill="rgb(228,192,35)" rx="2" ry="2" />
<text  x="388.59" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="904.6" y="341" width="0.1" height="15.0" fill="rgb(233,61,39)" rx="2" ry="2" />
<text  x="907.56" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (96 samples, 0.20%)</title><rect x="811.7" y="325" width="2.3" height="15.0" fill="rgb(221,80,51)" rx="2" ry="2" />
<text  x="814.68" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1142.4" y="357" width="0.8" height="15.0" fill="rgb(244,54,48)" rx="2" ry="2" />
<text  x="1145.41" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="199.5" y="117" width="0.2" height="15.0" fill="rgb(207,32,9)" rx="2" ry="2" />
<text  x="202.53" y="127.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (54 samples, 0.11%)</title><rect x="510.0" y="293" width="1.3" height="15.0" fill="rgb(213,134,9)" rx="2" ry="2" />
<text  x="513.02" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="807.0" y="309" width="0.2" height="15.0" fill="rgb(241,153,37)" rx="2" ry="2" />
<text  x="810.04" y="319.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (104 samples, 0.22%)</title><rect x="379.8" y="149" width="2.5" height="15.0" fill="rgb(207,159,15)" rx="2" ry="2" />
<text  x="382.75" y="159.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (5 samples, 0.01%)</title><rect x="126.3" y="277" width="0.1" height="15.0" fill="rgb(223,152,52)" rx="2" ry="2" />
<text  x="129.28" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (255 samples, 0.53%)</title><rect x="15.3" y="501" width="6.3" height="15.0" fill="rgb(211,199,22)" rx="2" ry="2" />
<text  x="18.35" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (18 samples, 0.04%)</title><rect x="1104.9" y="373" width="0.5" height="15.0" fill="rgb(206,12,5)" rx="2" ry="2" />
<text  x="1107.93" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (32 samples, 0.07%)</title><rect x="861.5" y="421" width="0.8" height="15.0" fill="rgb(215,33,20)" rx="2" ry="2" />
<text  x="864.49" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="804.2" y="277" width="0.2" height="15.0" fill="rgb(250,106,13)" rx="2" ry="2" />
<text  x="807.20" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="550.1" y="309" width="0.2" height="15.0" fill="rgb(234,137,31)" rx="2" ry="2" />
<text  x="553.12" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="410.8" y="373" width="0.2" height="15.0" fill="rgb(232,137,24)" rx="2" ry="2" />
<text  x="413.84" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="44.1" y="485" width="0.2" height="15.0" fill="rgb(212,131,16)" rx="2" ry="2" />
<text  x="47.14" y="495.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (29 samples, 0.06%)</title><rect x="218.5" y="133" width="0.7" height="15.0" fill="rgb(228,226,33)" rx="2" ry="2" />
<text  x="221.48" y="143.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (121 samples, 0.25%)</title><rect x="518.7" y="309" width="3.0" height="15.0" fill="rgb(207,142,2)" rx="2" ry="2" />
<text  x="521.74" y="319.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="579.3" y="405" width="0.7" height="15.0" fill="rgb(206,52,27)" rx="2" ry="2" />
<text  x="582.29" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="384.6" y="165" width="0.2" height="15.0" fill="rgb(245,205,8)" rx="2" ry="2" />
<text  x="387.61" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (19 samples, 0.04%)</title><rect x="990.9" y="261" width="0.5" height="15.0" fill="rgb(241,216,37)" rx="2" ry="2" />
<text  x="993.90" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (40 samples, 0.08%)</title><rect x="616.2" y="405" width="1.0" height="15.0" fill="rgb(230,119,16)" rx="2" ry="2" />
<text  x="619.21" y="415.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (488 samples, 1.01%)</title><rect x="911.8" y="389" width="11.9" height="15.0" fill="rgb(252,112,7)" rx="2" ry="2" />
<text  x="914.76" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (9 samples, 0.02%)</title><rect x="887.5" y="309" width="0.3" height="15.0" fill="rgb(241,125,1)" rx="2" ry="2" />
<text  x="890.54" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (8 samples, 0.02%)</title><rect x="219.3" y="149" width="0.2" height="15.0" fill="rgb(217,192,3)" rx="2" ry="2" />
<text  x="222.33" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (8 samples, 0.02%)</title><rect x="756.4" y="405" width="0.2" height="15.0" fill="rgb(234,145,10)" rx="2" ry="2" />
<text  x="759.39" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (22 samples, 0.05%)</title><rect x="225.7" y="133" width="0.5" height="15.0" fill="rgb(214,57,19)" rx="2" ry="2" />
<text  x="228.70" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (70 samples, 0.14%)</title><rect x="1159.6" y="421" width="1.7" height="15.0" fill="rgb(212,21,22)" rx="2" ry="2" />
<text  x="1162.60" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="666.6" y="437" width="0.1" height="15.0" fill="rgb(254,92,49)" rx="2" ry="2" />
<text  x="669.61" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (10 samples, 0.02%)</title><rect x="580.1" y="405" width="0.2" height="15.0" fill="rgb(221,4,8)" rx="2" ry="2" />
<text  x="583.10" y="415.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%)</title><rect x="669.6" y="469" width="0.4" height="15.0" fill="rgb(220,112,46)" rx="2" ry="2" />
<text  x="672.64" y="479.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="1147.7" y="485" width="0.9" height="15.0" fill="rgb(230,81,31)" rx="2" ry="2" />
<text  x="1150.68" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1042.3" y="261" width="0.1" height="15.0" fill="rgb(224,42,5)" rx="2" ry="2" />
<text  x="1045.27" y="271.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.0" height="15.0" fill="rgb(242,113,23)" rx="2" ry="2" />
<text  x="1191.85" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (30 samples, 0.06%)</title><rect x="1035.1" y="229" width="0.8" height="15.0" fill="rgb(232,39,2)" rx="2" ry="2" />
<text  x="1038.12" y="239.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (17 samples, 0.04%)</title><rect x="220.4" y="165" width="0.4" height="15.0" fill="rgb(220,90,38)" rx="2" ry="2" />
<text  x="223.36" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (19 samples, 0.04%)</title><rect x="762.4" y="357" width="0.4" height="15.0" fill="rgb(229,163,33)" rx="2" ry="2" />
<text  x="765.38" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (42 samples, 0.09%)</title><rect x="732.6" y="357" width="1.0" height="15.0" fill="rgb(241,15,23)" rx="2" ry="2" />
<text  x="735.56" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (49 samples, 0.10%)</title><rect x="805.8" y="293" width="1.2" height="15.0" fill="rgb(211,106,50)" rx="2" ry="2" />
<text  x="808.84" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (17 samples, 0.04%)</title><rect x="397.4" y="165" width="0.4" height="15.0" fill="rgb(219,155,36)" rx="2" ry="2" />
<text  x="400.41" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="1029.8" y="117" width="0.2" height="15.0" fill="rgb(254,215,44)" rx="2" ry="2" />
<text  x="1032.77" y="127.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (8 samples, 0.02%)</title><rect x="452.2" y="325" width="0.2" height="15.0" fill="rgb(236,64,12)" rx="2" ry="2" />
<text  x="455.18" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="688.6" y="469" width="0.4" height="15.0" fill="rgb(210,37,40)" rx="2" ry="2" />
<text  x="691.64" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="821.7" y="309" width="0.2" height="15.0" fill="rgb(242,182,34)" rx="2" ry="2" />
<text  x="824.74" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (94 samples, 0.19%)</title><rect x="971.0" y="341" width="2.3" height="15.0" fill="rgb(251,18,53)" rx="2" ry="2" />
<text  x="974.00" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (13 samples, 0.03%)</title><rect x="696.8" y="421" width="0.3" height="15.0" fill="rgb(247,52,2)" rx="2" ry="2" />
<text  x="699.82" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (55 samples, 0.11%)</title><rect x="933.1" y="405" width="1.3" height="15.0" fill="rgb(245,133,20)" rx="2" ry="2" />
<text  x="936.05" y="415.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="55.2" y="453" width="1.0" height="15.0" fill="rgb(233,4,8)" rx="2" ry="2" />
<text  x="58.25" y="463.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="899.7" y="309" width="0.8" height="15.0" fill="rgb(252,54,39)" rx="2" ry="2" />
<text  x="902.70" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (45 samples, 0.09%)</title><rect x="752.7" y="325" width="1.1" height="15.0" fill="rgb(212,221,14)" rx="2" ry="2" />
<text  x="755.68" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="388.6" y="229" width="0.1" height="15.0" fill="rgb(232,214,38)" rx="2" ry="2" />
<text  x="391.62" y="239.5" ></text>
</g>
<g >
<title>perf_simple_que (48,325 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(207,133,22)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.01%)</title><rect x="1137.3" y="421" width="0.2" height="15.0" fill="rgb(228,146,52)" rx="2" ry="2" />
<text  x="1140.31" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (189 samples, 0.39%)</title><rect x="1128.9" y="421" width="4.6" height="15.0" fill="rgb(211,26,38)" rx="2" ry="2" />
<text  x="1131.91" y="431.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (8 samples, 0.02%)</title><rect x="1116.0" y="357" width="0.2" height="15.0" fill="rgb(232,165,17)" rx="2" ry="2" />
<text  x="1118.97" y="367.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (30 samples, 0.06%)</title><rect x="286.3" y="405" width="0.8" height="15.0" fill="rgb(223,67,54)" rx="2" ry="2" />
<text  x="289.33" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (9 samples, 0.02%)</title><rect x="239.2" y="213" width="0.2" height="15.0" fill="rgb(209,0,52)" rx="2" ry="2" />
<text  x="242.21" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (37 samples, 0.08%)</title><rect x="16.2" y="277" width="0.9" height="15.0" fill="rgb(253,149,32)" rx="2" ry="2" />
<text  x="19.18" y="287.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (349 samples, 0.72%)</title><rect x="715.0" y="437" width="8.5" height="15.0" fill="rgb(206,161,8)" rx="2" ry="2" />
<text  x="718.01" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (6 samples, 0.01%)</title><rect x="157.1" y="197" width="0.1" height="15.0" fill="rgb(208,39,25)" rx="2" ry="2" />
<text  x="160.09" y="207.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (59 samples, 0.12%)</title><rect x="136.6" y="245" width="1.5" height="15.0" fill="rgb(220,217,12)" rx="2" ry="2" />
<text  x="139.63" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="762.6" y="341" width="0.2" height="15.0" fill="rgb(228,176,8)" rx="2" ry="2" />
<text  x="765.60" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (71 samples, 0.15%)</title><rect x="149.9" y="197" width="1.7" height="15.0" fill="rgb(239,206,16)" rx="2" ry="2" />
<text  x="152.86" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (118 samples, 0.24%)</title><rect x="995.7" y="277" width="2.9" height="15.0" fill="rgb(224,150,8)" rx="2" ry="2" />
<text  x="998.71" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="550.3" y="309" width="0.2" height="15.0" fill="rgb(240,71,49)" rx="2" ry="2" />
<text  x="553.29" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (156 samples, 0.32%)</title><rect x="406.3" y="309" width="3.8" height="15.0" fill="rgb(214,122,48)" rx="2" ry="2" />
<text  x="409.30" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="1048.6" y="181" width="0.1" height="15.0" fill="rgb(219,55,18)" rx="2" ry="2" />
<text  x="1051.57" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (66 samples, 0.14%)</title><rect x="1017.5" y="229" width="1.6" height="15.0" fill="rgb(227,106,6)" rx="2" ry="2" />
<text  x="1020.47" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="912.6" y="357" width="0.6" height="15.0" fill="rgb(229,156,34)" rx="2" ry="2" />
<text  x="915.57" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,766 samples, 3.65%)</title><rect x="319.3" y="197" width="43.1" height="15.0" fill="rgb(224,182,28)" rx="2" ry="2" />
<text  x="322.32" y="207.5" >muta..</text>
</g>
<g >
<title>flat_mutation_reader::close (6 samples, 0.01%)</title><rect x="1177.0" y="389" width="0.1" height="15.0" fill="rgb(224,129,29)" rx="2" ry="2" />
<text  x="1179.99" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="246.1" y="229" width="0.1" height="15.0" fill="rgb(226,56,50)" rx="2" ry="2" />
<text  x="249.07" y="239.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (100 samples, 0.21%)</title><rect x="737.6" y="309" width="2.4" height="15.0" fill="rgb(229,143,11)" rx="2" ry="2" />
<text  x="740.59" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="649.6" y="437" width="0.2" height="15.0" fill="rgb(242,177,45)" rx="2" ry="2" />
<text  x="652.62" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (11 samples, 0.02%)</title><rect x="937.9" y="405" width="0.3" height="15.0" fill="rgb(244,36,42)" rx="2" ry="2" />
<text  x="940.94" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (5 samples, 0.01%)</title><rect x="1104.8" y="357" width="0.1" height="15.0" fill="rgb(226,80,34)" rx="2" ry="2" />
<text  x="1107.81" y="367.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (20 samples, 0.04%)</title><rect x="716.4" y="405" width="0.5" height="15.0" fill="rgb(247,11,50)" rx="2" ry="2" />
<text  x="719.40" y="415.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="292.1" y="293" width="0.8" height="15.0" fill="rgb(222,56,0)" rx="2" ry="2" />
<text  x="295.07" y="303.5" ></text>
</g>
<g >
<title>seastar::gate::enter (15 samples, 0.03%)</title><rect x="1039.2" y="229" width="0.3" height="15.0" fill="rgb(248,203,40)" rx="2" ry="2" />
<text  x="1042.17" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="268.5" y="325" width="0.4" height="15.0" fill="rgb(253,117,51)" rx="2" ry="2" />
<text  x="271.48" y="335.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (15 samples, 0.03%)</title><rect x="1098.1" y="309" width="0.4" height="15.0" fill="rgb(242,162,17)" rx="2" ry="2" />
<text  x="1101.09" y="319.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (40 samples, 0.08%)</title><rect x="553.2" y="293" width="1.0" height="15.0" fill="rgb(231,29,41)" rx="2" ry="2" />
<text  x="556.24" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="783.0" y="213" width="0.1" height="15.0" fill="rgb(227,85,54)" rx="2" ry="2" />
<text  x="785.96" y="223.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (8 samples, 0.02%)</title><rect x="22.6" y="517" width="0.2" height="15.0" fill="rgb(208,41,24)" rx="2" ry="2" />
<text  x="25.58" y="527.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (550 samples, 1.14%)</title><rect x="1081.9" y="293" width="13.4" height="15.0" fill="rgb(253,103,49)" rx="2" ry="2" />
<text  x="1084.85" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (24 samples, 0.05%)</title><rect x="290.3" y="373" width="0.6" height="15.0" fill="rgb(251,98,21)" rx="2" ry="2" />
<text  x="293.29" y="383.5" ></text>
</g>
<g >
<title>operator delete (38 samples, 0.08%)</title><rect x="905.6" y="357" width="0.9" height="15.0" fill="rgb(252,134,39)" rx="2" ry="2" />
<text  x="908.58" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (69 samples, 0.14%)</title><rect x="1058.7" y="309" width="1.6" height="15.0" fill="rgb(251,76,26)" rx="2" ry="2" />
<text  x="1061.66" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (9 samples, 0.02%)</title><rect x="736.1" y="293" width="0.2" height="15.0" fill="rgb(237,12,12)" rx="2" ry="2" />
<text  x="739.13" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (156 samples, 0.32%)</title><rect x="461.8" y="261" width="3.9" height="15.0" fill="rgb(217,181,31)" rx="2" ry="2" />
<text  x="464.85" y="271.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (20 samples, 0.04%)</title><rect x="1134.1" y="421" width="0.4" height="15.0" fill="rgb(212,115,38)" rx="2" ry="2" />
<text  x="1137.06" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="382.3" y="165" width="0.2" height="15.0" fill="rgb(215,128,7)" rx="2" ry="2" />
<text  x="385.29" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="880.8" y="389" width="0.1" height="15.0" fill="rgb(208,167,26)" rx="2" ry="2" />
<text  x="883.78" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (106 samples, 0.22%)</title><rect x="941.2" y="389" width="2.6" height="15.0" fill="rgb(237,12,32)" rx="2" ry="2" />
<text  x="944.21" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (11 samples, 0.02%)</title><rect x="797.1" y="117" width="0.3" height="15.0" fill="rgb(248,27,40)" rx="2" ry="2" />
<text  x="800.15" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (18 samples, 0.04%)</title><rect x="859.2" y="501" width="0.4" height="15.0" fill="rgb(248,16,53)" rx="2" ry="2" />
<text  x="862.17" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (6 samples, 0.01%)</title><rect x="1110.2" y="421" width="0.1" height="15.0" fill="rgb(236,220,36)" rx="2" ry="2" />
<text  x="1113.15" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="663.8" y="453" width="0.1" height="15.0" fill="rgb(223,122,2)" rx="2" ry="2" />
<text  x="666.83" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (7 samples, 0.01%)</title><rect x="861.6" y="373" width="0.2" height="15.0" fill="rgb(242,117,27)" rx="2" ry="2" />
<text  x="864.63" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="687.8" y="469" width="0.1" height="15.0" fill="rgb(237,162,9)" rx="2" ry="2" />
<text  x="690.78" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (35 samples, 0.07%)</title><rect x="700.3" y="421" width="0.9" height="15.0" fill="rgb(212,173,21)" rx="2" ry="2" />
<text  x="703.33" y="431.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (11 samples, 0.02%)</title><rect x="719.3" y="309" width="0.2" height="15.0" fill="rgb(221,160,47)" rx="2" ry="2" />
<text  x="722.28" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="624.0" y="453" width="0.1" height="15.0" fill="rgb(250,79,5)" rx="2" ry="2" />
<text  x="627.03" y="463.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (23 samples, 0.05%)</title><rect x="189.2" y="53" width="0.6" height="15.0" fill="rgb(254,188,37)" rx="2" ry="2" />
<text  x="192.20" y="63.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="678.4" y="261" width="0.1" height="15.0" fill="rgb(227,141,17)" rx="2" ry="2" />
<text  x="681.40" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="623.0" y="485" width="0.5" height="15.0" fill="rgb(235,61,41)" rx="2" ry="2" />
<text  x="626.00" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="437" width="0.8" height="15.0" fill="rgb(218,144,12)" rx="2" ry="2" />
<text  x="1144.48" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (34 samples, 0.07%)</title><rect x="815.7" y="373" width="0.8" height="15.0" fill="rgb(219,221,18)" rx="2" ry="2" />
<text  x="818.68" y="383.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.10%)</title><rect x="709.5" y="421" width="1.1" height="15.0" fill="rgb(219,61,9)" rx="2" ry="2" />
<text  x="712.46" y="431.5" ></text>
</g>
<g >
<title>malloc (32 samples, 0.07%)</title><rect x="591.5" y="373" width="0.8" height="15.0" fill="rgb(215,195,8)" rx="2" ry="2" />
<text  x="594.48" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (23 samples, 0.05%)</title><rect x="989.9" y="261" width="0.6" height="15.0" fill="rgb(235,18,52)" rx="2" ry="2" />
<text  x="992.95" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (19 samples, 0.04%)</title><rect x="113.3" y="373" width="0.5" height="15.0" fill="rgb(240,155,38)" rx="2" ry="2" />
<text  x="116.33" y="383.5" ></text>
</g>
<g >
<title>query_state::query_state (295 samples, 0.61%)</title><rect x="586.1" y="437" width="7.2" height="15.0" fill="rgb(214,125,10)" rx="2" ry="2" />
<text  x="589.13" y="447.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (98 samples, 0.20%)</title><rect x="452.7" y="325" width="2.4" height="15.0" fill="rgb(227,175,49)" rx="2" ry="2" />
<text  x="455.69" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="78.0" y="453" width="0.5" height="15.0" fill="rgb(236,41,26)" rx="2" ry="2" />
<text  x="80.98" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (11 samples, 0.02%)</title><rect x="137.1" y="229" width="0.3" height="15.0" fill="rgb(247,126,2)" rx="2" ry="2" />
<text  x="140.09" y="239.5" ></text>
</g>
<g >
<title>database::find_uuid (184 samples, 0.38%)</title><rect x="818.8" y="357" width="4.5" height="15.0" fill="rgb(236,189,52)" rx="2" ry="2" />
<text  x="821.81" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::close (11 samples, 0.02%)</title><rect x="1177.0" y="485" width="0.3" height="15.0" fill="rgb(215,137,34)" rx="2" ry="2" />
<text  x="1179.99" y="495.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (7 samples, 0.01%)</title><rect x="1049.2" y="277" width="0.2" height="15.0" fill="rgb(242,41,23)" rx="2" ry="2" />
<text  x="1052.23" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="557.2" y="277" width="0.3" height="15.0" fill="rgb(219,200,22)" rx="2" ry="2" />
<text  x="560.20" y="287.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="801.7" y="245" width="0.9" height="15.0" fill="rgb(208,67,38)" rx="2" ry="2" />
<text  x="804.66" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (18 samples, 0.04%)</title><rect x="252.3" y="277" width="0.5" height="15.0" fill="rgb(223,135,45)" rx="2" ry="2" />
<text  x="255.32" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (24 samples, 0.05%)</title><rect x="789.0" y="181" width="0.6" height="15.0" fill="rgb(222,133,1)" rx="2" ry="2" />
<text  x="792.04" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="410.3" y="341" width="0.3" height="15.0" fill="rgb(231,137,29)" rx="2" ry="2" />
<text  x="413.30" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.02%)</title><rect x="930.1" y="341" width="0.2" height="15.0" fill="rgb(244,65,27)" rx="2" ry="2" />
<text  x="933.05" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="1069.3" y="341" width="0.2" height="15.0" fill="rgb(242,111,34)" rx="2" ry="2" />
<text  x="1072.26" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (23 samples, 0.05%)</title><rect x="242.1" y="181" width="0.5" height="15.0" fill="rgb(210,221,3)" rx="2" ry="2" />
<text  x="245.09" y="191.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (14 samples, 0.03%)</title><rect x="387.5" y="229" width="0.3" height="15.0" fill="rgb(254,125,50)" rx="2" ry="2" />
<text  x="390.49" y="239.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.02%)</title><rect x="213.9" y="149" width="0.3" height="15.0" fill="rgb(232,145,35)" rx="2" ry="2" />
<text  x="216.91" y="159.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (12 samples, 0.02%)</title><rect x="798.1" y="101" width="0.3" height="15.0" fill="rgb(250,41,46)" rx="2" ry="2" />
<text  x="801.10" y="111.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (328 samples, 0.68%)</title><rect x="393.1" y="229" width="8.0" height="15.0" fill="rgb(213,56,6)" rx="2" ry="2" />
<text  x="396.09" y="239.5" ></text>
</g>
<g >
<title>partition_entry::read (31 samples, 0.06%)</title><rect x="512.8" y="325" width="0.7" height="15.0" fill="rgb(239,199,6)" rx="2" ry="2" />
<text  x="515.76" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="135.8" y="245" width="0.1" height="15.0" fill="rgb(235,138,0)" rx="2" ry="2" />
<text  x="138.82" y="255.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (16 samples, 0.03%)</title><rect x="476.8" y="181" width="0.4" height="15.0" fill="rgb(219,16,1)" rx="2" ry="2" />
<text  x="479.84" y="191.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (128 samples, 0.26%)</title><rect x="1185.7" y="613" width="3.1" height="15.0" fill="rgb(215,224,12)" rx="2" ry="2" />
<text  x="1188.70" y="623.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="678.3" y="437" width="0.6" height="15.0" fill="rgb(226,219,33)" rx="2" ry="2" />
<text  x="681.26" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (36 samples, 0.07%)</title><rect x="1105.5" y="373" width="0.9" height="15.0" fill="rgb(252,143,26)" rx="2" ry="2" />
<text  x="1108.54" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (135 samples, 0.28%)</title><rect x="836.1" y="405" width="3.3" height="15.0" fill="rgb(240,69,25)" rx="2" ry="2" />
<text  x="839.12" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (20 samples, 0.04%)</title><rect x="736.3" y="293" width="0.5" height="15.0" fill="rgb(212,183,31)" rx="2" ry="2" />
<text  x="739.35" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (69 samples, 0.14%)</title><rect x="982.3" y="309" width="1.7" height="15.0" fill="rgb(218,16,37)" rx="2" ry="2" />
<text  x="985.30" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (11 samples, 0.02%)</title><rect x="1142.5" y="293" width="0.3" height="15.0" fill="rgb(213,180,9)" rx="2" ry="2" />
<text  x="1145.48" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="104.3" y="421" width="0.2" height="15.0" fill="rgb(216,83,38)" rx="2" ry="2" />
<text  x="107.32" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (21 samples, 0.04%)</title><rect x="281.0" y="277" width="0.5" height="15.0" fill="rgb(208,45,28)" rx="2" ry="2" />
<text  x="283.99" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (11 samples, 0.02%)</title><rect x="720.0" y="293" width="0.3" height="15.0" fill="rgb(220,78,4)" rx="2" ry="2" />
<text  x="723.04" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (18 samples, 0.04%)</title><rect x="544.9" y="405" width="0.5" height="15.0" fill="rgb(239,156,26)" rx="2" ry="2" />
<text  x="547.91" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (14 samples, 0.03%)</title><rect x="1067.2" y="341" width="0.4" height="15.0" fill="rgb(223,90,52)" rx="2" ry="2" />
<text  x="1070.23" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="496.6" y="181" width="0.7" height="15.0" fill="rgb(208,68,40)" rx="2" ry="2" />
<text  x="499.62" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (27 samples, 0.06%)</title><rect x="900.6" y="309" width="0.6" height="15.0" fill="rgb(216,165,25)" rx="2" ry="2" />
<text  x="903.58" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="447.3" y="277" width="0.2" height="15.0" fill="rgb(239,133,29)" rx="2" ry="2" />
<text  x="450.34" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (14 samples, 0.03%)</title><rect x="211.9" y="165" width="0.4" height="15.0" fill="rgb(250,100,26)" rx="2" ry="2" />
<text  x="214.91" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (490 samples, 1.01%)</title><rect x="551.7" y="325" width="11.9" height="15.0" fill="rgb(244,6,38)" rx="2" ry="2" />
<text  x="554.65" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (54 samples, 0.11%)</title><rect x="1163.8" y="453" width="1.4" height="15.0" fill="rgb(224,99,10)" rx="2" ry="2" />
<text  x="1166.85" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (6 samples, 0.01%)</title><rect x="578.8" y="421" width="0.1" height="15.0" fill="rgb(223,53,42)" rx="2" ry="2" />
<text  x="581.76" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (42 samples, 0.09%)</title><rect x="1047.7" y="245" width="1.0" height="15.0" fill="rgb(228,148,38)" rx="2" ry="2" />
<text  x="1050.72" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (36 samples, 0.07%)</title><rect x="604.2" y="437" width="0.9" height="15.0" fill="rgb(240,200,4)" rx="2" ry="2" />
<text  x="607.20" y="447.5" ></text>
</g>
<g >
<title>query::result::result (38 samples, 0.08%)</title><rect x="584.8" y="421" width="0.9" height="15.0" fill="rgb(247,192,54)" rx="2" ry="2" />
<text  x="587.76" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (26 samples, 0.05%)</title><rect x="76.6" y="453" width="0.6" height="15.0" fill="rgb(214,3,17)" rx="2" ry="2" />
<text  x="79.56" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (10 samples, 0.02%)</title><rect x="217.8" y="117" width="0.3" height="15.0" fill="rgb(245,115,11)" rx="2" ry="2" />
<text  x="220.84" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (16 samples, 0.03%)</title><rect x="20.8" y="421" width="0.4" height="15.0" fill="rgb(219,51,46)" rx="2" ry="2" />
<text  x="23.77" y="431.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="99.2" y="405" width="0.1" height="15.0" fill="rgb(236,161,6)" rx="2" ry="2" />
<text  x="102.22" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="668.9" y="485" width="0.5" height="15.0" fill="rgb(242,197,4)" rx="2" ry="2" />
<text  x="671.88" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (7 samples, 0.01%)</title><rect x="76.4" y="453" width="0.2" height="15.0" fill="rgb(248,56,44)" rx="2" ry="2" />
<text  x="79.39" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (11 samples, 0.02%)</title><rect x="366.0" y="149" width="0.2" height="15.0" fill="rgb(221,91,39)" rx="2" ry="2" />
<text  x="368.96" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="803.3" y="213" width="0.1" height="15.0" fill="rgb(205,80,12)" rx="2" ry="2" />
<text  x="806.28" y="223.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (62 samples, 0.13%)</title><rect x="721.9" y="405" width="1.5" height="15.0" fill="rgb(251,9,16)" rx="2" ry="2" />
<text  x="724.92" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%)</title><rect x="1036.2" y="197" width="2.0" height="15.0" fill="rgb(221,207,29)" rx="2" ry="2" />
<text  x="1039.22" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (167 samples, 0.35%)</title><rect x="97.9" y="421" width="4.1" height="15.0" fill="rgb(214,67,16)" rx="2" ry="2" />
<text  x="100.93" y="431.5" ></text>
</g>
<g >
<title>dht::tri_compare (119 samples, 0.25%)</title><rect x="1086.4" y="229" width="3.0" height="15.0" fill="rgb(241,207,32)" rx="2" ry="2" />
<text  x="1089.45" y="239.5" ></text>
</g>
<g >
<title>make_random_seq (6 samples, 0.01%)</title><rect x="711.1" y="469" width="0.1" height="15.0" fill="rgb(222,156,39)" rx="2" ry="2" />
<text  x="714.05" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="18.0" y="261" width="0.1" height="15.0" fill="rgb(228,145,21)" rx="2" ry="2" />
<text  x="20.96" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="787.5" y="133" width="0.4" height="15.0" fill="rgb(250,88,41)" rx="2" ry="2" />
<text  x="790.50" y="143.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (722 samples, 1.49%)</title><rect x="546.4" y="373" width="17.7" height="15.0" fill="rgb(219,22,30)" rx="2" ry="2" />
<text  x="549.43" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (19 samples, 0.04%)</title><rect x="860.8" y="501" width="0.5" height="15.0" fill="rgb(234,133,39)" rx="2" ry="2" />
<text  x="863.80" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (16 samples, 0.03%)</title><rect x="50.9" y="469" width="0.4" height="15.0" fill="rgb(241,159,47)" rx="2" ry="2" />
<text  x="53.90" y="479.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (7 samples, 0.01%)</title><rect x="73.7" y="453" width="0.2" height="15.0" fill="rgb(221,138,18)" rx="2" ry="2" />
<text  x="76.68" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="669.2" y="469" width="0.2" height="15.0" fill="rgb(234,69,36)" rx="2" ry="2" />
<text  x="672.25" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (32 samples, 0.07%)</title><rect x="316.7" y="165" width="0.7" height="15.0" fill="rgb(234,114,46)" rx="2" ry="2" />
<text  x="319.66" y="175.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (10 samples, 0.02%)</title><rect x="947.4" y="341" width="0.3" height="15.0" fill="rgb(248,97,12)" rx="2" ry="2" />
<text  x="950.41" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="799.9" y="229" width="0.2" height="15.0" fill="rgb(205,122,24)" rx="2" ry="2" />
<text  x="802.93" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (25 samples, 0.05%)</title><rect x="220.2" y="181" width="0.6" height="15.0" fill="rgb(221,179,9)" rx="2" ry="2" />
<text  x="223.16" y="191.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (7 samples, 0.01%)</title><rect x="1031.0" y="165" width="0.2" height="15.0" fill="rgb(220,169,21)" rx="2" ry="2" />
<text  x="1034.04" y="175.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (25 samples, 0.05%)</title><rect x="795.1" y="117" width="0.7" height="15.0" fill="rgb(210,197,32)" rx="2" ry="2" />
<text  x="798.14" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="95.6" y="421" width="0.3" height="15.0" fill="rgb(226,145,15)" rx="2" ry="2" />
<text  x="98.56" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="608.9" y="405" width="0.3" height="15.0" fill="rgb(225,226,45)" rx="2" ry="2" />
<text  x="611.94" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (6 samples, 0.01%)</title><rect x="877.9" y="421" width="0.1" height="15.0" fill="rgb(247,100,24)" rx="2" ry="2" />
<text  x="880.87" y="431.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (7 samples, 0.01%)</title><rect x="1177.0" y="405" width="0.2" height="15.0" fill="rgb(221,83,29)" rx="2" ry="2" />
<text  x="1179.99" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (101 samples, 0.21%)</title><rect x="925.0" y="373" width="2.5" height="15.0" fill="rgb(227,187,45)" rx="2" ry="2" />
<text  x="928.00" y="383.5" ></text>
</g>
<g >
<title>db::validate_for_read (8 samples, 0.02%)</title><rect x="1140.6" y="437" width="0.1" height="15.0" fill="rgb(247,152,16)" rx="2" ry="2" />
<text  x="1143.55" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (5 samples, 0.01%)</title><rect x="315.6" y="181" width="0.1" height="15.0" fill="rgb(236,121,51)" rx="2" ry="2" />
<text  x="318.58" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (13 samples, 0.03%)</title><rect x="613.2" y="437" width="0.3" height="15.0" fill="rgb(247,136,18)" rx="2" ry="2" />
<text  x="616.21" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%)</title><rect x="913.1" y="341" width="0.1" height="15.0" fill="rgb(245,144,44)" rx="2" ry="2" />
<text  x="916.06" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (198 samples, 0.41%)</title><rect x="742.8" y="421" width="4.8" height="15.0" fill="rgb(245,89,46)" rx="2" ry="2" />
<text  x="745.79" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (23 samples, 0.05%)</title><rect x="60.6" y="421" width="0.5" height="15.0" fill="rgb(207,32,8)" rx="2" ry="2" />
<text  x="63.57" y="431.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.09%)</title><rect x="557.6" y="277" width="1.1" height="15.0" fill="rgb(229,105,25)" rx="2" ry="2" />
<text  x="560.59" y="287.5" ></text>
</g>
<g >
<title>__start_context (281 samples, 0.58%)</title><rect x="14.9" y="613" width="6.8" height="15.0" fill="rgb(216,51,21)" rx="2" ry="2" />
<text  x="17.86" y="623.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (13 samples, 0.03%)</title><rect x="452.4" y="325" width="0.3" height="15.0" fill="rgb(226,27,12)" rx="2" ry="2" />
<text  x="455.37" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (8 samples, 0.02%)</title><rect x="1043.4" y="277" width="0.2" height="15.0" fill="rgb(215,76,54)" rx="2" ry="2" />
<text  x="1046.37" y="287.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (69 samples, 0.14%)</title><rect x="1155.1" y="453" width="1.7" height="15.0" fill="rgb(239,165,32)" rx="2" ry="2" />
<text  x="1158.11" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (13 samples, 0.03%)</title><rect x="612.2" y="389" width="0.4" height="15.0" fill="rgb(214,209,40)" rx="2" ry="2" />
<text  x="615.23" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (20 samples, 0.04%)</title><rect x="1152.3" y="453" width="0.5" height="15.0" fill="rgb(239,147,27)" rx="2" ry="2" />
<text  x="1155.27" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="437.1" y="261" width="0.3" height="15.0" fill="rgb(217,36,51)" rx="2" ry="2" />
<text  x="440.14" y="271.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (17 samples, 0.04%)</title><rect x="978.1" y="357" width="0.4" height="15.0" fill="rgb(230,118,34)" rx="2" ry="2" />
<text  x="981.13" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (39 samples, 0.08%)</title><rect x="736.0" y="309" width="1.0" height="15.0" fill="rgb(221,134,53)" rx="2" ry="2" />
<text  x="739.01" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1143.8" y="501" width="0.1" height="15.0" fill="rgb(216,80,3)" rx="2" ry="2" />
<text  x="1146.78" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="615.6" y="437" width="0.2" height="15.0" fill="rgb(232,66,40)" rx="2" ry="2" />
<text  x="618.63" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (14 samples, 0.03%)</title><rect x="70.7" y="405" width="0.3" height="15.0" fill="rgb(242,150,54)" rx="2" ry="2" />
<text  x="73.68" y="415.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="860.9" y="421" width="0.3" height="15.0" fill="rgb(221,210,51)" rx="2" ry="2" />
<text  x="863.95" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="440.8" y="309" width="0.2" height="15.0" fill="rgb(235,216,0)" rx="2" ry="2" />
<text  x="443.82" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (151 samples, 0.31%)</title><rect x="995.2" y="309" width="3.7" height="15.0" fill="rgb(237,204,34)" rx="2" ry="2" />
<text  x="998.20" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (30 samples, 0.06%)</title><rect x="161.2" y="229" width="0.8" height="15.0" fill="rgb(228,50,18)" rx="2" ry="2" />
<text  x="164.24" y="239.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (191 samples, 0.40%)</title><rect x="717.2" y="405" width="4.7" height="15.0" fill="rgb(212,30,14)" rx="2" ry="2" />
<text  x="720.23" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="442.4" y="261" width="0.1" height="15.0" fill="rgb(254,60,46)" rx="2" ry="2" />
<text  x="445.36" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (29 samples, 0.06%)</title><rect x="96.9" y="421" width="0.7" height="15.0" fill="rgb(219,37,51)" rx="2" ry="2" />
<text  x="99.90" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (114 samples, 0.24%)</title><rect x="224.0" y="181" width="2.8" height="15.0" fill="rgb(217,115,46)" rx="2" ry="2" />
<text  x="227.02" y="191.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (477 samples, 0.99%)</title><rect x="61.8" y="453" width="11.6" height="15.0" fill="rgb(219,227,52)" rx="2" ry="2" />
<text  x="64.77" y="463.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="145.0" y="229" width="0.2" height="15.0" fill="rgb(225,53,9)" rx="2" ry="2" />
<text  x="147.98" y="239.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (21 samples, 0.04%)</title><rect x="1178.0" y="469" width="0.5" height="15.0" fill="rgb(210,139,23)" rx="2" ry="2" />
<text  x="1181.04" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="39.2" y="437" width="0.3" height="15.0" fill="rgb(242,32,19)" rx="2" ry="2" />
<text  x="42.15" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="514.1" y="325" width="0.2" height="15.0" fill="rgb(253,164,51)" rx="2" ry="2" />
<text  x="517.07" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="521.9" y="309" width="0.2" height="15.0" fill="rgb(223,178,5)" rx="2" ry="2" />
<text  x="524.89" y="319.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="413.3" y="373" width="0.7" height="15.0" fill="rgb(253,158,22)" rx="2" ry="2" />
<text  x="416.28" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,607 samples, 7.46%)</title><rect x="145.3" y="261" width="88.1" height="15.0" fill="rgb(243,29,4)" rx="2" ry="2" />
<text  x="148.35" y="271.5" >partition_..</text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="838.3" y="341" width="0.2" height="15.0" fill="rgb(250,150,5)" rx="2" ry="2" />
<text  x="841.34" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%)</title><rect x="861.5" y="453" width="0.8" height="15.0" fill="rgb(245,174,15)" rx="2" ry="2" />
<text  x="864.49" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (31 samples, 0.06%)</title><rect x="822.1" y="293" width="0.8" height="15.0" fill="rgb(210,11,6)" rx="2" ry="2" />
<text  x="825.10" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="953.9" y="373" width="0.1" height="15.0" fill="rgb(235,33,22)" rx="2" ry="2" />
<text  x="956.86" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (47,360 samples, 98.00%)</title><rect x="22.2" y="533" width="1156.4" height="15.0" fill="rgb(241,154,10)" rx="2" ry="2" />
<text  x="25.18" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="804.6" y="261" width="0.1" height="15.0" fill="rgb(244,225,43)" rx="2" ry="2" />
<text  x="807.57" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (81 samples, 0.17%)</title><rect x="962.2" y="357" width="2.0" height="15.0" fill="rgb(247,22,39)" rx="2" ry="2" />
<text  x="965.21" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (17 samples, 0.04%)</title><rect x="978.6" y="357" width="0.4" height="15.0" fill="rgb(246,98,20)" rx="2" ry="2" />
<text  x="981.62" y="367.5" ></text>
</g>
<g >
<title>operator delete (101 samples, 0.21%)</title><rect x="93.0" y="437" width="2.5" height="15.0" fill="rgb(225,2,8)" rx="2" ry="2" />
<text  x="96.04" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (396 samples, 0.82%)</title><rect x="679.4" y="501" width="9.7" height="15.0" fill="rgb(222,194,49)" rx="2" ry="2" />
<text  x="682.38" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (23 samples, 0.05%)</title><rect x="404.5" y="229" width="0.6" height="15.0" fill="rgb(220,193,0)" rx="2" ry="2" />
<text  x="407.51" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,248 samples, 2.58%)</title><rect x="546.1" y="405" width="30.5" height="15.0" fill="rgb(254,46,12)" rx="2" ry="2" />
<text  x="549.11" y="415.5" >fl..</text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="1136.7" y="405" width="0.2" height="15.0" fill="rgb(238,160,32)" rx="2" ry="2" />
<text  x="1139.70" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="1040.2" y="245" width="0.5" height="15.0" fill="rgb(217,121,50)" rx="2" ry="2" />
<text  x="1043.20" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (25 samples, 0.05%)</title><rect x="643.4" y="437" width="0.6" height="15.0" fill="rgb(253,105,14)" rx="2" ry="2" />
<text  x="646.37" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1106.0" y="357" width="0.4" height="15.0" fill="rgb(209,157,2)" rx="2" ry="2" />
<text  x="1109.03" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="645.5" y="389" width="0.1" height="15.0" fill="rgb(231,127,4)" rx="2" ry="2" />
<text  x="648.49" y="399.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (374 samples, 0.77%)</title><rect x="789.7" y="213" width="9.1" height="15.0" fill="rgb(217,49,19)" rx="2" ry="2" />
<text  x="792.68" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,914 samples, 3.96%)</title><rect x="1054.2" y="357" width="46.7" height="15.0" fill="rgb(240,72,18)" rx="2" ry="2" />
<text  x="1057.17" y="367.5" >serv..</text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="907.6" y="309" width="0.6" height="15.0" fill="rgb(250,173,13)" rx="2" ry="2" />
<text  x="910.64" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (68 samples, 0.14%)</title><rect x="480.5" y="325" width="1.7" height="15.0" fill="rgb(228,201,6)" rx="2" ry="2" />
<text  x="483.53" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (53 samples, 0.11%)</title><rect x="786.6" y="165" width="1.3" height="15.0" fill="rgb(207,132,11)" rx="2" ry="2" />
<text  x="789.60" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (39 samples, 0.08%)</title><rect x="626.7" y="485" width="0.9" height="15.0" fill="rgb(247,142,21)" rx="2" ry="2" />
<text  x="629.66" y="495.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,364 samples, 98.01%)</title><rect x="22.2" y="597" width="1156.5" height="15.0" fill="rgb(239,42,54)" rx="2" ry="2" />
<text  x="25.18" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (29 samples, 0.06%)</title><rect x="47.8" y="485" width="0.7" height="15.0" fill="rgb(250,123,46)" rx="2" ry="2" />
<text  x="50.80" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (50 samples, 0.10%)</title><rect x="665.2" y="453" width="1.2" height="15.0" fill="rgb(248,152,2)" rx="2" ry="2" />
<text  x="668.17" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (645 samples, 1.33%)</title><rect x="783.6" y="261" width="15.8" height="15.0" fill="rgb(207,121,16)" rx="2" ry="2" />
<text  x="786.64" y="271.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (7 samples, 0.01%)</title><rect x="385.8" y="181" width="0.2" height="15.0" fill="rgb(209,124,47)" rx="2" ry="2" />
<text  x="388.83" y="191.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%)</title><rect x="1144.2" y="501" width="0.3" height="15.0" fill="rgb(254,117,27)" rx="2" ry="2" />
<text  x="1147.19" y="511.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (121 samples, 0.25%)</title><rect x="357.7" y="165" width="2.9" height="15.0" fill="rgb(206,35,52)" rx="2" ry="2" />
<text  x="360.68" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (13 samples, 0.03%)</title><rect x="491.6" y="261" width="0.3" height="15.0" fill="rgb(231,210,5)" rx="2" ry="2" />
<text  x="494.61" y="271.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (7 samples, 0.01%)</title><rect x="19.5" y="325" width="0.2" height="15.0" fill="rgb(250,69,21)" rx="2" ry="2" />
<text  x="22.55" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (8 samples, 0.02%)</title><rect x="964.4" y="373" width="0.2" height="15.0" fill="rgb(246,145,39)" rx="2" ry="2" />
<text  x="967.38" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="931.1" y="309" width="0.2" height="15.0" fill="rgb(229,112,13)" rx="2" ry="2" />
<text  x="934.05" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (145 samples, 0.30%)</title><rect x="988.8" y="293" width="3.6" height="15.0" fill="rgb(226,6,9)" rx="2" ry="2" />
<text  x="991.82" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%)</title><rect x="1177.0" y="373" width="0.1" height="15.0" fill="rgb(217,59,11)" rx="2" ry="2" />
<text  x="1179.99" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="257.3" y="261" width="0.2" height="15.0" fill="rgb(223,17,50)" rx="2" ry="2" />
<text  x="260.32" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (91 samples, 0.19%)</title><rect x="954.9" y="389" width="2.3" height="15.0" fill="rgb(213,125,33)" rx="2" ry="2" />
<text  x="957.93" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (12 samples, 0.02%)</title><rect x="1143.2" y="485" width="0.3" height="15.0" fill="rgb(242,79,22)" rx="2" ry="2" />
<text  x="1146.24" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%)</title><rect x="283.7" y="357" width="0.3" height="15.0" fill="rgb(231,161,6)" rx="2" ry="2" />
<text  x="286.74" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (740 samples, 1.53%)</title><rect x="176.3" y="117" width="18.1" height="15.0" fill="rgb(242,83,18)" rx="2" ry="2" />
<text  x="179.31" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (361 samples, 0.75%)</title><rect x="554.2" y="309" width="8.9" height="15.0" fill="rgb(247,83,21)" rx="2" ry="2" />
<text  x="557.24" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (47 samples, 0.10%)</title><rect x="69.2" y="373" width="1.2" height="15.0" fill="rgb(225,130,32)" rx="2" ry="2" />
<text  x="72.24" y="383.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="408.2" y="261" width="0.7" height="15.0" fill="rgb(223,30,2)" rx="2" ry="2" />
<text  x="411.18" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (33 samples, 0.07%)</title><rect x="861.5" y="437" width="0.8" height="15.0" fill="rgb(207,211,53)" rx="2" ry="2" />
<text  x="864.49" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (6 samples, 0.01%)</title><rect x="260.3" y="309" width="0.2" height="15.0" fill="rgb(244,99,12)" rx="2" ry="2" />
<text  x="263.30" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="227.4" y="197" width="0.1" height="15.0" fill="rgb(223,175,3)" rx="2" ry="2" />
<text  x="230.41" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (176 samples, 0.36%)</title><rect x="663.4" y="485" width="4.3" height="15.0" fill="rgb(231,102,49)" rx="2" ry="2" />
<text  x="666.41" y="495.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (21 samples, 0.04%)</title><rect x="522.6" y="293" width="0.5" height="15.0" fill="rgb(225,78,26)" rx="2" ry="2" />
<text  x="525.60" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (18 samples, 0.04%)</title><rect x="551.8" y="309" width="0.4" height="15.0" fill="rgb(237,105,50)" rx="2" ry="2" />
<text  x="554.75" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (18 samples, 0.04%)</title><rect x="122.5" y="309" width="0.4" height="15.0" fill="rgb(213,46,8)" rx="2" ry="2" />
<text  x="125.47" y="319.5" ></text>
</g>
<g >
<title>validation::validate_column_family (358 samples, 0.74%)</title><rect x="816.8" y="389" width="8.8" height="15.0" fill="rgb(231,71,34)" rx="2" ry="2" />
<text  x="819.83" y="399.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (93 samples, 0.19%)</title><rect x="411.0" y="373" width="2.2" height="15.0" fill="rgb(251,42,47)" rx="2" ry="2" />
<text  x="413.96" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="656.3" y="437" width="0.3" height="15.0" fill="rgb(241,223,15)" rx="2" ry="2" />
<text  x="659.28" y="447.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="576.2" y="389" width="0.3" height="15.0" fill="rgb(214,148,39)" rx="2" ry="2" />
<text  x="579.19" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="137.7" y="229" width="0.4" height="15.0" fill="rgb(237,125,8)" rx="2" ry="2" />
<text  x="140.70" y="239.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (5 samples, 0.01%)</title><rect x="979.6" y="357" width="0.2" height="15.0" fill="rgb(210,26,14)" rx="2" ry="2" />
<text  x="982.64" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="419.0" y="373" width="0.2" height="15.0" fill="rgb(229,189,30)" rx="2" ry="2" />
<text  x="422.04" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (53 samples, 0.11%)</title><rect x="152.4" y="197" width="1.3" height="15.0" fill="rgb(232,62,32)" rx="2" ry="2" />
<text  x="155.43" y="207.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (63 samples, 0.13%)</title><rect x="411.5" y="357" width="1.6" height="15.0" fill="rgb(253,199,45)" rx="2" ry="2" />
<text  x="414.55" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (7 samples, 0.01%)</title><rect x="774.9" y="293" width="0.1" height="15.0" fill="rgb(205,105,9)" rx="2" ry="2" />
<text  x="777.85" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.09%)</title><rect x="732.5" y="373" width="1.1" height="15.0" fill="rgb(214,197,37)" rx="2" ry="2" />
<text  x="735.49" y="383.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (53 samples, 0.11%)</title><rect x="1064.0" y="277" width="1.3" height="15.0" fill="rgb(230,46,9)" rx="2" ry="2" />
<text  x="1066.98" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (77 samples, 0.16%)</title><rect x="752.5" y="341" width="1.9" height="15.0" fill="rgb(225,173,37)" rx="2" ry="2" />
<text  x="755.51" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="662.2" y="485" width="0.3" height="15.0" fill="rgb(218,169,37)" rx="2" ry="2" />
<text  x="665.22" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (6 samples, 0.01%)</title><rect x="880.4" y="405" width="0.2" height="15.0" fill="rgb(223,137,44)" rx="2" ry="2" />
<text  x="883.41" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (28 samples, 0.06%)</title><rect x="635.9" y="485" width="0.7" height="15.0" fill="rgb(252,80,17)" rx="2" ry="2" />
<text  x="638.94" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="533.4" y="405" width="0.4" height="15.0" fill="rgb(250,34,0)" rx="2" ry="2" />
<text  x="536.39" y="415.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="553.3" y="277" width="0.9" height="15.0" fill="rgb(251,128,42)" rx="2" ry="2" />
<text  x="556.34" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (9 samples, 0.02%)</title><rect x="43.9" y="485" width="0.2" height="15.0" fill="rgb(248,127,29)" rx="2" ry="2" />
<text  x="46.89" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (6 samples, 0.01%)</title><rect x="906.5" y="357" width="0.2" height="15.0" fill="rgb(205,22,30)" rx="2" ry="2" />
<text  x="909.51" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (9 samples, 0.02%)</title><rect x="535.8" y="405" width="0.3" height="15.0" fill="rgb(225,66,39)" rx="2" ry="2" />
<text  x="538.83" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (21 samples, 0.04%)</title><rect x="561.5" y="277" width="0.5" height="15.0" fill="rgb(220,4,5)" rx="2" ry="2" />
<text  x="564.52" y="287.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (7 samples, 0.01%)</title><rect x="679.1" y="485" width="0.2" height="15.0" fill="rgb(239,151,46)" rx="2" ry="2" />
<text  x="682.09" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="406.0" y="277" width="0.2" height="15.0" fill="rgb(237,206,42)" rx="2" ry="2" />
<text  x="409.03" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="678.3" y="325" width="0.5" height="15.0" fill="rgb(233,60,17)" rx="2" ry="2" />
<text  x="681.28" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="568.8" y="341" width="0.2" height="15.0" fill="rgb(225,177,25)" rx="2" ry="2" />
<text  x="571.77" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (543 samples, 1.12%)</title><rect x="270.3" y="357" width="13.3" height="15.0" fill="rgb(210,71,7)" rx="2" ry="2" />
<text  x="273.34" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (13 samples, 0.03%)</title><rect x="940.5" y="405" width="0.3" height="15.0" fill="rgb(254,168,32)" rx="2" ry="2" />
<text  x="943.48" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (22 samples, 0.05%)</title><rect x="544.8" y="421" width="0.6" height="15.0" fill="rgb(251,173,50)" rx="2" ry="2" />
<text  x="547.82" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,199 samples, 4.55%)</title><rect x="999.0" y="309" width="53.7" height="15.0" fill="rgb(250,157,39)" rx="2" ry="2" />
<text  x="1002.01" y="319.5" >servi..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (12 samples, 0.02%)</title><rect x="1031.7" y="197" width="0.3" height="15.0" fill="rgb(221,129,49)" rx="2" ry="2" />
<text  x="1034.68" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="414.6" y="373" width="0.1" height="15.0" fill="rgb(230,77,39)" rx="2" ry="2" />
<text  x="417.60" y="383.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (31 samples, 0.06%)</title><rect x="409.1" y="261" width="0.8" height="15.0" fill="rgb(251,173,43)" rx="2" ry="2" />
<text  x="412.13" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (9 samples, 0.02%)</title><rect x="491.3" y="261" width="0.2" height="15.0" fill="rgb(253,175,22)" rx="2" ry="2" />
<text  x="494.27" y="271.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (26 samples, 0.05%)</title><rect x="56.8" y="453" width="0.7" height="15.0" fill="rgb(240,125,16)" rx="2" ry="2" />
<text  x="59.83" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (171 samples, 0.35%)</title><rect x="794.6" y="165" width="4.1" height="15.0" fill="rgb(211,192,24)" rx="2" ry="2" />
<text  x="797.56" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="839.4" y="405" width="0.1" height="15.0" fill="rgb(231,106,18)" rx="2" ry="2" />
<text  x="842.41" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="931.3" y="325" width="0.1" height="15.0" fill="rgb(208,72,4)" rx="2" ry="2" />
<text  x="934.32" y="335.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (65 samples, 0.13%)</title><rect x="495.9" y="229" width="1.6" height="15.0" fill="rgb(207,69,11)" rx="2" ry="2" />
<text  x="498.91" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (34 samples, 0.07%)</title><rect x="678.2" y="501" width="0.9" height="15.0" fill="rgb(210,48,4)" rx="2" ry="2" />
<text  x="681.23" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="802.3" y="229" width="0.3" height="15.0" fill="rgb(252,158,48)" rx="2" ry="2" />
<text  x="805.27" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (25 samples, 0.05%)</title><rect x="525.0" y="245" width="0.6" height="15.0" fill="rgb(243,40,23)" rx="2" ry="2" />
<text  x="527.97" y="255.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (7 samples, 0.01%)</title><rect x="1068.4" y="341" width="0.2" height="15.0" fill="rgb(212,69,21)" rx="2" ry="2" />
<text  x="1071.40" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (59 samples, 0.12%)</title><rect x="1155.3" y="437" width="1.5" height="15.0" fill="rgb(233,93,14)" rx="2" ry="2" />
<text  x="1158.33" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (7 samples, 0.01%)</title><rect x="405.3" y="277" width="0.2" height="15.0" fill="rgb(217,58,20)" rx="2" ry="2" />
<text  x="408.34" y="287.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (22 samples, 0.05%)</title><rect x="596.3" y="405" width="0.5" height="15.0" fill="rgb(245,58,19)" rx="2" ry="2" />
<text  x="599.29" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.06%)</title><rect x="741.4" y="389" width="0.7" height="15.0" fill="rgb(253,74,35)" rx="2" ry="2" />
<text  x="744.38" y="399.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="629.2" y="469" width="0.9" height="15.0" fill="rgb(237,174,7)" rx="2" ry="2" />
<text  x="632.23" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.01%)</title><rect x="310.9" y="165" width="0.2" height="15.0" fill="rgb(215,162,41)" rx="2" ry="2" />
<text  x="313.92" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="689.9" y="469" width="0.2" height="15.0" fill="rgb(231,173,24)" rx="2" ry="2" />
<text  x="692.91" y="479.5" ></text>
</g>
<g >
<title>do_cql_test (272 samples, 0.56%)</title><rect x="15.1" y="549" width="6.6" height="15.0" fill="rgb(254,219,20)" rx="2" ry="2" />
<text  x="18.08" y="559.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (42 samples, 0.09%)</title><rect x="675.7" y="469" width="1.0" height="15.0" fill="rgb(225,37,36)" rx="2" ry="2" />
<text  x="678.72" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (39 samples, 0.08%)</title><rect x="63.9" y="405" width="1.0" height="15.0" fill="rgb(215,211,5)" rx="2" ry="2" />
<text  x="66.91" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="412.3" y="325" width="0.7" height="15.0" fill="rgb(215,61,44)" rx="2" ry="2" />
<text  x="415.25" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (12 samples, 0.02%)</title><rect x="1142.5" y="309" width="0.3" height="15.0" fill="rgb(229,164,10)" rx="2" ry="2" />
<text  x="1145.46" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (106 samples, 0.22%)</title><rect x="407.3" y="293" width="2.6" height="15.0" fill="rgb(235,83,22)" rx="2" ry="2" />
<text  x="410.30" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (327 samples, 0.68%)</title><rect x="790.7" y="181" width="8.0" height="15.0" fill="rgb(229,39,41)" rx="2" ry="2" />
<text  x="793.75" y="191.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (11 samples, 0.02%)</title><rect x="1142.8" y="181" width="0.3" height="15.0" fill="rgb(243,149,5)" rx="2" ry="2" />
<text  x="1145.80" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="507.4" y="293" width="0.1" height="15.0" fill="rgb(224,84,2)" rx="2" ry="2" />
<text  x="510.38" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (42 samples, 0.09%)</title><rect x="37.5" y="421" width="1.1" height="15.0" fill="rgb(231,97,34)" rx="2" ry="2" />
<text  x="40.54" y="431.5" ></text>
</g>
<g >
<title>database::apply_in_memory (22 samples, 0.05%)</title><rect x="1141.5" y="293" width="0.5" height="15.0" fill="rgb(231,108,17)" rx="2" ry="2" />
<text  x="1144.51" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="633.8" y="485" width="0.4" height="15.0" fill="rgb(234,195,17)" rx="2" ry="2" />
<text  x="636.84" y="495.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (25 samples, 0.05%)</title><rect x="228.8" y="229" width="0.6" height="15.0" fill="rgb(212,224,2)" rx="2" ry="2" />
<text  x="231.83" y="239.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (92 samples, 0.19%)</title><rect x="823.3" y="373" width="2.3" height="15.0" fill="rgb(240,144,1)" rx="2" ry="2" />
<text  x="826.32" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.02%)</title><rect x="398.1" y="197" width="0.3" height="15.0" fill="rgb(243,206,0)" rx="2" ry="2" />
<text  x="401.07" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (313 samples, 0.65%)</title><rect x="430.7" y="309" width="7.7" height="15.0" fill="rgb(244,56,54)" rx="2" ry="2" />
<text  x="433.74" y="319.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,072 samples, 37.40%)</title><rect x="104.6" y="437" width="441.2" height="15.0" fill="rgb(230,180,8)" rx="2" ry="2" />
<text  x="107.57" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (18 samples, 0.04%)</title><rect x="237.0" y="197" width="0.4" height="15.0" fill="rgb(222,213,23)" rx="2" ry="2" />
<text  x="239.96" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (71 samples, 0.15%)</title><rect x="906.9" y="357" width="1.8" height="15.0" fill="rgb(245,173,37)" rx="2" ry="2" />
<text  x="909.93" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="994.2" y="325" width="0.2" height="15.0" fill="rgb(211,188,37)" rx="2" ry="2" />
<text  x="997.20" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%)</title><rect x="831.9" y="373" width="0.2" height="15.0" fill="rgb(227,212,19)" rx="2" ry="2" />
<text  x="834.89" y="383.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="916.7" y="341" width="0.3" height="15.0" fill="rgb(217,80,50)" rx="2" ry="2" />
<text  x="919.74" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (89 samples, 0.18%)</title><rect x="801.6" y="261" width="2.2" height="15.0" fill="rgb(227,184,32)" rx="2" ry="2" />
<text  x="804.62" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (39 samples, 0.08%)</title><rect x="749.5" y="341" width="0.9" height="15.0" fill="rgb(206,137,11)" rx="2" ry="2" />
<text  x="752.48" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="783.4" y="261" width="0.2" height="15.0" fill="rgb(246,88,37)" rx="2" ry="2" />
<text  x="786.45" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.03%)</title><rect x="21.8" y="565" width="0.3" height="15.0" fill="rgb(238,55,27)" rx="2" ry="2" />
<text  x="24.82" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%)</title><rect x="1044.0" y="245" width="0.5" height="15.0" fill="rgb(222,18,52)" rx="2" ry="2" />
<text  x="1047.01" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (17 samples, 0.04%)</title><rect x="57.6" y="453" width="0.4" height="15.0" fill="rgb(237,164,25)" rx="2" ry="2" />
<text  x="60.57" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (63 samples, 0.13%)</title><rect x="759.8" y="373" width="1.6" height="15.0" fill="rgb(250,146,32)" rx="2" ry="2" />
<text  x="762.81" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%)</title><rect x="1033.2" y="213" width="0.2" height="15.0" fill="rgb(228,65,23)" rx="2" ry="2" />
<text  x="1036.22" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (11 samples, 0.02%)</title><rect x="1032.9" y="213" width="0.2" height="15.0" fill="rgb(212,68,22)" rx="2" ry="2" />
<text  x="1035.87" y="223.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (20 samples, 0.04%)</title><rect x="429.0" y="325" width="0.4" height="15.0" fill="rgb(219,66,4)" rx="2" ry="2" />
<text  x="431.96" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (17 samples, 0.04%)</title><rect x="623.9" y="469" width="0.4" height="15.0" fill="rgb(246,58,37)" rx="2" ry="2" />
<text  x="626.86" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%)</title><rect x="679.1" y="453" width="0.2" height="15.0" fill="rgb(223,112,40)" rx="2" ry="2" />
<text  x="682.11" y="463.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (14 samples, 0.03%)</title><rect x="137.4" y="229" width="0.3" height="15.0" fill="rgb(241,30,15)" rx="2" ry="2" />
<text  x="140.36" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (10 samples, 0.02%)</title><rect x="685.9" y="453" width="0.2" height="15.0" fill="rgb(205,51,49)" rx="2" ry="2" />
<text  x="688.90" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="648.3" y="437" width="0.4" height="15.0" fill="rgb(243,212,19)" rx="2" ry="2" />
<text  x="651.32" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (10 samples, 0.02%)</title><rect x="878.0" y="421" width="0.3" height="15.0" fill="rgb(237,167,19)" rx="2" ry="2" />
<text  x="881.04" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (47 samples, 0.10%)</title><rect x="1010.3" y="245" width="1.1" height="15.0" fill="rgb(241,64,15)" rx="2" ry="2" />
<text  x="1013.26" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="678.3" y="357" width="0.6" height="15.0" fill="rgb(209,15,37)" rx="2" ry="2" />
<text  x="681.26" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (12 samples, 0.02%)</title><rect x="1153.6" y="485" width="0.3" height="15.0" fill="rgb(223,217,44)" rx="2" ry="2" />
<text  x="1156.59" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (34 samples, 0.07%)</title><rect x="760.4" y="341" width="0.8" height="15.0" fill="rgb(215,150,9)" rx="2" ry="2" />
<text  x="763.40" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (19 samples, 0.04%)</title><rect x="703.2" y="501" width="0.5" height="15.0" fill="rgb(212,159,49)" rx="2" ry="2" />
<text  x="706.19" y="511.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (39 samples, 0.08%)</title><rect x="16.1" y="293" width="1.0" height="15.0" fill="rgb(246,188,10)" rx="2" ry="2" />
<text  x="19.13" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (5 samples, 0.01%)</title><rect x="252.8" y="277" width="0.1" height="15.0" fill="rgb(246,14,52)" rx="2" ry="2" />
<text  x="255.76" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4,859 samples, 10.05%)</title><rect x="291.5" y="341" width="118.7" height="15.0" fill="rgb(241,197,23)" rx="2" ry="2" />
<text  x="294.51" y="351.5" >seastar::futur..</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (364 samples, 0.75%)</title><rect x="1023.4" y="213" width="8.9" height="15.0" fill="rgb(253,88,27)" rx="2" ry="2" />
<text  x="1026.42" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="141.0" y="277" width="0.2" height="15.0" fill="rgb(226,85,11)" rx="2" ry="2" />
<text  x="144.05" y="287.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (6 samples, 0.01%)</title><rect x="1141.6" y="213" width="0.1" height="15.0" fill="rgb(221,29,25)" rx="2" ry="2" />
<text  x="1144.58" y="223.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="696.1" y="421" width="0.2" height="15.0" fill="rgb(249,74,14)" rx="2" ry="2" />
<text  x="699.13" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (620 samples, 1.28%)</title><rect x="1110.4" y="421" width="15.2" height="15.0" fill="rgb(206,133,53)" rx="2" ry="2" />
<text  x="1113.42" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (6 samples, 0.01%)</title><rect x="829.4" y="437" width="0.2" height="15.0" fill="rgb(224,52,29)" rx="2" ry="2" />
<text  x="832.43" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="702.2" y="485" width="0.3" height="15.0" fill="rgb(245,162,13)" rx="2" ry="2" />
<text  x="705.16" y="495.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (9 samples, 0.02%)</title><rect x="504.3" y="229" width="0.3" height="15.0" fill="rgb(245,99,54)" rx="2" ry="2" />
<text  x="507.33" y="239.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (17 samples, 0.04%)</title><rect x="645.2" y="421" width="0.4" height="15.0" fill="rgb(231,37,54)" rx="2" ry="2" />
<text  x="648.22" y="431.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (87 samples, 0.18%)</title><rect x="781.0" y="261" width="2.2" height="15.0" fill="rgb(227,77,35)" rx="2" ry="2" />
<text  x="784.03" y="271.5" ></text>
</g>
<g >
<title>table::query (22 samples, 0.05%)</title><rect x="1176.9" y="501" width="0.5" height="15.0" fill="rgb(230,16,33)" rx="2" ry="2" />
<text  x="1179.86" y="511.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (49 samples, 0.10%)</title><rect x="231.0" y="245" width="1.2" height="15.0" fill="rgb(214,123,31)" rx="2" ry="2" />
<text  x="234.00" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (11 samples, 0.02%)</title><rect x="651.4" y="485" width="0.3" height="15.0" fill="rgb(210,110,8)" rx="2" ry="2" />
<text  x="654.42" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (29 samples, 0.06%)</title><rect x="991.4" y="277" width="0.7" height="15.0" fill="rgb(217,80,16)" rx="2" ry="2" />
<text  x="994.36" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="592.3" y="373" width="0.1" height="15.0" fill="rgb(216,192,38)" rx="2" ry="2" />
<text  x="595.26" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (46 samples, 0.10%)</title><rect x="1162.7" y="453" width="1.1" height="15.0" fill="rgb(217,170,39)" rx="2" ry="2" />
<text  x="1165.73" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (239 samples, 0.49%)</title><rect x="393.3" y="213" width="5.8" height="15.0" fill="rgb(233,0,34)" rx="2" ry="2" />
<text  x="396.31" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::range_or_slice_eq_null (5 samples, 0.01%)</title><rect x="861.5" y="389" width="0.1" height="15.0" fill="rgb(224,117,26)" rx="2" ry="2" />
<text  x="864.51" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (142 samples, 0.29%)</title><rect x="265.4" y="341" width="3.5" height="15.0" fill="rgb(241,162,8)" rx="2" ry="2" />
<text  x="268.41" y="351.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (37 samples, 0.08%)</title><rect x="745.1" y="373" width="0.9" height="15.0" fill="rgb(240,145,3)" rx="2" ry="2" />
<text  x="748.06" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="965.2" y="373" width="0.2" height="15.0" fill="rgb(222,153,4)" rx="2" ry="2" />
<text  x="968.16" y="383.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%)</title><rect x="99.6" y="389" width="1.0" height="15.0" fill="rgb(232,161,1)" rx="2" ry="2" />
<text  x="102.61" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (18 samples, 0.04%)</title><rect x="716.4" y="389" width="0.5" height="15.0" fill="rgb(235,100,28)" rx="2" ry="2" />
<text  x="719.45" y="399.5" ></text>
</g>
<g >
<title>database::find_keyspace (30 samples, 0.06%)</title><rect x="969.8" y="357" width="0.7" height="15.0" fill="rgb(213,191,25)" rx="2" ry="2" />
<text  x="972.75" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="657.2" y="405" width="0.3" height="15.0" fill="rgb(248,187,20)" rx="2" ry="2" />
<text  x="660.21" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="310.7" y="165" width="0.2" height="15.0" fill="rgb(220,226,27)" rx="2" ry="2" />
<text  x="313.70" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (6 samples, 0.01%)</title><rect x="47.7" y="485" width="0.1" height="15.0" fill="rgb(238,197,16)" rx="2" ry="2" />
<text  x="50.65" y="495.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="249.3" y="213" width="0.1" height="15.0" fill="rgb(236,33,51)" rx="2" ry="2" />
<text  x="252.27" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="405.2" y="277" width="0.1" height="15.0" fill="rgb(231,204,28)" rx="2" ry="2" />
<text  x="408.20" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.06%)</title><rect x="36.8" y="421" width="0.7" height="15.0" fill="rgb(241,51,50)" rx="2" ry="2" />
<text  x="39.79" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,174 samples, 14.85%)</title><rect x="111.1" y="405" width="175.1" height="15.0" fill="rgb(233,75,53)" rx="2" ry="2" />
<text  x="114.06" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>service::digest_read_resolver::add_data (178 samples, 0.37%)</title><rect x="694.3" y="453" width="4.3" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="697.30" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (50 samples, 0.10%)</title><rect x="938.8" y="389" width="1.2" height="15.0" fill="rgb(247,156,36)" rx="2" ry="2" />
<text  x="941.79" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="284.9" y="357" width="0.3" height="15.0" fill="rgb(241,39,52)" rx="2" ry="2" />
<text  x="287.92" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (7 samples, 0.01%)</title><rect x="1173.6" y="453" width="0.1" height="15.0" fill="rgb(223,18,12)" rx="2" ry="2" />
<text  x="1176.57" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (86 samples, 0.18%)</title><rect x="730.2" y="373" width="2.1" height="15.0" fill="rgb(212,93,42)" rx="2" ry="2" />
<text  x="733.17" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (11 samples, 0.02%)</title><rect x="229.1" y="213" width="0.2" height="15.0" fill="rgb(234,31,36)" rx="2" ry="2" />
<text  x="232.07" y="223.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="934.9" y="405" width="1.0" height="15.0" fill="rgb(251,176,8)" rx="2" ry="2" />
<text  x="937.89" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="772.3" y="309" width="0.3" height="15.0" fill="rgb(246,1,27)" rx="2" ry="2" />
<text  x="775.34" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="152.3" y="197" width="0.1" height="15.0" fill="rgb(253,86,6)" rx="2" ry="2" />
<text  x="155.26" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (31 samples, 0.06%)</title><rect x="665.6" y="437" width="0.8" height="15.0" fill="rgb(210,48,20)" rx="2" ry="2" />
<text  x="668.61" y="447.5" ></text>
</g>
<g >
<title>service::client_state::has_access (6 samples, 0.01%)</title><rect x="21.4" y="437" width="0.1" height="15.0" fill="rgb(238,207,11)" rx="2" ry="2" />
<text  x="24.40" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (16 samples, 0.03%)</title><rect x="495.5" y="229" width="0.4" height="15.0" fill="rgb(215,199,43)" rx="2" ry="2" />
<text  x="498.49" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (23 samples, 0.05%)</title><rect x="761.8" y="357" width="0.6" height="15.0" fill="rgb(226,48,9)" rx="2" ry="2" />
<text  x="764.81" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;reader_permit::impl, boost::intrusive::list_node_traits&lt;void*&gt;,  (5 samples, 0.01%)</title><rect x="1038.5" y="181" width="0.1" height="15.0" fill="rgb(254,178,33)" rx="2" ry="2" />
<text  x="1041.49" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%)</title><rect x="788.9" y="197" width="0.8" height="15.0" fill="rgb(215,88,33)" rx="2" ry="2" />
<text  x="791.89" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="917.5" y="373" width="0.4" height="15.0" fill="rgb(232,172,34)" rx="2" ry="2" />
<text  x="920.48" y="383.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (168 samples, 0.35%)</title><rect x="190.0" y="69" width="4.1" height="15.0" fill="rgb(215,88,50)" rx="2" ry="2" />
<text  x="193.03" y="79.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.03%)</title><rect x="21.8" y="613" width="0.3" height="15.0" fill="rgb(226,165,24)" rx="2" ry="2" />
<text  x="24.82" y="623.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (31 samples, 0.06%)</title><rect x="102.2" y="421" width="0.7" height="15.0" fill="rgb(252,0,20)" rx="2" ry="2" />
<text  x="105.15" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (14 samples, 0.03%)</title><rect x="366.6" y="213" width="0.3" height="15.0" fill="rgb(208,161,9)" rx="2" ry="2" />
<text  x="369.59" y="223.5" ></text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.02%)</title><rect x="1094.6" y="245" width="0.3" height="15.0" fill="rgb(251,200,40)" rx="2" ry="2" />
<text  x="1097.63" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="808.9" y="293" width="0.5" height="15.0" fill="rgb(220,192,23)" rx="2" ry="2" />
<text  x="811.94" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (17 samples, 0.04%)</title><rect x="480.0" y="325" width="0.4" height="15.0" fill="rgb(221,169,11)" rx="2" ry="2" />
<text  x="483.01" y="335.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="617.4" y="389" width="0.5" height="15.0" fill="rgb(213,115,28)" rx="2" ry="2" />
<text  x="620.39" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.02%)</title><rect x="153.4" y="181" width="0.3" height="15.0" fill="rgb(212,109,14)" rx="2" ry="2" />
<text  x="156.43" y="191.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (7 samples, 0.01%)</title><rect x="595.0" y="405" width="0.2" height="15.0" fill="rgb(249,215,4)" rx="2" ry="2" />
<text  x="597.99" y="415.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (8 samples, 0.02%)</title><rect x="917.3" y="373" width="0.2" height="15.0" fill="rgb(208,190,20)" rx="2" ry="2" />
<text  x="920.28" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (19 samples, 0.04%)</title><rect x="436.1" y="261" width="0.4" height="15.0" fill="rgb(226,85,49)" rx="2" ry="2" />
<text  x="439.09" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="675.5" y="469" width="0.2" height="15.0" fill="rgb(247,46,10)" rx="2" ry="2" />
<text  x="678.47" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="799.7" y="245" width="0.4" height="15.0" fill="rgb(232,77,45)" rx="2" ry="2" />
<text  x="802.74" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (47 samples, 0.10%)</title><rect x="1024.7" y="197" width="1.2" height="15.0" fill="rgb(206,194,33)" rx="2" ry="2" />
<text  x="1027.74" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (36 samples, 0.07%)</title><rect x="228.0" y="213" width="0.8" height="15.0" fill="rgb(205,223,40)" rx="2" ry="2" />
<text  x="230.95" y="223.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (20 samples, 0.04%)</title><rect x="1141.5" y="277" width="0.5" height="15.0" fill="rgb(237,66,23)" rx="2" ry="2" />
<text  x="1144.53" y="287.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (38 samples, 0.08%)</title><rect x="1142.3" y="485" width="0.9" height="15.0" fill="rgb(247,140,3)" rx="2" ry="2" />
<text  x="1145.31" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="386.2" y="197" width="0.3" height="15.0" fill="rgb(248,156,13)" rx="2" ry="2" />
<text  x="389.25" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (11 samples, 0.02%)</title><rect x="318.0" y="213" width="0.2" height="15.0" fill="rgb(233,80,0)" rx="2" ry="2" />
<text  x="320.98" y="223.5" ></text>
</g>
<g >
<title>make_combined_reader (890 samples, 1.84%)</title><rect x="427.5" y="341" width="21.8" height="15.0" fill="rgb(210,63,4)" rx="2" ry="2" />
<text  x="430.54" y="351.5" >m..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (24 samples, 0.05%)</title><rect x="633.2" y="485" width="0.6" height="15.0" fill="rgb(237,23,13)" rx="2" ry="2" />
<text  x="636.21" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1133.4" y="389" width="0.1" height="15.0" fill="rgb(253,122,51)" rx="2" ry="2" />
<text  x="1136.35" y="399.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (29 samples, 0.06%)</title><rect x="242.8" y="197" width="0.7" height="15.0" fill="rgb(208,87,18)" rx="2" ry="2" />
<text  x="245.80" y="207.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (676 samples, 1.40%)</title><rect x="726.3" y="421" width="16.5" height="15.0" fill="rgb(215,110,30)" rx="2" ry="2" />
<text  x="729.29" y="431.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (11 samples, 0.02%)</title><rect x="923.7" y="389" width="0.2" height="15.0" fill="rgb(253,43,29)" rx="2" ry="2" />
<text  x="926.68" y="399.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.17%)</title><rect x="1070.7" y="325" width="2.0" height="15.0" fill="rgb(234,84,2)" rx="2" ry="2" />
<text  x="1073.72" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="734.1" y="341" width="0.2" height="15.0" fill="rgb(206,161,14)" rx="2" ry="2" />
<text  x="737.05" y="351.5" ></text>
</g>
<g >
<title>seastar::app_template::run (47,364 samples, 98.01%)</title><rect x="22.2" y="581" width="1156.5" height="15.0" fill="rgb(211,116,30)" rx="2" ry="2" />
<text  x="25.18" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="608.1" y="421" width="0.1" height="15.0" fill="rgb(245,140,38)" rx="2" ry="2" />
<text  x="611.06" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (5 samples, 0.01%)</title><rect x="593.2" y="421" width="0.1" height="15.0" fill="rgb(213,149,41)" rx="2" ry="2" />
<text  x="596.21" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (5 samples, 0.01%)</title><rect x="387.0" y="229" width="0.1" height="15.0" fill="rgb(222,3,27)" rx="2" ry="2" />
<text  x="390.01" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="1031.5" y="197" width="0.2" height="15.0" fill="rgb(216,60,26)" rx="2" ry="2" />
<text  x="1034.51" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (8 samples, 0.02%)</title><rect x="932.1" y="389" width="0.2" height="15.0" fill="rgb(218,119,22)" rx="2" ry="2" />
<text  x="935.08" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="894.8" y="261" width="0.2" height="15.0" fill="rgb(214,87,0)" rx="2" ry="2" />
<text  x="897.77" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="845.0" y="325" width="0.1" height="15.0" fill="rgb(223,9,44)" rx="2" ry="2" />
<text  x="847.96" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (30 samples, 0.06%)</title><rect x="445.8" y="261" width="0.7" height="15.0" fill="rgb(214,92,37)" rx="2" ry="2" />
<text  x="448.75" y="271.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (8 samples, 0.02%)</title><rect x="805.5" y="293" width="0.2" height="15.0" fill="rgb(235,89,30)" rx="2" ry="2" />
<text  x="808.50" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="825.2" y="277" width="0.2" height="15.0" fill="rgb(222,78,35)" rx="2" ry="2" />
<text  x="828.20" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="688.0" y="469" width="0.2" height="15.0" fill="rgb(210,59,40)" rx="2" ry="2" />
<text  x="691.05" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="783.2" y="261" width="0.1" height="15.0" fill="rgb(235,196,31)" rx="2" ry="2" />
<text  x="786.16" y="271.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (7 samples, 0.01%)</title><rect x="1141.8" y="245" width="0.1" height="15.0" fill="rgb(213,127,27)" rx="2" ry="2" />
<text  x="1144.75" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="210.5" y="85" width="0.2" height="15.0" fill="rgb(234,144,22)" rx="2" ry="2" />
<text  x="213.49" y="95.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="73.4" y="453" width="0.2" height="15.0" fill="rgb(250,86,35)" rx="2" ry="2" />
<text  x="76.41" y="463.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (25 samples, 0.05%)</title><rect x="813.0" y="293" width="0.6" height="15.0" fill="rgb(220,87,19)" rx="2" ry="2" />
<text  x="815.99" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (85 samples, 0.18%)</title><rect x="786.0" y="197" width="2.1" height="15.0" fill="rgb(242,124,51)" rx="2" ry="2" />
<text  x="788.99" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="1169.8" y="485" width="0.1" height="15.0" fill="rgb(240,58,38)" rx="2" ry="2" />
<text  x="1172.76" y="495.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%)</title><rect x="1073.8" y="309" width="0.2" height="15.0" fill="rgb(220,63,16)" rx="2" ry="2" />
<text  x="1076.85" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (63 samples, 0.13%)</title><rect x="143.6" y="261" width="1.6" height="15.0" fill="rgb(210,166,25)" rx="2" ry="2" />
<text  x="146.64" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (186 samples, 0.38%)</title><rect x="847.4" y="421" width="4.6" height="15.0" fill="rgb(209,221,36)" rx="2" ry="2" />
<text  x="850.45" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1103.7" y="357" width="0.4" height="15.0" fill="rgb(208,154,50)" rx="2" ry="2" />
<text  x="1106.71" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="61.2" y="437" width="0.1" height="15.0" fill="rgb(243,122,41)" rx="2" ry="2" />
<text  x="64.15" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="573.2" y="357" width="0.3" height="15.0" fill="rgb(217,70,44)" rx="2" ry="2" />
<text  x="576.24" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (9 samples, 0.02%)</title><rect x="679.1" y="501" width="0.2" height="15.0" fill="rgb(233,71,4)" rx="2" ry="2" />
<text  x="682.06" y="511.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (33 samples, 0.07%)</title><rect x="1141.5" y="325" width="0.8" height="15.0" fill="rgb(231,148,14)" rx="2" ry="2" />
<text  x="1144.48" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (60 samples, 0.12%)</title><rect x="15.7" y="357" width="1.5" height="15.0" fill="rgb(234,164,0)" rx="2" ry="2" />
<text  x="18.74" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%)</title><rect x="715.7" y="389" width="0.7" height="15.0" fill="rgb(207,219,5)" rx="2" ry="2" />
<text  x="718.71" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (6 samples, 0.01%)</title><rect x="647.8" y="453" width="0.2" height="15.0" fill="rgb(208,196,20)" rx="2" ry="2" />
<text  x="650.81" y="463.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (27 samples, 0.06%)</title><rect x="614.3" y="405" width="0.7" height="15.0" fill="rgb(240,200,29)" rx="2" ry="2" />
<text  x="617.33" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (156 samples, 0.32%)</title><rect x="538.9" y="389" width="3.8" height="15.0" fill="rgb(215,166,31)" rx="2" ry="2" />
<text  x="541.88" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (64 samples, 0.13%)</title><rect x="915.2" y="341" width="1.5" height="15.0" fill="rgb(235,217,20)" rx="2" ry="2" />
<text  x="918.18" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="886.5" y="277" width="0.6" height="15.0" fill="rgb(241,185,41)" rx="2" ry="2" />
<text  x="889.54" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%)</title><rect x="948.7" y="405" width="0.1" height="15.0" fill="rgb(205,9,23)" rx="2" ry="2" />
<text  x="951.66" y="415.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (9 samples, 0.02%)</title><rect x="592.9" y="405" width="0.2" height="15.0" fill="rgb(212,224,0)" rx="2" ry="2" />
<text  x="595.89" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (393 samples, 0.81%)</title><rect x="148.6" y="245" width="9.6" height="15.0" fill="rgb(240,170,52)" rx="2" ry="2" />
<text  x="151.62" y="255.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (62 samples, 0.13%)</title><rect x="549.0" y="325" width="1.5" height="15.0" fill="rgb(220,201,39)" rx="2" ry="2" />
<text  x="551.99" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (200 samples, 0.41%)</title><rect x="1171.5" y="469" width="4.9" height="15.0" fill="rgb(222,192,28)" rx="2" ry="2" />
<text  x="1174.52" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (21 samples, 0.04%)</title><rect x="675.9" y="437" width="0.5" height="15.0" fill="rgb(234,91,1)" rx="2" ry="2" />
<text  x="678.91" y="447.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (130 samples, 0.27%)</title><rect x="524.0" y="293" width="3.1" height="15.0" fill="rgb(252,33,24)" rx="2" ry="2" />
<text  x="526.96" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (57 samples, 0.12%)</title><rect x="524.5" y="261" width="1.4" height="15.0" fill="rgb(231,91,32)" rx="2" ry="2" />
<text  x="527.55" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="633.5" y="469" width="0.2" height="15.0" fill="rgb(226,221,27)" rx="2" ry="2" />
<text  x="636.48" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (67 samples, 0.14%)</title><rect x="1045.9" y="229" width="1.7" height="15.0" fill="rgb(246,116,0)" rx="2" ry="2" />
<text  x="1048.94" y="239.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (22 samples, 0.05%)</title><rect x="552.7" y="293" width="0.5" height="15.0" fill="rgb(219,6,40)" rx="2" ry="2" />
<text  x="555.68" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (20 samples, 0.04%)</title><rect x="466.1" y="277" width="0.5" height="15.0" fill="rgb(229,84,6)" rx="2" ry="2" />
<text  x="469.12" y="287.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%)</title><rect x="514.5" y="341" width="0.2" height="15.0" fill="rgb(222,190,2)" rx="2" ry="2" />
<text  x="517.49" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (60 samples, 0.12%)</title><rect x="830.8" y="389" width="1.4" height="15.0" fill="rgb(213,42,5)" rx="2" ry="2" />
<text  x="833.77" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,270 samples, 10.91%)</title><rect x="287.1" y="405" width="128.6" height="15.0" fill="rgb(249,138,33)" rx="2" ry="2" />
<text  x="290.07" y="415.5" >seastar::future&lt;..</text>
</g>
<g >
<title>partition_key_view::legacy_form (7 samples, 0.01%)</title><rect x="931.9" y="389" width="0.1" height="15.0" fill="rgb(233,212,15)" rx="2" ry="2" />
<text  x="934.86" y="399.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (7 samples, 0.01%)</title><rect x="745.7" y="357" width="0.1" height="15.0" fill="rgb(237,216,5)" rx="2" ry="2" />
<text  x="748.65" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (8 samples, 0.02%)</title><rect x="362.5" y="197" width="0.2" height="15.0" fill="rgb(239,85,6)" rx="2" ry="2" />
<text  x="365.54" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="760.3" y="341" width="0.1" height="15.0" fill="rgb(206,111,35)" rx="2" ry="2" />
<text  x="763.28" y="351.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (14 samples, 0.03%)</title><rect x="1006.3" y="277" width="0.3" height="15.0" fill="rgb(231,156,38)" rx="2" ry="2" />
<text  x="1009.26" y="287.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (5 samples, 0.01%)</title><rect x="362.7" y="197" width="0.2" height="15.0" fill="rgb(239,208,9)" rx="2" ry="2" />
<text  x="365.74" y="207.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="792.0" y="117" width="0.2" height="15.0" fill="rgb(225,190,11)" rx="2" ry="2" />
<text  x="795.02" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="676.8" y="485" width="0.6" height="15.0" fill="rgb(232,21,51)" rx="2" ry="2" />
<text  x="679.84" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%)</title><rect x="956.4" y="373" width="0.8" height="15.0" fill="rgb(239,48,39)" rx="2" ry="2" />
<text  x="959.37" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (87 samples, 0.18%)</title><rect x="823.4" y="341" width="2.1" height="15.0" fill="rgb(208,200,17)" rx="2" ry="2" />
<text  x="826.37" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="753.8" y="325" width="0.6" height="15.0" fill="rgb(229,5,53)" rx="2" ry="2" />
<text  x="756.83" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1175.1" y="421" width="0.2" height="15.0" fill="rgb(237,56,45)" rx="2" ry="2" />
<text  x="1178.11" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (92 samples, 0.19%)</title><rect x="590.4" y="389" width="2.2" height="15.0" fill="rgb(241,41,40)" rx="2" ry="2" />
<text  x="593.36" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (18 samples, 0.04%)</title><rect x="577.0" y="405" width="0.4" height="15.0" fill="rgb(248,134,7)" rx="2" ry="2" />
<text  x="580.00" y="415.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (204 samples, 0.42%)</title><rect x="65.6" y="405" width="5.0" height="15.0" fill="rgb(254,116,26)" rx="2" ry="2" />
<text  x="68.60" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (7 samples, 0.01%)</title><rect x="1142.6" y="261" width="0.1" height="15.0" fill="rgb(245,123,40)" rx="2" ry="2" />
<text  x="1145.56" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="17.3" y="357" width="0.1" height="15.0" fill="rgb(213,79,23)" rx="2" ry="2" />
<text  x="20.30" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (297 samples, 0.61%)</title><rect x="846.6" y="453" width="7.3" height="15.0" fill="rgb(248,70,38)" rx="2" ry="2" />
<text  x="849.62" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="957.5" y="405" width="0.2" height="15.0" fill="rgb(245,156,7)" rx="2" ry="2" />
<text  x="960.55" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%)</title><rect x="927.2" y="341" width="0.3" height="15.0" fill="rgb(223,155,50)" rx="2" ry="2" />
<text  x="930.24" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="80.2" y="453" width="0.4" height="15.0" fill="rgb(253,36,50)" rx="2" ry="2" />
<text  x="83.22" y="463.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%)</title><rect x="434.9" y="245" width="1.0" height="15.0" fill="rgb(252,220,44)" rx="2" ry="2" />
<text  x="437.94" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="803.2" y="229" width="0.5" height="15.0" fill="rgb(243,149,20)" rx="2" ry="2" />
<text  x="806.20" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.06%)</title><rect x="212.3" y="149" width="0.7" height="15.0" fill="rgb(219,162,17)" rx="2" ry="2" />
<text  x="215.25" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (194 samples, 0.40%)</title><rect x="15.7" y="405" width="4.7" height="15.0" fill="rgb(251,149,6)" rx="2" ry="2" />
<text  x="18.66" y="415.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (2,062 samples, 4.27%)</title><rect x="764.0" y="389" width="50.4" height="15.0" fill="rgb(207,35,14)" rx="2" ry="2" />
<text  x="767.04" y="399.5" >std::..</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (47 samples, 0.10%)</title><rect x="644.5" y="469" width="1.2" height="15.0" fill="rgb(238,222,3)" rx="2" ry="2" />
<text  x="647.54" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="409.9" y="293" width="0.2" height="15.0" fill="rgb(215,226,50)" rx="2" ry="2" />
<text  x="412.89" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="1162.2" y="405" width="0.5" height="15.0" fill="rgb(249,126,24)" rx="2" ry="2" />
<text  x="1165.24" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="506.5" y="277" width="0.1" height="15.0" fill="rgb(241,47,43)" rx="2" ry="2" />
<text  x="509.46" y="287.5" ></text>
</g>
<g >
<title>database::find_schema (68 samples, 0.14%)</title><rect x="748.8" y="389" width="1.7" height="15.0" fill="rgb(244,118,44)" rx="2" ry="2" />
<text  x="751.85" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%)</title><rect x="859.6" y="501" width="0.2" height="15.0" fill="rgb(250,73,27)" rx="2" ry="2" />
<text  x="862.61" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (6 samples, 0.01%)</title><rect x="226.8" y="181" width="0.1" height="15.0" fill="rgb(250,111,14)" rx="2" ry="2" />
<text  x="229.80" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="549.8" y="293" width="0.1" height="15.0" fill="rgb(205,143,16)" rx="2" ry="2" />
<text  x="552.82" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="573.7" y="341" width="0.2" height="15.0" fill="rgb(205,191,20)" rx="2" ry="2" />
<text  x="576.68" y="351.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (47 samples, 0.10%)</title><rect x="99.5" y="405" width="1.1" height="15.0" fill="rgb(232,175,41)" rx="2" ry="2" />
<text  x="102.47" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (88 samples, 0.18%)</title><rect x="389.3" y="229" width="2.1" height="15.0" fill="rgb(254,18,1)" rx="2" ry="2" />
<text  x="392.25" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="167.7" y="149" width="0.5" height="15.0" fill="rgb(228,91,3)" rx="2" ry="2" />
<text  x="170.66" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="671.5" y="485" width="0.2" height="15.0" fill="rgb(226,62,42)" rx="2" ry="2" />
<text  x="674.54" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (6 samples, 0.01%)</title><rect x="233.5" y="261" width="0.1" height="15.0" fill="rgb(207,58,30)" rx="2" ry="2" />
<text  x="236.47" y="271.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (10 samples, 0.02%)</title><rect x="731.9" y="309" width="0.2" height="15.0" fill="rgb(238,129,28)" rx="2" ry="2" />
<text  x="734.85" y="319.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,102 samples, 2.28%)</title><rect x="778.6" y="293" width="26.9" height="15.0" fill="rgb(232,45,24)" rx="2" ry="2" />
<text  x="781.57" y="303.5" >s..</text>
</g>
<g >
<title>operator new (83 samples, 0.17%)</title><rect x="1118.5" y="357" width="2.1" height="15.0" fill="rgb(248,118,28)" rx="2" ry="2" />
<text  x="1121.53" y="367.5" ></text>
</g>
<g >
<title>row::row (11 samples, 0.02%)</title><rect x="251.1" y="213" width="0.3" height="15.0" fill="rgb(215,149,11)" rx="2" ry="2" />
<text  x="254.15" y="223.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (72 samples, 0.15%)</title><rect x="792.6" y="149" width="1.7" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="795.56" y="159.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::skipOffTokenChannels (6 samples, 0.01%)</title><rect x="18.0" y="277" width="0.1" height="15.0" fill="rgb(247,110,29)" rx="2" ry="2" />
<text  x="20.96" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt; (7 samples, 0.01%)</title><rect x="588.7" y="389" width="0.2" height="15.0" fill="rgb(225,39,53)" rx="2" ry="2" />
<text  x="591.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="842.1" y="373" width="0.3" height="15.0" fill="rgb(248,162,29)" rx="2" ry="2" />
<text  x="845.08" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (48 samples, 0.10%)</title><rect x="617.2" y="405" width="1.2" height="15.0" fill="rgb(228,1,37)" rx="2" ry="2" />
<text  x="620.19" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (18 samples, 0.04%)</title><rect x="861.8" y="373" width="0.5" height="15.0" fill="rgb(233,149,32)" rx="2" ry="2" />
<text  x="864.83" y="383.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.14%)</title><rect x="1045.9" y="245" width="1.7" height="15.0" fill="rgb(239,102,1)" rx="2" ry="2" />
<text  x="1048.89" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (154 samples, 0.32%)</title><rect x="819.2" y="325" width="3.8" height="15.0" fill="rgb(226,186,21)" rx="2" ry="2" />
<text  x="822.24" y="335.5" ></text>
</g>
<g >
<title>compound_type&lt; (46 samples, 0.10%)</title><rect x="537.4" y="357" width="1.2" height="15.0" fill="rgb(246,229,23)" rx="2" ry="2" />
<text  x="540.44" y="367.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (11 samples, 0.02%)</title><rect x="278.2" y="293" width="0.3" height="15.0" fill="rgb(250,74,13)" rx="2" ry="2" />
<text  x="281.23" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (84 samples, 0.17%)</title><rect x="738.0" y="277" width="2.0" height="15.0" fill="rgb(236,99,48)" rx="2" ry="2" />
<text  x="740.96" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (11 samples, 0.02%)</title><rect x="710.3" y="389" width="0.3" height="15.0" fill="rgb(239,202,19)" rx="2" ry="2" />
<text  x="713.32" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (78 samples, 0.16%)</title><rect x="672.3" y="453" width="1.9" height="15.0" fill="rgb(254,5,6)" rx="2" ry="2" />
<text  x="675.28" y="463.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (11 samples, 0.02%)</title><rect x="977.6" y="341" width="0.3" height="15.0" fill="rgb(235,213,14)" rx="2" ry="2" />
<text  x="980.64" y="351.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (15 samples, 0.03%)</title><rect x="310.3" y="165" width="0.4" height="15.0" fill="rgb(252,114,52)" rx="2" ry="2" />
<text  x="313.34" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="785.0" y="229" width="0.1" height="15.0" fill="rgb(234,161,39)" rx="2" ry="2" />
<text  x="787.96" y="239.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="212.3" y="165" width="0.7" height="15.0" fill="rgb(217,152,31)" rx="2" ry="2" />
<text  x="215.25" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (127 samples, 0.26%)</title><rect x="671.7" y="485" width="3.1" height="15.0" fill="rgb(228,103,19)" rx="2" ry="2" />
<text  x="674.74" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%)</title><rect x="693.1" y="453" width="0.4" height="15.0" fill="rgb(244,27,36)" rx="2" ry="2" />
<text  x="696.13" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="194.2" y="101" width="0.2" height="15.0" fill="rgb(217,27,30)" rx="2" ry="2" />
<text  x="197.21" y="111.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (21 samples, 0.04%)</title><rect x="784.3" y="229" width="0.5" height="15.0" fill="rgb(226,175,16)" rx="2" ry="2" />
<text  x="787.28" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,145 samples, 12.72%)</title><rect x="958.0" y="405" width="150.0" height="15.0" fill="rgb(231,13,2)" rx="2" ry="2" />
<text  x="960.98" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (33 samples, 0.07%)</title><rect x="861.5" y="485" width="0.8" height="15.0" fill="rgb(243,144,12)" rx="2" ry="2" />
<text  x="864.49" y="495.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (5 samples, 0.01%)</title><rect x="903.9" y="341" width="0.1" height="15.0" fill="rgb(222,84,32)" rx="2" ry="2" />
<text  x="906.92" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="156.3" y="181" width="0.6" height="15.0" fill="rgb(239,154,47)" rx="2" ry="2" />
<text  x="159.26" y="191.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="543.2" y="405" width="0.7" height="15.0" fill="rgb(219,45,45)" rx="2" ry="2" />
<text  x="546.20" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%)</title><rect x="605.5" y="405" width="0.5" height="15.0" fill="rgb(205,9,12)" rx="2" ry="2" />
<text  x="608.49" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="562.9" y="293" width="0.2" height="15.0" fill="rgb(244,133,25)" rx="2" ry="2" />
<text  x="565.89" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (10 samples, 0.02%)</title><rect x="439.5" y="293" width="0.2" height="15.0" fill="rgb(254,202,42)" rx="2" ry="2" />
<text  x="442.45" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="599.9" y="437" width="0.2" height="15.0" fill="rgb(238,204,5)" rx="2" ry="2" />
<text  x="602.93" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="651.7" y="485" width="0.2" height="15.0" fill="rgb(232,77,51)" rx="2" ry="2" />
<text  x="654.74" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="860.9" y="405" width="0.3" height="15.0" fill="rgb(216,172,47)" rx="2" ry="2" />
<text  x="863.95" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.07%)</title><rect x="802.9" y="245" width="0.8" height="15.0" fill="rgb(219,68,40)" rx="2" ry="2" />
<text  x="805.86" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (17 samples, 0.04%)</title><rect x="199.7" y="117" width="0.4" height="15.0" fill="rgb(230,137,47)" rx="2" ry="2" />
<text  x="202.70" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="636.7" y="485" width="0.3" height="15.0" fill="rgb(246,208,51)" rx="2" ry="2" />
<text  x="639.65" y="495.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, auth::permissions_cache::get (6 samples, 0.01%)</title><rect x="799.5" y="261" width="0.2" height="15.0" fill="rgb(246,110,41)" rx="2" ry="2" />
<text  x="802.52" y="271.5" ></text>
</g>
<g >
<title>table::as_mutation_source (121 samples, 0.25%)</title><rect x="615.8" y="437" width="2.9" height="15.0" fill="rgb(213,27,32)" rx="2" ry="2" />
<text  x="618.77" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (20 samples, 0.04%)</title><rect x="651.9" y="485" width="0.5" height="15.0" fill="rgb(253,159,2)" rx="2" ry="2" />
<text  x="654.89" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (483 samples, 1.00%)</title><rect x="1023.0" y="229" width="11.8" height="15.0" fill="rgb(205,128,26)" rx="2" ry="2" />
<text  x="1025.96" y="239.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (43 samples, 0.09%)</title><rect x="316.5" y="181" width="1.1" height="15.0" fill="rgb(245,186,34)" rx="2" ry="2" />
<text  x="319.51" y="191.5" ></text>
</g>
<g >
<title>row::compact_and_expire (756 samples, 1.56%)</title><rect x="366.9" y="213" width="18.5" height="15.0" fill="rgb(212,212,41)" rx="2" ry="2" />
<text  x="369.93" y="223.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%)</title><rect x="618.7" y="437" width="0.2" height="15.0" fill="rgb(246,84,40)" rx="2" ry="2" />
<text  x="621.73" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="983.3" y="261" width="0.4" height="15.0" fill="rgb(235,116,18)" rx="2" ry="2" />
<text  x="986.31" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,253 samples, 12.94%)</title><rect x="116.5" y="357" width="152.7" height="15.0" fill="rgb(241,81,38)" rx="2" ry="2" />
<text  x="119.51" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (109 samples, 0.23%)</title><rect x="1134.5" y="421" width="2.7" height="15.0" fill="rgb(250,90,45)" rx="2" ry="2" />
<text  x="1137.55" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (5 samples, 0.01%)</title><rect x="1100.9" y="357" width="0.1" height="15.0" fill="rgb(223,81,34)" rx="2" ry="2" />
<text  x="1103.90" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (140 samples, 0.29%)</title><rect x="1117.9" y="389" width="3.4" height="15.0" fill="rgb(246,177,2)" rx="2" ry="2" />
<text  x="1120.87" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (32 samples, 0.07%)</title><rect x="704.1" y="501" width="0.7" height="15.0" fill="rgb(232,184,8)" rx="2" ry="2" />
<text  x="707.07" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (8 samples, 0.02%)</title><rect x="18.4" y="309" width="0.1" height="15.0" fill="rgb(247,59,5)" rx="2" ry="2" />
<text  x="21.35" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (8 samples, 0.02%)</title><rect x="207.5" y="117" width="0.2" height="15.0" fill="rgb(220,208,17)" rx="2" ry="2" />
<text  x="210.49" y="127.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="436.5" y="277" width="0.9" height="15.0" fill="rgb(222,134,45)" rx="2" ry="2" />
<text  x="439.55" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (157 samples, 0.32%)</title><rect x="717.8" y="357" width="3.8" height="15.0" fill="rgb(220,74,40)" rx="2" ry="2" />
<text  x="720.79" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (10 samples, 0.02%)</title><rect x="697.5" y="421" width="0.2" height="15.0" fill="rgb(217,171,32)" rx="2" ry="2" />
<text  x="700.50" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (28 samples, 0.06%)</title><rect x="856.0" y="437" width="0.7" height="15.0" fill="rgb(236,228,40)" rx="2" ry="2" />
<text  x="858.99" y="447.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="509.9" y="293" width="0.1" height="15.0" fill="rgb(216,209,26)" rx="2" ry="2" />
<text  x="512.90" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="219.2" y="149" width="0.1" height="15.0" fill="rgb(233,203,13)" rx="2" ry="2" />
<text  x="222.18" y="159.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%)</title><rect x="766.8" y="357" width="0.2" height="15.0" fill="rgb(246,7,5)" rx="2" ry="2" />
<text  x="769.84" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (42 samples, 0.09%)</title><rect x="653.9" y="485" width="1.0" height="15.0" fill="rgb(205,50,5)" rx="2" ry="2" />
<text  x="656.89" y="495.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (56 samples, 0.12%)</title><rect x="895.1" y="261" width="1.4" height="15.0" fill="rgb(217,59,34)" rx="2" ry="2" />
<text  x="898.09" y="271.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (209 samples, 0.43%)</title><rect x="276.4" y="309" width="5.1" height="15.0" fill="rgb(210,19,40)" rx="2" ry="2" />
<text  x="279.44" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (19 samples, 0.04%)</title><rect x="300.5" y="245" width="0.5" height="15.0" fill="rgb(214,33,16)" rx="2" ry="2" />
<text  x="303.54" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.02%)</title><rect x="583.8" y="389" width="0.3" height="15.0" fill="rgb(223,106,15)" rx="2" ry="2" />
<text  x="586.84" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (133 samples, 0.28%)</title><rect x="664.4" y="469" width="3.2" height="15.0" fill="rgb(218,135,4)" rx="2" ry="2" />
<text  x="667.36" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (62 samples, 0.13%)</title><rect x="209.2" y="101" width="1.5" height="15.0" fill="rgb(231,29,47)" rx="2" ry="2" />
<text  x="212.17" y="111.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="930.7" y="325" width="0.6" height="15.0" fill="rgb(232,65,33)" rx="2" ry="2" />
<text  x="933.69" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (14 samples, 0.03%)</title><rect x="562.1" y="293" width="0.3" height="15.0" fill="rgb(245,27,25)" rx="2" ry="2" />
<text  x="565.08" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="226.1" y="117" width="0.1" height="15.0" fill="rgb(215,93,0)" rx="2" ry="2" />
<text  x="229.12" y="127.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (93 samples, 0.19%)</title><rect x="438.4" y="309" width="2.3" height="15.0" fill="rgb(243,89,25)" rx="2" ry="2" />
<text  x="441.38" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (14 samples, 0.03%)</title><rect x="217.7" y="133" width="0.4" height="15.0" fill="rgb(224,214,54)" rx="2" ry="2" />
<text  x="220.74" y="143.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (7 samples, 0.01%)</title><rect x="559.8" y="277" width="0.2" height="15.0" fill="rgb(230,57,21)" rx="2" ry="2" />
<text  x="562.78" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="592.5" y="373" width="0.1" height="15.0" fill="rgb(254,127,33)" rx="2" ry="2" />
<text  x="595.48" y="383.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (6 samples, 0.01%)</title><rect x="391.5" y="245" width="0.1" height="15.0" fill="rgb(245,109,12)" rx="2" ry="2" />
<text  x="394.47" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="1037.8" y="181" width="0.4" height="15.0" fill="rgb(243,193,30)" rx="2" ry="2" />
<text  x="1040.83" y="191.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="982.5" y="293" width="1.2" height="15.0" fill="rgb(213,0,38)" rx="2" ry="2" />
<text  x="985.50" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="693.5" y="453" width="0.2" height="15.0" fill="rgb(247,96,50)" rx="2" ry="2" />
<text  x="696.47" y="463.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (22 samples, 0.05%)</title><rect x="313.8" y="165" width="0.5" height="15.0" fill="rgb(211,217,46)" rx="2" ry="2" />
<text  x="316.75" y="175.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (58 samples, 0.12%)</title><rect x="291.9" y="309" width="1.4" height="15.0" fill="rgb(253,115,7)" rx="2" ry="2" />
<text  x="294.88" y="319.5" ></text>
</g>
<g >
<title>database::find_column_family (29 samples, 0.06%)</title><rect x="969.0" y="357" width="0.8" height="15.0" fill="rgb(229,192,21)" rx="2" ry="2" />
<text  x="972.05" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="420.1" y="357" width="0.2" height="15.0" fill="rgb(214,220,54)" rx="2" ry="2" />
<text  x="423.14" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (11 samples, 0.02%)</title><rect x="564.7" y="341" width="0.2" height="15.0" fill="rgb(215,53,49)" rx="2" ry="2" />
<text  x="567.67" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="41.4" y="469" width="0.1" height="15.0" fill="rgb(242,145,49)" rx="2" ry="2" />
<text  x="44.35" y="479.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (8 samples, 0.02%)</title><rect x="15.2" y="517" width="0.1" height="15.0" fill="rgb(216,213,12)" rx="2" ry="2" />
<text  x="18.15" y="527.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (7 samples, 0.01%)</title><rect x="242.5" y="165" width="0.1" height="15.0" fill="rgb(252,179,22)" rx="2" ry="2" />
<text  x="245.48" y="175.5" ></text>
</g>
<g >
<title>operator new (135 samples, 0.28%)</title><rect x="1019.2" y="245" width="3.3" height="15.0" fill="rgb(219,23,2)" rx="2" ry="2" />
<text  x="1022.20" y="255.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (5 samples, 0.01%)</title><rect x="24.2" y="517" width="0.1" height="15.0" fill="rgb(223,24,12)" rx="2" ry="2" />
<text  x="27.21" y="527.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (63 samples, 0.13%)</title><rect x="1017.5" y="213" width="1.6" height="15.0" fill="rgb(235,151,28)" rx="2" ry="2" />
<text  x="1020.54" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (8 samples, 0.02%)</title><rect x="954.7" y="341" width="0.2" height="15.0" fill="rgb(249,36,5)" rx="2" ry="2" />
<text  x="957.69" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="957.8" y="405" width="0.1" height="15.0" fill="rgb(212,188,18)" rx="2" ry="2" />
<text  x="960.81" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1153.9" y="485" width="0.2" height="15.0" fill="rgb(231,58,9)" rx="2" ry="2" />
<text  x="1156.89" y="495.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="855.2" y="437" width="0.8" height="15.0" fill="rgb(248,127,52)" rx="2" ry="2" />
<text  x="858.19" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="433.2" y="245" width="0.2" height="15.0" fill="rgb(245,193,15)" rx="2" ry="2" />
<text  x="436.20" y="255.5" ></text>
</g>
<g >
<title>memtable::apply (19 samples, 0.04%)</title><rect x="1141.5" y="261" width="0.5" height="15.0" fill="rgb(221,87,46)" rx="2" ry="2" />
<text  x="1144.53" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (142 samples, 0.29%)</title><rect x="791.0" y="165" width="3.5" height="15.0" fill="rgb(212,63,19)" rx="2" ry="2" />
<text  x="794.02" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (341 samples, 0.71%)</title><rect x="790.4" y="197" width="8.3" height="15.0" fill="rgb(228,35,36)" rx="2" ry="2" />
<text  x="793.41" y="207.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (33 samples, 0.07%)</title><rect x="678.3" y="469" width="0.8" height="15.0" fill="rgb(244,5,40)" rx="2" ry="2" />
<text  x="681.26" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="908.2" y="309" width="0.5" height="15.0" fill="rgb(220,210,22)" rx="2" ry="2" />
<text  x="911.25" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1176.1" y="437" width="0.2" height="15.0" fill="rgb(225,60,0)" rx="2" ry="2" />
<text  x="1179.13" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="809.6" y="325" width="0.1" height="15.0" fill="rgb(213,206,34)" rx="2" ry="2" />
<text  x="812.58" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (83 samples, 0.17%)</title><rect x="830.2" y="405" width="2.1" height="15.0" fill="rgb(225,167,11)" rx="2" ry="2" />
<text  x="833.23" y="415.5" ></text>
</g>
<g >
<title>free (105 samples, 0.22%)</title><rect x="395.3" y="181" width="2.5" height="15.0" fill="rgb(249,148,24)" rx="2" ry="2" />
<text  x="398.26" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (111 samples, 0.23%)</title><rect x="829.7" y="437" width="2.7" height="15.0" fill="rgb(241,25,53)" rx="2" ry="2" />
<text  x="832.72" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="348.4" y="165" width="0.1" height="15.0" fill="rgb(245,100,8)" rx="2" ry="2" />
<text  x="351.35" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (30 samples, 0.06%)</title><rect x="800.9" y="213" width="0.7" height="15.0" fill="rgb(212,134,8)" rx="2" ry="2" />
<text  x="803.88" y="223.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="21.8" y="469" width="0.2" height="15.0" fill="rgb(239,152,45)" rx="2" ry="2" />
<text  x="24.84" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="411.4" y="357" width="0.1" height="15.0" fill="rgb(231,185,8)" rx="2" ry="2" />
<text  x="414.42" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="574.7" y="373" width="0.2" height="15.0" fill="rgb(242,121,21)" rx="2" ry="2" />
<text  x="577.70" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (10 samples, 0.02%)</title><rect x="804.5" y="277" width="0.2" height="15.0" fill="rgb(233,211,6)" rx="2" ry="2" />
<text  x="807.50" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="997.7" y="229" width="0.5" height="15.0" fill="rgb(245,0,3)" rx="2" ry="2" />
<text  x="1000.66" y="239.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (9 samples, 0.02%)</title><rect x="840.6" y="421" width="0.2" height="15.0" fill="rgb(229,92,41)" rx="2" ry="2" />
<text  x="843.61" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (123 samples, 0.25%)</title><rect x="940.8" y="405" width="3.0" height="15.0" fill="rgb(209,139,8)" rx="2" ry="2" />
<text  x="943.80" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="287.7" y="389" width="0.3" height="15.0" fill="rgb(218,197,13)" rx="2" ry="2" />
<text  x="290.75" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,127 samples, 2.33%)</title><rect x="882.2" y="405" width="27.6" height="15.0" fill="rgb(231,114,36)" rx="2" ry="2" />
<text  x="885.24" y="415.5" >c..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1151.1" y="485" width="0.1" height="15.0" fill="rgb(248,76,13)" rx="2" ry="2" />
<text  x="1154.10" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (14 samples, 0.03%)</title><rect x="581.4" y="405" width="0.4" height="15.0" fill="rgb(252,91,25)" rx="2" ry="2" />
<text  x="584.42" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (54 samples, 0.11%)</title><rect x="365.1" y="181" width="1.3" height="15.0" fill="rgb(214,110,45)" rx="2" ry="2" />
<text  x="368.05" y="191.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (8 samples, 0.02%)</title><rect x="904.4" y="341" width="0.2" height="15.0" fill="rgb(209,127,52)" rx="2" ry="2" />
<text  x="907.36" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (24 samples, 0.05%)</title><rect x="718.4" y="309" width="0.6" height="15.0" fill="rgb(215,79,3)" rx="2" ry="2" />
<text  x="721.42" y="319.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (264 samples, 0.55%)</title><rect x="717.0" y="421" width="6.5" height="15.0" fill="rgb(217,86,3)" rx="2" ry="2" />
<text  x="720.01" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (25 samples, 0.05%)</title><rect x="384.8" y="181" width="0.6" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="387.78" y="191.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (309 samples, 0.64%)</title><rect x="576.7" y="437" width="7.6" height="15.0" fill="rgb(230,32,35)" rx="2" ry="2" />
<text  x="579.71" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="1138.0" y="421" width="0.3" height="15.0" fill="rgb(244,98,9)" rx="2" ry="2" />
<text  x="1141.04" y="431.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (110 samples, 0.23%)</title><rect x="1114.8" y="389" width="2.7" height="15.0" fill="rgb(246,189,50)" rx="2" ry="2" />
<text  x="1117.77" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="498.7" y="197" width="0.1" height="15.0" fill="rgb(233,209,42)" rx="2" ry="2" />
<text  x="501.72" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (6 samples, 0.01%)</title><rect x="366.2" y="165" width="0.2" height="15.0" fill="rgb(251,213,53)" rx="2" ry="2" />
<text  x="369.23" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (12 samples, 0.02%)</title><rect x="1095.4" y="293" width="0.3" height="15.0" fill="rgb(209,189,3)" rx="2" ry="2" />
<text  x="1098.41" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (178 samples, 0.37%)</title><rect x="818.9" y="341" width="4.3" height="15.0" fill="rgb(241,70,5)" rx="2" ry="2" />
<text  x="821.85" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="613.0" y="437" width="0.1" height="15.0" fill="rgb(215,227,5)" rx="2" ry="2" />
<text  x="615.99" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (5 samples, 0.01%)</title><rect x="814.1" y="357" width="0.1" height="15.0" fill="rgb(238,133,18)" rx="2" ry="2" />
<text  x="817.12" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (21 samples, 0.04%)</title><rect x="405.5" y="277" width="0.5" height="15.0" fill="rgb(249,64,28)" rx="2" ry="2" />
<text  x="408.51" y="287.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (127 samples, 0.26%)</title><rect x="924.6" y="389" width="3.1" height="15.0" fill="rgb(247,191,43)" rx="2" ry="2" />
<text  x="927.61" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="79.2" y="453" width="0.1" height="15.0" fill="rgb(254,5,38)" rx="2" ry="2" />
<text  x="82.22" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="268.4" y="325" width="0.1" height="15.0" fill="rgb(220,1,35)" rx="2" ry="2" />
<text  x="271.36" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%)</title><rect x="680.6" y="485" width="0.1" height="15.0" fill="rgb(205,209,51)" rx="2" ry="2" />
<text  x="683.55" y="495.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (204 samples, 0.42%)</title><rect x="15.4" y="453" width="5.0" height="15.0" fill="rgb(229,146,25)" rx="2" ry="2" />
<text  x="18.45" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (15 samples, 0.03%)</title><rect x="1029.7" y="133" width="0.3" height="15.0" fill="rgb(234,93,50)" rx="2" ry="2" />
<text  x="1032.67" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (17 samples, 0.04%)</title><rect x="1125.7" y="421" width="0.4" height="15.0" fill="rgb(242,76,4)" rx="2" ry="2" />
<text  x="1128.68" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="1141.6" y="197" width="0.1" height="15.0" fill="rgb(213,147,15)" rx="2" ry="2" />
<text  x="1144.58" y="207.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (242 samples, 0.50%)</title><rect x="1083.4" y="245" width="6.0" height="15.0" fill="rgb(252,68,8)" rx="2" ry="2" />
<text  x="1086.44" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="201.6" y="117" width="0.4" height="15.0" fill="rgb(232,160,53)" rx="2" ry="2" />
<text  x="204.63" y="127.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="513.9" y="325" width="0.1" height="15.0" fill="rgb(210,91,48)" rx="2" ry="2" />
<text  x="516.86" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="251.5" y="213" width="0.2" height="15.0" fill="rgb(218,187,49)" rx="2" ry="2" />
<text  x="254.49" y="223.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="414.0" y="373" width="0.3" height="15.0" fill="rgb(218,213,44)" rx="2" ry="2" />
<text  x="416.99" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (79 samples, 0.16%)</title><rect x="989.4" y="277" width="2.0" height="15.0" fill="rgb(214,2,32)" rx="2" ry="2" />
<text  x="992.43" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (7 samples, 0.01%)</title><rect x="435.9" y="261" width="0.2" height="15.0" fill="rgb(233,221,8)" rx="2" ry="2" />
<text  x="438.91" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (40 samples, 0.08%)</title><rect x="74.3" y="453" width="1.0" height="15.0" fill="rgb(216,183,41)" rx="2" ry="2" />
<text  x="77.29" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (191 samples, 0.40%)</title><rect x="891.8" y="277" width="4.7" height="15.0" fill="rgb(205,204,7)" rx="2" ry="2" />
<text  x="894.79" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (16 samples, 0.03%)</title><rect x="990.5" y="261" width="0.4" height="15.0" fill="rgb(207,143,53)" rx="2" ry="2" />
<text  x="993.51" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1035.9" y="229" width="0.1" height="15.0" fill="rgb(236,62,48)" rx="2" ry="2" />
<text  x="1038.85" y="239.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="152.6" y="181" width="0.8" height="15.0" fill="rgb(220,71,50)" rx="2" ry="2" />
<text  x="155.57" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="965.4" y="373" width="0.2" height="15.0" fill="rgb(245,162,53)" rx="2" ry="2" />
<text  x="968.38" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="627.2" y="469" width="0.2" height="15.0" fill="rgb(227,97,36)" rx="2" ry="2" />
<text  x="630.18" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="593.4" y="437" width="0.3" height="15.0" fill="rgb(247,174,34)" rx="2" ry="2" />
<text  x="596.36" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="805.3" y="277" width="0.1" height="15.0" fill="rgb(250,171,41)" rx="2" ry="2" />
<text  x="808.33" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.02%)</title><rect x="665.3" y="437" width="0.3" height="15.0" fill="rgb(235,8,46)" rx="2" ry="2" />
<text  x="668.32" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="1011.7" y="277" width="0.1" height="15.0" fill="rgb(254,46,4)" rx="2" ry="2" />
<text  x="1014.65" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (16 samples, 0.03%)</title><rect x="19.4" y="341" width="0.4" height="15.0" fill="rgb(253,155,48)" rx="2" ry="2" />
<text  x="22.43" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,946 samples, 4.03%)</title><rect x="1002.2" y="293" width="47.5" height="15.0" fill="rgb(244,105,7)" rx="2" ry="2" />
<text  x="1005.16" y="303.5" >serv..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="261.1" y="325" width="0.1" height="15.0" fill="rgb(253,61,54)" rx="2" ry="2" />
<text  x="264.11" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.16%)</title><rect x="996.3" y="245" width="1.9" height="15.0" fill="rgb(223,19,13)" rx="2" ry="2" />
<text  x="999.30" y="255.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="518.3" y="309" width="0.2" height="15.0" fill="rgb(227,137,43)" rx="2" ry="2" />
<text  x="521.35" y="319.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="451.9" y="325" width="0.2" height="15.0" fill="rgb(224,98,3)" rx="2" ry="2" />
<text  x="454.93" y="335.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (169 samples, 0.35%)</title><rect x="973.5" y="341" width="4.1" height="15.0" fill="rgb(242,157,44)" rx="2" ry="2" />
<text  x="976.51" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (37 samples, 0.08%)</title><rect x="602.7" y="437" width="0.9" height="15.0" fill="rgb(219,169,18)" rx="2" ry="2" />
<text  x="605.73" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (439 samples, 0.91%)</title><rect x="62.7" y="437" width="10.7" height="15.0" fill="rgb(239,213,18)" rx="2" ry="2" />
<text  x="65.69" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (22 samples, 0.05%)</title><rect x="213.1" y="149" width="0.6" height="15.0" fill="rgb(251,93,48)" rx="2" ry="2" />
<text  x="216.13" y="159.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (5 samples, 0.01%)</title><rect x="1097.5" y="309" width="0.1" height="15.0" fill="rgb(253,170,35)" rx="2" ry="2" />
<text  x="1100.51" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1094.9" y="277" width="0.1" height="15.0" fill="rgb(214,104,48)" rx="2" ry="2" />
<text  x="1097.89" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (45 samples, 0.09%)</title><rect x="749.3" y="357" width="1.1" height="15.0" fill="rgb(220,74,5)" rx="2" ry="2" />
<text  x="752.34" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="616.4" y="373" width="0.5" height="15.0" fill="rgb(240,193,53)" rx="2" ry="2" />
<text  x="619.43" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (36 samples, 0.07%)</title><rect x="1142.4" y="437" width="0.8" height="15.0" fill="rgb(221,151,1)" rx="2" ry="2" />
<text  x="1145.36" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (6 samples, 0.01%)</title><rect x="260.0" y="293" width="0.1" height="15.0" fill="rgb(244,201,42)" rx="2" ry="2" />
<text  x="262.96" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (8 samples, 0.02%)</title><rect x="643.2" y="405" width="0.2" height="15.0" fill="rgb(216,147,43)" rx="2" ry="2" />
<text  x="646.17" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="315.8" y="181" width="0.2" height="15.0" fill="rgb(247,14,51)" rx="2" ry="2" />
<text  x="318.80" y="191.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="787.9" y="165" width="0.2" height="15.0" fill="rgb(207,112,44)" rx="2" ry="2" />
<text  x="790.94" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (66 samples, 0.14%)</title><rect x="68.8" y="389" width="1.6" height="15.0" fill="rgb(227,63,9)" rx="2" ry="2" />
<text  x="71.80" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="834.2" y="437" width="0.3" height="15.0" fill="rgb(229,158,0)" rx="2" ry="2" />
<text  x="837.24" y="447.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (12 samples, 0.02%)</title><rect x="156.9" y="213" width="0.3" height="15.0" fill="rgb(236,167,47)" rx="2" ry="2" />
<text  x="159.94" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="781.3" y="229" width="0.7" height="15.0" fill="rgb(211,222,2)" rx="2" ry="2" />
<text  x="784.25" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="733.9" y="357" width="0.4" height="15.0" fill="rgb(251,177,47)" rx="2" ry="2" />
<text  x="736.91" y="367.5" ></text>
</g>
<g >
<title>compound_type&lt; (99 samples, 0.20%)</title><rect x="929.0" y="357" width="2.4" height="15.0" fill="rgb(247,209,32)" rx="2" ry="2" />
<text  x="932.03" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="984.5" y="341" width="0.1" height="15.0" fill="rgb(251,133,30)" rx="2" ry="2" />
<text  x="987.45" y="351.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (37 samples, 0.08%)</title><rect x="328.0" y="165" width="0.9" height="15.0" fill="rgb(230,168,5)" rx="2" ry="2" />
<text  x="331.01" y="175.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="907.6" y="325" width="0.6" height="15.0" fill="rgb(206,43,41)" rx="2" ry="2" />
<text  x="910.61" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (79 samples, 0.16%)</title><rect x="799.7" y="261" width="1.9" height="15.0" fill="rgb(246,97,19)" rx="2" ry="2" />
<text  x="802.69" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (5 samples, 0.01%)</title><rect x="1143.6" y="485" width="0.1" height="15.0" fill="rgb(254,142,15)" rx="2" ry="2" />
<text  x="1146.61" y="495.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (119 samples, 0.25%)</title><rect x="1027.1" y="165" width="2.9" height="15.0" fill="rgb(238,114,31)" rx="2" ry="2" />
<text  x="1030.14" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (5 samples, 0.01%)</title><rect x="826.3" y="421" width="0.1" height="15.0" fill="rgb(241,4,44)" rx="2" ry="2" />
<text  x="829.25" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%)</title><rect x="818.3" y="293" width="0.4" height="15.0" fill="rgb(207,118,49)" rx="2" ry="2" />
<text  x="821.34" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (9 samples, 0.02%)</title><rect x="243.6" y="213" width="0.2" height="15.0" fill="rgb(223,155,14)" rx="2" ry="2" />
<text  x="246.55" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (115 samples, 0.24%)</title><rect x="35.8" y="453" width="2.8" height="15.0" fill="rgb(233,41,44)" rx="2" ry="2" />
<text  x="38.76" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (58 samples, 0.12%)</title><rect x="529.6" y="341" width="1.4" height="15.0" fill="rgb(230,10,34)" rx="2" ry="2" />
<text  x="532.56" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,699 samples, 7.65%)</title><rect x="301.3" y="261" width="90.3" height="15.0" fill="rgb(222,78,46)" rx="2" ry="2" />
<text  x="304.30" y="271.5" >mutation_f..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (11 samples, 0.02%)</title><rect x="405.8" y="261" width="0.2" height="15.0" fill="rgb(249,17,13)" rx="2" ry="2" />
<text  x="408.76" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%)</title><rect x="740.9" y="389" width="0.1" height="15.0" fill="rgb(213,175,36)" rx="2" ry="2" />
<text  x="743.89" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (14 samples, 0.03%)</title><rect x="916.4" y="325" width="0.3" height="15.0" fill="rgb(242,152,17)" rx="2" ry="2" />
<text  x="919.40" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (48 samples, 0.10%)</title><rect x="982.5" y="277" width="1.2" height="15.0" fill="rgb(232,95,48)" rx="2" ry="2" />
<text  x="985.50" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (301 samples, 0.62%)</title><rect x="567.3" y="373" width="7.3" height="15.0" fill="rgb(223,93,53)" rx="2" ry="2" />
<text  x="570.26" y="383.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (37 samples, 0.08%)</title><rect x="520.3" y="261" width="0.9" height="15.0" fill="rgb(228,65,33)" rx="2" ry="2" />
<text  x="523.30" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (11 samples, 0.02%)</title><rect x="500.0" y="165" width="0.2" height="15.0" fill="rgb(252,114,19)" rx="2" ry="2" />
<text  x="502.96" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,601 samples, 13.66%)</title><rect x="949.0" y="421" width="161.2" height="15.0" fill="rgb(214,59,11)" rx="2" ry="2" />
<text  x="951.97" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (18 samples, 0.04%)</title><rect x="213.8" y="165" width="0.4" height="15.0" fill="rgb(214,74,39)" rx="2" ry="2" />
<text  x="216.76" y="175.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (41 samples, 0.08%)</title><rect x="240.4" y="181" width="1.0" height="15.0" fill="rgb(252,150,7)" rx="2" ry="2" />
<text  x="243.43" y="191.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (15 samples, 0.03%)</title><rect x="589.6" y="405" width="0.4" height="15.0" fill="rgb(222,183,46)" rx="2" ry="2" />
<text  x="592.62" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (14 samples, 0.03%)</title><rect x="826.5" y="421" width="0.4" height="15.0" fill="rgb(239,140,44)" rx="2" ry="2" />
<text  x="829.52" y="431.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (10 samples, 0.02%)</title><rect x="1043.1" y="277" width="0.3" height="15.0" fill="rgb(218,227,15)" rx="2" ry="2" />
<text  x="1046.13" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="294.2" y="293" width="0.2" height="15.0" fill="rgb(225,123,25)" rx="2" ry="2" />
<text  x="297.22" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="957.7" y="405" width="0.1" height="15.0" fill="rgb(216,87,32)" rx="2" ry="2" />
<text  x="960.67" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,981 samples, 6.17%)</title><rect x="158.2" y="245" width="72.8" height="15.0" fill="rgb(206,72,12)" rx="2" ry="2" />
<text  x="161.21" y="255.5" >partitio..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (57 samples, 0.12%)</title><rect x="15.8" y="325" width="1.4" height="15.0" fill="rgb(236,146,52)" rx="2" ry="2" />
<text  x="18.76" y="335.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (281 samples, 0.58%)</title><rect x="14.9" y="597" width="6.8" height="15.0" fill="rgb(213,32,32)" rx="2" ry="2" />
<text  x="17.86" y="607.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (29 samples, 0.06%)</title><rect x="720.3" y="293" width="0.7" height="15.0" fill="rgb(251,41,18)" rx="2" ry="2" />
<text  x="723.31" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (6 samples, 0.01%)</title><rect x="601.7" y="421" width="0.1" height="15.0" fill="rgb(207,56,37)" rx="2" ry="2" />
<text  x="604.66" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (51 samples, 0.11%)</title><rect x="817.5" y="325" width="1.2" height="15.0" fill="rgb(238,53,1)" rx="2" ry="2" />
<text  x="820.49" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (15 samples, 0.03%)</title><rect x="1104.4" y="357" width="0.4" height="15.0" fill="rgb(205,202,11)" rx="2" ry="2" />
<text  x="1107.44" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (6 samples, 0.01%)</title><rect x="723.5" y="437" width="0.2" height="15.0" fill="rgb(248,34,49)" rx="2" ry="2" />
<text  x="726.53" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="880.2" y="405" width="0.1" height="15.0" fill="rgb(238,125,19)" rx="2" ry="2" />
<text  x="883.19" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (48 samples, 0.10%)</title><rect x="1160.1" y="405" width="1.2" height="15.0" fill="rgb(239,89,35)" rx="2" ry="2" />
<text  x="1163.14" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="927.5" y="373" width="0.1" height="15.0" fill="rgb(247,43,32)" rx="2" ry="2" />
<text  x="930.46" y="383.5" ></text>
</g>
<g >
<title>[unknown] (497 samples, 1.03%)</title><rect x="10.0" y="629" width="12.2" height="15.0" fill="rgb(253,55,24)" rx="2" ry="2" />
<text  x="13.05" y="639.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (6 samples, 0.01%)</title><rect x="737.8" y="277" width="0.2" height="15.0" fill="rgb(231,31,27)" rx="2" ry="2" />
<text  x="740.81" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="525.6" y="245" width="0.1" height="15.0" fill="rgb(216,67,36)" rx="2" ry="2" />
<text  x="528.58" y="255.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (10 samples, 0.02%)</title><rect x="247.0" y="229" width="0.2" height="15.0" fill="rgb(254,65,37)" rx="2" ry="2" />
<text  x="249.97" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (22 samples, 0.05%)</title><rect x="1151.6" y="469" width="0.5" height="15.0" fill="rgb(244,77,29)" rx="2" ry="2" />
<text  x="1154.59" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (10 samples, 0.02%)</title><rect x="696.4" y="405" width="0.3" height="15.0" fill="rgb(228,192,10)" rx="2" ry="2" />
<text  x="699.45" y="415.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.03%)</title><rect x="21.8" y="597" width="0.3" height="15.0" fill="rgb(245,22,13)" rx="2" ry="2" />
<text  x="24.82" y="607.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,340 samples, 4.84%)</title><rect x="164.0" y="197" width="57.2" height="15.0" fill="rgb(246,228,14)" rx="2" ry="2" />
<text  x="167.05" y="207.5" >partit..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="1128.6" y="421" width="0.2" height="15.0" fill="rgb(233,101,35)" rx="2" ry="2" />
<text  x="1131.64" y="431.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (6 samples, 0.01%)</title><rect x="594.3" y="421" width="0.2" height="15.0" fill="rgb(226,33,22)" rx="2" ry="2" />
<text  x="597.34" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (158 samples, 0.33%)</title><rect x="557.5" y="293" width="3.8" height="15.0" fill="rgb(226,108,21)" rx="2" ry="2" />
<text  x="560.46" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (210 samples, 0.43%)</title><rect x="222.4" y="213" width="5.1" height="15.0" fill="rgb(209,205,17)" rx="2" ry="2" />
<text  x="225.41" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (20 samples, 0.04%)</title><rect x="259.2" y="277" width="0.5" height="15.0" fill="rgb(214,99,53)" rx="2" ry="2" />
<text  x="262.18" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (25 samples, 0.05%)</title><rect x="838.7" y="373" width="0.6" height="15.0" fill="rgb(215,36,17)" rx="2" ry="2" />
<text  x="841.68" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="681.0" y="469" width="0.2" height="15.0" fill="rgb(209,109,53)" rx="2" ry="2" />
<text  x="683.97" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (57 samples, 0.12%)</title><rect x="953.5" y="405" width="1.4" height="15.0" fill="rgb(207,1,37)" rx="2" ry="2" />
<text  x="956.54" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="855.2" y="421" width="0.8" height="15.0" fill="rgb(230,140,54)" rx="2" ry="2" />
<text  x="858.24" y="431.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (27 samples, 0.06%)</title><rect x="168.7" y="133" width="0.6" height="15.0" fill="rgb(207,86,26)" rx="2" ry="2" />
<text  x="171.66" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (210 samples, 0.43%)</title><rect x="750.7" y="373" width="5.1" height="15.0" fill="rgb(236,78,24)" rx="2" ry="2" />
<text  x="753.66" y="383.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (6 samples, 0.01%)</title><rect x="896.5" y="277" width="0.1" height="15.0" fill="rgb(217,40,54)" rx="2" ry="2" />
<text  x="899.45" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (6 samples, 0.01%)</title><rect x="563.8" y="341" width="0.2" height="15.0" fill="rgb(228,224,24)" rx="2" ry="2" />
<text  x="566.81" y="351.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="244.7" y="181" width="0.8" height="15.0" fill="rgb(237,118,41)" rx="2" ry="2" />
<text  x="247.73" y="191.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (5 samples, 0.01%)</title><rect x="22.0" y="437" width="0.1" height="15.0" fill="rgb(251,20,53)" rx="2" ry="2" />
<text  x="24.99" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="678.3" y="453" width="0.7" height="15.0" fill="rgb(217,218,41)" rx="2" ry="2" />
<text  x="681.26" y="463.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%)</title><rect x="754.8" y="325" width="0.7" height="15.0" fill="rgb(206,16,2)" rx="2" ry="2" />
<text  x="757.81" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (139 samples, 0.29%)</title><rect x="248.3" y="229" width="3.4" height="15.0" fill="rgb(249,43,49)" rx="2" ry="2" />
<text  x="251.27" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (16 samples, 0.03%)</title><rect x="899.0" y="325" width="0.4" height="15.0" fill="rgb(220,118,40)" rx="2" ry="2" />
<text  x="901.97" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (25 samples, 0.05%)</title><rect x="675.8" y="453" width="0.6" height="15.0" fill="rgb(241,192,34)" rx="2" ry="2" />
<text  x="678.82" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (89 samples, 0.18%)</title><rect x="672.0" y="469" width="2.2" height="15.0" fill="rgb(208,170,17)" rx="2" ry="2" />
<text  x="675.01" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (175 samples, 0.36%)</title><rect x="717.6" y="373" width="4.3" height="15.0" fill="rgb(243,103,49)" rx="2" ry="2" />
<text  x="720.62" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="742.7" y="389" width="0.1" height="15.0" fill="rgb(211,24,20)" rx="2" ry="2" />
<text  x="745.67" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (65 samples, 0.13%)</title><rect x="773.2" y="309" width="1.6" height="15.0" fill="rgb(250,47,26)" rx="2" ry="2" />
<text  x="776.19" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,844 samples, 12.09%)</title><rect x="711.6" y="469" width="142.7" height="15.0" fill="rgb(245,195,44)" rx="2" ry="2" />
<text  x="714.56" y="479.5" >single_node_cql_en..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (25 samples, 0.05%)</title><rect x="943.2" y="357" width="0.6" height="15.0" fill="rgb(218,171,50)" rx="2" ry="2" />
<text  x="946.19" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%)</title><rect x="644.3" y="453" width="0.1" height="15.0" fill="rgb(246,35,14)" rx="2" ry="2" />
<text  x="647.27" y="463.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, service::client_state::has_column_family_access (5 samples, 0.01%)</title><rect x="825.7" y="405" width="0.1" height="15.0" fill="rgb(251,31,0)" rx="2" ry="2" />
<text  x="828.69" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="31.7" y="469" width="0.2" height="15.0" fill="rgb(221,0,42)" rx="2" ry="2" />
<text  x="34.73" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (14 samples, 0.03%)</title><rect x="1142.8" y="229" width="0.3" height="15.0" fill="rgb(209,181,48)" rx="2" ry="2" />
<text  x="1145.80" y="239.5" ></text>
</g>
<g >
<title>database::do_apply (34 samples, 0.07%)</title><rect x="1141.5" y="341" width="0.8" height="15.0" fill="rgb(229,117,0)" rx="2" ry="2" />
<text  x="1144.48" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (12 samples, 0.02%)</title><rect x="404.2" y="229" width="0.3" height="15.0" fill="rgb(253,207,33)" rx="2" ry="2" />
<text  x="407.22" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1035.0" y="229" width="0.1" height="15.0" fill="rgb(245,219,42)" rx="2" ry="2" />
<text  x="1037.97" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (5 samples, 0.01%)</title><rect x="987.8" y="309" width="0.1" height="15.0" fill="rgb(237,66,2)" rx="2" ry="2" />
<text  x="990.82" y="319.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="488.0" y="293" width="0.8" height="15.0" fill="rgb(232,131,32)" rx="2" ry="2" />
<text  x="491.05" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (12 samples, 0.02%)</title><rect x="542.3" y="277" width="0.3" height="15.0" fill="rgb(208,119,53)" rx="2" ry="2" />
<text  x="545.33" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (14 samples, 0.03%)</title><rect x="128.6" y="261" width="0.4" height="15.0" fill="rgb(249,145,33)" rx="2" ry="2" />
<text  x="131.62" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="544.5" y="421" width="0.3" height="15.0" fill="rgb(205,48,25)" rx="2" ry="2" />
<text  x="547.47" y="431.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (60 samples, 0.12%)</title><rect x="15.7" y="341" width="1.5" height="15.0" fill="rgb(206,2,37)" rx="2" ry="2" />
<text  x="18.74" y="351.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (17 samples, 0.04%)</title><rect x="1081.0" y="309" width="0.4" height="15.0" fill="rgb(230,202,31)" rx="2" ry="2" />
<text  x="1083.98" y="319.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="45.4" y="501" width="0.1" height="15.0" fill="rgb(249,25,51)" rx="2" ry="2" />
<text  x="48.41" y="511.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (35 samples, 0.07%)</title><rect x="1141.5" y="485" width="0.8" height="15.0" fill="rgb(240,152,31)" rx="2" ry="2" />
<text  x="1144.46" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (34 samples, 0.07%)</title><rect x="859.9" y="501" width="0.8" height="15.0" fill="rgb(214,51,21)" rx="2" ry="2" />
<text  x="862.85" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (628 samples, 1.30%)</title><rect x="548.5" y="341" width="15.3" height="15.0" fill="rgb(224,95,20)" rx="2" ry="2" />
<text  x="551.45" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (61 samples, 0.13%)</title><rect x="502.8" y="229" width="1.5" height="15.0" fill="rgb(211,137,0)" rx="2" ry="2" />
<text  x="505.84" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (7 samples, 0.01%)</title><rect x="899.4" y="325" width="0.1" height="15.0" fill="rgb(208,112,27)" rx="2" ry="2" />
<text  x="902.36" y="335.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (59 samples, 0.12%)</title><rect x="472.2" y="213" width="1.5" height="15.0" fill="rgb(253,27,48)" rx="2" ry="2" />
<text  x="475.22" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="1106.5" y="373" width="0.2" height="15.0" fill="rgb(237,161,0)" rx="2" ry="2" />
<text  x="1109.54" y="383.5" ></text>
</g>
<g >
<title>query::digester::digester (36 samples, 0.07%)</title><rect x="588.5" y="405" width="0.9" height="15.0" fill="rgb(234,124,32)" rx="2" ry="2" />
<text  x="591.50" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="591.5" y="357" width="0.8" height="15.0" fill="rgb(244,78,26)" rx="2" ry="2" />
<text  x="594.48" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="678.3" y="405" width="0.6" height="15.0" fill="rgb(223,196,45)" rx="2" ry="2" />
<text  x="681.26" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (44 samples, 0.09%)</title><rect x="922.5" y="325" width="1.1" height="15.0" fill="rgb(214,16,25)" rx="2" ry="2" />
<text  x="925.51" y="335.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (5 samples, 0.01%)</title><rect x="22.0" y="453" width="0.1" height="15.0" fill="rgb(206,200,23)" rx="2" ry="2" />
<text  x="24.99" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (18 samples, 0.04%)</title><rect x="865.5" y="453" width="0.5" height="15.0" fill="rgb(243,129,8)" rx="2" ry="2" />
<text  x="868.54" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (5 samples, 0.01%)</title><rect x="211.5" y="133" width="0.1" height="15.0" fill="rgb(217,200,26)" rx="2" ry="2" />
<text  x="214.47" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (54 samples, 0.11%)</title><rect x="776.9" y="261" width="1.3" height="15.0" fill="rgb(244,164,17)" rx="2" ry="2" />
<text  x="779.93" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="301.0" y="245" width="0.3" height="15.0" fill="rgb(226,110,18)" rx="2" ry="2" />
<text  x="304.01" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="543.3" y="389" width="0.6" height="15.0" fill="rgb(238,26,24)" rx="2" ry="2" />
<text  x="546.25" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="897.3" y="277" width="0.2" height="15.0" fill="rgb(220,145,4)" rx="2" ry="2" />
<text  x="900.26" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="754.2" y="309" width="0.2" height="15.0" fill="rgb(216,73,10)" rx="2" ry="2" />
<text  x="757.22" y="319.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (13 samples, 0.03%)</title><rect x="1136.9" y="405" width="0.3" height="15.0" fill="rgb(251,43,1)" rx="2" ry="2" />
<text  x="1139.89" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (26 samples, 0.05%)</title><rect x="598.0" y="437" width="0.7" height="15.0" fill="rgb(246,92,4)" rx="2" ry="2" />
<text  x="601.05" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="1170.8" y="469" width="0.3" height="15.0" fill="rgb(217,17,48)" rx="2" ry="2" />
<text  x="1173.78" y="479.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (68 samples, 0.14%)</title><rect x="309.4" y="181" width="1.7" height="15.0" fill="rgb(252,0,10)" rx="2" ry="2" />
<text  x="312.43" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (13 samples, 0.03%)</title><rect x="271.2" y="341" width="0.3" height="15.0" fill="rgb(235,30,46)" rx="2" ry="2" />
<text  x="274.22" y="351.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (556 samples, 1.15%)</title><rect x="726.8" y="405" width="13.6" height="15.0" fill="rgb(213,144,0)" rx="2" ry="2" />
<text  x="729.85" y="415.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1142.9" y="149" width="0.1" height="15.0" fill="rgb(254,198,39)" rx="2" ry="2" />
<text  x="1145.87" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (77 samples, 0.16%)</title><rect x="674.9" y="485" width="1.9" height="15.0" fill="rgb(253,22,24)" rx="2" ry="2" />
<text  x="677.94" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (51 samples, 0.11%)</title><rect x="444.5" y="261" width="1.3" height="15.0" fill="rgb(249,96,7)" rx="2" ry="2" />
<text  x="447.51" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="963.5" y="341" width="0.7" height="15.0" fill="rgb(250,53,51)" rx="2" ry="2" />
<text  x="966.53" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (6 samples, 0.01%)</title><rect x="102.0" y="421" width="0.2" height="15.0" fill="rgb(205,39,19)" rx="2" ry="2" />
<text  x="105.01" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (44 samples, 0.09%)</title><rect x="728.5" y="373" width="1.1" height="15.0" fill="rgb(236,200,33)" rx="2" ry="2" />
<text  x="731.51" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (94 samples, 0.19%)</title><rect x="785.8" y="213" width="2.3" height="15.0" fill="rgb(207,94,19)" rx="2" ry="2" />
<text  x="788.79" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="619.5" y="469" width="0.2" height="15.0" fill="rgb(247,94,13)" rx="2" ry="2" />
<text  x="622.53" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="844.9" y="341" width="0.3" height="15.0" fill="rgb(218,1,42)" rx="2" ry="2" />
<text  x="847.88" y="351.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (8 samples, 0.02%)</title><rect x="1142.8" y="165" width="0.2" height="15.0" fill="rgb(228,90,53)" rx="2" ry="2" />
<text  x="1145.80" y="175.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (157 samples, 0.32%)</title><rect x="848.0" y="405" width="3.8" height="15.0" fill="rgb(205,42,15)" rx="2" ry="2" />
<text  x="850.98" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (9 samples, 0.02%)</title><rect x="808.7" y="293" width="0.2" height="15.0" fill="rgb(242,226,23)" rx="2" ry="2" />
<text  x="811.72" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt (5 samples, 0.01%)</title><rect x="521.5" y="277" width="0.1" height="15.0" fill="rgb(210,86,25)" rx="2" ry="2" />
<text  x="524.47" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,787 samples, 9.91%)</title><rect x="417.0" y="421" width="116.9" height="15.0" fill="rgb(246,83,13)" rx="2" ry="2" />
<text  x="420.04" y="431.5" >query::querier..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="853.3" y="405" width="0.4" height="15.0" fill="rgb(236,145,51)" rx="2" ry="2" />
<text  x="856.26" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (31 samples, 0.06%)</title><rect x="20.5" y="453" width="0.8" height="15.0" fill="rgb(206,111,27)" rx="2" ry="2" />
<text  x="23.52" y="463.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (44 samples, 0.09%)</title><rect x="432.7" y="277" width="1.0" height="15.0" fill="rgb(212,177,19)" rx="2" ry="2" />
<text  x="435.67" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (15 samples, 0.03%)</title><rect x="1150.2" y="469" width="0.4" height="15.0" fill="rgb(245,89,31)" rx="2" ry="2" />
<text  x="1153.25" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="1078.4" y="325" width="0.3" height="15.0" fill="rgb(228,117,35)" rx="2" ry="2" />
<text  x="1081.41" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="512.3" y="309" width="0.5" height="15.0" fill="rgb(209,229,42)" rx="2" ry="2" />
<text  x="515.29" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (172 samples, 0.36%)</title><rect x="473.7" y="213" width="4.2" height="15.0" fill="rgb(206,52,31)" rx="2" ry="2" />
<text  x="476.66" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,969 samples, 4.07%)</title><rect x="166.7" y="181" width="48.1" height="15.0" fill="rgb(244,207,49)" rx="2" ry="2" />
<text  x="169.69" y="191.5" >muta..</text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="759.3" y="357" width="0.5" height="15.0" fill="rgb(231,124,45)" rx="2" ry="2" />
<text  x="762.25" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (128 samples, 0.26%)</title><rect x="345.2" y="165" width="3.2" height="15.0" fill="rgb(215,120,46)" rx="2" ry="2" />
<text  x="348.23" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.01%)</title><rect x="845.5" y="325" width="0.2" height="15.0" fill="rgb(209,83,20)" rx="2" ry="2" />
<text  x="848.54" y="335.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,566 samples, 23.93%)</title><rect x="861.3" y="501" width="282.5" height="15.0" fill="rgb(224,20,20)" rx="2" ry="2" />
<text  x="864.34" y="511.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="856.4" y="405" width="0.1" height="15.0" fill="rgb(222,216,32)" rx="2" ry="2" />
<text  x="859.36" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="806.9" y="277" width="0.1" height="15.0" fill="rgb(214,119,44)" rx="2" ry="2" />
<text  x="809.89" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="523.7" y="309" width="0.1" height="15.0" fill="rgb(205,72,20)" rx="2" ry="2" />
<text  x="526.72" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="1120.2" y="325" width="0.4" height="15.0" fill="rgb(228,7,31)" rx="2" ry="2" />
<text  x="1123.21" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::take (5 samples, 0.01%)</title><rect x="683.3" y="437" width="0.1" height="15.0" fill="rgb(251,153,19)" rx="2" ry="2" />
<text  x="686.26" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (39 samples, 0.08%)</title><rect x="797.4" y="117" width="1.0" height="15.0" fill="rgb(248,79,14)" rx="2" ry="2" />
<text  x="800.44" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="770.8" y="293" width="0.4" height="15.0" fill="rgb(229,23,24)" rx="2" ry="2" />
<text  x="773.78" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (68 samples, 0.14%)</title><rect x="938.4" y="405" width="1.6" height="15.0" fill="rgb(219,213,18)" rx="2" ry="2" />
<text  x="941.35" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (14 samples, 0.03%)</title><rect x="236.5" y="213" width="0.3" height="15.0" fill="rgb(215,29,7)" rx="2" ry="2" />
<text  x="239.47" y="223.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (110 samples, 0.23%)</title><rect x="348.5" y="165" width="2.7" height="15.0" fill="rgb(214,64,38)" rx="2" ry="2" />
<text  x="351.52" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (17 samples, 0.04%)</title><rect x="798.9" y="197" width="0.4" height="15.0" fill="rgb(216,162,54)" rx="2" ry="2" />
<text  x="801.86" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (45 samples, 0.09%)</title><rect x="800.5" y="229" width="1.1" height="15.0" fill="rgb(235,186,22)" rx="2" ry="2" />
<text  x="803.52" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1106.2" y="341" width="0.2" height="15.0" fill="rgb(253,196,5)" rx="2" ry="2" />
<text  x="1109.22" y="351.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (456 samples, 0.94%)</title><rect x="516.3" y="325" width="11.2" height="15.0" fill="rgb(236,219,54)" rx="2" ry="2" />
<text  x="519.32" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="632.4" y="485" width="0.6" height="15.0" fill="rgb(236,57,39)" rx="2" ry="2" />
<text  x="635.43" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%)</title><rect x="247.9" y="245" width="0.1" height="15.0" fill="rgb(251,74,6)" rx="2" ry="2" />
<text  x="250.85" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (13 samples, 0.03%)</title><rect x="262.8" y="309" width="0.4" height="15.0" fill="rgb(234,109,9)" rx="2" ry="2" />
<text  x="265.84" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (30 samples, 0.06%)</title><rect x="877.1" y="421" width="0.8" height="15.0" fill="rgb(229,98,11)" rx="2" ry="2" />
<text  x="880.14" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="934.1" y="373" width="0.2" height="15.0" fill="rgb(245,96,54)" rx="2" ry="2" />
<text  x="937.10" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (47,364 samples, 98.01%)</title><rect x="22.2" y="629" width="1156.5" height="15.0" fill="rgb(206,15,40)" rx="2" ry="2" />
<text  x="25.18" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="227.0" y="197" width="0.2" height="15.0" fill="rgb(224,18,52)" rx="2" ry="2" />
<text  x="230.05" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (30 samples, 0.06%)</title><rect x="257.9" y="277" width="0.7" height="15.0" fill="rgb(208,140,10)" rx="2" ry="2" />
<text  x="260.86" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (14 samples, 0.03%)</title><rect x="542.3" y="293" width="0.3" height="15.0" fill="rgb(216,42,49)" rx="2" ry="2" />
<text  x="545.30" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (25 samples, 0.05%)</title><rect x="771.7" y="277" width="0.6" height="15.0" fill="rgb(210,27,0)" rx="2" ry="2" />
<text  x="774.66" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="809.2" y="277" width="0.2" height="15.0" fill="rgb(207,142,5)" rx="2" ry="2" />
<text  x="812.23" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (16 samples, 0.03%)</title><rect x="666.4" y="453" width="0.4" height="15.0" fill="rgb(246,24,21)" rx="2" ry="2" />
<text  x="669.42" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (195 samples, 0.40%)</title><rect x="987.6" y="325" width="4.8" height="15.0" fill="rgb(224,31,30)" rx="2" ry="2" />
<text  x="990.60" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="527.8" y="341" width="0.1" height="15.0" fill="rgb(221,103,44)" rx="2" ry="2" />
<text  x="530.77" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="880.6" y="405" width="0.3" height="15.0" fill="rgb(220,79,48)" rx="2" ry="2" />
<text  x="883.63" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="1105.7" y="357" width="0.3" height="15.0" fill="rgb(212,15,11)" rx="2" ry="2" />
<text  x="1108.66" y="367.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.02%)</title><rect x="17.9" y="309" width="0.2" height="15.0" fill="rgb(228,169,44)" rx="2" ry="2" />
<text  x="20.86" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1141.5" y="373" width="0.8" height="15.0" fill="rgb(214,108,14)" rx="2" ry="2" />
<text  x="1144.48" y="383.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="947.7" y="357" width="0.1" height="15.0" fill="rgb(220,154,47)" rx="2" ry="2" />
<text  x="950.71" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="691.1" y="469" width="0.1" height="15.0" fill="rgb(217,127,47)" rx="2" ry="2" />
<text  x="694.10" y="479.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="491.8" y="245" width="0.1" height="15.0" fill="rgb(232,114,37)" rx="2" ry="2" />
<text  x="494.78" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="632.2" y="469" width="0.1" height="15.0" fill="rgb(231,148,16)" rx="2" ry="2" />
<text  x="635.18" y="479.5" ></text>
</g>
<g >
<title>make_combined_reader (5 samples, 0.01%)</title><rect x="420.3" y="357" width="0.1" height="15.0" fill="rgb(222,37,16)" rx="2" ry="2" />
<text  x="423.29" y="367.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (983 samples, 2.03%)</title><rect x="455.1" y="325" width="24.0" height="15.0" fill="rgb(247,21,5)" rx="2" ry="2" />
<text  x="458.08" y="335.5" >d..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.02%)</title><rect x="15.8" y="293" width="0.3" height="15.0" fill="rgb(226,40,54)" rx="2" ry="2" />
<text  x="18.81" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (118 samples, 0.24%)</title><rect x="294.4" y="293" width="2.9" height="15.0" fill="rgb(246,114,15)" rx="2" ry="2" />
<text  x="297.44" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="617.5" y="373" width="0.4" height="15.0" fill="rgb(226,58,26)" rx="2" ry="2" />
<text  x="620.46" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (7 samples, 0.01%)</title><rect x="246.2" y="229" width="0.2" height="15.0" fill="rgb(227,226,21)" rx="2" ry="2" />
<text  x="249.19" y="239.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (22 samples, 0.05%)</title><rect x="1141.5" y="309" width="0.5" height="15.0" fill="rgb(212,51,33)" rx="2" ry="2" />
<text  x="1144.51" y="319.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.02%)</title><rect x="861.9" y="309" width="0.2" height="15.0" fill="rgb(235,189,46)" rx="2" ry="2" />
<text  x="864.88" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (473 samples, 0.98%)</title><rect x="564.2" y="389" width="11.6" height="15.0" fill="rgb(205,166,43)" rx="2" ry="2" />
<text  x="567.20" y="399.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (36 samples, 0.07%)</title><rect x="1051.4" y="293" width="0.9" height="15.0" fill="rgb(218,72,1)" rx="2" ry="2" />
<text  x="1054.43" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::stats (42 samples, 0.09%)</title><rect x="481.2" y="309" width="1.0" height="15.0" fill="rgb(241,33,23)" rx="2" ry="2" />
<text  x="484.16" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (73 samples, 0.15%)</title><rect x="730.4" y="357" width="1.8" height="15.0" fill="rgb(249,146,17)" rx="2" ry="2" />
<text  x="733.39" y="367.5" ></text>
</g>
<g >
<title>dht::minimum_token (6 samples, 0.01%)</title><rect x="428.8" y="325" width="0.2" height="15.0" fill="rgb(245,225,7)" rx="2" ry="2" />
<text  x="431.81" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="683.7" y="437" width="0.1" height="15.0" fill="rgb(206,124,46)" rx="2" ry="2" />
<text  x="686.65" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (17 samples, 0.04%)</title><rect x="284.4" y="357" width="0.4" height="15.0" fill="rgb(237,170,16)" rx="2" ry="2" />
<text  x="287.36" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (8 samples, 0.02%)</title><rect x="740.2" y="357" width="0.2" height="15.0" fill="rgb(216,186,6)" rx="2" ry="2" />
<text  x="743.23" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (556 samples, 1.15%)</title><rect x="180.6" y="101" width="13.6" height="15.0" fill="rgb(246,45,11)" rx="2" ry="2" />
<text  x="183.63" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.01%)</title><rect x="726.1" y="421" width="0.1" height="15.0" fill="rgb(244,201,7)" rx="2" ry="2" />
<text  x="729.09" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (12 samples, 0.02%)</title><rect x="1078.7" y="325" width="0.3" height="15.0" fill="rgb(235,125,39)" rx="2" ry="2" />
<text  x="1081.73" y="335.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.02%)</title><rect x="447.6" y="293" width="0.3" height="15.0" fill="rgb(217,82,33)" rx="2" ry="2" />
<text  x="450.59" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume (8 samples, 0.02%)</title><rect x="678.4" y="293" width="0.2" height="15.0" fill="rgb(206,209,37)" rx="2" ry="2" />
<text  x="681.40" y="303.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.06%)</title><rect x="781.2" y="245" width="0.8" height="15.0" fill="rgb(216,94,26)" rx="2" ry="2" />
<text  x="784.23" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (33 samples, 0.07%)</title><rect x="1156.9" y="453" width="0.8" height="15.0" fill="rgb(243,7,46)" rx="2" ry="2" />
<text  x="1159.89" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="213.1" y="165" width="0.6" height="15.0" fill="rgb(247,16,30)" rx="2" ry="2" />
<text  x="216.08" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (554 samples, 1.15%)</title><rect x="233.8" y="261" width="13.6" height="15.0" fill="rgb(239,174,40)" rx="2" ry="2" />
<text  x="236.84" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (56 samples, 0.12%)</title><rect x="1108.8" y="405" width="1.4" height="15.0" fill="rgb(206,185,4)" rx="2" ry="2" />
<text  x="1111.79" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1095.0" y="277" width="0.3" height="15.0" fill="rgb(246,145,21)" rx="2" ry="2" />
<text  x="1098.04" y="287.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (431 samples, 0.89%)</title><rect x="835.7" y="437" width="10.5" height="15.0" fill="rgb(230,77,7)" rx="2" ry="2" />
<text  x="838.68" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (30 samples, 0.06%)</title><rect x="933.5" y="389" width="0.8" height="15.0" fill="rgb(208,209,54)" rx="2" ry="2" />
<text  x="936.54" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (10 samples, 0.02%)</title><rect x="942.6" y="373" width="0.2" height="15.0" fill="rgb(253,164,33)" rx="2" ry="2" />
<text  x="945.60" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="584.0" y="373" width="0.1" height="15.0" fill="rgb(223,9,7)" rx="2" ry="2" />
<text  x="586.98" y="383.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (495 samples, 1.02%)</title><rect x="466.9" y="293" width="12.1" height="15.0" fill="rgb(216,218,5)" rx="2" ry="2" />
<text  x="469.88" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (11 samples, 0.02%)</title><rect x="707.2" y="485" width="0.2" height="15.0" fill="rgb(230,31,37)" rx="2" ry="2" />
<text  x="710.17" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="853.7" y="437" width="0.2" height="15.0" fill="rgb(216,186,10)" rx="2" ry="2" />
<text  x="856.67" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (5 samples, 0.01%)</title><rect x="948.5" y="405" width="0.1" height="15.0" fill="rgb(253,67,34)" rx="2" ry="2" />
<text  x="951.46" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (473 samples, 0.98%)</title><rect x="234.2" y="229" width="11.6" height="15.0" fill="rgb(229,8,47)" rx="2" ry="2" />
<text  x="237.20" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (66 samples, 0.14%)</title><rect x="17.8" y="341" width="1.6" height="15.0" fill="rgb(241,53,43)" rx="2" ry="2" />
<text  x="20.79" y="351.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,461 samples, 3.02%)</title><rect x="167.3" y="165" width="35.6" height="15.0" fill="rgb(214,229,24)" rx="2" ry="2" />
<text  x="170.27" y="175.5" >clu..</text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%)</title><rect x="18.0" y="213" width="0.1" height="15.0" fill="rgb(219,66,42)" rx="2" ry="2" />
<text  x="20.96" y="223.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="21.4" y="405" width="0.1" height="15.0" fill="rgb(213,34,14)" rx="2" ry="2" />
<text  x="24.40" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="1172.2" y="453" width="0.7" height="15.0" fill="rgb(246,60,41)" rx="2" ry="2" />
<text  x="1175.20" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="214.6" y="165" width="0.2" height="15.0" fill="rgb(238,24,21)" rx="2" ry="2" />
<text  x="217.62" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (73 samples, 0.15%)</title><rect x="1058.6" y="325" width="1.7" height="15.0" fill="rgb(224,215,15)" rx="2" ry="2" />
<text  x="1061.56" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="477.4" y="181" width="0.4" height="15.0" fill="rgb(215,195,26)" rx="2" ry="2" />
<text  x="480.40" y="191.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (74 samples, 0.15%)</title><rect x="786.3" y="181" width="1.8" height="15.0" fill="rgb(232,188,49)" rx="2" ry="2" />
<text  x="789.26" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="821.5" y="277" width="0.2" height="15.0" fill="rgb(252,9,46)" rx="2" ry="2" />
<text  x="824.49" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (74 samples, 0.15%)</title><rect x="854.9" y="469" width="1.8" height="15.0" fill="rgb(211,217,37)" rx="2" ry="2" />
<text  x="857.87" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.03%)</title><rect x="919.1" y="357" width="0.4" height="15.0" fill="rgb(234,171,18)" rx="2" ry="2" />
<text  x="922.09" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (29 samples, 0.06%)</title><rect x="1027.7" y="149" width="0.7" height="15.0" fill="rgb(221,101,54)" rx="2" ry="2" />
<text  x="1030.67" y="159.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (42 samples, 0.09%)</title><rect x="794.8" y="149" width="1.0" height="15.0" fill="rgb(245,28,33)" rx="2" ry="2" />
<text  x="797.80" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,252 samples, 2.59%)</title><rect x="546.1" y="421" width="30.5" height="15.0" fill="rgb(227,94,24)" rx="2" ry="2" />
<text  x="549.06" y="431.5" >st..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (131 samples, 0.27%)</title><rect x="1045.5" y="261" width="3.2" height="15.0" fill="rgb(251,181,38)" rx="2" ry="2" />
<text  x="1048.55" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="141.3" y="277" width="0.1" height="15.0" fill="rgb(219,221,3)" rx="2" ry="2" />
<text  x="144.27" y="287.5" ></text>
</g>
<g >
<title>dht::shard_of (37 samples, 0.08%)</title><rect x="1005.4" y="277" width="0.9" height="15.0" fill="rgb(233,114,15)" rx="2" ry="2" />
<text  x="1008.35" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (8 samples, 0.02%)</title><rect x="446.8" y="277" width="0.2" height="15.0" fill="rgb(227,91,54)" rx="2" ry="2" />
<text  x="449.76" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (37 samples, 0.08%)</title><rect x="128.1" y="277" width="0.9" height="15.0" fill="rgb(208,115,16)" rx="2" ry="2" />
<text  x="131.06" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (72 samples, 0.15%)</title><rect x="709.0" y="437" width="1.7" height="15.0" fill="rgb(218,215,50)" rx="2" ry="2" />
<text  x="711.98" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (16 samples, 0.03%)</title><rect x="1115.3" y="357" width="0.4" height="15.0" fill="rgb(211,66,7)" rx="2" ry="2" />
<text  x="1118.33" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1072.7" y="325" width="0.2" height="15.0" fill="rgb(212,216,34)" rx="2" ry="2" />
<text  x="1075.75" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (143 samples, 0.30%)</title><rect x="190.4" y="53" width="3.5" height="15.0" fill="rgb(226,213,36)" rx="2" ry="2" />
<text  x="193.37" y="63.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (6 samples, 0.01%)</title><rect x="126.4" y="293" width="0.1" height="15.0" fill="rgb(236,163,27)" rx="2" ry="2" />
<text  x="129.40" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (67 samples, 0.14%)</title><rect x="244.1" y="197" width="1.7" height="15.0" fill="rgb(230,13,49)" rx="2" ry="2" />
<text  x="247.11" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (9 samples, 0.02%)</title><rect x="1065.1" y="261" width="0.2" height="15.0" fill="rgb(210,204,20)" rx="2" ry="2" />
<text  x="1068.06" y="271.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (8 samples, 0.02%)</title><rect x="702.9" y="501" width="0.2" height="15.0" fill="rgb(244,104,8)" rx="2" ry="2" />
<text  x="705.87" y="511.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="755.5" y="325" width="0.2" height="15.0" fill="rgb(234,115,36)" rx="2" ry="2" />
<text  x="758.54" y="335.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (11 samples, 0.02%)</title><rect x="420.4" y="357" width="0.3" height="15.0" fill="rgb(212,168,37)" rx="2" ry="2" />
<text  x="423.41" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (113 samples, 0.23%)</title><rect x="524.2" y="277" width="2.7" height="15.0" fill="rgb(244,58,10)" rx="2" ry="2" />
<text  x="527.16" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (6 samples, 0.01%)</title><rect x="948.2" y="389" width="0.1" height="15.0" fill="rgb(251,111,45)" rx="2" ry="2" />
<text  x="951.17" y="399.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (10 samples, 0.02%)</title><rect x="308.8" y="197" width="0.2" height="15.0" fill="rgb(228,61,43)" rx="2" ry="2" />
<text  x="311.80" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (78 samples, 0.16%)</title><rect x="243.8" y="213" width="2.0" height="15.0" fill="rgb(233,39,51)" rx="2" ry="2" />
<text  x="246.85" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (42 samples, 0.09%)</title><rect x="1177.6" y="517" width="1.0" height="15.0" fill="rgb(215,205,27)" rx="2" ry="2" />
<text  x="1180.57" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (33 samples, 0.07%)</title><rect x="541.9" y="309" width="0.8" height="15.0" fill="rgb(222,53,8)" rx="2" ry="2" />
<text  x="544.86" y="319.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="38.8" y="453" width="0.3" height="15.0" fill="rgb(239,102,16)" rx="2" ry="2" />
<text  x="41.76" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (20 samples, 0.04%)</title><rect x="911.3" y="389" width="0.5" height="15.0" fill="rgb(240,125,28)" rx="2" ry="2" />
<text  x="914.27" y="399.5" ></text>
</g>
<g >
<title>make_combined_reader (760 samples, 1.57%)</title><rect x="429.4" y="325" width="18.6" height="15.0" fill="rgb(224,201,44)" rx="2" ry="2" />
<text  x="432.44" y="335.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,330 samples, 8.96%)</title><rect x="723.7" y="437" width="105.7" height="15.0" fill="rgb(213,140,40)" rx="2" ry="2" />
<text  x="726.67" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (52 samples, 0.11%)</title><rect x="560.0" y="261" width="1.3" height="15.0" fill="rgb(213,30,34)" rx="2" ry="2" />
<text  x="563.03" y="271.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (119 samples, 0.25%)</title><rect x="590.0" y="405" width="2.9" height="15.0" fill="rgb(222,208,29)" rx="2" ry="2" />
<text  x="592.99" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (6 samples, 0.01%)</title><rect x="1052.7" y="309" width="0.1" height="15.0" fill="rgb(218,151,3)" rx="2" ry="2" />
<text  x="1055.70" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (23 samples, 0.05%)</title><rect x="937.0" y="405" width="0.5" height="15.0" fill="rgb(219,151,30)" rx="2" ry="2" />
<text  x="939.96" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="249.1" y="213" width="0.2" height="15.0" fill="rgb(215,27,28)" rx="2" ry="2" />
<text  x="252.10" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (59 samples, 0.12%)</title><rect x="453.6" y="309" width="1.5" height="15.0" fill="rgb(241,72,38)" rx="2" ry="2" />
<text  x="456.64" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="538.7" y="373" width="0.2" height="15.0" fill="rgb(254,197,26)" rx="2" ry="2" />
<text  x="541.71" y="383.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="896.3" y="245" width="0.2" height="15.0" fill="rgb(237,139,2)" rx="2" ry="2" />
<text  x="899.33" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (128 samples, 0.26%)</title><rect x="207.7" y="117" width="3.1" height="15.0" fill="rgb(226,48,3)" rx="2" ry="2" />
<text  x="210.68" y="127.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (6 samples, 0.01%)</title><rect x="542.7" y="389" width="0.1" height="15.0" fill="rgb(232,73,46)" rx="2" ry="2" />
<text  x="545.69" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (71 samples, 0.15%)</title><rect x="854.9" y="453" width="1.8" height="15.0" fill="rgb(240,105,46)" rx="2" ry="2" />
<text  x="857.94" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (47 samples, 0.10%)</title><rect x="125.1" y="277" width="1.2" height="15.0" fill="rgb(235,130,40)" rx="2" ry="2" />
<text  x="128.13" y="287.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (8 samples, 0.02%)</title><rect x="61.6" y="453" width="0.2" height="15.0" fill="rgb(229,125,12)" rx="2" ry="2" />
<text  x="64.57" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.01%)</title><rect x="678.3" y="293" width="0.1" height="15.0" fill="rgb(234,216,46)" rx="2" ry="2" />
<text  x="681.28" y="303.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (5 samples, 0.01%)</title><rect x="909.6" y="389" width="0.2" height="15.0" fill="rgb(211,67,10)" rx="2" ry="2" />
<text  x="912.64" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (193 samples, 0.40%)</title><rect x="681.6" y="469" width="4.7" height="15.0" fill="rgb(236,73,4)" rx="2" ry="2" />
<text  x="684.58" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (30 samples, 0.06%)</title><rect x="771.5" y="293" width="0.8" height="15.0" fill="rgb(232,79,53)" rx="2" ry="2" />
<text  x="774.53" y="303.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="1160.3" y="389" width="0.9" height="15.0" fill="rgb(216,185,0)" rx="2" ry="2" />
<text  x="1163.31" y="399.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (5 samples, 0.01%)</title><rect x="954.6" y="341" width="0.1" height="15.0" fill="rgb(233,62,34)" rx="2" ry="2" />
<text  x="957.57" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="660.1" y="469" width="0.2" height="15.0" fill="rgb(248,215,49)" rx="2" ry="2" />
<text  x="663.12" y="479.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (7 samples, 0.01%)</title><rect x="798.2" y="85" width="0.1" height="15.0" fill="rgb(216,210,50)" rx="2" ry="2" />
<text  x="801.17" y="95.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (6 samples, 0.01%)</title><rect x="20.6" y="421" width="0.2" height="15.0" fill="rgb(205,40,34)" rx="2" ry="2" />
<text  x="23.62" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (718 samples, 1.49%)</title><rect x="367.9" y="197" width="17.5" height="15.0" fill="rgb(247,91,16)" rx="2" ry="2" />
<text  x="370.86" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="435.1" y="229" width="0.8" height="15.0" fill="rgb(232,53,48)" rx="2" ry="2" />
<text  x="438.06" y="239.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%)</title><rect x="686.0" y="437" width="0.1" height="15.0" fill="rgb(218,186,37)" rx="2" ry="2" />
<text  x="689.00" y="447.5" ></text>
</g>
<g >
<title>schema::column_at (61 samples, 0.13%)</title><rect x="200.1" y="117" width="1.5" height="15.0" fill="rgb(232,202,34)" rx="2" ry="2" />
<text  x="203.11" y="127.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="1117.1" y="373" width="0.3" height="15.0" fill="rgb(220,166,12)" rx="2" ry="2" />
<text  x="1120.09" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (192 samples, 0.40%)</title><rect x="15.7" y="389" width="4.7" height="15.0" fill="rgb(229,140,32)" rx="2" ry="2" />
<text  x="18.66" y="399.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (80 samples, 0.17%)</title><rect x="655.5" y="453" width="2.0" height="15.0" fill="rgb(242,12,14)" rx="2" ry="2" />
<text  x="658.55" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="1048.3" y="197" width="0.4" height="15.0" fill="rgb(211,19,30)" rx="2" ry="2" />
<text  x="1051.33" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (27 samples, 0.06%)</title><rect x="947.0" y="357" width="0.7" height="15.0" fill="rgb(228,34,7)" rx="2" ry="2" />
<text  x="950.05" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.01%)</title><rect x="798.2" y="69" width="0.1" height="15.0" fill="rgb(235,112,18)" rx="2" ry="2" />
<text  x="801.20" y="79.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="689.3" y="485" width="0.8" height="15.0" fill="rgb(249,87,10)" rx="2" ry="2" />
<text  x="692.34" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (293 samples, 0.61%)</title><rect x="187.0" y="85" width="7.1" height="15.0" fill="rgb(247,147,40)" rx="2" ry="2" />
<text  x="189.98" y="95.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (44 samples, 0.09%)</title><rect x="354.8" y="149" width="1.1" height="15.0" fill="rgb(220,135,16)" rx="2" ry="2" />
<text  x="357.80" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (44 samples, 0.09%)</title><rect x="718.0" y="341" width="1.1" height="15.0" fill="rgb(245,12,9)" rx="2" ry="2" />
<text  x="720.99" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="774.4" y="277" width="0.4" height="15.0" fill="rgb(238,176,13)" rx="2" ry="2" />
<text  x="777.41" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (118 samples, 0.24%)</title><rect x="278.7" y="293" width="2.8" height="15.0" fill="rgb(234,116,31)" rx="2" ry="2" />
<text  x="281.67" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1137.5" y="421" width="0.1" height="15.0" fill="rgb(232,65,35)" rx="2" ry="2" />
<text  x="1140.48" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (125 samples, 0.26%)</title><rect x="631.4" y="501" width="3.1" height="15.0" fill="rgb(221,229,0)" rx="2" ry="2" />
<text  x="634.45" y="511.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (244 samples, 0.50%)</title><rect x="15.4" y="485" width="6.0" height="15.0" fill="rgb(229,53,50)" rx="2" ry="2" />
<text  x="18.42" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (5 samples, 0.01%)</title><rect x="550.5" y="325" width="0.1" height="15.0" fill="rgb(250,99,17)" rx="2" ry="2" />
<text  x="553.51" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="583.4" y="373" width="0.3" height="15.0" fill="rgb(232,96,13)" rx="2" ry="2" />
<text  x="586.42" y="383.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.07%)</title><rect x="741.3" y="405" width="0.8" height="15.0" fill="rgb(241,166,32)" rx="2" ry="2" />
<text  x="744.26" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (15 samples, 0.03%)</title><rect x="860.8" y="453" width="0.4" height="15.0" fill="rgb(220,9,32)" rx="2" ry="2" />
<text  x="863.83" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="39.5" y="437" width="0.2" height="15.0" fill="rgb(249,188,52)" rx="2" ry="2" />
<text  x="42.52" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (7 samples, 0.01%)</title><rect x="826.1" y="421" width="0.2" height="15.0" fill="rgb(224,136,0)" rx="2" ry="2" />
<text  x="829.08" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (5 samples, 0.01%)</title><rect x="224.8" y="165" width="0.1" height="15.0" fill="rgb(248,88,9)" rx="2" ry="2" />
<text  x="227.78" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="407.4" y="277" width="0.2" height="15.0" fill="rgb(230,150,34)" rx="2" ry="2" />
<text  x="410.44" y="287.5" ></text>
</g>
<g >
<title>[unknown] (171 samples, 0.35%)</title><rect x="10.2" y="597" width="4.1" height="15.0" fill="rgb(237,110,35)" rx="2" ry="2" />
<text  x="13.17" y="607.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="501.8" y="245" width="0.3" height="15.0" fill="rgb(229,110,30)" rx="2" ry="2" />
<text  x="504.82" y="255.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (10 samples, 0.02%)</title><rect x="993.9" y="325" width="0.2" height="15.0" fill="rgb(253,148,42)" rx="2" ry="2" />
<text  x="996.85" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="420.9" y="357" width="0.3" height="15.0" fill="rgb(241,122,39)" rx="2" ry="2" />
<text  x="423.95" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (376 samples, 0.78%)</title><rect x="889.0" y="293" width="9.2" height="15.0" fill="rgb(253,128,30)" rx="2" ry="2" />
<text  x="892.01" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (14 samples, 0.03%)</title><rect x="1018.7" y="197" width="0.4" height="15.0" fill="rgb(236,147,22)" rx="2" ry="2" />
<text  x="1021.74" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (12 samples, 0.02%)</title><rect x="23.6" y="517" width="0.3" height="15.0" fill="rgb(224,53,43)" rx="2" ry="2" />
<text  x="26.60" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (11 samples, 0.02%)</title><rect x="169.4" y="133" width="0.3" height="15.0" fill="rgb(229,20,7)" rx="2" ry="2" />
<text  x="172.40" y="143.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (12 samples, 0.02%)</title><rect x="1141.2" y="469" width="0.3" height="15.0" fill="rgb(250,7,29)" rx="2" ry="2" />
<text  x="1144.17" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="905.5" y="357" width="0.1" height="15.0" fill="rgb(241,167,17)" rx="2" ry="2" />
<text  x="908.46" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (25 samples, 0.05%)</title><rect x="946.1" y="373" width="0.7" height="15.0" fill="rgb(213,1,10)" rx="2" ry="2" />
<text  x="949.14" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (17 samples, 0.04%)</title><rect x="617.9" y="389" width="0.5" height="15.0" fill="rgb(244,120,53)" rx="2" ry="2" />
<text  x="620.95" y="399.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (8 samples, 0.02%)</title><rect x="568.6" y="341" width="0.2" height="15.0" fill="rgb(215,39,5)" rx="2" ry="2" />
<text  x="571.57" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.02%)</title><rect x="572.9" y="325" width="0.3" height="15.0" fill="rgb(215,79,18)" rx="2" ry="2" />
<text  x="575.87" y="335.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (37 samples, 0.08%)</title><rect x="834.5" y="437" width="0.9" height="15.0" fill="rgb(233,214,5)" rx="2" ry="2" />
<text  x="837.48" y="447.5" ></text>
</g>
<g >
<title>schema_registry::get (198 samples, 0.41%)</title><rect x="973.3" y="357" width="4.8" height="15.0" fill="rgb(247,43,44)" rx="2" ry="2" />
<text  x="976.29" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::stats (22 samples, 0.05%)</title><rect x="492.5" y="245" width="0.6" height="15.0" fill="rgb(235,37,32)" rx="2" ry="2" />
<text  x="495.51" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="711.2" y="469" width="0.2" height="15.0" fill="rgb(251,71,28)" rx="2" ry="2" />
<text  x="714.20" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="56.1" y="437" width="0.1" height="15.0" fill="rgb(232,98,43)" rx="2" ry="2" />
<text  x="59.08" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (7 samples, 0.01%)</title><rect x="547.9" y="341" width="0.2" height="15.0" fill="rgb(227,159,34)" rx="2" ry="2" />
<text  x="550.89" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (31 samples, 0.06%)</title><rect x="1033.4" y="213" width="0.8" height="15.0" fill="rgb(208,183,28)" rx="2" ry="2" />
<text  x="1036.44" y="223.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (57 samples, 0.12%)</title><rect x="856.8" y="469" width="1.4" height="15.0" fill="rgb(231,22,39)" rx="2" ry="2" />
<text  x="859.77" y="479.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (5 samples, 0.01%)</title><rect x="932.8" y="405" width="0.1" height="15.0" fill="rgb(219,169,44)" rx="2" ry="2" />
<text  x="935.76" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (12 samples, 0.02%)</title><rect x="913.5" y="341" width="0.3" height="15.0" fill="rgb(227,212,52)" rx="2" ry="2" />
<text  x="916.47" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (5 samples, 0.01%)</title><rect x="18.8" y="261" width="0.1" height="15.0" fill="rgb(252,150,24)" rx="2" ry="2" />
<text  x="21.79" y="271.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (22 samples, 0.05%)</title><rect x="1060.5" y="325" width="0.6" height="15.0" fill="rgb(213,173,0)" rx="2" ry="2" />
<text  x="1063.54" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (135 samples, 0.28%)</title><rect x="1074.0" y="309" width="3.3" height="15.0" fill="rgb(234,151,19)" rx="2" ry="2" />
<text  x="1076.97" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="853.9" y="453" width="0.4" height="15.0" fill="rgb(224,111,8)" rx="2" ry="2" />
<text  x="856.87" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (15 samples, 0.03%)</title><rect x="92.6" y="437" width="0.4" height="15.0" fill="rgb(235,49,43)" rx="2" ry="2" />
<text  x="95.63" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (21 samples, 0.04%)</title><rect x="576.9" y="421" width="0.5" height="15.0" fill="rgb(226,173,40)" rx="2" ry="2" />
<text  x="579.93" y="431.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="406.5" y="293" width="0.7" height="15.0" fill="rgb(252,148,29)" rx="2" ry="2" />
<text  x="409.49" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (19 samples, 0.04%)</title><rect x="868.1" y="453" width="0.5" height="15.0" fill="rgb(217,160,9)" rx="2" ry="2" />
<text  x="871.10" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="1068.2" y="325" width="0.1" height="15.0" fill="rgb(207,82,46)" rx="2" ry="2" />
<text  x="1071.21" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,913 samples, 10.17%)</title><rect x="290.9" y="373" width="119.9" height="15.0" fill="rgb(230,6,14)" rx="2" ry="2" />
<text  x="293.87" y="383.5" >flat_mutation_..</text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (48 samples, 0.10%)</title><rect x="1135.5" y="389" width="1.2" height="15.0" fill="rgb(251,109,28)" rx="2" ry="2" />
<text  x="1138.52" y="399.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="655.9" y="437" width="0.4" height="15.0" fill="rgb(238,162,11)" rx="2" ry="2" />
<text  x="658.92" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (171 samples, 0.35%)</title><rect x="10.2" y="613" width="4.1" height="15.0" fill="rgb(244,31,18)" rx="2" ry="2" />
<text  x="13.17" y="623.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="1040.1" y="261" width="0.6" height="15.0" fill="rgb(233,42,30)" rx="2" ry="2" />
<text  x="1043.13" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (12 samples, 0.02%)</title><rect x="763.6" y="357" width="0.3" height="15.0" fill="rgb(221,213,3)" rx="2" ry="2" />
<text  x="766.60" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (33 samples, 0.07%)</title><rect x="684.3" y="453" width="0.8" height="15.0" fill="rgb(220,63,25)" rx="2" ry="2" />
<text  x="687.34" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (103 samples, 0.21%)</title><rect x="914.5" y="357" width="2.5" height="15.0" fill="rgb(247,56,44)" rx="2" ry="2" />
<text  x="917.47" y="367.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (16 samples, 0.03%)</title><rect x="548.1" y="341" width="0.4" height="15.0" fill="rgb(209,123,24)" rx="2" ry="2" />
<text  x="551.06" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="491.5" y="261" width="0.1" height="15.0" fill="rgb(214,65,46)" rx="2" ry="2" />
<text  x="494.49" y="271.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.01%)</title><rect x="21.4" y="421" width="0.1" height="15.0" fill="rgb(247,22,26)" rx="2" ry="2" />
<text  x="24.40" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (18 samples, 0.04%)</title><rect x="440.0" y="293" width="0.5" height="15.0" fill="rgb(251,133,41)" rx="2" ry="2" />
<text  x="443.04" y="303.5" ></text>
</g>
<g >
<title>operator delete (63 samples, 0.13%)</title><rect x="569.0" y="357" width="1.5" height="15.0" fill="rgb(225,202,9)" rx="2" ry="2" />
<text  x="571.97" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.02%)</title><rect x="778.0" y="245" width="0.2" height="15.0" fill="rgb(225,222,47)" rx="2" ry="2" />
<text  x="780.95" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%)</title><rect x="51.4" y="469" width="0.1" height="15.0" fill="rgb(226,20,52)" rx="2" ry="2" />
<text  x="54.41" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (78 samples, 0.16%)</title><rect x="648.0" y="469" width="1.9" height="15.0" fill="rgb(221,153,50)" rx="2" ry="2" />
<text  x="650.96" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1160.7" y="357" width="0.5" height="15.0" fill="rgb(232,49,30)" rx="2" ry="2" />
<text  x="1163.65" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (20 samples, 0.04%)</title><rect x="416.3" y="421" width="0.5" height="15.0" fill="rgb(206,29,10)" rx="2" ry="2" />
<text  x="419.28" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (20 samples, 0.04%)</title><rect x="908.2" y="325" width="0.5" height="15.0" fill="rgb(245,38,45)" rx="2" ry="2" />
<text  x="911.17" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (7 samples, 0.01%)</title><rect x="1104.1" y="357" width="0.2" height="15.0" fill="rgb(205,170,14)" rx="2" ry="2" />
<text  x="1107.12" y="367.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (9 samples, 0.02%)</title><rect x="197.6" y="85" width="0.3" height="15.0" fill="rgb(223,176,13)" rx="2" ry="2" />
<text  x="200.65" y="95.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="482.0" y="293" width="0.2" height="15.0" fill="rgb(236,73,8)" rx="2" ry="2" />
<text  x="485.01" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (12 samples, 0.02%)</title><rect x="260.6" y="309" width="0.3" height="15.0" fill="rgb(224,2,10)" rx="2" ry="2" />
<text  x="263.57" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,584 samples, 9.49%)</title><rect x="419.2" y="373" width="112.0" height="15.0" fill="rgb(205,144,54)" rx="2" ry="2" />
<text  x="422.24" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1133.2" y="389" width="0.2" height="15.0" fill="rgb(217,17,42)" rx="2" ry="2" />
<text  x="1136.20" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (44 samples, 0.09%)</title><rect x="1161.6" y="421" width="1.1" height="15.0" fill="rgb(239,88,21)" rx="2" ry="2" />
<text  x="1164.63" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (609 samples, 1.26%)</title><rect x="490.5" y="277" width="14.9" height="15.0" fill="rgb(235,89,17)" rx="2" ry="2" />
<text  x="493.51" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (17 samples, 0.04%)</title><rect x="1025.5" y="165" width="0.4" height="15.0" fill="rgb(240,150,23)" rx="2" ry="2" />
<text  x="1028.47" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="964.9" y="373" width="0.2" height="15.0" fill="rgb(238,53,36)" rx="2" ry="2" />
<text  x="967.94" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (28 samples, 0.06%)</title><rect x="528.9" y="341" width="0.7" height="15.0" fill="rgb(232,153,41)" rx="2" ry="2" />
<text  x="531.87" y="351.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="512.2" y="325" width="0.6" height="15.0" fill="rgb(230,11,16)" rx="2" ry="2" />
<text  x="515.24" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (9 samples, 0.02%)</title><rect x="1024.5" y="197" width="0.2" height="15.0" fill="rgb(215,157,7)" rx="2" ry="2" />
<text  x="1027.52" y="207.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (27 samples, 0.06%)</title><rect x="39.1" y="453" width="0.6" height="15.0" fill="rgb(221,178,47)" rx="2" ry="2" />
<text  x="42.08" y="463.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (78 samples, 0.16%)</title><rect x="12.4" y="581" width="1.9" height="15.0" fill="rgb(247,106,25)" rx="2" ry="2" />
<text  x="15.44" y="591.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (203 samples, 0.42%)</title><rect x="15.5" y="437" width="4.9" height="15.0" fill="rgb(237,16,21)" rx="2" ry="2" />
<text  x="18.47" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="923.9" y="389" width="0.4" height="15.0" fill="rgb(248,2,13)" rx="2" ry="2" />
<text  x="926.95" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (76 samples, 0.16%)</title><rect x="807.6" y="325" width="1.8" height="15.0" fill="rgb(243,68,10)" rx="2" ry="2" />
<text  x="810.57" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (8 samples, 0.02%)</title><rect x="959.4" y="389" width="0.2" height="15.0" fill="rgb(215,116,47)" rx="2" ry="2" />
<text  x="962.43" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (15 samples, 0.03%)</title><rect x="479.6" y="325" width="0.4" height="15.0" fill="rgb(218,165,27)" rx="2" ry="2" />
<text  x="482.65" y="335.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (12 samples, 0.02%)</title><rect x="554.9" y="293" width="0.3" height="15.0" fill="rgb(230,165,6)" rx="2" ry="2" />
<text  x="557.88" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (128 samples, 0.26%)</title><rect x="177.5" y="101" width="3.1" height="15.0" fill="rgb(222,38,28)" rx="2" ry="2" />
<text  x="180.50" y="111.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (8 samples, 0.02%)</title><rect x="328.9" y="181" width="0.2" height="15.0" fill="rgb(238,133,47)" rx="2" ry="2" />
<text  x="331.92" y="191.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (295 samples, 0.61%)</title><rect x="1082.1" y="261" width="7.3" height="15.0" fill="rgb(221,173,11)" rx="2" ry="2" />
<text  x="1085.15" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (53 samples, 0.11%)</title><rect x="1021.2" y="213" width="1.3" height="15.0" fill="rgb(246,207,1)" rx="2" ry="2" />
<text  x="1024.20" y="223.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (5 samples, 0.01%)</title><rect x="829.2" y="421" width="0.1" height="15.0" fill="rgb(214,224,44)" rx="2" ry="2" />
<text  x="832.21" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (5 samples, 0.01%)</title><rect x="981.8" y="341" width="0.2" height="15.0" fill="rgb(227,18,36)" rx="2" ry="2" />
<text  x="984.84" y="351.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="662.8" y="469" width="0.4" height="15.0" fill="rgb(207,188,28)" rx="2" ry="2" />
<text  x="665.83" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (19 samples, 0.04%)</title><rect x="60.1" y="421" width="0.5" height="15.0" fill="rgb(227,22,31)" rx="2" ry="2" />
<text  x="63.10" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1030.6" y="149" width="0.1" height="15.0" fill="rgb(223,43,35)" rx="2" ry="2" />
<text  x="1033.55" y="159.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (207 samples, 0.43%)</title><rect x="133.8" y="261" width="5.1" height="15.0" fill="rgb(223,100,11)" rx="2" ry="2" />
<text  x="136.80" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="618.9" y="437" width="0.1" height="15.0" fill="rgb(225,180,45)" rx="2" ry="2" />
<text  x="621.90" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="917.1" y="373" width="0.2" height="15.0" fill="rgb(235,180,48)" rx="2" ry="2" />
<text  x="920.06" y="383.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="478.1" y="213" width="0.5" height="15.0" fill="rgb(240,178,5)" rx="2" ry="2" />
<text  x="481.08" y="223.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (453 samples, 0.94%)</title><rect x="30.4" y="501" width="11.1" height="15.0" fill="rgb(253,49,42)" rx="2" ry="2" />
<text  x="33.44" y="511.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (11 samples, 0.02%)</title><rect x="232.2" y="245" width="0.3" height="15.0" fill="rgb(237,92,11)" rx="2" ry="2" />
<text  x="235.20" y="255.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (7 samples, 0.01%)</title><rect x="953.4" y="389" width="0.1" height="15.0" fill="rgb(242,199,32)" rx="2" ry="2" />
<text  x="956.37" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (322 samples, 0.67%)</title><rect x="493.9" y="245" width="7.9" height="15.0" fill="rgb(251,23,48)" rx="2" ry="2" />
<text  x="496.93" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.05%)</title><rect x="228.2" y="197" width="0.6" height="15.0" fill="rgb(230,80,27)" rx="2" ry="2" />
<text  x="231.19" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="663.1" y="453" width="0.1" height="15.0" fill="rgb(209,19,1)" rx="2" ry="2" />
<text  x="666.09" y="463.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (6 samples, 0.01%)</title><rect x="61.3" y="453" width="0.1" height="15.0" fill="rgb(215,161,41)" rx="2" ry="2" />
<text  x="64.28" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1142.4" y="373" width="0.8" height="15.0" fill="rgb(218,179,9)" rx="2" ry="2" />
<text  x="1145.41" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (68 samples, 0.14%)</title><rect x="364.7" y="197" width="1.7" height="15.0" fill="rgb(242,76,42)" rx="2" ry="2" />
<text  x="367.71" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (24 samples, 0.05%)</title><rect x="269.8" y="341" width="0.5" height="15.0" fill="rgb(214,84,33)" rx="2" ry="2" />
<text  x="272.75" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (32 samples, 0.07%)</title><rect x="1107.1" y="389" width="0.8" height="15.0" fill="rgb(237,53,29)" rx="2" ry="2" />
<text  x="1110.08" y="399.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (14 samples, 0.03%)</title><rect x="331.0" y="181" width="0.3" height="15.0" fill="rgb(248,114,13)" rx="2" ry="2" />
<text  x="333.99" y="191.5" ></text>
</g>
</g>
</svg>
