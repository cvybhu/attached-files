<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (33 samples, 0.07%)</title><rect x="609.8" y="405" width="0.8" height="15.0" fill="rgb(244,58,48)" rx="2" ry="2" />
<text  x="612.75" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (6 samples, 0.01%)</title><rect x="460.1" y="277" width="0.2" height="15.0" fill="rgb(213,120,4)" rx="2" ry="2" />
<text  x="463.12" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="724.6" y="501" width="0.2" height="15.0" fill="rgb(248,26,15)" rx="2" ry="2" />
<text  x="727.64" y="511.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="608.8" y="405" width="0.1" height="15.0" fill="rgb(216,225,34)" rx="2" ry="2" />
<text  x="611.82" y="415.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (4 samples, 0.01%)</title><rect x="128.0" y="277" width="0.1" height="15.0" fill="rgb(224,141,17)" rx="2" ry="2" />
<text  x="130.98" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (21 samples, 0.04%)</title><rect x="610.6" y="437" width="0.5" height="15.0" fill="rgb(229,227,34)" rx="2" ry="2" />
<text  x="613.58" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,887 samples, 12.52%)</title><rect x="121.7" y="325" width="147.7" height="15.0" fill="rgb(219,140,3)" rx="2" ry="2" />
<text  x="124.68" y="335.5" >mutation_reader_me..</text>
</g>
<g >
<title>query_result_builder::consume (1,745 samples, 3.71%)</title><rect x="330.6" y="213" width="43.8" height="15.0" fill="rgb(237,153,46)" rx="2" ry="2" />
<text  x="333.57" y="223.5" >quer..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="18.9" y="261" width="0.2" height="15.0" fill="rgb(247,71,53)" rx="2" ry="2" />
<text  x="21.94" y="271.5" ></text>
</g>
<g >
<title>malloc (20 samples, 0.04%)</title><rect x="605.8" y="373" width="0.5" height="15.0" fill="rgb(229,181,31)" rx="2" ry="2" />
<text  x="608.81" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="1075.3" y="293" width="0.1" height="15.0" fill="rgb(206,210,8)" rx="2" ry="2" />
<text  x="1078.26" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="41.3" y="437" width="0.3" height="15.0" fill="rgb(252,214,44)" rx="2" ry="2" />
<text  x="44.33" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (40 samples, 0.09%)</title><rect x="682.1" y="453" width="1.0" height="15.0" fill="rgb(238,10,24)" rx="2" ry="2" />
<text  x="685.07" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="690.3" y="453" width="0.3" height="15.0" fill="rgb(253,118,0)" rx="2" ry="2" />
<text  x="693.30" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (6 samples, 0.01%)</title><rect x="1176.1" y="421" width="0.2" height="15.0" fill="rgb(214,11,25)" rx="2" ry="2" />
<text  x="1179.12" y="431.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="1046.6" y="277" width="0.4" height="15.0" fill="rgb(240,52,31)" rx="2" ry="2" />
<text  x="1049.62" y="287.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (6 samples, 0.01%)</title><rect x="858.5" y="373" width="0.1" height="15.0" fill="rgb(213,10,37)" rx="2" ry="2" />
<text  x="861.46" y="383.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (43 samples, 0.09%)</title><rect x="1139.3" y="485" width="1.1" height="15.0" fill="rgb(235,225,43)" rx="2" ry="2" />
<text  x="1142.29" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="897.3" y="405" width="0.1" height="15.0" fill="rgb(229,216,39)" rx="2" ry="2" />
<text  x="900.29" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (12 samples, 0.03%)</title><rect x="342.5" y="181" width="0.3" height="15.0" fill="rgb(246,224,34)" rx="2" ry="2" />
<text  x="345.52" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (42 samples, 0.09%)</title><rect x="776.5" y="325" width="1.0" height="15.0" fill="rgb(225,49,19)" rx="2" ry="2" />
<text  x="779.48" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (22 samples, 0.05%)</title><rect x="880.4" y="469" width="0.6" height="15.0" fill="rgb(241,6,10)" rx="2" ry="2" />
<text  x="883.42" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (5 samples, 0.01%)</title><rect x="615.1" y="437" width="0.1" height="15.0" fill="rgb(251,36,12)" rx="2" ry="2" />
<text  x="618.12" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (4 samples, 0.01%)</title><rect x="21.8" y="357" width="0.1" height="15.0" fill="rgb(209,54,44)" rx="2" ry="2" />
<text  x="24.77" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="777.7" y="357" width="0.1" height="15.0" fill="rgb(215,166,27)" rx="2" ry="2" />
<text  x="780.68" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="664.0" y="437" width="0.2" height="15.0" fill="rgb(210,154,36)" rx="2" ry="2" />
<text  x="667.00" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="898.8" y="405" width="0.4" height="15.0" fill="rgb(217,177,47)" rx="2" ry="2" />
<text  x="901.85" y="415.5" ></text>
</g>
<g >
<title>database::find_keyspace (199 samples, 0.42%)</title><rect x="1060.9" y="341" width="5.0" height="15.0" fill="rgb(212,29,18)" rx="2" ry="2" />
<text  x="1063.88" y="351.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (4 samples, 0.01%)</title><rect x="948.1" y="405" width="0.1" height="15.0" fill="rgb(231,43,41)" rx="2" ry="2" />
<text  x="951.10" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (13 samples, 0.03%)</title><rect x="21.7" y="405" width="0.3" height="15.0" fill="rgb(205,7,42)" rx="2" ry="2" />
<text  x="24.67" y="415.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (4 samples, 0.01%)</title><rect x="765.8" y="389" width="0.1" height="15.0" fill="rgb(215,174,10)" rx="2" ry="2" />
<text  x="768.81" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (7 samples, 0.01%)</title><rect x="253.2" y="181" width="0.2" height="15.0" fill="rgb(227,29,46)" rx="2" ry="2" />
<text  x="256.23" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (314 samples, 0.67%)</title><rect x="405.6" y="245" width="7.9" height="15.0" fill="rgb(241,183,26)" rx="2" ry="2" />
<text  x="408.63" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (616 samples, 1.31%)</title><rect x="1150.8" y="485" width="15.5" height="15.0" fill="rgb(236,127,39)" rx="2" ry="2" />
<text  x="1153.79" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="295.4" y="373" width="0.1" height="15.0" fill="rgb(207,43,29)" rx="2" ry="2" />
<text  x="298.40" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="792.8" y="293" width="0.6" height="15.0" fill="rgb(239,167,15)" rx="2" ry="2" />
<text  x="795.82" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (6 samples, 0.01%)</title><rect x="818.3" y="69" width="0.1" height="15.0" fill="rgb(219,119,26)" rx="2" ry="2" />
<text  x="821.30" y="79.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="631.4" y="389" width="0.4" height="15.0" fill="rgb(230,56,34)" rx="2" ry="2" />
<text  x="634.39" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (40 samples, 0.09%)</title><rect x="702.5" y="437" width="1.0" height="15.0" fill="rgb(244,109,10)" rx="2" ry="2" />
<text  x="705.53" y="447.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="531.4" y="309" width="0.1" height="15.0" fill="rgb(219,224,39)" rx="2" ry="2" />
<text  x="534.36" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%)</title><rect x="862.4" y="389" width="1.2" height="15.0" fill="rgb(227,105,11)" rx="2" ry="2" />
<text  x="865.40" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,750 samples, 3.72%)</title><rect x="1054.8" y="357" width="43.9" height="15.0" fill="rgb(227,141,1)" rx="2" ry="2" />
<text  x="1057.78" y="367.5" >serv..</text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (354 samples, 0.75%)</title><rect x="385.8" y="165" width="8.9" height="15.0" fill="rgb(251,28,10)" rx="2" ry="2" />
<text  x="388.77" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%)</title><rect x="706.9" y="469" width="0.1" height="15.0" fill="rgb(215,8,37)" rx="2" ry="2" />
<text  x="709.87" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (173 samples, 0.37%)</title><rect x="254.7" y="261" width="4.4" height="15.0" fill="rgb(210,57,44)" rx="2" ry="2" />
<text  x="257.72" y="271.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="664.6" y="485" width="0.7" height="15.0" fill="rgb(217,78,6)" rx="2" ry="2" />
<text  x="667.57" y="495.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (23 samples, 0.05%)</title><rect x="176.3" y="133" width="0.6" height="15.0" fill="rgb(219,55,26)" rx="2" ry="2" />
<text  x="179.30" y="143.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (91 samples, 0.19%)</title><rect x="516.0" y="245" width="2.3" height="15.0" fill="rgb(239,60,31)" rx="2" ry="2" />
<text  x="519.00" y="255.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (16 samples, 0.03%)</title><rect x="444.8" y="293" width="0.4" height="15.0" fill="rgb(209,126,5)" rx="2" ry="2" />
<text  x="447.78" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="853.3" y="437" width="0.1" height="15.0" fill="rgb(234,149,27)" rx="2" ry="2" />
<text  x="856.29" y="447.5" ></text>
</g>
<g >
<title>seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;::check (4 samples, 0.01%)</title><rect x="850.3" y="437" width="0.1" height="15.0" fill="rgb(217,33,24)" rx="2" ry="2" />
<text  x="853.25" y="447.5" ></text>
</g>
<g >
<title>auth::resource::resource (52 samples, 0.11%)</title><rect x="783.3" y="373" width="1.3" height="15.0" fill="rgb(233,149,20)" rx="2" ry="2" />
<text  x="786.33" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (14 samples, 0.03%)</title><rect x="303.1" y="293" width="0.4" height="15.0" fill="rgb(244,211,12)" rx="2" ry="2" />
<text  x="306.14" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,346 samples, 7.12%)</title><rect x="315.4" y="229" width="84.0" height="15.0" fill="rgb(209,227,30)" rx="2" ry="2" />
<text  x="318.36" y="239.5" >compact_m..</text>
</g>
<g >
<title>reader_permit::consume_resources (20 samples, 0.04%)</title><rect x="221.8" y="149" width="0.5" height="15.0" fill="rgb(223,28,31)" rx="2" ry="2" />
<text  x="224.78" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%)</title><rect x="452.7" y="293" width="0.2" height="15.0" fill="rgb(241,61,8)" rx="2" ry="2" />
<text  x="455.69" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (5 samples, 0.01%)</title><rect x="81.3" y="453" width="0.1" height="15.0" fill="rgb(214,135,16)" rx="2" ry="2" />
<text  x="84.26" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (11 samples, 0.02%)</title><rect x="321.2" y="165" width="0.3" height="15.0" fill="rgb(232,161,13)" rx="2" ry="2" />
<text  x="324.18" y="175.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (4 samples, 0.01%)</title><rect x="753.2" y="357" width="0.1" height="15.0" fill="rgb(251,147,28)" rx="2" ry="2" />
<text  x="756.21" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="588.2" y="357" width="0.3" height="15.0" fill="rgb(238,45,29)" rx="2" ry="2" />
<text  x="591.19" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (274 samples, 0.58%)</title><rect x="15.9" y="565" width="6.9" height="15.0" fill="rgb(234,41,27)" rx="2" ry="2" />
<text  x="18.87" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (17 samples, 0.04%)</title><rect x="1094.8" y="277" width="0.4" height="15.0" fill="rgb(228,197,9)" rx="2" ry="2" />
<text  x="1097.81" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (15 samples, 0.03%)</title><rect x="612.3" y="437" width="0.4" height="15.0" fill="rgb(244,68,27)" rx="2" ry="2" />
<text  x="615.29" y="447.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (11 samples, 0.02%)</title><rect x="1138.8" y="245" width="0.2" height="15.0" fill="rgb(223,18,42)" rx="2" ry="2" />
<text  x="1141.77" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="646.4" y="469" width="0.2" height="15.0" fill="rgb(226,68,12)" rx="2" ry="2" />
<text  x="649.38" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1028.9" y="181" width="0.2" height="15.0" fill="rgb(217,92,5)" rx="2" ry="2" />
<text  x="1031.87" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (12 samples, 0.03%)</title><rect x="701.5" y="453" width="0.3" height="15.0" fill="rgb(235,78,15)" rx="2" ry="2" />
<text  x="704.47" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (96 samples, 0.20%)</title><rect x="687.6" y="469" width="2.4" height="15.0" fill="rgb(238,227,2)" rx="2" ry="2" />
<text  x="690.59" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (19 samples, 0.04%)</title><rect x="376.5" y="213" width="0.5" height="15.0" fill="rgb(248,202,36)" rx="2" ry="2" />
<text  x="379.51" y="223.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%)</title><rect x="486.6" y="197" width="0.1" height="15.0" fill="rgb(249,225,42)" rx="2" ry="2" />
<text  x="489.63" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (11 samples, 0.02%)</title><rect x="659.2" y="405" width="0.3" height="15.0" fill="rgb(218,166,1)" rx="2" ry="2" />
<text  x="662.18" y="415.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,845 samples, 3.92%)</title><rect x="787.0" y="373" width="46.3" height="15.0" fill="rgb(231,162,16)" rx="2" ry="2" />
<text  x="789.97" y="383.5" >serv..</text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (12 samples, 0.03%)</title><rect x="401.5" y="229" width="0.3" height="15.0" fill="rgb(233,14,15)" rx="2" ry="2" />
<text  x="404.46" y="239.5" ></text>
</g>
<g >
<title>compound_type&lt; (78 samples, 0.17%)</title><rect x="925.6" y="357" width="1.9" height="15.0" fill="rgb(251,145,51)" rx="2" ry="2" />
<text  x="928.55" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (4 samples, 0.01%)</title><rect x="1172.5" y="437" width="0.1" height="15.0" fill="rgb(225,159,40)" rx="2" ry="2" />
<text  x="1175.45" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (94 samples, 0.20%)</title><rect x="319.5" y="181" width="2.3" height="15.0" fill="rgb(252,51,53)" rx="2" ry="2" />
<text  x="322.48" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (28 samples, 0.06%)</title><rect x="672.7" y="437" width="0.7" height="15.0" fill="rgb(221,105,17)" rx="2" ry="2" />
<text  x="675.66" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (39 samples, 0.08%)</title><rect x="1024.4" y="213" width="1.0" height="15.0" fill="rgb(251,186,31)" rx="2" ry="2" />
<text  x="1027.43" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::walking_visitor&lt;row::for_each_cell&lt;(anonymous namespace)::write_row_cells&lt;ser::deletable_row__cells&lt;bytes_ostream&gt; &gt; (4 samples, 0.01%)</title><rect x="1139.9" y="117" width="0.1" height="15.0" fill="rgb(234,51,8)" rx="2" ry="2" />
<text  x="1142.90" y="127.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="425.7" y="373" width="0.1" height="15.0" fill="rgb(209,139,19)" rx="2" ry="2" />
<text  x="428.71" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (4 samples, 0.01%)</title><rect x="258.6" y="213" width="0.1" height="15.0" fill="rgb(225,22,13)" rx="2" ry="2" />
<text  x="261.58" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (6 samples, 0.01%)</title><rect x="269.3" y="309" width="0.1" height="15.0" fill="rgb(221,93,16)" rx="2" ry="2" />
<text  x="272.30" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.06%)</title><rect x="1070.1" y="293" width="0.7" height="15.0" fill="rgb(222,184,48)" rx="2" ry="2" />
<text  x="1073.14" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (25 samples, 0.05%)</title><rect x="502.7" y="277" width="0.7" height="15.0" fill="rgb(205,81,28)" rx="2" ry="2" />
<text  x="505.74" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1004.5" y="309" width="0.1" height="15.0" fill="rgb(205,59,31)" rx="2" ry="2" />
<text  x="1007.50" y="319.5" ></text>
</g>
<g >
<title>partition_entry::read (64 samples, 0.14%)</title><rect x="522.1" y="309" width="1.6" height="15.0" fill="rgb(228,47,23)" rx="2" ry="2" />
<text  x="525.10" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (114 samples, 0.24%)</title><rect x="1038.1" y="229" width="2.8" height="15.0" fill="rgb(217,121,18)" rx="2" ry="2" />
<text  x="1041.09" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="705.5" y="485" width="0.1" height="15.0" fill="rgb(222,15,20)" rx="2" ry="2" />
<text  x="708.51" y="495.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (16 samples, 0.03%)</title><rect x="663.6" y="437" width="0.4" height="15.0" fill="rgb(238,88,0)" rx="2" ry="2" />
<text  x="666.59" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (90 samples, 0.19%)</title><rect x="154.5" y="197" width="2.3" height="15.0" fill="rgb(238,169,5)" rx="2" ry="2" />
<text  x="157.53" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (110 samples, 0.23%)</title><rect x="1127.4" y="405" width="2.8" height="15.0" fill="rgb(212,146,29)" rx="2" ry="2" />
<text  x="1130.42" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="538.5" y="261" width="0.1" height="15.0" fill="rgb(254,177,25)" rx="2" ry="2" />
<text  x="541.49" y="271.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered&lt;clustering_row&gt; (5 samples, 0.01%)</title><rect x="23.0" y="437" width="0.1" height="15.0" fill="rgb(231,177,0)" rx="2" ry="2" />
<text  x="25.98" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="1053.4" y="293" width="0.2" height="15.0" fill="rgb(251,176,17)" rx="2" ry="2" />
<text  x="1056.42" y="303.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="512.7" y="197" width="0.8" height="15.0" fill="rgb(227,179,6)" rx="2" ry="2" />
<text  x="515.73" y="207.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="615.6" y="421" width="0.7" height="15.0" fill="rgb(234,93,48)" rx="2" ry="2" />
<text  x="618.55" y="431.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (7 samples, 0.01%)</title><rect x="737.5" y="405" width="0.1" height="15.0" fill="rgb(211,69,30)" rx="2" ry="2" />
<text  x="740.47" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="670.9" y="469" width="0.3" height="15.0" fill="rgb(214,149,30)" rx="2" ry="2" />
<text  x="673.95" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (12 samples, 0.03%)</title><rect x="22.2" y="485" width="0.3" height="15.0" fill="rgb(229,58,9)" rx="2" ry="2" />
<text  x="25.20" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="1006.7" y="293" width="0.1" height="15.0" fill="rgb(250,137,49)" rx="2" ry="2" />
<text  x="1009.66" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (100 samples, 0.21%)</title><rect x="729.5" y="469" width="2.5" height="15.0" fill="rgb(207,9,31)" rx="2" ry="2" />
<text  x="732.51" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (43 samples, 0.09%)</title><rect x="832.1" y="309" width="1.1" height="15.0" fill="rgb(226,221,50)" rx="2" ry="2" />
<text  x="835.13" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1138.5" y="357" width="0.8" height="15.0" fill="rgb(241,184,16)" rx="2" ry="2" />
<text  x="1141.52" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (61 samples, 0.13%)</title><rect x="251.9" y="197" width="1.5" height="15.0" fill="rgb(251,185,40)" rx="2" ry="2" />
<text  x="254.88" y="207.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="18.5" y="309" width="0.1" height="15.0" fill="rgb(239,141,25)" rx="2" ry="2" />
<text  x="21.46" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="806.4" y="181" width="0.1" height="15.0" fill="rgb(210,176,37)" rx="2" ry="2" />
<text  x="809.40" y="191.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (7 samples, 0.01%)</title><rect x="960.6" y="405" width="0.1" height="15.0" fill="rgb(208,168,12)" rx="2" ry="2" />
<text  x="963.57" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1067.8" y="341" width="0.3" height="15.0" fill="rgb(228,181,34)" rx="2" ry="2" />
<text  x="1070.78" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (64 samples, 0.14%)</title><rect x="76.2" y="389" width="1.6" height="15.0" fill="rgb(252,53,30)" rx="2" ry="2" />
<text  x="79.19" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1138.5" y="373" width="0.8" height="15.0" fill="rgb(240,208,22)" rx="2" ry="2" />
<text  x="1141.52" y="383.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,476 samples, 3.14%)</title><rect x="174.9" y="165" width="37.1" height="15.0" fill="rgb(217,88,40)" rx="2" ry="2" />
<text  x="177.92" y="175.5" >clu..</text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (4 samples, 0.01%)</title><rect x="985.3" y="357" width="0.1" height="15.0" fill="rgb(221,171,25)" rx="2" ry="2" />
<text  x="988.35" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (7 samples, 0.01%)</title><rect x="220.5" y="133" width="0.1" height="15.0" fill="rgb(217,155,46)" rx="2" ry="2" />
<text  x="223.45" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="885.9" y="437" width="0.1" height="15.0" fill="rgb(230,85,48)" rx="2" ry="2" />
<text  x="888.89" y="447.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (33 samples, 0.07%)</title><rect x="532.6" y="277" width="0.8" height="15.0" fill="rgb(221,113,35)" rx="2" ry="2" />
<text  x="535.56" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="235.5" y="181" width="0.2" height="15.0" fill="rgb(229,209,14)" rx="2" ry="2" />
<text  x="238.54" y="191.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="19.9" y="245" width="0.1" height="15.0" fill="rgb(236,24,30)" rx="2" ry="2" />
<text  x="22.89" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (5 samples, 0.01%)</title><rect x="19.0" y="197" width="0.1" height="15.0" fill="rgb(215,194,54)" rx="2" ry="2" />
<text  x="21.96" y="207.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (4 samples, 0.01%)</title><rect x="695.1" y="277" width="0.1" height="15.0" fill="rgb(205,126,1)" rx="2" ry="2" />
<text  x="698.15" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (147 samples, 0.31%)</title><rect x="1021.7" y="229" width="3.7" height="15.0" fill="rgb(245,130,16)" rx="2" ry="2" />
<text  x="1024.72" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="302.2" y="293" width="0.2" height="15.0" fill="rgb(249,14,41)" rx="2" ry="2" />
<text  x="305.16" y="303.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (12 samples, 0.03%)</title><rect x="881.5" y="325" width="0.3" height="15.0" fill="rgb(206,68,15)" rx="2" ry="2" />
<text  x="884.48" y="335.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="864.2" y="405" width="0.3" height="15.0" fill="rgb(215,132,35)" rx="2" ry="2" />
<text  x="867.23" y="415.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (106 samples, 0.23%)</title><rect x="758.8" y="309" width="2.6" height="15.0" fill="rgb(212,10,3)" rx="2" ry="2" />
<text  x="761.78" y="319.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (5 samples, 0.01%)</title><rect x="527.0" y="341" width="0.1" height="15.0" fill="rgb(242,74,21)" rx="2" ry="2" />
<text  x="529.99" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (5 samples, 0.01%)</title><rect x="836.4" y="389" width="0.1" height="15.0" fill="rgb(205,224,19)" rx="2" ry="2" />
<text  x="839.37" y="399.5" ></text>
</g>
<g >
<title>[unknown] (524 samples, 1.11%)</title><rect x="10.0" y="629" width="13.2" height="15.0" fill="rgb(206,135,15)" rx="2" ry="2" />
<text  x="13.03" y="639.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,424 samples, 5.16%)</title><rect x="169.0" y="213" width="60.9" height="15.0" fill="rgb(224,138,18)" rx="2" ry="2" />
<text  x="172.04" y="223.5" >logall..</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="10.1" y="581" width="0.2" height="15.0" fill="rgb(245,65,15)" rx="2" ry="2" />
<text  x="13.13" y="591.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (4 samples, 0.01%)</title><rect x="695.5" y="293" width="0.1" height="15.0" fill="rgb(241,179,36)" rx="2" ry="2" />
<text  x="698.50" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (7 samples, 0.01%)</title><rect x="272.1" y="341" width="0.1" height="15.0" fill="rgb(235,86,0)" rx="2" ry="2" />
<text  x="275.06" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (12 samples, 0.03%)</title><rect x="329.5" y="197" width="0.3" height="15.0" fill="rgb(237,76,17)" rx="2" ry="2" />
<text  x="332.49" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="695.0" y="405" width="0.9" height="15.0" fill="rgb(236,150,33)" rx="2" ry="2" />
<text  x="698.00" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (24 samples, 0.05%)</title><rect x="1149.0" y="469" width="0.6" height="15.0" fill="rgb(227,164,48)" rx="2" ry="2" />
<text  x="1152.03" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="229.8" y="197" width="0.1" height="15.0" fill="rgb(242,91,13)" rx="2" ry="2" />
<text  x="232.76" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (4 samples, 0.01%)</title><rect x="21.8" y="325" width="0.1" height="15.0" fill="rgb(207,91,26)" rx="2" ry="2" />
<text  x="24.77" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="776.2" y="341" width="0.1" height="15.0" fill="rgb(235,40,36)" rx="2" ry="2" />
<text  x="779.23" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (9 samples, 0.02%)</title><rect x="640.7" y="485" width="0.3" height="15.0" fill="rgb(211,192,43)" rx="2" ry="2" />
<text  x="643.73" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="704.3" y="453" width="0.2" height="15.0" fill="rgb(218,21,47)" rx="2" ry="2" />
<text  x="707.33" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (155 samples, 0.33%)</title><rect x="814.8" y="165" width="3.8" height="15.0" fill="rgb(237,40,37)" rx="2" ry="2" />
<text  x="817.76" y="175.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%)</title><rect x="1139.9" y="165" width="0.1" height="15.0" fill="rgb(250,194,21)" rx="2" ry="2" />
<text  x="1142.87" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (45 samples, 0.10%)</title><rect x="411.9" y="213" width="1.1" height="15.0" fill="rgb(221,27,4)" rx="2" ry="2" />
<text  x="414.85" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%)</title><rect x="525.5" y="325" width="0.2" height="15.0" fill="rgb(217,77,34)" rx="2" ry="2" />
<text  x="528.49" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (25 samples, 0.05%)</title><rect x="649.4" y="485" width="0.6" height="15.0" fill="rgb(224,75,40)" rx="2" ry="2" />
<text  x="652.39" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (442 samples, 0.94%)</title><rect x="153.2" y="245" width="11.0" height="15.0" fill="rgb(226,78,21)" rx="2" ry="2" />
<text  x="156.15" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (14 samples, 0.03%)</title><rect x="34.2" y="485" width="0.4" height="15.0" fill="rgb(245,212,23)" rx="2" ry="2" />
<text  x="37.22" y="495.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (276 samples, 0.59%)</title><rect x="484.7" y="229" width="6.9" height="15.0" fill="rgb(205,37,54)" rx="2" ry="2" />
<text  x="487.72" y="239.5" ></text>
</g>
<g >
<title>table::make_reader (4,264 samples, 9.07%)</title><rect x="435.3" y="357" width="107.0" height="15.0" fill="rgb(206,1,19)" rx="2" ry="2" />
<text  x="438.30" y="367.5" >table::make_r..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (7 samples, 0.01%)</title><rect x="503.4" y="277" width="0.1" height="15.0" fill="rgb(216,86,51)" rx="2" ry="2" />
<text  x="506.37" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.01%)</title><rect x="694.4" y="485" width="0.1" height="15.0" fill="rgb(242,227,12)" rx="2" ry="2" />
<text  x="697.39" y="495.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (14 samples, 0.03%)</title><rect x="1177.5" y="469" width="0.4" height="15.0" fill="rgb(247,137,34)" rx="2" ry="2" />
<text  x="1180.50" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (49 samples, 0.10%)</title><rect x="1134.4" y="421" width="1.3" height="15.0" fill="rgb(232,135,21)" rx="2" ry="2" />
<text  x="1137.43" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="880.5" y="357" width="0.2" height="15.0" fill="rgb(231,106,11)" rx="2" ry="2" />
<text  x="883.55" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (22 samples, 0.05%)</title><rect x="1051.9" y="229" width="0.6" height="15.0" fill="rgb(220,15,26)" rx="2" ry="2" />
<text  x="1054.92" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (146 samples, 0.31%)</title><rect x="644.0" y="501" width="3.7" height="15.0" fill="rgb(212,105,39)" rx="2" ry="2" />
<text  x="647.04" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%)</title><rect x="1125.3" y="389" width="2.0" height="15.0" fill="rgb(225,182,23)" rx="2" ry="2" />
<text  x="1128.34" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="236.4" y="213" width="0.3" height="15.0" fill="rgb(206,137,14)" rx="2" ry="2" />
<text  x="239.37" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (7 samples, 0.01%)</title><rect x="1033.3" y="133" width="0.2" height="15.0" fill="rgb(253,219,27)" rx="2" ry="2" />
<text  x="1036.32" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="144.5" y="277" width="0.2" height="15.0" fill="rgb(240,130,3)" rx="2" ry="2" />
<text  x="147.54" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="566.9" y="261" width="0.2" height="15.0" fill="rgb(209,227,20)" rx="2" ry="2" />
<text  x="569.93" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%)</title><rect x="1138.5" y="453" width="0.8" height="15.0" fill="rgb(215,111,54)" rx="2" ry="2" />
<text  x="1141.49" y="463.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (4 samples, 0.01%)</title><rect x="903.8" y="309" width="0.1" height="15.0" fill="rgb(218,38,4)" rx="2" ry="2" />
<text  x="906.79" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (4 samples, 0.01%)</title><rect x="705.4" y="469" width="0.1" height="15.0" fill="rgb(236,38,17)" rx="2" ry="2" />
<text  x="708.41" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (34 samples, 0.07%)</title><rect x="997.8" y="277" width="0.9" height="15.0" fill="rgb(252,188,25)" rx="2" ry="2" />
<text  x="1000.82" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (258 samples, 0.55%)</title><rect x="16.0" y="501" width="6.5" height="15.0" fill="rgb(215,129,48)" rx="2" ry="2" />
<text  x="19.05" y="511.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="761.7" y="405" width="0.2" height="15.0" fill="rgb(230,160,2)" rx="2" ry="2" />
<text  x="764.74" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (30 samples, 0.06%)</title><rect x="793.6" y="293" width="0.8" height="15.0" fill="rgb(230,114,20)" rx="2" ry="2" />
<text  x="796.62" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="576.4" y="293" width="0.1" height="15.0" fill="rgb(240,90,40)" rx="2" ry="2" />
<text  x="579.44" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="490.0" y="181" width="0.2" height="15.0" fill="rgb(245,120,20)" rx="2" ry="2" />
<text  x="492.97" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="440.1" y="341" width="0.2" height="15.0" fill="rgb(222,166,34)" rx="2" ry="2" />
<text  x="443.07" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (21 samples, 0.04%)</title><rect x="417.9" y="229" width="0.6" height="15.0" fill="rgb(222,126,36)" rx="2" ry="2" />
<text  x="420.93" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (17 samples, 0.04%)</title><rect x="607.3" y="437" width="0.5" height="15.0" fill="rgb(245,97,16)" rx="2" ry="2" />
<text  x="610.34" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (16 samples, 0.03%)</title><rect x="739.6" y="309" width="0.4" height="15.0" fill="rgb(220,128,27)" rx="2" ry="2" />
<text  x="742.55" y="319.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (69 samples, 0.15%)</title><rect x="304.1" y="277" width="1.7" height="15.0" fill="rgb(254,141,40)" rx="2" ry="2" />
<text  x="307.09" y="287.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (5 samples, 0.01%)</title><rect x="95.8" y="437" width="0.1" height="15.0" fill="rgb(237,36,54)" rx="2" ry="2" />
<text  x="98.80" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="459.9" y="277" width="0.2" height="15.0" fill="rgb(244,180,42)" rx="2" ry="2" />
<text  x="462.87" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%)</title><rect x="324.8" y="165" width="0.3" height="15.0" fill="rgb(217,25,42)" rx="2" ry="2" />
<text  x="327.85" y="175.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (4 samples, 0.01%)</title><rect x="1178.0" y="629" width="0.1" height="15.0" fill="rgb(235,221,54)" rx="2" ry="2" />
<text  x="1181.03" y="639.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (12 samples, 0.03%)</title><rect x="1077.0" y="325" width="0.3" height="15.0" fill="rgb(239,219,19)" rx="2" ry="2" />
<text  x="1080.04" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="292.0" y="325" width="0.3" height="15.0" fill="rgb(222,81,1)" rx="2" ry="2" />
<text  x="295.04" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (47 samples, 0.10%)</title><rect x="540.8" y="341" width="1.2" height="15.0" fill="rgb(248,153,34)" rx="2" ry="2" />
<text  x="543.80" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (9 samples, 0.02%)</title><rect x="1011.7" y="261" width="0.3" height="15.0" fill="rgb(238,45,14)" rx="2" ry="2" />
<text  x="1014.73" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume (9 samples, 0.02%)</title><rect x="695.3" y="293" width="0.2" height="15.0" fill="rgb(207,220,35)" rx="2" ry="2" />
<text  x="698.27" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (46 samples, 0.10%)</title><rect x="282.4" y="293" width="1.1" height="15.0" fill="rgb(244,2,27)" rx="2" ry="2" />
<text  x="285.38" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (48 samples, 0.10%)</title><rect x="1151.8" y="453" width="1.3" height="15.0" fill="rgb(228,101,49)" rx="2" ry="2" />
<text  x="1154.85" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="1123.0" y="405" width="0.3" height="15.0" fill="rgb(245,9,0)" rx="2" ry="2" />
<text  x="1126.00" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (5 samples, 0.01%)</title><rect x="1162.5" y="469" width="0.1" height="15.0" fill="rgb(230,162,6)" rx="2" ry="2" />
<text  x="1165.46" y="479.5" ></text>
</g>
<g >
<title>sstring_hash::operator (4 samples, 0.01%)</title><rect x="1065.0" y="309" width="0.1" height="15.0" fill="rgb(241,53,3)" rx="2" ry="2" />
<text  x="1068.04" y="319.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (7 samples, 0.01%)</title><rect x="1034.8" y="165" width="0.2" height="15.0" fill="rgb(213,173,40)" rx="2" ry="2" />
<text  x="1037.80" y="175.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (15 samples, 0.03%)</title><rect x="1143.1" y="501" width="0.3" height="15.0" fill="rgb(234,147,1)" rx="2" ry="2" />
<text  x="1146.06" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (67 samples, 0.14%)</title><rect x="795.1" y="309" width="1.7" height="15.0" fill="rgb(223,63,51)" rx="2" ry="2" />
<text  x="798.08" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (25 samples, 0.05%)</title><rect x="152.4" y="245" width="0.6" height="15.0" fill="rgb(241,16,8)" rx="2" ry="2" />
<text  x="155.38" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="538.0" y="245" width="0.4" height="15.0" fill="rgb(233,170,7)" rx="2" ry="2" />
<text  x="541.01" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (28 samples, 0.06%)</title><rect x="665.6" y="485" width="0.7" height="15.0" fill="rgb(249,226,8)" rx="2" ry="2" />
<text  x="668.55" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="22.8" y="517" width="0.3" height="15.0" fill="rgb(232,107,5)" rx="2" ry="2" />
<text  x="25.80" y="527.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (4 samples, 0.01%)</title><rect x="20.4" y="309" width="0.1" height="15.0" fill="rgb(205,58,52)" rx="2" ry="2" />
<text  x="23.39" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (4 samples, 0.01%)</title><rect x="623.1" y="405" width="0.1" height="15.0" fill="rgb(244,18,31)" rx="2" ry="2" />
<text  x="626.06" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="1047.9" y="245" width="0.6" height="15.0" fill="rgb(212,127,15)" rx="2" ry="2" />
<text  x="1050.93" y="255.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (73 samples, 0.16%)</title><rect x="423.9" y="373" width="1.8" height="15.0" fill="rgb(209,115,15)" rx="2" ry="2" />
<text  x="426.87" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (4 samples, 0.01%)</title><rect x="916.6" y="357" width="0.1" height="15.0" fill="rgb(224,140,29)" rx="2" ry="2" />
<text  x="919.64" y="367.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,158 samples, 4.59%)</title><rect x="1000.1" y="325" width="54.1" height="15.0" fill="rgb(222,37,37)" rx="2" ry="2" />
<text  x="1003.06" y="335.5" >servi..</text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="948.9" y="357" width="0.6" height="15.0" fill="rgb(206,196,31)" rx="2" ry="2" />
<text  x="951.92" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (32 samples, 0.07%)</title><rect x="723.8" y="501" width="0.8" height="15.0" fill="rgb(232,223,32)" rx="2" ry="2" />
<text  x="726.84" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (249 samples, 0.53%)</title><rect x="135.7" y="261" width="6.3" height="15.0" fill="rgb(251,199,6)" rx="2" ry="2" />
<text  x="138.71" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="578.2" y="373" width="0.1" height="15.0" fill="rgb(241,43,24)" rx="2" ry="2" />
<text  x="581.22" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (4 samples, 0.01%)</title><rect x="50.2" y="485" width="0.1" height="15.0" fill="rgb(207,204,31)" rx="2" ry="2" />
<text  x="53.19" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="568.0" y="293" width="0.2" height="15.0" fill="rgb(231,130,35)" rx="2" ry="2" />
<text  x="570.98" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="1038.4" y="197" width="1.7" height="15.0" fill="rgb(216,187,23)" rx="2" ry="2" />
<text  x="1041.36" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (7 samples, 0.01%)</title><rect x="18.9" y="277" width="0.2" height="15.0" fill="rgb(208,138,17)" rx="2" ry="2" />
<text  x="21.91" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="544.4" y="405" width="0.1" height="15.0" fill="rgb(234,180,13)" rx="2" ry="2" />
<text  x="547.36" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (11 samples, 0.02%)</title><rect x="79.7" y="453" width="0.3" height="15.0" fill="rgb(246,214,26)" rx="2" ry="2" />
<text  x="82.71" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (131 samples, 0.28%)</title><rect x="232.2" y="181" width="3.3" height="15.0" fill="rgb(247,90,16)" rx="2" ry="2" />
<text  x="235.17" y="191.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="679.0" y="469" width="0.4" height="15.0" fill="rgb(247,17,14)" rx="2" ry="2" />
<text  x="682.03" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="933.7" y="389" width="0.3" height="15.0" fill="rgb(229,193,40)" rx="2" ry="2" />
<text  x="936.69" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (9 samples, 0.02%)</title><rect x="846.7" y="421" width="0.2" height="15.0" fill="rgb(250,54,9)" rx="2" ry="2" />
<text  x="849.66" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (15 samples, 0.03%)</title><rect x="329.9" y="213" width="0.4" height="15.0" fill="rgb(233,58,42)" rx="2" ry="2" />
<text  x="332.94" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="461.8" y="309" width="0.6" height="15.0" fill="rgb(251,140,18)" rx="2" ry="2" />
<text  x="464.78" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (4 samples, 0.01%)</title><rect x="229.9" y="213" width="0.1" height="15.0" fill="rgb(244,155,11)" rx="2" ry="2" />
<text  x="232.94" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="987.4" y="357" width="0.1" height="15.0" fill="rgb(208,24,6)" rx="2" ry="2" />
<text  x="990.35" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (4 samples, 0.01%)</title><rect x="1176.2" y="373" width="0.1" height="15.0" fill="rgb(212,204,12)" rx="2" ry="2" />
<text  x="1179.17" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (241 samples, 0.51%)</title><rect x="992.8" y="341" width="6.0" height="15.0" fill="rgb(253,89,5)" rx="2" ry="2" />
<text  x="995.78" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (33 samples, 0.07%)</title><rect x="561.8" y="309" width="0.8" height="15.0" fill="rgb(208,205,50)" rx="2" ry="2" />
<text  x="564.78" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (13 samples, 0.03%)</title><rect x="504.6" y="261" width="0.4" height="15.0" fill="rgb(220,206,33)" rx="2" ry="2" />
<text  x="507.63" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="124.3" y="293" width="0.2" height="15.0" fill="rgb(207,132,44)" rx="2" ry="2" />
<text  x="127.34" y="303.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (6 samples, 0.01%)</title><rect x="528.1" y="341" width="0.1" height="15.0" fill="rgb(237,187,18)" rx="2" ry="2" />
<text  x="531.10" y="351.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (9 samples, 0.02%)</title><rect x="22.2" y="453" width="0.3" height="15.0" fill="rgb(229,107,53)" rx="2" ry="2" />
<text  x="25.22" y="463.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (29 samples, 0.06%)</title><rect x="1138.5" y="325" width="0.7" height="15.0" fill="rgb(218,89,50)" rx="2" ry="2" />
<text  x="1141.52" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="264.8" y="261" width="0.1" height="15.0" fill="rgb(254,115,19)" rx="2" ry="2" />
<text  x="267.81" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="673.1" y="405" width="0.2" height="15.0" fill="rgb(240,53,11)" rx="2" ry="2" />
<text  x="676.13" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="491.3" y="213" width="0.2" height="15.0" fill="rgb(207,222,29)" rx="2" ry="2" />
<text  x="494.27" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (53 samples, 0.11%)</title><rect x="663.0" y="453" width="1.3" height="15.0" fill="rgb(211,190,7)" rx="2" ry="2" />
<text  x="665.99" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (141 samples, 0.30%)</title><rect x="224.6" y="165" width="3.6" height="15.0" fill="rgb(230,225,20)" rx="2" ry="2" />
<text  x="227.64" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="622.1" y="405" width="0.2" height="15.0" fill="rgb(254,153,47)" rx="2" ry="2" />
<text  x="625.08" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,190 samples, 49.33%)</title><rect x="51.3" y="485" width="582.1" height="15.0" fill="rgb(214,96,28)" rx="2" ry="2" />
<text  x="54.27" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="526.2" y="325" width="0.3" height="15.0" fill="rgb(245,216,38)" rx="2" ry="2" />
<text  x="529.19" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (133 samples, 0.28%)</title><rect x="647.7" y="501" width="3.4" height="15.0" fill="rgb(236,124,18)" rx="2" ry="2" />
<text  x="650.73" y="511.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.16%)</title><rect x="1069.0" y="325" width="1.8" height="15.0" fill="rgb(239,117,16)" rx="2" ry="2" />
<text  x="1071.96" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (32 samples, 0.07%)</title><rect x="815.0" y="149" width="0.8" height="15.0" fill="rgb(228,76,43)" rx="2" ry="2" />
<text  x="817.98" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (17 samples, 0.04%)</title><rect x="1139.4" y="309" width="0.4" height="15.0" fill="rgb(240,98,5)" rx="2" ry="2" />
<text  x="1142.37" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (233 samples, 0.50%)</title><rect x="906.0" y="309" width="5.9" height="15.0" fill="rgb(221,72,1)" rx="2" ry="2" />
<text  x="909.03" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="141.1" y="245" width="0.3" height="15.0" fill="rgb(239,214,40)" rx="2" ry="2" />
<text  x="144.11" y="255.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.02%)</title><rect x="22.2" y="437" width="0.3" height="15.0" fill="rgb(249,28,31)" rx="2" ry="2" />
<text  x="25.25" y="447.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="31.7" y="485" width="0.8" height="15.0" fill="rgb(229,23,48)" rx="2" ry="2" />
<text  x="34.66" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="239.9" y="213" width="0.1" height="15.0" fill="rgb(240,27,45)" rx="2" ry="2" />
<text  x="242.86" y="223.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (9 samples, 0.02%)</title><rect x="17.4" y="245" width="0.2" height="15.0" fill="rgb(228,167,27)" rx="2" ry="2" />
<text  x="20.40" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (30 samples, 0.06%)</title><rect x="588.6" y="357" width="0.7" height="15.0" fill="rgb(233,179,30)" rx="2" ry="2" />
<text  x="591.59" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (865 samples, 1.84%)</title><rect x="499.1" y="309" width="21.7" height="15.0" fill="rgb(209,6,8)" rx="2" ry="2" />
<text  x="502.13" y="319.5" >s..</text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (15 samples, 0.03%)</title><rect x="881.5" y="373" width="0.3" height="15.0" fill="rgb(221,118,8)" rx="2" ry="2" />
<text  x="884.45" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (4 samples, 0.01%)</title><rect x="948.5" y="389" width="0.1" height="15.0" fill="rgb(226,48,28)" rx="2" ry="2" />
<text  x="951.55" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="511.2" y="197" width="0.2" height="15.0" fill="rgb(223,126,43)" rx="2" ry="2" />
<text  x="514.20" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (19 samples, 0.04%)</title><rect x="749.9" y="389" width="0.5" height="15.0" fill="rgb(236,226,1)" rx="2" ry="2" />
<text  x="752.89" y="399.5" ></text>
</g>
<g >
<title>create_partitions (274 samples, 0.58%)</title><rect x="15.9" y="533" width="6.9" height="15.0" fill="rgb(243,214,33)" rx="2" ry="2" />
<text  x="18.87" y="543.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (8 samples, 0.02%)</title><rect x="238.7" y="229" width="0.2" height="15.0" fill="rgb(206,25,32)" rx="2" ry="2" />
<text  x="241.73" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (4 samples, 0.01%)</title><rect x="576.1" y="293" width="0.1" height="15.0" fill="rgb(237,126,4)" rx="2" ry="2" />
<text  x="579.14" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="956.8" y="405" width="0.2" height="15.0" fill="rgb(225,69,30)" rx="2" ry="2" />
<text  x="959.78" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (19 samples, 0.04%)</title><rect x="217.5" y="101" width="0.5" height="15.0" fill="rgb(216,144,47)" rx="2" ry="2" />
<text  x="220.51" y="111.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (36 samples, 0.08%)</title><rect x="660.0" y="469" width="0.9" height="15.0" fill="rgb(229,162,28)" rx="2" ry="2" />
<text  x="662.96" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%)</title><rect x="323.2" y="165" width="0.2" height="15.0" fill="rgb(225,6,54)" rx="2" ry="2" />
<text  x="326.22" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (33 samples, 0.07%)</title><rect x="795.9" y="293" width="0.8" height="15.0" fill="rgb(248,79,48)" rx="2" ry="2" />
<text  x="798.88" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="1035.2" y="197" width="0.1" height="15.0" fill="rgb(246,6,15)" rx="2" ry="2" />
<text  x="1038.20" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="519.7" y="277" width="0.4" height="15.0" fill="rgb(211,91,19)" rx="2" ry="2" />
<text  x="522.66" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (4 samples, 0.01%)</title><rect x="758.0" y="293" width="0.1" height="15.0" fill="rgb(214,117,43)" rx="2" ry="2" />
<text  x="761.03" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (474 samples, 1.01%)</title><rect x="479.9" y="293" width="11.9" height="15.0" fill="rgb(235,127,15)" rx="2" ry="2" />
<text  x="482.93" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (8 samples, 0.02%)</title><rect x="267.2" y="277" width="0.2" height="15.0" fill="rgb(236,51,17)" rx="2" ry="2" />
<text  x="270.22" y="287.5" ></text>
</g>
<g >
<title>database::find_column_family (73 samples, 0.16%)</title><rect x="771.1" y="373" width="1.8" height="15.0" fill="rgb(209,214,9)" rx="2" ry="2" />
<text  x="774.10" y="383.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="792.8" y="309" width="0.6" height="15.0" fill="rgb(220,193,50)" rx="2" ry="2" />
<text  x="795.77" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="1069.0" y="309" width="1.8" height="15.0" fill="rgb(209,71,26)" rx="2" ry="2" />
<text  x="1071.99" y="319.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.13%)</title><rect x="872.3" y="437" width="1.4" height="15.0" fill="rgb(237,186,6)" rx="2" ry="2" />
<text  x="875.26" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="805.5" y="229" width="0.1" height="15.0" fill="rgb(239,208,46)" rx="2" ry="2" />
<text  x="808.52" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="886.0" y="469" width="0.1" height="15.0" fill="rgb(244,54,44)" rx="2" ry="2" />
<text  x="889.02" y="479.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (34 samples, 0.07%)</title><rect x="1073.3" y="293" width="0.8" height="15.0" fill="rgb(208,53,1)" rx="2" ry="2" />
<text  x="1076.25" y="303.5" ></text>
</g>
<g >
<title>query::result::builder::build (57 samples, 0.12%)</title><rect x="599.8" y="437" width="1.4" height="15.0" fill="rgb(243,47,50)" rx="2" ry="2" />
<text  x="602.79" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (16 samples, 0.03%)</title><rect x="866.5" y="357" width="0.4" height="15.0" fill="rgb(221,73,37)" rx="2" ry="2" />
<text  x="869.47" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (337 samples, 0.72%)</title><rect x="405.1" y="261" width="8.5" height="15.0" fill="rgb(225,176,16)" rx="2" ry="2" />
<text  x="408.15" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (64 samples, 0.14%)</title><rect x="851.2" y="389" width="1.6" height="15.0" fill="rgb(216,56,46)" rx="2" ry="2" />
<text  x="854.18" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (7 samples, 0.01%)</title><rect x="62.3" y="453" width="0.1" height="15.0" fill="rgb(243,119,41)" rx="2" ry="2" />
<text  x="65.26" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (4 samples, 0.01%)</title><rect x="20.5" y="293" width="0.1" height="15.0" fill="rgb(218,95,29)" rx="2" ry="2" />
<text  x="23.52" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="707.0" y="469" width="0.1" height="15.0" fill="rgb(249,193,41)" rx="2" ry="2" />
<text  x="710.05" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%)</title><rect x="225.8" y="117" width="0.2" height="15.0" fill="rgb(242,85,35)" rx="2" ry="2" />
<text  x="228.85" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (8 samples, 0.02%)</title><rect x="1103.6" y="341" width="0.2" height="15.0" fill="rgb(226,77,51)" rx="2" ry="2" />
<text  x="1106.63" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="454.5" y="309" width="0.2" height="15.0" fill="rgb(218,132,11)" rx="2" ry="2" />
<text  x="457.55" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (26 samples, 0.06%)</title><rect x="646.0" y="485" width="0.7" height="15.0" fill="rgb(208,6,32)" rx="2" ry="2" />
<text  x="649.02" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.03%)</title><rect x="687.1" y="485" width="0.3" height="15.0" fill="rgb(241,14,14)" rx="2" ry="2" />
<text  x="690.14" y="495.5" ></text>
</g>
<g >
<title>database::find_column_family (74 samples, 0.16%)</title><rect x="1059.0" y="341" width="1.9" height="15.0" fill="rgb(206,113,14)" rx="2" ry="2" />
<text  x="1062.02" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1143.7" y="501" width="0.2" height="15.0" fill="rgb(247,48,29)" rx="2" ry="2" />
<text  x="1146.74" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (6 samples, 0.01%)</title><rect x="23.0" y="485" width="0.1" height="15.0" fill="rgb(209,176,10)" rx="2" ry="2" />
<text  x="25.98" y="495.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (23 samples, 0.05%)</title><rect x="143.3" y="261" width="0.5" height="15.0" fill="rgb(246,171,45)" rx="2" ry="2" />
<text  x="146.26" y="271.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.19%)</title><rect x="962.5" y="405" width="2.2" height="15.0" fill="rgb(252,138,30)" rx="2" ry="2" />
<text  x="965.45" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (242 samples, 0.51%)</title><rect x="16.1" y="485" width="6.1" height="15.0" fill="rgb(226,103,7)" rx="2" ry="2" />
<text  x="19.12" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 0.09%)</title><rect x="907.1" y="293" width="1.0" height="15.0" fill="rgb(236,188,8)" rx="2" ry="2" />
<text  x="910.08" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%)</title><rect x="45.7" y="469" width="0.2" height="15.0" fill="rgb(250,145,10)" rx="2" ry="2" />
<text  x="48.74" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.01%)</title><rect x="296.6" y="389" width="0.1" height="15.0" fill="rgb(234,42,5)" rx="2" ry="2" />
<text  x="299.56" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%)</title><rect x="329.0" y="149" width="0.2" height="15.0" fill="rgb(247,206,8)" rx="2" ry="2" />
<text  x="331.97" y="159.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (14 samples, 0.03%)</title><rect x="832.3" y="293" width="0.3" height="15.0" fill="rgb(227,30,31)" rx="2" ry="2" />
<text  x="835.25" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (4 samples, 0.01%)</title><rect x="526.5" y="325" width="0.1" height="15.0" fill="rgb(213,133,24)" rx="2" ry="2" />
<text  x="529.49" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (166 samples, 0.35%)</title><rect x="1061.0" y="325" width="4.1" height="15.0" fill="rgb(230,140,53)" rx="2" ry="2" />
<text  x="1063.98" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (14 samples, 0.03%)</title><rect x="1040.5" y="197" width="0.4" height="15.0" fill="rgb(222,176,6)" rx="2" ry="2" />
<text  x="1043.52" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (7 samples, 0.01%)</title><rect x="1177.7" y="453" width="0.1" height="15.0" fill="rgb(251,0,10)" rx="2" ry="2" />
<text  x="1180.65" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (58 samples, 0.12%)</title><rect x="10.3" y="581" width="1.4" height="15.0" fill="rgb(234,55,3)" rx="2" ry="2" />
<text  x="13.25" y="591.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="291.7" y="293" width="0.1" height="15.0" fill="rgb(210,166,36)" rx="2" ry="2" />
<text  x="294.66" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="524.6" y="309" width="0.2" height="15.0" fill="rgb(222,198,7)" rx="2" ry="2" />
<text  x="527.58" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (142 samples, 0.30%)</title><rect x="774.1" y="357" width="3.5" height="15.0" fill="rgb(245,178,47)" rx="2" ry="2" />
<text  x="777.07" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (7 samples, 0.01%)</title><rect x="1169.7" y="469" width="0.2" height="15.0" fill="rgb(230,206,43)" rx="2" ry="2" />
<text  x="1172.69" y="479.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="18.2" y="341" width="0.2" height="15.0" fill="rgb(237,152,29)" rx="2" ry="2" />
<text  x="21.23" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (19 samples, 0.04%)</title><rect x="250.3" y="197" width="0.5" height="15.0" fill="rgb(237,215,6)" rx="2" ry="2" />
<text  x="253.30" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (24 samples, 0.05%)</title><rect x="1129.2" y="373" width="0.6" height="15.0" fill="rgb(229,80,23)" rx="2" ry="2" />
<text  x="1132.18" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (4 samples, 0.01%)</title><rect x="1137.4" y="421" width="0.1" height="15.0" fill="rgb(241,35,39)" rx="2" ry="2" />
<text  x="1140.36" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,278 samples, 11.23%)</title><rect x="295.8" y="405" width="132.5" height="15.0" fill="rgb(238,16,27)" rx="2" ry="2" />
<text  x="298.83" y="415.5" >seastar::future&lt;..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="819.6" y="245" width="0.2" height="15.0" fill="rgb(216,224,8)" rx="2" ry="2" />
<text  x="822.60" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (16 samples, 0.03%)</title><rect x="1139.4" y="293" width="0.4" height="15.0" fill="rgb(251,145,42)" rx="2" ry="2" />
<text  x="1142.37" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (24 samples, 0.05%)</title><rect x="1177.3" y="501" width="0.7" height="15.0" fill="rgb(250,116,25)" rx="2" ry="2" />
<text  x="1180.35" y="511.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (71 samples, 0.15%)</title><rect x="792.6" y="325" width="1.8" height="15.0" fill="rgb(207,206,47)" rx="2" ry="2" />
<text  x="795.64" y="335.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (70 samples, 0.15%)</title><rect x="236.1" y="229" width="1.8" height="15.0" fill="rgb(239,166,39)" rx="2" ry="2" />
<text  x="239.14" y="239.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (16 samples, 0.03%)</title><rect x="694.6" y="485" width="0.4" height="15.0" fill="rgb(215,95,16)" rx="2" ry="2" />
<text  x="697.60" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (86 samples, 0.18%)</title><rect x="662.2" y="469" width="2.2" height="15.0" fill="rgb(223,118,51)" rx="2" ry="2" />
<text  x="665.24" y="479.5" ></text>
</g>
<g >
<title>dht::tri_compare (14 samples, 0.03%)</title><rect x="1092.8" y="245" width="0.4" height="15.0" fill="rgb(231,95,49)" rx="2" ry="2" />
<text  x="1095.81" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%)</title><rect x="962.4" y="373" width="0.1" height="15.0" fill="rgb(248,189,36)" rx="2" ry="2" />
<text  x="965.35" y="383.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (160 samples, 0.34%)</title><rect x="550.3" y="389" width="4.0" height="15.0" fill="rgb(254,226,8)" rx="2" ry="2" />
<text  x="553.26" y="399.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.01%)</title><rect x="695.1" y="293" width="0.1" height="15.0" fill="rgb(249,159,34)" rx="2" ry="2" />
<text  x="698.12" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="41.1" y="453" width="0.1" height="15.0" fill="rgb(222,27,40)" rx="2" ry="2" />
<text  x="44.05" y="463.5" ></text>
</g>
<g >
<title>tombstone::apply (8 samples, 0.02%)</title><rect x="398.2" y="197" width="0.2" height="15.0" fill="rgb(254,206,9)" rx="2" ry="2" />
<text  x="401.25" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (105 samples, 0.22%)</title><rect x="18.2" y="373" width="2.6" height="15.0" fill="rgb(224,24,37)" rx="2" ry="2" />
<text  x="21.16" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (193 samples, 0.41%)</title><rect x="570.3" y="293" width="4.9" height="15.0" fill="rgb(227,21,26)" rx="2" ry="2" />
<text  x="573.32" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="733.9" y="453" width="0.3" height="15.0" fill="rgb(244,78,20)" rx="2" ry="2" />
<text  x="736.93" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="676.6" y="469" width="0.1" height="15.0" fill="rgb(241,224,27)" rx="2" ry="2" />
<text  x="679.57" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (181 samples, 0.39%)</title><rect x="413.9" y="261" width="4.6" height="15.0" fill="rgb(221,153,49)" rx="2" ry="2" />
<text  x="416.91" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="1174.3" y="421" width="0.3" height="15.0" fill="rgb(231,179,7)" rx="2" ry="2" />
<text  x="1177.34" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (12 samples, 0.03%)</title><rect x="1098.7" y="357" width="0.3" height="15.0" fill="rgb(225,57,36)" rx="2" ry="2" />
<text  x="1101.71" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="802.8" y="229" width="0.2" height="15.0" fill="rgb(230,79,46)" rx="2" ry="2" />
<text  x="805.78" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="825.6" y="261" width="0.1" height="15.0" fill="rgb(211,168,30)" rx="2" ry="2" />
<text  x="828.55" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (38 samples, 0.08%)</title><rect x="736.5" y="389" width="1.0" height="15.0" fill="rgb(237,47,40)" rx="2" ry="2" />
<text  x="739.51" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%)</title><rect x="1138.5" y="421" width="0.8" height="15.0" fill="rgb(219,136,37)" rx="2" ry="2" />
<text  x="1141.49" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="275.7" y="325" width="0.2" height="15.0" fill="rgb(207,172,49)" rx="2" ry="2" />
<text  x="278.73" y="335.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,685 samples, 3.58%)</title><rect x="331.2" y="197" width="42.3" height="15.0" fill="rgb(241,86,50)" rx="2" ry="2" />
<text  x="334.22" y="207.5" >mut..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (9 samples, 0.02%)</title><rect x="665.3" y="485" width="0.3" height="15.0" fill="rgb(240,118,22)" rx="2" ry="2" />
<text  x="668.33" y="495.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (5 samples, 0.01%)</title><rect x="341.5" y="181" width="0.1" height="15.0" fill="rgb(225,62,48)" rx="2" ry="2" />
<text  x="344.49" y="191.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="948.9" y="373" width="0.6" height="15.0" fill="rgb(216,121,20)" rx="2" ry="2" />
<text  x="951.90" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (326 samples, 0.69%)</title><rect x="34.8" y="485" width="8.2" height="15.0" fill="rgb(242,172,27)" rx="2" ry="2" />
<text  x="37.83" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (14 samples, 0.03%)</title><rect x="1169.3" y="453" width="0.4" height="15.0" fill="rgb(207,139,47)" rx="2" ry="2" />
<text  x="1172.34" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%)</title><rect x="823.3" y="245" width="0.1" height="15.0" fill="rgb(245,200,24)" rx="2" ry="2" />
<text  x="826.29" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (4 samples, 0.01%)</title><rect x="814.6" y="149" width="0.1" height="15.0" fill="rgb(223,185,3)" rx="2" ry="2" />
<text  x="817.61" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (100 samples, 0.21%)</title><rect x="684.6" y="485" width="2.5" height="15.0" fill="rgb(222,34,36)" rx="2" ry="2" />
<text  x="687.60" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="841.4" y="277" width="0.3" height="15.0" fill="rgb(237,77,33)" rx="2" ry="2" />
<text  x="844.41" y="287.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (83 samples, 0.18%)</title><rect x="521.7" y="325" width="2.1" height="15.0" fill="rgb(212,149,23)" rx="2" ry="2" />
<text  x="524.67" y="335.5" ></text>
</g>
<g >
<title>operator new (57 samples, 0.12%)</title><rect x="1115.9" y="357" width="1.4" height="15.0" fill="rgb(241,131,18)" rx="2" ry="2" />
<text  x="1118.90" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (8 samples, 0.02%)</title><rect x="227.4" y="117" width="0.2" height="15.0" fill="rgb(237,35,28)" rx="2" ry="2" />
<text  x="230.35" y="127.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (5 samples, 0.01%)</title><rect x="23.8" y="517" width="0.1" height="15.0" fill="rgb(244,177,39)" rx="2" ry="2" />
<text  x="26.81" y="527.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (95 samples, 0.20%)</title><rect x="623.2" y="405" width="2.3" height="15.0" fill="rgb(249,5,10)" rx="2" ry="2" />
<text  x="626.16" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (6 samples, 0.01%)</title><rect x="625.4" y="373" width="0.1" height="15.0" fill="rgb(240,46,50)" rx="2" ry="2" />
<text  x="628.37" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="1104.0" y="373" width="0.2" height="15.0" fill="rgb(206,29,12)" rx="2" ry="2" />
<text  x="1107.03" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%)</title><rect x="842.1" y="293" width="0.7" height="15.0" fill="rgb(241,76,5)" rx="2" ry="2" />
<text  x="845.09" y="303.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (64 samples, 0.14%)</title><rect x="1162.9" y="469" width="1.6" height="15.0" fill="rgb(219,165,32)" rx="2" ry="2" />
<text  x="1165.92" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (14 samples, 0.03%)</title><rect x="1004.0" y="261" width="0.3" height="15.0" fill="rgb(252,2,23)" rx="2" ry="2" />
<text  x="1006.97" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (4 samples, 0.01%)</title><rect x="719.1" y="437" width="0.1" height="15.0" fill="rgb(236,10,14)" rx="2" ry="2" />
<text  x="722.12" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="74.1" y="373" width="0.2" height="15.0" fill="rgb(207,83,41)" rx="2" ry="2" />
<text  x="77.13" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (29 samples, 0.06%)</title><rect x="669.0" y="485" width="0.7" height="15.0" fill="rgb(215,81,45)" rx="2" ry="2" />
<text  x="672.02" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (11 samples, 0.02%)</title><rect x="1139.4" y="197" width="0.3" height="15.0" fill="rgb(226,170,40)" rx="2" ry="2" />
<text  x="1142.45" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1037.2" y="213" width="0.1" height="15.0" fill="rgb(248,210,42)" rx="2" ry="2" />
<text  x="1040.21" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="630.3" y="373" width="0.5" height="15.0" fill="rgb(222,168,33)" rx="2" ry="2" />
<text  x="633.31" y="383.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (37 samples, 0.08%)</title><rect x="935.6" y="357" width="0.9" height="15.0" fill="rgb(250,88,27)" rx="2" ry="2" />
<text  x="938.57" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (40 samples, 0.09%)</title><rect x="793.4" y="309" width="1.0" height="15.0" fill="rgb(252,5,12)" rx="2" ry="2" />
<text  x="796.37" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="856.6" y="389" width="0.2" height="15.0" fill="rgb(208,4,17)" rx="2" ry="2" />
<text  x="859.55" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (21 samples, 0.04%)</title><rect x="241.3" y="245" width="0.5" height="15.0" fill="rgb(228,91,12)" rx="2" ry="2" />
<text  x="244.26" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="19.2" y="293" width="0.1" height="15.0" fill="rgb(211,67,29)" rx="2" ry="2" />
<text  x="22.21" y="303.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (30 samples, 0.06%)</title><rect x="248.3" y="181" width="0.7" height="15.0" fill="rgb(241,89,4)" rx="2" ry="2" />
<text  x="251.29" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (81 samples, 0.17%)</title><rect x="671.3" y="453" width="2.1" height="15.0" fill="rgb(253,17,2)" rx="2" ry="2" />
<text  x="674.33" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="915.6" y="357" width="0.1" height="15.0" fill="rgb(227,107,33)" rx="2" ry="2" />
<text  x="918.59" y="367.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (27 samples, 0.06%)</title><rect x="560.0" y="341" width="0.7" height="15.0" fill="rgb(237,134,29)" rx="2" ry="2" />
<text  x="563.03" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar8futurizeIvE22satisfy_with_result_ofIZZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS9_14discard_resultEvEUlDpOT_E_NS3_IvEEEET0_OT_ENKUlONS_8internal22promise_base_with_typeIvEERSE_ONS_12future_stateIS8_EEE_clESM_SN_SQ_EUlvE_EEvSM_SI_ (4 samples, 0.01%)</title><rect x="31.6" y="485" width="0.1" height="15.0" fill="rgb(213,50,49)" rx="2" ry="2" />
<text  x="34.56" y="495.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="98.2" y="437" width="0.7" height="15.0" fill="rgb(224,143,45)" rx="2" ry="2" />
<text  x="101.18" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="965.0" y="405" width="0.2" height="15.0" fill="rgb(222,175,40)" rx="2" ry="2" />
<text  x="967.96" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (15 samples, 0.03%)</title><rect x="1138.1" y="469" width="0.4" height="15.0" fill="rgb(223,195,17)" rx="2" ry="2" />
<text  x="1141.12" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (4 samples, 0.01%)</title><rect x="1177.5" y="453" width="0.2" height="15.0" fill="rgb(222,17,44)" rx="2" ry="2" />
<text  x="1180.55" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="42.9" y="469" width="0.1" height="15.0" fill="rgb(247,163,0)" rx="2" ry="2" />
<text  x="45.88" y="479.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (8 samples, 0.02%)</title><rect x="518.1" y="229" width="0.2" height="15.0" fill="rgb(240,50,8)" rx="2" ry="2" />
<text  x="521.08" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="821.8" y="245" width="0.2" height="15.0" fill="rgb(236,160,32)" rx="2" ry="2" />
<text  x="824.81" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (4 samples, 0.01%)</title><rect x="1147.2" y="469" width="0.1" height="15.0" fill="rgb(240,53,14)" rx="2" ry="2" />
<text  x="1150.18" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.03%)</title><rect x="99.8" y="421" width="0.3" height="15.0" fill="rgb(226,106,47)" rx="2" ry="2" />
<text  x="102.84" y="431.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (49 samples, 0.10%)</title><rect x="466.5" y="325" width="1.2" height="15.0" fill="rgb(208,110,2)" rx="2" ry="2" />
<text  x="469.50" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (5 samples, 0.01%)</title><rect x="554.0" y="293" width="0.2" height="15.0" fill="rgb(226,81,41)" rx="2" ry="2" />
<text  x="557.03" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="672.0" y="421" width="0.2" height="15.0" fill="rgb(220,110,15)" rx="2" ry="2" />
<text  x="675.00" y="431.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (6 samples, 0.01%)</title><rect x="526.8" y="341" width="0.2" height="15.0" fill="rgb(254,106,32)" rx="2" ry="2" />
<text  x="529.84" y="351.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (13 samples, 0.03%)</title><rect x="816.7" y="117" width="0.3" height="15.0" fill="rgb(254,42,51)" rx="2" ry="2" />
<text  x="819.71" y="127.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (17 samples, 0.04%)</title><rect x="235.0" y="165" width="0.5" height="15.0" fill="rgb(218,157,53)" rx="2" ry="2" />
<text  x="238.04" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1039.7" y="181" width="0.4" height="15.0" fill="rgb(212,26,20)" rx="2" ry="2" />
<text  x="1042.69" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (139 samples, 0.30%)</title><rect x="1061.5" y="309" width="3.5" height="15.0" fill="rgb(230,83,1)" rx="2" ry="2" />
<text  x="1064.48" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (174 samples, 0.37%)</title><rect x="738.8" y="357" width="4.4" height="15.0" fill="rgb(229,52,6)" rx="2" ry="2" />
<text  x="741.80" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="947.7" y="405" width="0.2" height="15.0" fill="rgb(245,207,5)" rx="2" ry="2" />
<text  x="950.72" y="415.5" ></text>
</g>
<g >
<title>database::find_column_family (52 samples, 0.11%)</title><rect x="837.3" y="341" width="1.3" height="15.0" fill="rgb(242,117,11)" rx="2" ry="2" />
<text  x="840.32" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (4 samples, 0.01%)</title><rect x="964.7" y="405" width="0.1" height="15.0" fill="rgb(244,189,5)" rx="2" ry="2" />
<text  x="967.74" y="415.5" ></text>
</g>
<g >
<title>database::find_schema (89 samples, 0.19%)</title><rect x="770.8" y="389" width="2.2" height="15.0" fill="rgb(217,93,0)" rx="2" ry="2" />
<text  x="773.78" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (30 samples, 0.06%)</title><rect x="616.7" y="437" width="0.8" height="15.0" fill="rgb(208,57,49)" rx="2" ry="2" />
<text  x="619.71" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%)</title><rect x="145.4" y="277" width="0.5" height="15.0" fill="rgb(210,9,53)" rx="2" ry="2" />
<text  x="148.40" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="803.7" y="213" width="0.1" height="15.0" fill="rgb(212,121,29)" rx="2" ry="2" />
<text  x="806.66" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (5 samples, 0.01%)</title><rect x="1097.1" y="325" width="0.1" height="15.0" fill="rgb(221,38,23)" rx="2" ry="2" />
<text  x="1100.12" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (6 samples, 0.01%)</title><rect x="767.2" y="325" width="0.1" height="15.0" fill="rgb(218,181,38)" rx="2" ry="2" />
<text  x="770.19" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (5 samples, 0.01%)</title><rect x="418.7" y="277" width="0.2" height="15.0" fill="rgb(221,218,21)" rx="2" ry="2" />
<text  x="421.73" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="426.5" y="357" width="0.7" height="15.0" fill="rgb(234,70,2)" rx="2" ry="2" />
<text  x="429.46" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="730.4" y="405" width="1.1" height="15.0" fill="rgb(238,98,14)" rx="2" ry="2" />
<text  x="733.39" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="880.5" y="325" width="0.2" height="15.0" fill="rgb(245,135,51)" rx="2" ry="2" />
<text  x="883.55" y="335.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (13 samples, 0.03%)</title><rect x="845.0" y="293" width="0.3" height="15.0" fill="rgb(207,22,39)" rx="2" ry="2" />
<text  x="848.00" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="936.3" y="341" width="0.2" height="15.0" fill="rgb(232,128,7)" rx="2" ry="2" />
<text  x="939.35" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (15 samples, 0.03%)</title><rect x="1046.2" y="277" width="0.4" height="15.0" fill="rgb(223,73,45)" rx="2" ry="2" />
<text  x="1049.24" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (287 samples, 0.61%)</title><rect x="192.8" y="85" width="7.2" height="15.0" fill="rgb(224,135,48)" rx="2" ry="2" />
<text  x="195.84" y="95.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (19 samples, 0.04%)</title><rect x="1103.0" y="357" width="0.5" height="15.0" fill="rgb(234,21,47)" rx="2" ry="2" />
<text  x="1106.00" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (24 samples, 0.05%)</title><rect x="540.2" y="341" width="0.6" height="15.0" fill="rgb(244,166,29)" rx="2" ry="2" />
<text  x="543.20" y="351.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="594.8" y="405" width="0.5" height="15.0" fill="rgb(242,114,53)" rx="2" ry="2" />
<text  x="597.77" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5 samples, 0.01%)</title><rect x="1104.5" y="389" width="0.1" height="15.0" fill="rgb(244,110,42)" rx="2" ry="2" />
<text  x="1107.48" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (13 samples, 0.03%)</title><rect x="881.5" y="341" width="0.3" height="15.0" fill="rgb(217,218,16)" rx="2" ry="2" />
<text  x="884.45" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (4 samples, 0.01%)</title><rect x="1176.8" y="517" width="0.1" height="15.0" fill="rgb(205,7,24)" rx="2" ry="2" />
<text  x="1179.77" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1120.0" y="389" width="0.1" height="15.0" fill="rgb(250,49,29)" rx="2" ry="2" />
<text  x="1122.97" y="399.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (76 samples, 0.16%)</title><rect x="139.2" y="245" width="1.9" height="15.0" fill="rgb(243,75,50)" rx="2" ry="2" />
<text  x="142.20" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (39 samples, 0.08%)</title><rect x="102.1" y="405" width="1.0" height="15.0" fill="rgb(227,122,8)" rx="2" ry="2" />
<text  x="105.15" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (144 samples, 0.31%)</title><rect x="100.9" y="421" width="3.6" height="15.0" fill="rgb(237,154,44)" rx="2" ry="2" />
<text  x="103.89" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%)</title><rect x="956.1" y="341" width="0.2" height="15.0" fill="rgb(222,90,7)" rx="2" ry="2" />
<text  x="959.05" y="351.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.01%)</title><rect x="812.5" y="133" width="0.1" height="15.0" fill="rgb(249,120,29)" rx="2" ry="2" />
<text  x="815.47" y="143.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (35 samples, 0.07%)</title><rect x="940.7" y="341" width="0.9" height="15.0" fill="rgb(238,149,21)" rx="2" ry="2" />
<text  x="943.74" y="351.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (14 samples, 0.03%)</title><rect x="861.8" y="421" width="0.3" height="15.0" fill="rgb(253,87,38)" rx="2" ry="2" />
<text  x="864.80" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (36 samples, 0.08%)</title><rect x="1051.6" y="245" width="0.9" height="15.0" fill="rgb(235,118,5)" rx="2" ry="2" />
<text  x="1054.62" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (92 samples, 0.20%)</title><rect x="869.6" y="389" width="2.3" height="15.0" fill="rgb(253,37,54)" rx="2" ry="2" />
<text  x="872.58" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="677.4" y="485" width="0.2" height="15.0" fill="rgb(215,25,18)" rx="2" ry="2" />
<text  x="680.35" y="495.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (25 samples, 0.05%)</title><rect x="903.9" y="309" width="0.6" height="15.0" fill="rgb(254,42,9)" rx="2" ry="2" />
<text  x="906.89" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="432.7" y="389" width="0.1" height="15.0" fill="rgb(219,95,1)" rx="2" ry="2" />
<text  x="435.66" y="399.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (56 samples, 0.12%)</title><rect x="536.4" y="261" width="1.4" height="15.0" fill="rgb(214,221,37)" rx="2" ry="2" />
<text  x="539.43" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%)</title><rect x="767.6" y="389" width="1.3" height="15.0" fill="rgb(251,123,13)" rx="2" ry="2" />
<text  x="770.62" y="399.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (140 samples, 0.30%)</title><rect x="714.8" y="437" width="3.5" height="15.0" fill="rgb(225,187,8)" rx="2" ry="2" />
<text  x="717.78" y="447.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (6 samples, 0.01%)</title><rect x="15.9" y="517" width="0.1" height="15.0" fill="rgb(249,195,45)" rx="2" ry="2" />
<text  x="18.87" y="527.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1075.4" y="309" width="0.4" height="15.0" fill="rgb(242,82,54)" rx="2" ry="2" />
<text  x="1078.39" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="241.1" y="245" width="0.2" height="15.0" fill="rgb(209,144,47)" rx="2" ry="2" />
<text  x="244.11" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (6 samples, 0.01%)</title><rect x="996.1" y="293" width="0.2" height="15.0" fill="rgb(217,138,30)" rx="2" ry="2" />
<text  x="999.12" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (131 samples, 0.28%)</title><rect x="622.3" y="421" width="3.2" height="15.0" fill="rgb(209,186,53)" rx="2" ry="2" />
<text  x="625.25" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (27 samples, 0.06%)</title><rect x="205.8" y="85" width="0.7" height="15.0" fill="rgb(236,132,25)" rx="2" ry="2" />
<text  x="208.82" y="95.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (70 samples, 0.15%)</title><rect x="16.4" y="357" width="1.7" height="15.0" fill="rgb(211,6,41)" rx="2" ry="2" />
<text  x="19.35" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (88 samples, 0.19%)</title><rect x="39.7" y="469" width="2.2" height="15.0" fill="rgb(216,85,12)" rx="2" ry="2" />
<text  x="42.67" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (24 samples, 0.05%)</title><rect x="249.0" y="181" width="0.6" height="15.0" fill="rgb(229,11,34)" rx="2" ry="2" />
<text  x="252.04" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (101 samples, 0.21%)</title><rect x="1115.6" y="389" width="2.5" height="15.0" fill="rgb(245,47,53)" rx="2" ry="2" />
<text  x="1118.57" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (25 samples, 0.05%)</title><rect x="506.6" y="261" width="0.6" height="15.0" fill="rgb(214,83,21)" rx="2" ry="2" />
<text  x="509.58" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (90 samples, 0.19%)</title><rect x="759.2" y="277" width="2.2" height="15.0" fill="rgb(252,168,24)" rx="2" ry="2" />
<text  x="762.16" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="588.3" y="341" width="0.2" height="15.0" fill="rgb(251,70,50)" rx="2" ry="2" />
<text  x="591.29" y="351.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="541.1" y="325" width="0.8" height="15.0" fill="rgb(248,58,12)" rx="2" ry="2" />
<text  x="544.12" y="335.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (4 samples, 0.01%)</title><rect x="1138.6" y="245" width="0.1" height="15.0" fill="rgb(208,31,53)" rx="2" ry="2" />
<text  x="1141.62" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (12 samples, 0.03%)</title><rect x="858.0" y="357" width="0.3" height="15.0" fill="rgb(213,48,10)" rx="2" ry="2" />
<text  x="861.03" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (9 samples, 0.02%)</title><rect x="428.4" y="405" width="0.2" height="15.0" fill="rgb(217,82,47)" rx="2" ry="2" />
<text  x="431.42" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (26 samples, 0.06%)</title><rect x="657.0" y="437" width="0.6" height="15.0" fill="rgb(217,101,14)" rx="2" ry="2" />
<text  x="659.99" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (43 samples, 0.09%)</title><rect x="1139.3" y="453" width="1.1" height="15.0" fill="rgb(254,85,39)" rx="2" ry="2" />
<text  x="1142.29" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (18 samples, 0.04%)</title><rect x="337.5" y="181" width="0.5" height="15.0" fill="rgb(228,137,33)" rx="2" ry="2" />
<text  x="340.53" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="629.1" y="405" width="0.1" height="15.0" fill="rgb(205,31,37)" rx="2" ry="2" />
<text  x="632.11" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (102 samples, 0.22%)</title><rect x="996.3" y="293" width="2.5" height="15.0" fill="rgb(254,142,25)" rx="2" ry="2" />
<text  x="999.27" y="303.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="685.0" y="469" width="0.4" height="15.0" fill="rgb(239,210,35)" rx="2" ry="2" />
<text  x="687.98" y="479.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (24 samples, 0.05%)</title><rect x="1138.6" y="277" width="0.6" height="15.0" fill="rgb(225,214,40)" rx="2" ry="2" />
<text  x="1141.57" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (13 samples, 0.03%)</title><rect x="612.8" y="421" width="0.3" height="15.0" fill="rgb(238,22,39)" rx="2" ry="2" />
<text  x="615.76" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="84.2" y="453" width="0.3" height="15.0" fill="rgb(251,74,26)" rx="2" ry="2" />
<text  x="87.23" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="866.9" y="389" width="0.1" height="15.0" fill="rgb(228,126,18)" rx="2" ry="2" />
<text  x="869.87" y="399.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%)</title><rect x="562.6" y="309" width="0.4" height="15.0" fill="rgb(208,98,28)" rx="2" ry="2" />
<text  x="565.61" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="632.7" y="437" width="0.2" height="15.0" fill="rgb(237,58,51)" rx="2" ry="2" />
<text  x="635.75" y="447.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="875.3" y="437" width="0.7" height="15.0" fill="rgb(244,215,40)" rx="2" ry="2" />
<text  x="878.33" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="599.5" y="373" width="0.1" height="15.0" fill="rgb(206,113,31)" rx="2" ry="2" />
<text  x="602.49" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="40.3" y="437" width="0.2" height="15.0" fill="rgb(235,196,33)" rx="2" ry="2" />
<text  x="43.30" y="447.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (23 samples, 0.05%)</title><rect x="817.9" y="101" width="0.6" height="15.0" fill="rgb(251,139,13)" rx="2" ry="2" />
<text  x="820.92" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="731.5" y="421" width="0.1" height="15.0" fill="rgb(220,22,0)" rx="2" ry="2" />
<text  x="734.54" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%)</title><rect x="82.0" y="453" width="0.2" height="15.0" fill="rgb(238,143,25)" rx="2" ry="2" />
<text  x="84.99" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="851.0" y="389" width="0.2" height="15.0" fill="rgb(247,178,22)" rx="2" ry="2" />
<text  x="853.98" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (14 samples, 0.03%)</title><rect x="324.5" y="165" width="0.3" height="15.0" fill="rgb(243,6,2)" rx="2" ry="2" />
<text  x="327.50" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (6 samples, 0.01%)</title><rect x="876.1" y="421" width="0.1" height="15.0" fill="rgb(220,216,29)" rx="2" ry="2" />
<text  x="879.08" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="520.5" y="293" width="0.1" height="15.0" fill="rgb(243,43,36)" rx="2" ry="2" />
<text  x="523.52" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="823.3" y="261" width="0.1" height="15.0" fill="rgb(216,7,15)" rx="2" ry="2" />
<text  x="826.29" y="271.5" ></text>
</g>
<g >
<title>database::find_schema (58 samples, 0.12%)</title><rect x="837.2" y="357" width="1.4" height="15.0" fill="rgb(222,34,18)" rx="2" ry="2" />
<text  x="840.17" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,338 samples, 9.23%)</title><rect x="433.4" y="373" width="108.9" height="15.0" fill="rgb(223,207,54)" rx="2" ry="2" />
<text  x="436.44" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (124 samples, 0.26%)</title><rect x="1049.4" y="261" width="3.1" height="15.0" fill="rgb(227,188,9)" rx="2" ry="2" />
<text  x="1052.41" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.01%)</title><rect x="50.7" y="485" width="0.1" height="15.0" fill="rgb(213,70,33)" rx="2" ry="2" />
<text  x="53.69" y="495.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (8 samples, 0.02%)</title><rect x="374.4" y="213" width="0.2" height="15.0" fill="rgb(226,33,43)" rx="2" ry="2" />
<text  x="377.37" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="918.4" y="293" width="0.1" height="15.0" fill="rgb(243,185,34)" rx="2" ry="2" />
<text  x="921.40" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="162.0" y="181" width="0.7" height="15.0" fill="rgb(225,8,20)" rx="2" ry="2" />
<text  x="164.96" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="542.5" y="389" width="1.2" height="15.0" fill="rgb(231,41,39)" rx="2" ry="2" />
<text  x="545.53" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (589 samples, 1.25%)</title><rect x="503.6" y="277" width="14.8" height="15.0" fill="rgb(205,167,45)" rx="2" ry="2" />
<text  x="506.60" y="287.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%)</title><rect x="584.2" y="357" width="1.2" height="15.0" fill="rgb(222,91,53)" rx="2" ry="2" />
<text  x="587.20" y="367.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.03%)</title><rect x="662.5" y="453" width="0.3" height="15.0" fill="rgb(229,136,53)" rx="2" ry="2" />
<text  x="665.54" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="722.4" y="485" width="0.2" height="15.0" fill="rgb(218,48,25)" rx="2" ry="2" />
<text  x="725.36" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (711 samples, 1.51%)</title><rect x="901.1" y="373" width="17.8" height="15.0" fill="rgb(208,163,14)" rx="2" ry="2" />
<text  x="904.06" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="252.6" y="165" width="0.6" height="15.0" fill="rgb(209,121,53)" rx="2" ry="2" />
<text  x="255.56" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (33 samples, 0.07%)</title><rect x="375.5" y="165" width="0.8" height="15.0" fill="rgb(241,69,10)" rx="2" ry="2" />
<text  x="378.50" y="175.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(216,151,36)" rx="2" ry="2" />
<text  x="1191.87" y="639.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (152 samples, 0.32%)</title><rect x="995.0" y="325" width="3.8" height="15.0" fill="rgb(246,110,13)" rx="2" ry="2" />
<text  x="998.01" y="335.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (9 samples, 0.02%)</title><rect x="961.1" y="389" width="0.2" height="15.0" fill="rgb(234,104,17)" rx="2" ry="2" />
<text  x="964.12" y="399.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (18 samples, 0.04%)</title><rect x="225.6" y="133" width="0.4" height="15.0" fill="rgb(237,154,45)" rx="2" ry="2" />
<text  x="228.60" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="539.5" y="325" width="0.2" height="15.0" fill="rgb(215,226,22)" rx="2" ry="2" />
<text  x="542.54" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (63 samples, 0.13%)</title><rect x="719.4" y="437" width="1.6" height="15.0" fill="rgb(237,18,51)" rx="2" ry="2" />
<text  x="722.40" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (180 samples, 0.38%)</title><rect x="1170.2" y="469" width="4.5" height="15.0" fill="rgb(223,78,22)" rx="2" ry="2" />
<text  x="1173.22" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (15 samples, 0.03%)</title><rect x="667.3" y="485" width="0.4" height="15.0" fill="rgb(251,227,12)" rx="2" ry="2" />
<text  x="670.31" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (25 samples, 0.05%)</title><rect x="513.5" y="197" width="0.7" height="15.0" fill="rgb(223,56,35)" rx="2" ry="2" />
<text  x="516.54" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="802.0" y="229" width="0.7" height="15.0" fill="rgb(207,155,26)" rx="2" ry="2" />
<text  x="804.95" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (4 samples, 0.01%)</title><rect x="1133.7" y="421" width="0.1" height="15.0" fill="rgb(229,17,23)" rx="2" ry="2" />
<text  x="1136.67" y="431.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (7 samples, 0.01%)</title><rect x="901.9" y="325" width="0.2" height="15.0" fill="rgb(217,213,42)" rx="2" ry="2" />
<text  x="904.91" y="335.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (493 samples, 1.05%)</title><rect x="479.4" y="309" width="12.4" height="15.0" fill="rgb(238,4,24)" rx="2" ry="2" />
<text  x="482.45" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (6 samples, 0.01%)</title><rect x="1076.7" y="341" width="0.1" height="15.0" fill="rgb(254,53,30)" rx="2" ry="2" />
<text  x="1079.69" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="777.5" y="325" width="0.1" height="15.0" fill="rgb(242,88,31)" rx="2" ry="2" />
<text  x="780.53" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (10 samples, 0.02%)</title><rect x="1047.4" y="277" width="0.2" height="15.0" fill="rgb(217,200,33)" rx="2" ry="2" />
<text  x="1050.37" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1036.8" y="213" width="0.1" height="15.0" fill="rgb(233,157,9)" rx="2" ry="2" />
<text  x="1039.75" y="223.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (6 samples, 0.01%)</title><rect x="1054.4" y="325" width="0.2" height="15.0" fill="rgb(211,211,42)" rx="2" ry="2" />
<text  x="1057.43" y="335.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="644.6" y="485" width="0.5" height="15.0" fill="rgb(248,121,46)" rx="2" ry="2" />
<text  x="647.59" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (59 samples, 0.13%)</title><rect x="751.7" y="341" width="1.5" height="15.0" fill="rgb(218,171,11)" rx="2" ry="2" />
<text  x="754.73" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (10 samples, 0.02%)</title><rect x="705.0" y="453" width="0.2" height="15.0" fill="rgb(205,58,16)" rx="2" ry="2" />
<text  x="707.96" y="463.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="940.5" y="341" width="0.2" height="15.0" fill="rgb(207,167,38)" rx="2" ry="2" />
<text  x="943.54" y="351.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (12 samples, 0.03%)</title><rect x="239.2" y="229" width="0.3" height="15.0" fill="rgb(213,5,12)" rx="2" ry="2" />
<text  x="242.20" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="1062.8" y="293" width="1.0" height="15.0" fill="rgb(208,111,28)" rx="2" ry="2" />
<text  x="1065.84" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (13 samples, 0.03%)</title><rect x="838.3" y="293" width="0.3" height="15.0" fill="rgb(242,148,5)" rx="2" ry="2" />
<text  x="841.30" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (4 samples, 0.01%)</title><rect x="25.1" y="517" width="0.1" height="15.0" fill="rgb(237,84,48)" rx="2" ry="2" />
<text  x="28.09" y="527.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (40 samples, 0.09%)</title><rect x="1128.8" y="389" width="1.0" height="15.0" fill="rgb(243,50,42)" rx="2" ry="2" />
<text  x="1131.78" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (25 samples, 0.05%)</title><rect x="582.9" y="357" width="0.7" height="15.0" fill="rgb(240,84,33)" rx="2" ry="2" />
<text  x="585.94" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="629.4" y="437" width="0.2" height="15.0" fill="rgb(231,51,40)" rx="2" ry="2" />
<text  x="632.38" y="447.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (431 samples, 0.92%)</title><rect x="579.5" y="389" width="10.8" height="15.0" fill="rgb(254,161,53)" rx="2" ry="2" />
<text  x="582.50" y="399.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (852 samples, 1.81%)</title><rect x="558.1" y="389" width="21.4" height="15.0" fill="rgb(246,106,30)" rx="2" ry="2" />
<text  x="561.12" y="399.5" >m..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="697.8" y="469" width="0.1" height="15.0" fill="rgb(227,117,45)" rx="2" ry="2" />
<text  x="700.76" y="479.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="832.7" y="277" width="0.5" height="15.0" fill="rgb(233,41,8)" rx="2" ry="2" />
<text  x="835.70" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (48 samples, 0.10%)</title><rect x="1153.2" y="453" width="1.2" height="15.0" fill="rgb(226,103,35)" rx="2" ry="2" />
<text  x="1156.18" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (15 samples, 0.03%)</title><rect x="1006.2" y="293" width="0.4" height="15.0" fill="rgb(223,52,14)" rx="2" ry="2" />
<text  x="1009.21" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (14 samples, 0.03%)</title><rect x="276.6" y="341" width="0.3" height="15.0" fill="rgb(241,48,37)" rx="2" ry="2" />
<text  x="279.55" y="351.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (65 samples, 0.14%)</title><rect x="765.9" y="389" width="1.6" height="15.0" fill="rgb(214,161,38)" rx="2" ry="2" />
<text  x="768.91" y="399.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (22 samples, 0.05%)</title><rect x="1032.9" y="149" width="0.6" height="15.0" fill="rgb(254,118,49)" rx="2" ry="2" />
<text  x="1035.94" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="1126.6" y="373" width="0.7" height="15.0" fill="rgb(212,20,12)" rx="2" ry="2" />
<text  x="1129.62" y="383.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (41 samples, 0.09%)</title><rect x="1139.3" y="405" width="1.1" height="15.0" fill="rgb(206,79,37)" rx="2" ry="2" />
<text  x="1142.35" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (164 samples, 0.35%)</title><rect x="595.7" y="421" width="4.1" height="15.0" fill="rgb(205,173,50)" rx="2" ry="2" />
<text  x="598.67" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt (4 samples, 0.01%)</title><rect x="478.3" y="277" width="0.1" height="15.0" fill="rgb(248,141,11)" rx="2" ry="2" />
<text  x="481.30" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (70 samples, 0.15%)</title><rect x="16.4" y="325" width="1.7" height="15.0" fill="rgb(207,176,28)" rx="2" ry="2" />
<text  x="19.35" y="335.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="678.2" y="469" width="0.5" height="15.0" fill="rgb(213,93,33)" rx="2" ry="2" />
<text  x="681.18" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="1120.7" y="405" width="0.2" height="15.0" fill="rgb(215,103,32)" rx="2" ry="2" />
<text  x="1123.67" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (46,006 samples, 97.87%)</title><rect x="23.2" y="629" width="1154.8" height="15.0" fill="rgb(212,204,43)" rx="2" ry="2" />
<text  x="26.20" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (18 samples, 0.04%)</title><rect x="1028.2" y="197" width="0.5" height="15.0" fill="rgb(219,2,8)" rx="2" ry="2" />
<text  x="1031.25" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (243 samples, 0.52%)</title><rect x="1087.1" y="277" width="6.1" height="15.0" fill="rgb(240,229,29)" rx="2" ry="2" />
<text  x="1090.06" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (21 samples, 0.04%)</title><rect x="676.0" y="469" width="0.5" height="15.0" fill="rgb(206,82,18)" rx="2" ry="2" />
<text  x="679.02" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,459 samples, 11.61%)</title><rect x="967.4" y="389" width="137.1" height="15.0" fill="rgb(227,62,1)" rx="2" ry="2" />
<text  x="970.45" y="399.5" >service::storage_..</text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (100 samples, 0.21%)</title><rect x="536.1" y="277" width="2.5" height="15.0" fill="rgb(205,188,3)" rx="2" ry="2" />
<text  x="539.13" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%)</title><rect x="177.6" y="133" width="0.5" height="15.0" fill="rgb(208,188,20)" rx="2" ry="2" />
<text  x="180.60" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="987.2" y="357" width="0.2" height="15.0" fill="rgb(220,144,49)" rx="2" ry="2" />
<text  x="990.18" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="565.2" y="309" width="0.1" height="15.0" fill="rgb(245,137,17)" rx="2" ry="2" />
<text  x="568.20" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="168.3" y="213" width="0.3" height="15.0" fill="rgb(227,163,2)" rx="2" ry="2" />
<text  x="171.32" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (4 samples, 0.01%)</title><rect x="115.5" y="373" width="0.1" height="15.0" fill="rgb(254,67,20)" rx="2" ry="2" />
<text  x="118.45" y="383.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (88 samples, 0.19%)</title><rect x="608.4" y="421" width="2.2" height="15.0" fill="rgb(226,121,54)" rx="2" ry="2" />
<text  x="611.37" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (46 samples, 0.10%)</title><rect x="1028.7" y="197" width="1.2" height="15.0" fill="rgb(252,20,41)" rx="2" ry="2" />
<text  x="1031.70" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="775.9" y="309" width="0.2" height="15.0" fill="rgb(240,78,0)" rx="2" ry="2" />
<text  x="778.87" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (26 samples, 0.06%)</title><rect x="1047.8" y="261" width="0.7" height="15.0" fill="rgb(223,111,34)" rx="2" ry="2" />
<text  x="1050.85" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="781.7" y="341" width="0.2" height="15.0" fill="rgb(245,218,24)" rx="2" ry="2" />
<text  x="784.75" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (4 samples, 0.01%)</title><rect x="666.7" y="453" width="0.1" height="15.0" fill="rgb(240,204,1)" rx="2" ry="2" />
<text  x="669.68" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (6 samples, 0.01%)</title><rect x="21.8" y="373" width="0.1" height="15.0" fill="rgb(226,92,48)" rx="2" ry="2" />
<text  x="24.77" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="692.8" y="437" width="0.2" height="15.0" fill="rgb(205,59,7)" rx="2" ry="2" />
<text  x="695.79" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="799.9" y="245" width="0.3" height="15.0" fill="rgb(251,153,32)" rx="2" ry="2" />
<text  x="802.92" y="255.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%)</title><rect x="1139.9" y="133" width="0.1" height="15.0" fill="rgb(210,77,38)" rx="2" ry="2" />
<text  x="1142.90" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (12 samples, 0.03%)</title><rect x="701.8" y="453" width="0.3" height="15.0" fill="rgb(235,226,2)" rx="2" ry="2" />
<text  x="704.77" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1015.3" y="277" width="0.1" height="15.0" fill="rgb(246,174,3)" rx="2" ry="2" />
<text  x="1018.32" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="599.1" y="389" width="0.5" height="15.0" fill="rgb(246,192,13)" rx="2" ry="2" />
<text  x="602.08" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (19 samples, 0.04%)</title><rect x="240.0" y="229" width="0.4" height="15.0" fill="rgb(228,216,31)" rx="2" ry="2" />
<text  x="242.96" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="533.9" y="309" width="0.1" height="15.0" fill="rgb(242,196,25)" rx="2" ry="2" />
<text  x="536.92" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (182 samples, 0.39%)</title><rect x="773.3" y="373" width="4.6" height="15.0" fill="rgb(238,143,41)" rx="2" ry="2" />
<text  x="776.29" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (95 samples, 0.20%)</title><rect x="850.5" y="421" width="2.4" height="15.0" fill="rgb(235,128,34)" rx="2" ry="2" />
<text  x="853.48" y="431.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (49 samples, 0.10%)</title><rect x="766.2" y="373" width="1.3" height="15.0" fill="rgb(221,225,38)" rx="2" ry="2" />
<text  x="769.24" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (23 samples, 0.05%)</title><rect x="793.8" y="277" width="0.6" height="15.0" fill="rgb(219,40,25)" rx="2" ry="2" />
<text  x="796.80" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,367 samples, 2.91%)</title><rect x="557.0" y="437" width="34.3" height="15.0" fill="rgb(245,158,47)" rx="2" ry="2" />
<text  x="559.96" y="447.5" >qu..</text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (18 samples, 0.04%)</title><rect x="704.5" y="453" width="0.5" height="15.0" fill="rgb(234,138,22)" rx="2" ry="2" />
<text  x="707.51" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="577.5" y="309" width="0.1" height="15.0" fill="rgb(208,175,49)" rx="2" ry="2" />
<text  x="580.50" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="552.2" y="325" width="2.0" height="15.0" fill="rgb(236,193,42)" rx="2" ry="2" />
<text  x="555.22" y="335.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,532 samples, 9.64%)</title><rect x="306.1" y="293" width="113.7" height="15.0" fill="rgb(227,200,19)" rx="2" ry="2" />
<text  x="309.07" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%)</title><rect x="1066.8" y="325" width="0.2" height="15.0" fill="rgb(211,172,34)" rx="2" ry="2" />
<text  x="1069.80" y="335.5" ></text>
</g>
<g >
<title>__start_context (13 samples, 0.03%)</title><rect x="22.8" y="597" width="0.3" height="15.0" fill="rgb(249,135,9)" rx="2" ry="2" />
<text  x="25.80" y="607.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (5 samples, 0.01%)</title><rect x="20.5" y="325" width="0.1" height="15.0" fill="rgb(237,154,34)" rx="2" ry="2" />
<text  x="23.49" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="819.7" y="229" width="0.1" height="15.0" fill="rgb(234,209,52)" rx="2" ry="2" />
<text  x="822.65" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="706.3" y="485" width="0.1" height="15.0" fill="rgb(247,12,7)" rx="2" ry="2" />
<text  x="709.32" y="495.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (140 samples, 0.30%)</title><rect x="535.8" y="309" width="3.5" height="15.0" fill="rgb(241,2,32)" rx="2" ry="2" />
<text  x="538.75" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (11 samples, 0.02%)</title><rect x="1139.4" y="213" width="0.3" height="15.0" fill="rgb(217,38,38)" rx="2" ry="2" />
<text  x="1142.45" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (70 samples, 0.15%)</title><rect x="826.8" y="325" width="1.8" height="15.0" fill="rgb(243,169,22)" rx="2" ry="2" />
<text  x="829.83" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (43 samples, 0.09%)</title><rect x="206.5" y="117" width="1.1" height="15.0" fill="rgb(238,39,40)" rx="2" ry="2" />
<text  x="209.50" y="127.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (307 samples, 0.65%)</title><rect x="1079.1" y="277" width="7.7" height="15.0" fill="rgb(227,39,37)" rx="2" ry="2" />
<text  x="1082.05" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (4 samples, 0.01%)</title><rect x="655.5" y="453" width="0.1" height="15.0" fill="rgb(236,36,1)" rx="2" ry="2" />
<text  x="658.54" y="463.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="493.5" y="309" width="0.3" height="15.0" fill="rgb(245,222,43)" rx="2" ry="2" />
<text  x="496.48" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (108 samples, 0.23%)</title><rect x="989.4" y="341" width="2.7" height="15.0" fill="rgb(241,181,31)" rx="2" ry="2" />
<text  x="992.44" y="351.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (57 samples, 0.12%)</title><rect x="623.8" y="389" width="1.4" height="15.0" fill="rgb(252,47,25)" rx="2" ry="2" />
<text  x="626.78" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (37 samples, 0.08%)</title><rect x="485.7" y="197" width="0.9" height="15.0" fill="rgb(216,88,17)" rx="2" ry="2" />
<text  x="488.70" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="595.2" y="389" width="0.1" height="15.0" fill="rgb(252,220,18)" rx="2" ry="2" />
<text  x="598.17" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (4 samples, 0.01%)</title><rect x="397.4" y="165" width="0.1" height="15.0" fill="rgb(207,56,14)" rx="2" ry="2" />
<text  x="400.42" y="175.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (4 samples, 0.01%)</title><rect x="565.1" y="309" width="0.1" height="15.0" fill="rgb(242,74,47)" rx="2" ry="2" />
<text  x="568.10" y="319.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (5 samples, 0.01%)</title><rect x="1005.9" y="293" width="0.1" height="15.0" fill="rgb(250,145,44)" rx="2" ry="2" />
<text  x="1008.91" y="303.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="623.4" y="389" width="0.4" height="15.0" fill="rgb(226,43,30)" rx="2" ry="2" />
<text  x="626.36" y="399.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (134 samples, 0.29%)</title><rect x="930.0" y="341" width="3.3" height="15.0" fill="rgb(216,20,41)" rx="2" ry="2" />
<text  x="932.97" y="351.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="801.9" y="245" width="0.8" height="15.0" fill="rgb(242,194,52)" rx="2" ry="2" />
<text  x="804.93" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%)</title><rect x="512.6" y="197" width="0.1" height="15.0" fill="rgb(247,151,4)" rx="2" ry="2" />
<text  x="515.61" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="135.4" y="245" width="0.2" height="15.0" fill="rgb(245,225,46)" rx="2" ry="2" />
<text  x="138.43" y="255.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (133 samples, 0.28%)</title><rect x="981.5" y="341" width="3.3" height="15.0" fill="rgb(238,171,52)" rx="2" ry="2" />
<text  x="984.46" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="712.1" y="453" width="0.1" height="15.0" fill="rgb(215,224,47)" rx="2" ry="2" />
<text  x="715.12" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%)</title><rect x="514.4" y="181" width="0.3" height="15.0" fill="rgb(249,49,47)" rx="2" ry="2" />
<text  x="517.37" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (40 samples, 0.09%)</title><rect x="1104.8" y="389" width="1.0" height="15.0" fill="rgb(243,81,4)" rx="2" ry="2" />
<text  x="1107.83" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (6 samples, 0.01%)</title><rect x="872.1" y="405" width="0.1" height="15.0" fill="rgb(227,81,51)" rx="2" ry="2" />
<text  x="875.06" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="865.9" y="357" width="0.5" height="15.0" fill="rgb(212,187,42)" rx="2" ry="2" />
<text  x="868.91" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (46 samples, 0.10%)</title><rect x="126.9" y="293" width="1.2" height="15.0" fill="rgb(209,60,47)" rx="2" ry="2" />
<text  x="129.92" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (28 samples, 0.06%)</title><rect x="611.6" y="437" width="0.7" height="15.0" fill="rgb(229,162,39)" rx="2" ry="2" />
<text  x="614.58" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (101 samples, 0.21%)</title><rect x="1112.1" y="373" width="2.5" height="15.0" fill="rgb(222,153,47)" rx="2" ry="2" />
<text  x="1115.08" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (8 samples, 0.02%)</title><rect x="234.8" y="117" width="0.2" height="15.0" fill="rgb(252,93,44)" rx="2" ry="2" />
<text  x="237.76" y="127.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%)</title><rect x="570.7" y="277" width="1.3" height="15.0" fill="rgb(236,12,47)" rx="2" ry="2" />
<text  x="573.72" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,916 samples, 10.46%)</title><rect x="300.2" y="357" width="123.4" height="15.0" fill="rgb(212,228,4)" rx="2" ry="2" />
<text  x="303.22" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%)</title><rect x="1157.1" y="405" width="0.3" height="15.0" fill="rgb(245,205,10)" rx="2" ry="2" />
<text  x="1160.09" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (18 samples, 0.04%)</title><rect x="986.7" y="357" width="0.4" height="15.0" fill="rgb(229,134,11)" rx="2" ry="2" />
<text  x="989.68" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (537 samples, 1.14%)</title><rect x="901.7" y="357" width="13.5" height="15.0" fill="rgb(248,26,11)" rx="2" ry="2" />
<text  x="904.71" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (50 samples, 0.11%)</title><rect x="875.0" y="453" width="1.3" height="15.0" fill="rgb(226,157,44)" rx="2" ry="2" />
<text  x="878.00" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (9 samples, 0.02%)</title><rect x="376.8" y="197" width="0.2" height="15.0" fill="rgb(212,121,51)" rx="2" ry="2" />
<text  x="379.76" y="207.5" ></text>
</g>
<g >
<title>sstables::mc::writer::write_clustered (5 samples, 0.01%)</title><rect x="23.0" y="421" width="0.1" height="15.0" fill="rgb(220,191,34)" rx="2" ry="2" />
<text  x="25.98" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.01%)</title><rect x="18.9" y="245" width="0.2" height="15.0" fill="rgb(219,134,38)" rx="2" ry="2" />
<text  x="21.94" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,508 samples, 50.01%)</title><rect x="47.7" y="501" width="590.0" height="15.0" fill="rgb(252,162,44)" rx="2" ry="2" />
<text  x="50.65" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (4 samples, 0.01%)</title><rect x="21.4" y="357" width="0.1" height="15.0" fill="rgb(208,225,6)" rx="2" ry="2" />
<text  x="24.42" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (35 samples, 0.07%)</title><rect x="1139.4" y="341" width="0.8" height="15.0" fill="rgb(217,93,50)" rx="2" ry="2" />
<text  x="1142.37" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="1093.2" y="277" width="0.3" height="15.0" fill="rgb(226,103,23)" rx="2" ry="2" />
<text  x="1096.23" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (4 samples, 0.01%)</title><rect x="504.4" y="261" width="0.1" height="15.0" fill="rgb(225,213,10)" rx="2" ry="2" />
<text  x="507.38" y="271.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (18 samples, 0.04%)</title><rect x="1175.3" y="501" width="0.5" height="15.0" fill="rgb(231,190,47)" rx="2" ry="2" />
<text  x="1178.34" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="427.2" y="373" width="0.1" height="15.0" fill="rgb(225,80,37)" rx="2" ry="2" />
<text  x="430.16" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="660.9" y="469" width="0.1" height="15.0" fill="rgb(254,212,21)" rx="2" ry="2" />
<text  x="663.86" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="769.4" y="405" width="0.2" height="15.0" fill="rgb(237,226,27)" rx="2" ry="2" />
<text  x="772.37" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (4 samples, 0.01%)</title><rect x="413.0" y="213" width="0.1" height="15.0" fill="rgb(244,57,13)" rx="2" ry="2" />
<text  x="416.03" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (44 samples, 0.09%)</title><rect x="1176.9" y="517" width="1.1" height="15.0" fill="rgb(240,152,22)" rx="2" ry="2" />
<text  x="1179.87" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (132 samples, 0.28%)</title><rect x="216.5" y="117" width="3.3" height="15.0" fill="rgb(240,100,22)" rx="2" ry="2" />
<text  x="219.46" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="827.7" y="293" width="0.2" height="15.0" fill="rgb(252,94,33)" rx="2" ry="2" />
<text  x="830.73" y="303.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (9 samples, 0.02%)</title><rect x="591.3" y="437" width="0.2" height="15.0" fill="rgb(249,138,28)" rx="2" ry="2" />
<text  x="594.28" y="447.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (6 samples, 0.01%)</title><rect x="314.4" y="213" width="0.1" height="15.0" fill="rgb(254,124,5)" rx="2" ry="2" />
<text  x="317.36" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (10 samples, 0.02%)</title><rect x="1129.8" y="389" width="0.2" height="15.0" fill="rgb(224,173,6)" rx="2" ry="2" />
<text  x="1132.78" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (4 samples, 0.01%)</title><rect x="43.1" y="501" width="0.1" height="15.0" fill="rgb(228,210,23)" rx="2" ry="2" />
<text  x="46.06" y="511.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (80 samples, 0.17%)</title><rect x="327.5" y="181" width="2.0" height="15.0" fill="rgb(235,184,51)" rx="2" ry="2" />
<text  x="330.46" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (76 samples, 0.16%)</title><rect x="993.1" y="309" width="1.9" height="15.0" fill="rgb(209,109,13)" rx="2" ry="2" />
<text  x="996.10" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (15 samples, 0.03%)</title><rect x="666.6" y="469" width="0.4" height="15.0" fill="rgb(219,197,33)" rx="2" ry="2" />
<text  x="669.63" y="479.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="426.4" y="373" width="0.8" height="15.0" fill="rgb(223,79,38)" rx="2" ry="2" />
<text  x="429.44" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (13 samples, 0.03%)</title><rect x="1173.8" y="421" width="0.3" height="15.0" fill="rgb(231,133,16)" rx="2" ry="2" />
<text  x="1176.81" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (10 samples, 0.02%)</title><rect x="546.3" y="405" width="0.3" height="15.0" fill="rgb(205,92,39)" rx="2" ry="2" />
<text  x="549.32" y="415.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (28 samples, 0.06%)</title><rect x="100.1" y="421" width="0.7" height="15.0" fill="rgb(206,0,1)" rx="2" ry="2" />
<text  x="103.14" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (25 samples, 0.05%)</title><rect x="203.5" y="101" width="0.6" height="15.0" fill="rgb(206,172,0)" rx="2" ry="2" />
<text  x="206.46" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="633.0" y="469" width="0.3" height="15.0" fill="rgb(228,160,23)" rx="2" ry="2" />
<text  x="636.05" y="479.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="295.6" y="389" width="0.1" height="15.0" fill="rgb(218,55,25)" rx="2" ry="2" />
<text  x="298.56" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (43 samples, 0.09%)</title><rect x="926.1" y="341" width="1.1" height="15.0" fill="rgb(209,80,30)" rx="2" ry="2" />
<text  x="929.11" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (25 samples, 0.05%)</title><rect x="722.9" y="501" width="0.6" height="15.0" fill="rgb(215,179,12)" rx="2" ry="2" />
<text  x="725.91" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (442 samples, 0.94%)</title><rect x="280.7" y="325" width="11.1" height="15.0" fill="rgb(211,200,48)" rx="2" ry="2" />
<text  x="283.67" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (24 samples, 0.05%)</title><rect x="1044.2" y="261" width="0.6" height="15.0" fill="rgb(240,191,8)" rx="2" ry="2" />
<text  x="1047.21" y="271.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (12 samples, 0.03%)</title><rect x="174.2" y="181" width="0.3" height="15.0" fill="rgb(221,3,31)" rx="2" ry="2" />
<text  x="177.19" y="191.5" ></text>
</g>
<g >
<title>query::digester::digester (22 samples, 0.05%)</title><rect x="603.4" y="405" width="0.5" height="15.0" fill="rgb(254,151,17)" rx="2" ry="2" />
<text  x="606.38" y="415.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (691 samples, 1.47%)</title><rect x="746.7" y="421" width="17.4" height="15.0" fill="rgb(231,224,34)" rx="2" ry="2" />
<text  x="749.71" y="431.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="832.9" y="261" width="0.3" height="15.0" fill="rgb(208,190,15)" rx="2" ry="2" />
<text  x="835.88" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (32 samples, 0.07%)</title><rect x="680.5" y="453" width="0.8" height="15.0" fill="rgb(236,172,44)" rx="2" ry="2" />
<text  x="683.46" y="463.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,368 samples, 22.06%)</title><rect x="881.0" y="501" width="260.3" height="15.0" fill="rgb(218,124,41)" rx="2" ry="2" />
<text  x="884.05" y="511.5" >seastar::lambda_task&lt;seastar::exec..</text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="875.4" y="421" width="0.6" height="15.0" fill="rgb(245,182,53)" rx="2" ry="2" />
<text  x="878.35" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (7 samples, 0.01%)</title><rect x="912.6" y="309" width="0.2" height="15.0" fill="rgb(251,29,8)" rx="2" ry="2" />
<text  x="915.63" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (108 samples, 0.23%)</title><rect x="1083.9" y="229" width="2.7" height="15.0" fill="rgb(231,127,5)" rx="2" ry="2" />
<text  x="1086.90" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (6 samples, 0.01%)</title><rect x="466.3" y="325" width="0.1" height="15.0" fill="rgb(222,228,27)" rx="2" ry="2" />
<text  x="469.30" y="335.5" ></text>
</g>
<g >
<title>free (103 samples, 0.22%)</title><rect x="408.2" y="181" width="2.6" height="15.0" fill="rgb(251,200,40)" rx="2" ry="2" />
<text  x="411.21" y="191.5" ></text>
</g>
<g >
<title>database::find_uuid (175 samples, 0.37%)</title><rect x="838.6" y="357" width="4.4" height="15.0" fill="rgb(247,150,38)" rx="2" ry="2" />
<text  x="841.63" y="367.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (86 samples, 0.18%)</title><rect x="204.3" y="101" width="2.2" height="15.0" fill="rgb(242,42,14)" rx="2" ry="2" />
<text  x="207.34" y="111.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="844.4" y="293" width="0.4" height="15.0" fill="rgb(233,74,0)" rx="2" ry="2" />
<text  x="847.40" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,537 samples, 9.65%)</title><rect x="145.9" y="309" width="113.9" height="15.0" fill="rgb(244,25,38)" rx="2" ry="2" />
<text  x="148.87" y="319.5" >partition_snap..</text>
</g>
<g >
<title>bytes_view_hasher::update (19 samples, 0.04%)</title><rect x="742.6" y="293" width="0.5" height="15.0" fill="rgb(248,97,28)" rx="2" ry="2" />
<text  x="745.59" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="639.6" y="485" width="0.1" height="15.0" fill="rgb(217,219,1)" rx="2" ry="2" />
<text  x="642.60" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (121 samples, 0.26%)</title><rect x="1012.1" y="261" width="3.1" height="15.0" fill="rgb(208,23,21)" rx="2" ry="2" />
<text  x="1015.13" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="674.3" y="469" width="0.3" height="15.0" fill="rgb(217,131,22)" rx="2" ry="2" />
<text  x="677.34" y="479.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (12 samples, 0.03%)</title><rect x="300.5" y="325" width="0.3" height="15.0" fill="rgb(223,187,27)" rx="2" ry="2" />
<text  x="303.50" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt; (8 samples, 0.02%)</title><rect x="869.3" y="389" width="0.2" height="15.0" fill="rgb(253,33,47)" rx="2" ry="2" />
<text  x="872.30" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (22 samples, 0.05%)</title><rect x="757.3" y="293" width="0.6" height="15.0" fill="rgb(217,170,48)" rx="2" ry="2" />
<text  x="760.32" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::shared_ptr_count_for&lt;cql3::metadata&amp;&gt; (4 samples, 0.01%)</title><rect x="662.1" y="453" width="0.1" height="15.0" fill="rgb(239,192,38)" rx="2" ry="2" />
<text  x="665.14" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (9 samples, 0.02%)</title><rect x="163.2" y="197" width="0.2" height="15.0" fill="rgb(229,60,11)" rx="2" ry="2" />
<text  x="166.22" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (6 samples, 0.01%)</title><rect x="1108.3" y="421" width="0.2" height="15.0" fill="rgb(210,48,2)" rx="2" ry="2" />
<text  x="1111.32" y="431.5" ></text>
</g>
<g >
<title>_start (4 samples, 0.01%)</title><rect x="1178.1" y="629" width="0.1" height="15.0" fill="rgb(205,85,25)" rx="2" ry="2" />
<text  x="1181.13" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (17 samples, 0.04%)</title><rect x="612.7" y="437" width="0.4" height="15.0" fill="rgb(227,113,4)" rx="2" ry="2" />
<text  x="615.66" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%)</title><rect x="639.4" y="485" width="0.1" height="15.0" fill="rgb(234,201,5)" rx="2" ry="2" />
<text  x="642.40" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (147 samples, 0.31%)</title><rect x="839.2" y="325" width="3.6" height="15.0" fill="rgb(253,163,9)" rx="2" ry="2" />
<text  x="842.16" y="335.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,163 samples, 15.24%)</title><rect x="114.9" y="389" width="179.9" height="15.0" fill="rgb(239,72,12)" rx="2" ry="2" />
<text  x="117.95" y="399.5" >merging_reader&lt;mutation..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (63 samples, 0.13%)</title><rect x="771.4" y="357" width="1.5" height="15.0" fill="rgb(245,116,21)" rx="2" ry="2" />
<text  x="774.36" y="367.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (4 samples, 0.01%)</title><rect x="966.8" y="389" width="0.1" height="15.0" fill="rgb(234,195,17)" rx="2" ry="2" />
<text  x="969.77" y="399.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (4,895 samples, 10.41%)</title><rect x="300.4" y="341" width="122.9" height="15.0" fill="rgb(205,79,39)" rx="2" ry="2" />
<text  x="303.40" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (15 samples, 0.03%)</title><rect x="633.4" y="485" width="0.3" height="15.0" fill="rgb(236,27,38)" rx="2" ry="2" />
<text  x="636.37" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (14 samples, 0.03%)</title><rect x="449.3" y="261" width="0.4" height="15.0" fill="rgb(224,10,27)" rx="2" ry="2" />
<text  x="452.33" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (10 samples, 0.02%)</title><rect x="162.8" y="197" width="0.2" height="15.0" fill="rgb(239,197,28)" rx="2" ry="2" />
<text  x="165.77" y="207.5" ></text>
</g>
<g >
<title>operator new (47 samples, 0.10%)</title><rect x="730.4" y="421" width="1.1" height="15.0" fill="rgb(242,74,0)" rx="2" ry="2" />
<text  x="733.37" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (48 samples, 0.10%)</title><rect x="628.1" y="421" width="1.2" height="15.0" fill="rgb(219,204,23)" rx="2" ry="2" />
<text  x="631.05" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (49 samples, 0.10%)</title><rect x="658.3" y="453" width="1.2" height="15.0" fill="rgb(247,13,33)" rx="2" ry="2" />
<text  x="661.30" y="463.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="506.4" y="229" width="0.1" height="15.0" fill="rgb(237,157,26)" rx="2" ry="2" />
<text  x="509.38" y="239.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="1153.5" y="437" width="0.9" height="15.0" fill="rgb(238,141,13)" rx="2" ry="2" />
<text  x="1156.53" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.03%)</title><rect x="592.4" y="405" width="0.3" height="15.0" fill="rgb(219,26,4)" rx="2" ry="2" />
<text  x="595.41" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%)</title><rect x="402.8" y="213" width="0.1" height="15.0" fill="rgb(227,121,42)" rx="2" ry="2" />
<text  x="405.84" y="223.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (9 samples, 0.02%)</title><rect x="46.7" y="485" width="0.2" height="15.0" fill="rgb(212,68,47)" rx="2" ry="2" />
<text  x="49.72" y="495.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="820.8" y="245" width="0.9" height="15.0" fill="rgb(250,30,43)" rx="2" ry="2" />
<text  x="823.81" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="46.0" y="485" width="0.1" height="15.0" fill="rgb(243,115,37)" rx="2" ry="2" />
<text  x="48.97" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (6 samples, 0.01%)</title><rect x="998.7" y="277" width="0.1" height="15.0" fill="rgb(214,54,54)" rx="2" ry="2" />
<text  x="1001.68" y="287.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (12 samples, 0.03%)</title><rect x="16.4" y="293" width="0.3" height="15.0" fill="rgb(207,157,50)" rx="2" ry="2" />
<text  x="19.35" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.08%)</title><rect x="854.7" y="437" width="0.9" height="15.0" fill="rgb(238,63,7)" rx="2" ry="2" />
<text  x="857.72" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="98.3" y="421" width="0.6" height="15.0" fill="rgb(236,221,38)" rx="2" ry="2" />
<text  x="101.26" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (30 samples, 0.06%)</title><rect x="716.3" y="421" width="0.8" height="15.0" fill="rgb(237,15,38)" rx="2" ry="2" />
<text  x="719.31" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (6 samples, 0.01%)</title><rect x="1118.1" y="405" width="0.2" height="15.0" fill="rgb(220,25,38)" rx="2" ry="2" />
<text  x="1121.11" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (20 samples, 0.04%)</title><rect x="1177.4" y="485" width="0.6" height="15.0" fill="rgb(219,173,40)" rx="2" ry="2" />
<text  x="1180.45" y="495.5" ></text>
</g>
<g >
<title>dht::shard_of (14 samples, 0.03%)</title><rect x="1010.3" y="277" width="0.3" height="15.0" fill="rgb(216,155,29)" rx="2" ry="2" />
<text  x="1013.30" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (1,965 samples, 4.18%)</title><rect x="1004.8" y="309" width="49.3" height="15.0" fill="rgb(210,219,25)" rx="2" ry="2" />
<text  x="1007.80" y="319.5" >serv..</text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (4 samples, 0.01%)</title><rect x="20.1" y="309" width="0.1" height="15.0" fill="rgb(247,195,37)" rx="2" ry="2" />
<text  x="23.07" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (23 samples, 0.05%)</title><rect x="952.1" y="341" width="0.5" height="15.0" fill="rgb(225,165,44)" rx="2" ry="2" />
<text  x="955.06" y="351.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="22.3" y="341" width="0.1" height="15.0" fill="rgb(216,2,42)" rx="2" ry="2" />
<text  x="25.30" y="351.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (14 samples, 0.03%)</title><rect x="929.1" y="357" width="0.4" height="15.0" fill="rgb(230,89,17)" rx="2" ry="2" />
<text  x="932.12" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (330 samples, 0.70%)</title><rect x="591.5" y="437" width="8.3" height="15.0" fill="rgb(215,77,22)" rx="2" ry="2" />
<text  x="594.50" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="782.7" y="325" width="0.1" height="15.0" fill="rgb(208,190,2)" rx="2" ry="2" />
<text  x="785.68" y="335.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="715.4" y="421" width="0.2" height="15.0" fill="rgb(246,36,8)" rx="2" ry="2" />
<text  x="718.38" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (5 samples, 0.01%)</title><rect x="250.2" y="197" width="0.1" height="15.0" fill="rgb(236,226,34)" rx="2" ry="2" />
<text  x="253.17" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="928.0" y="373" width="0.1" height="15.0" fill="rgb(210,2,5)" rx="2" ry="2" />
<text  x="930.99" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (38 samples, 0.08%)</title><rect x="954.4" y="389" width="1.0" height="15.0" fill="rgb(235,92,28)" rx="2" ry="2" />
<text  x="957.45" y="399.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (128 samples, 0.27%)</title><rect x="758.2" y="325" width="3.2" height="15.0" fill="rgb(205,112,34)" rx="2" ry="2" />
<text  x="761.23" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (5 samples, 0.01%)</title><rect x="881.6" y="309" width="0.1" height="15.0" fill="rgb(205,130,34)" rx="2" ry="2" />
<text  x="884.60" y="319.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,558 samples, 3.31%)</title><rect x="790.1" y="357" width="39.1" height="15.0" fill="rgb(217,110,13)" rx="2" ry="2" />
<text  x="793.11" y="367.5" >ser..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="638.8" y="485" width="0.1" height="15.0" fill="rgb(241,2,44)" rx="2" ry="2" />
<text  x="641.79" y="495.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.13%)</title><rect x="990.2" y="293" width="1.5" height="15.0" fill="rgb(217,102,28)" rx="2" ry="2" />
<text  x="993.24" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="690.6" y="453" width="0.5" height="15.0" fill="rgb(212,7,37)" rx="2" ry="2" />
<text  x="693.55" y="463.5" ></text>
</g>
<g >
<title>row_tombstone::apply (16 samples, 0.03%)</title><rect x="398.1" y="213" width="0.4" height="15.0" fill="rgb(241,7,42)" rx="2" ry="2" />
<text  x="401.10" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (118 samples, 0.25%)</title><rect x="1130.7" y="421" width="3.0" height="15.0" fill="rgb(217,205,10)" rx="2" ry="2" />
<text  x="1133.71" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (7 samples, 0.01%)</title><rect x="23.6" y="517" width="0.2" height="15.0" fill="rgb(216,97,25)" rx="2" ry="2" />
<text  x="26.63" y="527.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="866.2" y="325" width="0.2" height="15.0" fill="rgb(243,28,8)" rx="2" ry="2" />
<text  x="869.19" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="1130.2" y="421" width="0.1" height="15.0" fill="rgb(213,157,0)" rx="2" ry="2" />
<text  x="1133.21" y="431.5" ></text>
</g>
<g >
<title>all (47,009 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(210,95,39)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (29 samples, 0.06%)</title><rect x="1094.5" y="293" width="0.7" height="15.0" fill="rgb(238,212,30)" rx="2" ry="2" />
<text  x="1097.51" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (10 samples, 0.02%)</title><rect x="833.4" y="389" width="0.3" height="15.0" fill="rgb(239,104,4)" rx="2" ry="2" />
<text  x="836.43" y="399.5" ></text>
</g>
<g >
<title>perf_simple_que (47,009 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(216,38,0)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="696.9" y="485" width="1.0" height="15.0" fill="rgb(249,169,23)" rx="2" ry="2" />
<text  x="699.85" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (14 samples, 0.03%)</title><rect x="608.9" y="405" width="0.4" height="15.0" fill="rgb(241,56,10)" rx="2" ry="2" />
<text  x="611.95" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1166.1" y="453" width="0.2" height="15.0" fill="rgb(234,41,33)" rx="2" ry="2" />
<text  x="1169.10" y="463.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (26 samples, 0.06%)</title><rect x="627.3" y="421" width="0.7" height="15.0" fill="rgb(205,73,54)" rx="2" ry="2" />
<text  x="630.35" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (6 samples, 0.01%)</title><rect x="533.8" y="277" width="0.1" height="15.0" fill="rgb(224,111,31)" rx="2" ry="2" />
<text  x="536.77" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (4 samples, 0.01%)</title><rect x="331.1" y="197" width="0.1" height="15.0" fill="rgb(206,50,11)" rx="2" ry="2" />
<text  x="334.12" y="207.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (15 samples, 0.03%)</title><rect x="140.2" y="229" width="0.4" height="15.0" fill="rgb(234,137,14)" rx="2" ry="2" />
<text  x="143.18" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (17 samples, 0.04%)</title><rect x="1139.8" y="293" width="0.4" height="15.0" fill="rgb(212,46,51)" rx="2" ry="2" />
<text  x="1142.82" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (44 samples, 0.09%)</title><rect x="961.3" y="405" width="1.2" height="15.0" fill="rgb(248,48,43)" rx="2" ry="2" />
<text  x="964.35" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (36 samples, 0.08%)</title><rect x="808.9" y="181" width="0.9" height="15.0" fill="rgb(209,96,51)" rx="2" ry="2" />
<text  x="811.88" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (4 samples, 0.01%)</title><rect x="620.2" y="437" width="0.1" height="15.0" fill="rgb(237,225,26)" rx="2" ry="2" />
<text  x="623.24" y="447.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (106 samples, 0.23%)</title><rect x="597.1" y="405" width="2.6" height="15.0" fill="rgb(207,34,17)" rx="2" ry="2" />
<text  x="600.08" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (5 samples, 0.01%)</title><rect x="999.6" y="325" width="0.1" height="15.0" fill="rgb(240,35,1)" rx="2" ry="2" />
<text  x="1002.55" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="538.6" y="277" width="0.5" height="15.0" fill="rgb(225,73,46)" rx="2" ry="2" />
<text  x="541.64" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (109 samples, 0.23%)</title><rect x="815.8" y="149" width="2.7" height="15.0" fill="rgb(205,69,20)" rx="2" ry="2" />
<text  x="818.79" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="22.8" y="501" width="0.3" height="15.0" fill="rgb(226,42,53)" rx="2" ry="2" />
<text  x="25.80" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (61 samples, 0.13%)</title><rect x="1158.7" y="453" width="1.5" height="15.0" fill="rgb(245,81,5)" rx="2" ry="2" />
<text  x="1161.67" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="659.8" y="469" width="0.2" height="15.0" fill="rgb(252,37,23)" rx="2" ry="2" />
<text  x="662.78" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (38 samples, 0.08%)</title><rect x="575.2" y="277" width="0.9" height="15.0" fill="rgb(220,118,3)" rx="2" ry="2" />
<text  x="578.16" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="650.8" y="485" width="0.2" height="15.0" fill="rgb(221,119,38)" rx="2" ry="2" />
<text  x="653.79" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (211 samples, 0.45%)</title><rect x="230.8" y="213" width="5.3" height="15.0" fill="rgb(230,8,27)" rx="2" ry="2" />
<text  x="233.77" y="223.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (11 samples, 0.02%)</title><rect x="869.0" y="389" width="0.3" height="15.0" fill="rgb(216,41,7)" rx="2" ry="2" />
<text  x="872.03" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (15 samples, 0.03%)</title><rect x="50.8" y="485" width="0.4" height="15.0" fill="rgb(233,215,47)" rx="2" ry="2" />
<text  x="53.82" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="553.6" y="309" width="0.6" height="15.0" fill="rgb(232,91,12)" rx="2" ry="2" />
<text  x="556.62" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="1113.8" y="357" width="0.3" height="15.0" fill="rgb(243,124,9)" rx="2" ry="2" />
<text  x="1116.79" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator+= (5 samples, 0.01%)</title><rect x="19.0" y="149" width="0.1" height="15.0" fill="rgb(252,42,26)" rx="2" ry="2" />
<text  x="21.96" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (18 samples, 0.04%)</title><rect x="835.9" y="341" width="0.4" height="15.0" fill="rgb(238,182,14)" rx="2" ry="2" />
<text  x="838.87" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (42 samples, 0.09%)</title><rect x="1139.3" y="437" width="1.1" height="15.0" fill="rgb(227,107,53)" rx="2" ry="2" />
<text  x="1142.32" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1115.4" y="389" width="0.2" height="15.0" fill="rgb(232,196,25)" rx="2" ry="2" />
<text  x="1118.45" y="399.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (90 samples, 0.19%)</title><rect x="1131.0" y="405" width="2.3" height="15.0" fill="rgb(240,213,6)" rx="2" ry="2" />
<text  x="1134.01" y="415.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (131 samples, 0.28%)</title><rect x="1185.6" y="613" width="3.2" height="15.0" fill="rgb(205,3,6)" rx="2" ry="2" />
<text  x="1188.56" y="623.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (23 samples, 0.05%)</title><rect x="222.3" y="165" width="0.6" height="15.0" fill="rgb(225,100,37)" rx="2" ry="2" />
<text  x="225.31" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="912.1" y="309" width="0.3" height="15.0" fill="rgb(215,200,36)" rx="2" ry="2" />
<text  x="915.13" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="1063.2" y="277" width="0.6" height="15.0" fill="rgb(217,135,41)" rx="2" ry="2" />
<text  x="1066.21" y="287.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.12%)</title><rect x="568.8" y="293" width="1.4" height="15.0" fill="rgb(222,209,12)" rx="2" ry="2" />
<text  x="571.81" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (29 samples, 0.06%)</title><rect x="881.2" y="437" width="0.7" height="15.0" fill="rgb(235,208,31)" rx="2" ry="2" />
<text  x="884.18" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (27 samples, 0.06%)</title><rect x="695.1" y="309" width="0.6" height="15.0" fill="rgb(212,181,21)" rx="2" ry="2" />
<text  x="698.07" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="1153.6" y="421" width="0.8" height="15.0" fill="rgb(246,93,15)" rx="2" ry="2" />
<text  x="1156.60" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (246 samples, 0.52%)</title><rect x="454.9" y="309" width="6.2" height="15.0" fill="rgb(211,145,45)" rx="2" ry="2" />
<text  x="457.93" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (165 samples, 0.35%)</title><rect x="679.0" y="485" width="4.1" height="15.0" fill="rgb(218,204,27)" rx="2" ry="2" />
<text  x="681.98" y="495.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="630.3" y="389" width="0.5" height="15.0" fill="rgb(245,90,5)" rx="2" ry="2" />
<text  x="633.31" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (145 samples, 0.31%)</title><rect x="687.4" y="485" width="3.7" height="15.0" fill="rgb(232,59,30)" rx="2" ry="2" />
<text  x="690.44" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="712.2" y="453" width="0.2" height="15.0" fill="rgb(246,18,36)" rx="2" ry="2" />
<text  x="715.22" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (69 samples, 0.15%)</title><rect x="934.8" y="373" width="1.7" height="15.0" fill="rgb(216,119,41)" rx="2" ry="2" />
<text  x="937.77" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (7 samples, 0.01%)</title><rect x="24.0" y="517" width="0.2" height="15.0" fill="rgb(228,178,26)" rx="2" ry="2" />
<text  x="26.98" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (4 samples, 0.01%)</title><rect x="767.3" y="357" width="0.1" height="15.0" fill="rgb(218,141,36)" rx="2" ry="2" />
<text  x="770.34" y="367.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="824.9" y="277" width="0.8" height="15.0" fill="rgb(251,149,7)" rx="2" ry="2" />
<text  x="827.90" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (7 samples, 0.01%)</title><rect x="954.6" y="373" width="0.1" height="15.0" fill="rgb(254,95,53)" rx="2" ry="2" />
<text  x="957.57" y="383.5" ></text>
</g>
<g >
<title>local_schema_registry (9 samples, 0.02%)</title><rect x="978.9" y="357" width="0.2" height="15.0" fill="rgb(205,146,25)" rx="2" ry="2" />
<text  x="981.92" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="135.2" y="229" width="0.1" height="15.0" fill="rgb(209,207,9)" rx="2" ry="2" />
<text  x="138.18" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="578.1" y="341" width="0.1" height="15.0" fill="rgb(245,138,47)" rx="2" ry="2" />
<text  x="581.07" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (9 samples, 0.02%)</title><rect x="637.3" y="453" width="0.2" height="15.0" fill="rgb(254,228,11)" rx="2" ry="2" />
<text  x="640.31" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (12 samples, 0.03%)</title><rect x="176.9" y="133" width="0.3" height="15.0" fill="rgb(251,179,36)" rx="2" ry="2" />
<text  x="179.88" y="143.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (199 samples, 0.42%)</title><rect x="16.3" y="421" width="5.0" height="15.0" fill="rgb(241,158,52)" rx="2" ry="2" />
<text  x="19.33" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1129.9" y="373" width="0.1" height="15.0" fill="rgb(223,1,54)" rx="2" ry="2" />
<text  x="1132.91" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="763.8" y="389" width="0.3" height="15.0" fill="rgb(244,125,11)" rx="2" ry="2" />
<text  x="766.83" y="399.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="148.0" y="245" width="0.3" height="15.0" fill="rgb(216,126,38)" rx="2" ry="2" />
<text  x="151.03" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="576.3" y="293" width="0.1" height="15.0" fill="rgb(213,77,50)" rx="2" ry="2" />
<text  x="579.29" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,005 samples, 97.86%)</title><rect x="23.2" y="533" width="1154.8" height="15.0" fill="rgb(207,192,49)" rx="2" ry="2" />
<text  x="26.20" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (6 samples, 0.01%)</title><rect x="580.3" y="341" width="0.1" height="15.0" fill="rgb(215,183,51)" rx="2" ry="2" />
<text  x="583.26" y="351.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (8 samples, 0.02%)</title><rect x="1021.5" y="245" width="0.2" height="15.0" fill="rgb(208,42,24)" rx="2" ry="2" />
<text  x="1024.47" y="255.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (284 samples, 0.60%)</title><rect x="15.6" y="597" width="7.2" height="15.0" fill="rgb(246,62,32)" rx="2" ry="2" />
<text  x="18.62" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="606.5" y="389" width="0.2" height="15.0" fill="rgb(217,115,34)" rx="2" ry="2" />
<text  x="609.54" y="399.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (6 samples, 0.01%)</title><rect x="1176.1" y="405" width="0.2" height="15.0" fill="rgb(249,149,19)" rx="2" ry="2" />
<text  x="1179.12" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="544.7" y="389" width="0.3" height="15.0" fill="rgb(233,218,5)" rx="2" ry="2" />
<text  x="547.74" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="695.0" y="373" width="0.9" height="15.0" fill="rgb(244,1,15)" rx="2" ry="2" />
<text  x="698.05" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (21 samples, 0.04%)</title><rect x="961.8" y="373" width="0.6" height="15.0" fill="rgb(214,103,48)" rx="2" ry="2" />
<text  x="964.83" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (9 samples, 0.02%)</title><rect x="222.0" y="133" width="0.2" height="15.0" fill="rgb(235,145,12)" rx="2" ry="2" />
<text  x="224.98" y="143.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="1063.6" y="261" width="0.2" height="15.0" fill="rgb(234,37,42)" rx="2" ry="2" />
<text  x="1066.61" y="271.5" ></text>
</g>
<g >
<title>std::type_info::operator== (7 samples, 0.01%)</title><rect x="713.1" y="437" width="0.2" height="15.0" fill="rgb(230,158,2)" rx="2" ry="2" />
<text  x="716.15" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="413.1" y="213" width="0.3" height="15.0" fill="rgb(245,196,8)" rx="2" ry="2" />
<text  x="416.13" y="223.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (205 samples, 0.44%)</title><rect x="16.2" y="469" width="5.1" height="15.0" fill="rgb(235,37,48)" rx="2" ry="2" />
<text  x="19.17" y="479.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (118 samples, 0.25%)</title><rect x="184.7" y="101" width="3.0" height="15.0" fill="rgb(208,225,43)" rx="2" ry="2" />
<text  x="187.73" y="111.5" ></text>
</g>
<g >
<title>sstring_hash::operator (9 samples, 0.02%)</title><rect x="859.6" y="389" width="0.3" height="15.0" fill="rgb(230,136,48)" rx="2" ry="2" />
<text  x="862.64" y="399.5" ></text>
</g>
<g >
<title>dht::tri_compare (99 samples, 0.21%)</title><rect x="481.5" y="261" width="2.5" height="15.0" fill="rgb(214,66,16)" rx="2" ry="2" />
<text  x="484.53" y="271.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.17%)</title><rect x="993.1" y="325" width="1.9" height="15.0" fill="rgb(208,24,53)" rx="2" ry="2" />
<text  x="996.05" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (11 samples, 0.02%)</title><rect x="247.1" y="213" width="0.3" height="15.0" fill="rgb(245,120,14)" rx="2" ry="2" />
<text  x="250.13" y="223.5" ></text>
</g>
<g >
<title>from_hex (4 samples, 0.01%)</title><rect x="21.4" y="341" width="0.1" height="15.0" fill="rgb(212,223,23)" rx="2" ry="2" />
<text  x="24.42" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1138.3" y="453" width="0.2" height="15.0" fill="rgb(252,23,42)" rx="2" ry="2" />
<text  x="1141.34" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (5 samples, 0.01%)</title><rect x="778.6" y="405" width="0.1" height="15.0" fill="rgb(220,31,48)" rx="2" ry="2" />
<text  x="781.56" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (16 samples, 0.03%)</title><rect x="257.0" y="197" width="0.5" height="15.0" fill="rgb(222,182,40)" rx="2" ry="2" />
<text  x="260.05" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1037.1" y="213" width="0.1" height="15.0" fill="rgb(221,72,36)" rx="2" ry="2" />
<text  x="1040.06" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%)</title><rect x="307.4" y="261" width="0.1" height="15.0" fill="rgb(244,153,48)" rx="2" ry="2" />
<text  x="310.40" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (36 samples, 0.08%)</title><rect x="784.7" y="373" width="0.9" height="15.0" fill="rgb(211,27,12)" rx="2" ry="2" />
<text  x="787.68" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="1043.1" y="229" width="0.6" height="15.0" fill="rgb(248,36,41)" rx="2" ry="2" />
<text  x="1046.11" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry&gt;::operator (8 samples, 0.02%)</title><rect x="74.4" y="389" width="0.2" height="15.0" fill="rgb(207,188,46)" rx="2" ry="2" />
<text  x="77.36" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="768.6" y="373" width="0.3" height="15.0" fill="rgb(210,18,2)" rx="2" ry="2" />
<text  x="771.62" y="383.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (5 samples, 0.01%)</title><rect x="752.9" y="309" width="0.2" height="15.0" fill="rgb(232,154,43)" rx="2" ry="2" />
<text  x="755.93" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (4 samples, 0.01%)</title><rect x="776.1" y="341" width="0.1" height="15.0" fill="rgb(235,138,34)" rx="2" ry="2" />
<text  x="779.13" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (4 samples, 0.01%)</title><rect x="874.5" y="469" width="0.1" height="15.0" fill="rgb(239,198,26)" rx="2" ry="2" />
<text  x="877.52" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (55 samples, 0.12%)</title><rect x="948.2" y="405" width="1.4" height="15.0" fill="rgb(210,59,33)" rx="2" ry="2" />
<text  x="951.20" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="804.7" y="229" width="0.4" height="15.0" fill="rgb(226,184,35)" rx="2" ry="2" />
<text  x="807.72" y="239.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (33 samples, 0.07%)</title><rect x="717.1" y="421" width="0.8" height="15.0" fill="rgb(213,92,21)" rx="2" ry="2" />
<text  x="720.09" y="431.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%)</title><rect x="840.7" y="277" width="0.5" height="15.0" fill="rgb(236,122,48)" rx="2" ry="2" />
<text  x="843.69" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="143.0" y="261" width="0.2" height="15.0" fill="rgb(207,22,35)" rx="2" ry="2" />
<text  x="146.01" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (4 samples, 0.01%)</title><rect x="279.3" y="341" width="0.1" height="15.0" fill="rgb(225,208,13)" rx="2" ry="2" />
<text  x="282.34" y="351.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="1170.5" y="453" width="0.4" height="15.0" fill="rgb(251,197,0)" rx="2" ry="2" />
<text  x="1173.52" y="463.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="767.2" y="341" width="0.1" height="15.0" fill="rgb(254,43,40)" rx="2" ry="2" />
<text  x="770.19" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (17 samples, 0.04%)</title><rect x="705.8" y="485" width="0.4" height="15.0" fill="rgb(238,48,37)" rx="2" ry="2" />
<text  x="708.82" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (306 samples, 0.65%)</title><rect x="508.0" y="245" width="7.7" height="15.0" fill="rgb(233,155,52)" rx="2" ry="2" />
<text  x="510.99" y="255.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (14 samples, 0.03%)</title><rect x="1036.4" y="213" width="0.4" height="15.0" fill="rgb(207,217,13)" rx="2" ry="2" />
<text  x="1039.40" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::expression::operator= (5 samples, 0.01%)</title><rect x="19.4" y="293" width="0.1" height="15.0" fill="rgb(251,134,37)" rx="2" ry="2" />
<text  x="22.39" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="1105.4" y="373" width="0.4" height="15.0" fill="rgb(208,186,46)" rx="2" ry="2" />
<text  x="1108.43" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (4 samples, 0.01%)</title><rect x="443.5" y="309" width="0.1" height="15.0" fill="rgb(234,110,41)" rx="2" ry="2" />
<text  x="446.50" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.03%)</title><rect x="1035.5" y="197" width="0.4" height="15.0" fill="rgb(210,181,47)" rx="2" ry="2" />
<text  x="1038.47" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="857.9" y="357" width="0.1" height="15.0" fill="rgb(223,10,24)" rx="2" ry="2" />
<text  x="860.91" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (50 samples, 0.11%)</title><rect x="516.4" y="229" width="1.3" height="15.0" fill="rgb(230,188,17)" rx="2" ry="2" />
<text  x="519.42" y="239.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="624.2" y="373" width="0.9" height="15.0" fill="rgb(220,15,9)" rx="2" ry="2" />
<text  x="627.16" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (171 samples, 0.36%)</title><rect x="70.3" y="405" width="4.3" height="15.0" fill="rgb(209,196,8)" rx="2" ry="2" />
<text  x="73.27" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (16 samples, 0.03%)</title><rect x="54.9" y="469" width="0.4" height="15.0" fill="rgb(215,188,31)" rx="2" ry="2" />
<text  x="57.93" y="479.5" ></text>
</g>
<g >
<title>schema_registry::get (149 samples, 0.32%)</title><rect x="981.3" y="357" width="3.8" height="15.0" fill="rgb(215,203,49)" rx="2" ry="2" />
<text  x="984.33" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (17 samples, 0.04%)</title><rect x="177.2" y="133" width="0.4" height="15.0" fill="rgb(226,118,51)" rx="2" ry="2" />
<text  x="180.18" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (186 samples, 0.40%)</title><rect x="1088.5" y="261" width="4.7" height="15.0" fill="rgb(242,191,35)" rx="2" ry="2" />
<text  x="1091.49" y="271.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (30 samples, 0.06%)</title><rect x="1045.0" y="261" width="0.7" height="15.0" fill="rgb(211,192,5)" rx="2" ry="2" />
<text  x="1047.96" y="271.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (5 samples, 0.01%)</title><rect x="47.0" y="437" width="0.1" height="15.0" fill="rgb(214,166,51)" rx="2" ry="2" />
<text  x="49.97" y="447.5" ></text>
</g>
<g >
<title>__dynamic_cast (12 samples, 0.03%)</title><rect x="654.5" y="469" width="0.3" height="15.0" fill="rgb(222,113,44)" rx="2" ry="2" />
<text  x="657.48" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="556.8" y="421" width="0.1" height="15.0" fill="rgb(211,47,22)" rx="2" ry="2" />
<text  x="559.81" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="427.7" y="373" width="0.1" height="15.0" fill="rgb(221,58,33)" rx="2" ry="2" />
<text  x="430.69" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="554.9" y="389" width="0.6" height="15.0" fill="rgb(242,17,40)" rx="2" ry="2" />
<text  x="557.85" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="804.6" y="229" width="0.1" height="15.0" fill="rgb(215,90,13)" rx="2" ry="2" />
<text  x="807.62" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%)</title><rect x="434.4" y="357" width="0.2" height="15.0" fill="rgb(212,179,41)" rx="2" ry="2" />
<text  x="437.37" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (443 samples, 0.94%)</title><rect x="507.3" y="261" width="11.1" height="15.0" fill="rgb(210,142,31)" rx="2" ry="2" />
<text  x="510.26" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="860.2" y="405" width="1.3" height="15.0" fill="rgb(229,78,19)" rx="2" ry="2" />
<text  x="863.17" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="690.0" y="469" width="0.1" height="15.0" fill="rgb(207,13,53)" rx="2" ry="2" />
<text  x="693.00" y="479.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (105 samples, 0.22%)</title><rect x="547.5" y="389" width="2.7" height="15.0" fill="rgb(225,130,44)" rx="2" ry="2" />
<text  x="550.53" y="399.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,289 samples, 11.25%)</title><rect x="734.5" y="453" width="132.7" height="15.0" fill="rgb(218,85,27)" rx="2" ry="2" />
<text  x="737.48" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>seastar::gate::leave (4 samples, 0.01%)</title><rect x="613.8" y="437" width="0.1" height="15.0" fill="rgb(238,32,24)" rx="2" ry="2" />
<text  x="616.84" y="447.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="425.8" y="373" width="0.6" height="15.0" fill="rgb(241,127,53)" rx="2" ry="2" />
<text  x="428.81" y="383.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%)</title><rect x="617.5" y="437" width="0.2" height="15.0" fill="rgb(251,63,14)" rx="2" ry="2" />
<text  x="620.46" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (16 samples, 0.03%)</title><rect x="820.3" y="213" width="0.4" height="15.0" fill="rgb(234,23,1)" rx="2" ry="2" />
<text  x="823.25" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="551.3" y="341" width="0.7" height="15.0" fill="rgb(216,61,2)" rx="2" ry="2" />
<text  x="554.34" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (10 samples, 0.02%)</title><rect x="847.6" y="389" width="0.2" height="15.0" fill="rgb(242,156,50)" rx="2" ry="2" />
<text  x="850.56" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="675.3" y="469" width="0.2" height="15.0" fill="rgb(222,6,2)" rx="2" ry="2" />
<text  x="678.34" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (4 samples, 0.01%)</title><rect x="808.6" y="181" width="0.1" height="15.0" fill="rgb(248,23,41)" rx="2" ry="2" />
<text  x="811.56" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (4 samples, 0.01%)</title><rect x="21.8" y="341" width="0.1" height="15.0" fill="rgb(205,61,54)" rx="2" ry="2" />
<text  x="24.77" y="351.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (8 samples, 0.02%)</title><rect x="250.0" y="165" width="0.2" height="15.0" fill="rgb(232,189,7)" rx="2" ry="2" />
<text  x="252.97" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (4 samples, 0.01%)</title><rect x="1138.0" y="437" width="0.1" height="15.0" fill="rgb(206,89,16)" rx="2" ry="2" />
<text  x="1141.01" y="447.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (12 samples, 0.03%)</title><rect x="1139.8" y="181" width="0.3" height="15.0" fill="rgb(253,32,49)" rx="2" ry="2" />
<text  x="1142.85" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="999.8" y="325" width="0.2" height="15.0" fill="rgb(225,49,12)" rx="2" ry="2" />
<text  x="1002.76" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (623 samples, 1.33%)</title><rect x="381.9" y="181" width="15.6" height="15.0" fill="rgb(206,199,8)" rx="2" ry="2" />
<text  x="384.88" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="1162.6" y="469" width="0.1" height="15.0" fill="rgb(228,4,20)" rx="2" ry="2" />
<text  x="1165.59" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (6 samples, 0.01%)</title><rect x="413.8" y="261" width="0.1" height="15.0" fill="rgb(209,22,20)" rx="2" ry="2" />
<text  x="416.76" y="271.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (6 samples, 0.01%)</title><rect x="64.8" y="405" width="0.2" height="15.0" fill="rgb(238,130,53)" rx="2" ry="2" />
<text  x="67.85" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (238 samples, 0.51%)</title><rect x="638.1" y="501" width="5.9" height="15.0" fill="rgb(225,131,35)" rx="2" ry="2" />
<text  x="641.07" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (344 samples, 0.73%)</title><rect x="1068.1" y="341" width="8.6" height="15.0" fill="rgb(248,122,16)" rx="2" ry="2" />
<text  x="1071.06" y="351.5" ></text>
</g>
<g >
<title>abstract_type::from_string (4 samples, 0.01%)</title><rect x="21.4" y="373" width="0.1" height="15.0" fill="rgb(211,183,30)" rx="2" ry="2" />
<text  x="24.42" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="418.6" y="277" width="0.1" height="15.0" fill="rgb(223,42,46)" rx="2" ry="2" />
<text  x="421.58" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (26 samples, 0.06%)</title><rect x="881.2" y="405" width="0.7" height="15.0" fill="rgb(222,197,32)" rx="2" ry="2" />
<text  x="884.20" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%)</title><rect x="668.4" y="485" width="0.5" height="15.0" fill="rgb(249,71,21)" rx="2" ry="2" />
<text  x="671.39" y="495.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (53 samples, 0.11%)</title><rect x="380.5" y="181" width="1.4" height="15.0" fill="rgb(207,140,39)" rx="2" ry="2" />
<text  x="383.55" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.01%)</title><rect x="714.6" y="437" width="0.1" height="15.0" fill="rgb(237,185,28)" rx="2" ry="2" />
<text  x="717.55" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (22 samples, 0.05%)</title><rect x="418.9" y="277" width="0.5" height="15.0" fill="rgb(214,68,52)" rx="2" ry="2" />
<text  x="421.85" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (6 samples, 0.01%)</title><rect x="880.5" y="309" width="0.2" height="15.0" fill="rgb(223,135,18)" rx="2" ry="2" />
<text  x="883.55" y="319.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (7 samples, 0.01%)</title><rect x="911.9" y="309" width="0.2" height="15.0" fill="rgb(245,15,33)" rx="2" ry="2" />
<text  x="914.87" y="319.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (33 samples, 0.07%)</title><rect x="237.9" y="229" width="0.8" height="15.0" fill="rgb(252,181,51)" rx="2" ry="2" />
<text  x="240.90" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (12 samples, 0.03%)</title><rect x="625.2" y="389" width="0.3" height="15.0" fill="rgb(240,144,47)" rx="2" ry="2" />
<text  x="628.21" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1148.0" y="469" width="0.2" height="15.0" fill="rgb(220,164,26)" rx="2" ry="2" />
<text  x="1151.01" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (35 samples, 0.07%)</title><rect x="1139.4" y="325" width="0.8" height="15.0" fill="rgb(230,39,14)" rx="2" ry="2" />
<text  x="1142.37" y="335.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (31 samples, 0.07%)</title><rect x="628.3" y="405" width="0.8" height="15.0" fill="rgb(205,98,29)" rx="2" ry="2" />
<text  x="631.33" y="415.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (450 samples, 0.96%)</title><rect x="750.4" y="389" width="11.3" height="15.0" fill="rgb(219,214,51)" rx="2" ry="2" />
<text  x="753.37" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (11 samples, 0.02%)</title><rect x="1102.2" y="357" width="0.3" height="15.0" fill="rgb(240,116,51)" rx="2" ry="2" />
<text  x="1105.19" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (130 samples, 0.28%)</title><rect x="321.9" y="181" width="3.2" height="15.0" fill="rgb(230,82,16)" rx="2" ry="2" />
<text  x="324.86" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (534 samples, 1.14%)</title><rect x="1108.5" y="421" width="13.4" height="15.0" fill="rgb(243,180,5)" rx="2" ry="2" />
<text  x="1111.47" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (38 samples, 0.08%)</title><rect x="1157.7" y="373" width="0.9" height="15.0" fill="rgb(211,41,35)" rx="2" ry="2" />
<text  x="1160.67" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (40 samples, 0.09%)</title><rect x="1139.4" y="357" width="1.0" height="15.0" fill="rgb(237,225,25)" rx="2" ry="2" />
<text  x="1142.37" y="367.5" ></text>
</g>
<g >
<title>db::block_for (10 samples, 0.02%)</title><rect x="1066.1" y="325" width="0.2" height="15.0" fill="rgb(242,85,38)" rx="2" ry="2" />
<text  x="1069.10" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="667.8" y="485" width="0.6" height="15.0" fill="rgb(222,186,4)" rx="2" ry="2" />
<text  x="670.79" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (52 samples, 0.11%)</title><rect x="677.6" y="485" width="1.3" height="15.0" fill="rgb(232,88,23)" rx="2" ry="2" />
<text  x="680.63" y="495.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%)</title><rect x="374.2" y="197" width="0.2" height="15.0" fill="rgb(241,211,42)" rx="2" ry="2" />
<text  x="377.20" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (4 samples, 0.01%)</title><rect x="259.1" y="261" width="0.1" height="15.0" fill="rgb(231,74,31)" rx="2" ry="2" />
<text  x="262.06" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (115 samples, 0.24%)</title><rect x="1001.4" y="277" width="2.9" height="15.0" fill="rgb(248,74,38)" rx="2" ry="2" />
<text  x="1004.44" y="287.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (8 samples, 0.02%)</title><rect x="22.2" y="405" width="0.3" height="15.0" fill="rgb(211,78,4)" rx="2" ry="2" />
<text  x="25.25" y="415.5" ></text>
</g>
<g >
<title>query::result::result (4 samples, 0.01%)</title><rect x="601.3" y="437" width="0.1" height="15.0" fill="rgb(219,6,38)" rx="2" ry="2" />
<text  x="604.27" y="447.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (219 samples, 0.47%)</title><rect x="713.3" y="453" width="5.5" height="15.0" fill="rgb(241,89,13)" rx="2" ry="2" />
<text  x="716.32" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;static_row&gt;::_M_reset (9 samples, 0.02%)</title><rect x="404.8" y="245" width="0.2" height="15.0" fill="rgb(228,190,0)" rx="2" ry="2" />
<text  x="407.77" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="423.4" y="341" width="0.2" height="15.0" fill="rgb(248,109,6)" rx="2" ry="2" />
<text  x="426.42" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="734.4" y="453" width="0.1" height="15.0" fill="rgb(243,53,19)" rx="2" ry="2" />
<text  x="737.36" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (10 samples, 0.02%)</title><rect x="154.1" y="213" width="0.3" height="15.0" fill="rgb(232,7,15)" rx="2" ry="2" />
<text  x="157.11" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="619.4" y="421" width="0.5" height="15.0" fill="rgb(236,189,39)" rx="2" ry="2" />
<text  x="622.42" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (448 samples, 0.95%)</title><rect x="468.2" y="309" width="11.2" height="15.0" fill="rgb(223,16,19)" rx="2" ry="2" />
<text  x="471.18" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (4 samples, 0.01%)</title><rect x="312.8" y="229" width="0.1" height="15.0" fill="rgb(235,132,12)" rx="2" ry="2" />
<text  x="315.78" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (52 samples, 0.11%)</title><rect x="18.9" y="325" width="1.3" height="15.0" fill="rgb(213,119,43)" rx="2" ry="2" />
<text  x="21.89" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="699.3" y="469" width="0.1" height="15.0" fill="rgb(241,165,16)" rx="2" ry="2" />
<text  x="702.29" y="479.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (22 samples, 0.05%)</title><rect x="98.9" y="437" width="0.6" height="15.0" fill="rgb(230,140,16)" rx="2" ry="2" />
<text  x="101.91" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (6,054 samples, 12.88%)</title><rect x="120.1" y="341" width="152.0" height="15.0" fill="rgb(246,194,52)" rx="2" ry="2" />
<text  x="123.10" y="351.5" >mutation_fragment_m..</text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (4 samples, 0.01%)</title><rect x="42.7" y="469" width="0.1" height="15.0" fill="rgb(239,100,2)" rx="2" ry="2" />
<text  x="45.71" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="1075.8" y="325" width="0.1" height="15.0" fill="rgb(249,222,35)" rx="2" ry="2" />
<text  x="1078.81" y="335.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (11 samples, 0.02%)</title><rect x="1139.4" y="229" width="0.3" height="15.0" fill="rgb(233,11,28)" rx="2" ry="2" />
<text  x="1142.45" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (74 samples, 0.16%)</title><rect x="1095.3" y="325" width="1.8" height="15.0" fill="rgb(233,57,3)" rx="2" ry="2" />
<text  x="1098.27" y="335.5" ></text>
</g>
<g >
<title>schema::column_at (18 samples, 0.04%)</title><rect x="397.5" y="181" width="0.5" height="15.0" fill="rgb(220,125,43)" rx="2" ry="2" />
<text  x="400.52" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="1103.9" y="373" width="0.1" height="15.0" fill="rgb(226,170,16)" rx="2" ry="2" />
<text  x="1106.93" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="598.3" y="373" width="0.2" height="15.0" fill="rgb(213,20,1)" rx="2" ry="2" />
<text  x="601.31" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (35 samples, 0.07%)</title><rect x="1047.6" y="277" width="0.9" height="15.0" fill="rgb(238,135,54)" rx="2" ry="2" />
<text  x="1050.62" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="454.3" y="293" width="0.2" height="15.0" fill="rgb(232,213,46)" rx="2" ry="2" />
<text  x="457.32" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (66 samples, 0.14%)</title><rect x="706.4" y="485" width="1.7" height="15.0" fill="rgb(223,193,52)" rx="2" ry="2" />
<text  x="709.44" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (63 samples, 0.13%)</title><rect x="1118.9" y="405" width="1.5" height="15.0" fill="rgb(222,217,26)" rx="2" ry="2" />
<text  x="1121.86" y="415.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (7 samples, 0.01%)</title><rect x="876.4" y="453" width="0.2" height="15.0" fill="rgb(207,14,27)" rx="2" ry="2" />
<text  x="879.38" y="463.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (4 samples, 0.01%)</title><rect x="1176.6" y="501" width="0.1" height="15.0" fill="rgb(209,8,40)" rx="2" ry="2" />
<text  x="1179.57" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="622.8" y="405" width="0.2" height="15.0" fill="rgb(221,17,26)" rx="2" ry="2" />
<text  x="625.83" y="415.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%)</title><rect x="775.6" y="293" width="0.1" height="15.0" fill="rgb(224,8,23)" rx="2" ry="2" />
<text  x="778.57" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="534.0" y="309" width="0.2" height="15.0" fill="rgb(249,97,32)" rx="2" ry="2" />
<text  x="537.05" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (56 samples, 0.12%)</title><rect x="1115.9" y="341" width="1.4" height="15.0" fill="rgb(252,34,3)" rx="2" ry="2" />
<text  x="1118.93" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (4 samples, 0.01%)</title><rect x="640.6" y="469" width="0.1" height="15.0" fill="rgb(219,28,4)" rx="2" ry="2" />
<text  x="643.63" y="479.5" ></text>
</g>
<g >
<title>row::row (11 samples, 0.02%)</title><rect x="258.2" y="213" width="0.3" height="15.0" fill="rgb(222,131,26)" rx="2" ry="2" />
<text  x="261.20" y="223.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (10 samples, 0.02%)</title><rect x="1052.9" y="277" width="0.3" height="15.0" fill="rgb(226,205,38)" rx="2" ry="2" />
<text  x="1055.92" y="287.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (173 samples, 0.37%)</title><rect x="937.7" y="389" width="4.3" height="15.0" fill="rgb(244,154,7)" rx="2" ry="2" />
<text  x="940.68" y="399.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (9 samples, 0.02%)</title><rect x="545.0" y="405" width="0.2" height="15.0" fill="rgb(232,42,50)" rx="2" ry="2" />
<text  x="548.01" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (13 samples, 0.03%)</title><rect x="1176.1" y="469" width="0.3" height="15.0" fill="rgb(233,119,30)" rx="2" ry="2" />
<text  x="1179.09" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1037.8" y="229" width="0.3" height="15.0" fill="rgb(233,135,11)" rx="2" ry="2" />
<text  x="1040.78" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (47 samples, 0.10%)</title><rect x="534.3" y="309" width="1.2" height="15.0" fill="rgb(254,122,42)" rx="2" ry="2" />
<text  x="537.32" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="358.2" y="165" width="0.2" height="15.0" fill="rgb(244,204,16)" rx="2" ry="2" />
<text  x="361.16" y="175.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_push_back_aux&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (8 samples, 0.02%)</title><rect x="16.4" y="261" width="0.2" height="15.0" fill="rgb(234,158,52)" rx="2" ry="2" />
<text  x="19.40" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (31 samples, 0.07%)</title><rect x="1138.5" y="405" width="0.8" height="15.0" fill="rgb(236,206,42)" rx="2" ry="2" />
<text  x="1141.52" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (12 samples, 0.03%)</title><rect x="590.0" y="373" width="0.3" height="15.0" fill="rgb(230,42,17)" rx="2" ry="2" />
<text  x="593.02" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (16 samples, 0.03%)</title><rect x="309.1" y="245" width="0.4" height="15.0" fill="rgb(230,0,30)" rx="2" ry="2" />
<text  x="312.09" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="694.2" y="485" width="0.2" height="15.0" fill="rgb(228,93,51)" rx="2" ry="2" />
<text  x="697.24" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,208 samples, 2.57%)</title><rect x="1144.4" y="501" width="30.3" height="15.0" fill="rgb(240,213,10)" rx="2" ry="2" />
<text  x="1147.42" y="511.5" >se..</text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="498.0" y="309" width="0.3" height="15.0" fill="rgb(210,191,5)" rx="2" ry="2" />
<text  x="501.05" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26 samples, 0.06%)</title><rect x="365.7" y="149" width="0.6" height="15.0" fill="rgb(232,152,33)" rx="2" ry="2" />
<text  x="368.66" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="616.5" y="421" width="0.1" height="15.0" fill="rgb(234,209,15)" rx="2" ry="2" />
<text  x="619.45" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (542 samples, 1.15%)</title><rect x="65.7" y="437" width="13.6" height="15.0" fill="rgb(248,90,43)" rx="2" ry="2" />
<text  x="68.73" y="447.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (345 samples, 0.73%)</title><rect x="212.0" y="165" width="8.6" height="15.0" fill="rgb(238,39,52)" rx="2" ry="2" />
<text  x="214.97" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="851.8" y="357" width="0.5" height="15.0" fill="rgb(239,39,43)" rx="2" ry="2" />
<text  x="854.83" y="367.5" ></text>
</g>
<g >
<title>frozen_schema::frozen_schema (4 samples, 0.01%)</title><rect x="47.1" y="453" width="0.1" height="15.0" fill="rgb(218,221,6)" rx="2" ry="2" />
<text  x="50.13" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (813 samples, 1.73%)</title><rect x="1076.8" y="341" width="20.4" height="15.0" fill="rgb(236,18,48)" rx="2" ry="2" />
<text  x="1079.84" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (17 samples, 0.04%)</title><rect x="680.8" y="437" width="0.5" height="15.0" fill="rgb(211,144,20)" rx="2" ry="2" />
<text  x="683.84" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="549.7" y="357" width="0.3" height="15.0" fill="rgb(210,50,40)" rx="2" ry="2" />
<text  x="552.66" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%)</title><rect x="163.9" y="229" width="0.1" height="15.0" fill="rgb(214,159,12)" rx="2" ry="2" />
<text  x="166.90" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::got_response (4 samples, 0.01%)</title><rect x="722.7" y="485" width="0.1" height="15.0" fill="rgb(219,162,6)" rx="2" ry="2" />
<text  x="725.73" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (9 samples, 0.02%)</title><rect x="894.9" y="421" width="0.2" height="15.0" fill="rgb(246,203,43)" rx="2" ry="2" />
<text  x="897.88" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (16 samples, 0.03%)</title><rect x="62.6" y="437" width="0.4" height="15.0" fill="rgb(213,16,52)" rx="2" ry="2" />
<text  x="65.64" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (4 samples, 0.01%)</title><rect x="874.4" y="469" width="0.1" height="15.0" fill="rgb(241,46,20)" rx="2" ry="2" />
<text  x="877.42" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (33 samples, 0.07%)</title><rect x="264.1" y="277" width="0.8" height="15.0" fill="rgb(216,80,7)" rx="2" ry="2" />
<text  x="267.08" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (6 samples, 0.01%)</title><rect x="617.7" y="437" width="0.2" height="15.0" fill="rgb(213,33,32)" rx="2" ry="2" />
<text  x="620.73" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (15 samples, 0.03%)</title><rect x="646.7" y="485" width="0.4" height="15.0" fill="rgb(253,194,29)" rx="2" ry="2" />
<text  x="649.70" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (72 samples, 0.15%)</title><rect x="1156.8" y="437" width="1.8" height="15.0" fill="rgb(240,228,14)" rx="2" ry="2" />
<text  x="1159.82" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (15 samples, 0.03%)</title><rect x="272.3" y="341" width="0.4" height="15.0" fill="rgb(208,150,25)" rx="2" ry="2" />
<text  x="275.31" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (185 samples, 0.39%)</title><rect x="738.6" y="373" width="4.6" height="15.0" fill="rgb(238,34,5)" rx="2" ry="2" />
<text  x="741.57" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (15 samples, 0.03%)</title><rect x="80.0" y="453" width="0.4" height="15.0" fill="rgb(216,54,41)" rx="2" ry="2" />
<text  x="83.03" y="463.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="830.6" y="325" width="0.1" height="15.0" fill="rgb(244,86,8)" rx="2" ry="2" />
<text  x="833.62" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (7 samples, 0.01%)</title><rect x="867.2" y="453" width="0.2" height="15.0" fill="rgb(206,184,40)" rx="2" ry="2" />
<text  x="870.24" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,279 samples, 15.48%)</title><rect x="112.9" y="405" width="182.8" height="15.0" fill="rgb(208,150,33)" rx="2" ry="2" />
<text  x="115.94" y="415.5" >flat_mutation_reader::p..</text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="843.3" y="325" width="0.2" height="15.0" fill="rgb(224,212,26)" rx="2" ry="2" />
<text  x="846.27" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (40 samples, 0.09%)</title><rect x="1139.4" y="389" width="1.0" height="15.0" fill="rgb(228,159,53)" rx="2" ry="2" />
<text  x="1142.37" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="639.7" y="485" width="0.1" height="15.0" fill="rgb(219,35,2)" rx="2" ry="2" />
<text  x="642.72" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (618 samples, 1.31%)</title><rect x="1025.4" y="245" width="15.5" height="15.0" fill="rgb(209,214,11)" rx="2" ry="2" />
<text  x="1028.43" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1120.5" y="405" width="0.2" height="15.0" fill="rgb(222,124,6)" rx="2" ry="2" />
<text  x="1123.54" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (170 samples, 0.36%)</title><rect x="195.8" y="69" width="4.2" height="15.0" fill="rgb(240,213,1)" rx="2" ry="2" />
<text  x="198.78" y="79.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (8 samples, 0.02%)</title><rect x="249.4" y="165" width="0.2" height="15.0" fill="rgb(209,195,47)" rx="2" ry="2" />
<text  x="252.44" y="175.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (10 samples, 0.02%)</title><rect x="680.6" y="437" width="0.2" height="15.0" fill="rgb(223,166,54)" rx="2" ry="2" />
<text  x="683.59" y="447.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (60 samples, 0.13%)</title><rect x="876.3" y="469" width="1.5" height="15.0" fill="rgb(206,219,20)" rx="2" ry="2" />
<text  x="879.33" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (35 samples, 0.07%)</title><rect x="395.0" y="165" width="0.9" height="15.0" fill="rgb(252,94,27)" rx="2" ry="2" />
<text  x="398.01" y="175.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (226 samples, 0.48%)</title><rect x="764.1" y="421" width="5.6" height="15.0" fill="rgb(251,40,9)" rx="2" ry="2" />
<text  x="767.05" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (78 samples, 0.17%)</title><rect x="251.5" y="213" width="1.9" height="15.0" fill="rgb(210,122,5)" rx="2" ry="2" />
<text  x="254.45" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="1158.1" y="357" width="0.5" height="15.0" fill="rgb(230,156,9)" rx="2" ry="2" />
<text  x="1161.07" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="1146.6" y="469" width="0.1" height="15.0" fill="rgb(242,113,53)" rx="2" ry="2" />
<text  x="1149.65" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (17 samples, 0.04%)</title><rect x="914.7" y="325" width="0.4" height="15.0" fill="rgb(249,24,15)" rx="2" ry="2" />
<text  x="917.66" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="796.8" y="309" width="0.2" height="15.0" fill="rgb(233,213,3)" rx="2" ry="2" />
<text  x="799.76" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (12 samples, 0.03%)</title><rect x="947.4" y="405" width="0.3" height="15.0" fill="rgb(254,146,34)" rx="2" ry="2" />
<text  x="950.39" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="873.8" y="437" width="0.1" height="15.0" fill="rgb(248,163,11)" rx="2" ry="2" />
<text  x="876.77" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (84 samples, 0.18%)</title><rect x="765.4" y="405" width="2.1" height="15.0" fill="rgb(249,186,41)" rx="2" ry="2" />
<text  x="768.43" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="924.4" y="341" width="0.3" height="15.0" fill="rgb(219,43,45)" rx="2" ry="2" />
<text  x="927.40" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (4 samples, 0.01%)</title><rect x="1049.2" y="261" width="0.1" height="15.0" fill="rgb(233,45,41)" rx="2" ry="2" />
<text  x="1052.18" y="271.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%)</title><rect x="226.1" y="133" width="0.3" height="15.0" fill="rgb(217,110,40)" rx="2" ry="2" />
<text  x="229.15" y="143.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="44.6" y="485" width="0.3" height="15.0" fill="rgb(229,141,33)" rx="2" ry="2" />
<text  x="47.59" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="1037.5" y="229" width="0.2" height="15.0" fill="rgb(254,197,28)" rx="2" ry="2" />
<text  x="1040.53" y="239.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (14 samples, 0.03%)</title><rect x="831.5" y="309" width="0.4" height="15.0" fill="rgb(210,214,2)" rx="2" ry="2" />
<text  x="834.55" y="319.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="252.5" y="181" width="0.7" height="15.0" fill="rgb(246,63,48)" rx="2" ry="2" />
<text  x="255.48" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="587.6" y="325" width="0.3" height="15.0" fill="rgb(222,156,29)" rx="2" ry="2" />
<text  x="590.64" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="1119.8" y="373" width="0.1" height="15.0" fill="rgb(219,169,43)" rx="2" ry="2" />
<text  x="1122.79" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.01%)</title><rect x="1037.4" y="229" width="0.1" height="15.0" fill="rgb(214,207,15)" rx="2" ry="2" />
<text  x="1040.43" y="239.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%)</title><rect x="632.5" y="437" width="0.1" height="15.0" fill="rgb(247,223,16)" rx="2" ry="2" />
<text  x="635.47" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (30 samples, 0.06%)</title><rect x="809.0" y="165" width="0.8" height="15.0" fill="rgb(250,191,54)" rx="2" ry="2" />
<text  x="812.03" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (13 samples, 0.03%)</title><rect x="835.5" y="341" width="0.4" height="15.0" fill="rgb(221,84,0)" rx="2" ry="2" />
<text  x="838.54" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="821.6" y="229" width="0.1" height="15.0" fill="rgb(248,177,46)" rx="2" ry="2" />
<text  x="824.58" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (154 samples, 0.33%)</title><rect x="159.8" y="229" width="3.8" height="15.0" fill="rgb(249,200,31)" rx="2" ry="2" />
<text  x="162.78" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (4 samples, 0.01%)</title><rect x="1124.5" y="421" width="0.1" height="15.0" fill="rgb(231,18,16)" rx="2" ry="2" />
<text  x="1127.48" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (14 samples, 0.03%)</title><rect x="1033.5" y="149" width="0.3" height="15.0" fill="rgb(227,60,21)" rx="2" ry="2" />
<text  x="1036.49" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%)</title><rect x="879.3" y="501" width="0.2" height="15.0" fill="rgb(236,68,22)" rx="2" ry="2" />
<text  x="882.29" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="417.0" y="245" width="0.2" height="15.0" fill="rgb(240,106,54)" rx="2" ry="2" />
<text  x="420.05" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (152 samples, 0.32%)</title><rect x="868.4" y="421" width="3.8" height="15.0" fill="rgb(248,159,1)" rx="2" ry="2" />
<text  x="871.40" y="431.5" ></text>
</g>
<g >
<title>query::result::result (35 samples, 0.07%)</title><rect x="600.2" y="421" width="0.9" height="15.0" fill="rgb(241,97,3)" rx="2" ry="2" />
<text  x="603.24" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%)</title><rect x="513.8" y="165" width="0.2" height="15.0" fill="rgb(241,141,20)" rx="2" ry="2" />
<text  x="516.79" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (714 samples, 1.52%)</title><rect x="1077.3" y="325" width="18.0" height="15.0" fill="rgb(205,98,6)" rx="2" ry="2" />
<text  x="1080.34" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="722.1" y="485" width="0.3" height="15.0" fill="rgb(219,102,50)" rx="2" ry="2" />
<text  x="725.11" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="974.5" y="373" width="0.1" height="15.0" fill="rgb(213,229,8)" rx="2" ry="2" />
<text  x="977.45" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (88 samples, 0.19%)</title><rect x="962.5" y="389" width="2.2" height="15.0" fill="rgb(224,88,26)" rx="2" ry="2" />
<text  x="965.45" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="1136.0" y="421" width="0.4" height="15.0" fill="rgb(237,47,44)" rx="2" ry="2" />
<text  x="1138.96" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (319 samples, 0.68%)</title><rect x="810.7" y="197" width="8.0" height="15.0" fill="rgb(231,23,37)" rx="2" ry="2" />
<text  x="813.66" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (4 samples, 0.01%)</title><rect x="77.9" y="421" width="0.1" height="15.0" fill="rgb(237,119,51)" rx="2" ry="2" />
<text  x="80.87" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (78 samples, 0.17%)</title><rect x="245.2" y="197" width="1.9" height="15.0" fill="rgb(249,208,35)" rx="2" ry="2" />
<text  x="248.18" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (4 samples, 0.01%)</title><rect x="1133.8" y="421" width="0.1" height="15.0" fill="rgb(241,198,22)" rx="2" ry="2" />
<text  x="1136.85" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (6 samples, 0.01%)</title><rect x="47.0" y="453" width="0.1" height="15.0" fill="rgb(227,126,34)" rx="2" ry="2" />
<text  x="49.97" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="834.5" y="357" width="0.1" height="15.0" fill="rgb(207,72,16)" rx="2" ry="2" />
<text  x="837.46" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (21 samples, 0.04%)</title><rect x="73.1" y="373" width="0.5" height="15.0" fill="rgb(238,73,39)" rx="2" ry="2" />
<text  x="76.11" y="383.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (16 samples, 0.03%)</title><rect x="11.7" y="581" width="0.4" height="15.0" fill="rgb(206,155,8)" rx="2" ry="2" />
<text  x="14.71" y="591.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (4 samples, 0.01%)</title><rect x="400.2" y="229" width="0.1" height="15.0" fill="rgb(233,175,14)" rx="2" ry="2" />
<text  x="403.15" y="239.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (778 samples, 1.66%)</title><rect x="558.7" y="357" width="19.5" height="15.0" fill="rgb(241,131,23)" rx="2" ry="2" />
<text  x="561.70" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (4 samples, 0.01%)</title><rect x="37.4" y="437" width="0.1" height="15.0" fill="rgb(216,63,52)" rx="2" ry="2" />
<text  x="40.39" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (56 samples, 0.12%)</title><rect x="204.4" y="85" width="1.4" height="15.0" fill="rgb(221,114,42)" rx="2" ry="2" />
<text  x="207.41" y="95.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (80 samples, 0.17%)</title><rect x="421.2" y="277" width="2.0" height="15.0" fill="rgb(234,181,16)" rx="2" ry="2" />
<text  x="424.16" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="1146.7" y="485" width="0.2" height="15.0" fill="rgb(225,144,19)" rx="2" ry="2" />
<text  x="1149.75" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (47 samples, 0.10%)</title><rect x="236.7" y="213" width="1.2" height="15.0" fill="rgb(224,44,32)" rx="2" ry="2" />
<text  x="239.72" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="772.6" y="325" width="0.3" height="15.0" fill="rgb(236,150,1)" rx="2" ry="2" />
<text  x="775.56" y="335.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (12 samples, 0.03%)</title><rect x="758.4" y="277" width="0.3" height="15.0" fill="rgb(214,13,30)" rx="2" ry="2" />
<text  x="761.43" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (22 samples, 0.05%)</title><rect x="960.8" y="405" width="0.5" height="15.0" fill="rgb(254,19,23)" rx="2" ry="2" />
<text  x="963.80" y="415.5" ></text>
</g>
<g >
<title>query::querier&lt; (10 samples, 0.02%)</title><rect x="61.5" y="453" width="0.3" height="15.0" fill="rgb(231,66,23)" rx="2" ry="2" />
<text  x="64.53" y="463.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (4 samples, 0.01%)</title><rect x="1067.2" y="341" width="0.1" height="15.0" fill="rgb(225,78,8)" rx="2" ry="2" />
<text  x="1070.20" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (21 samples, 0.04%)</title><rect x="249.6" y="181" width="0.6" height="15.0" fill="rgb(216,69,20)" rx="2" ry="2" />
<text  x="252.64" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10 samples, 0.02%)</title><rect x="625.5" y="421" width="0.3" height="15.0" fill="rgb(206,204,10)" rx="2" ry="2" />
<text  x="628.54" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="301.4" y="277" width="0.8" height="15.0" fill="rgb(254,122,21)" rx="2" ry="2" />
<text  x="304.40" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (74 samples, 0.16%)</title><rect x="840.0" y="309" width="1.8" height="15.0" fill="rgb(237,77,2)" rx="2" ry="2" />
<text  x="842.96" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (24 samples, 0.05%)</title><rect x="1020.9" y="213" width="0.6" height="15.0" fill="rgb(245,204,25)" rx="2" ry="2" />
<text  x="1023.87" y="223.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (13 samples, 0.03%)</title><rect x="1041.3" y="245" width="0.3" height="15.0" fill="rgb(240,212,16)" rx="2" ry="2" />
<text  x="1044.30" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (5 samples, 0.01%)</title><rect x="1032.8" y="149" width="0.1" height="15.0" fill="rgb(253,139,20)" rx="2" ry="2" />
<text  x="1035.81" y="159.5" ></text>
</g>
<g >
<title>absl::container_internal::probe_seq&lt;16ul&gt;::probe_seq (4 samples, 0.01%)</title><rect x="1063.8" y="293" width="0.1" height="15.0" fill="rgb(219,151,22)" rx="2" ry="2" />
<text  x="1066.79" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (64 samples, 0.14%)</title><rect x="730.1" y="437" width="1.6" height="15.0" fill="rgb(215,97,45)" rx="2" ry="2" />
<text  x="733.11" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="1060.3" y="293" width="0.6" height="15.0" fill="rgb(242,177,31)" rx="2" ry="2" />
<text  x="1063.28" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (4 samples, 0.01%)</title><rect x="32.5" y="485" width="0.1" height="15.0" fill="rgb(251,35,45)" rx="2" ry="2" />
<text  x="35.49" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (206 samples, 0.44%)</title><rect x="738.0" y="405" width="5.2" height="15.0" fill="rgb(248,179,21)" rx="2" ry="2" />
<text  x="741.05" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%)</title><rect x="934.0" y="389" width="0.3" height="15.0" fill="rgb(244,181,13)" rx="2" ry="2" />
<text  x="936.99" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (10 samples, 0.02%)</title><rect x="580.0" y="341" width="0.3" height="15.0" fill="rgb(226,57,53)" rx="2" ry="2" />
<text  x="583.01" y="351.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (61 samples, 0.13%)</title><rect x="808.4" y="213" width="1.5" height="15.0" fill="rgb(240,129,22)" rx="2" ry="2" />
<text  x="811.41" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (23 samples, 0.05%)</title><rect x="127.4" y="277" width="0.6" height="15.0" fill="rgb(205,117,50)" rx="2" ry="2" />
<text  x="130.40" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10 samples, 0.02%)</title><rect x="832.3" y="277" width="0.3" height="15.0" fill="rgb(229,5,3)" rx="2" ry="2" />
<text  x="835.30" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (10 samples, 0.02%)</title><rect x="825.9" y="277" width="0.3" height="15.0" fill="rgb(227,14,47)" rx="2" ry="2" />
<text  x="828.90" y="287.5" ></text>
</g>
<g >
<title>free (35 samples, 0.07%)</title><rect x="412.1" y="197" width="0.9" height="15.0" fill="rgb(219,124,53)" rx="2" ry="2" />
<text  x="415.08" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (84 samples, 0.18%)</title><rect x="1099.3" y="357" width="2.1" height="15.0" fill="rgb(207,138,8)" rx="2" ry="2" />
<text  x="1102.28" y="367.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (4 samples, 0.01%)</title><rect x="234.9" y="101" width="0.1" height="15.0" fill="rgb(237,170,49)" rx="2" ry="2" />
<text  x="237.86" y="111.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (4 samples, 0.01%)</title><rect x="695.6" y="261" width="0.1" height="15.0" fill="rgb(228,47,23)" rx="2" ry="2" />
<text  x="698.65" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (10 samples, 0.02%)</title><rect x="1053.2" y="293" width="0.2" height="15.0" fill="rgb(213,75,25)" rx="2" ry="2" />
<text  x="1056.17" y="303.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (12 samples, 0.03%)</title><rect x="1139.8" y="213" width="0.3" height="15.0" fill="rgb(217,13,33)" rx="2" ry="2" />
<text  x="1142.85" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="429.4" y="421" width="0.5" height="15.0" fill="rgb(221,140,28)" rx="2" ry="2" />
<text  x="432.42" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="880.5" y="405" width="0.3" height="15.0" fill="rgb(232,114,53)" rx="2" ry="2" />
<text  x="883.50" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (26 samples, 0.06%)</title><rect x="721.1" y="453" width="0.6" height="15.0" fill="rgb(223,220,0)" rx="2" ry="2" />
<text  x="724.05" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%)</title><rect x="944.1" y="389" width="0.5" height="15.0" fill="rgb(253,226,46)" rx="2" ry="2" />
<text  x="947.08" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (71 samples, 0.15%)</title><rect x="16.3" y="373" width="1.8" height="15.0" fill="rgb(222,219,43)" rx="2" ry="2" />
<text  x="19.33" y="383.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (7 samples, 0.01%)</title><rect x="363.5" y="165" width="0.2" height="15.0" fill="rgb(211,117,29)" rx="2" ry="2" />
<text  x="366.48" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.06%)</title><rect x="881.2" y="469" width="0.7" height="15.0" fill="rgb(226,51,23)" rx="2" ry="2" />
<text  x="884.18" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="142.5" y="261" width="0.5" height="15.0" fill="rgb(214,164,14)" rx="2" ry="2" />
<text  x="145.51" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="805.2" y="229" width="0.2" height="15.0" fill="rgb(251,1,53)" rx="2" ry="2" />
<text  x="808.19" y="239.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (4 samples, 0.01%)</title><rect x="729.3" y="469" width="0.1" height="15.0" fill="rgb(234,52,2)" rx="2" ry="2" />
<text  x="732.34" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (78 samples, 0.17%)</title><rect x="674.7" y="485" width="2.0" height="15.0" fill="rgb(232,98,43)" rx="2" ry="2" />
<text  x="677.74" y="495.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="537.3" y="245" width="0.3" height="15.0" fill="rgb(231,108,20)" rx="2" ry="2" />
<text  x="540.33" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (203 samples, 0.43%)</title><rect x="223.2" y="181" width="5.1" height="15.0" fill="rgb(244,192,53)" rx="2" ry="2" />
<text  x="226.21" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (8 samples, 0.02%)</title><rect x="618.8" y="437" width="0.2" height="15.0" fill="rgb(206,162,45)" rx="2" ry="2" />
<text  x="621.84" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (22 samples, 0.05%)</title><rect x="142.0" y="261" width="0.5" height="15.0" fill="rgb(251,27,50)" rx="2" ry="2" />
<text  x="144.96" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,011 samples, 12.79%)</title><rect x="957.4" y="421" width="150.9" height="15.0" fill="rgb(254,48,11)" rx="2" ry="2" />
<text  x="960.43" y="431.5" >cql3::statements::s..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (23 samples, 0.05%)</title><rect x="847.9" y="421" width="0.6" height="15.0" fill="rgb(220,69,39)" rx="2" ry="2" />
<text  x="850.89" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (89 samples, 0.19%)</title><rect x="160.5" y="197" width="2.2" height="15.0" fill="rgb(226,49,2)" rx="2" ry="2" />
<text  x="163.46" y="207.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (6 samples, 0.01%)</title><rect x="696.0" y="485" width="0.2" height="15.0" fill="rgb(228,211,3)" rx="2" ry="2" />
<text  x="699.03" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (26 samples, 0.06%)</title><rect x="410.1" y="165" width="0.7" height="15.0" fill="rgb(214,3,39)" rx="2" ry="2" />
<text  x="413.14" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (71 samples, 0.15%)</title><rect x="307.9" y="261" width="1.8" height="15.0" fill="rgb(237,203,21)" rx="2" ry="2" />
<text  x="310.88" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%)</title><rect x="990.3" y="277" width="1.4" height="15.0" fill="rgb(230,182,25)" rx="2" ry="2" />
<text  x="993.29" y="287.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1053.8" y="293" width="0.2" height="15.0" fill="rgb(232,88,34)" rx="2" ry="2" />
<text  x="1056.85" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="823.0" y="197" width="0.1" height="15.0" fill="rgb(250,183,36)" rx="2" ry="2" />
<text  x="825.96" y="207.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4 samples, 0.01%)</title><rect x="259.8" y="309" width="0.1" height="15.0" fill="rgb(222,77,39)" rx="2" ry="2" />
<text  x="262.76" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="614.5" y="421" width="0.2" height="15.0" fill="rgb(254,57,14)" rx="2" ry="2" />
<text  x="617.47" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (28 samples, 0.06%)</title><rect x="527.4" y="341" width="0.7" height="15.0" fill="rgb(220,10,35)" rx="2" ry="2" />
<text  x="530.39" y="351.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="504.2" y="261" width="0.2" height="15.0" fill="rgb(234,56,52)" rx="2" ry="2" />
<text  x="507.17" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (19 samples, 0.04%)</title><rect x="219.8" y="117" width="0.5" height="15.0" fill="rgb(219,173,52)" rx="2" ry="2" />
<text  x="222.80" y="127.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="285.3" y="293" width="0.1" height="15.0" fill="rgb(214,201,10)" rx="2" ry="2" />
<text  x="288.29" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="537.6" y="245" width="0.2" height="15.0" fill="rgb(222,108,38)" rx="2" ry="2" />
<text  x="540.64" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="873.9" y="453" width="0.4" height="15.0" fill="rgb(236,203,5)" rx="2" ry="2" />
<text  x="876.95" y="463.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (20 samples, 0.04%)</title><rect x="657.1" y="421" width="0.5" height="15.0" fill="rgb(247,176,26)" rx="2" ry="2" />
<text  x="660.12" y="431.5" ></text>
</g>
<g >
<title>auth::get_permissions (7 samples, 0.01%)</title><rect x="22.3" y="373" width="0.2" height="15.0" fill="rgb(244,187,1)" rx="2" ry="2" />
<text  x="25.27" y="383.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="102.4" y="389" width="0.7" height="15.0" fill="rgb(227,31,7)" rx="2" ry="2" />
<text  x="105.40" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="420.3" y="277" width="0.1" height="15.0" fill="rgb(209,186,53)" rx="2" ry="2" />
<text  x="423.31" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (7 samples, 0.01%)</title><rect x="981.1" y="309" width="0.2" height="15.0" fill="rgb(220,40,31)" rx="2" ry="2" />
<text  x="984.10" y="319.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (151 samples, 0.32%)</title><rect x="401.0" y="245" width="3.8" height="15.0" fill="rgb(232,11,21)" rx="2" ry="2" />
<text  x="403.98" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="41.2" y="453" width="0.4" height="15.0" fill="rgb(205,187,15)" rx="2" ry="2" />
<text  x="44.18" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="1052.2" y="197" width="0.3" height="15.0" fill="rgb(215,97,13)" rx="2" ry="2" />
<text  x="1055.17" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="818.7" y="197" width="0.1" height="15.0" fill="rgb(219,189,30)" rx="2" ry="2" />
<text  x="821.67" y="207.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (10 samples, 0.02%)</title><rect x="757.6" y="277" width="0.3" height="15.0" fill="rgb(234,214,43)" rx="2" ry="2" />
<text  x="760.63" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (5 samples, 0.01%)</title><rect x="853.1" y="437" width="0.1" height="15.0" fill="rgb(218,136,11)" rx="2" ry="2" />
<text  x="856.06" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (22 samples, 0.05%)</title><rect x="19.5" y="293" width="0.6" height="15.0" fill="rgb(244,229,2)" rx="2" ry="2" />
<text  x="22.51" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (5 samples, 0.01%)</title><rect x="705.6" y="485" width="0.2" height="15.0" fill="rgb(224,90,6)" rx="2" ry="2" />
<text  x="708.64" y="495.5" ></text>
</g>
<g >
<title>sstring_hash::operator (35 samples, 0.07%)</title><rect x="1064.0" y="293" width="0.9" height="15.0" fill="rgb(251,223,39)" rx="2" ry="2" />
<text  x="1067.02" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (25 samples, 0.05%)</title><rect x="40.1" y="453" width="0.6" height="15.0" fill="rgb(230,160,45)" rx="2" ry="2" />
<text  x="43.12" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="1074.6" y="293" width="0.5" height="15.0" fill="rgb(237,61,26)" rx="2" ry="2" />
<text  x="1077.63" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="886.4" y="469" width="0.1" height="15.0" fill="rgb(223,80,39)" rx="2" ry="2" />
<text  x="889.37" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="974.6" y="373" width="0.1" height="15.0" fill="rgb(229,1,17)" rx="2" ry="2" />
<text  x="977.58" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (4 samples, 0.01%)</title><rect x="791.0" y="341" width="0.1" height="15.0" fill="rgb(222,54,44)" rx="2" ry="2" />
<text  x="793.96" y="351.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="880.5" y="421" width="0.3" height="15.0" fill="rgb(246,183,10)" rx="2" ry="2" />
<text  x="883.50" y="431.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (656 samples, 1.40%)</title><rect x="183.8" y="117" width="16.4" height="15.0" fill="rgb(230,229,37)" rx="2" ry="2" />
<text  x="186.78" y="127.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (16 samples, 0.03%)</title><rect x="1048.6" y="277" width="0.4" height="15.0" fill="rgb(231,150,11)" rx="2" ry="2" />
<text  x="1051.58" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="946.7" y="389" width="0.2" height="15.0" fill="rgb(208,96,32)" rx="2" ry="2" />
<text  x="949.74" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (7 samples, 0.01%)</title><rect x="699.0" y="469" width="0.2" height="15.0" fill="rgb(234,196,26)" rx="2" ry="2" />
<text  x="702.01" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (5 samples, 0.01%)</title><rect x="919.1" y="373" width="0.2" height="15.0" fill="rgb(236,137,45)" rx="2" ry="2" />
<text  x="922.13" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (19 samples, 0.04%)</title><rect x="46.2" y="485" width="0.5" height="15.0" fill="rgb(222,228,30)" rx="2" ry="2" />
<text  x="49.20" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (795 samples, 1.69%)</title><rect x="378.0" y="197" width="20.0" height="15.0" fill="rgb(227,139,8)" rx="2" ry="2" />
<text  x="381.01" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (99 samples, 0.21%)</title><rect x="950.2" y="405" width="2.5" height="15.0" fill="rgb(209,177,2)" rx="2" ry="2" />
<text  x="953.18" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="1117.9" y="341" width="0.2" height="15.0" fill="rgb(229,169,39)" rx="2" ry="2" />
<text  x="1120.88" y="351.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (7 samples, 0.01%)</title><rect x="658.3" y="437" width="0.2" height="15.0" fill="rgb(223,148,54)" rx="2" ry="2" />
<text  x="661.35" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%)</title><rect x="709.9" y="469" width="0.3" height="15.0" fill="rgb(245,55,36)" rx="2" ry="2" />
<text  x="712.86" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="305.5" y="229" width="0.2" height="15.0" fill="rgb(254,92,26)" rx="2" ry="2" />
<text  x="308.52" y="239.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (35 samples, 0.07%)</title><rect x="858.6" y="357" width="0.9" height="15.0" fill="rgb(240,75,9)" rx="2" ry="2" />
<text  x="861.61" y="367.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (18 samples, 0.04%)</title><rect x="124.6" y="309" width="0.5" height="15.0" fill="rgb(249,169,49)" rx="2" ry="2" />
<text  x="127.61" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="785.1" y="357" width="0.2" height="15.0" fill="rgb(224,5,2)" rx="2" ry="2" />
<text  x="788.14" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (15 samples, 0.03%)</title><rect x="307.5" y="261" width="0.4" height="15.0" fill="rgb(213,228,34)" rx="2" ry="2" />
<text  x="310.50" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (7 samples, 0.01%)</title><rect x="962.2" y="341" width="0.2" height="15.0" fill="rgb(224,157,12)" rx="2" ry="2" />
<text  x="965.18" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="1159.0" y="421" width="1.2" height="15.0" fill="rgb(207,61,4)" rx="2" ry="2" />
<text  x="1162.02" y="431.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (4 samples, 0.01%)</title><rect x="25.2" y="517" width="0.1" height="15.0" fill="rgb(239,127,31)" rx="2" ry="2" />
<text  x="28.19" y="527.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (4 samples, 0.01%)</title><rect x="946.9" y="405" width="0.1" height="15.0" fill="rgb(254,150,11)" rx="2" ry="2" />
<text  x="949.92" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::take_value (4 samples, 0.01%)</title><rect x="546.2" y="405" width="0.1" height="15.0" fill="rgb(253,68,1)" rx="2" ry="2" />
<text  x="549.22" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (25 samples, 0.05%)</title><rect x="343.0" y="181" width="0.6" height="15.0" fill="rgb(237,202,13)" rx="2" ry="2" />
<text  x="346.00" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (20 samples, 0.04%)</title><rect x="638.9" y="485" width="0.5" height="15.0" fill="rgb(219,208,25)" rx="2" ry="2" />
<text  x="641.89" y="495.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (4 samples, 0.01%)</title><rect x="798.2" y="309" width="0.1" height="15.0" fill="rgb(210,114,31)" rx="2" ry="2" />
<text  x="801.24" y="319.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="659.5" y="469" width="0.1" height="15.0" fill="rgb(238,157,47)" rx="2" ry="2" />
<text  x="662.53" y="479.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="523.0" y="277" width="0.7" height="15.0" fill="rgb(247,175,40)" rx="2" ry="2" />
<text  x="526.03" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (238 samples, 0.51%)</title><rect x="230.2" y="229" width="5.9" height="15.0" fill="rgb(250,211,30)" rx="2" ry="2" />
<text  x="233.17" y="239.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%)</title><rect x="504.5" y="261" width="0.1" height="15.0" fill="rgb(214,54,16)" rx="2" ry="2" />
<text  x="507.48" y="271.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="554.9" y="405" width="0.6" height="15.0" fill="rgb(245,19,11)" rx="2" ry="2" />
<text  x="557.85" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (4 samples, 0.01%)</title><rect x="255.1" y="245" width="0.1" height="15.0" fill="rgb(212,158,24)" rx="2" ry="2" />
<text  x="258.14" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (66 samples, 0.14%)</title><rect x="374.8" y="197" width="1.6" height="15.0" fill="rgb(217,145,52)" rx="2" ry="2" />
<text  x="377.78" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (16 samples, 0.03%)</title><rect x="758.4" y="293" width="0.4" height="15.0" fill="rgb(247,119,26)" rx="2" ry="2" />
<text  x="761.35" y="303.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (700 samples, 1.49%)</title><rect x="128.3" y="293" width="17.6" height="15.0" fill="rgb(247,70,24)" rx="2" ry="2" />
<text  x="131.30" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (20 samples, 0.04%)</title><rect x="717.4" y="405" width="0.5" height="15.0" fill="rgb(208,225,6)" rx="2" ry="2" />
<text  x="720.41" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%)</title><rect x="331.0" y="197" width="0.1" height="15.0" fill="rgb(243,204,20)" rx="2" ry="2" />
<text  x="334.02" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="279.2" y="341" width="0.1" height="15.0" fill="rgb(238,91,7)" rx="2" ry="2" />
<text  x="282.19" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="448.0" y="229" width="1.3" height="15.0" fill="rgb(246,73,21)" rx="2" ry="2" />
<text  x="451.00" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (42 samples, 0.09%)</title><rect x="157.8" y="197" width="1.1" height="15.0" fill="rgb(225,67,17)" rx="2" ry="2" />
<text  x="160.85" y="207.5" ></text>
</g>
<g >
<title>do_cql_test (274 samples, 0.58%)</title><rect x="15.9" y="549" width="6.9" height="15.0" fill="rgb(226,46,28)" rx="2" ry="2" />
<text  x="18.87" y="559.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (443 samples, 0.94%)</title><rect x="710.6" y="469" width="11.1" height="15.0" fill="rgb(242,189,49)" rx="2" ry="2" />
<text  x="713.58" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,992 samples, 48.91%)</title><rect x="55.9" y="469" width="577.1" height="15.0" fill="rgb(205,207,14)" rx="2" ry="2" />
<text  x="58.91" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (23 samples, 0.05%)</title><rect x="115.6" y="373" width="0.5" height="15.0" fill="rgb(233,217,28)" rx="2" ry="2" />
<text  x="118.55" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="828.7" y="325" width="0.2" height="15.0" fill="rgb(225,197,40)" rx="2" ry="2" />
<text  x="831.74" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="935.4" y="357" width="0.2" height="15.0" fill="rgb(206,172,28)" rx="2" ry="2" />
<text  x="938.42" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="326.9" y="181" width="0.2" height="15.0" fill="rgb(234,7,2)" rx="2" ry="2" />
<text  x="329.88" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (21 samples, 0.04%)</title><rect x="150.5" y="245" width="0.6" height="15.0" fill="rgb(223,40,11)" rx="2" ry="2" />
<text  x="153.54" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (35 samples, 0.07%)</title><rect x="762.7" y="389" width="0.8" height="15.0" fill="rgb(249,12,35)" rx="2" ry="2" />
<text  x="765.67" y="399.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (12 samples, 0.03%)</title><rect x="1047.0" y="277" width="0.3" height="15.0" fill="rgb(234,82,51)" rx="2" ry="2" />
<text  x="1050.05" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (19 samples, 0.04%)</title><rect x="916.0" y="357" width="0.5" height="15.0" fill="rgb(207,70,44)" rx="2" ry="2" />
<text  x="919.04" y="367.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (41 samples, 0.09%)</title><rect x="497.0" y="309" width="1.0" height="15.0" fill="rgb(234,210,21)" rx="2" ry="2" />
<text  x="500.02" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (37 samples, 0.08%)</title><rect x="574.1" y="261" width="1.0" height="15.0" fill="rgb(213,152,17)" rx="2" ry="2" />
<text  x="577.13" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="720.3" y="421" width="0.4" height="15.0" fill="rgb(234,103,30)" rx="2" ry="2" />
<text  x="723.35" y="431.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%)</title><rect x="498.4" y="309" width="0.2" height="15.0" fill="rgb(213,134,2)" rx="2" ry="2" />
<text  x="501.40" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="549.5" y="341" width="0.2" height="15.0" fill="rgb(252,34,24)" rx="2" ry="2" />
<text  x="552.53" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (12 samples, 0.03%)</title><rect x="266.9" y="277" width="0.3" height="15.0" fill="rgb(218,70,41)" rx="2" ry="2" />
<text  x="269.91" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="1049.6" y="229" width="1.9" height="15.0" fill="rgb(249,70,8)" rx="2" ry="2" />
<text  x="1052.63" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="461.0" y="293" width="0.1" height="15.0" fill="rgb(218,178,31)" rx="2" ry="2" />
<text  x="464.00" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (31 samples, 0.07%)</title><rect x="67.6" y="405" width="0.8" height="15.0" fill="rgb(245,128,33)" rx="2" ry="2" />
<text  x="70.58" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (7 samples, 0.01%)</title><rect x="720.7" y="421" width="0.2" height="15.0" fill="rgb(247,33,36)" rx="2" ry="2" />
<text  x="723.73" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (4 samples, 0.01%)</title><rect x="699.2" y="469" width="0.1" height="15.0" fill="rgb(216,218,7)" rx="2" ry="2" />
<text  x="702.19" y="479.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (6 samples, 0.01%)</title><rect x="253.7" y="229" width="0.1" height="15.0" fill="rgb(228,222,11)" rx="2" ry="2" />
<text  x="256.69" y="239.5" ></text>
</g>
<g >
<title>schema::get_partitioner (9 samples, 0.02%)</title><rect x="947.0" y="405" width="0.2" height="15.0" fill="rgb(218,16,17)" rx="2" ry="2" />
<text  x="950.02" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="992.4" y="341" width="0.3" height="15.0" fill="rgb(217,38,32)" rx="2" ry="2" />
<text  x="995.43" y="351.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (466 samples, 0.99%)</title><rect x="31.3" y="501" width="11.7" height="15.0" fill="rgb(215,101,45)" rx="2" ry="2" />
<text  x="34.34" y="511.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (108 samples, 0.23%)</title><rect x="909.2" y="293" width="2.7" height="15.0" fill="rgb(220,90,40)" rx="2" ry="2" />
<text  x="912.16" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (61 samples, 0.13%)</title><rect x="862.1" y="421" width="1.6" height="15.0" fill="rgb(249,147,14)" rx="2" ry="2" />
<text  x="865.15" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (4 samples, 0.01%)</title><rect x="601.4" y="437" width="0.1" height="15.0" fill="rgb(235,134,3)" rx="2" ry="2" />
<text  x="604.39" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (4 samples, 0.01%)</title><rect x="737.5" y="389" width="0.1" height="15.0" fill="rgb(235,45,0)" rx="2" ry="2" />
<text  x="740.54" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (7 samples, 0.01%)</title><rect x="192.7" y="85" width="0.1" height="15.0" fill="rgb(221,168,15)" rx="2" ry="2" />
<text  x="195.66" y="95.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (25 samples, 0.05%)</title><rect x="1138.5" y="309" width="0.7" height="15.0" fill="rgb(242,74,26)" rx="2" ry="2" />
<text  x="1141.54" y="319.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (97 samples, 0.21%)</title><rect x="1172.3" y="453" width="2.4" height="15.0" fill="rgb(211,65,13)" rx="2" ry="2" />
<text  x="1175.30" y="463.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,437 samples, 9.44%)</title><rect x="431.1" y="405" width="111.4" height="15.0" fill="rgb(235,162,21)" rx="2" ry="2" />
<text  x="434.10" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (199 samples, 0.42%)</title><rect x="455.4" y="293" width="5.0" height="15.0" fill="rgb(215,206,24)" rx="2" ry="2" />
<text  x="458.43" y="303.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (127 samples, 0.27%)</title><rect x="311.4" y="245" width="3.2" height="15.0" fill="rgb(228,40,45)" rx="2" ry="2" />
<text  x="314.37" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,072 samples, 12.92%)</title><rect x="726.3" y="501" width="152.5" height="15.0" fill="rgb(241,128,9)" rx="2" ry="2" />
<text  x="729.35" y="511.5" >seastar::internal::..</text>
</g>
<g >
<title>operator new (16 samples, 0.03%)</title><rect x="917.4" y="325" width="0.4" height="15.0" fill="rgb(213,186,21)" rx="2" ry="2" />
<text  x="920.45" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (21 samples, 0.04%)</title><rect x="761.9" y="405" width="0.5" height="15.0" fill="rgb(214,192,47)" rx="2" ry="2" />
<text  x="764.89" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,834 samples, 3.90%)</title><rect x="1007.1" y="293" width="46.1" height="15.0" fill="rgb(253,97,47)" rx="2" ry="2" />
<text  x="1010.14" y="303.5" >serv..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="880.5" y="437" width="0.3" height="15.0" fill="rgb(235,126,17)" rx="2" ry="2" />
<text  x="883.50" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (12 samples, 0.03%)</title><rect x="227.9" y="149" width="0.3" height="15.0" fill="rgb(228,88,50)" rx="2" ry="2" />
<text  x="230.88" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="210.0" y="117" width="0.2" height="15.0" fill="rgb(238,59,25)" rx="2" ry="2" />
<text  x="213.03" y="127.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (47 samples, 0.10%)</title><rect x="748.6" y="373" width="1.2" height="15.0" fill="rgb(237,226,1)" rx="2" ry="2" />
<text  x="751.61" y="383.5" ></text>
</g>
<g >
<title>auth::resource::resource (94 samples, 0.20%)</title><rect x="783.2" y="389" width="2.4" height="15.0" fill="rgb(244,169,5)" rx="2" ry="2" />
<text  x="786.23" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (8 samples, 0.02%)</title><rect x="339.9" y="165" width="0.2" height="15.0" fill="rgb(218,109,3)" rx="2" ry="2" />
<text  x="342.88" y="175.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (9 samples, 0.02%)</title><rect x="606.8" y="421" width="0.2" height="15.0" fill="rgb(239,176,4)" rx="2" ry="2" />
<text  x="609.76" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (29 samples, 0.06%)</title><rect x="691.9" y="453" width="0.8" height="15.0" fill="rgb(244,115,15)" rx="2" ry="2" />
<text  x="694.93" y="463.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="110.8" y="421" width="0.2" height="15.0" fill="rgb(246,206,8)" rx="2" ry="2" />
<text  x="113.81" y="431.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,108 samples, 2.36%)</title><rect x="798.3" y="309" width="27.9" height="15.0" fill="rgb(238,86,37)" rx="2" ry="2" />
<text  x="801.34" y="319.5" >a..</text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;void&gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::mutate_locally (6 samples, 0.01%)</title><rect x="1139.6" y="181" width="0.1" height="15.0" fill="rgb(239,158,51)" rx="2" ry="2" />
<text  x="1142.57" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (25 samples, 0.05%)</title><rect x="879.7" y="501" width="0.6" height="15.0" fill="rgb(250,173,52)" rx="2" ry="2" />
<text  x="882.67" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (17 samples, 0.04%)</title><rect x="1146.9" y="485" width="0.4" height="15.0" fill="rgb(233,190,10)" rx="2" ry="2" />
<text  x="1149.85" y="495.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%)</title><rect x="927.1" y="325" width="0.1" height="15.0" fill="rgb(240,82,36)" rx="2" ry="2" />
<text  x="930.06" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (21 samples, 0.04%)</title><rect x="1029.3" y="165" width="0.6" height="15.0" fill="rgb(249,26,36)" rx="2" ry="2" />
<text  x="1032.32" y="175.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="854.4" y="437" width="0.3" height="15.0" fill="rgb(227,0,39)" rx="2" ry="2" />
<text  x="857.39" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="870.6" y="341" width="1.0" height="15.0" fill="rgb(208,179,16)" rx="2" ry="2" />
<text  x="873.56" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (22 samples, 0.05%)</title><rect x="712.8" y="453" width="0.5" height="15.0" fill="rgb(237,120,3)" rx="2" ry="2" />
<text  x="715.77" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="763.5" y="405" width="0.2" height="15.0" fill="rgb(237,194,54)" rx="2" ry="2" />
<text  x="766.55" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (15 samples, 0.03%)</title><rect x="789.4" y="357" width="0.3" height="15.0" fill="rgb(221,35,34)" rx="2" ry="2" />
<text  x="792.35" y="367.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,364 samples, 9.28%)</title><rect x="432.9" y="389" width="109.6" height="15.0" fill="rgb(229,39,40)" rx="2" ry="2" />
<text  x="435.94" y="399.5" >std::function..</text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (4 samples, 0.01%)</title><rect x="554.4" y="389" width="0.1" height="15.0" fill="rgb(227,224,35)" rx="2" ry="2" />
<text  x="557.35" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (31 samples, 0.07%)</title><rect x="619.2" y="437" width="0.7" height="15.0" fill="rgb(237,115,18)" rx="2" ry="2" />
<text  x="622.17" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (13 samples, 0.03%)</title><rect x="881.5" y="357" width="0.3" height="15.0" fill="rgb(213,212,48)" rx="2" ry="2" />
<text  x="884.45" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="523.0" y="261" width="0.7" height="15.0" fill="rgb(220,36,14)" rx="2" ry="2" />
<text  x="526.03" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="927.6" y="373" width="0.1" height="15.0" fill="rgb(225,196,27)" rx="2" ry="2" />
<text  x="930.61" y="383.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (44 samples, 0.09%)</title><rect x="936.6" y="389" width="1.1" height="15.0" fill="rgb(224,14,32)" rx="2" ry="2" />
<text  x="939.57" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="499.0" y="309" width="0.1" height="15.0" fill="rgb(244,224,51)" rx="2" ry="2" />
<text  x="502.03" y="319.5" ></text>
</g>
<g >
<title>local_schema_registry (20 samples, 0.04%)</title><rect x="971.1" y="373" width="0.5" height="15.0" fill="rgb(221,64,0)" rx="2" ry="2" />
<text  x="974.06" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (54 samples, 0.11%)</title><rect x="76.4" y="373" width="1.4" height="15.0" fill="rgb(224,110,44)" rx="2" ry="2" />
<text  x="79.44" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (21 samples, 0.04%)</title><rect x="727.7" y="485" width="0.5" height="15.0" fill="rgb(230,46,10)" rx="2" ry="2" />
<text  x="730.68" y="495.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (173 samples, 0.37%)</title><rect x="867.9" y="437" width="4.4" height="15.0" fill="rgb(250,210,26)" rx="2" ry="2" />
<text  x="870.92" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (15 samples, 0.03%)</title><rect x="224.1" y="149" width="0.4" height="15.0" fill="rgb(250,1,30)" rx="2" ry="2" />
<text  x="227.14" y="159.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="1121.8" y="405" width="0.1" height="15.0" fill="rgb(252,7,52)" rx="2" ry="2" />
<text  x="1124.77" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (757 samples, 1.61%)</title><rect x="900.8" y="389" width="19.0" height="15.0" fill="rgb(252,41,19)" rx="2" ry="2" />
<text  x="903.75" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (5 samples, 0.01%)</title><rect x="71.5" y="389" width="0.2" height="15.0" fill="rgb(232,71,48)" rx="2" ry="2" />
<text  x="74.55" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%)</title><rect x="631.8" y="389" width="0.4" height="15.0" fill="rgb(226,26,30)" rx="2" ry="2" />
<text  x="634.84" y="399.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="226.4" y="149" width="0.1" height="15.0" fill="rgb(222,205,22)" rx="2" ry="2" />
<text  x="229.35" y="159.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (5 samples, 0.01%)</title><rect x="1156.7" y="437" width="0.1" height="15.0" fill="rgb(234,80,8)" rx="2" ry="2" />
<text  x="1159.69" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="1123.8" y="405" width="0.3" height="15.0" fill="rgb(253,191,34)" rx="2" ry="2" />
<text  x="1126.78" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="82.2" y="453" width="0.3" height="15.0" fill="rgb(254,221,46)" rx="2" ry="2" />
<text  x="85.22" y="463.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (121 samples, 0.26%)</title><rect x="247.7" y="213" width="3.1" height="15.0" fill="rgb(221,62,21)" rx="2" ry="2" />
<text  x="250.74" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (18 samples, 0.04%)</title><rect x="598.6" y="389" width="0.5" height="15.0" fill="rgb(246,62,17)" rx="2" ry="2" />
<text  x="601.63" y="399.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (89 samples, 0.19%)</title><rect x="75.6" y="405" width="2.2" height="15.0" fill="rgb(238,137,53)" rx="2" ry="2" />
<text  x="78.57" y="415.5" ></text>
</g>
<g >
<title>compound_type&lt; (77 samples, 0.16%)</title><rect x="922.7" y="373" width="2.0" height="15.0" fill="rgb(234,208,5)" rx="2" ry="2" />
<text  x="925.74" y="383.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (33 samples, 0.07%)</title><rect x="806.8" y="149" width="0.9" height="15.0" fill="rgb(245,56,40)" rx="2" ry="2" />
<text  x="809.85" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (4 samples, 0.01%)</title><rect x="625.9" y="437" width="0.1" height="15.0" fill="rgb(254,134,52)" rx="2" ry="2" />
<text  x="628.94" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="459.6" y="277" width="0.3" height="15.0" fill="rgb(230,226,23)" rx="2" ry="2" />
<text  x="462.64" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.01%)</title><rect x="1034.3" y="165" width="0.1" height="15.0" fill="rgb(251,205,0)" rx="2" ry="2" />
<text  x="1037.35" y="175.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (39 samples, 0.08%)</title><rect x="212.4" y="149" width="1.0" height="15.0" fill="rgb(217,48,53)" rx="2" ry="2" />
<text  x="215.44" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="151.1" y="245" width="0.1" height="15.0" fill="rgb(253,16,53)" rx="2" ry="2" />
<text  x="154.07" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,659 samples, 5.66%)</title><rect x="987.8" y="357" width="66.8" height="15.0" fill="rgb(224,199,17)" rx="2" ry="2" />
<text  x="990.83" y="367.5" >service..</text>
</g>
<g >
<title>seastar::reactor::add_timer (25 samples, 0.05%)</title><rect x="1032.2" y="149" width="0.6" height="15.0" fill="rgb(207,219,21)" rx="2" ry="2" />
<text  x="1035.19" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (74 samples, 0.16%)</title><rect x="781.3" y="373" width="1.9" height="15.0" fill="rgb(237,36,51)" rx="2" ry="2" />
<text  x="784.30" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (24 samples, 0.05%)</title><rect x="428.8" y="421" width="0.6" height="15.0" fill="rgb(209,81,23)" rx="2" ry="2" />
<text  x="431.82" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (73 samples, 0.16%)</title><rect x="691.2" y="485" width="1.9" height="15.0" fill="rgb(246,210,29)" rx="2" ry="2" />
<text  x="694.23" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (9 samples, 0.02%)</title><rect x="83.6" y="453" width="0.3" height="15.0" fill="rgb(228,225,24)" rx="2" ry="2" />
<text  x="86.65" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,804 samples, 8.09%)</title><rect x="309.7" y="261" width="95.4" height="15.0" fill="rgb(247,35,25)" rx="2" ry="2" />
<text  x="312.66" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="841.2" y="293" width="0.6" height="15.0" fill="rgb(248,66,15)" rx="2" ry="2" />
<text  x="844.24" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%)</title><rect x="419.4" y="277" width="0.3" height="15.0" fill="rgb(242,155,31)" rx="2" ry="2" />
<text  x="422.41" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (45 samples, 0.10%)</title><rect x="1151.9" y="437" width="1.2" height="15.0" fill="rgb(229,26,5)" rx="2" ry="2" />
<text  x="1154.92" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="643.6" y="469" width="0.4" height="15.0" fill="rgb(249,161,9)" rx="2" ry="2" />
<text  x="646.61" y="479.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="757.0" y="277" width="0.1" height="15.0" fill="rgb(209,160,45)" rx="2" ry="2" />
<text  x="760.00" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (15 samples, 0.03%)</title><rect x="162.7" y="213" width="0.4" height="15.0" fill="rgb(243,139,38)" rx="2" ry="2" />
<text  x="165.69" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (15 samples, 0.03%)</title><rect x="718.8" y="453" width="0.4" height="15.0" fill="rgb(216,86,53)" rx="2" ry="2" />
<text  x="721.84" y="463.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (8 samples, 0.02%)</title><rect x="240.7" y="245" width="0.2" height="15.0" fill="rgb(243,79,25)" rx="2" ry="2" />
<text  x="243.66" y="255.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="834.0" y="373" width="0.6" height="15.0" fill="rgb(230,26,27)" rx="2" ry="2" />
<text  x="836.96" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (4 samples, 0.01%)</title><rect x="251.8" y="197" width="0.1" height="15.0" fill="rgb(254,59,42)" rx="2" ry="2" />
<text  x="254.78" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="144.4" y="261" width="0.1" height="15.0" fill="rgb(236,93,44)" rx="2" ry="2" />
<text  x="147.39" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="450.5" y="261" width="0.1" height="15.0" fill="rgb(239,206,10)" rx="2" ry="2" />
<text  x="453.48" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (4 samples, 0.01%)</title><rect x="259.3" y="261" width="0.1" height="15.0" fill="rgb(222,93,18)" rx="2" ry="2" />
<text  x="262.28" y="271.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (4 samples, 0.01%)</title><rect x="866.7" y="325" width="0.1" height="15.0" fill="rgb(226,29,47)" rx="2" ry="2" />
<text  x="869.69" y="335.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (31 samples, 0.07%)</title><rect x="566.4" y="293" width="0.7" height="15.0" fill="rgb(235,83,39)" rx="2" ry="2" />
<text  x="569.35" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (38 samples, 0.08%)</title><rect x="575.2" y="293" width="0.9" height="15.0" fill="rgb(218,159,8)" rx="2" ry="2" />
<text  x="578.16" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="952.5" y="309" width="0.1" height="15.0" fill="rgb(253,95,48)" rx="2" ry="2" />
<text  x="955.49" y="319.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (47 samples, 0.10%)</title><rect x="16.8" y="277" width="1.2" height="15.0" fill="rgb(230,8,37)" rx="2" ry="2" />
<text  x="19.78" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (472 samples, 1.00%)</title><rect x="652.7" y="485" width="11.9" height="15.0" fill="rgb(206,170,32)" rx="2" ry="2" />
<text  x="655.73" y="495.5" ></text>
</g>
<g >
<title>table::query (21,847 samples, 46.47%)</title><rect x="84.7" y="453" width="548.3" height="15.0" fill="rgb(215,113,52)" rx="2" ry="2" />
<text  x="87.65" y="463.5" >table::query</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="265.9" y="261" width="0.2" height="15.0" fill="rgb(220,152,10)" rx="2" ry="2" />
<text  x="268.94" y="271.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (9 samples, 0.02%)</title><rect x="203.9" y="85" width="0.2" height="15.0" fill="rgb(221,42,1)" rx="2" ry="2" />
<text  x="206.86" y="95.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="1143.5" y="501" width="0.1" height="15.0" fill="rgb(237,165,3)" rx="2" ry="2" />
<text  x="1146.49" y="511.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (10 samples, 0.02%)</title><rect x="1041.6" y="261" width="0.3" height="15.0" fill="rgb(244,151,29)" rx="2" ry="2" />
<text  x="1044.62" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (141 samples, 0.30%)</title><rect x="550.7" y="373" width="3.6" height="15.0" fill="rgb(252,192,29)" rx="2" ry="2" />
<text  x="553.74" y="383.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (8 samples, 0.02%)</title><rect x="685.5" y="469" width="0.2" height="15.0" fill="rgb(238,221,10)" rx="2" ry="2" />
<text  x="688.46" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1033.6" y="133" width="0.1" height="15.0" fill="rgb(221,130,29)" rx="2" ry="2" />
<text  x="1036.57" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (189 samples, 0.40%)</title><rect x="1170.0" y="485" width="4.7" height="15.0" fill="rgb(212,15,8)" rx="2" ry="2" />
<text  x="1172.99" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (99 samples, 0.21%)</title><rect x="820.7" y="261" width="2.4" height="15.0" fill="rgb(239,31,24)" rx="2" ry="2" />
<text  x="823.66" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (36 samples, 0.08%)</title><rect x="167.7" y="229" width="0.9" height="15.0" fill="rgb(215,131,38)" rx="2" ry="2" />
<text  x="170.71" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (18 samples, 0.04%)</title><rect x="675.6" y="469" width="0.4" height="15.0" fill="rgb(209,211,2)" rx="2" ry="2" />
<text  x="678.57" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (17 samples, 0.04%)</title><rect x="853.5" y="437" width="0.4" height="15.0" fill="rgb(237,139,25)" rx="2" ry="2" />
<text  x="856.49" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="291.3" y="277" width="0.4" height="15.0" fill="rgb(208,218,48)" rx="2" ry="2" />
<text  x="294.31" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (38 samples, 0.08%)</title><rect x="963.7" y="373" width="1.0" height="15.0" fill="rgb(232,93,35)" rx="2" ry="2" />
<text  x="966.71" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="306.0" y="293" width="0.1" height="15.0" fill="rgb(228,24,26)" rx="2" ry="2" />
<text  x="308.97" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (7 samples, 0.01%)</title><rect x="973.8" y="373" width="0.2" height="15.0" fill="rgb(251,181,3)" rx="2" ry="2" />
<text  x="976.80" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (79 samples, 0.17%)</title><rect x="371.5" y="165" width="2.0" height="15.0" fill="rgb(239,89,1)" rx="2" ry="2" />
<text  x="374.54" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,326 samples, 2.82%)</title><rect x="557.7" y="405" width="33.3" height="15.0" fill="rgb(254,105,40)" rx="2" ry="2" />
<text  x="560.69" y="415.5" >fl..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="691.7" y="469" width="0.1" height="15.0" fill="rgb(215,192,18)" rx="2" ry="2" />
<text  x="694.73" y="479.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="595.8" y="405" width="0.9" height="15.0" fill="rgb(225,51,0)" rx="2" ry="2" />
<text  x="598.85" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="1048.3" y="229" width="0.2" height="15.0" fill="rgb(254,219,13)" rx="2" ry="2" />
<text  x="1051.28" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (41 samples, 0.09%)</title><rect x="422.1" y="261" width="1.1" height="15.0" fill="rgb(231,212,18)" rx="2" ry="2" />
<text  x="425.14" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (25 samples, 0.05%)</title><rect x="543.7" y="405" width="0.6" height="15.0" fill="rgb(213,167,7)" rx="2" ry="2" />
<text  x="546.68" y="415.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (39 samples, 0.08%)</title><rect x="695.0" y="469" width="1.0" height="15.0" fill="rgb(223,89,32)" rx="2" ry="2" />
<text  x="698.00" y="479.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (117 samples, 0.25%)</title><rect x="924.7" y="373" width="2.9" height="15.0" fill="rgb(241,205,47)" rx="2" ry="2" />
<text  x="927.68" y="383.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (601 samples, 1.28%)</title><rect x="804.2" y="245" width="15.1" height="15.0" fill="rgb(236,90,0)" rx="2" ry="2" />
<text  x="807.24" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="524.9" y="309" width="0.5" height="15.0" fill="rgb(205,184,38)" rx="2" ry="2" />
<text  x="527.86" y="319.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (54 samples, 0.11%)</title><rect x="301.2" y="309" width="1.3" height="15.0" fill="rgb(221,29,32)" rx="2" ry="2" />
<text  x="304.15" y="319.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (15 samples, 0.03%)</title><rect x="1133.3" y="405" width="0.3" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="1136.27" y="415.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (4 samples, 0.01%)</title><rect x="118.2" y="357" width="0.1" height="15.0" fill="rgb(246,225,45)" rx="2" ry="2" />
<text  x="121.16" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="399.1" y="181" width="0.2" height="15.0" fill="rgb(251,31,29)" rx="2" ry="2" />
<text  x="402.10" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (4 samples, 0.01%)</title><rect x="105.1" y="405" width="0.1" height="15.0" fill="rgb(231,72,25)" rx="2" ry="2" />
<text  x="108.06" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (10 samples, 0.02%)</title><rect x="827.9" y="293" width="0.3" height="15.0" fill="rgb(224,161,3)" rx="2" ry="2" />
<text  x="830.93" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1150.5" y="485" width="0.2" height="15.0" fill="rgb(213,60,39)" rx="2" ry="2" />
<text  x="1153.47" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (678 samples, 1.44%)</title><rect x="561.0" y="341" width="17.0" height="15.0" fill="rgb(214,205,52)" rx="2" ry="2" />
<text  x="563.98" y="351.5" ></text>
</g>
<g >
<title>database::find_schema (248 samples, 0.53%)</title><rect x="836.8" y="373" width="6.2" height="15.0" fill="rgb(243,218,20)" rx="2" ry="2" />
<text  x="839.80" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (4 samples, 0.01%)</title><rect x="1114.6" y="373" width="0.1" height="15.0" fill="rgb(224,0,31)" rx="2" ry="2" />
<text  x="1117.62" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (97 samples, 0.21%)</title><rect x="1031.4" y="165" width="2.4" height="15.0" fill="rgb(215,178,18)" rx="2" ry="2" />
<text  x="1034.41" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1174.2" y="421" width="0.1" height="15.0" fill="rgb(245,30,0)" rx="2" ry="2" />
<text  x="1177.16" y="431.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="419.9" y="293" width="0.5" height="15.0" fill="rgb(229,224,33)" rx="2" ry="2" />
<text  x="422.91" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="1101.4" y="357" width="0.2" height="15.0" fill="rgb(226,175,15)" rx="2" ry="2" />
<text  x="1104.39" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="79.4" y="453" width="0.1" height="15.0" fill="rgb(248,200,26)" rx="2" ry="2" />
<text  x="82.36" y="463.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="577.6" y="325" width="0.2" height="15.0" fill="rgb(207,209,46)" rx="2" ry="2" />
<text  x="580.65" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (9 samples, 0.02%)</title><rect x="740.4" y="309" width="0.2" height="15.0" fill="rgb(212,183,35)" rx="2" ry="2" />
<text  x="743.38" y="319.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.01%)</title><rect x="632.2" y="421" width="0.2" height="15.0" fill="rgb(240,104,5)" rx="2" ry="2" />
<text  x="635.19" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (37 samples, 0.08%)</title><rect x="858.6" y="373" width="0.9" height="15.0" fill="rgb(206,97,42)" rx="2" ry="2" />
<text  x="861.61" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (28 samples, 0.06%)</title><rect x="820.0" y="245" width="0.7" height="15.0" fill="rgb(217,203,46)" rx="2" ry="2" />
<text  x="822.95" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (47 samples, 0.10%)</title><rect x="774.9" y="341" width="1.2" height="15.0" fill="rgb(240,116,28)" rx="2" ry="2" />
<text  x="777.90" y="351.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (52 samples, 0.11%)</title><rect x="781.5" y="357" width="1.3" height="15.0" fill="rgb(252,110,30)" rx="2" ry="2" />
<text  x="784.50" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="941.4" y="309" width="0.2" height="15.0" fill="rgb(206,123,45)" rx="2" ry="2" />
<text  x="944.39" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%)</title><rect x="529.1" y="325" width="0.1" height="15.0" fill="rgb(221,138,49)" rx="2" ry="2" />
<text  x="532.13" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="446.5" y="261" width="0.2" height="15.0" fill="rgb(238,211,28)" rx="2" ry="2" />
<text  x="449.47" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (8 samples, 0.02%)</title><rect x="519.3" y="277" width="0.2" height="15.0" fill="rgb(230,202,38)" rx="2" ry="2" />
<text  x="522.34" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (603 samples, 1.28%)</title><rect x="804.2" y="261" width="15.1" height="15.0" fill="rgb(222,94,18)" rx="2" ry="2" />
<text  x="807.19" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (9 samples, 0.02%)</title><rect x="986.3" y="357" width="0.3" height="15.0" fill="rgb(248,28,33)" rx="2" ry="2" />
<text  x="989.33" y="367.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="505.3" y="245" width="0.3" height="15.0" fill="rgb(206,73,13)" rx="2" ry="2" />
<text  x="508.28" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="1170.9" y="453" width="0.6" height="15.0" fill="rgb(206,141,4)" rx="2" ry="2" />
<text  x="1173.95" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,271 samples, 4.83%)</title><rect x="895.7" y="421" width="57.0" height="15.0" fill="rgb(216,20,8)" rx="2" ry="2" />
<text  x="898.73" y="431.5" >cql3::..</text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="434.6" y="357" width="0.1" height="15.0" fill="rgb(224,107,27)" rx="2" ry="2" />
<text  x="437.62" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (10 samples, 0.02%)</title><rect x="741.2" y="293" width="0.2" height="15.0" fill="rgb(242,8,39)" rx="2" ry="2" />
<text  x="744.18" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%)</title><rect x="254.4" y="245" width="0.3" height="15.0" fill="rgb(247,183,53)" rx="2" ry="2" />
<text  x="257.44" y="255.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (11 samples, 0.02%)</title><rect x="83.9" y="453" width="0.3" height="15.0" fill="rgb(231,121,30)" rx="2" ry="2" />
<text  x="86.95" y="463.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (75 samples, 0.16%)</title><rect x="71.7" y="389" width="1.9" height="15.0" fill="rgb(252,213,42)" rx="2" ry="2" />
<text  x="74.75" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="780.8" y="357" width="0.5" height="15.0" fill="rgb(217,13,12)" rx="2" ry="2" />
<text  x="783.82" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (12 samples, 0.03%)</title><rect x="912.8" y="309" width="0.3" height="15.0" fill="rgb(209,224,13)" rx="2" ry="2" />
<text  x="915.80" y="319.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (6 samples, 0.01%)</title><rect x="257.6" y="197" width="0.1" height="15.0" fill="rgb(218,144,40)" rx="2" ry="2" />
<text  x="260.55" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="521.2" y="325" width="0.1" height="15.0" fill="rgb(240,184,14)" rx="2" ry="2" />
<text  x="524.19" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (20 samples, 0.04%)</title><rect x="579.9" y="357" width="0.5" height="15.0" fill="rgb(215,170,3)" rx="2" ry="2" />
<text  x="582.91" y="367.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="661.6" y="453" width="0.5" height="15.0" fill="rgb(238,5,45)" rx="2" ry="2" />
<text  x="664.59" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (84 samples, 0.18%)</title><rect x="687.9" y="453" width="2.1" height="15.0" fill="rgb(206,202,35)" rx="2" ry="2" />
<text  x="690.89" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (17 samples, 0.04%)</title><rect x="818.9" y="213" width="0.4" height="15.0" fill="rgb(215,72,14)" rx="2" ry="2" />
<text  x="821.87" y="223.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%)</title><rect x="1029.9" y="197" width="0.1" height="15.0" fill="rgb(223,127,16)" rx="2" ry="2" />
<text  x="1032.85" y="207.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="516.2" y="229" width="0.2" height="15.0" fill="rgb(245,129,37)" rx="2" ry="2" />
<text  x="519.22" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="725.9" y="501" width="0.1" height="15.0" fill="rgb(250,225,26)" rx="2" ry="2" />
<text  x="728.87" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (11 samples, 0.02%)</title><rect x="1075.1" y="309" width="0.3" height="15.0" fill="rgb(223,129,17)" rx="2" ry="2" />
<text  x="1078.08" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (12 samples, 0.03%)</title><rect x="492.3" y="325" width="0.3" height="15.0" fill="rgb(230,165,35)" rx="2" ry="2" />
<text  x="495.33" y="335.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (7 samples, 0.01%)</title><rect x="845.7" y="389" width="0.1" height="15.0" fill="rgb(253,209,12)" rx="2" ry="2" />
<text  x="848.66" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%)</title><rect x="154.4" y="197" width="0.1" height="15.0" fill="rgb(239,17,29)" rx="2" ry="2" />
<text  x="157.43" y="207.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (18 samples, 0.04%)</title><rect x="573.4" y="277" width="0.4" height="15.0" fill="rgb(234,127,23)" rx="2" ry="2" />
<text  x="576.35" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="664.4" y="469" width="0.2" height="15.0" fill="rgb(220,98,46)" rx="2" ry="2" />
<text  x="667.40" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (4 samples, 0.01%)</title><rect x="808.3" y="197" width="0.1" height="15.0" fill="rgb(222,179,31)" rx="2" ry="2" />
<text  x="811.31" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (8 samples, 0.02%)</title><rect x="21.4" y="389" width="0.2" height="15.0" fill="rgb(211,53,6)" rx="2" ry="2" />
<text  x="24.42" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (17 samples, 0.04%)</title><rect x="536.9" y="245" width="0.4" height="15.0" fill="rgb(220,41,40)" rx="2" ry="2" />
<text  x="539.91" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (9 samples, 0.02%)</title><rect x="823.7" y="277" width="0.2" height="15.0" fill="rgb(247,163,5)" rx="2" ry="2" />
<text  x="826.69" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,078 samples, 10.80%)</title><rect x="975.1" y="373" width="127.4" height="15.0" fill="rgb(227,61,36)" rx="2" ry="2" />
<text  x="978.08" y="383.5" >service::storage..</text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="102.0" y="405" width="0.1" height="15.0" fill="rgb(245,143,2)" rx="2" ry="2" />
<text  x="104.97" y="415.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (6 samples, 0.01%)</title><rect x="894.6" y="421" width="0.1" height="15.0" fill="rgb(252,159,2)" rx="2" ry="2" />
<text  x="897.58" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (7 samples, 0.01%)</title><rect x="1162.3" y="453" width="0.2" height="15.0" fill="rgb(229,28,3)" rx="2" ry="2" />
<text  x="1165.29" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (4 samples, 0.01%)</title><rect x="431.0" y="405" width="0.1" height="15.0" fill="rgb(208,81,52)" rx="2" ry="2" />
<text  x="434.00" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="544.6" y="405" width="0.4" height="15.0" fill="rgb(231,123,33)" rx="2" ry="2" />
<text  x="547.56" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (42 samples, 0.09%)</title><rect x="806.6" y="165" width="1.1" height="15.0" fill="rgb(230,129,54)" rx="2" ry="2" />
<text  x="809.62" y="175.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (5 samples, 0.01%)</title><rect x="336.6" y="181" width="0.1" height="15.0" fill="rgb(241,41,22)" rx="2" ry="2" />
<text  x="339.57" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (7 samples, 0.01%)</title><rect x="220.3" y="133" width="0.2" height="15.0" fill="rgb(219,176,22)" rx="2" ry="2" />
<text  x="223.28" y="143.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (35 samples, 0.07%)</title><rect x="130.2" y="277" width="0.9" height="15.0" fill="rgb(207,130,33)" rx="2" ry="2" />
<text  x="133.24" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="731.1" y="389" width="0.4" height="15.0" fill="rgb(211,141,32)" rx="2" ry="2" />
<text  x="734.14" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (24 samples, 0.05%)</title><rect x="739.4" y="325" width="0.6" height="15.0" fill="rgb(242,0,31)" rx="2" ry="2" />
<text  x="742.35" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_cql (4 samples, 0.01%)</title><rect x="673.4" y="501" width="0.1" height="15.0" fill="rgb(242,26,20)" rx="2" ry="2" />
<text  x="676.38" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (36 samples, 0.08%)</title><rect x="134.4" y="245" width="0.9" height="15.0" fill="rgb(254,111,53)" rx="2" ry="2" />
<text  x="137.43" y="255.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="775.8" y="309" width="0.1" height="15.0" fill="rgb(251,47,14)" rx="2" ry="2" />
<text  x="778.77" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (13 samples, 0.03%)</title><rect x="657.3" y="405" width="0.3" height="15.0" fill="rgb(213,200,46)" rx="2" ry="2" />
<text  x="660.29" y="415.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (7 samples, 0.01%)</title><rect x="985.1" y="357" width="0.1" height="15.0" fill="rgb(231,146,49)" rx="2" ry="2" />
<text  x="988.07" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (5 samples, 0.01%)</title><rect x="268.9" y="309" width="0.2" height="15.0" fill="rgb(235,116,20)" rx="2" ry="2" />
<text  x="271.95" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (36 samples, 0.08%)</title><rect x="948.7" y="389" width="0.9" height="15.0" fill="rgb(242,201,44)" rx="2" ry="2" />
<text  x="951.67" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (10 samples, 0.02%)</title><rect x="555.7" y="421" width="0.2" height="15.0" fill="rgb(253,55,53)" rx="2" ry="2" />
<text  x="558.68" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="519.5" y="277" width="0.2" height="15.0" fill="rgb(241,132,14)" rx="2" ry="2" />
<text  x="522.54" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (14 samples, 0.03%)</title><rect x="490.2" y="181" width="0.3" height="15.0" fill="rgb(216,111,42)" rx="2" ry="2" />
<text  x="493.19" y="191.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (59 samples, 0.13%)</title><rect x="424.1" y="357" width="1.4" height="15.0" fill="rgb(220,158,12)" rx="2" ry="2" />
<text  x="427.05" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (12 samples, 0.03%)</title><rect x="1078.1" y="309" width="0.3" height="15.0" fill="rgb(229,98,32)" rx="2" ry="2" />
<text  x="1081.10" y="319.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (5 samples, 0.01%)</title><rect x="1177.7" y="437" width="0.1" height="15.0" fill="rgb(230,75,33)" rx="2" ry="2" />
<text  x="1180.70" y="447.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (68 samples, 0.14%)</title><rect x="798.7" y="293" width="1.7" height="15.0" fill="rgb(244,215,50)" rx="2" ry="2" />
<text  x="801.74" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%)</title><rect x="698.5" y="469" width="0.4" height="15.0" fill="rgb(248,110,52)" rx="2" ry="2" />
<text  x="701.49" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="268.8" y="309" width="0.1" height="15.0" fill="rgb(230,13,12)" rx="2" ry="2" />
<text  x="271.82" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%)</title><rect x="589.0" y="341" width="0.3" height="15.0" fill="rgb(221,101,22)" rx="2" ry="2" />
<text  x="592.02" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (4 samples, 0.01%)</title><rect x="314.4" y="197" width="0.1" height="15.0" fill="rgb(243,15,13)" rx="2" ry="2" />
<text  x="317.41" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (37 samples, 0.08%)</title><rect x="151.4" y="245" width="1.0" height="15.0" fill="rgb(213,160,25)" rx="2" ry="2" />
<text  x="154.45" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%)</title><rect x="153.0" y="245" width="0.2" height="15.0" fill="rgb(215,76,47)" rx="2" ry="2" />
<text  x="156.03" y="255.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (29 samples, 0.06%)</title><rect x="341.8" y="181" width="0.7" height="15.0" fill="rgb(237,129,36)" rx="2" ry="2" />
<text  x="344.79" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="805.4" y="229" width="0.1" height="15.0" fill="rgb(224,40,14)" rx="2" ry="2" />
<text  x="808.39" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (79 samples, 0.17%)</title><rect x="806.0" y="213" width="2.0" height="15.0" fill="rgb(222,202,46)" rx="2" ry="2" />
<text  x="809.00" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="886.1" y="469" width="0.2" height="15.0" fill="rgb(247,198,54)" rx="2" ry="2" />
<text  x="889.15" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1052.5" y="277" width="0.2" height="15.0" fill="rgb(231,155,26)" rx="2" ry="2" />
<text  x="1055.52" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (48 samples, 0.10%)</title><rect x="1157.4" y="405" width="1.2" height="15.0" fill="rgb(216,186,11)" rx="2" ry="2" />
<text  x="1160.42" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="911.6" y="277" width="0.3" height="15.0" fill="rgb(217,47,1)" rx="2" ry="2" />
<text  x="914.60" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (24 samples, 0.05%)</title><rect x="277.5" y="341" width="0.6" height="15.0" fill="rgb(210,107,29)" rx="2" ry="2" />
<text  x="280.53" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="577.2" y="309" width="0.2" height="15.0" fill="rgb(225,142,30)" rx="2" ry="2" />
<text  x="580.22" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (16 samples, 0.03%)</title><rect x="209.6" y="101" width="0.4" height="15.0" fill="rgb(236,78,18)" rx="2" ry="2" />
<text  x="212.58" y="111.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="800.2" y="277" width="0.2" height="15.0" fill="rgb(211,133,47)" rx="2" ry="2" />
<text  x="803.17" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="642.5" y="453" width="0.2" height="15.0" fill="rgb(247,153,16)" rx="2" ry="2" />
<text  x="645.53" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (88 samples, 0.19%)</title><rect x="303.8" y="293" width="2.2" height="15.0" fill="rgb(224,120,35)" rx="2" ry="2" />
<text  x="306.76" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (18 samples, 0.04%)</title><rect x="572.9" y="277" width="0.5" height="15.0" fill="rgb(212,69,3)" rx="2" ry="2" />
<text  x="575.90" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (11 samples, 0.02%)</title><rect x="656.7" y="405" width="0.3" height="15.0" fill="rgb(248,133,34)" rx="2" ry="2" />
<text  x="659.72" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (4 samples, 0.01%)</title><rect x="125.1" y="309" width="0.1" height="15.0" fill="rgb(209,100,2)" rx="2" ry="2" />
<text  x="128.07" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (20 samples, 0.04%)</title><rect x="952.1" y="325" width="0.5" height="15.0" fill="rgb(246,70,54)" rx="2" ry="2" />
<text  x="955.14" y="335.5" ></text>
</g>
<g >
<title>operator new (76 samples, 0.16%)</title><rect x="1049.6" y="245" width="1.9" height="15.0" fill="rgb(216,170,49)" rx="2" ry="2" />
<text  x="1052.58" y="255.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (83 samples, 0.18%)</title><rect x="1172.6" y="437" width="2.0" height="15.0" fill="rgb(214,25,17)" rx="2" ry="2" />
<text  x="1175.55" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (419 samples, 0.89%)</title><rect x="242.9" y="229" width="10.5" height="15.0" fill="rgb(252,225,17)" rx="2" ry="2" />
<text  x="245.89" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (12 samples, 0.03%)</title><rect x="1148.7" y="469" width="0.3" height="15.0" fill="rgb(236,49,8)" rx="2" ry="2" />
<text  x="1151.73" y="479.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (16 samples, 0.03%)</title><rect x="920.1" y="389" width="0.4" height="15.0" fill="rgb(234,188,51)" rx="2" ry="2" />
<text  x="923.08" y="399.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (20 samples, 0.04%)</title><rect x="942.0" y="389" width="0.5" height="15.0" fill="rgb(238,220,23)" rx="2" ry="2" />
<text  x="945.02" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (15 samples, 0.03%)</title><rect x="485.2" y="213" width="0.3" height="15.0" fill="rgb(205,0,20)" rx="2" ry="2" />
<text  x="488.17" y="223.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (5 samples, 0.01%)</title><rect x="19.8" y="245" width="0.1" height="15.0" fill="rgb(247,1,33)" rx="2" ry="2" />
<text  x="22.76" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (114 samples, 0.24%)</title><rect x="641.2" y="485" width="2.8" height="15.0" fill="rgb(238,153,17)" rx="2" ry="2" />
<text  x="644.18" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="695.0" y="357" width="0.9" height="15.0" fill="rgb(253,71,53)" rx="2" ry="2" />
<text  x="698.05" y="367.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="827.0" y="309" width="0.4" height="15.0" fill="rgb(207,49,36)" rx="2" ry="2" />
<text  x="830.03" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (9 samples, 0.02%)</title><rect x="674.9" y="469" width="0.2" height="15.0" fill="rgb(238,106,0)" rx="2" ry="2" />
<text  x="677.89" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (18 samples, 0.04%)</title><rect x="847.4" y="405" width="0.4" height="15.0" fill="rgb(247,151,18)" rx="2" ry="2" />
<text  x="850.36" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="769.2" y="405" width="0.2" height="15.0" fill="rgb(248,157,52)" rx="2" ry="2" />
<text  x="772.20" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (4 samples, 0.01%)</title><rect x="374.9" y="181" width="0.1" height="15.0" fill="rgb(217,132,21)" rx="2" ry="2" />
<text  x="377.88" y="191.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (13 samples, 0.03%)</title><rect x="521.3" y="325" width="0.4" height="15.0" fill="rgb(205,141,21)" rx="2" ry="2" />
<text  x="524.34" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (24 samples, 0.05%)</title><rect x="832.6" y="293" width="0.6" height="15.0" fill="rgb(228,177,7)" rx="2" ry="2" />
<text  x="835.60" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (25 samples, 0.05%)</title><rect x="783.6" y="357" width="0.6" height="15.0" fill="rgb(251,109,7)" rx="2" ry="2" />
<text  x="786.61" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (17 samples, 0.04%)</title><rect x="756.9" y="293" width="0.4" height="15.0" fill="rgb(252,108,47)" rx="2" ry="2" />
<text  x="759.90" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (14 samples, 0.03%)</title><rect x="339.7" y="181" width="0.4" height="15.0" fill="rgb(214,194,27)" rx="2" ry="2" />
<text  x="342.73" y="191.5" ></text>
</g>
<g >
<title>db::schema_tables::update_schema_version_and_announce (6 samples, 0.01%)</title><rect x="47.0" y="485" width="0.1" height="15.0" fill="rgb(248,149,21)" rx="2" ry="2" />
<text  x="49.97" y="495.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="149.0" y="229" width="0.2" height="15.0" fill="rgb(222,52,1)" rx="2" ry="2" />
<text  x="152.01" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (31 samples, 0.07%)</title><rect x="822.4" y="229" width="0.7" height="15.0" fill="rgb(241,213,37)" rx="2" ry="2" />
<text  x="825.36" y="239.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (44 samples, 0.09%)</title><rect x="194.4" y="69" width="1.2" height="15.0" fill="rgb(250,179,8)" rx="2" ry="2" />
<text  x="197.45" y="79.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (497 samples, 1.06%)</title><rect x="709.5" y="485" width="12.5" height="15.0" fill="rgb(225,96,5)" rx="2" ry="2" />
<text  x="712.48" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (33 samples, 0.07%)</title><rect x="237.1" y="197" width="0.8" height="15.0" fill="rgb(219,87,31)" rx="2" ry="2" />
<text  x="240.07" y="207.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (304 samples, 0.65%)</title><rect x="484.0" y="261" width="7.6" height="15.0" fill="rgb(222,38,47)" rx="2" ry="2" />
<text  x="487.02" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (6 samples, 0.01%)</title><rect x="695.6" y="277" width="0.1" height="15.0" fill="rgb(246,80,53)" rx="2" ry="2" />
<text  x="698.60" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1074.1" y="293" width="0.5" height="15.0" fill="rgb(205,25,32)" rx="2" ry="2" />
<text  x="1077.13" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="695.0" y="341" width="0.8" height="15.0" fill="rgb(213,170,52)" rx="2" ry="2" />
<text  x="698.05" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="964.8" y="405" width="0.2" height="15.0" fill="rgb(239,187,43)" rx="2" ry="2" />
<text  x="967.84" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (737 samples, 1.57%)</title><rect x="501.8" y="293" width="18.5" height="15.0" fill="rgb(231,193,7)" rx="2" ry="2" />
<text  x="504.76" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="680.3" y="453" width="0.1" height="15.0" fill="rgb(251,9,10)" rx="2" ry="2" />
<text  x="683.31" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (6 samples, 0.01%)</title><rect x="453.0" y="277" width="0.2" height="15.0" fill="rgb(214,178,44)" rx="2" ry="2" />
<text  x="456.02" y="287.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="1125.3" y="405" width="2.0" height="15.0" fill="rgb(210,198,30)" rx="2" ry="2" />
<text  x="1128.29" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (29 samples, 0.06%)</title><rect x="815.0" y="133" width="0.8" height="15.0" fill="rgb(212,201,52)" rx="2" ry="2" />
<text  x="818.03" y="143.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (17 samples, 0.04%)</title><rect x="1107.5" y="389" width="0.4" height="15.0" fill="rgb(226,113,34)" rx="2" ry="2" />
<text  x="1110.52" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="848.7" y="421" width="0.4" height="15.0" fill="rgb(222,41,6)" rx="2" ry="2" />
<text  x="851.74" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (87 samples, 0.19%)</title><rect x="671.2" y="469" width="2.2" height="15.0" fill="rgb(208,86,33)" rx="2" ry="2" />
<text  x="674.18" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="957.0" y="405" width="0.1" height="15.0" fill="rgb(218,98,45)" rx="2" ry="2" />
<text  x="959.96" y="415.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (5 samples, 0.01%)</title><rect x="1045.7" y="261" width="0.1" height="15.0" fill="rgb(224,228,46)" rx="2" ry="2" />
<text  x="1048.72" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="406.3" y="229" width="0.1" height="15.0" fill="rgb(211,200,17)" rx="2" ry="2" />
<text  x="409.25" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (4 samples, 0.01%)</title><rect x="611.1" y="437" width="0.1" height="15.0" fill="rgb(227,49,47)" rx="2" ry="2" />
<text  x="614.11" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (34 samples, 0.07%)</title><rect x="500.9" y="277" width="0.9" height="15.0" fill="rgb(249,116,25)" rx="2" ry="2" />
<text  x="503.91" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (4 samples, 0.01%)</title><rect x="603.3" y="405" width="0.1" height="15.0" fill="rgb(215,59,51)" rx="2" ry="2" />
<text  x="606.28" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="784.5" y="341" width="0.1" height="15.0" fill="rgb(240,199,23)" rx="2" ry="2" />
<text  x="787.51" y="351.5" ></text>
</g>
<g >
<title>[unknown] (204 samples, 0.43%)</title><rect x="10.1" y="597" width="5.1" height="15.0" fill="rgb(205,136,13)" rx="2" ry="2" />
<text  x="13.13" y="607.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="575.1" y="277" width="0.1" height="15.0" fill="rgb(223,6,13)" rx="2" ry="2" />
<text  x="578.06" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="32.3" y="469" width="0.2" height="15.0" fill="rgb(223,157,43)" rx="2" ry="2" />
<text  x="35.27" y="479.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="551.3" y="357" width="0.7" height="15.0" fill="rgb(229,189,46)" rx="2" ry="2" />
<text  x="554.32" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (11 samples, 0.02%)</title><rect x="1101.1" y="341" width="0.3" height="15.0" fill="rgb(225,150,15)" rx="2" ry="2" />
<text  x="1104.12" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (61 samples, 0.13%)</title><rect x="771.4" y="341" width="1.5" height="15.0" fill="rgb(222,111,32)" rx="2" ry="2" />
<text  x="774.41" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1004.2" y="245" width="0.1" height="15.0" fill="rgb(233,190,32)" rx="2" ry="2" />
<text  x="1007.20" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (29 samples, 0.06%)</title><rect x="774.9" y="325" width="0.8" height="15.0" fill="rgb(205,72,47)" rx="2" ry="2" />
<text  x="777.95" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (4 samples, 0.01%)</title><rect x="657.5" y="389" width="0.1" height="15.0" fill="rgb(246,57,38)" rx="2" ry="2" />
<text  x="660.50" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="32.7" y="485" width="0.1" height="15.0" fill="rgb(207,64,44)" rx="2" ry="2" />
<text  x="35.67" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (52 samples, 0.11%)</title><rect x="913.1" y="309" width="1.3" height="15.0" fill="rgb(234,141,42)" rx="2" ry="2" />
<text  x="916.10" y="319.5" ></text>
</g>
<g >
<title>db::schema_tables::merge_schema (6 samples, 0.01%)</title><rect x="47.0" y="501" width="0.1" height="15.0" fill="rgb(223,131,51)" rx="2" ry="2" />
<text  x="49.97" y="511.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (20 samples, 0.04%)</title><rect x="1114.1" y="357" width="0.5" height="15.0" fill="rgb(220,11,19)" rx="2" ry="2" />
<text  x="1117.12" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (84 samples, 0.18%)</title><rect x="37.5" y="437" width="2.1" height="15.0" fill="rgb(237,118,40)" rx="2" ry="2" />
<text  x="40.49" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (195 samples, 0.41%)</title><rect x="16.3" y="389" width="4.9" height="15.0" fill="rgb(225,41,0)" rx="2" ry="2" />
<text  x="19.33" y="399.5" ></text>
</g>
<g >
<title>operator delete (90 samples, 0.19%)</title><rect x="95.9" y="437" width="2.3" height="15.0" fill="rgb(235,47,17)" rx="2" ry="2" />
<text  x="98.92" y="447.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (11 samples, 0.02%)</title><rect x="733.5" y="453" width="0.3" height="15.0" fill="rgb(247,33,37)" rx="2" ry="2" />
<text  x="736.53" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (12 samples, 0.03%)</title><rect x="1137.7" y="437" width="0.3" height="15.0" fill="rgb(244,182,47)" rx="2" ry="2" />
<text  x="1140.66" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (105 samples, 0.22%)</title><rect x="850.4" y="437" width="2.6" height="15.0" fill="rgb(236,121,38)" rx="2" ry="2" />
<text  x="853.35" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (4 samples, 0.01%)</title><rect x="428.3" y="405" width="0.1" height="15.0" fill="rgb(235,214,21)" rx="2" ry="2" />
<text  x="431.32" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="661.0" y="469" width="0.3" height="15.0" fill="rgb(238,36,6)" rx="2" ry="2" />
<text  x="663.98" y="479.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="720.6" y="405" width="0.1" height="15.0" fill="rgb(242,213,21)" rx="2" ry="2" />
<text  x="723.58" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="667.7" y="485" width="0.1" height="15.0" fill="rgb(225,116,51)" rx="2" ry="2" />
<text  x="670.69" y="495.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (7 samples, 0.01%)</title><rect x="341.6" y="181" width="0.2" height="15.0" fill="rgb(224,166,11)" rx="2" ry="2" />
<text  x="344.62" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="568.7" y="293" width="0.1" height="15.0" fill="rgb(232,108,45)" rx="2" ry="2" />
<text  x="571.66" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="632.6" y="437" width="0.1" height="15.0" fill="rgb(212,74,51)" rx="2" ry="2" />
<text  x="635.64" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="895.1" y="421" width="0.2" height="15.0" fill="rgb(223,90,7)" rx="2" ry="2" />
<text  x="898.13" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (17 samples, 0.04%)</title><rect x="1139.8" y="277" width="0.4" height="15.0" fill="rgb(244,81,48)" rx="2" ry="2" />
<text  x="1142.82" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.01%)</title><rect x="19.2" y="309" width="0.1" height="15.0" fill="rgb(217,62,27)" rx="2" ry="2" />
<text  x="22.16" y="319.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (36 samples, 0.08%)</title><rect x="320.3" y="165" width="0.9" height="15.0" fill="rgb(209,111,5)" rx="2" ry="2" />
<text  x="323.28" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (28 samples, 0.06%)</title><rect x="275.9" y="325" width="0.7" height="15.0" fill="rgb(218,96,4)" rx="2" ry="2" />
<text  x="278.85" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="998.8" y="341" width="0.2" height="15.0" fill="rgb(223,115,22)" rx="2" ry="2" />
<text  x="1001.83" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (38 samples, 0.08%)</title><rect x="617.9" y="437" width="0.9" height="15.0" fill="rgb(225,101,51)" rx="2" ry="2" />
<text  x="620.88" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="241.8" y="245" width="0.2" height="15.0" fill="rgb(254,212,23)" rx="2" ry="2" />
<text  x="244.79" y="255.5" ></text>
</g>
<g >
<title>std::type_info::operator== (4 samples, 0.01%)</title><rect x="1007.0" y="277" width="0.1" height="15.0" fill="rgb(220,184,42)" rx="2" ry="2" />
<text  x="1010.03" y="287.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (43 samples, 0.09%)</title><rect x="226.5" y="149" width="1.1" height="15.0" fill="rgb(233,157,9)" rx="2" ry="2" />
<text  x="229.48" y="159.5" ></text>
</g>
<g >
<title>schema::column_at (61 samples, 0.13%)</title><rect x="395.9" y="165" width="1.5" height="15.0" fill="rgb(247,215,16)" rx="2" ry="2" />
<text  x="398.89" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="399.4" y="229" width="0.2" height="15.0" fill="rgb(212,68,19)" rx="2" ry="2" />
<text  x="402.35" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.03%)</title><rect x="498.7" y="309" width="0.3" height="15.0" fill="rgb(232,115,3)" rx="2" ry="2" />
<text  x="501.70" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.03%)</title><rect x="844.4" y="277" width="0.3" height="15.0" fill="rgb(238,14,23)" rx="2" ry="2" />
<text  x="847.40" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="854.1" y="437" width="0.3" height="15.0" fill="rgb(211,92,49)" rx="2" ry="2" />
<text  x="857.09" y="447.5" ></text>
</g>
<g >
<title>database::has_keyspace (158 samples, 0.34%)</title><rect x="856.2" y="421" width="3.9" height="15.0" fill="rgb(215,97,24)" rx="2" ry="2" />
<text  x="859.17" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (21 samples, 0.04%)</title><rect x="743.5" y="389" width="0.5" height="15.0" fill="rgb(225,67,21)" rx="2" ry="2" />
<text  x="746.49" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="285.8" y="293" width="0.2" height="15.0" fill="rgb(213,149,51)" rx="2" ry="2" />
<text  x="288.79" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="828.2" y="293" width="0.3" height="15.0" fill="rgb(210,48,20)" rx="2" ry="2" />
<text  x="831.21" y="303.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (194 samples, 0.41%)</title><rect x="1070.9" y="325" width="4.9" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" />
<text  x="1073.92" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,215 samples, 4.71%)</title><rect x="999.0" y="341" width="55.6" height="15.0" fill="rgb(226,127,28)" rx="2" ry="2" />
<text  x="1001.98" y="351.5" >servi..</text>
</g>
<g >
<title>seastar::gate::leave (4 samples, 0.01%)</title><rect x="64.4" y="405" width="0.1" height="15.0" fill="rgb(219,188,34)" rx="2" ry="2" />
<text  x="67.42" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (28 samples, 0.06%)</title><rect x="1065.1" y="325" width="0.7" height="15.0" fill="rgb(253,177,34)" rx="2" ry="2" />
<text  x="1068.14" y="335.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (423 samples, 0.90%)</title><rect x="1178.2" y="629" width="10.6" height="15.0" fill="rgb(210,7,22)" rx="2" ry="2" />
<text  x="1181.23" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="571.9" y="261" width="0.1" height="15.0" fill="rgb(242,138,54)" rx="2" ry="2" />
<text  x="574.92" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (19 samples, 0.04%)</title><rect x="1119.4" y="389" width="0.5" height="15.0" fill="rgb(209,49,12)" rx="2" ry="2" />
<text  x="1122.44" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (13 samples, 0.03%)</title><rect x="866.5" y="341" width="0.3" height="15.0" fill="rgb(226,62,41)" rx="2" ry="2" />
<text  x="869.47" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (284 samples, 0.60%)</title><rect x="15.6" y="581" width="7.2" height="15.0" fill="rgb(207,146,2)" rx="2" ry="2" />
<text  x="18.62" y="591.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%)</title><rect x="398.0" y="213" width="0.1" height="15.0" fill="rgb(241,124,22)" rx="2" ry="2" />
<text  x="400.97" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (121 samples, 0.26%)</title><rect x="511.8" y="213" width="3.0" height="15.0" fill="rgb(252,127,9)" rx="2" ry="2" />
<text  x="514.76" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (14 samples, 0.03%)</title><rect x="607.0" y="437" width="0.3" height="15.0" fill="rgb(223,40,14)" rx="2" ry="2" />
<text  x="609.99" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (9 samples, 0.02%)</title><rect x="450.9" y="277" width="0.2" height="15.0" fill="rgb(209,65,36)" rx="2" ry="2" />
<text  x="453.91" y="287.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (80 samples, 0.17%)</title><rect x="361.5" y="165" width="2.0" height="15.0" fill="rgb(227,219,20)" rx="2" ry="2" />
<text  x="364.47" y="175.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (5 samples, 0.01%)</title><rect x="685.5" y="453" width="0.2" height="15.0" fill="rgb(219,76,31)" rx="2" ry="2" />
<text  x="688.53" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="265.0" y="277" width="0.4" height="15.0" fill="rgb(214,167,19)" rx="2" ry="2" />
<text  x="267.96" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (23 samples, 0.05%)</title><rect x="80.6" y="453" width="0.5" height="15.0" fill="rgb(239,101,35)" rx="2" ry="2" />
<text  x="83.56" y="463.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (129 samples, 0.27%)</title><rect x="1111.9" y="389" width="3.2" height="15.0" fill="rgb(243,64,26)" rx="2" ry="2" />
<text  x="1114.91" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="643.4" y="469" width="0.2" height="15.0" fill="rgb(228,151,15)" rx="2" ry="2" />
<text  x="646.41" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (90 samples, 0.19%)</title><rect x="247.9" y="197" width="2.3" height="15.0" fill="rgb(233,68,6)" rx="2" ry="2" />
<text  x="250.91" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="749.8" y="389" width="0.1" height="15.0" fill="rgb(209,166,50)" rx="2" ry="2" />
<text  x="752.79" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="763.7" y="405" width="0.4" height="15.0" fill="rgb(238,151,10)" rx="2" ry="2" />
<text  x="766.73" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (14 samples, 0.03%)</title><rect x="400.5" y="229" width="0.4" height="15.0" fill="rgb(216,70,41)" rx="2" ry="2" />
<text  x="403.51" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (22 samples, 0.05%)</title><rect x="152.5" y="229" width="0.5" height="15.0" fill="rgb(246,80,23)" rx="2" ry="2" />
<text  x="155.45" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1044.0" y="261" width="0.1" height="15.0" fill="rgb(213,123,34)" rx="2" ry="2" />
<text  x="1047.01" y="271.5" ></text>
</g>
<g >
<title>operator delete (58 samples, 0.12%)</title><rect x="563.4" y="325" width="1.5" height="15.0" fill="rgb(254,21,18)" rx="2" ry="2" />
<text  x="566.41" y="335.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5 samples, 0.01%)</title><rect x="878.6" y="485" width="0.1" height="15.0" fill="rgb(242,91,42)" rx="2" ry="2" />
<text  x="881.59" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,931 samples, 4.11%)</title><rect x="174.6" y="181" width="48.4" height="15.0" fill="rgb(247,194,48)" rx="2" ry="2" />
<text  x="177.57" y="191.5" >muta..</text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (5 samples, 0.01%)</title><rect x="135.6" y="261" width="0.1" height="15.0" fill="rgb(240,175,37)" rx="2" ry="2" />
<text  x="138.58" y="271.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (10 samples, 0.02%)</title><rect x="22.2" y="469" width="0.3" height="15.0" fill="rgb(215,151,48)" rx="2" ry="2" />
<text  x="25.22" y="479.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (82 samples, 0.17%)</title><rect x="156.8" y="213" width="2.1" height="15.0" fill="rgb(232,117,18)" rx="2" ry="2" />
<text  x="159.84" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="615.6" y="405" width="0.7" height="15.0" fill="rgb(222,57,41)" rx="2" ry="2" />
<text  x="618.60" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (101 samples, 0.21%)</title><rect x="833.8" y="389" width="2.5" height="15.0" fill="rgb(252,153,39)" rx="2" ry="2" />
<text  x="836.81" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (6 samples, 0.01%)</title><rect x="1035.7" y="181" width="0.2" height="15.0" fill="rgb(227,218,33)" rx="2" ry="2" />
<text  x="1038.73" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (9 samples, 0.02%)</title><rect x="55.4" y="469" width="0.2" height="15.0" fill="rgb(246,29,0)" rx="2" ry="2" />
<text  x="58.36" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%)</title><rect x="854.9" y="421" width="0.7" height="15.0" fill="rgb(221,32,34)" rx="2" ry="2" />
<text  x="857.87" y="431.5" ></text>
</g>
<g >
<title>dht::tri_compare (34 samples, 0.07%)</title><rect x="1079.9" y="245" width="0.9" height="15.0" fill="rgb(243,15,33)" rx="2" ry="2" />
<text  x="1082.90" y="255.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.01%)</title><rect x="74.6" y="405" width="0.1" height="15.0" fill="rgb(251,82,29)" rx="2" ry="2" />
<text  x="77.64" y="415.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="61.3" y="453" width="0.1" height="15.0" fill="rgb(228,21,1)" rx="2" ry="2" />
<text  x="64.28" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (66 samples, 0.14%)</title><rect x="245.5" y="181" width="1.6" height="15.0" fill="rgb(217,4,37)" rx="2" ry="2" />
<text  x="248.48" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="1033.8" y="165" width="0.2" height="15.0" fill="rgb(210,111,54)" rx="2" ry="2" />
<text  x="1036.84" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="838.8" y="325" width="0.3" height="15.0" fill="rgb(221,79,53)" rx="2" ry="2" />
<text  x="841.80" y="335.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (8 samples, 0.02%)</title><rect x="238.5" y="213" width="0.2" height="15.0" fill="rgb(254,96,1)" rx="2" ry="2" />
<text  x="241.52" y="223.5" ></text>
</g>
<g >
<title>std::__copy_move&lt;false, false, std::random_access_iterator_tag&gt;::__copy_m&lt;char const*, fmt::v7::detail::buffer_appender&lt;char&gt; &gt; (4 samples, 0.01%)</title><rect x="15.9" y="485" width="0.1" height="15.0" fill="rgb(228,150,50)" rx="2" ry="2" />
<text  x="18.90" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="628.8" y="389" width="0.2" height="15.0" fill="rgb(206,116,18)" rx="2" ry="2" />
<text  x="631.78" y="399.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (9 samples, 0.02%)</title><rect x="594.4" y="421" width="0.2" height="15.0" fill="rgb(205,208,6)" rx="2" ry="2" />
<text  x="597.36" y="431.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (103 samples, 0.22%)</title><rect x="843.1" y="373" width="2.6" height="15.0" fill="rgb(244,17,31)" rx="2" ry="2" />
<text  x="846.07" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="341.1" y="165" width="0.3" height="15.0" fill="rgb(224,118,44)" rx="2" ry="2" />
<text  x="344.06" y="175.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (376 samples, 0.80%)</title><rect x="469.9" y="293" width="9.4" height="15.0" fill="rgb(239,45,53)" rx="2" ry="2" />
<text  x="472.89" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (16 samples, 0.03%)</title><rect x="517.7" y="229" width="0.4" height="15.0" fill="rgb(240,220,45)" rx="2" ry="2" />
<text  x="520.68" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (4 samples, 0.01%)</title><rect x="1176.3" y="421" width="0.1" height="15.0" fill="rgb(207,9,30)" rx="2" ry="2" />
<text  x="1179.27" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (58 samples, 0.12%)</title><rect x="872.3" y="421" width="1.4" height="15.0" fill="rgb(254,207,15)" rx="2" ry="2" />
<text  x="875.29" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="836.5" y="389" width="0.1" height="15.0" fill="rgb(209,87,3)" rx="2" ry="2" />
<text  x="839.49" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (29 samples, 0.06%)</title><rect x="265.4" y="277" width="0.7" height="15.0" fill="rgb(207,19,40)" rx="2" ry="2" />
<text  x="268.38" y="287.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,213 samples, 8.96%)</title><rect x="744.3" y="437" width="105.7" height="15.0" fill="rgb(231,46,22)" rx="2" ry="2" />
<text  x="747.27" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="649.0" y="485" width="0.2" height="15.0" fill="rgb(253,63,17)" rx="2" ry="2" />
<text  x="652.04" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (4 samples, 0.01%)</title><rect x="554.1" y="261" width="0.1" height="15.0" fill="rgb(249,131,11)" rx="2" ry="2" />
<text  x="557.05" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (10 samples, 0.02%)</title><rect x="563.2" y="325" width="0.2" height="15.0" fill="rgb(230,27,0)" rx="2" ry="2" />
<text  x="566.16" y="335.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="538.0" y="261" width="0.4" height="15.0" fill="rgb(227,200,41)" rx="2" ry="2" />
<text  x="540.99" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="427.5" y="373" width="0.2" height="15.0" fill="rgb(237,184,8)" rx="2" ry="2" />
<text  x="430.54" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (14 samples, 0.03%)</title><rect x="327.1" y="181" width="0.4" height="15.0" fill="rgb(252,217,28)" rx="2" ry="2" />
<text  x="330.11" y="191.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (10 samples, 0.02%)</title><rect x="919.5" y="373" width="0.3" height="15.0" fill="rgb(220,90,9)" rx="2" ry="2" />
<text  x="922.51" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (41 samples, 0.09%)</title><rect x="631.1" y="405" width="1.1" height="15.0" fill="rgb(233,229,12)" rx="2" ry="2" />
<text  x="634.14" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (38 samples, 0.08%)</title><rect x="690.1" y="469" width="1.0" height="15.0" fill="rgb(230,211,15)" rx="2" ry="2" />
<text  x="693.13" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="940.4" y="341" width="0.1" height="15.0" fill="rgb(223,204,43)" rx="2" ry="2" />
<text  x="943.42" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (34 samples, 0.07%)</title><rect x="326.0" y="181" width="0.9" height="15.0" fill="rgb(232,117,37)" rx="2" ry="2" />
<text  x="329.00" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_Optional_payload_base (4 samples, 0.01%)</title><rect x="302.3" y="277" width="0.1" height="15.0" fill="rgb(230,228,5)" rx="2" ry="2" />
<text  x="305.33" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (36 samples, 0.08%)</title><rect x="955.4" y="389" width="0.9" height="15.0" fill="rgb(248,148,41)" rx="2" ry="2" />
<text  x="958.40" y="399.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="648.5" y="485" width="0.5" height="15.0" fill="rgb(214,133,53)" rx="2" ry="2" />
<text  x="651.53" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (32 samples, 0.07%)</title><rect x="753.8" y="357" width="0.8" height="15.0" fill="rgb(225,65,30)" rx="2" ry="2" />
<text  x="756.78" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,691 samples, 7.85%)</title><rect x="149.4" y="261" width="92.6" height="15.0" fill="rgb(235,122,38)" rx="2" ry="2" />
<text  x="152.39" y="271.5" >partition_s..</text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="667.1" y="485" width="0.1" height="15.0" fill="rgb(237,207,13)" rx="2" ry="2" />
<text  x="670.11" y="495.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%)</title><rect x="1152.8" y="405" width="0.1" height="15.0" fill="rgb(225,90,26)" rx="2" ry="2" />
<text  x="1155.77" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (28 samples, 0.06%)</title><rect x="21.4" y="453" width="0.7" height="15.0" fill="rgb(238,209,12)" rx="2" ry="2" />
<text  x="24.37" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.01%)</title><rect x="515.5" y="229" width="0.2" height="15.0" fill="rgb(244,146,42)" rx="2" ry="2" />
<text  x="518.55" y="239.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (21 samples, 0.04%)</title><rect x="760.9" y="261" width="0.5" height="15.0" fill="rgb(216,111,15)" rx="2" ry="2" />
<text  x="763.89" y="271.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (88 samples, 0.19%)</title><rect x="402.6" y="229" width="2.2" height="15.0" fill="rgb(227,26,43)" rx="2" ry="2" />
<text  x="405.56" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (13 samples, 0.03%)</title><rect x="429.1" y="405" width="0.3" height="15.0" fill="rgb(227,73,3)" rx="2" ry="2" />
<text  x="432.10" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.18%)</title><rect x="979.2" y="341" width="2.1" height="15.0" fill="rgb(247,160,41)" rx="2" ry="2" />
<text  x="982.22" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (30 samples, 0.06%)</title><rect x="1040.1" y="213" width="0.8" height="15.0" fill="rgb(234,87,9)" rx="2" ry="2" />
<text  x="1043.14" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="157.6" y="197" width="0.2" height="15.0" fill="rgb(243,71,1)" rx="2" ry="2" />
<text  x="160.65" y="207.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (15 samples, 0.03%)</title><rect x="323.4" y="165" width="0.4" height="15.0" fill="rgb(227,125,54)" rx="2" ry="2" />
<text  x="326.39" y="175.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="309.5" y="245" width="0.2" height="15.0" fill="rgb(228,187,40)" rx="2" ry="2" />
<text  x="312.49" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (13 samples, 0.03%)</title><rect x="266.6" y="277" width="0.3" height="15.0" fill="rgb(251,162,26)" rx="2" ry="2" />
<text  x="269.59" y="287.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (12 samples, 0.03%)</title><rect x="1115.1" y="389" width="0.3" height="15.0" fill="rgb(250,140,13)" rx="2" ry="2" />
<text  x="1118.15" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (11 samples, 0.02%)</title><rect x="596.7" y="405" width="0.3" height="15.0" fill="rgb(238,199,22)" rx="2" ry="2" />
<text  x="599.75" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (20 samples, 0.04%)</title><rect x="33.0" y="469" width="0.5" height="15.0" fill="rgb(205,21,31)" rx="2" ry="2" />
<text  x="35.99" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (499 samples, 1.06%)</title><rect x="242.2" y="261" width="12.5" height="15.0" fill="rgb(236,210,40)" rx="2" ry="2" />
<text  x="245.19" y="271.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (13 samples, 0.03%)</title><rect x="818.1" y="85" width="0.4" height="15.0" fill="rgb(223,35,25)" rx="2" ry="2" />
<text  x="821.15" y="95.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (4 samples, 0.01%)</title><rect x="376.3" y="165" width="0.1" height="15.0" fill="rgb(206,118,3)" rx="2" ry="2" />
<text  x="379.33" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (63 samples, 0.13%)</title><rect x="1106.7" y="405" width="1.6" height="15.0" fill="rgb(235,76,8)" rx="2" ry="2" />
<text  x="1109.74" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (111 samples, 0.24%)</title><rect x="856.8" y="389" width="2.8" height="15.0" fill="rgb(223,32,16)" rx="2" ry="2" />
<text  x="859.78" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (23 samples, 0.05%)</title><rect x="1093.8" y="293" width="0.5" height="15.0" fill="rgb(247,207,4)" rx="2" ry="2" />
<text  x="1096.76" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (15 samples, 0.03%)</title><rect x="614.7" y="437" width="0.4" height="15.0" fill="rgb(207,71,12)" rx="2" ry="2" />
<text  x="617.75" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (165 samples, 0.35%)</title><rect x="937.9" y="373" width="4.1" height="15.0" fill="rgb(253,4,5)" rx="2" ry="2" />
<text  x="940.88" y="383.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="534.5" y="293" width="0.2" height="15.0" fill="rgb(226,11,5)" rx="2" ry="2" />
<text  x="537.47" y="303.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (64 samples, 0.14%)</title><rect x="366.8" y="149" width="1.6" height="15.0" fill="rgb(238,45,27)" rx="2" ry="2" />
<text  x="369.79" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (9,976 samples, 21.22%)</title><rect x="887.7" y="453" width="250.4" height="15.0" fill="rgb(220,216,16)" rx="2" ry="2" />
<text  x="890.70" y="463.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (81 samples, 0.17%)</title><rect x="982.8" y="325" width="2.0" height="15.0" fill="rgb(218,229,11)" rx="2" ry="2" />
<text  x="985.76" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (16 samples, 0.03%)</title><rect x="1139.8" y="229" width="0.4" height="15.0" fill="rgb(209,218,0)" rx="2" ry="2" />
<text  x="1142.85" y="239.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (11 samples, 0.02%)</title><rect x="560.7" y="341" width="0.3" height="15.0" fill="rgb(236,161,37)" rx="2" ry="2" />
<text  x="563.70" y="351.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (114 samples, 0.24%)</title><rect x="12.4" y="581" width="2.8" height="15.0" fill="rgb(222,181,45)" rx="2" ry="2" />
<text  x="15.38" y="591.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="846.0" y="405" width="0.2" height="15.0" fill="rgb(206,134,32)" rx="2" ry="2" />
<text  x="848.98" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (13 samples, 0.03%)</title><rect x="216.1" y="117" width="0.4" height="15.0" fill="rgb(234,157,33)" rx="2" ry="2" />
<text  x="219.13" y="127.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (825 samples, 1.75%)</title><rect x="125.2" y="309" width="20.7" height="15.0" fill="rgb(240,90,22)" rx="2" ry="2" />
<text  x="128.17" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (90 samples, 0.19%)</title><rect x="655.6" y="453" width="2.3" height="15.0" fill="rgb(230,193,49)" rx="2" ry="2" />
<text  x="658.64" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="102.4" y="373" width="0.7" height="15.0" fill="rgb(218,5,52)" rx="2" ry="2" />
<text  x="105.42" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (11 samples, 0.02%)</title><rect x="213.4" y="149" width="0.3" height="15.0" fill="rgb(243,30,13)" rx="2" ry="2" />
<text  x="216.42" y="159.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (5 samples, 0.01%)</title><rect x="535.9" y="277" width="0.1" height="15.0" fill="rgb(234,135,35)" rx="2" ry="2" />
<text  x="538.88" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="596.6" y="389" width="0.1" height="15.0" fill="rgb(233,112,31)" rx="2" ry="2" />
<text  x="599.60" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (36 samples, 0.08%)</title><rect x="885.1" y="469" width="0.9" height="15.0" fill="rgb(216,140,24)" rx="2" ry="2" />
<text  x="888.12" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (11 samples, 0.02%)</title><rect x="752.7" y="293" width="0.2" height="15.0" fill="rgb(230,95,31)" rx="2" ry="2" />
<text  x="755.66" y="303.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (9 samples, 0.02%)</title><rect x="250.8" y="213" width="0.2" height="15.0" fill="rgb(250,184,6)" rx="2" ry="2" />
<text  x="253.77" y="223.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (31 samples, 0.07%)</title><rect x="1138.5" y="389" width="0.8" height="15.0" fill="rgb(245,55,42)" rx="2" ry="2" />
<text  x="1141.52" y="399.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="19.9" y="261" width="0.1" height="15.0" fill="rgb(209,213,54)" rx="2" ry="2" />
<text  x="22.89" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (4 samples, 0.01%)</title><rect x="667.2" y="485" width="0.1" height="15.0" fill="rgb(236,52,35)" rx="2" ry="2" />
<text  x="670.21" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="1124.1" y="405" width="0.2" height="15.0" fill="rgb(206,124,49)" rx="2" ry="2" />
<text  x="1127.11" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="590.8" y="373" width="0.2" height="15.0" fill="rgb(240,225,7)" rx="2" ry="2" />
<text  x="593.83" y="383.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (9 samples, 0.02%)</title><rect x="21.4" y="421" width="0.2" height="15.0" fill="rgb(248,130,11)" rx="2" ry="2" />
<text  x="24.42" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="576.7" y="293" width="0.1" height="15.0" fill="rgb(250,212,13)" rx="2" ry="2" />
<text  x="579.67" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (7 samples, 0.01%)</title><rect x="18.9" y="309" width="0.2" height="15.0" fill="rgb(251,188,30)" rx="2" ry="2" />
<text  x="21.91" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::take_value (4 samples, 0.01%)</title><rect x="748.2" y="373" width="0.1" height="15.0" fill="rgb(223,222,36)" rx="2" ry="2" />
<text  x="751.21" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="1167.9" y="485" width="0.2" height="15.0" fill="rgb(232,116,31)" rx="2" ry="2" />
<text  x="1170.89" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (10 samples, 0.02%)</title><rect x="789.7" y="357" width="0.3" height="15.0" fill="rgb(234,73,4)" rx="2" ry="2" />
<text  x="792.73" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="1107.9" y="389" width="0.4" height="15.0" fill="rgb(220,204,33)" rx="2" ry="2" />
<text  x="1110.94" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="987.6" y="357" width="0.1" height="15.0" fill="rgb(235,80,19)" rx="2" ry="2" />
<text  x="990.61" y="367.5" ></text>
</g>
<g >
<title>operator delete (76 samples, 0.16%)</title><rect x="945.0" y="405" width="1.9" height="15.0" fill="rgb(239,167,10)" rx="2" ry="2" />
<text  x="948.01" y="415.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1046.9" y="261" width="0.1" height="15.0" fill="rgb(235,118,10)" rx="2" ry="2" />
<text  x="1049.92" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="947.8" y="389" width="0.1" height="15.0" fill="rgb(218,163,51)" rx="2" ry="2" />
<text  x="950.82" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (145 samples, 0.31%)</title><rect x="407.6" y="197" width="3.6" height="15.0" fill="rgb(209,115,26)" rx="2" ry="2" />
<text  x="410.56" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (801 samples, 1.70%)</title><rect x="558.1" y="373" width="20.1" height="15.0" fill="rgb(235,15,22)" rx="2" ry="2" />
<text  x="561.12" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (17 samples, 0.04%)</title><rect x="78.5" y="421" width="0.4" height="15.0" fill="rgb(224,57,29)" rx="2" ry="2" />
<text  x="81.50" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (24 samples, 0.05%)</title><rect x="783.6" y="341" width="0.6" height="15.0" fill="rgb(247,109,38)" rx="2" ry="2" />
<text  x="786.63" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="853.2" y="437" width="0.1" height="15.0" fill="rgb(244,225,32)" rx="2" ry="2" />
<text  x="856.19" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (10 samples, 0.02%)</title><rect x="454.7" y="309" width="0.2" height="15.0" fill="rgb(248,111,45)" rx="2" ry="2" />
<text  x="457.67" y="319.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,662 samples, 26.94%)</title><rect x="111.0" y="421" width="317.8" height="15.0" fill="rgb(229,210,45)" rx="2" ry="2" />
<text  x="113.98" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (57 samples, 0.12%)</title><rect x="806.5" y="181" width="1.4" height="15.0" fill="rgb(240,33,53)" rx="2" ry="2" />
<text  x="809.50" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="835.1" y="357" width="0.1" height="15.0" fill="rgb(212,113,37)" rx="2" ry="2" />
<text  x="838.09" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (22 samples, 0.05%)</title><rect x="64.0" y="421" width="0.5" height="15.0" fill="rgb(205,107,42)" rx="2" ry="2" />
<text  x="66.97" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (139 samples, 0.30%)</title><rect x="36.2" y="469" width="3.5" height="15.0" fill="rgb(226,58,37)" rx="2" ry="2" />
<text  x="39.18" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (10 samples, 0.02%)</title><rect x="852.5" y="357" width="0.2" height="15.0" fill="rgb(231,179,51)" rx="2" ry="2" />
<text  x="855.48" y="367.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="542.5" y="405" width="1.2" height="15.0" fill="rgb(236,117,22)" rx="2" ry="2" />
<text  x="545.48" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (107 samples, 0.23%)</title><rect x="451.8" y="309" width="2.7" height="15.0" fill="rgb(232,185,13)" rx="2" ry="2" />
<text  x="454.84" y="319.5" ></text>
</g>
<g >
<title>db::filter_for_query (27 samples, 0.06%)</title><rect x="1066.4" y="341" width="0.7" height="15.0" fill="rgb(217,76,25)" rx="2" ry="2" />
<text  x="1069.37" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (31 samples, 0.07%)</title><rect x="105.2" y="437" width="0.7" height="15.0" fill="rgb(251,40,28)" rx="2" ry="2" />
<text  x="108.16" y="447.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%)</title><rect x="704.6" y="437" width="0.3" height="15.0" fill="rgb(229,17,7)" rx="2" ry="2" />
<text  x="707.64" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (172 samples, 0.37%)</title><rect x="838.7" y="341" width="4.3" height="15.0" fill="rgb(234,95,20)" rx="2" ry="2" />
<text  x="841.68" y="351.5" ></text>
</g>
<g >
<title>operator new (55 samples, 0.12%)</title><rect x="767.6" y="405" width="1.3" height="15.0" fill="rgb(230,21,1)" rx="2" ry="2" />
<text  x="770.57" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="631.4" y="373" width="0.4" height="15.0" fill="rgb(232,93,41)" rx="2" ry="2" />
<text  x="634.41" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (87 samples, 0.19%)</title><rect x="950.5" y="389" width="2.2" height="15.0" fill="rgb(242,196,54)" rx="2" ry="2" />
<text  x="953.48" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="915.2" y="357" width="0.4" height="15.0" fill="rgb(212,206,29)" rx="2" ry="2" />
<text  x="918.19" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (36 samples, 0.08%)</title><rect x="518.4" y="277" width="0.9" height="15.0" fill="rgb(217,152,14)" rx="2" ry="2" />
<text  x="521.38" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="826.2" y="309" width="0.1" height="15.0" fill="rgb(249,220,22)" rx="2" ry="2" />
<text  x="829.15" y="319.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (405 samples, 0.86%)</title><rect x="529.2" y="325" width="10.2" height="15.0" fill="rgb(212,166,20)" rx="2" ry="2" />
<text  x="532.23" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (97 samples, 0.21%)</title><rect x="816.1" y="133" width="2.4" height="15.0" fill="rgb(251,208,33)" rx="2" ry="2" />
<text  x="819.06" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="828.6" y="325" width="0.1" height="15.0" fill="rgb(216,213,49)" rx="2" ry="2" />
<text  x="831.64" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (17 samples, 0.04%)</title><rect x="715.8" y="405" width="0.4" height="15.0" fill="rgb(214,199,22)" rx="2" ry="2" />
<text  x="718.81" y="415.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (5 samples, 0.01%)</title><rect x="224.4" y="117" width="0.1" height="15.0" fill="rgb(246,127,36)" rx="2" ry="2" />
<text  x="227.37" y="127.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (11 samples, 0.02%)</title><rect x="229.0" y="149" width="0.3" height="15.0" fill="rgb(248,60,38)" rx="2" ry="2" />
<text  x="232.01" y="159.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (580 samples, 1.23%)</title><rect x="708.2" y="501" width="14.5" height="15.0" fill="rgb(218,157,32)" rx="2" ry="2" />
<text  x="711.18" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (39 samples, 0.08%)</title><rect x="695.0" y="485" width="1.0" height="15.0" fill="rgb(220,25,21)" rx="2" ry="2" />
<text  x="698.00" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="411.2" y="197" width="0.2" height="15.0" fill="rgb(231,78,35)" rx="2" ry="2" />
<text  x="414.20" y="207.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (27 samples, 0.06%)</title><rect x="323.8" y="165" width="0.6" height="15.0" fill="rgb(227,197,41)" rx="2" ry="2" />
<text  x="326.77" y="175.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (7 samples, 0.01%)</title><rect x="609.6" y="405" width="0.2" height="15.0" fill="rgb(217,1,32)" rx="2" ry="2" />
<text  x="612.58" y="415.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="420.9" y="277" width="0.3" height="15.0" fill="rgb(251,14,45)" rx="2" ry="2" />
<text  x="423.91" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (135 samples, 0.29%)</title><rect x="196.7" y="37" width="3.3" height="15.0" fill="rgb(247,74,23)" rx="2" ry="2" />
<text  x="199.66" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (12 samples, 0.03%)</title><rect x="692.7" y="453" width="0.3" height="15.0" fill="rgb(240,139,18)" rx="2" ry="2" />
<text  x="695.69" y="463.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (5 samples, 0.01%)</title><rect x="881.5" y="309" width="0.1" height="15.0" fill="rgb(219,190,3)" rx="2" ry="2" />
<text  x="884.48" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,927 samples, 10.48%)</title><rect x="300.1" y="373" width="123.7" height="15.0" fill="rgb(229,215,1)" rx="2" ry="2" />
<text  x="303.10" y="383.5" >flat_mutation_r..</text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (380 samples, 0.81%)</title><rect x="1026.5" y="213" width="9.6" height="15.0" fill="rgb(245,74,51)" rx="2" ry="2" />
<text  x="1029.54" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (69 samples, 0.15%)</title><rect x="1156.9" y="421" width="1.7" height="15.0" fill="rgb(210,140,10)" rx="2" ry="2" />
<text  x="1159.89" y="431.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="510.5" y="197" width="0.7" height="15.0" fill="rgb(222,78,17)" rx="2" ry="2" />
<text  x="513.45" y="207.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (8 samples, 0.02%)</title><rect x="954.1" y="389" width="0.2" height="15.0" fill="rgb(230,10,14)" rx="2" ry="2" />
<text  x="957.07" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="661.6" y="437" width="0.5" height="15.0" fill="rgb(211,110,1)" rx="2" ry="2" />
<text  x="664.59" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="457.2" y="261" width="0.2" height="15.0" fill="rgb(253,100,20)" rx="2" ry="2" />
<text  x="460.16" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="813.4" y="117" width="0.3" height="15.0" fill="rgb(237,0,41)" rx="2" ry="2" />
<text  x="816.40" y="127.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="912.4" y="309" width="0.2" height="15.0" fill="rgb(227,47,29)" rx="2" ry="2" />
<text  x="915.43" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="648.9" y="469" width="0.1" height="15.0" fill="rgb(232,174,8)" rx="2" ry="2" />
<text  x="651.91" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (355 samples, 0.76%)</title><rect x="809.9" y="213" width="8.9" height="15.0" fill="rgb(253,60,44)" rx="2" ry="2" />
<text  x="812.94" y="223.5" ></text>
</g>
<g >
<title>row::compact_and_expire (836 samples, 1.78%)</title><rect x="377.0" y="213" width="21.0" height="15.0" fill="rgb(229,74,4)" rx="2" ry="2" />
<text  x="379.99" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="675.1" y="469" width="0.2" height="15.0" fill="rgb(246,150,22)" rx="2" ry="2" />
<text  x="678.14" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (10 samples, 0.02%)</title><rect x="871.6" y="357" width="0.3" height="15.0" fill="rgb(220,45,24)" rx="2" ry="2" />
<text  x="874.64" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (6 samples, 0.01%)</title><rect x="955.0" y="357" width="0.1" height="15.0" fill="rgb(230,136,3)" rx="2" ry="2" />
<text  x="957.97" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (16 samples, 0.03%)</title><rect x="881.4" y="389" width="0.4" height="15.0" fill="rgb(217,146,37)" rx="2" ry="2" />
<text  x="884.43" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (4 samples, 0.01%)</title><rect x="1121.9" y="421" width="0.1" height="15.0" fill="rgb(223,14,14)" rx="2" ry="2" />
<text  x="1124.87" y="431.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (4 samples, 0.01%)</title><rect x="826.4" y="309" width="0.1" height="15.0" fill="rgb(222,86,53)" rx="2" ry="2" />
<text  x="829.38" y="319.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (9 samples, 0.02%)</title><rect x="83.1" y="453" width="0.2" height="15.0" fill="rgb(246,152,43)" rx="2" ry="2" />
<text  x="86.07" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (246 samples, 0.52%)</title><rect x="214.1" y="133" width="6.2" height="15.0" fill="rgb(241,66,14)" rx="2" ry="2" />
<text  x="217.10" y="143.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (264 samples, 0.56%)</title><rect x="16.0" y="517" width="6.7" height="15.0" fill="rgb(224,168,10)" rx="2" ry="2" />
<text  x="19.02" y="527.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="592.0" y="421" width="0.2" height="15.0" fill="rgb(254,105,40)" rx="2" ry="2" />
<text  x="594.98" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (4 samples, 0.01%)</title><rect x="291.8" y="325" width="0.1" height="15.0" fill="rgb(246,129,2)" rx="2" ry="2" />
<text  x="294.77" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (12 samples, 0.03%)</title><rect x="985.5" y="357" width="0.3" height="15.0" fill="rgb(219,219,30)" rx="2" ry="2" />
<text  x="988.50" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="269.5" y="325" width="0.3" height="15.0" fill="rgb(231,205,3)" rx="2" ry="2" />
<text  x="272.50" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="980.7" y="325" width="0.6" height="15.0" fill="rgb(239,167,33)" rx="2" ry="2" />
<text  x="983.70" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (87 samples, 0.19%)</title><rect x="493.0" y="325" width="2.2" height="15.0" fill="rgb(248,95,53)" rx="2" ry="2" />
<text  x="496.00" y="335.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (6 samples, 0.01%)</title><rect x="1045.8" y="261" width="0.2" height="15.0" fill="rgb(212,140,43)" rx="2" ry="2" />
<text  x="1048.84" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="709.4" y="485" width="0.1" height="15.0" fill="rgb(223,45,46)" rx="2" ry="2" />
<text  x="712.36" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (7 samples, 0.01%)</title><rect x="18.9" y="293" width="0.2" height="15.0" fill="rgb(216,116,11)" rx="2" ry="2" />
<text  x="21.91" y="303.5" ></text>
</g>
<g >
<title>schema::position (7 samples, 0.01%)</title><rect x="1124.3" y="421" width="0.2" height="15.0" fill="rgb(247,214,49)" rx="2" ry="2" />
<text  x="1127.31" y="431.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.01%)</title><rect x="828.9" y="341" width="0.1" height="15.0" fill="rgb(245,33,14)" rx="2" ry="2" />
<text  x="831.86" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (51 samples, 0.11%)</title><rect x="702.3" y="453" width="1.2" height="15.0" fill="rgb(248,123,37)" rx="2" ry="2" />
<text  x="705.25" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (45 samples, 0.10%)</title><rect x="233.9" y="149" width="1.1" height="15.0" fill="rgb(228,3,3)" rx="2" ry="2" />
<text  x="236.91" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (24 samples, 0.05%)</title><rect x="144.7" y="277" width="0.6" height="15.0" fill="rgb(250,37,37)" rx="2" ry="2" />
<text  x="147.72" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (6 samples, 0.01%)</title><rect x="950.0" y="405" width="0.2" height="15.0" fill="rgb(217,37,6)" rx="2" ry="2" />
<text  x="953.03" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (13 samples, 0.03%)</title><rect x="775.3" y="309" width="0.4" height="15.0" fill="rgb(253,217,8)" rx="2" ry="2" />
<text  x="778.35" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="835.2" y="357" width="0.2" height="15.0" fill="rgb(214,217,7)" rx="2" ry="2" />
<text  x="838.19" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="515.7" y="245" width="0.1" height="15.0" fill="rgb(241,53,50)" rx="2" ry="2" />
<text  x="518.72" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="428.6" y="405" width="0.2" height="15.0" fill="rgb(242,180,34)" rx="2" ry="2" />
<text  x="431.64" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (6 samples, 0.01%)</title><rect x="997.4" y="261" width="0.1" height="15.0" fill="rgb(247,9,37)" rx="2" ry="2" />
<text  x="1000.40" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (78 samples, 0.17%)</title><rect x="909.6" y="277" width="2.0" height="15.0" fill="rgb(209,32,30)" rx="2" ry="2" />
<text  x="912.64" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (4 samples, 0.01%)</title><rect x="717.9" y="421" width="0.1" height="15.0" fill="rgb(211,47,39)" rx="2" ry="2" />
<text  x="720.91" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::io_pgetevents (4 samples, 0.01%)</title><rect x="1177.9" y="469" width="0.1" height="15.0" fill="rgb(214,68,32)" rx="2" ry="2" />
<text  x="1180.85" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="629.3" y="437" width="0.1" height="15.0" fill="rgb(231,10,2)" rx="2" ry="2" />
<text  x="632.26" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (9 samples, 0.02%)</title><rect x="880.5" y="389" width="0.2" height="15.0" fill="rgb(231,203,8)" rx="2" ry="2" />
<text  x="883.52" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (41 samples, 0.09%)</title><rect x="897.5" y="405" width="1.0" height="15.0" fill="rgb(219,25,33)" rx="2" ry="2" />
<text  x="900.52" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (4 samples, 0.01%)</title><rect x="520.4" y="293" width="0.1" height="15.0" fill="rgb(209,121,50)" rx="2" ry="2" />
<text  x="523.37" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (4 samples, 0.01%)</title><rect x="229.3" y="181" width="0.1" height="15.0" fill="rgb(219,137,10)" rx="2" ry="2" />
<text  x="232.29" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::find_and_unlink_span_reclaiming (4 samples, 0.01%)</title><rect x="981.2" y="277" width="0.1" height="15.0" fill="rgb(220,32,28)" rx="2" ry="2" />
<text  x="984.15" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%)</title><rect x="658.2" y="453" width="0.1" height="15.0" fill="rgb(231,164,50)" rx="2" ry="2" />
<text  x="661.20" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="419.7" y="277" width="0.1" height="15.0" fill="rgb(225,150,41)" rx="2" ry="2" />
<text  x="422.66" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (12 samples, 0.03%)</title><rect x="285.5" y="293" width="0.3" height="15.0" fill="rgb(218,209,13)" rx="2" ry="2" />
<text  x="288.49" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::get_value (4 samples, 0.01%)</title><rect x="667.0" y="485" width="0.1" height="15.0" fill="rgb(239,88,14)" rx="2" ry="2" />
<text  x="670.01" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (506 samples, 1.08%)</title><rect x="564.9" y="325" width="12.7" height="15.0" fill="rgb(225,171,1)" rx="2" ry="2" />
<text  x="567.95" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (21 samples, 0.04%)</title><rect x="592.2" y="421" width="0.5" height="15.0" fill="rgb(244,170,32)" rx="2" ry="2" />
<text  x="595.18" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%)</title><rect x="521.1" y="325" width="0.1" height="15.0" fill="rgb(237,155,27)" rx="2" ry="2" />
<text  x="524.09" y="335.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (172 samples, 0.37%)</title><rect x="1030.3" y="181" width="4.3" height="15.0" fill="rgb(221,142,11)" rx="2" ry="2" />
<text  x="1033.25" y="191.5" ></text>
</g>
<g >
<title>database::has_keyspace (101 samples, 0.21%)</title><rect x="843.1" y="357" width="2.6" height="15.0" fill="rgb(244,128,37)" rx="2" ry="2" />
<text  x="846.12" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (12 samples, 0.03%)</title><rect x="991.7" y="293" width="0.3" height="15.0" fill="rgb(217,123,17)" rx="2" ry="2" />
<text  x="994.75" y="303.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (16 samples, 0.03%)</title><rect x="78.9" y="421" width="0.4" height="15.0" fill="rgb(208,71,30)" rx="2" ry="2" />
<text  x="81.93" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (31 samples, 0.07%)</title><rect x="1029.1" y="181" width="0.8" height="15.0" fill="rgb(252,43,11)" rx="2" ry="2" />
<text  x="1032.07" y="191.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1174.0" y="405" width="0.1" height="15.0" fill="rgb(213,94,45)" rx="2" ry="2" />
<text  x="1177.01" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (4 samples, 0.01%)</title><rect x="556.6" y="421" width="0.1" height="15.0" fill="rgb(220,59,44)" rx="2" ry="2" />
<text  x="559.61" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="974.0" y="373" width="0.2" height="15.0" fill="rgb(227,109,29)" rx="2" ry="2" />
<text  x="977.00" y="383.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (133 samples, 0.28%)</title><rect x="535.8" y="293" width="3.3" height="15.0" fill="rgb(238,181,41)" rx="2" ry="2" />
<text  x="538.80" y="303.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (160 samples, 0.34%)</title><rect x="511.5" y="229" width="4.0" height="15.0" fill="rgb(220,79,47)" rx="2" ry="2" />
<text  x="514.50" y="239.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (4 samples, 0.01%)</title><rect x="900.2" y="389" width="0.1" height="15.0" fill="rgb(212,138,4)" rx="2" ry="2" />
<text  x="903.18" y="399.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (63 samples, 0.13%)</title><rect x="313.0" y="229" width="1.6" height="15.0" fill="rgb(247,20,4)" rx="2" ry="2" />
<text  x="315.98" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (64 samples, 0.14%)</title><rect x="812.9" y="133" width="1.6" height="15.0" fill="rgb(243,220,44)" rx="2" ry="2" />
<text  x="815.90" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%)</title><rect x="23.0" y="469" width="0.1" height="15.0" fill="rgb(249,51,31)" rx="2" ry="2" />
<text  x="25.98" y="479.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (39 samples, 0.08%)</title><rect x="695.0" y="501" width="1.0" height="15.0" fill="rgb(225,22,49)" rx="2" ry="2" />
<text  x="698.00" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (53 samples, 0.11%)</title><rect x="204.5" y="69" width="1.3" height="15.0" fill="rgb(232,15,19)" rx="2" ry="2" />
<text  x="207.49" y="79.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (14 samples, 0.03%)</title><rect x="81.6" y="453" width="0.4" height="15.0" fill="rgb(249,180,39)" rx="2" ry="2" />
<text  x="84.64" y="463.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (44 samples, 0.09%)</title><rect x="468.8" y="293" width="1.1" height="15.0" fill="rgb(214,22,15)" rx="2" ry="2" />
<text  x="471.78" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (30 samples, 0.06%)</title><rect x="1171.5" y="453" width="0.7" height="15.0" fill="rgb(205,214,6)" rx="2" ry="2" />
<text  x="1174.48" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (44 samples, 0.09%)</title><rect x="951.6" y="373" width="1.1" height="15.0" fill="rgb(252,58,32)" rx="2" ry="2" />
<text  x="954.56" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (20 samples, 0.04%)</title><rect x="693.3" y="485" width="0.5" height="15.0" fill="rgb(244,83,42)" rx="2" ry="2" />
<text  x="696.26" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (65 samples, 0.14%)</title><rect x="806.3" y="197" width="1.6" height="15.0" fill="rgb(248,60,35)" rx="2" ry="2" />
<text  x="809.30" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="149.3" y="261" width="0.1" height="15.0" fill="rgb(216,93,36)" rx="2" ry="2" />
<text  x="152.26" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (12 samples, 0.03%)</title><rect x="554.5" y="389" width="0.3" height="15.0" fill="rgb(212,18,1)" rx="2" ry="2" />
<text  x="557.45" y="399.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (125 samples, 0.27%)</title><rect x="1151.2" y="469" width="3.2" height="15.0" fill="rgb(221,37,10)" rx="2" ry="2" />
<text  x="1154.24" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (12 samples, 0.03%)</title><rect x="944.6" y="405" width="0.3" height="15.0" fill="rgb(240,201,5)" rx="2" ry="2" />
<text  x="947.61" y="415.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (11 samples, 0.02%)</title><rect x="227.1" y="117" width="0.3" height="15.0" fill="rgb(225,114,42)" rx="2" ry="2" />
<text  x="230.08" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (78 samples, 0.17%)</title><rect x="971.7" y="357" width="2.0" height="15.0" fill="rgb(213,174,8)" rx="2" ry="2" />
<text  x="974.74" y="367.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%)</title><rect x="655.0" y="469" width="0.1" height="15.0" fill="rgb(222,43,8)" rx="2" ry="2" />
<text  x="657.96" y="479.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (11 samples, 0.02%)</title><rect x="609.3" y="405" width="0.3" height="15.0" fill="rgb(227,124,7)" rx="2" ry="2" />
<text  x="612.30" y="415.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (7 samples, 0.01%)</title><rect x="1052.7" y="277" width="0.2" height="15.0" fill="rgb(241,118,20)" rx="2" ry="2" />
<text  x="1055.74" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1074.4" y="277" width="0.2" height="15.0" fill="rgb(209,229,30)" rx="2" ry="2" />
<text  x="1077.43" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="98.0" y="421" width="0.2" height="15.0" fill="rgb(243,25,3)" rx="2" ry="2" />
<text  x="100.98" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="784.4" y="341" width="0.1" height="15.0" fill="rgb(225,123,53)" rx="2" ry="2" />
<text  x="787.36" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="962.0" y="357" width="0.4" height="15.0" fill="rgb(241,100,14)" rx="2" ry="2" />
<text  x="965.03" y="367.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,213 samples, 2.58%)</title><rect x="1015.5" y="277" width="30.5" height="15.0" fill="rgb(241,208,2)" rx="2" ry="2" />
<text  x="1018.54" y="287.5" >se..</text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="873.3" y="405" width="0.4" height="15.0" fill="rgb(242,0,48)" rx="2" ry="2" />
<text  x="876.27" y="415.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (18 samples, 0.04%)</title><rect x="101.5" y="405" width="0.5" height="15.0" fill="rgb(240,179,47)" rx="2" ry="2" />
<text  x="104.52" y="415.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (5 samples, 0.01%)</title><rect x="1134.2" y="421" width="0.1" height="15.0" fill="rgb(254,76,37)" rx="2" ry="2" />
<text  x="1137.20" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (55 samples, 0.12%)</title><rect x="269.8" y="325" width="1.4" height="15.0" fill="rgb(234,60,9)" rx="2" ry="2" />
<text  x="272.83" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="247.3" y="197" width="0.1" height="15.0" fill="rgb(251,118,35)" rx="2" ry="2" />
<text  x="250.29" y="207.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (174 samples, 0.37%)</title><rect x="952.7" y="421" width="4.4" height="15.0" fill="rgb(206,222,52)" rx="2" ry="2" />
<text  x="955.74" y="431.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (4 samples, 0.01%)</title><rect x="227.5" y="101" width="0.1" height="15.0" fill="rgb(228,60,29)" rx="2" ry="2" />
<text  x="230.45" y="111.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (6 samples, 0.01%)</title><rect x="1034.1" y="165" width="0.2" height="15.0" fill="rgb(240,119,30)" rx="2" ry="2" />
<text  x="1037.12" y="175.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%)</title><rect x="1006.8" y="293" width="0.3" height="15.0" fill="rgb(232,79,46)" rx="2" ry="2" />
<text  x="1009.83" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (39 samples, 0.08%)</title><rect x="228.3" y="181" width="1.0" height="15.0" fill="rgb(242,62,28)" rx="2" ry="2" />
<text  x="231.31" y="191.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="861.6" y="421" width="0.2" height="15.0" fill="rgb(243,185,6)" rx="2" ry="2" />
<text  x="864.60" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (394 samples, 0.84%)</title><rect x="567.2" y="309" width="9.9" height="15.0" fill="rgb(223,13,44)" rx="2" ry="2" />
<text  x="570.18" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (13 samples, 0.03%)</title><rect x="251.0" y="213" width="0.3" height="15.0" fill="rgb(234,34,27)" rx="2" ry="2" />
<text  x="254.00" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (10 samples, 0.02%)</title><rect x="45.7" y="485" width="0.2" height="15.0" fill="rgb(229,53,24)" rx="2" ry="2" />
<text  x="48.67" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (26 samples, 0.06%)</title><rect x="32.8" y="485" width="0.7" height="15.0" fill="rgb(235,130,43)" rx="2" ry="2" />
<text  x="35.84" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (4 samples, 0.01%)</title><rect x="467.6" y="293" width="0.1" height="15.0" fill="rgb(241,87,54)" rx="2" ry="2" />
<text  x="470.60" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="924.2" y="357" width="0.5" height="15.0" fill="rgb(233,35,14)" rx="2" ry="2" />
<text  x="927.25" y="367.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (9 samples, 0.02%)</title><rect x="591.0" y="405" width="0.2" height="15.0" fill="rgb(223,189,20)" rx="2" ry="2" />
<text  x="593.98" y="415.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (11 samples, 0.02%)</title><rect x="54.2" y="469" width="0.3" height="15.0" fill="rgb(237,135,42)" rx="2" ry="2" />
<text  x="57.18" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="619.8" y="389" width="0.1" height="15.0" fill="rgb(216,172,14)" rx="2" ry="2" />
<text  x="622.82" y="399.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (11 samples, 0.02%)</title><rect x="127.7" y="261" width="0.3" height="15.0" fill="rgb(238,56,16)" rx="2" ry="2" />
<text  x="130.70" y="271.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="158.0" y="181" width="0.8" height="15.0" fill="rgb(219,68,8)" rx="2" ry="2" />
<text  x="160.97" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1043.8" y="261" width="0.1" height="15.0" fill="rgb(241,85,47)" rx="2" ry="2" />
<text  x="1046.76" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (15 samples, 0.03%)</title><rect x="456.8" y="261" width="0.4" height="15.0" fill="rgb(227,84,13)" rx="2" ry="2" />
<text  x="459.78" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (31 samples, 0.07%)</title><rect x="159.0" y="213" width="0.8" height="15.0" fill="rgb(208,210,25)" rx="2" ry="2" />
<text  x="162.00" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (71 samples, 0.15%)</title><rect x="916.7" y="357" width="1.8" height="15.0" fill="rgb(236,74,33)" rx="2" ry="2" />
<text  x="919.74" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (4 samples, 0.01%)</title><rect x="697.9" y="485" width="0.1" height="15.0" fill="rgb(209,85,26)" rx="2" ry="2" />
<text  x="700.93" y="495.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.16%)</title><rect x="1041.9" y="261" width="1.8" height="15.0" fill="rgb(214,49,53)" rx="2" ry="2" />
<text  x="1044.88" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="290.0" y="309" width="0.1" height="15.0" fill="rgb(206,52,45)" rx="2" ry="2" />
<text  x="292.98" y="319.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.01%)</title><rect x="1033.7" y="133" width="0.1" height="15.0" fill="rgb(250,100,16)" rx="2" ry="2" />
<text  x="1036.72" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (5 samples, 0.01%)</title><rect x="790.8" y="341" width="0.2" height="15.0" fill="rgb(207,158,53)" rx="2" ry="2" />
<text  x="793.83" y="351.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (31 samples, 0.07%)</title><rect x="703.5" y="453" width="0.8" height="15.0" fill="rgb(254,155,39)" rx="2" ry="2" />
<text  x="706.53" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="1101.9" y="341" width="0.1" height="15.0" fill="rgb(223,82,9)" rx="2" ry="2" />
<text  x="1104.92" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="650.1" y="485" width="0.2" height="15.0" fill="rgb(240,78,28)" rx="2" ry="2" />
<text  x="653.09" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="301.4" y="293" width="0.8" height="15.0" fill="rgb(208,176,35)" rx="2" ry="2" />
<text  x="304.40" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="394.7" y="165" width="0.3" height="15.0" fill="rgb(212,223,22)" rx="2" ry="2" />
<text  x="397.66" y="175.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (163 samples, 0.35%)</title><rect x="474.2" y="277" width="4.1" height="15.0" fill="rgb(209,229,4)" rx="2" ry="2" />
<text  x="477.20" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (65 samples, 0.14%)</title><rect x="256.5" y="213" width="1.6" height="15.0" fill="rgb(238,147,51)" rx="2" ry="2" />
<text  x="259.50" y="223.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,503 samples, 3.20%)</title><rect x="791.1" y="341" width="37.8" height="15.0" fill="rgb(248,101,39)" rx="2" ry="2" />
<text  x="794.14" y="351.5" >ser..</text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="927.3" y="325" width="0.2" height="15.0" fill="rgb(206,55,48)" rx="2" ry="2" />
<text  x="930.31" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (9 samples, 0.02%)</title><rect x="244.7" y="213" width="0.3" height="15.0" fill="rgb(230,150,41)" rx="2" ry="2" />
<text  x="247.75" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (23 samples, 0.05%)</title><rect x="880.4" y="485" width="0.6" height="15.0" fill="rgb(231,215,29)" rx="2" ry="2" />
<text  x="883.42" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="823.8" y="261" width="0.1" height="15.0" fill="rgb(252,189,5)" rx="2" ry="2" />
<text  x="826.79" y="271.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (86 samples, 0.18%)</title><rect x="630.0" y="421" width="2.2" height="15.0" fill="rgb(218,29,24)" rx="2" ry="2" />
<text  x="633.03" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1076.4" y="325" width="0.3" height="15.0" fill="rgb(226,203,22)" rx="2" ry="2" />
<text  x="1079.44" y="335.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,670 samples, 5.68%)</title><rect x="778.8" y="405" width="67.0" height="15.0" fill="rgb(213,43,34)" rx="2" ry="2" />
<text  x="781.81" y="415.5" >service..</text>
</g>
<g >
<title>schema::column_at (70 samples, 0.15%)</title><rect x="208.2" y="117" width="1.8" height="15.0" fill="rgb(245,16,24)" rx="2" ry="2" />
<text  x="211.23" y="127.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (19 samples, 0.04%)</title><rect x="411.4" y="197" width="0.5" height="15.0" fill="rgb(206,0,47)" rx="2" ry="2" />
<text  x="414.37" y="207.5" ></text>
</g>
<g >
<title>write_row&lt;ser::writer_of_deletable_row&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1139.9" y="149" width="0.1" height="15.0" fill="rgb(214,198,18)" rx="2" ry="2" />
<text  x="1142.90" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="515.4" y="213" width="0.1" height="15.0" fill="rgb(245,191,22)" rx="2" ry="2" />
<text  x="518.40" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;database&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1044.8" y="261" width="0.2" height="15.0" fill="rgb(227,139,7)" rx="2" ry="2" />
<text  x="1047.81" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%)</title><rect x="748.1" y="389" width="0.2" height="15.0" fill="rgb(228,112,23)" rx="2" ry="2" />
<text  x="751.11" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (4 samples, 0.01%)</title><rect x="824.2" y="277" width="0.1" height="15.0" fill="rgb(217,138,53)" rx="2" ry="2" />
<text  x="827.22" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="951.5" y="373" width="0.1" height="15.0" fill="rgb(241,182,42)" rx="2" ry="2" />
<text  x="954.46" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (17 samples, 0.04%)</title><rect x="880.5" y="453" width="0.4" height="15.0" fill="rgb(251,192,51)" rx="2" ry="2" />
<text  x="883.47" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (62 samples, 0.13%)</title><rect x="505.0" y="261" width="1.5" height="15.0" fill="rgb(231,37,29)" rx="2" ry="2" />
<text  x="507.95" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (7 samples, 0.01%)</title><rect x="491.8" y="325" width="0.2" height="15.0" fill="rgb(209,207,41)" rx="2" ry="2" />
<text  x="494.82" y="335.5" ></text>
</g>
<g >
<title>__strlen_avx2 (77 samples, 0.16%)</title><rect x="1018.6" y="245" width="1.9" height="15.0" fill="rgb(220,39,43)" rx="2" ry="2" />
<text  x="1021.58" y="255.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (11 samples, 0.02%)</title><rect x="767.1" y="357" width="0.2" height="15.0" fill="rgb(209,134,8)" rx="2" ry="2" />
<text  x="770.06" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (12 samples, 0.03%)</title><rect x="1140.9" y="485" width="0.3" height="15.0" fill="rgb(246,198,29)" rx="2" ry="2" />
<text  x="1143.90" y="495.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (138 samples, 0.29%)</title><rect x="863.7" y="421" width="3.4" height="15.0" fill="rgb(229,142,32)" rx="2" ry="2" />
<text  x="866.68" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (157 samples, 0.33%)</title><rect x="829.3" y="357" width="4.0" height="15.0" fill="rgb(233,193,3)" rx="2" ry="2" />
<text  x="832.34" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="490.9" y="181" width="0.3" height="15.0" fill="rgb(236,210,29)" rx="2" ry="2" />
<text  x="493.87" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (531 samples, 1.13%)</title><rect x="901.9" y="341" width="13.3" height="15.0" fill="rgb(213,185,33)" rx="2" ry="2" />
<text  x="904.86" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%)</title><rect x="397.1" y="149" width="0.3" height="15.0" fill="rgb(236,134,20)" rx="2" ry="2" />
<text  x="400.09" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (5 samples, 0.01%)</title><rect x="918.8" y="341" width="0.1" height="15.0" fill="rgb(219,35,37)" rx="2" ry="2" />
<text  x="921.78" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (10 samples, 0.02%)</title><rect x="957.2" y="421" width="0.2" height="15.0" fill="rgb(231,136,51)" rx="2" ry="2" />
<text  x="960.18" y="431.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.10%)</title><rect x="35.0" y="469" width="1.1" height="15.0" fill="rgb(251,173,33)" rx="2" ry="2" />
<text  x="38.00" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.01%)</title><rect x="264.7" y="261" width="0.1" height="15.0" fill="rgb(221,15,13)" rx="2" ry="2" />
<text  x="267.71" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (35 samples, 0.07%)</title><rect x="695.0" y="437" width="0.9" height="15.0" fill="rgb(223,138,32)" rx="2" ry="2" />
<text  x="698.00" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (5 samples, 0.01%)</title><rect x="251.3" y="213" width="0.2" height="15.0" fill="rgb(235,213,2)" rx="2" ry="2" />
<text  x="254.33" y="223.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (10 samples, 0.02%)</title><rect x="898.6" y="405" width="0.2" height="15.0" fill="rgb(217,76,9)" rx="2" ry="2" />
<text  x="901.60" y="415.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.19%)</title><rect x="286.9" y="277" width="2.3" height="15.0" fill="rgb(213,59,47)" rx="2" ry="2" />
<text  x="289.92" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="675.0" y="453" width="0.1" height="15.0" fill="rgb(245,32,20)" rx="2" ry="2" />
<text  x="677.99" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (13 samples, 0.03%)</title><rect x="21.7" y="421" width="0.3" height="15.0" fill="rgb(238,116,21)" rx="2" ry="2" />
<text  x="24.67" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.04%)</title><rect x="405.7" y="229" width="0.5" height="15.0" fill="rgb(207,220,20)" rx="2" ry="2" />
<text  x="408.70" y="239.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (9 samples, 0.02%)</title><rect x="240.4" y="245" width="0.3" height="15.0" fill="rgb(244,175,35)" rx="2" ry="2" />
<text  x="243.43" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="830.3" y="341" width="0.1" height="15.0" fill="rgb(224,159,49)" rx="2" ry="2" />
<text  x="833.29" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (142 samples, 0.30%)</title><rect x="456.1" y="277" width="3.5" height="15.0" fill="rgb(252,144,52)" rx="2" ry="2" />
<text  x="459.08" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.02%)</title><rect x="1102.5" y="373" width="0.3" height="15.0" fill="rgb(253,33,18)" rx="2" ry="2" />
<text  x="1105.55" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="684.4" y="485" width="0.2" height="15.0" fill="rgb(253,60,19)" rx="2" ry="2" />
<text  x="687.40" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (22 samples, 0.05%)</title><rect x="104.6" y="421" width="0.6" height="15.0" fill="rgb(228,15,3)" rx="2" ry="2" />
<text  x="107.61" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (27 samples, 0.06%)</title><rect x="955.6" y="373" width="0.7" height="15.0" fill="rgb(252,198,29)" rx="2" ry="2" />
<text  x="958.63" y="383.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%)</title><rect x="398.3" y="181" width="0.1" height="15.0" fill="rgb(247,73,18)" rx="2" ry="2" />
<text  x="401.32" y="191.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (14 samples, 0.03%)</title><rect x="15.2" y="613" width="0.4" height="15.0" fill="rgb(235,25,10)" rx="2" ry="2" />
<text  x="18.25" y="623.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="425.5" y="357" width="0.2" height="15.0" fill="rgb(252,126,2)" rx="2" ry="2" />
<text  x="428.53" y="367.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (4 samples, 0.01%)</title><rect x="853.4" y="437" width="0.1" height="15.0" fill="rgb(249,2,51)" rx="2" ry="2" />
<text  x="856.39" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (22 samples, 0.05%)</title><rect x="820.1" y="229" width="0.6" height="15.0" fill="rgb(219,204,27)" rx="2" ry="2" />
<text  x="823.10" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (20 samples, 0.04%)</title><rect x="207.7" y="117" width="0.5" height="15.0" fill="rgb(231,176,24)" rx="2" ry="2" />
<text  x="210.73" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (135 samples, 0.29%)</title><rect x="856.5" y="405" width="3.4" height="15.0" fill="rgb(248,118,5)" rx="2" ry="2" />
<text  x="859.48" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="844.3" y="309" width="0.5" height="15.0" fill="rgb(249,166,38)" rx="2" ry="2" />
<text  x="847.28" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (99 samples, 0.21%)</title><rect x="864.5" y="405" width="2.5" height="15.0" fill="rgb(236,24,42)" rx="2" ry="2" />
<text  x="867.48" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (22 samples, 0.05%)</title><rect x="357.6" y="149" width="0.6" height="15.0" fill="rgb(240,127,51)" rx="2" ry="2" />
<text  x="360.61" y="159.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,669 samples, 9.93%)</title><rect x="302.6" y="309" width="117.2" height="15.0" fill="rgb(218,54,19)" rx="2" ry="2" />
<text  x="305.63" y="319.5" >std::__invoke_..</text>
</g>
<g >
<title>row::compact_and_expire (6 samples, 0.01%)</title><rect x="695.6" y="293" width="0.1" height="15.0" fill="rgb(236,217,11)" rx="2" ry="2" />
<text  x="698.60" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="660.7" y="453" width="0.2" height="15.0" fill="rgb(241,4,22)" rx="2" ry="2" />
<text  x="663.68" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (24 samples, 0.05%)</title><rect x="796.1" y="277" width="0.6" height="15.0" fill="rgb(220,188,27)" rx="2" ry="2" />
<text  x="799.11" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="555.5" y="421" width="0.2" height="15.0" fill="rgb(248,41,38)" rx="2" ry="2" />
<text  x="558.53" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="451.1" y="277" width="0.6" height="15.0" fill="rgb(235,50,51)" rx="2" ry="2" />
<text  x="454.14" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,323 samples, 13.45%)</title><rect x="118.3" y="357" width="158.7" height="15.0" fill="rgb(217,180,47)" rx="2" ry="2" />
<text  x="121.26" y="367.5" >mutation_fragment_me..</text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (5 samples, 0.01%)</title><rect x="15.9" y="501" width="0.1" height="15.0" fill="rgb(254,192,18)" rx="2" ry="2" />
<text  x="18.87" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (8 samples, 0.02%)</title><rect x="65.5" y="437" width="0.2" height="15.0" fill="rgb(229,153,20)" rx="2" ry="2" />
<text  x="68.52" y="447.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (258 samples, 0.55%)</title><rect x="867.5" y="453" width="6.4" height="15.0" fill="rgb(239,27,30)" rx="2" ry="2" />
<text  x="870.47" y="463.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1097.0" y="309" width="0.1" height="15.0" fill="rgb(213,31,42)" rx="2" ry="2" />
<text  x="1099.97" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="1003.2" y="229" width="0.7" height="15.0" fill="rgb(236,34,9)" rx="2" ry="2" />
<text  x="1006.24" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="429.6" y="405" width="0.2" height="15.0" fill="rgb(208,37,20)" rx="2" ry="2" />
<text  x="432.65" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%)</title><rect x="878.3" y="485" width="0.3" height="15.0" fill="rgb(207,79,2)" rx="2" ry="2" />
<text  x="881.34" y="495.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="535.5" y="309" width="0.2" height="15.0" fill="rgb(224,183,24)" rx="2" ry="2" />
<text  x="538.50" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (4 samples, 0.01%)</title><rect x="312.9" y="229" width="0.1" height="15.0" fill="rgb(220,155,24)" rx="2" ry="2" />
<text  x="315.88" y="239.5" ></text>
</g>
<g >
<title>row::external_memory_usage (275 samples, 0.58%)</title><rect x="213.7" y="149" width="6.9" height="15.0" fill="rgb(224,220,11)" rx="2" ry="2" />
<text  x="216.72" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (5 samples, 0.01%)</title><rect x="916.5" y="357" width="0.1" height="15.0" fill="rgb(251,173,2)" rx="2" ry="2" />
<text  x="919.52" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (5 samples, 0.01%)</title><rect x="947.9" y="405" width="0.2" height="15.0" fill="rgb(234,177,16)" rx="2" ry="2" />
<text  x="950.95" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="941.1" y="325" width="0.5" height="15.0" fill="rgb(206,212,14)" rx="2" ry="2" />
<text  x="944.07" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (4 samples, 0.01%)</title><rect x="800.7" y="293" width="0.1" height="15.0" fill="rgb(245,53,11)" rx="2" ry="2" />
<text  x="803.67" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="440.5" y="341" width="0.2" height="15.0" fill="rgb(207,93,30)" rx="2" ry="2" />
<text  x="443.52" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="269.1" y="309" width="0.2" height="15.0" fill="rgb(228,26,52)" rx="2" ry="2" />
<text  x="272.07" y="319.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="159.0" y="197" width="0.8" height="15.0" fill="rgb(241,121,26)" rx="2" ry="2" />
<text  x="162.00" y="207.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (8 samples, 0.02%)</title><rect x="807.7" y="165" width="0.2" height="15.0" fill="rgb(236,162,38)" rx="2" ry="2" />
<text  x="810.73" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.01%)</title><rect x="748.3" y="389" width="0.2" height="15.0" fill="rgb(215,32,24)" rx="2" ry="2" />
<text  x="751.34" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (9 samples, 0.02%)</title><rect x="416.7" y="245" width="0.3" height="15.0" fill="rgb(241,98,17)" rx="2" ry="2" />
<text  x="419.75" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (43 samples, 0.09%)</title><rect x="1102.8" y="373" width="1.1" height="15.0" fill="rgb(242,199,25)" rx="2" ry="2" />
<text  x="1105.85" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (13 samples, 0.03%)</title><rect x="22.8" y="565" width="0.3" height="15.0" fill="rgb(252,196,21)" rx="2" ry="2" />
<text  x="25.80" y="575.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="1170.8" y="437" width="0.1" height="15.0" fill="rgb(228,169,5)" rx="2" ry="2" />
<text  x="1173.80" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (13 samples, 0.03%)</title><rect x="509.1" y="229" width="0.4" height="15.0" fill="rgb(222,164,14)" rx="2" ry="2" />
<text  x="512.14" y="239.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (216 samples, 0.46%)</title><rect x="1124.8" y="421" width="5.4" height="15.0" fill="rgb(254,195,2)" rx="2" ry="2" />
<text  x="1127.79" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1098.3" y="341" width="0.4" height="15.0" fill="rgb(235,160,17)" rx="2" ry="2" />
<text  x="1101.30" y="351.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="527.1" y="341" width="0.2" height="15.0" fill="rgb(212,166,5)" rx="2" ry="2" />
<text  x="530.12" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (73 samples, 0.16%)</title><rect x="18.4" y="357" width="1.8" height="15.0" fill="rgb(212,190,50)" rx="2" ry="2" />
<text  x="21.41" y="367.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (5 samples, 0.01%)</title><rect x="790.0" y="357" width="0.1" height="15.0" fill="rgb(205,56,9)" rx="2" ry="2" />
<text  x="792.98" y="367.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (6 samples, 0.01%)</title><rect x="1093.5" y="293" width="0.2" height="15.0" fill="rgb(246,199,41)" rx="2" ry="2" />
<text  x="1096.53" y="303.5" ></text>
</g>
<g >
<title>table::query (24 samples, 0.05%)</title><rect x="1176.0" y="501" width="0.6" height="15.0" fill="rgb(250,28,21)" rx="2" ry="2" />
<text  x="1178.97" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (572 samples, 1.22%)</title><rect x="278.1" y="357" width="14.4" height="15.0" fill="rgb(252,17,11)" rx="2" ry="2" />
<text  x="281.14" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (12 samples, 0.03%)</title><rect x="170.6" y="197" width="0.3" height="15.0" fill="rgb(208,174,7)" rx="2" ry="2" />
<text  x="173.62" y="207.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="461.7" y="325" width="0.7" height="15.0" fill="rgb(249,193,51)" rx="2" ry="2" />
<text  x="464.65" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (25 samples, 0.05%)</title><rect x="647.1" y="485" width="0.6" height="15.0" fill="rgb(220,229,2)" rx="2" ry="2" />
<text  x="650.08" y="495.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (288 samples, 0.61%)</title><rect x="698.3" y="485" width="7.2" height="15.0" fill="rgb(254,18,7)" rx="2" ry="2" />
<text  x="701.29" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (4 samples, 0.01%)</title><rect x="1123.3" y="421" width="0.1" height="15.0" fill="rgb(217,207,17)" rx="2" ry="2" />
<text  x="1126.33" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="569.9" y="277" width="0.3" height="15.0" fill="rgb(207,103,15)" rx="2" ry="2" />
<text  x="572.87" y="287.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (4 samples, 0.01%)</title><rect x="495.2" y="325" width="0.1" height="15.0" fill="rgb(218,85,13)" rx="2" ry="2" />
<text  x="498.19" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="452.9" y="293" width="0.3" height="15.0" fill="rgb(206,178,27)" rx="2" ry="2" />
<text  x="455.89" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (39 samples, 0.08%)</title><rect x="1148.7" y="485" width="0.9" height="15.0" fill="rgb(232,68,16)" rx="2" ry="2" />
<text  x="1151.66" y="495.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (112 samples, 0.24%)</title><rect x="607.8" y="437" width="2.8" height="15.0" fill="rgb(254,12,44)" rx="2" ry="2" />
<text  x="610.77" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (9 samples, 0.02%)</title><rect x="831.9" y="309" width="0.2" height="15.0" fill="rgb(231,3,14)" rx="2" ry="2" />
<text  x="834.90" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,453 samples, 9.47%)</title><rect x="306.7" y="277" width="111.8" height="15.0" fill="rgb(206,44,33)" rx="2" ry="2" />
<text  x="309.68" y="287.5" >flat_mutation..</text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (67 samples, 0.14%)</title><rect x="133.9" y="261" width="1.7" height="15.0" fill="rgb(234,207,6)" rx="2" ry="2" />
<text  x="136.90" y="271.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="220.9" y="165" width="0.6" height="15.0" fill="rgb(223,73,47)" rx="2" ry="2" />
<text  x="223.90" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="498.3" y="309" width="0.1" height="15.0" fill="rgb(216,78,23)" rx="2" ry="2" />
<text  x="501.30" y="319.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (635 samples, 1.35%)</title><rect x="1078.4" y="309" width="15.9" height="15.0" fill="rgb(248,216,2)" rx="2" ry="2" />
<text  x="1081.40" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (19 samples, 0.04%)</title><rect x="20.2" y="341" width="0.5" height="15.0" fill="rgb(253,48,43)" rx="2" ry="2" />
<text  x="23.24" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (4 samples, 0.01%)</title><rect x="1103.8" y="357" width="0.1" height="15.0" fill="rgb(217,78,38)" rx="2" ry="2" />
<text  x="1106.83" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (4 samples, 0.01%)</title><rect x="1124.7" y="421" width="0.1" height="15.0" fill="rgb(241,191,40)" rx="2" ry="2" />
<text  x="1127.69" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (7 samples, 0.01%)</title><rect x="761.5" y="357" width="0.2" height="15.0" fill="rgb(248,219,49)" rx="2" ry="2" />
<text  x="764.49" y="367.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="170.9" y="197" width="0.2" height="15.0" fill="rgb(206,150,47)" rx="2" ry="2" />
<text  x="173.93" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="556.1" y="421" width="0.3" height="15.0" fill="rgb(218,4,51)" rx="2" ry="2" />
<text  x="559.11" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (18 samples, 0.04%)</title><rect x="1096.3" y="309" width="0.5" height="15.0" fill="rgb(254,141,6)" rx="2" ry="2" />
<text  x="1099.32" y="319.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (8 samples, 0.02%)</title><rect x="439.5" y="341" width="0.2" height="15.0" fill="rgb(251,9,30)" rx="2" ry="2" />
<text  x="442.49" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (226 samples, 0.48%)</title><rect x="699.5" y="469" width="5.7" height="15.0" fill="rgb(205,24,19)" rx="2" ry="2" />
<text  x="702.54" y="479.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (26 samples, 0.06%)</title><rect x="917.9" y="325" width="0.6" height="15.0" fill="rgb(207,67,42)" rx="2" ry="2" />
<text  x="920.87" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (3,035 samples, 6.46%)</title><rect x="164.2" y="245" width="76.2" height="15.0" fill="rgb(230,168,37)" rx="2" ry="2" />
<text  x="167.25" y="255.5" >partitio..</text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (57 samples, 0.12%)</title><rect x="917.1" y="341" width="1.4" height="15.0" fill="rgb(238,128,1)" rx="2" ry="2" />
<text  x="920.10" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="784.0" y="325" width="0.2" height="15.0" fill="rgb(239,22,4)" rx="2" ry="2" />
<text  x="786.96" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="597.8" y="373" width="0.1" height="15.0" fill="rgb(219,157,33)" rx="2" ry="2" />
<text  x="600.80" y="383.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="590.4" y="389" width="0.6" height="15.0" fill="rgb(211,204,30)" rx="2" ry="2" />
<text  x="593.42" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (95 samples, 0.20%)</title><rect x="1115.7" y="373" width="2.4" height="15.0" fill="rgb(232,167,43)" rx="2" ry="2" />
<text  x="1118.72" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (9 samples, 0.02%)</title><rect x="126.6" y="293" width="0.2" height="15.0" fill="rgb(242,207,33)" rx="2" ry="2" />
<text  x="129.60" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="235.7" y="181" width="0.2" height="15.0" fill="rgb(211,3,37)" rx="2" ry="2" />
<text  x="238.69" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (268 samples, 0.57%)</title><rect x="1111.4" y="405" width="6.7" height="15.0" fill="rgb(222,96,21)" rx="2" ry="2" />
<text  x="1114.38" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (157 samples, 0.33%)</title><rect x="354.2" y="165" width="4.0" height="15.0" fill="rgb(238,131,0)" rx="2" ry="2" />
<text  x="357.22" y="175.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (53 samples, 0.11%)</title><rect x="817.2" y="117" width="1.3" height="15.0" fill="rgb(209,69,7)" rx="2" ry="2" />
<text  x="820.17" y="127.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (4 samples, 0.01%)</title><rect x="400.0" y="229" width="0.1" height="15.0" fill="rgb(222,168,20)" rx="2" ry="2" />
<text  x="403.03" y="239.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (249 samples, 0.53%)</title><rect x="283.7" y="309" width="6.2" height="15.0" fill="rgb(232,203,24)" rx="2" ry="2" />
<text  x="286.66" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt; (6 samples, 0.01%)</title><rect x="627.0" y="437" width="0.2" height="15.0" fill="rgb(213,221,1)" rx="2" ry="2" />
<text  x="630.05" y="447.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (61 samples, 0.13%)</title><rect x="561.6" y="325" width="1.6" height="15.0" fill="rgb(231,189,28)" rx="2" ry="2" />
<text  x="564.63" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (137 samples, 0.29%)</title><rect x="1001.1" y="309" width="3.4" height="15.0" fill="rgb(248,173,47)" rx="2" ry="2" />
<text  x="1004.06" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (35 samples, 0.07%)</title><rect x="626.0" y="437" width="0.9" height="15.0" fill="rgb(222,215,22)" rx="2" ry="2" />
<text  x="629.04" y="447.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%)</title><rect x="858.2" y="341" width="0.1" height="15.0" fill="rgb(216,229,2)" rx="2" ry="2" />
<text  x="861.23" y="351.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (441 samples, 0.94%)</title><rect x="318.7" y="213" width="11.1" height="15.0" fill="rgb(206,220,31)" rx="2" ry="2" />
<text  x="321.72" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="545.3" y="421" width="0.1" height="15.0" fill="rgb(227,155,13)" rx="2" ry="2" />
<text  x="548.27" y="431.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (71 samples, 0.15%)</title><rect x="1131.5" y="389" width="1.8" height="15.0" fill="rgb(247,96,48)" rx="2" ry="2" />
<text  x="1134.49" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1135.7" y="421" width="0.2" height="15.0" fill="rgb(221,133,24)" rx="2" ry="2" />
<text  x="1138.73" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="410.8" y="181" width="0.3" height="15.0" fill="rgb(251,183,6)" rx="2" ry="2" />
<text  x="413.80" y="191.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,654 samples, 12.03%)</title><rect x="732.4" y="469" width="142.0" height="15.0" fill="rgb(228,68,35)" rx="2" ry="2" />
<text  x="735.45" y="479.5" >single_node_cql_en..</text>
</g>
<g >
<title>bytes_ostream::linearize (16 samples, 0.03%)</title><rect x="600.7" y="405" width="0.4" height="15.0" fill="rgb(237,65,39)" rx="2" ry="2" />
<text  x="603.72" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (32 samples, 0.07%)</title><rect x="661.4" y="469" width="0.8" height="15.0" fill="rgb(250,219,26)" rx="2" ry="2" />
<text  x="664.44" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (13 samples, 0.03%)</title><rect x="1176.1" y="453" width="0.3" height="15.0" fill="rgb(245,109,46)" rx="2" ry="2" />
<text  x="1179.09" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,006 samples, 97.87%)</title><rect x="23.2" y="597" width="1154.8" height="15.0" fill="rgb(223,122,41)" rx="2" ry="2" />
<text  x="26.20" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>utils::tuple_hash::operator (39 samples, 0.08%)</title><rect x="841.9" y="309" width="0.9" height="15.0" fill="rgb(212,6,35)" rx="2" ry="2" />
<text  x="844.87" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="935.3" y="357" width="0.1" height="15.0" fill="rgb(249,134,32)" rx="2" ry="2" />
<text  x="938.29" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume (4 samples, 0.01%)</title><rect x="399.8" y="229" width="0.1" height="15.0" fill="rgb(208,192,20)" rx="2" ry="2" />
<text  x="402.75" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="759.5" y="261" width="0.4" height="15.0" fill="rgb(247,174,21)" rx="2" ry="2" />
<text  x="762.53" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (70 samples, 0.15%)</title><rect x="327.5" y="165" width="1.8" height="15.0" fill="rgb(245,64,38)" rx="2" ry="2" />
<text  x="330.53" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="941.6" y="357" width="0.3" height="15.0" fill="rgb(227,117,14)" rx="2" ry="2" />
<text  x="944.62" y="367.5" ></text>
</g>
<g >
<title>[[vdso]] (261 samples, 0.56%)</title><rect x="1179.0" y="613" width="6.6" height="15.0" fill="rgb(207,229,54)" rx="2" ry="2" />
<text  x="1182.01" y="623.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="231.9" y="181" width="0.2" height="15.0" fill="rgb(251,19,39)" rx="2" ry="2" />
<text  x="234.95" y="191.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (201 samples, 0.43%)</title><rect x="738.2" y="389" width="5.0" height="15.0" fill="rgb(238,41,51)" rx="2" ry="2" />
<text  x="741.17" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (4 samples, 0.01%)</title><rect x="646.6" y="469" width="0.1" height="15.0" fill="rgb(250,21,52)" rx="2" ry="2" />
<text  x="649.58" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (18 samples, 0.04%)</title><rect x="877.9" y="485" width="0.4" height="15.0" fill="rgb(218,213,1)" rx="2" ry="2" />
<text  x="880.89" y="495.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (26 samples, 0.06%)</title><rect x="954.7" y="373" width="0.7" height="15.0" fill="rgb(221,77,46)" rx="2" ry="2" />
<text  x="957.75" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (4 samples, 0.01%)</title><rect x="242.0" y="261" width="0.1" height="15.0" fill="rgb(207,51,32)" rx="2" ry="2" />
<text  x="245.04" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (19 samples, 0.04%)</title><rect x="266.1" y="277" width="0.5" height="15.0" fill="rgb(254,115,4)" rx="2" ry="2" />
<text  x="269.11" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (113 samples, 0.24%)</title><rect x="200.2" y="117" width="2.9" height="15.0" fill="rgb(254,42,28)" rx="2" ry="2" />
<text  x="203.24" y="127.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1049.3" y="261" width="0.1" height="15.0" fill="rgb(240,219,38)" rx="2" ry="2" />
<text  x="1052.28" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="433.2" y="373" width="0.1" height="15.0" fill="rgb(248,209,14)" rx="2" ry="2" />
<text  x="436.16" y="383.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (6 samples, 0.01%)</title><rect x="22.3" y="357" width="0.2" height="15.0" fill="rgb(205,175,54)" rx="2" ry="2" />
<text  x="25.30" y="367.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (584 samples, 1.24%)</title><rect x="1078.9" y="293" width="14.6" height="15.0" fill="rgb(236,77,36)" rx="2" ry="2" />
<text  x="1081.88" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (5 samples, 0.01%)</title><rect x="291.9" y="325" width="0.1" height="15.0" fill="rgb(230,95,15)" rx="2" ry="2" />
<text  x="294.92" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (11 samples, 0.02%)</title><rect x="785.3" y="357" width="0.3" height="15.0" fill="rgb(211,148,7)" rx="2" ry="2" />
<text  x="788.31" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (155 samples, 0.33%)</title><rect x="474.4" y="261" width="3.9" height="15.0" fill="rgb(247,213,1)" rx="2" ry="2" />
<text  x="477.40" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.01%)</title><rect x="455.9" y="277" width="0.2" height="15.0" fill="rgb(216,193,53)" rx="2" ry="2" />
<text  x="458.93" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (17 samples, 0.04%)</title><rect x="659.0" y="421" width="0.5" height="15.0" fill="rgb(247,59,29)" rx="2" ry="2" />
<text  x="662.03" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="275.5" y="309" width="0.2" height="15.0" fill="rgb(249,56,8)" rx="2" ry="2" />
<text  x="278.50" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (20 samples, 0.04%)</title><rect x="139.7" y="229" width="0.5" height="15.0" fill="rgb(226,159,5)" rx="2" ry="2" />
<text  x="142.67" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (8 samples, 0.02%)</title><rect x="705.2" y="469" width="0.2" height="15.0" fill="rgb(231,100,23)" rx="2" ry="2" />
<text  x="708.21" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="253.8" y="229" width="0.2" height="15.0" fill="rgb(214,98,24)" rx="2" ry="2" />
<text  x="256.84" y="239.5" ></text>
</g>
<g >
<title>sstring_hash::operator (17 samples, 0.04%)</title><rect x="845.0" y="309" width="0.4" height="15.0" fill="rgb(242,40,23)" rx="2" ry="2" />
<text  x="847.98" y="319.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.01%)</title><rect x="757.9" y="293" width="0.1" height="15.0" fill="rgb(235,137,48)" rx="2" ry="2" />
<text  x="760.88" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.03%)</title><rect x="568.2" y="293" width="0.4" height="15.0" fill="rgb(221,64,39)" rx="2" ry="2" />
<text  x="571.21" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="809.8" y="181" width="0.1" height="15.0" fill="rgb(242,115,25)" rx="2" ry="2" />
<text  x="812.79" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.01%)</title><rect x="1174.8" y="501" width="0.1" height="15.0" fill="rgb(216,114,32)" rx="2" ry="2" />
<text  x="1177.79" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (24 samples, 0.05%)</title><rect x="375.7" y="149" width="0.6" height="15.0" fill="rgb(217,122,46)" rx="2" ry="2" />
<text  x="378.73" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (4 samples, 0.01%)</title><rect x="283.4" y="277" width="0.1" height="15.0" fill="rgb(229,219,7)" rx="2" ry="2" />
<text  x="286.43" y="287.5" ></text>
</g>
<g >
<title>operator delete (99 samples, 0.21%)</title><rect x="414.3" y="245" width="2.4" height="15.0" fill="rgb(212,216,15)" rx="2" ry="2" />
<text  x="417.26" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (49 samples, 0.10%)</title><rect x="837.4" y="309" width="1.2" height="15.0" fill="rgb(243,77,36)" rx="2" ry="2" />
<text  x="840.40" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (77 samples, 0.16%)</title><rect x="1002.0" y="245" width="1.9" height="15.0" fill="rgb(235,214,41)" rx="2" ry="2" />
<text  x="1005.01" y="255.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (4 samples, 0.01%)</title><rect x="451.7" y="293" width="0.1" height="15.0" fill="rgb(246,9,10)" rx="2" ry="2" />
<text  x="454.69" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (8 samples, 0.02%)</title><rect x="826.6" y="325" width="0.2" height="15.0" fill="rgb(249,95,42)" rx="2" ry="2" />
<text  x="829.55" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (258 samples, 0.55%)</title><rect x="445.2" y="293" width="6.5" height="15.0" fill="rgb(238,16,51)" rx="2" ry="2" />
<text  x="448.21" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (4 samples, 0.01%)</title><rect x="901.8" y="341" width="0.1" height="15.0" fill="rgb(207,77,13)" rx="2" ry="2" />
<text  x="904.76" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (9 samples, 0.02%)</title><rect x="439.8" y="341" width="0.3" height="15.0" fill="rgb(207,84,48)" rx="2" ry="2" />
<text  x="442.84" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (62 samples, 0.13%)</title><rect x="931.8" y="325" width="1.5" height="15.0" fill="rgb(249,153,33)" rx="2" ry="2" />
<text  x="934.78" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (33 samples, 0.07%)</title><rect x="1123.4" y="421" width="0.9" height="15.0" fill="rgb(232,164,53)" rx="2" ry="2" />
<text  x="1126.43" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (10 samples, 0.02%)</title><rect x="589.6" y="373" width="0.2" height="15.0" fill="rgb(252,190,0)" rx="2" ry="2" />
<text  x="592.57" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (8 samples, 0.02%)</title><rect x="613.9" y="437" width="0.2" height="15.0" fill="rgb(227,208,45)" rx="2" ry="2" />
<text  x="616.94" y="447.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (9 samples, 0.02%)</title><rect x="227.6" y="149" width="0.2" height="15.0" fill="rgb(225,125,41)" rx="2" ry="2" />
<text  x="230.61" y="159.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (91 samples, 0.19%)</title><rect x="934.3" y="389" width="2.3" height="15.0" fill="rgb(206,219,41)" rx="2" ry="2" />
<text  x="937.29" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (7 samples, 0.01%)</title><rect x="1054.6" y="357" width="0.2" height="15.0" fill="rgb(235,13,16)" rx="2" ry="2" />
<text  x="1057.58" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (6 samples, 0.01%)</title><rect x="330.9" y="197" width="0.1" height="15.0" fill="rgb(224,69,15)" rx="2" ry="2" />
<text  x="333.87" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (7 samples, 0.01%)</title><rect x="881.3" y="389" width="0.1" height="15.0" fill="rgb(243,75,30)" rx="2" ry="2" />
<text  x="884.25" y="399.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="739.8" y="293" width="0.2" height="15.0" fill="rgb(239,161,3)" rx="2" ry="2" />
<text  x="742.80" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="229.6" y="197" width="0.2" height="15.0" fill="rgb(247,55,0)" rx="2" ry="2" />
<text  x="232.61" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (112 samples, 0.24%)</title><rect x="830.5" y="341" width="2.8" height="15.0" fill="rgb(252,30,23)" rx="2" ry="2" />
<text  x="833.47" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (4 samples, 0.01%)</title><rect x="492.9" y="325" width="0.1" height="15.0" fill="rgb(207,129,14)" rx="2" ry="2" />
<text  x="495.90" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (4 samples, 0.01%)</title><rect x="137.6" y="245" width="0.1" height="15.0" fill="rgb(208,142,39)" rx="2" ry="2" />
<text  x="140.64" y="255.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (13 samples, 0.03%)</title><rect x="254.0" y="229" width="0.3" height="15.0" fill="rgb(223,38,39)" rx="2" ry="2" />
<text  x="256.99" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (34 samples, 0.07%)</title><rect x="572.0" y="277" width="0.9" height="15.0" fill="rgb(242,213,8)" rx="2" ry="2" />
<text  x="575.05" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (19 samples, 0.04%)</title><rect x="513.6" y="181" width="0.5" height="15.0" fill="rgb(207,156,44)" rx="2" ry="2" />
<text  x="516.64" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (85 samples, 0.18%)</title><rect x="287.0" y="261" width="2.2" height="15.0" fill="rgb(218,131,19)" rx="2" ry="2" />
<text  x="290.05" y="271.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (5 samples, 0.01%)</title><rect x="19.8" y="261" width="0.1" height="15.0" fill="rgb(254,212,21)" rx="2" ry="2" />
<text  x="22.76" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="709.2" y="469" width="0.1" height="15.0" fill="rgb(243,174,9)" rx="2" ry="2" />
<text  x="712.15" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (4 samples, 0.01%)</title><rect x="679.5" y="469" width="0.1" height="15.0" fill="rgb(209,139,38)" rx="2" ry="2" />
<text  x="682.46" y="479.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,185 samples, 2.52%)</title><rect x="343.8" y="181" width="29.7" height="15.0" fill="rgb(207,133,1)" rx="2" ry="2" />
<text  x="346.78" y="191.5" >wr..</text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (76 samples, 0.16%)</title><rect x="812.6" y="149" width="1.9" height="15.0" fill="rgb(240,209,45)" rx="2" ry="2" />
<text  x="815.62" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,447 samples, 5.21%)</title><rect x="168.7" y="229" width="61.5" height="15.0" fill="rgb(244,26,32)" rx="2" ry="2" />
<text  x="171.74" y="239.5" >partit..</text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (46 samples, 0.10%)</title><rect x="691.8" y="469" width="1.2" height="15.0" fill="rgb(240,108,52)" rx="2" ry="2" />
<text  x="694.83" y="479.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (156 samples, 0.33%)</title><rect x="286.0" y="293" width="3.9" height="15.0" fill="rgb(245,60,52)" rx="2" ry="2" />
<text  x="288.99" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="666.8" y="453" width="0.2" height="15.0" fill="rgb(233,35,44)" rx="2" ry="2" />
<text  x="669.78" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="497.3" y="277" width="0.7" height="15.0" fill="rgb(251,60,35)" rx="2" ry="2" />
<text  x="500.27" y="287.5" ></text>
</g>
<g >
<title>sstables::mc::writer::consume (5 samples, 0.01%)</title><rect x="23.0" y="453" width="0.1" height="15.0" fill="rgb(249,64,24)" rx="2" ry="2" />
<text  x="25.98" y="463.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (4 samples, 0.01%)</title><rect x="718.2" y="421" width="0.1" height="15.0" fill="rgb(250,69,8)" rx="2" ry="2" />
<text  x="721.19" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (11 samples, 0.02%)</title><rect x="450.6" y="277" width="0.3" height="15.0" fill="rgb(226,209,28)" rx="2" ry="2" />
<text  x="453.58" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (31 samples, 0.07%)</title><rect x="1120.9" y="405" width="0.8" height="15.0" fill="rgb(213,138,27)" rx="2" ry="2" />
<text  x="1123.95" y="415.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="812.2" y="117" width="0.2" height="15.0" fill="rgb(210,163,48)" rx="2" ry="2" />
<text  x="815.22" y="127.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="621.4" y="421" width="0.9" height="15.0" fill="rgb(207,213,3)" rx="2" ry="2" />
<text  x="624.45" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (12 samples, 0.03%)</title><rect x="533.4" y="277" width="0.3" height="15.0" fill="rgb(245,183,43)" rx="2" ry="2" />
<text  x="536.39" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (193 samples, 0.41%)</title><rect x="231.0" y="197" width="4.9" height="15.0" fill="rgb(254,6,29)" rx="2" ry="2" />
<text  x="234.02" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (107 samples, 0.23%)</title><rect x="62.4" y="453" width="2.7" height="15.0" fill="rgb(239,110,7)" rx="2" ry="2" />
<text  x="65.44" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (154 samples, 0.33%)</title><rect x="272.7" y="341" width="3.9" height="15.0" fill="rgb(230,118,35)" rx="2" ry="2" />
<text  x="275.69" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="588.0" y="357" width="0.1" height="15.0" fill="rgb(239,144,15)" rx="2" ry="2" />
<text  x="590.96" y="367.5" ></text>
</g>
<g >
<title>schema::column_at (51 samples, 0.11%)</title><rect x="340.1" y="181" width="1.3" height="15.0" fill="rgb(242,145,29)" rx="2" ry="2" />
<text  x="343.09" y="191.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (22 samples, 0.05%)</title><rect x="465.7" y="325" width="0.6" height="15.0" fill="rgb(208,25,2)" rx="2" ry="2" />
<text  x="468.74" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (37 samples, 0.08%)</title><rect x="994.1" y="293" width="0.9" height="15.0" fill="rgb(215,149,52)" rx="2" ry="2" />
<text  x="997.08" y="303.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="917.0" y="341" width="0.1" height="15.0" fill="rgb(206,9,49)" rx="2" ry="2" />
<text  x="919.97" y="351.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (4 samples, 0.01%)</title><rect x="339.6" y="181" width="0.1" height="15.0" fill="rgb(216,26,26)" rx="2" ry="2" />
<text  x="342.63" y="191.5" ></text>
</g>
<g >
<title>row::row (1,443 samples, 3.07%)</title><rect x="175.7" y="149" width="36.3" height="15.0" fill="rgb(239,176,11)" rx="2" ry="2" />
<text  x="178.75" y="159.5" >row..</text>
</g>
<g >
<title>operator delete (42 samples, 0.09%)</title><rect x="60.2" y="453" width="1.1" height="15.0" fill="rgb(235,130,18)" rx="2" ry="2" />
<text  x="63.23" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (360 samples, 0.77%)</title><rect x="836.6" y="389" width="9.1" height="15.0" fill="rgb(238,22,21)" rx="2" ry="2" />
<text  x="839.62" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (17 samples, 0.04%)</title><rect x="1139.8" y="309" width="0.4" height="15.0" fill="rgb(246,94,3)" rx="2" ry="2" />
<text  x="1142.82" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (7 samples, 0.01%)</title><rect x="259.6" y="277" width="0.2" height="15.0" fill="rgb(234,135,54)" rx="2" ry="2" />
<text  x="262.58" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (19 samples, 0.04%)</title><rect x="557.2" y="421" width="0.4" height="15.0" fill="rgb(246,103,15)" rx="2" ry="2" />
<text  x="560.16" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (8 samples, 0.02%)</title><rect x="696.0" y="501" width="0.2" height="15.0" fill="rgb(217,95,20)" rx="2" ry="2" />
<text  x="698.98" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (4 samples, 0.01%)</title><rect x="271.1" y="309" width="0.1" height="15.0" fill="rgb(242,98,32)" rx="2" ry="2" />
<text  x="274.11" y="319.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="950.7" y="373" width="0.8" height="15.0" fill="rgb(251,145,53)" rx="2" ry="2" />
<text  x="953.73" y="383.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (889 samples, 1.89%)</title><rect x="801.1" y="277" width="22.3" height="15.0" fill="rgb(231,139,44)" rx="2" ry="2" />
<text  x="804.13" y="287.5" >a..</text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (13 samples, 0.03%)</title><rect x="22.8" y="533" width="0.3" height="15.0" fill="rgb(230,158,25)" rx="2" ry="2" />
<text  x="25.80" y="543.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="773.7" y="357" width="0.3" height="15.0" fill="rgb(245,99,43)" rx="2" ry="2" />
<text  x="776.72" y="367.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (11 samples, 0.02%)</title><rect x="1034.7" y="181" width="0.3" height="15.0" fill="rgb(239,47,35)" rx="2" ry="2" />
<text  x="1037.72" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="796.9" y="293" width="0.1" height="15.0" fill="rgb(215,6,31)" rx="2" ry="2" />
<text  x="799.86" y="303.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="47.1" y="485" width="0.2" height="15.0" fill="rgb(225,108,3)" rx="2" ry="2" />
<text  x="50.13" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (38 samples, 0.08%)</title><rect x="630.2" y="405" width="0.9" height="15.0" fill="rgb(219,189,25)" rx="2" ry="2" />
<text  x="633.18" y="415.5" ></text>
</g>
<g >
<title>schema::column_at (59 samples, 0.13%)</title><rect x="210.5" y="133" width="1.5" height="15.0" fill="rgb(215,186,38)" rx="2" ry="2" />
<text  x="213.49" y="143.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (443 samples, 0.94%)</title><rect x="922.5" y="389" width="11.1" height="15.0" fill="rgb(215,208,26)" rx="2" ry="2" />
<text  x="925.49" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="39.4" y="389" width="0.2" height="15.0" fill="rgb(224,100,46)" rx="2" ry="2" />
<text  x="42.42" y="399.5" ></text>
</g>
<g >
<title>dht::maximum_token (4 samples, 0.01%)</title><rect x="445.5" y="277" width="0.1" height="15.0" fill="rgb(250,18,26)" rx="2" ry="2" />
<text  x="448.46" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="662.5" y="437" width="0.3" height="15.0" fill="rgb(215,50,1)" rx="2" ry="2" />
<text  x="665.54" y="447.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (4 samples, 0.01%)</title><rect x="1035.9" y="197" width="0.1" height="15.0" fill="rgb(226,59,41)" rx="2" ry="2" />
<text  x="1038.88" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (21 samples, 0.04%)</title><rect x="141.4" y="245" width="0.6" height="15.0" fill="rgb(231,49,35)" rx="2" ry="2" />
<text  x="144.43" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (14 samples, 0.03%)</title><rect x="295.1" y="373" width="0.3" height="15.0" fill="rgb(239,149,24)" rx="2" ry="2" />
<text  x="298.05" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.01%)</title><rect x="562.5" y="293" width="0.1" height="15.0" fill="rgb(205,156,38)" rx="2" ry="2" />
<text  x="565.49" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="996.7" y="277" width="0.2" height="15.0" fill="rgb(236,198,50)" rx="2" ry="2" />
<text  x="999.74" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="908.4" y="293" width="0.1" height="15.0" fill="rgb(251,93,36)" rx="2" ry="2" />
<text  x="911.36" y="303.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (40 samples, 0.09%)</title><rect x="827.5" y="309" width="1.0" height="15.0" fill="rgb(212,210,7)" rx="2" ry="2" />
<text  x="830.53" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="817.8" y="85" width="0.1" height="15.0" fill="rgb(222,132,8)" rx="2" ry="2" />
<text  x="820.79" y="95.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="535.4" y="277" width="0.1" height="15.0" fill="rgb(213,172,23)" rx="2" ry="2" />
<text  x="538.35" y="287.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (8 samples, 0.02%)</title><rect x="757.1" y="277" width="0.2" height="15.0" fill="rgb(222,14,45)" rx="2" ry="2" />
<text  x="760.12" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="720.8" y="405" width="0.1" height="15.0" fill="rgb(250,49,38)" rx="2" ry="2" />
<text  x="723.78" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (6 samples, 0.01%)</title><rect x="128.1" y="293" width="0.1" height="15.0" fill="rgb(233,131,0)" rx="2" ry="2" />
<text  x="131.08" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (43 samples, 0.09%)</title><rect x="594.6" y="421" width="1.1" height="15.0" fill="rgb(206,109,42)" rx="2" ry="2" />
<text  x="597.59" y="431.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (47 samples, 0.10%)</title><rect x="1010.8" y="277" width="1.2" height="15.0" fill="rgb(235,215,26)" rx="2" ry="2" />
<text  x="1013.77" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="329.3" y="165" width="0.2" height="15.0" fill="rgb(209,3,43)" rx="2" ry="2" />
<text  x="332.29" y="175.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (227 samples, 0.48%)</title><rect x="99.5" y="437" width="5.7" height="15.0" fill="rgb(240,148,27)" rx="2" ry="2" />
<text  x="102.46" y="447.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="642.2" y="469" width="0.5" height="15.0" fill="rgb(208,71,2)" rx="2" ry="2" />
<text  x="645.16" y="479.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (8 samples, 0.02%)</title><rect x="1096.8" y="309" width="0.2" height="15.0" fill="rgb(247,92,21)" rx="2" ry="2" />
<text  x="1099.77" y="319.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (95 samples, 0.20%)</title><rect x="633.8" y="485" width="2.4" height="15.0" fill="rgb(227,25,35)" rx="2" ry="2" />
<text  x="636.77" y="495.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (50 samples, 0.11%)</title><rect x="16.8" y="293" width="1.2" height="15.0" fill="rgb(217,18,51)" rx="2" ry="2" />
<text  x="19.75" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.5" y="325" width="0.1" height="15.0" fill="rgb(222,85,21)" rx="2" ry="2" />
<text  x="21.46" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (245 samples, 0.52%)</title><rect x="261.3" y="293" width="6.1" height="15.0" fill="rgb(229,106,40)" rx="2" ry="2" />
<text  x="264.27" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%)</title><rect x="591.8" y="421" width="0.1" height="15.0" fill="rgb(237,12,3)" rx="2" ry="2" />
<text  x="594.75" y="431.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="1038.3" y="213" width="1.8" height="15.0" fill="rgb(221,210,17)" rx="2" ry="2" />
<text  x="1041.34" y="223.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (4 samples, 0.01%)</title><rect x="1053.3" y="277" width="0.1" height="15.0" fill="rgb(246,87,11)" rx="2" ry="2" />
<text  x="1056.30" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="846.9" y="421" width="0.1" height="15.0" fill="rgb(224,55,48)" rx="2" ry="2" />
<text  x="849.89" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (140 samples, 0.30%)</title><rect x="1049.0" y="277" width="3.5" height="15.0" fill="rgb(233,125,5)" rx="2" ry="2" />
<text  x="1052.00" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="1053.7" y="293" width="0.1" height="15.0" fill="rgb(210,97,14)" rx="2" ry="2" />
<text  x="1056.67" y="303.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="524.8" y="325" width="0.6" height="15.0" fill="rgb(242,173,49)" rx="2" ry="2" />
<text  x="527.81" y="335.5" ></text>
</g>
<g >
<title>seastar::gate::enter (4 samples, 0.01%)</title><rect x="1040.8" y="181" width="0.1" height="15.0" fill="rgb(209,118,28)" rx="2" ry="2" />
<text  x="1043.77" y="191.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="672.7" y="421" width="0.6" height="15.0" fill="rgb(248,63,32)" rx="2" ry="2" />
<text  x="675.73" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (5 samples, 0.01%)</title><rect x="736.3" y="405" width="0.1" height="15.0" fill="rgb(240,203,4)" rx="2" ry="2" />
<text  x="739.29" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (4 samples, 0.01%)</title><rect x="1026.4" y="213" width="0.1" height="15.0" fill="rgb(233,211,0)" rx="2" ry="2" />
<text  x="1029.44" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (25 samples, 0.05%)</title><rect x="1106.0" y="405" width="0.7" height="15.0" fill="rgb(243,79,6)" rx="2" ry="2" />
<text  x="1109.04" y="415.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="800.5" y="293" width="0.1" height="15.0" fill="rgb(245,212,5)" rx="2" ry="2" />
<text  x="803.52" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="44.9" y="485" width="0.2" height="15.0" fill="rgb(224,44,42)" rx="2" ry="2" />
<text  x="47.94" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (14 samples, 0.03%)</title><rect x="1114.7" y="373" width="0.4" height="15.0" fill="rgb(228,137,11)" rx="2" ry="2" />
<text  x="1117.72" y="383.5" ></text>
</g>
<g >
<title>operator delete (54 samples, 0.11%)</title><rect x="290.3" y="293" width="1.4" height="15.0" fill="rgb(214,219,48)" rx="2" ry="2" />
<text  x="293.31" y="303.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (4 samples, 0.01%)</title><rect x="1096.1" y="309" width="0.1" height="15.0" fill="rgb(254,49,9)" rx="2" ry="2" />
<text  x="1099.10" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (19 samples, 0.04%)</title><rect x="293.5" y="357" width="0.5" height="15.0" fill="rgb(235,136,51)" rx="2" ry="2" />
<text  x="296.55" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (29 samples, 0.06%)</title><rect x="691.9" y="437" width="0.8" height="15.0" fill="rgb(233,103,48)" rx="2" ry="2" />
<text  x="694.93" y="447.5" ></text>
</g>
<g >
<title>validation::validate_column_family (6 samples, 0.01%)</title><rect x="846.2" y="405" width="0.2" height="15.0" fill="rgb(224,107,9)" rx="2" ry="2" />
<text  x="849.23" y="415.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (94 samples, 0.20%)</title><rect x="531.6" y="309" width="2.3" height="15.0" fill="rgb(218,113,54)" rx="2" ry="2" />
<text  x="534.56" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (42 samples, 0.09%)</title><rect x="313.3" y="213" width="1.0" height="15.0" fill="rgb(238,43,21)" rx="2" ry="2" />
<text  x="316.28" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.06%)</title><rect x="642.8" y="469" width="0.6" height="15.0" fill="rgb(246,200,49)" rx="2" ry="2" />
<text  x="645.76" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (4 samples, 0.01%)</title><rect x="658.1" y="453" width="0.1" height="15.0" fill="rgb(212,73,37)" rx="2" ry="2" />
<text  x="661.07" y="463.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="679.8" y="453" width="0.5" height="15.0" fill="rgb(209,229,28)" rx="2" ry="2" />
<text  x="682.84" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (58 samples, 0.12%)</title><rect x="457.4" y="261" width="1.4" height="15.0" fill="rgb(205,5,45)" rx="2" ry="2" />
<text  x="460.36" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (7 samples, 0.01%)</title><rect x="875.8" y="405" width="0.2" height="15.0" fill="rgb(218,79,36)" rx="2" ry="2" />
<text  x="878.78" y="415.5" ></text>
</g>
<g >
<title>std::operator+ (5 samples, 0.01%)</title><rect x="19.0" y="165" width="0.1" height="15.0" fill="rgb(208,186,4)" rx="2" ry="2" />
<text  x="21.96" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="919.0" y="373" width="0.1" height="15.0" fill="rgb(207,80,50)" rx="2" ry="2" />
<text  x="922.00" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="637.5" y="453" width="0.2" height="15.0" fill="rgb(235,82,17)" rx="2" ry="2" />
<text  x="640.54" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="1063.0" y="277" width="0.2" height="15.0" fill="rgb(212,98,19)" rx="2" ry="2" />
<text  x="1065.99" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (5 samples, 0.01%)</title><rect x="20.4" y="325" width="0.1" height="15.0" fill="rgb(248,45,11)" rx="2" ry="2" />
<text  x="23.37" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (4 samples, 0.01%)</title><rect x="762.3" y="389" width="0.1" height="15.0" fill="rgb(233,20,41)" rx="2" ry="2" />
<text  x="765.32" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (135 samples, 0.29%)</title><rect x="811.3" y="165" width="3.4" height="15.0" fill="rgb(230,167,42)" rx="2" ry="2" />
<text  x="814.32" y="175.5" ></text>
</g>
<g >
<title>schema::column_at (17 samples, 0.04%)</title><rect x="373.5" y="197" width="0.5" height="15.0" fill="rgb(239,106,8)" rx="2" ry="2" />
<text  x="376.55" y="207.5" ></text>
</g>
<g >
<title>posix_memalign (157 samples, 0.33%)</title><rect x="196.1" y="53" width="3.9" height="15.0" fill="rgb(238,162,36)" rx="2" ry="2" />
<text  x="199.10" y="63.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (5 samples, 0.01%)</title><rect x="824.0" y="277" width="0.1" height="15.0" fill="rgb(250,52,0)" rx="2" ry="2" />
<text  x="826.97" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (486 samples, 1.03%)</title><rect x="902.4" y="325" width="12.2" height="15.0" fill="rgb(252,110,38)" rx="2" ry="2" />
<text  x="905.44" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="34.6" y="485" width="0.2" height="15.0" fill="rgb(243,109,7)" rx="2" ry="2" />
<text  x="37.65" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (83 samples, 0.18%)</title><rect x="869.8" y="373" width="2.1" height="15.0" fill="rgb(231,210,42)" rx="2" ry="2" />
<text  x="872.80" y="383.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (17 samples, 0.04%)</title><rect x="788.9" y="357" width="0.5" height="15.0" fill="rgb(206,207,44)" rx="2" ry="2" />
<text  x="791.93" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (47 samples, 0.10%)</title><rect x="1161.1" y="453" width="1.2" height="15.0" fill="rgb(254,70,11)" rx="2" ry="2" />
<text  x="1164.11" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="400.3" y="229" width="0.1" height="15.0" fill="rgb(224,164,48)" rx="2" ry="2" />
<text  x="403.28" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (102 samples, 0.22%)</title><rect x="585.4" y="357" width="2.6" height="15.0" fill="rgb(222,204,42)" rx="2" ry="2" />
<text  x="588.40" y="367.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (51 samples, 0.11%)</title><rect x="297.9" y="373" width="1.3" height="15.0" fill="rgb(238,60,54)" rx="2" ry="2" />
<text  x="300.89" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (5 samples, 0.01%)</title><rect x="778.7" y="405" width="0.1" height="15.0" fill="rgb(237,169,36)" rx="2" ry="2" />
<text  x="781.69" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (19 samples, 0.04%)</title><rect x="271.2" y="325" width="0.5" height="15.0" fill="rgb(216,106,36)" rx="2" ry="2" />
<text  x="274.21" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (71 samples, 0.15%)</title><rect x="565.3" y="309" width="1.8" height="15.0" fill="rgb(214,178,36)" rx="2" ry="2" />
<text  x="568.35" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (4 samples, 0.01%)</title><rect x="1157.6" y="389" width="0.1" height="15.0" fill="rgb(207,6,11)" rx="2" ry="2" />
<text  x="1160.57" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (4 samples, 0.01%)</title><rect x="1036.9" y="213" width="0.1" height="15.0" fill="rgb(211,118,35)" rx="2" ry="2" />
<text  x="1039.93" y="223.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (86 samples, 0.18%)</title><rect x="552.1" y="357" width="2.2" height="15.0" fill="rgb(247,12,42)" rx="2" ry="2" />
<text  x="555.12" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="105.8" y="421" width="0.1" height="15.0" fill="rgb(221,17,52)" rx="2" ry="2" />
<text  x="108.76" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="520.6" y="293" width="0.2" height="15.0" fill="rgb(237,152,37)" rx="2" ry="2" />
<text  x="523.64" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4 samples, 0.01%)</title><rect x="423.8" y="373" width="0.1" height="15.0" fill="rgb(249,16,50)" rx="2" ry="2" />
<text  x="426.77" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="803.0" y="229" width="0.8" height="15.0" fill="rgb(215,86,24)" rx="2" ry="2" />
<text  x="805.98" y="239.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (5 samples, 0.01%)</title><rect x="220.8" y="165" width="0.1" height="15.0" fill="rgb(225,10,22)" rx="2" ry="2" />
<text  x="223.78" y="175.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (46 samples, 0.10%)</title><rect x="741.4" y="293" width="1.2" height="15.0" fill="rgb(232,203,28)" rx="2" ry="2" />
<text  x="744.43" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (240 samples, 0.51%)</title><rect x="153.8" y="229" width="6.0" height="15.0" fill="rgb(216,46,15)" rx="2" ry="2" />
<text  x="156.76" y="239.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (8 samples, 0.02%)</title><rect x="824.5" y="293" width="0.2" height="15.0" fill="rgb(239,160,31)" rx="2" ry="2" />
<text  x="827.55" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="636.9" y="469" width="0.1" height="15.0" fill="rgb(233,172,33)" rx="2" ry="2" />
<text  x="639.89" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.04%)</title><rect x="656.6" y="421" width="0.4" height="15.0" fill="rgb(237,64,50)" rx="2" ry="2" />
<text  x="659.57" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="739.6" y="293" width="0.2" height="15.0" fill="rgb(213,227,6)" rx="2" ry="2" />
<text  x="742.58" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (71 samples, 0.15%)</title><rect x="751.4" y="357" width="1.8" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="754.43" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="650.3" y="485" width="0.4" height="15.0" fill="rgb(210,101,46)" rx="2" ry="2" />
<text  x="653.29" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (4 samples, 0.01%)</title><rect x="714.2" y="421" width="0.1" height="15.0" fill="rgb(243,96,7)" rx="2" ry="2" />
<text  x="717.22" y="431.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (42 samples, 0.09%)</title><rect x="445.6" y="277" width="1.1" height="15.0" fill="rgb(215,191,25)" rx="2" ry="2" />
<text  x="448.64" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (110 samples, 0.23%)</title><rect x="36.8" y="453" width="2.8" height="15.0" fill="rgb(210,89,31)" rx="2" ry="2" />
<text  x="39.83" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (216 samples, 0.46%)</title><rect x="620.4" y="437" width="5.5" height="15.0" fill="rgb(207,11,19)" rx="2" ry="2" />
<text  x="623.45" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,005 samples, 97.86%)</title><rect x="23.2" y="549" width="1154.8" height="15.0" fill="rgb(214,65,43)" rx="2" ry="2" />
<text  x="26.20" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (7 samples, 0.01%)</title><rect x="997.6" y="245" width="0.2" height="15.0" fill="rgb(248,95,28)" rx="2" ry="2" />
<text  x="1000.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (4 samples, 0.01%)</title><rect x="719.2" y="453" width="0.1" height="15.0" fill="rgb(218,62,51)" rx="2" ry="2" />
<text  x="722.22" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (37 samples, 0.08%)</title><rect x="910.7" y="261" width="0.9" height="15.0" fill="rgb(214,162,48)" rx="2" ry="2" />
<text  x="913.67" y="271.5" ></text>
</g>
<g >
<title>database::query (151 samples, 0.32%)</title><rect x="43.2" y="501" width="3.7" height="15.0" fill="rgb(219,192,31)" rx="2" ry="2" />
<text  x="46.16" y="511.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.06%)</title><rect x="449.9" y="277" width="0.7" height="15.0" fill="rgb(212,148,32)" rx="2" ry="2" />
<text  x="452.93" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (63 samples, 0.13%)</title><rect x="592.7" y="421" width="1.6" height="15.0" fill="rgb(217,154,12)" rx="2" ry="2" />
<text  x="595.71" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%)</title><rect x="168.6" y="229" width="0.1" height="15.0" fill="rgb(220,135,5)" rx="2" ry="2" />
<text  x="171.62" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (44 samples, 0.09%)</title><rect x="840.1" y="293" width="1.1" height="15.0" fill="rgb(248,162,36)" rx="2" ry="2" />
<text  x="843.08" y="303.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (7,114 samples, 15.13%)</title><rect x="116.2" y="373" width="178.6" height="15.0" fill="rgb(237,6,24)" rx="2" ry="2" />
<text  x="119.18" y="383.5" >seastar::repeat&lt;merging..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="636.2" y="485" width="0.3" height="15.0" fill="rgb(210,218,35)" rx="2" ry="2" />
<text  x="639.21" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (77 samples, 0.16%)</title><rect x="547.7" y="357" width="2.0" height="15.0" fill="rgb(205,206,53)" rx="2" ry="2" />
<text  x="550.73" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (10 samples, 0.02%)</title><rect x="75.9" y="389" width="0.2" height="15.0" fill="rgb(220,183,19)" rx="2" ry="2" />
<text  x="78.87" y="399.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (4 samples, 0.01%)</title><rect x="1096.2" y="309" width="0.1" height="15.0" fill="rgb(220,119,37)" rx="2" ry="2" />
<text  x="1099.20" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="808.2" y="213" width="0.2" height="15.0" fill="rgb(212,18,7)" rx="2" ry="2" />
<text  x="811.18" y="223.5" ></text>
</g>
<g >
<title>posix_memalign (4 samples, 0.01%)</title><rect x="204.2" y="101" width="0.1" height="15.0" fill="rgb(211,138,14)" rx="2" ry="2" />
<text  x="207.24" y="111.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (10 samples, 0.02%)</title><rect x="622.6" y="405" width="0.2" height="15.0" fill="rgb(222,44,26)" rx="2" ry="2" />
<text  x="625.58" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (33 samples, 0.07%)</title><rect x="813.7" y="117" width="0.8" height="15.0" fill="rgb(245,186,23)" rx="2" ry="2" />
<text  x="816.68" y="127.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (9 samples, 0.02%)</title><rect x="918.7" y="357" width="0.2" height="15.0" fill="rgb(228,65,54)" rx="2" ry="2" />
<text  x="921.68" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (43 samples, 0.09%)</title><rect x="802.7" y="245" width="1.1" height="15.0" fill="rgb(243,156,12)" rx="2" ry="2" />
<text  x="805.68" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="589.4" y="373" width="0.2" height="15.0" fill="rgb(229,22,42)" rx="2" ry="2" />
<text  x="592.42" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="45.5" y="485" width="0.1" height="15.0" fill="rgb(240,225,48)" rx="2" ry="2" />
<text  x="48.49" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (33 samples, 0.07%)</title><rect x="21.3" y="469" width="0.8" height="15.0" fill="rgb(254,75,7)" rx="2" ry="2" />
<text  x="24.32" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="539.8" y="341" width="0.4" height="15.0" fill="rgb(225,110,47)" rx="2" ry="2" />
<text  x="542.82" y="351.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (70 samples, 0.15%)</title><rect x="16.4" y="341" width="1.7" height="15.0" fill="rgb(239,85,47)" rx="2" ry="2" />
<text  x="19.35" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (4 samples, 0.01%)</title><rect x="79.6" y="453" width="0.1" height="15.0" fill="rgb(219,105,31)" rx="2" ry="2" />
<text  x="82.61" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="643.8" y="453" width="0.2" height="15.0" fill="rgb(224,85,2)" rx="2" ry="2" />
<text  x="646.76" y="463.5" ></text>
</g>
<g >
<title>__start_context (284 samples, 0.60%)</title><rect x="15.6" y="613" width="7.2" height="15.0" fill="rgb(238,144,41)" rx="2" ry="2" />
<text  x="18.62" y="623.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (8 samples, 0.02%)</title><rect x="442.5" y="325" width="0.2" height="15.0" fill="rgb(209,197,52)" rx="2" ry="2" />
<text  x="445.53" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="200.1" y="101" width="0.1" height="15.0" fill="rgb(206,212,25)" rx="2" ry="2" />
<text  x="203.14" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="36.7" y="437" width="0.1" height="15.0" fill="rgb(247,69,29)" rx="2" ry="2" />
<text  x="39.71" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1101.6" y="357" width="0.4" height="15.0" fill="rgb(247,36,35)" rx="2" ry="2" />
<text  x="1104.59" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="950.7" y="357" width="0.8" height="15.0" fill="rgb(221,37,53)" rx="2" ry="2" />
<text  x="953.73" y="367.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (16 samples, 0.03%)</title><rect x="268.4" y="309" width="0.4" height="15.0" fill="rgb(254,181,4)" rx="2" ry="2" />
<text  x="271.37" y="319.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (13 samples, 0.03%)</title><rect x="163.1" y="213" width="0.3" height="15.0" fill="rgb(206,35,14)" rx="2" ry="2" />
<text  x="166.12" y="223.5" ></text>
</g>
<g >
<title>query_state::query_state (211 samples, 0.45%)</title><rect x="601.7" y="437" width="5.3" height="15.0" fill="rgb(236,177,39)" rx="2" ry="2" />
<text  x="604.69" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (7 samples, 0.01%)</title><rect x="614.2" y="437" width="0.2" height="15.0" fill="rgb(218,72,15)" rx="2" ry="2" />
<text  x="617.25" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="680.2" y="437" width="0.1" height="15.0" fill="rgb(217,77,17)" rx="2" ry="2" />
<text  x="683.21" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1052.0" y="213" width="0.5" height="15.0" fill="rgb(217,223,27)" rx="2" ry="2" />
<text  x="1055.04" y="223.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (43 samples, 0.09%)</title><rect x="822.1" y="245" width="1.0" height="15.0" fill="rgb(219,207,0)" rx="2" ry="2" />
<text  x="825.06" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="40.8" y="453" width="0.2" height="15.0" fill="rgb(229,223,38)" rx="2" ry="2" />
<text  x="43.77" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (51 samples, 0.11%)</title><rect x="837.3" y="325" width="1.3" height="15.0" fill="rgb(235,100,51)" rx="2" ry="2" />
<text  x="840.35" y="335.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (6 samples, 0.01%)</title><rect x="603.8" y="389" width="0.1" height="15.0" fill="rgb(248,33,43)" rx="2" ry="2" />
<text  x="606.78" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%)</title><rect x="614.4" y="437" width="0.3" height="15.0" fill="rgb(218,49,16)" rx="2" ry="2" />
<text  x="617.42" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (19 samples, 0.04%)</title><rect x="64.5" y="421" width="0.5" height="15.0" fill="rgb(232,137,30)" rx="2" ry="2" />
<text  x="67.52" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (15 samples, 0.03%)</title><rect x="565.8" y="277" width="0.4" height="15.0" fill="rgb(219,124,26)" rx="2" ry="2" />
<text  x="568.85" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (56 samples, 0.12%)</title><rect x="147.8" y="261" width="1.4" height="15.0" fill="rgb(211,196,30)" rx="2" ry="2" />
<text  x="150.81" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="462.6" y="325" width="0.1" height="15.0" fill="rgb(219,73,12)" rx="2" ry="2" />
<text  x="465.56" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (116 samples, 0.25%)</title><rect x="1072.1" y="309" width="3.0" height="15.0" fill="rgb(220,216,6)" rx="2" ry="2" />
<text  x="1075.15" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (20 samples, 0.04%)</title><rect x="545.4" y="421" width="0.5" height="15.0" fill="rgb(211,166,2)" rx="2" ry="2" />
<text  x="548.39" y="431.5" ></text>
</g>
<g >
<title>db::schema_tables::calculate_schema_digest (6 samples, 0.01%)</title><rect x="47.0" y="469" width="0.1" height="15.0" fill="rgb(235,64,46)" rx="2" ry="2" />
<text  x="49.97" y="479.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (5 samples, 0.01%)</title><rect x="637.8" y="501" width="0.1" height="15.0" fill="rgb(230,89,33)" rx="2" ry="2" />
<text  x="640.77" y="511.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (96 samples, 0.20%)</title><rect x="547.6" y="373" width="2.4" height="15.0" fill="rgb(218,124,26)" rx="2" ry="2" />
<text  x="550.60" y="383.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,226 samples, 11.12%)</title><rect x="296.9" y="389" width="131.2" height="15.0" fill="rgb(252,77,10)" rx="2" ry="2" />
<text  x="299.91" y="399.5" >query::consume_p..</text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (960 samples, 2.04%)</title><rect x="467.7" y="325" width="24.1" height="15.0" fill="rgb(218,210,10)" rx="2" ry="2" />
<text  x="470.73" y="335.5" >d..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="61.1" y="437" width="0.2" height="15.0" fill="rgb(212,45,5)" rx="2" ry="2" />
<text  x="64.11" y="447.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="566.5" y="277" width="0.6" height="15.0" fill="rgb(247,145,1)" rx="2" ry="2" />
<text  x="569.45" y="287.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="708.4" y="485" width="0.9" height="15.0" fill="rgb(205,11,14)" rx="2" ry="2" />
<text  x="711.40" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="684.3" y="469" width="0.1" height="15.0" fill="rgb(245,126,6)" rx="2" ry="2" />
<text  x="687.25" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="95.5" y="437" width="0.3" height="15.0" fill="rgb(240,203,2)" rx="2" ry="2" />
<text  x="98.47" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (4 samples, 0.01%)</title><rect x="651.0" y="485" width="0.1" height="15.0" fill="rgb(229,43,50)" rx="2" ry="2" />
<text  x="653.97" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="512.8" y="181" width="0.7" height="15.0" fill="rgb(219,211,8)" rx="2" ry="2" />
<text  x="515.78" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="433.3" y="373" width="0.1" height="15.0" fill="rgb(239,79,18)" rx="2" ry="2" />
<text  x="436.31" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="41.6" y="453" width="0.3" height="15.0" fill="rgb(209,138,31)" rx="2" ry="2" />
<text  x="44.55" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (5 samples, 0.01%)</title><rect x="20.5" y="309" width="0.1" height="15.0" fill="rgb(223,13,11)" rx="2" ry="2" />
<text  x="23.49" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (6 samples, 0.01%)</title><rect x="223.1" y="181" width="0.1" height="15.0" fill="rgb(222,180,18)" rx="2" ry="2" />
<text  x="226.06" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="672.2" y="437" width="0.5" height="15.0" fill="rgb(237,4,0)" rx="2" ry="2" />
<text  x="675.18" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (55 samples, 0.12%)</title><rect x="103.1" y="405" width="1.4" height="15.0" fill="rgb(244,59,36)" rx="2" ry="2" />
<text  x="106.13" y="415.5" ></text>
</g>
<g >
<title>query_state::query_state (4 samples, 0.01%)</title><rect x="62.1" y="453" width="0.1" height="15.0" fill="rgb(217,190,2)" rx="2" ry="2" />
<text  x="65.11" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="1061.1" y="309" width="0.3" height="15.0" fill="rgb(239,114,52)" rx="2" ry="2" />
<text  x="1064.10" y="319.5" ></text>
</g>
<g >
<title>database::find_uuid (196 samples, 0.42%)</title><rect x="773.0" y="389" width="4.9" height="15.0" fill="rgb(247,171,15)" rx="2" ry="2" />
<text  x="776.01" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::optional&lt;clustering_key_prefix&gt; &gt;::dispose (5 samples, 0.01%)</title><rect x="427.3" y="373" width="0.1" height="15.0" fill="rgb(239,61,25)" rx="2" ry="2" />
<text  x="430.29" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (4 samples, 0.01%)</title><rect x="520.3" y="293" width="0.1" height="15.0" fill="rgb(239,151,42)" rx="2" ry="2" />
<text  x="523.26" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="38.2" y="421" width="0.6" height="15.0" fill="rgb(210,102,45)" rx="2" ry="2" />
<text  x="41.21" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (59 samples, 0.13%)</title><rect x="736.2" y="421" width="1.4" height="15.0" fill="rgb(246,87,1)" rx="2" ry="2" />
<text  x="739.16" y="431.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (5 samples, 0.01%)</title><rect x="830.7" y="325" width="0.2" height="15.0" fill="rgb(254,36,13)" rx="2" ry="2" />
<text  x="833.75" y="335.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (17 samples, 0.04%)</title><rect x="758.3" y="309" width="0.5" height="15.0" fill="rgb(229,90,44)" rx="2" ry="2" />
<text  x="761.33" y="319.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (14 samples, 0.03%)</title><rect x="956.3" y="389" width="0.4" height="15.0" fill="rgb(206,30,45)" rx="2" ry="2" />
<text  x="959.33" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="422.9" y="245" width="0.2" height="15.0" fill="rgb(215,178,16)" rx="2" ry="2" />
<text  x="425.87" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,605 samples, 11.92%)</title><rect x="965.3" y="405" width="140.7" height="15.0" fill="rgb(248,173,3)" rx="2" ry="2" />
<text  x="968.34" y="415.5" >service::storage_..</text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (7 samples, 0.01%)</title><rect x="462.7" y="341" width="0.2" height="15.0" fill="rgb(213,192,41)" rx="2" ry="2" />
<text  x="465.71" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (15 samples, 0.03%)</title><rect x="268.0" y="309" width="0.4" height="15.0" fill="rgb(206,148,49)" rx="2" ry="2" />
<text  x="270.99" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (14 samples, 0.03%)</title><rect x="1103.5" y="357" width="0.3" height="15.0" fill="rgb(240,187,54)" rx="2" ry="2" />
<text  x="1106.47" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (26 samples, 0.06%)</title><rect x="893.9" y="421" width="0.7" height="15.0" fill="rgb(251,82,46)" rx="2" ry="2" />
<text  x="896.93" y="431.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (30 samples, 0.06%)</title><rect x="19.3" y="309" width="0.8" height="15.0" fill="rgb(239,163,35)" rx="2" ry="2" />
<text  x="22.31" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (42 samples, 0.09%)</title><rect x="1112.7" y="357" width="1.0" height="15.0" fill="rgb(207,157,21)" rx="2" ry="2" />
<text  x="1115.69" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%)</title><rect x="50.4" y="485" width="0.3" height="15.0" fill="rgb(212,87,0)" rx="2" ry="2" />
<text  x="53.36" y="495.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (39 samples, 0.08%)</title><rect x="759.9" y="261" width="1.0" height="15.0" fill="rgb(222,38,28)" rx="2" ry="2" />
<text  x="762.91" y="271.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (45 samples, 0.10%)</title><rect x="1163.4" y="453" width="1.1" height="15.0" fill="rgb(218,171,0)" rx="2" ry="2" />
<text  x="1166.39" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (17 samples, 0.04%)</title><rect x="453.2" y="293" width="0.4" height="15.0" fill="rgb(205,71,3)" rx="2" ry="2" />
<text  x="456.17" y="303.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%)</title><rect x="638.5" y="485" width="0.3" height="15.0" fill="rgb(222,164,28)" rx="2" ry="2" />
<text  x="641.52" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (91 samples, 0.19%)</title><rect x="864.6" y="389" width="2.3" height="15.0" fill="rgb(235,206,46)" rx="2" ry="2" />
<text  x="867.58" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (79 samples, 0.17%)</title><rect x="751.3" y="373" width="2.0" height="15.0" fill="rgb(235,123,49)" rx="2" ry="2" />
<text  x="754.32" y="383.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="424.8" y="341" width="0.7" height="15.0" fill="rgb(226,95,3)" rx="2" ry="2" />
<text  x="427.75" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (328 samples, 0.70%)</title><rect x="443.6" y="309" width="8.2" height="15.0" fill="rgb(206,29,42)" rx="2" ry="2" />
<text  x="446.60" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (278 samples, 0.59%)</title><rect x="582.4" y="373" width="7.0" height="15.0" fill="rgb(227,83,42)" rx="2" ry="2" />
<text  x="585.39" y="383.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (4 samples, 0.01%)</title><rect x="135.3" y="245" width="0.1" height="15.0" fill="rgb(226,103,7)" rx="2" ry="2" />
<text  x="138.33" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (15 samples, 0.03%)</title><rect x="812.1" y="133" width="0.4" height="15.0" fill="rgb(224,152,26)" rx="2" ry="2" />
<text  x="815.10" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="461.2" y="309" width="0.2" height="15.0" fill="rgb(253,44,42)" rx="2" ry="2" />
<text  x="464.15" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (33 samples, 0.07%)</title><rect x="38.8" y="421" width="0.8" height="15.0" fill="rgb(216,94,14)" rx="2" ry="2" />
<text  x="41.77" y="431.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (6 samples, 0.01%)</title><rect x="319.0" y="197" width="0.2" height="15.0" fill="rgb(232,65,31)" rx="2" ry="2" />
<text  x="322.00" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (8 samples, 0.02%)</title><rect x="451.5" y="261" width="0.2" height="15.0" fill="rgb(205,97,2)" rx="2" ry="2" />
<text  x="454.46" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (46 samples, 0.10%)</title><rect x="338.5" y="181" width="1.1" height="15.0" fill="rgb(227,40,8)" rx="2" ry="2" />
<text  x="341.45" y="191.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (57 samples, 0.12%)</title><rect x="904.6" y="309" width="1.4" height="15.0" fill="rgb(253,117,43)" rx="2" ry="2" />
<text  x="907.60" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (40 samples, 0.09%)</title><rect x="1139.4" y="373" width="1.0" height="15.0" fill="rgb(222,37,20)" rx="2" ry="2" />
<text  x="1142.37" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%)</title><rect x="80.4" y="453" width="0.2" height="15.0" fill="rgb(227,105,19)" rx="2" ry="2" />
<text  x="83.41" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="562.3" y="293" width="0.2" height="15.0" fill="rgb(224,23,47)" rx="2" ry="2" />
<text  x="565.31" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (51 samples, 0.11%)</title><rect x="16.7" y="309" width="1.3" height="15.0" fill="rgb(207,26,27)" rx="2" ry="2" />
<text  x="19.73" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (125 samples, 0.27%)</title><rect x="255.5" y="229" width="3.2" height="15.0" fill="rgb(241,96,39)" rx="2" ry="2" />
<text  x="258.54" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (4 samples, 0.01%)</title><rect x="1153.1" y="453" width="0.1" height="15.0" fill="rgb(220,205,7)" rx="2" ry="2" />
<text  x="1156.08" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.01%)</title><rect x="18.9" y="213" width="0.2" height="15.0" fill="rgb(226,190,50)" rx="2" ry="2" />
<text  x="21.94" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="1120.1" y="389" width="0.3" height="15.0" fill="rgb(249,185,26)" rx="2" ry="2" />
<text  x="1123.09" y="399.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="296.8" y="389" width="0.1" height="15.0" fill="rgb(218,29,22)" rx="2" ry="2" />
<text  x="299.79" y="399.5" ></text>
</g>
<g >
<title>operator new (82 samples, 0.17%)</title><rect x="552.2" y="341" width="2.0" height="15.0" fill="rgb(225,88,15)" rx="2" ry="2" />
<text  x="555.17" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (13 samples, 0.03%)</title><rect x="22.8" y="549" width="0.3" height="15.0" fill="rgb(217,142,51)" rx="2" ry="2" />
<text  x="25.80" y="559.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (4 samples, 0.01%)</title><rect x="1067.0" y="325" width="0.1" height="15.0" fill="rgb(215,100,11)" rx="2" ry="2" />
<text  x="1069.95" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (49 samples, 0.10%)</title><rect x="1057.8" y="341" width="1.2" height="15.0" fill="rgb(209,180,23)" rx="2" ry="2" />
<text  x="1060.79" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="915.4" y="341" width="0.2" height="15.0" fill="rgb(222,4,11)" rx="2" ry="2" />
<text  x="918.39" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="219.2" y="85" width="0.4" height="15.0" fill="rgb(235,110,8)" rx="2" ry="2" />
<text  x="222.25" y="95.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (27 samples, 0.06%)</title><rect x="545.9" y="421" width="0.7" height="15.0" fill="rgb(218,170,9)" rx="2" ry="2" />
<text  x="548.89" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (27 samples, 0.06%)</title><rect x="942.7" y="389" width="0.7" height="15.0" fill="rgb(226,139,15)" rx="2" ry="2" />
<text  x="945.67" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (65 samples, 0.14%)</title><rect x="1042.1" y="245" width="1.6" height="15.0" fill="rgb(239,128,15)" rx="2" ry="2" />
<text  x="1045.08" y="255.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (11 samples, 0.02%)</title><rect x="859.9" y="405" width="0.2" height="15.0" fill="rgb(253,5,53)" rx="2" ry="2" />
<text  x="862.86" y="415.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (4 samples, 0.01%)</title><rect x="678.8" y="453" width="0.1" height="15.0" fill="rgb(245,67,15)" rx="2" ry="2" />
<text  x="681.78" y="463.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (4 samples, 0.01%)</title><rect x="245.1" y="197" width="0.1" height="15.0" fill="rgb(208,145,15)" rx="2" ry="2" />
<text  x="248.08" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="207.6" y="117" width="0.1" height="15.0" fill="rgb(206,92,20)" rx="2" ry="2" />
<text  x="210.57" y="127.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="927.2" y="341" width="0.3" height="15.0" fill="rgb(253,29,28)" rx="2" ry="2" />
<text  x="930.19" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (68 samples, 0.14%)</title><rect x="274.0" y="325" width="1.7" height="15.0" fill="rgb(247,177,9)" rx="2" ry="2" />
<text  x="277.02" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (6 samples, 0.01%)</title><rect x="1176.1" y="389" width="0.2" height="15.0" fill="rgb(220,213,38)" rx="2" ry="2" />
<text  x="1179.12" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (11 samples, 0.02%)</title><rect x="24.8" y="517" width="0.2" height="15.0" fill="rgb(248,143,28)" rx="2" ry="2" />
<text  x="27.76" y="527.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (4 samples, 0.01%)</title><rect x="694.1" y="485" width="0.1" height="15.0" fill="rgb(227,183,2)" rx="2" ry="2" />
<text  x="697.14" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume (29 samples, 0.06%)</title><rect x="401.8" y="229" width="0.8" height="15.0" fill="rgb(205,77,50)" rx="2" ry="2" />
<text  x="404.84" y="239.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.04%)</title><rect x="851.8" y="373" width="0.5" height="15.0" fill="rgb(206,207,20)" rx="2" ry="2" />
<text  x="854.78" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%)</title><rect x="222.5" y="149" width="0.4" height="15.0" fill="rgb(248,167,14)" rx="2" ry="2" />
<text  x="225.46" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="577.8" y="325" width="0.2" height="15.0" fill="rgb(214,103,53)" rx="2" ry="2" />
<text  x="580.85" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="944.4" y="373" width="0.2" height="15.0" fill="rgb(249,184,7)" rx="2" ry="2" />
<text  x="947.36" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%)</title><rect x="1139.8" y="261" width="0.4" height="15.0" fill="rgb(212,174,36)" rx="2" ry="2" />
<text  x="1142.85" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (13 samples, 0.03%)</title><rect x="314.0" y="197" width="0.3" height="15.0" fill="rgb(237,86,40)" rx="2" ry="2" />
<text  x="317.01" y="207.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (39 samples, 0.08%)</title><rect x="762.6" y="405" width="0.9" height="15.0" fill="rgb(222,133,35)" rx="2" ry="2" />
<text  x="765.57" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="619.0" y="437" width="0.2" height="15.0" fill="rgb(236,36,2)" rx="2" ry="2" />
<text  x="622.04" y="447.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (18 samples, 0.04%)</title><rect x="239.5" y="229" width="0.5" height="15.0" fill="rgb(211,44,45)" rx="2" ry="2" />
<text  x="242.50" y="239.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (51 samples, 0.11%)</title><rect x="876.6" y="453" width="1.2" height="15.0" fill="rgb(212,197,1)" rx="2" ry="2" />
<text  x="879.56" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (41 samples, 0.09%)</title><rect x="138.1" y="245" width="1.0" height="15.0" fill="rgb(234,178,54)" rx="2" ry="2" />
<text  x="141.09" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="426.3" y="357" width="0.1" height="15.0" fill="rgb(213,201,16)" rx="2" ry="2" />
<text  x="429.31" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (4 samples, 0.01%)</title><rect x="131.0" y="261" width="0.1" height="15.0" fill="rgb(238,152,43)" rx="2" ry="2" />
<text  x="134.01" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="908.1" y="293" width="0.3" height="15.0" fill="rgb(250,95,33)" rx="2" ry="2" />
<text  x="911.11" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (7 samples, 0.01%)</title><rect x="919.3" y="373" width="0.2" height="15.0" fill="rgb(222,198,43)" rx="2" ry="2" />
<text  x="922.28" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="707.7" y="469" width="0.4" height="15.0" fill="rgb(240,90,11)" rx="2" ry="2" />
<text  x="710.72" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,280 samples, 2.72%)</title><rect x="178.1" y="133" width="32.1" height="15.0" fill="rgb(232,43,40)" rx="2" ry="2" />
<text  x="181.11" y="143.5" >co..</text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (128 samples, 0.27%)</title><rect x="1001.2" y="293" width="3.2" height="15.0" fill="rgb(205,99,3)" rx="2" ry="2" />
<text  x="1004.24" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (39 samples, 0.08%)</title><rect x="983.8" y="309" width="1.0" height="15.0" fill="rgb(244,224,49)" rx="2" ry="2" />
<text  x="986.82" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="908.5" y="293" width="0.1" height="15.0" fill="rgb(243,152,41)" rx="2" ry="2" />
<text  x="911.46" y="303.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (100 samples, 0.21%)</title><rect x="780.7" y="389" width="2.5" height="15.0" fill="rgb(216,183,40)" rx="2" ry="2" />
<text  x="783.72" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (8 samples, 0.02%)</title><rect x="678.7" y="469" width="0.2" height="15.0" fill="rgb(228,216,29)" rx="2" ry="2" />
<text  x="681.68" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="237.6" y="181" width="0.3" height="15.0" fill="rgb(209,177,5)" rx="2" ry="2" />
<text  x="240.57" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (84 samples, 0.18%)</title><rect x="850.7" y="405" width="2.1" height="15.0" fill="rgb(206,15,37)" rx="2" ry="2" />
<text  x="853.70" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (25 samples, 0.05%)</title><rect x="849.2" y="405" width="0.6" height="15.0" fill="rgb(242,101,40)" rx="2" ry="2" />
<text  x="852.22" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (65 samples, 0.14%)</title><rect x="1059.2" y="325" width="1.7" height="15.0" fill="rgb(250,166,32)" rx="2" ry="2" />
<text  x="1062.25" y="335.5" ></text>
</g>
<g >
<title>row_cache::make_reader (9 samples, 0.02%)</title><rect x="434.7" y="357" width="0.3" height="15.0" fill="rgb(223,129,31)" rx="2" ry="2" />
<text  x="437.74" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (14 samples, 0.03%)</title><rect x="655.9" y="437" width="0.3" height="15.0" fill="rgb(233,35,10)" rx="2" ry="2" />
<text  x="658.89" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="65.0" y="437" width="0.1" height="15.0" fill="rgb(218,189,52)" rx="2" ry="2" />
<text  x="68.02" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (16 samples, 0.03%)</title><rect x="878.9" y="501" width="0.4" height="15.0" fill="rgb(243,150,28)" rx="2" ry="2" />
<text  x="881.89" y="511.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (10 samples, 0.02%)</title><rect x="1141.4" y="501" width="0.3" height="15.0" fill="rgb(251,130,25)" rx="2" ry="2" />
<text  x="1144.43" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (15 samples, 0.03%)</title><rect x="611.2" y="437" width="0.4" height="15.0" fill="rgb(236,40,25)" rx="2" ry="2" />
<text  x="614.21" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (13 samples, 0.03%)</title><rect x="919.8" y="389" width="0.3" height="15.0" fill="rgb(250,77,3)" rx="2" ry="2" />
<text  x="922.76" y="399.5" ></text>
</g>
<g >
<title>operator new (84 samples, 0.18%)</title><rect x="971.6" y="373" width="2.1" height="15.0" fill="rgb(227,140,31)" rx="2" ry="2" />
<text  x="974.59" y="383.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (6 samples, 0.01%)</title><rect x="632.9" y="437" width="0.1" height="15.0" fill="rgb(241,8,35)" rx="2" ry="2" />
<text  x="635.90" y="447.5" ></text>
</g>
<g >
<title>tracing::add_table_name (23 samples, 0.05%)</title><rect x="1136.4" y="421" width="0.6" height="15.0" fill="rgb(246,170,30)" rx="2" ry="2" />
<text  x="1139.38" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::validate (8 samples, 0.02%)</title><rect x="846.5" y="421" width="0.2" height="15.0" fill="rgb(230,74,6)" rx="2" ry="2" />
<text  x="849.46" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (21 samples, 0.04%)</title><rect x="53.6" y="469" width="0.5" height="15.0" fill="rgb(235,125,21)" rx="2" ry="2" />
<text  x="56.58" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (10 samples, 0.02%)</title><rect x="449.7" y="261" width="0.2" height="15.0" fill="rgb(221,186,5)" rx="2" ry="2" />
<text  x="452.68" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (29 samples, 0.06%)</title><rect x="881.2" y="421" width="0.7" height="15.0" fill="rgb(249,123,47)" rx="2" ry="2" />
<text  x="884.18" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (6 samples, 0.01%)</title><rect x="45.1" y="485" width="0.1" height="15.0" fill="rgb(208,143,23)" rx="2" ry="2" />
<text  x="48.09" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (29 samples, 0.06%)</title><rect x="73.6" y="389" width="0.8" height="15.0" fill="rgb(205,94,0)" rx="2" ry="2" />
<text  x="76.63" y="399.5" ></text>
</g>
<g >
<title>make_random_seq (5 samples, 0.01%)</title><rect x="732.0" y="469" width="0.1" height="15.0" fill="rgb(213,130,25)" rx="2" ry="2" />
<text  x="735.02" y="479.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (7 samples, 0.01%)</title><rect x="22.3" y="389" width="0.2" height="15.0" fill="rgb(231,95,24)" rx="2" ry="2" />
<text  x="25.27" y="399.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (7 samples, 0.01%)</title><rect x="424.6" y="341" width="0.2" height="15.0" fill="rgb(224,168,13)" rx="2" ry="2" />
<text  x="427.58" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="797.1" y="325" width="0.2" height="15.0" fill="rgb(244,49,44)" rx="2" ry="2" />
<text  x="800.11" y="335.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (4 samples, 0.01%)</title><rect x="1053.1" y="261" width="0.1" height="15.0" fill="rgb(254,104,53)" rx="2" ry="2" />
<text  x="1056.07" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (12 samples, 0.03%)</title><rect x="271.7" y="325" width="0.3" height="15.0" fill="rgb(248,79,14)" rx="2" ry="2" />
<text  x="274.68" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="219.6" y="101" width="0.2" height="15.0" fill="rgb(249,36,32)" rx="2" ry="2" />
<text  x="222.60" y="111.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (54 samples, 0.11%)</title><rect x="685.8" y="469" width="1.3" height="15.0" fill="rgb(239,114,6)" rx="2" ry="2" />
<text  x="688.76" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reallocate_map (4 samples, 0.01%)</title><rect x="16.5" y="229" width="0.1" height="15.0" fill="rgb(230,202,27)" rx="2" ry="2" />
<text  x="19.48" y="239.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (4 samples, 0.01%)</title><rect x="20.4" y="293" width="0.1" height="15.0" fill="rgb(231,61,50)" rx="2" ry="2" />
<text  x="23.39" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (411 samples, 0.87%)</title><rect x="319.2" y="197" width="10.3" height="15.0" fill="rgb(248,112,34)" rx="2" ry="2" />
<text  x="322.15" y="207.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (67 samples, 0.14%)</title><rect x="393.0" y="133" width="1.7" height="15.0" fill="rgb(216,132,47)" rx="2" ry="2" />
<text  x="395.97" y="143.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (516 samples, 1.10%)</title><rect x="279.4" y="341" width="13.0" height="15.0" fill="rgb(240,67,24)" rx="2" ry="2" />
<text  x="282.44" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (4 samples, 0.01%)</title><rect x="743.1" y="325" width="0.1" height="15.0" fill="rgb(253,122,38)" rx="2" ry="2" />
<text  x="746.07" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (4 samples, 0.01%)</title><rect x="1076.3" y="325" width="0.1" height="15.0" fill="rgb(246,143,13)" rx="2" ry="2" />
<text  x="1079.34" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (6 samples, 0.01%)</title><rect x="404.6" y="197" width="0.1" height="15.0" fill="rgb(206,186,54)" rx="2" ry="2" />
<text  x="407.57" y="207.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="460.4" y="293" width="0.6" height="15.0" fill="rgb(228,47,41)" rx="2" ry="2" />
<text  x="463.45" y="303.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (455 samples, 0.97%)</title><rect x="1025.9" y="229" width="11.4" height="15.0" fill="rgb(210,165,25)" rx="2" ry="2" />
<text  x="1028.91" y="239.5" ></text>
</g>
<g >
<title>database::apply_in_memory (25 samples, 0.05%)</title><rect x="1138.5" y="293" width="0.7" height="15.0" fill="rgb(216,29,31)" rx="2" ry="2" />
<text  x="1141.54" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::take_value (10 samples, 0.02%)</title><rect x="753.3" y="373" width="0.3" height="15.0" fill="rgb(221,179,52)" rx="2" ry="2" />
<text  x="756.31" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (4 samples, 0.01%)</title><rect x="1140.1" y="213" width="0.1" height="15.0" fill="rgb(222,120,32)" rx="2" ry="2" />
<text  x="1143.15" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (6 samples, 0.01%)</title><rect x="405.0" y="245" width="0.1" height="15.0" fill="rgb(231,39,48)" rx="2" ry="2" />
<text  x="408.00" y="255.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (25 samples, 0.05%)</title><rect x="1097.5" y="341" width="0.7" height="15.0" fill="rgb(253,126,6)" rx="2" ry="2" />
<text  x="1100.53" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="589.9" y="373" width="0.1" height="15.0" fill="rgb(247,172,48)" rx="2" ry="2" />
<text  x="592.90" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (25 samples, 0.05%)</title><rect x="1117.5" y="357" width="0.6" height="15.0" fill="rgb(222,179,18)" rx="2" ry="2" />
<text  x="1120.48" y="367.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (12 samples, 0.03%)</title><rect x="238.2" y="213" width="0.3" height="15.0" fill="rgb(248,3,13)" rx="2" ry="2" />
<text  x="241.22" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (13 samples, 0.03%)</title><rect x="755.1" y="357" width="0.4" height="15.0" fill="rgb(214,64,7)" rx="2" ry="2" />
<text  x="758.14" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="423.3" y="341" width="0.1" height="15.0" fill="rgb(215,106,48)" rx="2" ry="2" />
<text  x="426.27" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="649.2" y="485" width="0.1" height="15.0" fill="rgb(217,57,49)" rx="2" ry="2" />
<text  x="652.19" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (4 samples, 0.01%)</title><rect x="1012.0" y="277" width="0.1" height="15.0" fill="rgb(242,112,38)" rx="2" ry="2" />
<text  x="1014.95" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (44 samples, 0.09%)</title><rect x="899.2" y="405" width="1.1" height="15.0" fill="rgb(207,165,5)" rx="2" ry="2" />
<text  x="902.17" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,876 samples, 10.37%)</title><rect x="300.8" y="325" width="122.4" height="15.0" fill="rgb(236,43,26)" rx="2" ry="2" />
<text  x="303.80" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (5 samples, 0.01%)</title><rect x="765.7" y="389" width="0.1" height="15.0" fill="rgb(223,101,47)" rx="2" ry="2" />
<text  x="768.68" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (26 samples, 0.06%)</title><rect x="817.3" y="101" width="0.6" height="15.0" fill="rgb(218,118,3)" rx="2" ry="2" />
<text  x="820.27" y="111.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (9,854 samples, 20.96%)</title><rect x="890.1" y="437" width="247.4" height="15.0" fill="rgb(240,223,19)" rx="2" ry="2" />
<text  x="893.11" y="447.5" >cql3::statements::select_stateme..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (4 samples, 0.01%)</title><rect x="554.1" y="277" width="0.1" height="15.0" fill="rgb(241,187,28)" rx="2" ry="2" />
<text  x="557.05" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="794.3" y="261" width="0.1" height="15.0" fill="rgb(209,228,20)" rx="2" ry="2" />
<text  x="797.27" y="271.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.18%)</title><rect x="979.2" y="357" width="2.1" height="15.0" fill="rgb(236,203,17)" rx="2" ry="2" />
<text  x="982.17" y="367.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="39.8" y="453" width="0.3" height="15.0" fill="rgb(209,182,30)" rx="2" ry="2" />
<text  x="42.77" y="463.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.01%)</title><rect x="295.7" y="405" width="0.1" height="15.0" fill="rgb(209,8,27)" rx="2" ry="2" />
<text  x="298.71" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (76 samples, 0.16%)</title><rect x="604.8" y="405" width="1.9" height="15.0" fill="rgb(248,71,45)" rx="2" ry="2" />
<text  x="607.76" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="755.0" y="357" width="0.1" height="15.0" fill="rgb(231,5,17)" rx="2" ry="2" />
<text  x="758.01" y="367.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (21 samples, 0.04%)</title><rect x="514.2" y="197" width="0.5" height="15.0" fill="rgb(244,60,25)" rx="2" ry="2" />
<text  x="517.17" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="71.4" y="389" width="0.1" height="15.0" fill="rgb(219,64,33)" rx="2" ry="2" />
<text  x="74.42" y="399.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,027 samples, 2.18%)</title><rect x="495.3" y="325" width="25.8" height="15.0" fill="rgb(247,81,43)" rx="2" ry="2" />
<text  x="498.31" y="335.5" >m..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (15 samples, 0.03%)</title><rect x="1139.4" y="277" width="0.3" height="15.0" fill="rgb(233,75,35)" rx="2" ry="2" />
<text  x="1142.37" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (99 samples, 0.21%)</title><rect x="670.9" y="485" width="2.5" height="15.0" fill="rgb(206,88,38)" rx="2" ry="2" />
<text  x="673.90" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (123 samples, 0.26%)</title><rect x="655.1" y="469" width="3.1" height="15.0" fill="rgb(223,36,2)" rx="2" ry="2" />
<text  x="658.11" y="479.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.13%)</title><rect x="447.8" y="245" width="1.5" height="15.0" fill="rgb(221,154,13)" rx="2" ry="2" />
<text  x="450.82" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (11 samples, 0.02%)</title><rect x="1031.8" y="149" width="0.3" height="15.0" fill="rgb(237,38,12)" rx="2" ry="2" />
<text  x="1034.78" y="159.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%)</title><rect x="798.9" y="277" width="1.3" height="15.0" fill="rgb(214,52,37)" rx="2" ry="2" />
<text  x="801.89" y="287.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (6 samples, 0.01%)</title><rect x="658.5" y="437" width="0.2" height="15.0" fill="rgb(207,62,38)" rx="2" ry="2" />
<text  x="661.52" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (32 samples, 0.07%)</title><rect x="782.0" y="341" width="0.8" height="15.0" fill="rgb(247,15,34)" rx="2" ry="2" />
<text  x="785.00" y="351.5" ></text>
</g>
<g >
<title>row::row (17 samples, 0.04%)</title><rect x="257.7" y="197" width="0.4" height="15.0" fill="rgb(234,36,36)" rx="2" ry="2" />
<text  x="260.70" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (322 samples, 0.68%)</title><rect x="1154.4" y="469" width="8.1" height="15.0" fill="rgb(242,213,30)" rx="2" ry="2" />
<text  x="1157.38" y="479.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (247 samples, 0.53%)</title><rect x="755.5" y="373" width="6.2" height="15.0" fill="rgb(217,74,47)" rx="2" ry="2" />
<text  x="758.47" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (17 samples, 0.04%)</title><rect x="613.1" y="437" width="0.5" height="15.0" fill="rgb(248,84,0)" rx="2" ry="2" />
<text  x="616.14" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="427.8" y="373" width="0.3" height="15.0" fill="rgb(222,43,22)" rx="2" ry="2" />
<text  x="430.82" y="383.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (4 samples, 0.01%)</title><rect x="1176.3" y="437" width="0.1" height="15.0" fill="rgb(234,46,23)" rx="2" ry="2" />
<text  x="1179.27" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (6 samples, 0.01%)</title><rect x="21.8" y="389" width="0.1" height="15.0" fill="rgb(221,195,27)" rx="2" ry="2" />
<text  x="24.77" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (55 samples, 0.12%)</title><rect x="352.8" y="165" width="1.4" height="15.0" fill="rgb(254,180,26)" rx="2" ry="2" />
<text  x="355.84" y="175.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (28 samples, 0.06%)</title><rect x="490.5" y="197" width="0.7" height="15.0" fill="rgb(214,182,30)" rx="2" ry="2" />
<text  x="493.54" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="606.4" y="373" width="0.1" height="15.0" fill="rgb(222,103,35)" rx="2" ry="2" />
<text  x="609.36" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (5 samples, 0.01%)</title><rect x="171.1" y="197" width="0.2" height="15.0" fill="rgb(233,116,32)" rx="2" ry="2" />
<text  x="174.13" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="710.3" y="469" width="0.2" height="15.0" fill="rgb(207,59,19)" rx="2" ry="2" />
<text  x="713.33" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="585.7" y="341" width="0.3" height="15.0" fill="rgb(215,212,3)" rx="2" ry="2" />
<text  x="588.70" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (22 samples, 0.05%)</title><rect x="597.9" y="389" width="0.6" height="15.0" fill="rgb(225,181,14)" rx="2" ry="2" />
<text  x="600.93" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (6 samples, 0.01%)</title><rect x="915.9" y="357" width="0.1" height="15.0" fill="rgb(222,12,39)" rx="2" ry="2" />
<text  x="918.87" y="367.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_28has_slice_or_needs_filteringERKNS2_10expressionEEUlRKNS2_15binary_operatorEE_EEPS8_S6_T_EUlS9_E_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_8constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_11conjunctionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_12column_valueEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_5tokenEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13function_callEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4castEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_15field_selectionEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_4nullEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_13bind_variableEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_16untyped_constantEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_17tuple_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_22collection_constructorEE_ZNS3_ISA_EESB_S6_SC_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSI_S7_SM_SQ_SU_SY_S12_S16_S1A_S1E_S1I_S1M_SE_S1Q_S1U_S1Y_EEEENSt13invoke_resultISC_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSC_DpOS28_ (4 samples, 0.01%)</title><rect x="954.3" y="389" width="0.1" height="15.0" fill="rgb(234,200,5)" rx="2" ry="2" />
<text  x="957.35" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,596 samples, 9.78%)</title><rect x="429.9" y="421" width="115.4" height="15.0" fill="rgb(234,68,50)" rx="2" ry="2" />
<text  x="432.90" y="431.5" >query::querier..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="645.1" y="485" width="0.6" height="15.0" fill="rgb(216,22,4)" rx="2" ry="2" />
<text  x="648.15" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (6 samples, 0.01%)</title><rect x="981.1" y="293" width="0.2" height="15.0" fill="rgb(250,182,26)" rx="2" ry="2" />
<text  x="984.13" y="303.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (76 samples, 0.16%)</title><rect x="68.4" y="405" width="1.9" height="15.0" fill="rgb(226,92,8)" rx="2" ry="2" />
<text  x="71.36" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="503.2" y="261" width="0.2" height="15.0" fill="rgb(239,207,8)" rx="2" ry="2" />
<text  x="506.20" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (7 samples, 0.01%)</title><rect x="135.0" y="229" width="0.2" height="15.0" fill="rgb(225,87,10)" rx="2" ry="2" />
<text  x="138.01" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::stats (33 samples, 0.07%)</title><rect x="148.4" y="245" width="0.8" height="15.0" fill="rgb(211,72,30)" rx="2" ry="2" />
<text  x="151.38" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="633.5" y="469" width="0.2" height="15.0" fill="rgb(220,135,49)" rx="2" ry="2" />
<text  x="636.47" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%)</title><rect x="576.5" y="293" width="0.2" height="15.0" fill="rgb(227,216,47)" rx="2" ry="2" />
<text  x="579.54" y="303.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (86 samples, 0.18%)</title><rect x="801.7" y="261" width="2.2" height="15.0" fill="rgb(221,45,27)" rx="2" ry="2" />
<text  x="804.70" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="42.0" y="469" width="0.6" height="15.0" fill="rgb(239,10,40)" rx="2" ry="2" />
<text  x="44.95" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (61 samples, 0.13%)</title><rect x="18.7" y="341" width="1.5" height="15.0" fill="rgb(251,148,17)" rx="2" ry="2" />
<text  x="21.69" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="666.1" y="469" width="0.2" height="15.0" fill="rgb(205,119,48)" rx="2" ry="2" />
<text  x="669.13" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (12 samples, 0.03%)</title><rect x="226.0" y="149" width="0.4" height="15.0" fill="rgb(212,214,22)" rx="2" ry="2" />
<text  x="229.05" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (80 samples, 0.17%)</title><rect x="447.3" y="261" width="2.0" height="15.0" fill="rgb(205,69,2)" rx="2" ry="2" />
<text  x="450.32" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (12 samples, 0.03%)</title><rect x="16.4" y="277" width="0.3" height="15.0" fill="rgb(248,218,36)" rx="2" ry="2" />
<text  x="19.35" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (28 samples, 0.06%)</title><rect x="1020.8" y="229" width="0.7" height="15.0" fill="rgb(224,221,27)" rx="2" ry="2" />
<text  x="1023.77" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="143.8" y="261" width="0.6" height="15.0" fill="rgb(226,21,2)" rx="2" ry="2" />
<text  x="146.84" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (7 samples, 0.01%)</title><rect x="1152.9" y="421" width="0.2" height="15.0" fill="rgb(245,154,11)" rx="2" ry="2" />
<text  x="1155.87" y="431.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="1067.1" y="341" width="0.1" height="15.0" fill="rgb(208,131,36)" rx="2" ry="2" />
<text  x="1070.08" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (4 samples, 0.01%)</title><rect x="46.1" y="485" width="0.1" height="15.0" fill="rgb(248,11,15)" rx="2" ry="2" />
<text  x="49.10" y="495.5" ></text>
</g>
<g >
<title>schema::partition_key_size (6 samples, 0.01%)</title><rect x="659.6" y="469" width="0.2" height="15.0" fill="rgb(242,131,33)" rx="2" ry="2" />
<text  x="662.63" y="479.5" ></text>
</g>
<g >
<title>memtable::apply (21 samples, 0.04%)</title><rect x="1138.6" y="261" width="0.5" height="15.0" fill="rgb(247,118,41)" rx="2" ry="2" />
<text  x="1141.59" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (914 samples, 1.94%)</title><rect x="920.5" y="405" width="22.9" height="15.0" fill="rgb(244,110,40)" rx="2" ry="2" />
<text  x="923.48" y="415.5" >c..</text>
</g>
<g >
<title>single_node_cql_env::make_query_state (453 samples, 0.96%)</title><rect x="855.8" y="437" width="11.3" height="15.0" fill="rgb(215,146,5)" rx="2" ry="2" />
<text  x="858.77" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (7 samples, 0.01%)</title><rect x="330.7" y="197" width="0.2" height="15.0" fill="rgb(248,42,48)" rx="2" ry="2" />
<text  x="333.70" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (4 samples, 0.01%)</title><rect x="325.9" y="181" width="0.1" height="15.0" fill="rgb(218,178,41)" rx="2" ry="2" />
<text  x="328.90" y="191.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="580.7" y="341" width="0.8" height="15.0" fill="rgb(241,122,35)" rx="2" ry="2" />
<text  x="583.66" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (9 samples, 0.02%)</title><rect x="64.6" y="405" width="0.2" height="15.0" fill="rgb(253,8,38)" rx="2" ry="2" />
<text  x="67.62" y="415.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="47.1" y="469" width="0.2" height="15.0" fill="rgb(220,199,50)" rx="2" ry="2" />
<text  x="50.13" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (4 samples, 0.01%)</title><rect x="823.5" y="277" width="0.1" height="15.0" fill="rgb(244,0,7)" rx="2" ry="2" />
<text  x="826.52" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,438 samples, 7.31%)</title><rect x="314.6" y="245" width="86.3" height="15.0" fill="rgb(221,227,33)" rx="2" ry="2" />
<text  x="317.56" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (11 samples, 0.02%)</title><rect x="1139.4" y="245" width="0.3" height="15.0" fill="rgb(226,115,14)" rx="2" ry="2" />
<text  x="1142.45" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt;::allocate (4 samples, 0.01%)</title><rect x="950.6" y="373" width="0.1" height="15.0" fill="rgb(248,112,50)" rx="2" ry="2" />
<text  x="953.63" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::stats (7 samples, 0.01%)</title><rect x="526.0" y="325" width="0.2" height="15.0" fill="rgb(219,99,44)" rx="2" ry="2" />
<text  x="529.01" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (47 samples, 0.10%)</title><rect x="578.3" y="373" width="1.2" height="15.0" fill="rgb(233,183,13)" rx="2" ry="2" />
<text  x="581.32" y="383.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="465.6" y="325" width="0.1" height="15.0" fill="rgb(252,23,31)" rx="2" ry="2" />
<text  x="468.57" y="335.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (9 samples, 0.02%)</title><rect x="758.9" y="277" width="0.3" height="15.0" fill="rgb(211,213,23)" rx="2" ry="2" />
<text  x="761.93" y="287.5" ></text>
</g>
<g >
<title>database::do_apply (31 samples, 0.07%)</title><rect x="1138.5" y="341" width="0.8" height="15.0" fill="rgb(242,168,34)" rx="2" ry="2" />
<text  x="1141.52" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (7 samples, 0.01%)</title><rect x="974.2" y="373" width="0.1" height="15.0" fill="rgb(242,101,37)" rx="2" ry="2" />
<text  x="977.15" y="383.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="904.0" y="293" width="0.5" height="15.0" fill="rgb(209,64,8)" rx="2" ry="2" />
<text  x="907.02" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (468 samples, 1.00%)</title><rect x="696.4" y="501" width="11.8" height="15.0" fill="rgb(252,196,48)" rx="2" ry="2" />
<text  x="699.43" y="511.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (199 samples, 0.42%)</title><rect x="16.3" y="405" width="5.0" height="15.0" fill="rgb(216,6,50)" rx="2" ry="2" />
<text  x="19.33" y="415.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="671.8" y="437" width="0.4" height="15.0" fill="rgb(216,135,51)" rx="2" ry="2" />
<text  x="674.75" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (9 samples, 0.02%)</title><rect x="461.4" y="325" width="0.2" height="15.0" fill="rgb(231,149,30)" rx="2" ry="2" />
<text  x="464.40" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (6 samples, 0.01%)</title><rect x="439.7" y="341" width="0.1" height="15.0" fill="rgb(213,71,45)" rx="2" ry="2" />
<text  x="442.69" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="629.6" y="437" width="0.2" height="15.0" fill="rgb(211,120,26)" rx="2" ry="2" />
<text  x="632.61" y="447.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (4 samples, 0.01%)</title><rect x="944.9" y="405" width="0.1" height="15.0" fill="rgb(238,148,52)" rx="2" ry="2" />
<text  x="947.91" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="665.1" y="469" width="0.2" height="15.0" fill="rgb(216,49,30)" rx="2" ry="2" />
<text  x="668.10" y="479.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (91 samples, 0.19%)</title><rect x="830.9" y="325" width="2.3" height="15.0" fill="rgb(227,8,11)" rx="2" ry="2" />
<text  x="833.92" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="486.5" y="181" width="0.1" height="15.0" fill="rgb(219,16,1)" rx="2" ry="2" />
<text  x="489.45" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (75 samples, 0.16%)</title><rect x="865.0" y="373" width="1.9" height="15.0" fill="rgb(244,203,39)" rx="2" ry="2" />
<text  x="867.98" y="383.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="47.3" y="501" width="0.4" height="15.0" fill="rgb(242,19,44)" rx="2" ry="2" />
<text  x="50.30" y="511.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (6 samples, 0.01%)</title><rect x="924.1" y="341" width="0.1" height="15.0" fill="rgb(208,58,17)" rx="2" ry="2" />
<text  x="927.10" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (13 samples, 0.03%)</title><rect x="712.4" y="453" width="0.4" height="15.0" fill="rgb(242,122,27)" rx="2" ry="2" />
<text  x="715.44" y="463.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.17%)</title><rect x="1002.0" y="261" width="2.0" height="15.0" fill="rgb(205,135,10)" rx="2" ry="2" />
<text  x="1004.99" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="782.8" y="357" width="0.4" height="15.0" fill="rgb(231,59,39)" rx="2" ry="2" />
<text  x="785.80" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="1130.3" y="421" width="0.1" height="15.0" fill="rgb(254,58,40)" rx="2" ry="2" />
<text  x="1133.31" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (45,868 samples, 97.57%)</title><rect x="25.3" y="517" width="1151.4" height="15.0" fill="rgb(205,94,41)" rx="2" ry="2" />
<text  x="28.34" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="1021.3" y="197" width="0.2" height="15.0" fill="rgb(228,149,30)" rx="2" ry="2" />
<text  x="1024.32" y="207.5" ></text>
</g>
<g >
<title>operator new (149 samples, 0.32%)</title><rect x="1021.7" y="245" width="3.7" height="15.0" fill="rgb(236,88,42)" rx="2" ry="2" />
<text  x="1024.67" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (5 samples, 0.01%)</title><rect x="818.5" y="149" width="0.1" height="15.0" fill="rgb(235,44,3)" rx="2" ry="2" />
<text  x="821.52" y="159.5" ></text>
</g>
<g >
<title>operator new (124 samples, 0.26%)</title><rect x="1012.1" y="277" width="3.1" height="15.0" fill="rgb(244,16,3)" rx="2" ry="2" />
<text  x="1015.05" y="287.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (47 samples, 0.10%)</title><rect x="485.5" y="213" width="1.2" height="15.0" fill="rgb(205,151,22)" rx="2" ry="2" />
<text  x="488.55" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (5 samples, 0.01%)</title><rect x="1122.1" y="421" width="0.1" height="15.0" fill="rgb(217,28,40)" rx="2" ry="2" />
<text  x="1125.10" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (11 samples, 0.02%)</title><rect x="985.8" y="357" width="0.3" height="15.0" fill="rgb(214,77,18)" rx="2" ry="2" />
<text  x="988.80" y="367.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (13 samples, 0.03%)</title><rect x="247.4" y="213" width="0.3" height="15.0" fill="rgb(250,110,51)" rx="2" ry="2" />
<text  x="250.41" y="223.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (13 samples, 0.03%)</title><rect x="320.0" y="165" width="0.3" height="15.0" fill="rgb(225,58,16)" rx="2" ry="2" />
<text  x="322.95" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1133.9" y="421" width="0.2" height="15.0" fill="rgb(223,148,25)" rx="2" ry="2" />
<text  x="1136.95" y="431.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (4 samples, 0.01%)</title><rect x="62.0" y="453" width="0.1" height="15.0" fill="rgb(247,104,2)" rx="2" ry="2" />
<text  x="64.96" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="696.1" y="453" width="0.1" height="15.0" fill="rgb(207,184,8)" rx="2" ry="2" />
<text  x="699.05" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (7 samples, 0.01%)</title><rect x="167.5" y="229" width="0.2" height="15.0" fill="rgb(250,28,30)" rx="2" ry="2" />
<text  x="170.51" y="239.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%)</title><rect x="494.9" y="293" width="0.3" height="15.0" fill="rgb(215,172,19)" rx="2" ry="2" />
<text  x="497.89" y="303.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (28 samples, 0.06%)</title><rect x="221.6" y="165" width="0.7" height="15.0" fill="rgb(251,92,12)" rx="2" ry="2" />
<text  x="224.58" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (4 samples, 0.01%)</title><rect x="725.7" y="501" width="0.1" height="15.0" fill="rgb(215,153,19)" rx="2" ry="2" />
<text  x="728.72" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (35 samples, 0.07%)</title><rect x="670.0" y="485" width="0.9" height="15.0" fill="rgb(232,87,32)" rx="2" ry="2" />
<text  x="673.00" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="757.3" y="277" width="0.3" height="15.0" fill="rgb(213,18,38)" rx="2" ry="2" />
<text  x="760.35" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,321 samples, 4.94%)</title><rect x="171.3" y="197" width="58.2" height="15.0" fill="rgb(251,188,33)" rx="2" ry="2" />
<text  x="174.28" y="207.5" >partit..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (7 samples, 0.01%)</title><rect x="714.3" y="421" width="0.2" height="15.0" fill="rgb(233,27,23)" rx="2" ry="2" />
<text  x="717.33" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (4 samples, 0.01%)</title><rect x="204.1" y="101" width="0.1" height="15.0" fill="rgb(237,143,36)" rx="2" ry="2" />
<text  x="207.14" y="111.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (6 samples, 0.01%)</title><rect x="996.0" y="293" width="0.1" height="15.0" fill="rgb(207,14,4)" rx="2" ry="2" />
<text  x="998.96" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (9 samples, 0.02%)</title><rect x="267.7" y="293" width="0.3" height="15.0" fill="rgb(254,204,4)" rx="2" ry="2" />
<text  x="270.74" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="828.3" y="277" width="0.2" height="15.0" fill="rgb(241,32,41)" rx="2" ry="2" />
<text  x="831.34" y="287.5" ></text>
</g>
<g >
<title>posix_memalign (8 samples, 0.02%)</title><rect x="195.6" y="69" width="0.2" height="15.0" fill="rgb(232,213,0)" rx="2" ry="2" />
<text  x="198.58" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (64 samples, 0.14%)</title><rect x="1059.3" y="309" width="1.6" height="15.0" fill="rgb(213,125,24)" rx="2" ry="2" />
<text  x="1062.27" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="695.0" y="421" width="0.9" height="15.0" fill="rgb(244,26,31)" rx="2" ry="2" />
<text  x="698.00" y="431.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (205 samples, 0.44%)</title><rect x="16.2" y="453" width="5.1" height="15.0" fill="rgb(252,57,43)" rx="2" ry="2" />
<text  x="19.17" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="769.6" y="405" width="0.1" height="15.0" fill="rgb(245,81,54)" rx="2" ry="2" />
<text  x="772.62" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (562 samples, 1.20%)</title><rect x="747.6" y="405" width="14.1" height="15.0" fill="rgb(205,203,35)" rx="2" ry="2" />
<text  x="750.56" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (23 samples, 0.05%)</title><rect x="666.4" y="485" width="0.6" height="15.0" fill="rgb(245,30,16)" rx="2" ry="2" />
<text  x="669.43" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (4 samples, 0.01%)</title><rect x="429.8" y="405" width="0.1" height="15.0" fill="rgb(217,182,37)" rx="2" ry="2" />
<text  x="432.80" y="415.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (29 samples, 0.06%)</title><rect x="398.6" y="213" width="0.7" height="15.0" fill="rgb(252,190,34)" rx="2" ry="2" />
<text  x="401.57" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1076.2" y="309" width="0.1" height="15.0" fill="rgb(249,17,39)" rx="2" ry="2" />
<text  x="1079.21" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (23 samples, 0.05%)</title><rect x="1149.1" y="453" width="0.5" height="15.0" fill="rgb(241,41,46)" rx="2" ry="2" />
<text  x="1152.06" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (530 samples, 1.13%)</title><rect x="131.2" y="277" width="13.3" height="15.0" fill="rgb(205,82,3)" rx="2" ry="2" />
<text  x="134.24" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (7 samples, 0.01%)</title><rect x="712.6" y="437" width="0.2" height="15.0" fill="rgb(253,26,15)" rx="2" ry="2" />
<text  x="715.59" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (8 samples, 0.02%)</title><rect x="880.5" y="373" width="0.2" height="15.0" fill="rgb(212,47,15)" rx="2" ry="2" />
<text  x="883.52" y="383.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (43 samples, 0.09%)</title><rect x="1139.3" y="469" width="1.1" height="15.0" fill="rgb(221,220,31)" rx="2" ry="2" />
<text  x="1142.29" y="479.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (14 samples, 0.03%)</title><rect x="902.1" y="325" width="0.3" height="15.0" fill="rgb(229,134,27)" rx="2" ry="2" />
<text  x="905.08" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (9 samples, 0.02%)</title><rect x="955.2" y="357" width="0.2" height="15.0" fill="rgb(244,180,32)" rx="2" ry="2" />
<text  x="958.17" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (16 samples, 0.03%)</title><rect x="1139.8" y="245" width="0.4" height="15.0" fill="rgb(237,62,8)" rx="2" ry="2" />
<text  x="1142.85" y="255.5" ></text>
</g>
<g >
<title>make_combined_reader (744 samples, 1.58%)</title><rect x="442.7" y="325" width="18.7" height="15.0" fill="rgb(250,109,32)" rx="2" ry="2" />
<text  x="445.73" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (25 samples, 0.05%)</title><rect x="225.4" y="149" width="0.6" height="15.0" fill="rgb(228,216,27)" rx="2" ry="2" />
<text  x="228.42" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="105.7" y="421" width="0.1" height="15.0" fill="rgb(230,26,26)" rx="2" ry="2" />
<text  x="108.66" y="431.5" ></text>
</g>
<g >
<title>query::result::builder::builder (150 samples, 0.32%)</title><rect x="603.0" y="421" width="3.8" height="15.0" fill="rgb(243,98,49)" rx="2" ry="2" />
<text  x="606.00" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (58 samples, 0.12%)</title><rect x="375.0" y="181" width="1.4" height="15.0" fill="rgb(252,104,3)" rx="2" ry="2" />
<text  x="377.98" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (9 samples, 0.02%)</title><rect x="698.0" y="485" width="0.3" height="15.0" fill="rgb(229,9,0)" rx="2" ry="2" />
<text  x="701.03" y="495.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (48 samples, 0.10%)</title><rect x="636.5" y="485" width="1.2" height="15.0" fill="rgb(216,97,4)" rx="2" ry="2" />
<text  x="639.54" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (144 samples, 0.31%)</title><rect x="995.2" y="309" width="3.6" height="15.0" fill="rgb(239,104,32)" rx="2" ry="2" />
<text  x="998.21" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (4 samples, 0.01%)</title><rect x="961.5" y="389" width="0.1" height="15.0" fill="rgb(226,52,50)" rx="2" ry="2" />
<text  x="964.48" y="399.5" ></text>
</g>
<g >
<title>main (46,006 samples, 97.87%)</title><rect x="23.2" y="613" width="1154.8" height="15.0" fill="rgb(214,172,39)" rx="2" ry="2" />
<text  x="26.20" y="623.5" >main</text>
</g>
<g >
<title>database::find_column_family (38 samples, 0.08%)</title><rect x="1020.5" y="245" width="1.0" height="15.0" fill="rgb(216,0,33)" rx="2" ry="2" />
<text  x="1023.51" y="255.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (12 samples, 0.03%)</title><rect x="840.9" y="261" width="0.3" height="15.0" fill="rgb(211,67,31)" rx="2" ry="2" />
<text  x="843.89" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (32 samples, 0.07%)</title><rect x="639.9" y="485" width="0.8" height="15.0" fill="rgb(213,4,44)" rx="2" ry="2" />
<text  x="642.92" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (11 samples, 0.02%)</title><rect x="1036.1" y="213" width="0.3" height="15.0" fill="rgb(228,90,4)" rx="2" ry="2" />
<text  x="1039.10" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (6 samples, 0.01%)</title><rect x="537.8" y="261" width="0.2" height="15.0" fill="rgb(249,57,12)" rx="2" ry="2" />
<text  x="540.84" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (50 samples, 0.11%)</title><rect x="573.8" y="277" width="1.3" height="15.0" fill="rgb(235,136,34)" rx="2" ry="2" />
<text  x="576.81" y="287.5" ></text>
</g>
<g >
<title>operator delete (74 samples, 0.16%)</title><rect x="586.0" y="341" width="1.9" height="15.0" fill="rgb(207,73,44)" rx="2" ry="2" />
<text  x="589.03" y="351.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (32 samples, 0.07%)</title><rect x="743.2" y="405" width="0.8" height="15.0" fill="rgb(223,138,28)" rx="2" ry="2" />
<text  x="746.22" y="415.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (22 samples, 0.05%)</title><rect x="604.2" y="405" width="0.6" height="15.0" fill="rgb(247,14,13)" rx="2" ry="2" />
<text  x="607.20" y="415.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (74 samples, 0.16%)</title><rect x="509.6" y="229" width="1.8" height="15.0" fill="rgb(239,102,40)" rx="2" ry="2" />
<text  x="512.57" y="239.5" ></text>
</g>
<g >
<title>schema::position (4 samples, 0.01%)</title><rect x="947.3" y="405" width="0.1" height="15.0" fill="rgb(221,170,1)" rx="2" ry="2" />
<text  x="950.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="55.6" y="469" width="0.3" height="15.0" fill="rgb(249,151,21)" rx="2" ry="2" />
<text  x="58.58" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="564.6" y="309" width="0.3" height="15.0" fill="rgb(218,58,18)" rx="2" ry="2" />
<text  x="567.62" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="775.4" y="293" width="0.2" height="15.0" fill="rgb(228,163,16)" rx="2" ry="2" />
<text  x="778.45" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (7 samples, 0.01%)</title><rect x="610.9" y="421" width="0.2" height="15.0" fill="rgb(241,64,28)" rx="2" ry="2" />
<text  x="613.93" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (7 samples, 0.01%)</title><rect x="515.8" y="245" width="0.2" height="15.0" fill="rgb(250,143,53)" rx="2" ry="2" />
<text  x="518.82" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="576.8" y="293" width="0.3" height="15.0" fill="rgb(252,44,54)" rx="2" ry="2" />
<text  x="579.77" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="723.6" y="501" width="0.1" height="15.0" fill="rgb(238,33,22)" rx="2" ry="2" />
<text  x="726.61" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (51 samples, 0.11%)</title><rect x="417.2" y="245" width="1.3" height="15.0" fill="rgb(233,137,51)" rx="2" ry="2" />
<text  x="420.17" y="255.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (12 samples, 0.03%)</title><rect x="1130.4" y="421" width="0.3" height="15.0" fill="rgb(251,161,36)" rx="2" ry="2" />
<text  x="1133.41" y="431.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (11 samples, 0.02%)</title><rect x="244.4" y="213" width="0.3" height="15.0" fill="rgb(208,213,44)" rx="2" ry="2" />
<text  x="247.45" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="33.5" y="485" width="0.7" height="15.0" fill="rgb(246,54,29)" rx="2" ry="2" />
<text  x="36.52" y="495.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (10 samples, 0.02%)</title><rect x="864.7" y="373" width="0.2" height="15.0" fill="rgb(235,101,14)" rx="2" ry="2" />
<text  x="867.68" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (64 samples, 0.14%)</title><rect x="233.4" y="165" width="1.6" height="15.0" fill="rgb(247,182,14)" rx="2" ry="2" />
<text  x="236.43" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1108.1" y="373" width="0.2" height="15.0" fill="rgb(251,150,5)" rx="2" ry="2" />
<text  x="1111.12" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (105 samples, 0.22%)</title><rect x="1156.0" y="453" width="2.6" height="15.0" fill="rgb(215,158,30)" rx="2" ry="2" />
<text  x="1159.01" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (10 samples, 0.02%)</title><rect x="630.9" y="389" width="0.2" height="15.0" fill="rgb(235,77,7)" rx="2" ry="2" />
<text  x="633.89" y="399.5" ></text>
</g>
<g >
<title>operator new (4 samples, 0.01%)</title><rect x="447.2" y="261" width="0.1" height="15.0" fill="rgb(244,105,53)" rx="2" ry="2" />
<text  x="450.22" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (13 samples, 0.03%)</title><rect x="24.4" y="517" width="0.4" height="15.0" fill="rgb(230,165,29)" rx="2" ry="2" />
<text  x="27.43" y="527.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (286 samples, 0.61%)</title><rect x="1079.4" y="261" width="7.2" height="15.0" fill="rgb(207,63,4)" rx="2" ry="2" />
<text  x="1082.43" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%)</title><rect x="1138.5" y="437" width="0.8" height="15.0" fill="rgb(222,198,14)" rx="2" ry="2" />
<text  x="1141.49" y="447.5" ></text>
</g>
<g >
<title>database::query (994 samples, 2.11%)</title><rect x="1016.7" y="261" width="24.9" height="15.0" fill="rgb(216,228,3)" rx="2" ry="2" />
<text  x="1019.67" y="271.5" >d..</text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (36 samples, 0.08%)</title><rect x="695.0" y="453" width="0.9" height="15.0" fill="rgb(236,25,32)" rx="2" ry="2" />
<text  x="698.00" y="463.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (543 samples, 1.16%)</title><rect x="805.7" y="229" width="13.6" height="15.0" fill="rgb(235,86,15)" rx="2" ry="2" />
<text  x="808.67" y="239.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (4 samples, 0.01%)</title><rect x="965.2" y="405" width="0.1" height="15.0" fill="rgb(251,185,38)" rx="2" ry="2" />
<text  x="968.24" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="1075.9" y="325" width="0.4" height="15.0" fill="rgb(228,93,28)" rx="2" ry="2" />
<text  x="1078.91" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (93 samples, 0.20%)</title><rect x="843.2" y="341" width="2.3" height="15.0" fill="rgb(216,205,38)" rx="2" ry="2" />
<text  x="846.20" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (35 samples, 0.07%)</title><rect x="1147.3" y="485" width="0.9" height="15.0" fill="rgb(253,17,19)" rx="2" ry="2" />
<text  x="1150.28" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (12 samples, 0.03%)</title><rect x="876.0" y="437" width="0.3" height="15.0" fill="rgb(243,189,3)" rx="2" ry="2" />
<text  x="878.95" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (208 samples, 0.44%)</title><rect x="756.2" y="341" width="5.3" height="15.0" fill="rgb(244,56,43)" rx="2" ry="2" />
<text  x="759.24" y="351.5" ></text>
</g>
<g >
<title>query::querier_base::close (13 samples, 0.03%)</title><rect x="1176.1" y="485" width="0.3" height="15.0" fill="rgb(210,196,17)" rx="2" ry="2" />
<text  x="1179.09" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1074.0" y="277" width="0.1" height="15.0" fill="rgb(234,129,14)" rx="2" ry="2" />
<text  x="1076.96" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (15 samples, 0.03%)</title><rect x="714.1" y="437" width="0.4" height="15.0" fill="rgb(248,75,2)" rx="2" ry="2" />
<text  x="717.12" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (24 samples, 0.05%)</title><rect x="124.0" y="309" width="0.6" height="15.0" fill="rgb(251,131,38)" rx="2" ry="2" />
<text  x="127.01" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="845.5" y="341" width="0.2" height="15.0" fill="rgb(251,215,15)" rx="2" ry="2" />
<text  x="848.53" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="541.1" y="309" width="0.8" height="15.0" fill="rgb(251,62,14)" rx="2" ry="2" />
<text  x="544.12" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (6 samples, 0.01%)</title><rect x="514.8" y="213" width="0.1" height="15.0" fill="rgb(215,161,35)" rx="2" ry="2" />
<text  x="517.79" y="223.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (65 samples, 0.14%)</title><rect x="290.1" y="309" width="1.7" height="15.0" fill="rgb(239,115,45)" rx="2" ry="2" />
<text  x="293.13" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%)</title><rect x="454.0" y="277" width="0.3" height="15.0" fill="rgb(241,148,24)" rx="2" ry="2" />
<text  x="456.97" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (213 samples, 0.45%)</title><rect x="406.5" y="213" width="5.4" height="15.0" fill="rgb(230,49,53)" rx="2" ry="2" />
<text  x="409.50" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (8 samples, 0.02%)</title><rect x="1035.0" y="197" width="0.2" height="15.0" fill="rgb(238,211,9)" rx="2" ry="2" />
<text  x="1038.00" y="207.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (31 samples, 0.07%)</title><rect x="338.8" y="165" width="0.8" height="15.0" fill="rgb(254,144,36)" rx="2" ry="2" />
<text  x="341.83" y="175.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="18.2" y="357" width="0.2" height="15.0" fill="rgb(246,127,53)" rx="2" ry="2" />
<text  x="21.21" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (67 samples, 0.14%)</title><rect x="1164.6" y="469" width="1.7" height="15.0" fill="rgb(223,96,53)" rx="2" ry="2" />
<text  x="1167.57" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="435.0" y="357" width="0.1" height="15.0" fill="rgb(251,141,39)" rx="2" ry="2" />
<text  x="437.97" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (86 samples, 0.18%)</title><rect x="245.0" y="213" width="2.1" height="15.0" fill="rgb(234,187,54)" rx="2" ry="2" />
<text  x="247.98" y="223.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (8 samples, 0.02%)</title><rect x="1105.8" y="389" width="0.2" height="15.0" fill="rgb(239,176,23)" rx="2" ry="2" />
<text  x="1108.83" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="991.1" y="261" width="0.6" height="15.0" fill="rgb(227,218,11)" rx="2" ry="2" />
<text  x="994.12" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (11 samples, 0.02%)</title><rect x="12.1" y="581" width="0.3" height="15.0" fill="rgb(206,141,53)" rx="2" ry="2" />
<text  x="15.11" y="591.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (29 samples, 0.06%)</title><rect x="532.7" y="261" width="0.7" height="15.0" fill="rgb(214,228,29)" rx="2" ry="2" />
<text  x="535.67" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (11 samples, 0.02%)</title><rect x="492.6" y="325" width="0.3" height="15.0" fill="rgb(231,88,10)" rx="2" ry="2" />
<text  x="495.63" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (15 samples, 0.03%)</title><rect x="377.6" y="197" width="0.4" height="15.0" fill="rgb(243,76,4)" rx="2" ry="2" />
<text  x="380.64" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (27 samples, 0.06%)</title><rect x="880.4" y="501" width="0.6" height="15.0" fill="rgb(219,146,20)" rx="2" ry="2" />
<text  x="883.37" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1051.1" y="213" width="0.4" height="15.0" fill="rgb(251,155,14)" rx="2" ry="2" />
<text  x="1054.06" y="223.5" ></text>
</g>
<g >
<title>auth::resource::parent (100 samples, 0.21%)</title><rect x="794.5" y="325" width="2.5" height="15.0" fill="rgb(209,98,31)" rx="2" ry="2" />
<text  x="797.47" y="335.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.19%)</title><rect x="160.4" y="213" width="2.3" height="15.0" fill="rgb(246,213,20)" rx="2" ry="2" />
<text  x="163.43" y="223.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%)</title><rect x="870.5" y="357" width="1.1" height="15.0" fill="rgb(249,161,12)" rx="2" ry="2" />
<text  x="873.51" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (13 samples, 0.03%)</title><rect x="22.8" y="613" width="0.3" height="15.0" fill="rgb(249,21,50)" rx="2" ry="2" />
<text  x="25.80" y="623.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (25 samples, 0.05%)</title><rect x="583.6" y="357" width="0.6" height="15.0" fill="rgb(231,83,39)" rx="2" ry="2" />
<text  x="586.57" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (255 samples, 0.54%)</title><rect x="737.7" y="421" width="6.4" height="15.0" fill="rgb(207,85,24)" rx="2" ry="2" />
<text  x="740.69" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (5 samples, 0.01%)</title><rect x="19.0" y="181" width="0.1" height="15.0" fill="rgb(218,122,40)" rx="2" ry="2" />
<text  x="21.96" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (27 samples, 0.06%)</title><rect x="305.1" y="245" width="0.6" height="15.0" fill="rgb(242,2,52)" rx="2" ry="2" />
<text  x="308.07" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (64 samples, 0.14%)</title><rect x="1166.3" y="485" width="1.6" height="15.0" fill="rgb(242,193,20)" rx="2" ry="2" />
<text  x="1169.25" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (7 samples, 0.01%)</title><rect x="399.9" y="229" width="0.1" height="15.0" fill="rgb(212,78,10)" rx="2" ry="2" />
<text  x="402.85" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (23 samples, 0.05%)</title><rect x="724.8" y="501" width="0.6" height="15.0" fill="rgb(232,116,29)" rx="2" ry="2" />
<text  x="727.79" y="511.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="497.2" y="293" width="0.8" height="15.0" fill="rgb(211,189,17)" rx="2" ry="2" />
<text  x="500.22" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1031.6" y="149" width="0.2" height="15.0" fill="rgb(240,179,4)" rx="2" ry="2" />
<text  x="1034.63" y="159.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (5 samples, 0.01%)</title><rect x="110.6" y="421" width="0.1" height="15.0" fill="rgb(253,113,31)" rx="2" ry="2" />
<text  x="113.58" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (473 samples, 1.01%)</title><rect x="66.0" y="421" width="11.8" height="15.0" fill="rgb(210,151,14)" rx="2" ry="2" />
<text  x="68.95" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (33 samples, 0.07%)</title><rect x="458.8" y="261" width="0.8" height="15.0" fill="rgb(242,88,6)" rx="2" ry="2" />
<text  x="461.82" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (4 samples, 0.01%)</title><rect x="570.2" y="293" width="0.1" height="15.0" fill="rgb(240,137,24)" rx="2" ry="2" />
<text  x="573.22" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (112 samples, 0.24%)</title><rect x="938.8" y="357" width="2.8" height="15.0" fill="rgb(210,68,32)" rx="2" ry="2" />
<text  x="941.81" y="367.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,006 samples, 97.87%)</title><rect x="23.2" y="565" width="1154.8" height="15.0" fill="rgb(213,107,32)" rx="2" ry="2" />
<text  x="26.20" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (23 samples, 0.05%)</title><rect x="1064.2" y="261" width="0.6" height="15.0" fill="rgb(221,101,13)" rx="2" ry="2" />
<text  x="1067.24" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (103 samples, 0.22%)</title><rect x="758.8" y="293" width="2.6" height="15.0" fill="rgb(214,183,10)" rx="2" ry="2" />
<text  x="761.83" y="303.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (91 samples, 0.19%)</title><rect x="729.6" y="453" width="2.3" height="15.0" fill="rgb(214,66,42)" rx="2" ry="2" />
<text  x="732.64" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (5 samples, 0.01%)</title><rect x="629.0" y="389" width="0.1" height="15.0" fill="rgb(208,85,12)" rx="2" ry="2" />
<text  x="631.98" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (297 samples, 0.63%)</title><rect x="770.5" y="405" width="7.4" height="15.0" fill="rgb(245,216,10)" rx="2" ry="2" />
<text  x="773.48" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (27 samples, 0.06%)</title><rect x="637.1" y="469" width="0.6" height="15.0" fill="rgb(244,69,41)" rx="2" ry="2" />
<text  x="640.06" y="479.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (6 samples, 0.01%)</title><rect x="871.9" y="405" width="0.1" height="15.0" fill="rgb(249,203,37)" rx="2" ry="2" />
<text  x="874.89" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (74 samples, 0.16%)</title><rect x="374.6" y="213" width="1.8" height="15.0" fill="rgb(252,111,42)" rx="2" ry="2" />
<text  x="377.58" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%)</title><rect x="817.3" y="85" width="0.5" height="15.0" fill="rgb(214,48,50)" rx="2" ry="2" />
<text  x="820.34" y="95.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (34 samples, 0.07%)</title><rect x="739.1" y="341" width="0.9" height="15.0" fill="rgb(245,29,33)" rx="2" ry="2" />
<text  x="742.13" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (10 samples, 0.02%)</title><rect x="681.8" y="437" width="0.2" height="15.0" fill="rgb(238,85,17)" rx="2" ry="2" />
<text  x="684.77" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (53 samples, 0.11%)</title><rect x="874.9" y="469" width="1.4" height="15.0" fill="rgb(244,88,9)" rx="2" ry="2" />
<text  x="877.93" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (7 samples, 0.01%)</title><rect x="1104.6" y="389" width="0.2" height="15.0" fill="rgb(222,160,24)" rx="2" ry="2" />
<text  x="1107.60" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume (7 samples, 0.01%)</title><rect x="695.3" y="277" width="0.2" height="15.0" fill="rgb(248,104,32)" rx="2" ry="2" />
<text  x="698.30" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (24 samples, 0.05%)</title><rect x="822.5" y="213" width="0.6" height="15.0" fill="rgb(227,10,14)" rx="2" ry="2" />
<text  x="825.54" y="223.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (25 samples, 0.05%)</title><rect x="858.9" y="341" width="0.6" height="15.0" fill="rgb(243,223,29)" rx="2" ry="2" />
<text  x="861.86" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (125 samples, 0.27%)</title><rect x="740.0" y="341" width="3.2" height="15.0" fill="rgb(253,154,32)" rx="2" ry="2" />
<text  x="743.03" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (31 samples, 0.07%)</title><rect x="228.5" y="165" width="0.8" height="15.0" fill="rgb(213,84,15)" rx="2" ry="2" />
<text  x="231.51" y="175.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (233 samples, 0.50%)</title><rect x="1080.8" y="245" width="5.8" height="15.0" fill="rgb(237,192,50)" rx="2" ry="2" />
<text  x="1083.76" y="255.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (10 samples, 0.02%)</title><rect x="927.7" y="373" width="0.3" height="15.0" fill="rgb(220,141,35)" rx="2" ry="2" />
<text  x="930.74" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (148 samples, 0.31%)</title><rect x="255.3" y="245" width="3.7" height="15.0" fill="rgb(222,38,30)" rx="2" ry="2" />
<text  x="258.32" y="255.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (4 samples, 0.01%)</title><rect x="695.4" y="261" width="0.1" height="15.0" fill="rgb(251,219,2)" rx="2" ry="2" />
<text  x="698.37" y="271.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1105.3" y="373" width="0.1" height="15.0" fill="rgb(226,102,44)" rx="2" ry="2" />
<text  x="1108.28" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (37 samples, 0.08%)</title><rect x="299.2" y="373" width="0.9" height="15.0" fill="rgb(209,200,11)" rx="2" ry="2" />
<text  x="302.17" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="933.8" y="373" width="0.2" height="15.0" fill="rgb(250,98,14)" rx="2" ry="2" />
<text  x="936.81" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="933.3" y="341" width="0.3" height="15.0" fill="rgb(236,82,10)" rx="2" ry="2" />
<text  x="936.34" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (355 samples, 0.76%)</title><rect x="546.6" y="421" width="8.9" height="15.0" fill="rgb(251,46,32)" rx="2" ry="2" />
<text  x="549.62" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.14%)</title><rect x="218.0" y="101" width="1.6" height="15.0" fill="rgb(237,148,40)" rx="2" ry="2" />
<text  x="220.99" y="111.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (5 samples, 0.01%)</title><rect x="989.3" y="341" width="0.1" height="15.0" fill="rgb(232,118,52)" rx="2" ry="2" />
<text  x="992.26" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (30 samples, 0.06%)</title><rect x="811.9" y="149" width="0.7" height="15.0" fill="rgb(227,151,47)" rx="2" ry="2" />
<text  x="814.87" y="159.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (73 samples, 0.16%)</title><rect x="756.4" y="325" width="1.8" height="15.0" fill="rgb(228,57,47)" rx="2" ry="2" />
<text  x="759.40" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="36.0" y="453" width="0.1" height="15.0" fill="rgb(242,145,18)" rx="2" ry="2" />
<text  x="39.01" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (316 samples, 0.67%)</title><rect x="546.9" y="405" width="7.9" height="15.0" fill="rgb(224,63,19)" rx="2" ry="2" />
<text  x="549.87" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (4 samples, 0.01%)</title><rect x="978.6" y="357" width="0.1" height="15.0" fill="rgb(227,124,0)" rx="2" ry="2" />
<text  x="981.62" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (6 samples, 0.01%)</title><rect x="511.6" y="213" width="0.2" height="15.0" fill="rgb(223,47,21)" rx="2" ry="2" />
<text  x="514.60" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (8 samples, 0.02%)</title><rect x="1104.3" y="373" width="0.2" height="15.0" fill="rgb(208,100,49)" rx="2" ry="2" />
<text  x="1107.28" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (44 samples, 0.09%)</title><rect x="943.5" y="405" width="1.1" height="15.0" fill="rgb(208,192,9)" rx="2" ry="2" />
<text  x="946.50" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (35 samples, 0.07%)</title><rect x="961.6" y="389" width="0.9" height="15.0" fill="rgb(247,117,12)" rx="2" ry="2" />
<text  x="964.58" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (19 samples, 0.04%)</title><rect x="417.4" y="229" width="0.5" height="15.0" fill="rgb(220,164,41)" rx="2" ry="2" />
<text  x="420.45" y="239.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (13 samples, 0.03%)</title><rect x="19.7" y="277" width="0.4" height="15.0" fill="rgb(214,118,34)" rx="2" ry="2" />
<text  x="22.74" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%)</title><rect x="775.7" y="325" width="0.4" height="15.0" fill="rgb(252,158,18)" rx="2" ry="2" />
<text  x="778.67" y="335.5" ></text>
</g>
<g >
<title>reader_permit::consume (28 samples, 0.06%)</title><rect x="289.2" y="277" width="0.7" height="15.0" fill="rgb(240,41,38)" rx="2" ry="2" />
<text  x="292.18" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (11 samples, 0.02%)</title><rect x="231.7" y="181" width="0.2" height="15.0" fill="rgb(223,107,52)" rx="2" ry="2" />
<text  x="234.67" y="191.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (4 samples, 0.01%)</title><rect x="296.5" y="389" width="0.1" height="15.0" fill="rgb(218,228,40)" rx="2" ry="2" />
<text  x="299.46" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="734.2" y="453" width="0.2" height="15.0" fill="rgb(218,169,49)" rx="2" ry="2" />
<text  x="737.16" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (47 samples, 0.10%)</title><rect x="304.6" y="261" width="1.2" height="15.0" fill="rgb(250,209,18)" rx="2" ry="2" />
<text  x="307.62" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (41 samples, 0.09%)</title><rect x="752.0" y="325" width="1.1" height="15.0" fill="rgb(226,19,40)" rx="2" ry="2" />
<text  x="755.03" y="335.5" ></text>
</g>
<g >
<title>antlr3::CyclicDFA&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, cql3_parser::CqlLexer&gt;::predict&lt;cql3_parser::CqlLexerCyclicDFA44&gt; (5 samples, 0.01%)</title><rect x="17.7" y="245" width="0.1" height="15.0" fill="rgb(242,170,1)" rx="2" ry="2" />
<text  x="20.71" y="255.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (99 samples, 0.21%)</title><rect x="154.4" y="213" width="2.4" height="15.0" fill="rgb(215,154,26)" rx="2" ry="2" />
<text  x="157.36" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4 samples, 0.01%)</title><rect x="432.8" y="389" width="0.1" height="15.0" fill="rgb(254,211,7)" rx="2" ry="2" />
<text  x="435.84" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (17 samples, 0.04%)</title><rect x="955.8" y="357" width="0.5" height="15.0" fill="rgb(205,87,2)" rx="2" ry="2" />
<text  x="958.83" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (12 samples, 0.03%)</title><rect x="1139.4" y="261" width="0.3" height="15.0" fill="rgb(222,121,35)" rx="2" ry="2" />
<text  x="1142.42" y="271.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (14 samples, 0.03%)</title><rect x="515.0" y="213" width="0.3" height="15.0" fill="rgb(216,2,42)" rx="2" ry="2" />
<text  x="517.99" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (5 samples, 0.01%)</title><rect x="986.1" y="357" width="0.2" height="15.0" fill="rgb(249,20,9)" rx="2" ry="2" />
<text  x="989.12" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="460.5" y="277" width="0.5" height="15.0" fill="rgb(247,219,35)" rx="2" ry="2" />
<text  x="463.50" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::storage_proxy::send_to_live_endpoints (4 samples, 0.01%)</title><rect x="722.7" y="501" width="0.1" height="15.0" fill="rgb(229,174,51)" rx="2" ry="2" />
<text  x="725.73" y="511.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (118 samples, 0.25%)</title><rect x="953.8" y="405" width="2.9" height="15.0" fill="rgb(220,117,16)" rx="2" ry="2" />
<text  x="956.77" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (476 samples, 1.01%)</title><rect x="242.5" y="245" width="11.9" height="15.0" fill="rgb(240,200,20)" rx="2" ry="2" />
<text  x="245.49" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="874.7" y="469" width="0.2" height="15.0" fill="rgb(247,26,47)" rx="2" ry="2" />
<text  x="877.70" y="479.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (205 samples, 0.44%)</title><rect x="16.2" y="437" width="5.1" height="15.0" fill="rgb(216,71,24)" rx="2" ry="2" />
<text  x="19.17" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (29 samples, 0.06%)</title><rect x="847.2" y="421" width="0.7" height="15.0" fill="rgb(235,170,25)" rx="2" ry="2" />
<text  x="850.16" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="510.5" y="181" width="0.7" height="15.0" fill="rgb(211,37,26)" rx="2" ry="2" />
<text  x="513.50" y="191.5" ></text>
</g>
<g >
<title>query::querier&lt; (17,968 samples, 38.22%)</title><rect x="105.9" y="437" width="451.1" height="15.0" fill="rgb(252,104,5)" rx="2" ry="2" />
<text  x="108.94" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (36 samples, 0.08%)</title><rect x="835.4" y="357" width="0.9" height="15.0" fill="rgb(230,135,25)" rx="2" ry="2" />
<text  x="838.42" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (51 samples, 0.11%)</title><rect x="808.7" y="197" width="1.2" height="15.0" fill="rgb(227,7,34)" rx="2" ry="2" />
<text  x="811.66" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (16 samples, 0.03%)</title><rect x="17.3" y="261" width="0.4" height="15.0" fill="rgb(212,227,30)" rx="2" ry="2" />
<text  x="20.25" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%)</title><rect x="819.0" y="197" width="0.3" height="15.0" fill="rgb(239,143,7)" rx="2" ry="2" />
<text  x="822.02" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (136 samples, 0.29%)</title><rect x="679.7" y="469" width="3.4" height="15.0" fill="rgb(215,127,8)" rx="2" ry="2" />
<text  x="682.66" y="479.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (16 samples, 0.03%)</title><rect x="37.0" y="437" width="0.4" height="15.0" fill="rgb(253,42,54)" rx="2" ry="2" />
<text  x="39.98" y="447.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (4 samples, 0.01%)</title><rect x="721.8" y="469" width="0.1" height="15.0" fill="rgb(250,138,22)" rx="2" ry="2" />
<text  x="724.78" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (53 samples, 0.11%)</title><rect x="522.4" y="293" width="1.3" height="15.0" fill="rgb(249,1,5)" rx="2" ry="2" />
<text  x="525.37" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (7 samples, 0.01%)</title><rect x="693.1" y="485" width="0.1" height="15.0" fill="rgb(227,63,5)" rx="2" ry="2" />
<text  x="696.06" y="495.5" ></text>
</g>
<g >
<title>db::is_serial_consistency (4 samples, 0.01%)</title><rect x="1137.5" y="437" width="0.1" height="15.0" fill="rgb(220,177,27)" rx="2" ry="2" />
<text  x="1140.54" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="303.5" y="293" width="0.2" height="15.0" fill="rgb(219,48,47)" rx="2" ry="2" />
<text  x="306.49" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::stats (33 samples, 0.07%)</title><rect x="505.7" y="245" width="0.8" height="15.0" fill="rgb(225,149,17)" rx="2" ry="2" />
<text  x="508.68" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="220.6" y="165" width="0.2" height="15.0" fill="rgb(243,194,13)" rx="2" ry="2" />
<text  x="223.63" y="175.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="53.0" y="469" width="0.5" height="15.0" fill="rgb(211,107,5)" rx="2" ry="2" />
<text  x="56.00" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (51 samples, 0.11%)</title><rect x="776.4" y="341" width="1.2" height="15.0" fill="rgb(216,208,36)" rx="2" ry="2" />
<text  x="779.35" y="351.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%)</title><rect x="753.7" y="373" width="0.9" height="15.0" fill="rgb(248,79,9)" rx="2" ry="2" />
<text  x="756.73" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%)</title><rect x="953.5" y="405" width="0.2" height="15.0" fill="rgb(224,166,11)" rx="2" ry="2" />
<text  x="956.52" y="415.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.06%)</title><rect x="421.4" y="261" width="0.7" height="15.0" fill="rgb(243,151,48)" rx="2" ry="2" />
<text  x="424.44" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,222 samples, 21.74%)</title><rect x="881.9" y="485" width="256.6" height="15.0" fill="rgb(223,64,32)" rx="2" ry="2" />
<text  x="884.90" y="495.5" >seastar::concrete_execution_stage&lt;..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%)</title><rect x="1063.3" y="261" width="0.3" height="15.0" fill="rgb(206,132,27)" rx="2" ry="2" />
<text  x="1066.31" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (4 samples, 0.01%)</title><rect x="858.1" y="341" width="0.1" height="15.0" fill="rgb(253,44,23)" rx="2" ry="2" />
<text  x="861.13" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (52 samples, 0.11%)</title><rect x="824.8" y="293" width="1.4" height="15.0" fill="rgb(216,58,46)" rx="2" ry="2" />
<text  x="827.85" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="492.0" y="325" width="0.3" height="15.0" fill="rgb(242,3,33)" rx="2" ry="2" />
<text  x="495.00" y="335.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (32 samples, 0.07%)</title><rect x="226.8" y="133" width="0.8" height="15.0" fill="rgb(246,114,37)" rx="2" ry="2" />
<text  x="229.75" y="143.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (104 samples, 0.22%)</title><rect x="420.6" y="293" width="2.6" height="15.0" fill="rgb(212,136,21)" rx="2" ry="2" />
<text  x="423.56" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (4 samples, 0.01%)</title><rect x="795.8" y="293" width="0.1" height="15.0" fill="rgb(219,184,33)" rx="2" ry="2" />
<text  x="798.78" y="303.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="1157.7" y="389" width="0.9" height="15.0" fill="rgb(205,194,12)" rx="2" ry="2" />
<text  x="1160.67" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="104.3" y="389" width="0.2" height="15.0" fill="rgb(239,143,47)" rx="2" ry="2" />
<text  x="107.26" y="399.5" ></text>
</g>
<g >
<title>operator delete (42 samples, 0.09%)</title><rect x="523.8" y="325" width="1.0" height="15.0" fill="rgb(238,77,14)" rx="2" ry="2" />
<text  x="526.75" y="335.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="914.5" y="309" width="0.1" height="15.0" fill="rgb(209,110,14)" rx="2" ry="2" />
<text  x="917.51" y="319.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (6 samples, 0.01%)</title><rect x="1086.6" y="261" width="0.2" height="15.0" fill="rgb(247,14,53)" rx="2" ry="2" />
<text  x="1089.61" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="40.5" y="437" width="0.2" height="15.0" fill="rgb(211,229,5)" rx="2" ry="2" />
<text  x="43.50" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (46 samples, 0.10%)</title><rect x="510.3" y="213" width="1.1" height="15.0" fill="rgb(226,166,6)" rx="2" ry="2" />
<text  x="513.27" y="223.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (42 samples, 0.09%)</title><rect x="736.4" y="405" width="1.1" height="15.0" fill="rgb(235,99,11)" rx="2" ry="2" />
<text  x="739.41" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::selection::selection const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="669.7" y="485" width="0.2" height="15.0" fill="rgb(215,191,9)" rx="2" ry="2" />
<text  x="672.74" y="495.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (82 samples, 0.17%)</title><rect x="531.9" y="293" width="2.0" height="15.0" fill="rgb(245,126,38)" rx="2" ry="2" />
<text  x="534.86" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="706.7" y="469" width="0.2" height="15.0" fill="rgb(231,10,10)" rx="2" ry="2" />
<text  x="709.69" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (27 samples, 0.06%)</title><rect x="973.0" y="341" width="0.7" height="15.0" fill="rgb(220,130,11)" rx="2" ry="2" />
<text  x="976.02" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.06%)</title><rect x="424.8" y="325" width="0.7" height="15.0" fill="rgb(218,200,31)" rx="2" ry="2" />
<text  x="427.80" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="550.0" y="373" width="0.2" height="15.0" fill="rgb(244,120,24)" rx="2" ry="2" />
<text  x="553.01" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (24 samples, 0.05%)</title><rect x="82.5" y="453" width="0.6" height="15.0" fill="rgb(230,69,7)" rx="2" ry="2" />
<text  x="85.47" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (16 samples, 0.03%)</title><rect x="1152.5" y="421" width="0.4" height="15.0" fill="rgb(244,24,27)" rx="2" ry="2" />
<text  x="1155.47" y="431.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (5 samples, 0.01%)</title><rect x="1170.1" y="469" width="0.1" height="15.0" fill="rgb(224,150,16)" rx="2" ry="2" />
<text  x="1173.09" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (4 samples, 0.01%)</title><rect x="702.0" y="437" width="0.1" height="15.0" fill="rgb(254,52,29)" rx="2" ry="2" />
<text  x="704.98" y="447.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (8 samples, 0.02%)</title><rect x="1054.2" y="325" width="0.2" height="15.0" fill="rgb(229,11,6)" rx="2" ry="2" />
<text  x="1057.23" y="335.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (24 samples, 0.05%)</title><rect x="1118.3" y="405" width="0.6" height="15.0" fill="rgb(213,148,19)" rx="2" ry="2" />
<text  x="1121.26" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="917.5" y="309" width="0.3" height="15.0" fill="rgb(247,103,36)" rx="2" ry="2" />
<text  x="920.47" y="319.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (198 samples, 0.42%)</title><rect x="1030.0" y="197" width="5.0" height="15.0" fill="rgb(231,36,32)" rx="2" ry="2" />
<text  x="1033.03" y="207.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (4 samples, 0.01%)</title><rect x="61.8" y="453" width="0.1" height="15.0" fill="rgb(235,50,34)" rx="2" ry="2" />
<text  x="64.83" y="463.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (20 samples, 0.04%)</title><rect x="1168.4" y="469" width="0.5" height="15.0" fill="rgb(219,7,12)" rx="2" ry="2" />
<text  x="1171.39" y="479.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (32 samples, 0.07%)</title><rect x="1064.0" y="277" width="0.8" height="15.0" fill="rgb(226,45,19)" rx="2" ry="2" />
<text  x="1067.02" y="287.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (422 samples, 0.90%)</title><rect x="481.1" y="277" width="10.6" height="15.0" fill="rgb(240,216,12)" rx="2" ry="2" />
<text  x="484.13" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="542.0" y="341" width="0.3" height="15.0" fill="rgb(225,195,1)" rx="2" ry="2" />
<text  x="544.98" y="351.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="18.9" y="229" width="0.2" height="15.0" fill="rgb(219,172,1)" rx="2" ry="2" />
<text  x="21.94" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (4 samples, 0.01%)</title><rect x="104.5" y="421" width="0.1" height="15.0" fill="rgb(242,119,25)" rx="2" ry="2" />
<text  x="107.51" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (4 samples, 0.01%)</title><rect x="881.3" y="373" width="0.1" height="15.0" fill="rgb(253,39,1)" rx="2" ry="2" />
<text  x="884.25" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (41 samples, 0.09%)</title><rect x="1139.3" y="421" width="1.1" height="15.0" fill="rgb(250,82,47)" rx="2" ry="2" />
<text  x="1142.35" y="431.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (48 samples, 0.10%)</title><rect x="819.5" y="261" width="1.2" height="15.0" fill="rgb(253,133,30)" rx="2" ry="2" />
<text  x="822.45" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (8 samples, 0.02%)</title><rect x="595.5" y="405" width="0.2" height="15.0" fill="rgb(219,4,11)" rx="2" ry="2" />
<text  x="598.47" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="210.2" y="133" width="0.3" height="15.0" fill="rgb(217,15,15)" rx="2" ry="2" />
<text  x="213.24" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (4 samples, 0.01%)</title><rect x="45.4" y="485" width="0.1" height="15.0" fill="rgb(215,208,41)" rx="2" ry="2" />
<text  x="48.39" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (46 samples, 0.10%)</title><rect x="277.0" y="357" width="1.1" height="15.0" fill="rgb(233,89,4)" rx="2" ry="2" />
<text  x="279.98" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.02%)</title><rect x="1099.0" y="357" width="0.3" height="15.0" fill="rgb(206,223,49)" rx="2" ry="2" />
<text  x="1102.01" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.03%)</title><rect x="940.1" y="341" width="0.3" height="15.0" fill="rgb(242,11,12)" rx="2" ry="2" />
<text  x="943.11" y="351.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,545 samples, 5.41%)</title><rect x="463.0" y="341" width="63.8" height="15.0" fill="rgb(236,14,35)" rx="2" ry="2" />
<text  x="465.96" y="351.5" >memtabl..</text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (12 samples, 0.03%)</title><rect x="1086.8" y="277" width="0.3" height="15.0" fill="rgb(247,217,20)" rx="2" ry="2" />
<text  x="1089.76" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (4 samples, 0.01%)</title><rect x="844.7" y="277" width="0.1" height="15.0" fill="rgb(250,109,0)" rx="2" ry="2" />
<text  x="847.73" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="678.6" y="453" width="0.1" height="15.0" fill="rgb(222,214,11)" rx="2" ry="2" />
<text  x="681.56" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (12 samples, 0.03%)</title><rect x="71.0" y="389" width="0.3" height="15.0" fill="rgb(218,192,47)" rx="2" ry="2" />
<text  x="73.97" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (22 samples, 0.05%)</title><rect x="195.0" y="53" width="0.6" height="15.0" fill="rgb(206,94,47)" rx="2" ry="2" />
<text  x="198.00" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="71.3" y="389" width="0.1" height="15.0" fill="rgb(248,187,5)" rx="2" ry="2" />
<text  x="74.27" y="399.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (77 samples, 0.16%)</title><rect x="843.5" y="325" width="1.9" height="15.0" fill="rgb(211,143,45)" rx="2" ry="2" />
<text  x="846.50" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (76 samples, 0.16%)</title><rect x="63.1" y="437" width="1.9" height="15.0" fill="rgb(254,213,17)" rx="2" ry="2" />
<text  x="66.11" y="447.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (52 samples, 0.11%)</title><rect x="615.3" y="437" width="1.3" height="15.0" fill="rgb(223,85,14)" rx="2" ry="2" />
<text  x="618.27" y="447.5" ></text>
</g>
<g >
<title>free (21 samples, 0.04%)</title><rect x="37.7" y="421" width="0.5" height="15.0" fill="rgb(249,5,14)" rx="2" ry="2" />
<text  x="40.66" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="220.9" y="149" width="0.6" height="15.0" fill="rgb(218,77,19)" rx="2" ry="2" />
<text  x="223.93" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (9 samples, 0.02%)</title><rect x="37.2" y="421" width="0.2" height="15.0" fill="rgb(210,228,53)" rx="2" ry="2" />
<text  x="40.16" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="781.9" y="341" width="0.1" height="15.0" fill="rgb(234,159,21)" rx="2" ry="2" />
<text  x="784.87" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="294.4" y="357" width="0.4" height="15.0" fill="rgb(234,203,35)" rx="2" ry="2" />
<text  x="297.35" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="292.4" y="341" width="0.1" height="15.0" fill="rgb(218,201,45)" rx="2" ry="2" />
<text  x="295.39" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (4 samples, 0.01%)</title><rect x="563.0" y="309" width="0.1" height="15.0" fill="rgb(209,194,19)" rx="2" ry="2" />
<text  x="566.04" y="319.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (19 samples, 0.04%)</title><rect x="1065.9" y="341" width="0.4" height="15.0" fill="rgb(244,104,19)" rx="2" ry="2" />
<text  x="1068.87" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="228.0" y="133" width="0.2" height="15.0" fill="rgb(227,4,11)" rx="2" ry="2" />
<text  x="231.01" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (19 samples, 0.04%)</title><rect x="1149.7" y="485" width="0.5" height="15.0" fill="rgb(217,176,19)" rx="2" ry="2" />
<text  x="1152.71" y="495.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (124 samples, 0.26%)</title><rect x="868.8" y="405" width="3.1" height="15.0" fill="rgb(229,25,23)" rx="2" ry="2" />
<text  x="871.78" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (4 samples, 0.01%)</title><rect x="285.4" y="293" width="0.1" height="15.0" fill="rgb(208,4,27)" rx="2" ry="2" />
<text  x="288.39" y="303.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (11 samples, 0.02%)</title><rect x="603.9" y="405" width="0.3" height="15.0" fill="rgb(216,90,53)" rx="2" ry="2" />
<text  x="606.93" y="415.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (4 samples, 0.01%)</title><rect x="200.0" y="85" width="0.1" height="15.0" fill="rgb(205,179,37)" rx="2" ry="2" />
<text  x="203.04" y="95.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="446.2" y="261" width="0.3" height="15.0" fill="rgb(221,156,4)" rx="2" ry="2" />
<text  x="449.19" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (6 samples, 0.01%)</title><rect x="726.1" y="501" width="0.1" height="15.0" fill="rgb(217,142,42)" rx="2" ry="2" />
<text  x="729.07" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="918.0" y="309" width="0.5" height="15.0" fill="rgb(209,217,48)" rx="2" ry="2" />
<text  x="921.05" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (6 samples, 0.01%)</title><rect x="17.7" y="261" width="0.2" height="15.0" fill="rgb(209,213,16)" rx="2" ry="2" />
<text  x="20.71" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="943.0" y="373" width="0.4" height="15.0" fill="rgb(251,43,13)" rx="2" ry="2" />
<text  x="946.00" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="725.6" y="501" width="0.1" height="15.0" fill="rgb(213,46,24)" rx="2" ry="2" />
<text  x="728.60" y="511.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (218 samples, 0.46%)</title><rect x="928.1" y="373" width="5.5" height="15.0" fill="rgb(227,197,41)" rx="2" ry="2" />
<text  x="931.14" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (20 samples, 0.04%)</title><rect x="74.7" y="405" width="0.5" height="15.0" fill="rgb(243,198,30)" rx="2" ry="2" />
<text  x="77.74" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,025 samples, 21.33%)</title><rect x="886.5" y="469" width="251.6" height="15.0" fill="rgb(252,43,36)" rx="2" ry="2" />
<text  x="889.47" y="479.5" >seastar::noncopyable_function&lt;sea..</text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="239.0" y="229" width="0.2" height="15.0" fill="rgb(214,27,21)" rx="2" ry="2" />
<text  x="242.03" y="239.5" ></text>
</g>
<g >
<title>operator new (52 samples, 0.11%)</title><rect x="862.3" y="405" width="1.3" height="15.0" fill="rgb(243,202,3)" rx="2" ry="2" />
<text  x="865.32" y="415.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="683.7" y="485" width="0.7" height="15.0" fill="rgb(232,83,49)" rx="2" ry="2" />
<text  x="686.68" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="732.1" y="469" width="0.2" height="15.0" fill="rgb(216,92,25)" rx="2" ry="2" />
<text  x="735.15" y="479.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (7 samples, 0.01%)</title><rect x="22.8" y="485" width="0.2" height="15.0" fill="rgb(252,106,11)" rx="2" ry="2" />
<text  x="25.80" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%)</title><rect x="718.0" y="421" width="0.2" height="15.0" fill="rgb(240,172,29)" rx="2" ry="2" />
<text  x="721.02" y="431.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (31 samples, 0.07%)</title><rect x="658.7" y="437" width="0.8" height="15.0" fill="rgb(232,147,37)" rx="2" ry="2" />
<text  x="661.67" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_stream::empty (4 samples, 0.01%)</title><rect x="238.9" y="229" width="0.1" height="15.0" fill="rgb(215,117,29)" rx="2" ry="2" />
<text  x="241.93" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="725.4" y="501" width="0.2" height="15.0" fill="rgb(221,192,10)" rx="2" ry="2" />
<text  x="728.45" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="253.4" y="229" width="0.3" height="15.0" fill="rgb(216,154,22)" rx="2" ry="2" />
<text  x="256.41" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;void&gt;::await_suspend&lt;seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type&gt; (4 samples, 0.01%)</title><rect x="1041.0" y="245" width="0.1" height="15.0" fill="rgb(225,49,43)" rx="2" ry="2" />
<text  x="1043.97" y="255.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (204 samples, 0.43%)</title><rect x="10.1" y="613" width="5.1" height="15.0" fill="rgb(213,150,48)" rx="2" ry="2" />
<text  x="13.13" y="623.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (5 samples, 0.01%)</title><rect x="341.4" y="181" width="0.1" height="15.0" fill="rgb(244,44,44)" rx="2" ry="2" />
<text  x="344.37" y="191.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (15 samples, 0.03%)</title><rect x="895.3" y="421" width="0.4" height="15.0" fill="rgb(222,158,42)" rx="2" ry="2" />
<text  x="898.31" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="619.5" y="405" width="0.4" height="15.0" fill="rgb(221,66,22)" rx="2" ry="2" />
<text  x="622.52" y="415.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (33 samples, 0.07%)</title><rect x="581.6" y="373" width="0.8" height="15.0" fill="rgb(246,114,16)" rx="2" ry="2" />
<text  x="584.56" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (13 samples, 0.03%)</title><rect x="1067.4" y="341" width="0.4" height="15.0" fill="rgb(210,103,49)" rx="2" ry="2" />
<text  x="1070.43" y="351.5" ></text>
</g>
<g >
<title>row_cache::make_reader (458 samples, 0.97%)</title><rect x="528.2" y="341" width="11.5" height="15.0" fill="rgb(216,24,42)" rx="2" ry="2" />
<text  x="531.25" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (15 samples, 0.03%)</title><rect x="321.5" y="165" width="0.3" height="15.0" fill="rgb(234,11,45)" rx="2" ry="2" />
<text  x="324.46" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (324 samples, 0.69%)</title><rect x="259.9" y="309" width="8.1" height="15.0" fill="rgb(237,147,47)" rx="2" ry="2" />
<text  x="262.86" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="366.3" y="149" width="0.5" height="15.0" fill="rgb(246,24,39)" rx="2" ry="2" />
<text  x="369.32" y="159.5" ></text>
</g>
<g >
<title>dht::shard_of (11 samples, 0.02%)</title><rect x="1005.6" y="293" width="0.3" height="15.0" fill="rgb(246,141,0)" rx="2" ry="2" />
<text  x="1008.63" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (36 samples, 0.08%)</title><rect x="223.7" y="165" width="0.9" height="15.0" fill="rgb(220,185,0)" rx="2" ry="2" />
<text  x="226.66" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (4 samples, 0.01%)</title><rect x="598.5" y="389" width="0.1" height="15.0" fill="rgb(206,10,17)" rx="2" ry="2" />
<text  x="601.53" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (5 samples, 0.01%)</title><rect x="1101.0" y="341" width="0.1" height="15.0" fill="rgb(222,152,13)" rx="2" ry="2" />
<text  x="1103.99" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (28 samples, 0.06%)</title><rect x="695.0" y="325" width="0.7" height="15.0" fill="rgb(222,182,30)" rx="2" ry="2" />
<text  x="698.05" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (11 samples, 0.02%)</title><rect x="997.5" y="261" width="0.3" height="15.0" fill="rgb(214,128,23)" rx="2" ry="2" />
<text  x="1000.55" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (29 samples, 0.06%)</title><rect x="881.2" y="453" width="0.7" height="15.0" fill="rgb(248,92,35)" rx="2" ry="2" />
<text  x="884.18" y="463.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (189 samples, 0.40%)</title><rect x="363.7" y="165" width="4.7" height="15.0" fill="rgb(211,57,27)" rx="2" ry="2" />
<text  x="366.66" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (6 samples, 0.01%)</title><rect x="722.6" y="485" width="0.1" height="15.0" fill="rgb(237,193,43)" rx="2" ry="2" />
<text  x="725.58" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (63 samples, 0.13%)</title><rect x="834.7" y="373" width="1.6" height="15.0" fill="rgb(224,217,24)" rx="2" ry="2" />
<text  x="837.74" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="1114.5" y="341" width="0.1" height="15.0" fill="rgb(216,26,1)" rx="2" ry="2" />
<text  x="1117.47" y="351.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,961 samples, 12.68%)</title><rect x="728.2" y="485" width="149.6" height="15.0" fill="rgb(243,179,14)" rx="2" ry="2" />
<text  x="731.21" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>freeze (12 samples, 0.03%)</title><rect x="1139.8" y="197" width="0.3" height="15.0" fill="rgb(212,102,7)" rx="2" ry="2" />
<text  x="1142.85" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (30 samples, 0.06%)</title><rect x="336.8" y="181" width="0.7" height="15.0" fill="rgb(246,142,31)" rx="2" ry="2" />
<text  x="339.77" y="191.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (40 samples, 0.09%)</title><rect x="580.6" y="357" width="1.0" height="15.0" fill="rgb(207,21,48)" rx="2" ry="2" />
<text  x="583.56" y="367.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (8 samples, 0.02%)</title><rect x="1141.7" y="501" width="0.2" height="15.0" fill="rgb(212,88,38)" rx="2" ry="2" />
<text  x="1144.68" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (15 samples, 0.03%)</title><rect x="1140.4" y="485" width="0.4" height="15.0" fill="rgb(249,114,38)" rx="2" ry="2" />
<text  x="1143.37" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (37 samples, 0.08%)</title><rect x="478.4" y="277" width="0.9" height="15.0" fill="rgb(253,201,21)" rx="2" ry="2" />
<text  x="481.40" y="287.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (7 samples, 0.01%)</title><rect x="686.9" y="437" width="0.2" height="15.0" fill="rgb(241,110,47)" rx="2" ry="2" />
<text  x="689.94" y="447.5" ></text>
</g>
<g >
<title>database::apply (5 samples, 0.01%)</title><rect x="1139.6" y="165" width="0.1" height="15.0" fill="rgb(251,30,24)" rx="2" ry="2" />
<text  x="1142.57" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="175.2" y="149" width="0.5" height="15.0" fill="rgb(216,122,15)" rx="2" ry="2" />
<text  x="178.22" y="159.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%)</title><rect x="330.4" y="213" width="0.2" height="15.0" fill="rgb(212,166,2)" rx="2" ry="2" />
<text  x="333.40" y="223.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (49 samples, 0.10%)</title><rect x="685.9" y="453" width="1.2" height="15.0" fill="rgb(205,61,18)" rx="2" ry="2" />
<text  x="688.89" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.02%)</title><rect x="18.4" y="341" width="0.3" height="15.0" fill="rgb(247,193,25)" rx="2" ry="2" />
<text  x="21.43" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="583.8" y="341" width="0.4" height="15.0" fill="rgb(216,46,26)" rx="2" ry="2" />
<text  x="586.85" y="351.5" ></text>
</g>
<g >
<title>make_combined_reader (873 samples, 1.86%)</title><rect x="440.8" y="341" width="21.9" height="15.0" fill="rgb(221,218,39)" rx="2" ry="2" />
<text  x="443.79" y="351.5" >m..</text>
</g>
<g >
<title>standard_allocation_strategy::free (5 samples, 0.01%)</title><rect x="413.4" y="213" width="0.1" height="15.0" fill="rgb(208,11,3)" rx="2" ry="2" />
<text  x="416.36" y="223.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (8 samples, 0.02%)</title><rect x="22.2" y="421" width="0.3" height="15.0" fill="rgb(221,132,11)" rx="2" ry="2" />
<text  x="25.25" y="431.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (326 samples, 0.69%)</title><rect x="736.0" y="437" width="8.2" height="15.0" fill="rgb(241,21,2)" rx="2" ry="2" />
<text  x="739.01" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (6 samples, 0.01%)</title><rect x="696.0" y="469" width="0.2" height="15.0" fill="rgb(231,12,11)" rx="2" ry="2" />
<text  x="699.03" y="479.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (32 samples, 0.07%)</title><rect x="754.7" y="373" width="0.8" height="15.0" fill="rgb(211,17,12)" rx="2" ry="2" />
<text  x="757.66" y="383.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (98 samples, 0.21%)</title><rect x="740.6" y="309" width="2.5" height="15.0" fill="rgb(252,54,47)" rx="2" ry="2" />
<text  x="743.61" y="319.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (4 samples, 0.01%)</title><rect x="606.7" y="405" width="0.1" height="15.0" fill="rgb(235,77,20)" rx="2" ry="2" />
<text  x="609.66" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (6 samples, 0.01%)</title><rect x="329.8" y="213" width="0.1" height="15.0" fill="rgb(222,158,4)" rx="2" ry="2" />
<text  x="332.79" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (215 samples, 0.46%)</title><rect x="756.1" y="357" width="5.4" height="15.0" fill="rgb(225,131,16)" rx="2" ry="2" />
<text  x="759.09" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (30 samples, 0.06%)</title><rect x="951.9" y="357" width="0.7" height="15.0" fill="rgb(244,202,42)" rx="2" ry="2" />
<text  x="954.89" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (6 samples, 0.01%)</title><rect x="542.3" y="373" width="0.2" height="15.0" fill="rgb(222,196,3)" rx="2" ry="2" />
<text  x="545.33" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (9 samples, 0.02%)</title><rect x="21.4" y="405" width="0.2" height="15.0" fill="rgb(237,193,20)" rx="2" ry="2" />
<text  x="24.42" y="415.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (5 samples, 0.01%)</title><rect x="855.6" y="437" width="0.1" height="15.0" fill="rgb(239,209,54)" rx="2" ry="2" />
<text  x="858.62" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="967.3" y="389" width="0.1" height="15.0" fill="rgb(238,50,50)" rx="2" ry="2" />
<text  x="970.32" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (6 samples, 0.01%)</title><rect x="880.5" y="341" width="0.2" height="15.0" fill="rgb(241,160,10)" rx="2" ry="2" />
<text  x="883.55" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (78 samples, 0.17%)</title><rect x="579.6" y="373" width="2.0" height="15.0" fill="rgb(217,212,1)" rx="2" ry="2" />
<text  x="582.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="644.9" y="469" width="0.2" height="15.0" fill="rgb(246,160,1)" rx="2" ry="2" />
<text  x="647.92" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1035.3" y="197" width="0.2" height="15.0" fill="rgb(254,138,39)" rx="2" ry="2" />
<text  x="1038.32" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (17 samples, 0.04%)</title><rect x="718.4" y="437" width="0.4" height="15.0" fill="rgb(249,117,13)" rx="2" ry="2" />
<text  x="721.39" y="447.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (30 samples, 0.06%)</title><rect x="849.1" y="421" width="0.7" height="15.0" fill="rgb(208,132,31)" rx="2" ry="2" />
<text  x="852.10" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (9 samples, 0.02%)</title><rect x="23.4" y="517" width="0.2" height="15.0" fill="rgb(234,107,37)" rx="2" ry="2" />
<text  x="26.40" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (21 samples, 0.04%)</title><rect x="416.2" y="229" width="0.5" height="15.0" fill="rgb(205,202,33)" rx="2" ry="2" />
<text  x="419.22" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (15 samples, 0.03%)</title><rect x="693.8" y="485" width="0.3" height="15.0" fill="rgb(232,129,28)" rx="2" ry="2" />
<text  x="696.77" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (18 samples, 0.04%)</title><rect x="949.6" y="405" width="0.4" height="15.0" fill="rgb(206,125,33)" rx="2" ry="2" />
<text  x="952.58" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (7 samples, 0.01%)</title><rect x="435.1" y="357" width="0.2" height="15.0" fill="rgb(208,178,54)" rx="2" ry="2" />
<text  x="438.12" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (28 samples, 0.06%)</title><rect x="21.4" y="437" width="0.7" height="15.0" fill="rgb(206,175,32)" rx="2" ry="2" />
<text  x="24.37" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (13 samples, 0.03%)</title><rect x="75.2" y="405" width="0.4" height="15.0" fill="rgb(206,62,43)" rx="2" ry="2" />
<text  x="78.24" y="415.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (122 samples, 0.26%)</title><rect x="358.4" y="165" width="3.1" height="15.0" fill="rgb(209,123,4)" rx="2" ry="2" />
<text  x="361.41" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="283.5" y="293" width="0.2" height="15.0" fill="rgb(238,171,34)" rx="2" ry="2" />
<text  x="286.53" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::stats (52 samples, 0.11%)</title><rect x="493.9" y="309" width="1.3" height="15.0" fill="rgb(247,74,26)" rx="2" ry="2" />
<text  x="496.88" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="923.5" y="357" width="0.7" height="15.0" fill="rgb(212,165,36)" rx="2" ry="2" />
<text  x="926.52" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (14 samples, 0.03%)</title><rect x="419.1" y="261" width="0.3" height="15.0" fill="rgb(212,206,39)" rx="2" ry="2" />
<text  x="422.06" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::stats (28 samples, 0.06%)</title><rect x="534.8" y="293" width="0.7" height="15.0" fill="rgb(222,70,43)" rx="2" ry="2" />
<text  x="537.80" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (29 samples, 0.06%)</title><rect x="881.2" y="485" width="0.7" height="15.0" fill="rgb(246,177,20)" rx="2" ry="2" />
<text  x="884.18" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="140.6" y="229" width="0.5" height="15.0" fill="rgb(235,110,1)" rx="2" ry="2" />
<text  x="143.55" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="520.1" y="277" width="0.2" height="15.0" fill="rgb(216,211,54)" rx="2" ry="2" />
<text  x="523.11" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (36 samples, 0.08%)</title><rect x="1160.2" y="453" width="0.9" height="15.0" fill="rgb(231,129,15)" rx="2" ry="2" />
<text  x="1163.20" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (805 samples, 1.71%)</title><rect x="900.3" y="405" width="20.2" height="15.0" fill="rgb(245,183,39)" rx="2" ry="2" />
<text  x="903.28" y="415.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (11 samples, 0.02%)</title><rect x="1095.0" y="261" width="0.2" height="15.0" fill="rgb(227,33,20)" rx="2" ry="2" />
<text  x="1097.97" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (181 samples, 0.39%)</title><rect x="486.7" y="213" width="4.6" height="15.0" fill="rgb(232,211,44)" rx="2" ry="2" />
<text  x="489.73" y="223.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (4 samples, 0.01%)</title><rect x="1096.1" y="293" width="0.1" height="15.0" fill="rgb(211,222,28)" rx="2" ry="2" />
<text  x="1099.10" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (6 samples, 0.01%)</title><rect x="1175.1" y="501" width="0.2" height="15.0" fill="rgb(217,197,21)" rx="2" ry="2" />
<text  x="1178.14" y="511.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="163.7" y="229" width="0.1" height="15.0" fill="rgb(231,63,7)" rx="2" ry="2" />
<text  x="166.70" y="239.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (7 samples, 0.01%)</title><rect x="258.7" y="229" width="0.2" height="15.0" fill="rgb(208,78,19)" rx="2" ry="2" />
<text  x="261.68" y="239.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6 samples, 0.01%)</title><rect x="294.2" y="357" width="0.2" height="15.0" fill="rgb(247,201,49)" rx="2" ry="2" />
<text  x="297.20" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (10 samples, 0.02%)</title><rect x="1150.2" y="485" width="0.2" height="15.0" fill="rgb(214,128,0)" rx="2" ry="2" />
<text  x="1153.19" y="495.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,520 samples, 9.62%)</title><rect x="146.3" y="293" width="113.5" height="15.0" fill="rgb(232,103,47)" rx="2" ry="2" />
<text  x="149.30" y="303.5" >seastar::do_un..</text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (123 samples, 0.26%)</title><rect x="391.6" y="149" width="3.1" height="15.0" fill="rgb(233,117,13)" rx="2" ry="2" />
<text  x="394.57" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (71 samples, 0.15%)</title><rect x="402.9" y="213" width="1.8" height="15.0" fill="rgb(208,0,10)" rx="2" ry="2" />
<text  x="405.94" y="223.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (35 samples, 0.07%)</title><rect x="469.0" y="277" width="0.9" height="15.0" fill="rgb(244,129,0)" rx="2" ry="2" />
<text  x="472.01" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (19 samples, 0.04%)</title><rect x="338.0" y="181" width="0.5" height="15.0" fill="rgb(236,208,51)" rx="2" ry="2" />
<text  x="340.98" y="191.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (53 samples, 0.11%)</title><rect x="658.2" y="469" width="1.3" height="15.0" fill="rgb(232,215,22)" rx="2" ry="2" />
<text  x="661.20" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="867.0" y="405" width="0.1" height="15.0" fill="rgb(207,220,36)" rx="2" ry="2" />
<text  x="869.97" y="415.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (35 samples, 0.07%)</title><rect x="1094.4" y="309" width="0.9" height="15.0" fill="rgb(216,204,1)" rx="2" ry="2" />
<text  x="1097.39" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (7 samples, 0.01%)</title><rect x="601.5" y="437" width="0.2" height="15.0" fill="rgb(232,72,50)" rx="2" ry="2" />
<text  x="604.49" y="447.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1054.0" y="293" width="0.1" height="15.0" fill="rgb(244,76,45)" rx="2" ry="2" />
<text  x="1057.00" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (886 samples, 1.88%)</title><rect x="651.1" y="501" width="22.3" height="15.0" fill="rgb(205,32,41)" rx="2" ry="2" />
<text  x="654.14" y="511.5" >s..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="398.8" y="197" width="0.5" height="15.0" fill="rgb(232,208,32)" rx="2" ry="2" />
<text  x="401.77" y="207.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (7 samples, 0.01%)</title><rect x="583.7" y="341" width="0.1" height="15.0" fill="rgb(223,98,42)" rx="2" ry="2" />
<text  x="586.67" y="351.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (7 samples, 0.01%)</title><rect x="22.8" y="469" width="0.2" height="15.0" fill="rgb(232,138,36)" rx="2" ry="2" />
<text  x="25.80" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%)</title><rect x="1117.1" y="325" width="0.2" height="15.0" fill="rgb(236,100,46)" rx="2" ry="2" />
<text  x="1120.13" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (18 samples, 0.04%)</title><rect x="852.3" y="373" width="0.4" height="15.0" fill="rgb(235,152,29)" rx="2" ry="2" />
<text  x="855.28" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (37 samples, 0.08%)</title><rect x="996.9" y="277" width="0.9" height="15.0" fill="rgb(223,117,34)" rx="2" ry="2" />
<text  x="999.89" y="287.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (7 samples, 0.01%)</title><rect x="978.7" y="357" width="0.2" height="15.0" fill="rgb(234,67,6)" rx="2" ry="2" />
<text  x="981.75" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (19 samples, 0.04%)</title><rect x="857.9" y="373" width="0.4" height="15.0" fill="rgb(209,157,22)" rx="2" ry="2" />
<text  x="860.86" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (29 samples, 0.06%)</title><rect x="453.6" y="293" width="0.7" height="15.0" fill="rgb(219,70,33)" rx="2" ry="2" />
<text  x="456.60" y="303.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="36.5" y="453" width="0.3" height="15.0" fill="rgb(217,10,9)" rx="2" ry="2" />
<text  x="39.51" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="915.7" y="357" width="0.2" height="15.0" fill="rgb(225,213,12)" rx="2" ry="2" />
<text  x="918.69" y="367.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (165 samples, 0.35%)</title><rect x="929.5" y="357" width="4.1" height="15.0" fill="rgb(222,115,43)" rx="2" ry="2" />
<text  x="932.47" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (8 samples, 0.02%)</title><rect x="399.6" y="229" width="0.2" height="15.0" fill="rgb(217,34,27)" rx="2" ry="2" />
<text  x="402.55" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (4 samples, 0.01%)</title><rect x="654.9" y="469" width="0.1" height="15.0" fill="rgb(212,18,24)" rx="2" ry="2" />
<text  x="657.86" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (19 samples, 0.04%)</title><rect x="885.5" y="453" width="0.5" height="15.0" fill="rgb(209,83,1)" rx="2" ry="2" />
<text  x="888.54" y="463.5" ></text>
</g>
<g >
<title>table::as_mutation_source (107 samples, 0.23%)</title><rect x="629.8" y="437" width="2.7" height="15.0" fill="rgb(212,13,23)" rx="2" ry="2" />
<text  x="632.78" y="447.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (4 samples, 0.01%)</title><rect x="74.4" y="373" width="0.1" height="15.0" fill="rgb(246,126,9)" rx="2" ry="2" />
<text  x="77.44" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="158.0" y="165" width="0.8" height="15.0" fill="rgb(219,108,45)" rx="2" ry="2" />
<text  x="161.00" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (15 samples, 0.03%)</title><rect x="1137.0" y="421" width="0.3" height="15.0" fill="rgb(211,95,26)" rx="2" ry="2" />
<text  x="1139.96" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (7 samples, 0.01%)</title><rect x="899.0" y="389" width="0.1" height="15.0" fill="rgb(231,222,36)" rx="2" ry="2" />
<text  x="901.97" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (15 samples, 0.03%)</title><rect x="807.3" y="133" width="0.4" height="15.0" fill="rgb(243,18,45)" rx="2" ry="2" />
<text  x="810.30" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="605.8" y="357" width="0.5" height="15.0" fill="rgb(231,147,36)" rx="2" ry="2" />
<text  x="608.81" y="367.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (29 samples, 0.06%)</title><rect x="752.2" y="309" width="0.7" height="15.0" fill="rgb(232,41,41)" rx="2" ry="2" />
<text  x="755.20" y="319.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="47.1" y="501" width="0.2" height="15.0" fill="rgb(241,33,22)" rx="2" ry="2" />
<text  x="50.13" y="511.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="845.1" y="277" width="0.2" height="15.0" fill="rgb(246,180,2)" rx="2" ry="2" />
<text  x="848.10" y="287.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (4 samples, 0.01%)</title><rect x="491.5" y="213" width="0.1" height="15.0" fill="rgb(216,29,6)" rx="2" ry="2" />
<text  x="494.55" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,340 samples, 2.85%)</title><rect x="557.6" y="421" width="33.7" height="15.0" fill="rgb(243,80,8)" rx="2" ry="2" />
<text  x="560.64" y="431.5" >st..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (384 samples, 0.82%)</title><rect x="673.5" y="501" width="9.6" height="15.0" fill="rgb(223,125,11)" rx="2" ry="2" />
<text  x="676.48" y="511.5" ></text>
</g>
<g >
<title>table::set_hit_rate (66 samples, 0.14%)</title><rect x="719.3" y="453" width="1.7" height="15.0" fill="rgb(214,85,27)" rx="2" ry="2" />
<text  x="722.35" y="463.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (21 samples, 0.04%)</title><rect x="78.0" y="421" width="0.5" height="15.0" fill="rgb(207,167,17)" rx="2" ry="2" />
<text  x="80.98" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="294.0" y="357" width="0.2" height="15.0" fill="rgb(205,215,52)" rx="2" ry="2" />
<text  x="297.02" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (11 samples, 0.02%)</title><rect x="997.1" y="261" width="0.3" height="15.0" fill="rgb(210,177,15)" rx="2" ry="2" />
<text  x="1000.12" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (9 samples, 0.02%)</title><rect x="1174.9" y="501" width="0.2" height="15.0" fill="rgb(251,220,16)" rx="2" ry="2" />
<text  x="1177.91" y="511.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (11 samples, 0.02%)</title><rect x="147.5" y="261" width="0.2" height="15.0" fill="rgb(209,7,34)" rx="2" ry="2" />
<text  x="150.46" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="159.6" y="181" width="0.2" height="15.0" fill="rgb(208,72,51)" rx="2" ry="2" />
<text  x="162.61" y="191.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (6 samples, 0.01%)</title><rect x="1176.1" y="437" width="0.2" height="15.0" fill="rgb(225,150,18)" rx="2" ry="2" />
<text  x="1179.12" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="866.0" y="341" width="0.4" height="15.0" fill="rgb(215,106,27)" rx="2" ry="2" />
<text  x="869.01" y="351.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,896 samples, 4.03%)</title><rect x="785.8" y="389" width="47.6" height="15.0" fill="rgb(226,46,42)" rx="2" ry="2" />
<text  x="788.76" y="399.5" >std:..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="695.0" y="389" width="0.9" height="15.0" fill="rgb(252,110,53)" rx="2" ry="2" />
<text  x="698.00" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (90 samples, 0.19%)</title><rect x="989.8" y="309" width="2.3" height="15.0" fill="rgb(207,26,52)" rx="2" ry="2" />
<text  x="992.81" y="319.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (49 samples, 0.10%)</title><rect x="748.6" y="389" width="1.2" height="15.0" fill="rgb(219,200,54)" rx="2" ry="2" />
<text  x="751.56" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="440.4" y="341" width="0.1" height="15.0" fill="rgb(225,142,52)" rx="2" ry="2" />
<text  x="443.37" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.02%)</title><rect x="24.2" y="517" width="0.2" height="15.0" fill="rgb(242,184,37)" rx="2" ry="2" />
<text  x="27.16" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,054 samples, 6.50%)</title><rect x="769.7" y="421" width="76.7" height="15.0" fill="rgb(252,224,32)" rx="2" ry="2" />
<text  x="772.72" y="431.5" >cql3::st..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (12 samples, 0.03%)</title><rect x="619.9" y="437" width="0.3" height="15.0" fill="rgb(218,165,10)" rx="2" ry="2" />
<text  x="622.94" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (129 samples, 0.27%)</title><rect x="446.7" y="277" width="3.2" height="15.0" fill="rgb(253,211,1)" rx="2" ry="2" />
<text  x="449.69" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (4 samples, 0.01%)</title><rect x="126.8" y="293" width="0.1" height="15.0" fill="rgb(210,95,8)" rx="2" ry="2" />
<text  x="129.82" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (4 samples, 0.01%)</title><rect x="556.5" y="405" width="0.1" height="15.0" fill="rgb(234,98,45)" rx="2" ry="2" />
<text  x="559.51" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (32 samples, 0.07%)</title><rect x="1168.9" y="469" width="0.8" height="15.0" fill="rgb(217,175,0)" rx="2" ry="2" />
<text  x="1171.89" y="479.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (44 samples, 0.09%)</title><rect x="246.0" y="165" width="1.1" height="15.0" fill="rgb(236,178,25)" rx="2" ry="2" />
<text  x="249.03" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (302 samples, 0.64%)</title><rect x="811.1" y="181" width="7.5" height="15.0" fill="rgb(232,185,38)" rx="2" ry="2" />
<text  x="814.07" y="191.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,006 samples, 97.87%)</title><rect x="23.2" y="581" width="1154.8" height="15.0" fill="rgb(205,139,18)" rx="2" ry="2" />
<text  x="26.20" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%)</title><rect x="798.9" y="261" width="1.3" height="15.0" fill="rgb(213,63,25)" rx="2" ry="2" />
<text  x="801.89" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (9 samples, 0.02%)</title><rect x="641.0" y="485" width="0.2" height="15.0" fill="rgb(233,171,10)" rx="2" ry="2" />
<text  x="643.95" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (8 samples, 0.02%)</title><rect x="338.6" y="165" width="0.2" height="15.0" fill="rgb(232,226,17)" rx="2" ry="2" />
<text  x="341.58" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="640.5" y="469" width="0.1" height="15.0" fill="rgb(233,41,42)" rx="2" ry="2" />
<text  x="643.48" y="479.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (23 samples, 0.05%)</title><rect x="815.1" y="117" width="0.6" height="15.0" fill="rgb(246,55,14)" rx="2" ry="2" />
<text  x="818.11" y="127.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (61 samples, 0.13%)</title><rect x="282.1" y="309" width="1.6" height="15.0" fill="rgb(243,126,41)" rx="2" ry="2" />
<text  x="285.13" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="769.0" y="405" width="0.2" height="15.0" fill="rgb(205,78,15)" rx="2" ry="2" />
<text  x="772.02" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (282 samples, 0.60%)</title><rect x="406.4" y="229" width="7.1" height="15.0" fill="rgb(211,186,9)" rx="2" ry="2" />
<text  x="409.40" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (22 samples, 0.05%)</title><rect x="707.2" y="469" width="0.5" height="15.0" fill="rgb(225,31,54)" rx="2" ry="2" />
<text  x="710.17" y="479.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (32 samples, 0.07%)</title><rect x="1138.5" y="485" width="0.8" height="15.0" fill="rgb(242,21,24)" rx="2" ry="2" />
<text  x="1141.49" y="495.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="673.8" y="485" width="0.8" height="15.0" fill="rgb(241,33,0)" rx="2" ry="2" />
<text  x="676.79" y="495.5" ></text>
</g>
<g >
<title>database::shard_of (4 samples, 0.01%)</title><rect x="1139.4" y="181" width="0.1" height="15.0" fill="rgb(242,194,9)" rx="2" ry="2" />
<text  x="1142.45" y="191.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (125 samples, 0.27%)</title><rect x="368.4" y="165" width="3.1" height="15.0" fill="rgb(224,69,26)" rx="2" ry="2" />
<text  x="371.40" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="526.6" y="325" width="0.2" height="15.0" fill="rgb(248,25,2)" rx="2" ry="2" />
<text  x="529.59" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (5 samples, 0.01%)</title><rect x="131.1" y="277" width="0.1" height="15.0" fill="rgb(229,204,30)" rx="2" ry="2" />
<text  x="134.12" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_M_reserve_map_at_back (4 samples, 0.01%)</title><rect x="16.5" y="245" width="0.1" height="15.0" fill="rgb(246,117,46)" rx="2" ry="2" />
<text  x="19.48" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="163.5" y="213" width="0.1" height="15.0" fill="rgb(249,145,22)" rx="2" ry="2" />
<text  x="166.50" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (101 samples, 0.21%)</title><rect x="989.6" y="325" width="2.5" height="15.0" fill="rgb(208,12,51)" rx="2" ry="2" />
<text  x="992.59" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (473 samples, 1.01%)</title><rect x="683.1" y="501" width="11.9" height="15.0" fill="rgb(217,215,36)" rx="2" ry="2" />
<text  x="686.12" y="511.5" ></text>
</g>
<g >
<title>std::set&lt;unsigned int, std::less&lt;unsigned int&gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;unsigned int&gt; &gt;::find (4 samples, 0.01%)</title><rect x="18.0" y="309" width="0.1" height="15.0" fill="rgb(229,167,14)" rx="2" ry="2" />
<text  x="21.01" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="863.4" y="373" width="0.2" height="15.0" fill="rgb(245,66,22)" rx="2" ry="2" />
<text  x="866.38" y="383.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="500.9" y="293" width="0.9" height="15.0" fill="rgb(224,148,3)" rx="2" ry="2" />
<text  x="503.89" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (70 samples, 0.15%)</title><rect x="1168.1" y="485" width="1.8" height="15.0" fill="rgb(213,151,9)" rx="2" ry="2" />
<text  x="1171.11" y="495.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="342.8" y="181" width="0.2" height="15.0" fill="rgb(237,72,30)" rx="2" ry="2" />
<text  x="345.82" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (22 samples, 0.05%)</title><rect x="575.6" y="261" width="0.5" height="15.0" fill="rgb(235,220,54)" rx="2" ry="2" />
<text  x="578.56" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (16 samples, 0.03%)</title><rect x="784.2" y="357" width="0.4" height="15.0" fill="rgb(249,55,20)" rx="2" ry="2" />
<text  x="787.23" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (38 samples, 0.08%)</title><rect x="292.6" y="357" width="0.9" height="15.0" fill="rgb(254,94,5)" rx="2" ry="2" />
<text  x="295.59" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (11 samples, 0.02%)</title><rect x="1148.2" y="485" width="0.2" height="15.0" fill="rgb(249,160,18)" rx="2" ry="2" />
<text  x="1151.16" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="175.5" y="133" width="0.2" height="15.0" fill="rgb(228,148,42)" rx="2" ry="2" />
<text  x="178.49" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (4 samples, 0.01%)</title><rect x="992.2" y="341" width="0.2" height="15.0" fill="rgb(216,173,38)" rx="2" ry="2" />
<text  x="995.25" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (4 samples, 0.01%)</title><rect x="1025.3" y="197" width="0.1" height="15.0" fill="rgb(233,48,36)" rx="2" ry="2" />
<text  x="1028.31" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6 samples, 0.01%)</title><rect x="115.3" y="373" width="0.2" height="15.0" fill="rgb(232,65,15)" rx="2" ry="2" />
<text  x="118.30" y="383.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (31 samples, 0.07%)</title><rect x="38.8" y="405" width="0.8" height="15.0" fill="rgb(206,185,23)" rx="2" ry="2" />
<text  x="41.79" y="415.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%)</title><rect x="984.8" y="341" width="0.2" height="15.0" fill="rgb(243,47,50)" rx="2" ry="2" />
<text  x="987.79" y="351.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="780.8" y="373" width="0.5" height="15.0" fill="rgb(238,5,11)" rx="2" ry="2" />
<text  x="783.82" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="676.9" y="485" width="0.3" height="15.0" fill="rgb(245,93,30)" rx="2" ry="2" />
<text  x="679.87" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (134 samples, 0.29%)</title><rect x="419.8" y="309" width="3.4" height="15.0" fill="rgb(242,195,50)" rx="2" ry="2" />
<text  x="422.83" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (4 samples, 0.01%)</title><rect x="897.4" y="405" width="0.1" height="15.0" fill="rgb(241,53,4)" rx="2" ry="2" />
<text  x="900.42" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (19 samples, 0.04%)</title><rect x="543.8" y="389" width="0.5" height="15.0" fill="rgb(228,138,21)" rx="2" ry="2" />
<text  x="546.84" y="399.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (51 samples, 0.11%)</title><rect x="605.2" y="389" width="1.3" height="15.0" fill="rgb(253,210,30)" rx="2" ry="2" />
<text  x="608.21" y="399.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="860.1" y="421" width="1.4" height="15.0" fill="rgb(227,53,25)" rx="2" ry="2" />
<text  x="863.14" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="467.1" y="309" width="0.6" height="15.0" fill="rgb(205,71,24)" rx="2" ry="2" />
<text  x="470.12" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.01%)</title><rect x="753.6" y="373" width="0.1" height="15.0" fill="rgb(227,0,48)" rx="2" ry="2" />
<text  x="756.56" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (4 samples, 0.01%)</title><rect x="267.6" y="293" width="0.1" height="15.0" fill="rgb(228,91,22)" rx="2" ry="2" />
<text  x="270.57" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (16 samples, 0.03%)</title><rect x="549.1" y="341" width="0.4" height="15.0" fill="rgb(221,203,49)" rx="2" ry="2" />
<text  x="552.13" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="974.7" y="373" width="0.3" height="15.0" fill="rgb(206,169,38)" rx="2" ry="2" />
<text  x="977.73" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="1159.6" y="405" width="0.6" height="15.0" fill="rgb(246,112,14)" rx="2" ry="2" />
<text  x="1162.55" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (496 samples, 1.06%)</title><rect x="187.7" y="101" width="12.4" height="15.0" fill="rgb(222,136,50)" rx="2" ry="2" />
<text  x="190.69" y="111.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (18 samples, 0.04%)</title><rect x="234.5" y="133" width="0.5" height="15.0" fill="rgb(244,11,0)" rx="2" ry="2" />
<text  x="237.53" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="599.6" y="389" width="0.1" height="15.0" fill="rgb(227,157,41)" rx="2" ry="2" />
<text  x="602.59" y="399.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (13 samples, 0.03%)</title><rect x="22.8" y="581" width="0.3" height="15.0" fill="rgb(224,148,31)" rx="2" ry="2" />
<text  x="25.80" y="591.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (43 samples, 0.09%)</title><rect x="1141.9" y="501" width="1.1" height="15.0" fill="rgb(215,165,40)" rx="2" ry="2" />
<text  x="1144.93" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (27 samples, 0.06%)</title><rect x="656.3" y="437" width="0.7" height="15.0" fill="rgb(230,82,50)" rx="2" ry="2" />
<text  x="659.32" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (14 samples, 0.03%)</title><rect x="966.9" y="389" width="0.4" height="15.0" fill="rgb(210,24,52)" rx="2" ry="2" />
<text  x="969.92" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (8 samples, 0.02%)</title><rect x="83.4" y="453" width="0.2" height="15.0" fill="rgb(218,7,29)" rx="2" ry="2" />
<text  x="86.40" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (6 samples, 0.01%)</title><rect x="808.5" y="197" width="0.2" height="15.0" fill="rgb(246,87,25)" rx="2" ry="2" />
<text  x="811.51" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (82 samples, 0.17%)</title><rect x="627.2" y="437" width="2.1" height="15.0" fill="rgb(222,127,0)" rx="2" ry="2" />
<text  x="630.20" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="852.9" y="421" width="0.1" height="15.0" fill="rgb(213,176,42)" rx="2" ry="2" />
<text  x="855.89" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="520.8" y="309" width="0.3" height="15.0" fill="rgb(250,194,27)" rx="2" ry="2" />
<text  x="523.84" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (20 samples, 0.04%)</title><rect x="565.8" y="293" width="0.5" height="15.0" fill="rgb(208,205,0)" rx="2" ry="2" />
<text  x="568.77" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (86 samples, 0.18%)</title><rect x="389.4" y="149" width="2.2" height="15.0" fill="rgb(210,154,24)" rx="2" ry="2" />
<text  x="392.41" y="159.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (11 samples, 0.02%)</title><rect x="899.9" y="389" width="0.3" height="15.0" fill="rgb(249,178,8)" rx="2" ry="2" />
<text  x="902.90" y="399.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (5 samples, 0.01%)</title><rect x="254.3" y="229" width="0.1" height="15.0" fill="rgb(235,72,11)" rx="2" ry="2" />
<text  x="257.31" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (4 samples, 0.01%)</title><rect x="305.9" y="277" width="0.1" height="15.0" fill="rgb(210,93,48)" rx="2" ry="2" />
<text  x="308.87" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (114 samples, 0.24%)</title><rect x="740.2" y="325" width="2.9" height="15.0" fill="rgb(230,159,9)" rx="2" ry="2" />
<text  x="743.20" y="335.5" ></text>
</g>
<g >
<title>database::query (4 samples, 0.01%)</title><rect x="1010.2" y="277" width="0.1" height="15.0" fill="rgb(215,144,7)" rx="2" ry="2" />
<text  x="1013.20" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (19 samples, 0.04%)</title><rect x="20.2" y="357" width="0.5" height="15.0" fill="rgb(208,20,52)" rx="2" ry="2" />
<text  x="23.24" y="367.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="610.7" y="421" width="0.2" height="15.0" fill="rgb(239,165,0)" rx="2" ry="2" />
<text  x="613.73" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (20 samples, 0.04%)</title><rect x="715.7" y="421" width="0.5" height="15.0" fill="rgb(219,105,53)" rx="2" ry="2" />
<text  x="718.73" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (100 samples, 0.21%)</title><rect x="488.0" y="197" width="2.5" height="15.0" fill="rgb(238,194,37)" rx="2" ry="2" />
<text  x="491.03" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="1143.9" y="501" width="0.3" height="15.0" fill="rgb(227,29,16)" rx="2" ry="2" />
<text  x="1146.89" y="511.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="525.7" y="325" width="0.1" height="15.0" fill="rgb(223,8,38)" rx="2" ry="2" />
<text  x="528.71" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (4 samples, 0.01%)</title><rect x="701.4" y="453" width="0.1" height="15.0" fill="rgb(240,99,44)" rx="2" ry="2" />
<text  x="704.37" y="463.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (282 samples, 0.60%)</title><rect x="484.6" y="245" width="7.0" height="15.0" fill="rgb(248,30,25)" rx="2" ry="2" />
<text  x="487.57" y="255.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (26 samples, 0.06%)</title><rect x="325.1" y="181" width="0.7" height="15.0" fill="rgb(235,97,9)" rx="2" ry="2" />
<text  x="328.13" y="191.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (561 samples, 1.19%)</title><rect x="65.3" y="453" width="14.1" height="15.0" fill="rgb(247,16,11)" rx="2" ry="2" />
<text  x="68.27" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="556.4" y="421" width="0.2" height="15.0" fill="rgb(218,228,20)" rx="2" ry="2" />
<text  x="559.39" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (59 samples, 0.13%)</title><rect x="756.6" y="309" width="1.5" height="15.0" fill="rgb(205,222,12)" rx="2" ry="2" />
<text  x="759.65" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (4 samples, 0.01%)</title><rect x="601.1" y="421" width="0.1" height="15.0" fill="rgb(233,125,54)" rx="2" ry="2" />
<text  x="604.12" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (50 samples, 0.11%)</title><rect x="1013.9" y="245" width="1.3" height="15.0" fill="rgb(207,200,7)" rx="2" ry="2" />
<text  x="1016.91" y="255.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,161 samples, 2.47%)</title><rect x="797.4" y="325" width="29.1" height="15.0" fill="rgb(206,145,13)" rx="2" ry="2" />
<text  x="800.39" y="335.5" >st..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (136 samples, 0.29%)</title><rect x="203.1" y="117" width="3.4" height="15.0" fill="rgb(225,139,24)" rx="2" ry="2" />
<text  x="206.08" y="127.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="841.7" y="277" width="0.1" height="15.0" fill="rgb(211,88,49)" rx="2" ry="2" />
<text  x="844.69" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (17 samples, 0.04%)</title><rect x="54.5" y="469" width="0.4" height="15.0" fill="rgb(216,1,26)" rx="2" ry="2" />
<text  x="57.45" y="479.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (14 samples, 0.03%)</title><rect x="16.4" y="309" width="0.3" height="15.0" fill="rgb(245,76,15)" rx="2" ry="2" />
<text  x="19.35" y="319.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="597.3" y="389" width="0.6" height="15.0" fill="rgb(224,65,48)" rx="2" ry="2" />
<text  x="600.30" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::pair&lt;auth::role_or_anonymous, auth::resource&gt;&amp;&amp;, auth::permissions_cache::get (4 samples, 0.01%)</title><rect x="824.1" y="277" width="0.1" height="15.0" fill="rgb(231,111,43)" rx="2" ry="2" />
<text  x="827.12" y="287.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (32 samples, 0.07%)</title><rect x="1138.5" y="469" width="0.8" height="15.0" fill="rgb(240,229,44)" rx="2" ry="2" />
<text  x="1141.49" y="479.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.02%)</title><rect x="616.3" y="421" width="0.2" height="15.0" fill="rgb(219,121,11)" rx="2" ry="2" />
<text  x="619.25" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (4 samples, 0.01%)</title><rect x="422.0" y="245" width="0.1" height="15.0" fill="rgb(241,100,28)" rx="2" ry="2" />
<text  x="424.99" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (4 samples, 0.01%)</title><rect x="598.2" y="373" width="0.1" height="15.0" fill="rgb(230,196,13)" rx="2" ry="2" />
<text  x="601.21" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (11 samples, 0.02%)</title><rect x="137.8" y="245" width="0.3" height="15.0" fill="rgb(218,101,45)" rx="2" ry="2" />
<text  x="140.82" y="255.5" ></text>
</g>
<g >
<title>row::~row (5 samples, 0.01%)</title><rect x="259.2" y="261" width="0.1" height="15.0" fill="rgb(230,143,34)" rx="2" ry="2" />
<text  x="262.16" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (8 samples, 0.02%)</title><rect x="151.2" y="245" width="0.2" height="15.0" fill="rgb(232,60,0)" rx="2" ry="2" />
<text  x="154.25" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="918.5" y="357" width="0.2" height="15.0" fill="rgb(228,182,41)" rx="2" ry="2" />
<text  x="921.53" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (4 samples, 0.01%)</title><rect x="853.9" y="437" width="0.1" height="15.0" fill="rgb(226,48,40)" rx="2" ry="2" />
<text  x="856.91" y="447.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (19 samples, 0.04%)</title><rect x="908.6" y="293" width="0.5" height="15.0" fill="rgb(211,157,34)" rx="2" ry="2" />
<text  x="911.64" y="303.5" ></text>
</g>
<g >
<title>operator delete (4 samples, 0.01%)</title><rect x="881.1" y="485" width="0.1" height="15.0" fill="rgb(225,144,54)" rx="2" ry="2" />
<text  x="884.07" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1046.0" y="277" width="0.2" height="15.0" fill="rgb(238,222,7)" rx="2" ry="2" />
<text  x="1049.04" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="961.6" y="373" width="0.2" height="15.0" fill="rgb(210,93,18)" rx="2" ry="2" />
<text  x="964.63" y="383.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="1159.0" y="437" width="1.2" height="15.0" fill="rgb(212,38,27)" rx="2" ry="2" />
<text  x="1161.97" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (24 samples, 0.05%)</title><rect x="778.0" y="405" width="0.6" height="15.0" fill="rgb(210,27,2)" rx="2" ry="2" />
<text  x="780.96" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,480 samples, 9.53%)</title><rect x="147.0" y="277" width="112.5" height="15.0" fill="rgb(207,164,4)" rx="2" ry="2" />
<text  x="150.03" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (30 samples, 0.06%)</title><rect x="294.8" y="389" width="0.7" height="15.0" fill="rgb(249,158,14)" rx="2" ry="2" />
<text  x="297.75" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (941 samples, 2.00%)</title><rect x="800.8" y="293" width="23.6" height="15.0" fill="rgb(248,59,26)" rx="2" ry="2" />
<text  x="803.80" y="303.5" >s..</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (4 samples, 0.01%)</title><rect x="812.4" y="117" width="0.1" height="15.0" fill="rgb(234,225,35)" rx="2" ry="2" />
<text  x="815.37" y="127.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (10 samples, 0.02%)</title><rect x="224.2" y="133" width="0.3" height="15.0" fill="rgb(237,214,6)" rx="2" ry="2" />
<text  x="227.24" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (29 samples, 0.06%)</title><rect x="681.3" y="453" width="0.8" height="15.0" fill="rgb(233,54,32)" rx="2" ry="2" />
<text  x="684.34" y="463.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="1122.3" y="421" width="1.0" height="15.0" fill="rgb(209,187,37)" rx="2" ry="2" />
<text  x="1125.28" y="431.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="1146.3" y="485" width="0.4" height="15.0" fill="rgb(231,59,49)" rx="2" ry="2" />
<text  x="1149.27" y="495.5" ></text>
</g>
</g>
</svg>
