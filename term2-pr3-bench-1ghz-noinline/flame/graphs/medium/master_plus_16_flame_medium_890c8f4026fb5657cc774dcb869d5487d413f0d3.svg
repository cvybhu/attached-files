<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="489.0" y="213" width="0.4" height="15.0" fill="rgb(228,148,54)" rx="2" ry="2" />
<text  x="491.95" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (87 samples, 0.18%)</title><rect x="668.8" y="453" width="2.2" height="15.0" fill="rgb(243,161,53)" rx="2" ry="2" />
<text  x="671.82" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (214 samples, 0.45%)</title><rect x="899.3" y="309" width="5.3" height="15.0" fill="rgb(217,193,0)" rx="2" ry="2" />
<text  x="902.29" y="319.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="47.0" y="485" width="0.4" height="15.0" fill="rgb(238,227,0)" rx="2" ry="2" />
<text  x="50.00" y="495.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="920.7" y="373" width="0.3" height="15.0" fill="rgb(231,174,21)" rx="2" ry="2" />
<text  x="923.74" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (28 samples, 0.06%)</title><rect x="873.5" y="437" width="0.7" height="15.0" fill="rgb(206,229,35)" rx="2" ry="2" />
<text  x="876.50" y="447.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (15 samples, 0.03%)</title><rect x="1003.9" y="293" width="0.4" height="15.0" fill="rgb(252,147,23)" rx="2" ry="2" />
<text  x="1006.91" y="303.5" ></text>
</g>
<g >
<title>cql3::update_parameters::make_cell (6 samples, 0.01%)</title><rect x="873.8" y="293" width="0.2" height="15.0" fill="rgb(219,203,53)" rx="2" ry="2" />
<text  x="876.82" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (5 samples, 0.01%)</title><rect x="476.2" y="309" width="0.2" height="15.0" fill="rgb(222,163,1)" rx="2" ry="2" />
<text  x="479.23" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (21 samples, 0.04%)</title><rect x="667.0" y="485" width="0.6" height="15.0" fill="rgb(230,151,48)" rx="2" ry="2" />
<text  x="670.03" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (35 samples, 0.07%)</title><rect x="840.5" y="421" width="0.9" height="15.0" fill="rgb(245,229,4)" rx="2" ry="2" />
<text  x="843.54" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="792.9" y="229" width="0.5" height="15.0" fill="rgb(228,80,43)" rx="2" ry="2" />
<text  x="795.86" y="239.5" ></text>
</g>
<g >
<title>database::find_schema (241 samples, 0.51%)</title><rect x="829.2" y="373" width="6.0" height="15.0" fill="rgb(249,195,21)" rx="2" ry="2" />
<text  x="832.21" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (14 samples, 0.03%)</title><rect x="821.1" y="293" width="0.3" height="15.0" fill="rgb(237,215,53)" rx="2" ry="2" />
<text  x="824.05" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="456.5" y="261" width="0.7" height="15.0" fill="rgb(228,18,40)" rx="2" ry="2" />
<text  x="459.47" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (39 samples, 0.08%)</title><rect x="731.9" y="389" width="1.0" height="15.0" fill="rgb(230,16,21)" rx="2" ry="2" />
<text  x="734.90" y="399.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (12 samples, 0.03%)</title><rect x="655.4" y="405" width="0.3" height="15.0" fill="rgb(217,50,37)" rx="2" ry="2" />
<text  x="658.37" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (28 samples, 0.06%)</title><rect x="967.6" y="341" width="0.7" height="15.0" fill="rgb(243,162,13)" rx="2" ry="2" />
<text  x="970.56" y="351.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (8 samples, 0.02%)</title><rect x="702.7" y="437" width="0.2" height="15.0" fill="rgb(206,217,10)" rx="2" ry="2" />
<text  x="705.69" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (12 samples, 0.03%)</title><rect x="749.6" y="357" width="0.3" height="15.0" fill="rgb(234,78,5)" rx="2" ry="2" />
<text  x="752.56" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (38 samples, 0.08%)</title><rect x="814.8" y="245" width="1.0" height="15.0" fill="rgb(222,110,12)" rx="2" ry="2" />
<text  x="817.83" y="255.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (492 samples, 1.03%)</title><rect x="308.6" y="213" width="12.2" height="15.0" fill="rgb(222,88,5)" rx="2" ry="2" />
<text  x="311.62" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (22 samples, 0.05%)</title><rect x="304.9" y="213" width="0.5" height="15.0" fill="rgb(254,18,54)" rx="2" ry="2" />
<text  x="307.90" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (73 samples, 0.15%)</title><rect x="1100.5" y="357" width="1.8" height="15.0" fill="rgb(233,10,27)" rx="2" ry="2" />
<text  x="1103.48" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt;::consume (5 samples, 0.01%)</title><rect x="25.1" y="469" width="0.1" height="15.0" fill="rgb(246,215,27)" rx="2" ry="2" />
<text  x="28.08" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (35 samples, 0.07%)</title><rect x="23.5" y="453" width="0.8" height="15.0" fill="rgb(232,9,44)" rx="2" ry="2" />
<text  x="26.47" y="463.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,434 samples, 97.58%)</title><rect x="25.3" y="581" width="1151.5" height="15.0" fill="rgb(240,37,39)" rx="2" ry="2" />
<text  x="28.33" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (42 samples, 0.09%)</title><rect x="797.5" y="165" width="1.1" height="15.0" fill="rgb(241,91,1)" rx="2" ry="2" />
<text  x="800.54" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (51 samples, 0.11%)</title><rect x="992.6" y="261" width="1.3" height="15.0" fill="rgb(238,50,52)" rx="2" ry="2" />
<text  x="995.63" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (31 samples, 0.07%)</title><rect x="721.1" y="501" width="0.7" height="15.0" fill="rgb(219,229,42)" rx="2" ry="2" />
<text  x="724.07" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (451 samples, 0.95%)</title><rect x="1027.1" y="229" width="11.2" height="15.0" fill="rgb(213,211,41)" rx="2" ry="2" />
<text  x="1030.15" y="239.5" ></text>
</g>
<g >
<title>local_schema_registry (9 samples, 0.02%)</title><rect x="965.8" y="373" width="0.2" height="15.0" fill="rgb(210,111,52)" rx="2" ry="2" />
<text  x="968.80" y="383.5" ></text>
</g>
<g >
<title>reader_permit::signal (9 samples, 0.02%)</title><rect x="276.3" y="309" width="0.2" height="15.0" fill="rgb(221,83,27)" rx="2" ry="2" />
<text  x="279.26" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="672.0" y="485" width="0.2" height="15.0" fill="rgb(252,74,45)" rx="2" ry="2" />
<text  x="675.04" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="1134.7" y="405" width="0.3" height="15.0" fill="rgb(232,146,12)" rx="2" ry="2" />
<text  x="1137.75" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="815.2" y="213" width="0.2" height="15.0" fill="rgb(224,222,17)" rx="2" ry="2" />
<text  x="818.20" y="223.5" ></text>
</g>
<g >
<title>schema_registry::get (175 samples, 0.37%)</title><rect x="976.6" y="357" width="4.3" height="15.0" fill="rgb(243,182,49)" rx="2" ry="2" />
<text  x="979.59" y="367.5" ></text>
</g>
<g >
<title>freeze (13 samples, 0.03%)</title><rect x="1138.9" y="197" width="0.4" height="15.0" fill="rgb(206,196,19)" rx="2" ry="2" />
<text  x="1141.94" y="207.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%)</title><rect x="20.4" y="293" width="0.1" height="15.0" fill="rgb(240,224,15)" rx="2" ry="2" />
<text  x="23.39" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (7 samples, 0.01%)</title><rect x="463.6" y="325" width="0.2" height="15.0" fill="rgb(230,71,7)" rx="2" ry="2" />
<text  x="466.61" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (9 samples, 0.02%)</title><rect x="1134.1" y="421" width="0.2" height="15.0" fill="rgb(229,152,1)" rx="2" ry="2" />
<text  x="1137.08" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="735.2" y="293" width="0.2" height="15.0" fill="rgb(219,46,50)" rx="2" ry="2" />
<text  x="738.15" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="904.8" y="309" width="0.2" height="15.0" fill="rgb(235,209,43)" rx="2" ry="2" />
<text  x="907.84" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%)</title><rect x="1046.4" y="261" width="0.3" height="15.0" fill="rgb(214,134,50)" rx="2" ry="2" />
<text  x="1049.44" y="271.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (38 samples, 0.08%)</title><rect x="532.1" y="261" width="1.0" height="15.0" fill="rgb(211,175,1)" rx="2" ry="2" />
<text  x="535.13" y="271.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (5 samples, 0.01%)</title><rect x="369.9" y="197" width="0.1" height="15.0" fill="rgb(228,181,19)" rx="2" ry="2" />
<text  x="372.92" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="1140.2" y="485" width="0.2" height="15.0" fill="rgb(231,116,19)" rx="2" ry="2" />
<text  x="1143.21" y="495.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.13%)</title><rect x="210.0" y="101" width="1.6" height="15.0" fill="rgb(244,45,21)" rx="2" ry="2" />
<text  x="213.00" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (13 samples, 0.03%)</title><rect x="664.4" y="469" width="0.3" height="15.0" fill="rgb(224,120,31)" rx="2" ry="2" />
<text  x="667.43" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::clear (8 samples, 0.02%)</title><rect x="743.7" y="389" width="0.2" height="15.0" fill="rgb(240,150,14)" rx="2" ry="2" />
<text  x="746.71" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (13 samples, 0.03%)</title><rect x="218.9" y="149" width="0.3" height="15.0" fill="rgb(249,17,23)" rx="2" ry="2" />
<text  x="221.93" y="159.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (72 samples, 0.15%)</title><rect x="897.5" y="309" width="1.8" height="15.0" fill="rgb(220,63,0)" rx="2" ry="2" />
<text  x="900.50" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (6 samples, 0.01%)</title><rect x="554.6" y="405" width="0.1" height="15.0" fill="rgb(210,160,31)" rx="2" ry="2" />
<text  x="557.59" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (13 samples, 0.03%)</title><rect x="543.5" y="389" width="0.4" height="15.0" fill="rgb(249,126,48)" rx="2" ry="2" />
<text  x="546.53" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (95 samples, 0.20%)</title><rect x="535.5" y="277" width="2.3" height="15.0" fill="rgb(221,73,0)" rx="2" ry="2" />
<text  x="538.45" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,258 samples, 4.75%)</title><rect x="166.6" y="229" width="55.9" height="15.0" fill="rgb(230,48,9)" rx="2" ry="2" />
<text  x="169.55" y="239.5" >parti..</text>
</g>
<g >
<title>compact_mutation_state&lt; (3,695 samples, 7.77%)</title><rect x="306.1" y="229" width="91.6" height="15.0" fill="rgb(236,141,41)" rx="2" ry="2" />
<text  x="309.07" y="239.5" >compact_mu..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.03%)</title><rect x="24.9" y="565" width="0.3" height="15.0" fill="rgb(223,196,54)" rx="2" ry="2" />
<text  x="27.85" y="575.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="683.5" y="485" width="0.4" height="15.0" fill="rgb(218,4,29)" rx="2" ry="2" />
<text  x="686.55" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="907.1" y="357" width="0.2" height="15.0" fill="rgb(223,170,30)" rx="2" ry="2" />
<text  x="910.08" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (13 samples, 0.03%)</title><rect x="265.9" y="325" width="0.3" height="15.0" fill="rgb(225,110,16)" rx="2" ry="2" />
<text  x="268.92" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (666 samples, 1.40%)</title><rect x="795.3" y="245" width="16.5" height="15.0" fill="rgb(228,95,7)" rx="2" ry="2" />
<text  x="798.29" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (20 samples, 0.04%)</title><rect x="552.8" y="309" width="0.5" height="15.0" fill="rgb(213,228,3)" rx="2" ry="2" />
<text  x="555.78" y="319.5" ></text>
</g>
<g >
<title>schema::position (8 samples, 0.02%)</title><rect x="942.1" y="405" width="0.2" height="15.0" fill="rgb(249,125,50)" rx="2" ry="2" />
<text  x="945.12" y="415.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (137 samples, 0.29%)</title><rect x="550.0" y="373" width="3.4" height="15.0" fill="rgb(222,229,7)" rx="2" ry="2" />
<text  x="552.96" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (8 samples, 0.02%)</title><rect x="171.6" y="149" width="0.2" height="15.0" fill="rgb(242,68,22)" rx="2" ry="2" />
<text  x="174.64" y="159.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (5,952 samples, 12.51%)</title><rect x="723.1" y="501" width="147.6" height="15.0" fill="rgb(214,112,33)" rx="2" ry="2" />
<text  x="726.12" y="511.5" >seastar::internal:..</text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="24.9" y="533" width="0.3" height="15.0" fill="rgb(205,225,46)" rx="2" ry="2" />
<text  x="27.85" y="543.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (25 samples, 0.05%)</title><rect x="488.2" y="197" width="0.7" height="15.0" fill="rgb(254,123,7)" rx="2" ry="2" />
<text  x="491.23" y="207.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (47 samples, 0.10%)</title><rect x="933.9" y="341" width="1.2" height="15.0" fill="rgb(234,152,42)" rx="2" ry="2" />
<text  x="936.91" y="351.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (188 samples, 0.40%)</title><rect x="990.8" y="309" width="4.7" height="15.0" fill="rgb(239,87,14)" rx="2" ry="2" />
<text  x="993.82" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (5 samples, 0.01%)</title><rect x="137.6" y="245" width="0.2" height="15.0" fill="rgb(227,197,39)" rx="2" ry="2" />
<text  x="140.64" y="255.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (179 samples, 0.38%)</title><rect x="858.7" y="437" width="4.4" height="15.0" fill="rgb(232,10,9)" rx="2" ry="2" />
<text  x="861.70" y="447.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="401.1" y="213" width="0.2" height="15.0" fill="rgb(223,202,30)" rx="2" ry="2" />
<text  x="404.14" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (75 samples, 0.16%)</title><rect x="759.4" y="405" width="1.8" height="15.0" fill="rgb(228,119,47)" rx="2" ry="2" />
<text  x="762.38" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (130 samples, 0.27%)</title><rect x="596.5" y="421" width="3.2" height="15.0" fill="rgb(235,0,54)" rx="2" ry="2" />
<text  x="599.48" y="431.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (8 samples, 0.02%)</title><rect x="617.5" y="437" width="0.2" height="15.0" fill="rgb(236,212,47)" rx="2" ry="2" />
<text  x="620.51" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (10 samples, 0.02%)</title><rect x="79.1" y="453" width="0.2" height="15.0" fill="rgb(230,51,18)" rx="2" ry="2" />
<text  x="82.06" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (53 samples, 0.11%)</title><rect x="627.1" y="437" width="1.3" height="15.0" fill="rgb(233,222,6)" rx="2" ry="2" />
<text  x="630.13" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (18 samples, 0.04%)</title><rect x="82.3" y="453" width="0.5" height="15.0" fill="rgb(210,128,30)" rx="2" ry="2" />
<text  x="85.34" y="463.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="999.0" y="261" width="1.9" height="15.0" fill="rgb(244,116,47)" rx="2" ry="2" />
<text  x="1002.03" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (11 samples, 0.02%)</title><rect x="553.4" y="389" width="0.2" height="15.0" fill="rgb(205,139,24)" rx="2" ry="2" />
<text  x="556.35" y="399.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (11 samples, 0.02%)</title><rect x="732.9" y="405" width="0.2" height="15.0" fill="rgb(250,211,30)" rx="2" ry="2" />
<text  x="735.87" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="745.0" y="389" width="0.2" height="15.0" fill="rgb(233,32,52)" rx="2" ry="2" />
<text  x="748.02" y="399.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (74 samples, 0.16%)</title><rect x="928.9" y="389" width="1.9" height="15.0" fill="rgb(211,182,37)" rx="2" ry="2" />
<text  x="931.95" y="399.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (18 samples, 0.04%)</title><rect x="149.8" y="245" width="0.4" height="15.0" fill="rgb(217,183,16)" rx="2" ry="2" />
<text  x="152.79" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (145 samples, 0.30%)</title><rect x="686.5" y="485" width="3.6" height="15.0" fill="rgb(243,169,53)" rx="2" ry="2" />
<text  x="689.50" y="495.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="597.7" y="389" width="0.7" height="15.0" fill="rgb(217,90,44)" rx="2" ry="2" />
<text  x="600.69" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="543.3" y="405" width="0.6" height="15.0" fill="rgb(226,203,32)" rx="2" ry="2" />
<text  x="546.34" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="628.4" y="437" width="0.4" height="15.0" fill="rgb(235,189,48)" rx="2" ry="2" />
<text  x="631.44" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (8 samples, 0.02%)</title><rect x="872.8" y="389" width="0.2" height="15.0" fill="rgb(213,118,6)" rx="2" ry="2" />
<text  x="875.78" y="399.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (36 samples, 0.08%)</title><rect x="834.1" y="309" width="0.9" height="15.0" fill="rgb(248,61,52)" rx="2" ry="2" />
<text  x="837.10" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (28 samples, 0.06%)</title><rect x="213.7" y="149" width="0.7" height="15.0" fill="rgb(254,78,24)" rx="2" ry="2" />
<text  x="216.72" y="159.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (54 samples, 0.11%)</title><rect x="303.5" y="213" width="1.4" height="15.0" fill="rgb(245,182,3)" rx="2" ry="2" />
<text  x="306.54" y="223.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (13 samples, 0.03%)</title><rect x="22.5" y="341" width="0.3" height="15.0" fill="rgb(242,215,3)" rx="2" ry="2" />
<text  x="25.52" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="1157.8" y="405" width="0.1" height="15.0" fill="rgb(225,92,36)" rx="2" ry="2" />
<text  x="1160.76" y="415.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (45 samples, 0.09%)</title><rect x="1163.2" y="453" width="1.1" height="15.0" fill="rgb(228,224,31)" rx="2" ry="2" />
<text  x="1166.22" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="403.5" y="229" width="0.1" height="15.0" fill="rgb(252,26,11)" rx="2" ry="2" />
<text  x="406.52" y="239.5" ></text>
</g>
<g >
<title>operator new (77 samples, 0.16%)</title><rect x="1043.2" y="261" width="2.0" height="15.0" fill="rgb(224,214,27)" rx="2" ry="2" />
<text  x="1046.24" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (193 samples, 0.41%)</title><rect x="734.2" y="373" width="4.8" height="15.0" fill="rgb(224,121,20)" rx="2" ry="2" />
<text  x="737.18" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (20 samples, 0.04%)</title><rect x="681.7" y="485" width="0.5" height="15.0" fill="rgb(235,80,17)" rx="2" ry="2" />
<text  x="684.66" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="593.5" y="421" width="0.1" height="15.0" fill="rgb(239,126,19)" rx="2" ry="2" />
<text  x="596.45" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (20 samples, 0.04%)</title><rect x="962.7" y="389" width="0.5" height="15.0" fill="rgb(241,41,24)" rx="2" ry="2" />
<text  x="965.72" y="399.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="156.9" y="197" width="0.7" height="15.0" fill="rgb(241,224,49)" rx="2" ry="2" />
<text  x="159.93" y="207.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (28 samples, 0.06%)</title><rect x="884.1" y="437" width="0.7" height="15.0" fill="rgb(254,61,20)" rx="2" ry="2" />
<text  x="887.06" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (69 samples, 0.15%)</title><rect x="634.0" y="485" width="1.7" height="15.0" fill="rgb(220,45,47)" rx="2" ry="2" />
<text  x="637.00" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="987.2" y="277" width="0.2" height="15.0" fill="rgb(216,131,27)" rx="2" ry="2" />
<text  x="990.25" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (37 samples, 0.08%)</title><rect x="703.5" y="485" width="0.9" height="15.0" fill="rgb(243,221,54)" rx="2" ry="2" />
<text  x="706.48" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="987.8" y="341" width="0.2" height="15.0" fill="rgb(215,101,49)" rx="2" ry="2" />
<text  x="990.84" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (16 samples, 0.03%)</title><rect x="593.6" y="421" width="0.4" height="15.0" fill="rgb(253,170,31)" rx="2" ry="2" />
<text  x="596.60" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (395 samples, 0.83%)</title><rect x="1027.6" y="213" width="9.8" height="15.0" fill="rgb(212,0,11)" rx="2" ry="2" />
<text  x="1030.57" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (50 samples, 0.11%)</title><rect x="216.0" y="165" width="1.3" height="15.0" fill="rgb(212,8,11)" rx="2" ry="2" />
<text  x="219.02" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="1047.9" y="277" width="0.2" height="15.0" fill="rgb(246,23,12)" rx="2" ry="2" />
<text  x="1050.86" y="287.5" ></text>
</g>
<g >
<title>auth::resource::parent (93 samples, 0.20%)</title><rect x="786.1" y="325" width="2.3" height="15.0" fill="rgb(239,204,37)" rx="2" ry="2" />
<text  x="789.09" y="335.5" ></text>
</g>
<g >
<title>table::as_mutation_source (100 samples, 0.21%)</title><rect x="629.3" y="437" width="2.5" height="15.0" fill="rgb(251,109,8)" rx="2" ry="2" />
<text  x="632.31" y="447.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (22 samples, 0.05%)</title><rect x="1078.0" y="325" width="0.5" height="15.0" fill="rgb(213,54,24)" rx="2" ry="2" />
<text  x="1080.96" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (215 samples, 0.45%)</title><rect x="733.6" y="405" width="5.4" height="15.0" fill="rgb(252,167,1)" rx="2" ry="2" />
<text  x="736.64" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (23 samples, 0.05%)</title><rect x="209.4" y="101" width="0.6" height="15.0" fill="rgb(243,221,5)" rx="2" ry="2" />
<text  x="212.43" y="111.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (25 samples, 0.05%)</title><rect x="574.7" y="277" width="0.6" height="15.0" fill="rgb(236,215,1)" rx="2" ry="2" />
<text  x="577.68" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (5 samples, 0.01%)</title><rect x="714.5" y="405" width="0.2" height="15.0" fill="rgb(206,190,46)" rx="2" ry="2" />
<text  x="717.54" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (6 samples, 0.01%)</title><rect x="26.9" y="517" width="0.2" height="15.0" fill="rgb(254,157,30)" rx="2" ry="2" />
<text  x="29.91" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (130 samples, 0.27%)</title><rect x="1062.5" y="309" width="3.2" height="15.0" fill="rgb(212,81,19)" rx="2" ry="2" />
<text  x="1065.51" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (23 samples, 0.05%)</title><rect x="828.0" y="357" width="0.6" height="15.0" fill="rgb(207,152,18)" rx="2" ry="2" />
<text  x="831.00" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="752.2" y="277" width="0.2" height="15.0" fill="rgb(219,13,44)" rx="2" ry="2" />
<text  x="755.16" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (8 samples, 0.02%)</title><rect x="867.9" y="421" width="0.2" height="15.0" fill="rgb(234,180,45)" rx="2" ry="2" />
<text  x="870.92" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (21 samples, 0.04%)</title><rect x="633.5" y="485" width="0.5" height="15.0" fill="rgb(214,37,16)" rx="2" ry="2" />
<text  x="636.48" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="24.5" y="469" width="0.2" height="15.0" fill="rgb(213,195,15)" rx="2" ry="2" />
<text  x="27.51" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="1151.4" y="485" width="0.2" height="15.0" fill="rgb(227,174,44)" rx="2" ry="2" />
<text  x="1154.44" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (236 samples, 0.50%)</title><rect x="1123.2" y="421" width="5.9" height="15.0" fill="rgb(227,177,22)" rx="2" ry="2" />
<text  x="1126.22" y="431.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (7 samples, 0.01%)</title><rect x="218.8" y="117" width="0.1" height="15.0" fill="rgb(253,178,6)" rx="2" ry="2" />
<text  x="221.75" y="127.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="1106.8" y="389" width="0.3" height="15.0" fill="rgb(223,89,49)" rx="2" ry="2" />
<text  x="1109.75" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (21 samples, 0.04%)</title><rect x="664.2" y="485" width="0.5" height="15.0" fill="rgb(229,156,12)" rx="2" ry="2" />
<text  x="667.23" y="495.5" ></text>
</g>
<g >
<title>query_state::query_state (207 samples, 0.44%)</title><rect x="601.3" y="437" width="5.1" height="15.0" fill="rgb(254,7,1)" rx="2" ry="2" />
<text  x="604.26" y="447.5" ></text>
</g>
<g >
<title>row_cache::make_reader (496 samples, 1.04%)</title><rect x="526.4" y="341" width="12.3" height="15.0" fill="rgb(222,4,31)" rx="2" ry="2" />
<text  x="529.40" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="575.7" y="293" width="0.2" height="15.0" fill="rgb(224,11,1)" rx="2" ry="2" />
<text  x="578.72" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (54 samples, 0.11%)</title><rect x="1157.5" y="437" width="1.3" height="15.0" fill="rgb(236,207,16)" rx="2" ry="2" />
<text  x="1160.49" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="1062.3" y="309" width="0.2" height="15.0" fill="rgb(239,97,40)" rx="2" ry="2" />
<text  x="1065.26" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (10 samples, 0.02%)</title><rect x="1174.6" y="437" width="0.2" height="15.0" fill="rgb(224,33,11)" rx="2" ry="2" />
<text  x="1177.60" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (11 samples, 0.02%)</title><rect x="395.3" y="149" width="0.2" height="15.0" fill="rgb(235,153,20)" rx="2" ry="2" />
<text  x="398.27" y="159.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,392 samples, 9.23%)</title><rect x="145.2" y="277" width="108.9" height="15.0" fill="rgb(205,140,7)" rx="2" ry="2" />
<text  x="148.18" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (5 samples, 0.01%)</title><rect x="332.1" y="165" width="0.2" height="15.0" fill="rgb(214,62,5)" rx="2" ry="2" />
<text  x="335.13" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (33 samples, 0.07%)</title><rect x="219.3" y="149" width="0.8" height="15.0" fill="rgb(242,222,12)" rx="2" ry="2" />
<text  x="222.30" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::function&lt;partition_presence_checker_result  (6 samples, 0.01%)</title><rect x="613.2" y="421" width="0.1" height="15.0" fill="rgb(246,113,37)" rx="2" ry="2" />
<text  x="616.19" y="431.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (43 samples, 0.09%)</title><rect x="693.2" y="501" width="1.1" height="15.0" fill="rgb(240,71,8)" rx="2" ry="2" />
<text  x="696.22" y="511.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,264 samples, 11.06%)</title><rect x="292.2" y="341" width="130.5" height="15.0" fill="rgb(237,95,45)" rx="2" ry="2" />
<text  x="295.18" y="351.5" >seastar::futuriz..</text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="511.4" y="197" width="0.7" height="15.0" fill="rgb(226,168,29)" rx="2" ry="2" />
<text  x="514.45" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (20 samples, 0.04%)</title><rect x="807.3" y="117" width="0.5" height="15.0" fill="rgb(212,52,1)" rx="2" ry="2" />
<text  x="810.34" y="127.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (5 samples, 0.01%)</title><rect x="525.6" y="341" width="0.1" height="15.0" fill="rgb(213,81,37)" rx="2" ry="2" />
<text  x="528.58" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (10 samples, 0.02%)</title><rect x="694.3" y="501" width="0.3" height="15.0" fill="rgb(222,141,18)" rx="2" ry="2" />
<text  x="697.31" y="511.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="526.0" y="341" width="0.2" height="15.0" fill="rgb(226,97,2)" rx="2" ry="2" />
<text  x="528.95" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (86 samples, 0.18%)</title><rect x="1129.9" y="421" width="2.1" height="15.0" fill="rgb(213,204,23)" rx="2" ry="2" />
<text  x="1132.86" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="849.2" y="341" width="0.1" height="15.0" fill="rgb(221,60,25)" rx="2" ry="2" />
<text  x="852.17" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.02%)</title><rect x="24.5" y="485" width="0.2" height="15.0" fill="rgb(237,218,18)" rx="2" ry="2" />
<text  x="27.51" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (39 samples, 0.08%)</title><rect x="73.7" y="389" width="1.0" height="15.0" fill="rgb(231,142,53)" rx="2" ry="2" />
<text  x="76.73" y="399.5" ></text>
</g>
<g >
<title>row::row (1,348 samples, 2.83%)</title><rect x="172.2" y="149" width="33.4" height="15.0" fill="rgb(225,181,43)" rx="2" ry="2" />
<text  x="175.21" y="159.5" >ro..</text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (6 samples, 0.01%)</title><rect x="412.1" y="261" width="0.1" height="15.0" fill="rgb(237,90,50)" rx="2" ry="2" />
<text  x="415.08" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="920.0" y="325" width="0.2" height="15.0" fill="rgb(250,68,47)" rx="2" ry="2" />
<text  x="923.00" y="335.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (970 samples, 2.04%)</title><rect x="791.9" y="277" width="24.1" height="15.0" fill="rgb(248,104,49)" rx="2" ry="2" />
<text  x="794.91" y="287.5" >a..</text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (10 samples, 0.02%)</title><rect x="20.4" y="341" width="0.2" height="15.0" fill="rgb(216,93,40)" rx="2" ry="2" />
<text  x="23.37" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (509 samples, 1.07%)</title><rect x="235.8" y="229" width="12.6" height="15.0" fill="rgb(232,176,2)" rx="2" ry="2" />
<text  x="238.76" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (6 samples, 0.01%)</title><rect x="21.5" y="277" width="0.2" height="15.0" fill="rgb(253,174,37)" rx="2" ry="2" />
<text  x="24.53" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (14 samples, 0.03%)</title><rect x="1054.3" y="293" width="0.3" height="15.0" fill="rgb(207,189,11)" rx="2" ry="2" />
<text  x="1057.25" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (5 samples, 0.01%)</title><rect x="873.6" y="373" width="0.1" height="15.0" fill="rgb(218,99,13)" rx="2" ry="2" />
<text  x="876.62" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (79 samples, 0.17%)</title><rect x="978.5" y="325" width="2.0" height="15.0" fill="rgb(243,223,34)" rx="2" ry="2" />
<text  x="981.55" y="335.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (5 samples, 0.01%)</title><rect x="18.6" y="309" width="0.1" height="15.0" fill="rgb(225,157,6)" rx="2" ry="2" />
<text  x="21.60" y="319.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="792.8" y="245" width="0.6" height="15.0" fill="rgb(232,32,34)" rx="2" ry="2" />
<text  x="795.83" y="255.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="614.3" y="421" width="1.0" height="15.0" fill="rgb(253,25,6)" rx="2" ry="2" />
<text  x="617.33" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="935.3" y="373" width="0.1" height="15.0" fill="rgb(218,64,23)" rx="2" ry="2" />
<text  x="938.30" y="383.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%)</title><rect x="398.2" y="229" width="0.2" height="15.0" fill="rgb(222,104,34)" rx="2" ry="2" />
<text  x="401.24" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="843.7" y="357" width="0.4" height="15.0" fill="rgb(238,96,50)" rx="2" ry="2" />
<text  x="846.74" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,651 samples, 11.88%)</title><rect x="287.6" y="405" width="140.2" height="15.0" fill="rgb(228,110,27)" rx="2" ry="2" />
<text  x="290.62" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (51 samples, 0.11%)</title><rect x="845.8" y="437" width="1.3" height="15.0" fill="rgb(238,69,49)" rx="2" ry="2" />
<text  x="848.85" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="815.8" y="261" width="0.2" height="15.0" fill="rgb(212,106,43)" rx="2" ry="2" />
<text  x="818.84" y="271.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,146 samples, 21.32%)</title><rect x="884.8" y="437" width="251.6" height="15.0" fill="rgb(248,193,15)" rx="2" ry="2" />
<text  x="887.76" y="447.5" >cql3::statements::select_statemen..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (14 samples, 0.03%)</title><rect x="545.9" y="405" width="0.3" height="15.0" fill="rgb(215,214,52)" rx="2" ry="2" />
<text  x="548.87" y="415.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="522.6" y="325" width="0.9" height="15.0" fill="rgb(246,102,4)" rx="2" ry="2" />
<text  x="525.63" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,230 samples, 48.82%)</title><rect x="57.1" y="469" width="576.1" height="15.0" fill="rgb(210,153,43)" rx="2" ry="2" />
<text  x="60.12" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (235 samples, 0.49%)</title><rect x="206.4" y="133" width="5.8" height="15.0" fill="rgb(215,114,28)" rx="2" ry="2" />
<text  x="209.40" y="143.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="1049.6" y="261" width="0.3" height="15.0" fill="rgb(227,229,45)" rx="2" ry="2" />
<text  x="1052.59" y="271.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (54 samples, 0.11%)</title><rect x="330.3" y="181" width="1.4" height="15.0" fill="rgb(254,212,27)" rx="2" ry="2" />
<text  x="333.32" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (11 samples, 0.02%)</title><rect x="756.6" y="405" width="0.3" height="15.0" fill="rgb(235,87,4)" rx="2" ry="2" />
<text  x="759.60" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (20 samples, 0.04%)</title><rect x="724.0" y="485" width="0.5" height="15.0" fill="rgb(205,151,8)" rx="2" ry="2" />
<text  x="727.02" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (5 samples, 0.01%)</title><rect x="23.9" y="341" width="0.1" height="15.0" fill="rgb(248,131,34)" rx="2" ry="2" />
<text  x="26.86" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (23 samples, 0.05%)</title><rect x="1041.4" y="213" width="0.6" height="15.0" fill="rgb(253,30,20)" rx="2" ry="2" />
<text  x="1044.38" y="223.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (26 samples, 0.05%)</title><rect x="1167.5" y="469" width="0.7" height="15.0" fill="rgb(208,172,8)" rx="2" ry="2" />
<text  x="1170.51" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.01%)</title><rect x="399.5" y="245" width="0.1" height="15.0" fill="rgb(236,170,4)" rx="2" ry="2" />
<text  x="402.46" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (18 samples, 0.04%)</title><rect x="705.9" y="469" width="0.5" height="15.0" fill="rgb(220,173,8)" rx="2" ry="2" />
<text  x="708.91" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (18 samples, 0.04%)</title><rect x="713.0" y="405" width="0.4" height="15.0" fill="rgb(218,142,39)" rx="2" ry="2" />
<text  x="715.96" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (10 samples, 0.02%)</title><rect x="1153.9" y="405" width="0.2" height="15.0" fill="rgb(244,210,8)" rx="2" ry="2" />
<text  x="1156.87" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (15 samples, 0.03%)</title><rect x="438.7" y="341" width="0.3" height="15.0" fill="rgb(216,156,1)" rx="2" ry="2" />
<text  x="441.66" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (209 samples, 0.44%)</title><rect x="215.6" y="181" width="5.2" height="15.0" fill="rgb(228,32,24)" rx="2" ry="2" />
<text  x="218.58" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="144.0" y="277" width="0.3" height="15.0" fill="rgb(231,92,10)" rx="2" ry="2" />
<text  x="147.01" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="588.6" y="357" width="0.1" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="591.59" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (10 samples, 0.02%)</title><rect x="776.6" y="325" width="0.3" height="15.0" fill="rgb(237,47,22)" rx="2" ry="2" />
<text  x="779.61" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1138.6" y="357" width="0.9" height="15.0" fill="rgb(238,29,4)" rx="2" ry="2" />
<text  x="1141.62" y="367.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,648 samples, 3.46%)</title><rect x="781.6" y="357" width="40.9" height="15.0" fill="rgb(225,31,17)" rx="2" ry="2" />
<text  x="784.60" y="367.5" >ser..</text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (10 samples, 0.02%)</title><rect x="1037.4" y="213" width="0.2" height="15.0" fill="rgb(241,6,10)" rx="2" ry="2" />
<text  x="1040.39" y="223.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous&gt; (9 samples, 0.02%)</title><rect x="817.0" y="293" width="0.2" height="15.0" fill="rgb(246,184,18)" rx="2" ry="2" />
<text  x="819.96" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="1123.9" y="389" width="1.8" height="15.0" fill="rgb(245,228,28)" rx="2" ry="2" />
<text  x="1126.91" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (529 samples, 1.11%)</title><rect x="564.6" y="325" width="13.1" height="15.0" fill="rgb(211,69,39)" rx="2" ry="2" />
<text  x="567.56" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (28 samples, 0.06%)</title><rect x="452.6" y="293" width="0.7" height="15.0" fill="rgb(222,31,31)" rx="2" ry="2" />
<text  x="455.65" y="303.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (113 samples, 0.24%)</title><rect x="389.8" y="149" width="2.8" height="15.0" fill="rgb(240,204,23)" rx="2" ry="2" />
<text  x="392.79" y="159.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (7 samples, 0.01%)</title><rect x="1171.3" y="437" width="0.1" height="15.0" fill="rgb(238,203,30)" rx="2" ry="2" />
<text  x="1174.25" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (265 samples, 0.56%)</title><rect x="255.2" y="293" width="6.5" height="15.0" fill="rgb(223,73,19)" rx="2" ry="2" />
<text  x="258.16" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (21 samples, 0.04%)</title><rect x="231.0" y="229" width="0.5" height="15.0" fill="rgb(217,177,46)" rx="2" ry="2" />
<text  x="234.03" y="239.5" ></text>
</g>
<g >
<title>cql3::expr::expression::expression&lt;cql3::expr::untyped_constant&gt; (7 samples, 0.01%)</title><rect x="21.9" y="277" width="0.2" height="15.0" fill="rgb(207,56,50)" rx="2" ry="2" />
<text  x="24.88" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="575.5" y="293" width="0.2" height="15.0" fill="rgb(216,126,38)" rx="2" ry="2" />
<text  x="578.50" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (37 samples, 0.08%)</title><rect x="1157.9" y="405" width="0.9" height="15.0" fill="rgb(221,97,1)" rx="2" ry="2" />
<text  x="1160.91" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="928.8" y="389" width="0.1" height="15.0" fill="rgb(211,181,17)" rx="2" ry="2" />
<text  x="931.75" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="533.8" y="309" width="0.1" height="15.0" fill="rgb(253,132,53)" rx="2" ry="2" />
<text  x="536.81" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (7 samples, 0.01%)</title><rect x="395.5" y="165" width="0.2" height="15.0" fill="rgb(249,144,7)" rx="2" ry="2" />
<text  x="398.54" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (18 samples, 0.04%)</title><rect x="713.7" y="421" width="0.4" height="15.0" fill="rgb(221,170,35)" rx="2" ry="2" />
<text  x="716.68" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (96 samples, 0.20%)</title><rect x="1171.5" y="437" width="2.3" height="15.0" fill="rgb(226,136,7)" rx="2" ry="2" />
<text  x="1174.45" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (27 samples, 0.06%)</title><rect x="321.3" y="213" width="0.6" height="15.0" fill="rgb(247,134,1)" rx="2" ry="2" />
<text  x="324.27" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (33 samples, 0.07%)</title><rect x="148.8" y="245" width="0.8" height="15.0" fill="rgb(221,88,10)" rx="2" ry="2" />
<text  x="151.80" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (35 samples, 0.07%)</title><rect x="938.6" y="405" width="0.9" height="15.0" fill="rgb(219,7,39)" rx="2" ry="2" />
<text  x="941.62" y="415.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::~resource_units (13 samples, 0.03%)</title><rect x="415.5" y="229" width="0.3" height="15.0" fill="rgb(222,10,43)" rx="2" ry="2" />
<text  x="418.45" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (12 samples, 0.03%)</title><rect x="702.6" y="453" width="0.3" height="15.0" fill="rgb(243,211,8)" rx="2" ry="2" />
<text  x="705.64" y="463.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="946.3" y="373" width="0.6" height="15.0" fill="rgb(218,213,41)" rx="2" ry="2" />
<text  x="949.26" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (73 samples, 0.15%)</title><rect x="298.7" y="261" width="1.8" height="15.0" fill="rgb(210,5,21)" rx="2" ry="2" />
<text  x="301.73" y="271.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (11 samples, 0.02%)</title><rect x="1054.0" y="277" width="0.3" height="15.0" fill="rgb(213,47,8)" rx="2" ry="2" />
<text  x="1056.98" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1038.0" y="213" width="0.3" height="15.0" fill="rgb(242,91,39)" rx="2" ry="2" />
<text  x="1040.99" y="223.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="145.6" y="261" width="0.2" height="15.0" fill="rgb(208,73,18)" rx="2" ry="2" />
<text  x="148.65" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (23 samples, 0.05%)</title><rect x="1076.3" y="309" width="0.5" height="15.0" fill="rgb(231,108,7)" rx="2" ry="2" />
<text  x="1079.28" y="319.5" ></text>
</g>
<g >
<title>operator new (78 samples, 0.16%)</title><rect x="988.5" y="325" width="1.9" height="15.0" fill="rgb(231,162,21)" rx="2" ry="2" />
<text  x="991.51" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (47 samples, 0.10%)</title><rect x="1149.3" y="485" width="1.2" height="15.0" fill="rgb(244,130,23)" rx="2" ry="2" />
<text  x="1152.33" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (25 samples, 0.05%)</title><rect x="1034.0" y="149" width="0.6" height="15.0" fill="rgb(216,216,3)" rx="2" ry="2" />
<text  x="1036.99" y="159.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (19 samples, 0.04%)</title><rect x="565.6" y="277" width="0.5" height="15.0" fill="rgb(215,46,10)" rx="2" ry="2" />
<text  x="568.60" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="850.8" y="405" width="1.3" height="15.0" fill="rgb(215,137,42)" rx="2" ry="2" />
<text  x="853.83" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (59 samples, 0.12%)</title><rect x="907.3" y="357" width="1.4" height="15.0" fill="rgb(229,120,39)" rx="2" ry="2" />
<text  x="910.25" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (9 samples, 0.02%)</title><rect x="296.5" y="293" width="0.2" height="15.0" fill="rgb(248,113,14)" rx="2" ry="2" />
<text  x="299.49" y="303.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (90 samples, 0.19%)</title><rect x="239.9" y="197" width="2.2" height="15.0" fill="rgb(213,204,11)" rx="2" ry="2" />
<text  x="242.88" y="207.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (511 samples, 1.07%)</title><rect x="578.7" y="389" width="12.7" height="15.0" fill="rgb(252,107,54)" rx="2" ry="2" />
<text  x="581.70" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (11 samples, 0.02%)</title><rect x="873.8" y="341" width="0.3" height="15.0" fill="rgb(232,185,47)" rx="2" ry="2" />
<text  x="876.82" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (19 samples, 0.04%)</title><rect x="538.8" y="341" width="0.5" height="15.0" fill="rgb(250,136,48)" rx="2" ry="2" />
<text  x="541.82" y="351.5" ></text>
</g>
<g >
<title>__strlen_avx2 (85 samples, 0.18%)</title><rect x="1018.2" y="245" width="2.1" height="15.0" fill="rgb(254,60,14)" rx="2" ry="2" />
<text  x="1021.17" y="255.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="1105.0" y="373" width="0.2" height="15.0" fill="rgb(243,3,14)" rx="2" ry="2" />
<text  x="1108.04" y="383.5" ></text>
</g>
<g >
<title>db::system_keyspace_make (5 samples, 0.01%)</title><rect x="49.4" y="501" width="0.1" height="15.0" fill="rgb(221,133,24)" rx="2" ry="2" />
<text  x="52.40" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (28 samples, 0.06%)</title><rect x="873.5" y="421" width="0.7" height="15.0" fill="rgb(232,200,50)" rx="2" ry="2" />
<text  x="876.50" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::stats (44 samples, 0.09%)</title><rect x="146.9" y="245" width="1.1" height="15.0" fill="rgb(231,7,35)" rx="2" ry="2" />
<text  x="149.89" y="255.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (32 samples, 0.07%)</title><rect x="1138.6" y="341" width="0.8" height="15.0" fill="rgb(220,76,36)" rx="2" ry="2" />
<text  x="1141.64" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (9 samples, 0.02%)</title><rect x="870.2" y="485" width="0.2" height="15.0" fill="rgb(240,96,53)" rx="2" ry="2" />
<text  x="873.23" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="457.8" y="277" width="0.1" height="15.0" fill="rgb(223,10,49)" rx="2" ry="2" />
<text  x="460.76" y="287.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="623.3" y="389" width="0.7" height="15.0" fill="rgb(220,178,31)" rx="2" ry="2" />
<text  x="626.31" y="399.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (7 samples, 0.01%)</title><rect x="780.9" y="357" width="0.2" height="15.0" fill="rgb(234,216,54)" rx="2" ry="2" />
<text  x="783.90" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1137.7" y="453" width="0.2" height="15.0" fill="rgb(242,54,40)" rx="2" ry="2" />
<text  x="1140.73" y="463.5" ></text>
</g>
<g >
<title>abstract_type::from_string (6 samples, 0.01%)</title><rect x="23.5" y="373" width="0.1" height="15.0" fill="rgb(235,197,14)" rx="2" ry="2" />
<text  x="26.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (84 samples, 0.18%)</title><rect x="958.5" y="389" width="2.1" height="15.0" fill="rgb(236,223,28)" rx="2" ry="2" />
<text  x="961.48" y="399.5" ></text>
</g>
<g >
<title>reader_permit::mark_used (5 samples, 0.01%)</title><rect x="55.4" y="469" width="0.2" height="15.0" fill="rgb(208,126,8)" rx="2" ry="2" />
<text  x="58.43" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_check_len (6 samples, 0.01%)</title><rect x="248.2" y="181" width="0.2" height="15.0" fill="rgb(250,26,9)" rx="2" ry="2" />
<text  x="251.24" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (105 samples, 0.22%)</title><rect x="725.5" y="453" width="2.6" height="15.0" fill="rgb(247,76,25)" rx="2" ry="2" />
<text  x="728.53" y="463.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="534.2" y="293" width="0.2" height="15.0" fill="rgb(249,36,43)" rx="2" ry="2" />
<text  x="537.19" y="303.5" ></text>
</g>
<g >
<title>sstring_hash::operator (27 samples, 0.06%)</title><rect x="837.4" y="309" width="0.7" height="15.0" fill="rgb(252,207,43)" rx="2" ry="2" />
<text  x="840.39" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="172.1" y="133" width="0.1" height="15.0" fill="rgb(226,179,54)" rx="2" ry="2" />
<text  x="175.08" y="143.5" ></text>
</g>
<g >
<title>database::find_schema (280 samples, 0.59%)</title><rect x="763.8" y="405" width="6.9" height="15.0" fill="rgb(246,6,37)" rx="2" ry="2" />
<text  x="766.79" y="415.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (28 samples, 0.06%)</title><rect x="609.4" y="405" width="0.7" height="15.0" fill="rgb(244,186,16)" rx="2" ry="2" />
<text  x="612.37" y="415.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (41 samples, 0.09%)</title><rect x="685.2" y="469" width="1.0" height="15.0" fill="rgb(246,71,21)" rx="2" ry="2" />
<text  x="688.18" y="479.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (6 samples, 0.01%)</title><rect x="714.7" y="421" width="0.1" height="15.0" fill="rgb(226,79,31)" rx="2" ry="2" />
<text  x="717.67" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (42 samples, 0.09%)</title><rect x="693.2" y="469" width="1.1" height="15.0" fill="rgb(247,176,5)" rx="2" ry="2" />
<text  x="696.22" y="479.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (74 samples, 0.16%)</title><rect x="750.9" y="325" width="1.9" height="15.0" fill="rgb(222,98,10)" rx="2" ry="2" />
<text  x="753.92" y="335.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (44 samples, 0.09%)</title><rect x="104.3" y="437" width="1.1" height="15.0" fill="rgb(209,97,3)" rx="2" ry="2" />
<text  x="107.31" y="447.5" ></text>
</g>
<g >
<title>db::validate_for_read (5 samples, 0.01%)</title><rect x="1120.6" y="421" width="0.1" height="15.0" fill="rgb(243,87,50)" rx="2" ry="2" />
<text  x="1123.61" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (9 samples, 0.02%)</title><rect x="124.8" y="309" width="0.2" height="15.0" fill="rgb(237,41,7)" rx="2" ry="2" />
<text  x="127.77" y="319.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,637 samples, 9.74%)</title><rect x="429.5" y="421" width="115.0" height="15.0" fill="rgb(211,86,36)" rx="2" ry="2" />
<text  x="432.46" y="431.5" >query::querier..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (18 samples, 0.04%)</title><rect x="588.8" y="357" width="0.5" height="15.0" fill="rgb(207,200,46)" rx="2" ry="2" />
<text  x="591.82" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (15 samples, 0.03%)</title><rect x="956.5" y="405" width="0.4" height="15.0" fill="rgb(215,62,54)" rx="2" ry="2" />
<text  x="959.50" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (24 samples, 0.05%)</title><rect x="579.3" y="357" width="0.6" height="15.0" fill="rgb(254,167,47)" rx="2" ry="2" />
<text  x="582.27" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="710.2" y="437" width="0.1" height="15.0" fill="rgb(214,158,24)" rx="2" ry="2" />
<text  x="713.20" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="857.6" y="405" width="0.2" height="15.0" fill="rgb(206,172,21)" rx="2" ry="2" />
<text  x="860.58" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (19 samples, 0.04%)</title><rect x="1142.2" y="501" width="0.4" height="15.0" fill="rgb(249,179,26)" rx="2" ry="2" />
<text  x="1145.16" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1116.7" y="357" width="0.2" height="15.0" fill="rgb(210,36,25)" rx="2" ry="2" />
<text  x="1119.75" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="171.8" y="149" width="0.4" height="15.0" fill="rgb(227,165,39)" rx="2" ry="2" />
<text  x="174.83" y="159.5" ></text>
</g>
<g >
<title>operator new (33 samples, 0.07%)</title><rect x="498.0" y="293" width="0.8" height="15.0" fill="rgb(239,19,31)" rx="2" ry="2" />
<text  x="501.03" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (13 samples, 0.03%)</title><rect x="613.0" y="437" width="0.3" height="15.0" fill="rgb(245,36,40)" rx="2" ry="2" />
<text  x="616.02" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (5 samples, 0.01%)</title><rect x="1138.7" y="213" width="0.2" height="15.0" fill="rgb(220,19,27)" rx="2" ry="2" />
<text  x="1141.74" y="223.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (20 samples, 0.04%)</title><rect x="451.2" y="293" width="0.5" height="15.0" fill="rgb(220,141,23)" rx="2" ry="2" />
<text  x="454.19" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,300 samples, 4.83%)</title><rect x="891.2" y="421" width="57.1" height="15.0" fill="rgb(220,214,16)" rx="2" ry="2" />
<text  x="894.23" y="431.5" >cql3::..</text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="659.1" y="453" width="0.5" height="15.0" fill="rgb(243,54,30)" rx="2" ry="2" />
<text  x="662.14" y="463.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (57 samples, 0.12%)</title><rect x="483.2" y="213" width="1.4" height="15.0" fill="rgb(226,22,36)" rx="2" ry="2" />
<text  x="486.20" y="223.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (89 samples, 0.19%)</title><rect x="196.2" y="117" width="2.2" height="15.0" fill="rgb(246,209,17)" rx="2" ry="2" />
<text  x="199.16" y="127.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="420.0" y="261" width="1.1" height="15.0" fill="rgb(237,44,31)" rx="2" ry="2" />
<text  x="422.99" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (11 samples, 0.02%)</title><rect x="713.4" y="421" width="0.3" height="15.0" fill="rgb(252,158,19)" rx="2" ry="2" />
<text  x="716.40" y="431.5" ></text>
</g>
<g >
<title>operator new (127 samples, 0.27%)</title><rect x="1009.9" y="277" width="3.2" height="15.0" fill="rgb(233,117,51)" rx="2" ry="2" />
<text  x="1012.94" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1053.7" y="277" width="0.2" height="15.0" fill="rgb(218,34,11)" rx="2" ry="2" />
<text  x="1056.68" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (67 samples, 0.14%)</title><rect x="491.2" y="325" width="1.6" height="15.0" fill="rgb(209,121,42)" rx="2" ry="2" />
<text  x="494.16" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="1063.5" y="293" width="0.9" height="15.0" fill="rgb(233,214,47)" rx="2" ry="2" />
<text  x="1066.50" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (20 samples, 0.04%)</title><rect x="1112.5" y="373" width="0.5" height="15.0" fill="rgb(253,198,52)" rx="2" ry="2" />
<text  x="1115.51" y="383.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (11 samples, 0.02%)</title><rect x="756.2" y="357" width="0.3" height="15.0" fill="rgb(238,29,50)" rx="2" ry="2" />
<text  x="759.20" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="453.3" y="293" width="0.2" height="15.0" fill="rgb(207,114,17)" rx="2" ry="2" />
<text  x="456.34" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (444 samples, 0.93%)</title><rect x="895.3" y="341" width="11.0" height="15.0" fill="rgb(248,81,35)" rx="2" ry="2" />
<text  x="898.32" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (77 samples, 0.16%)</title><rect x="1167.1" y="485" width="1.9" height="15.0" fill="rgb(208,116,42)" rx="2" ry="2" />
<text  x="1170.11" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (20 samples, 0.04%)</title><rect x="949.7" y="389" width="0.5" height="15.0" fill="rgb(243,131,16)" rx="2" ry="2" />
<text  x="952.70" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="799.5" y="197" width="0.1" height="15.0" fill="rgb(223,134,29)" rx="2" ry="2" />
<text  x="802.50" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (21 samples, 0.04%)</title><rect x="872.6" y="469" width="0.6" height="15.0" fill="rgb(227,97,45)" rx="2" ry="2" />
<text  x="875.63" y="479.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (45 samples, 0.09%)</title><rect x="743.9" y="389" width="1.1" height="15.0" fill="rgb(225,131,53)" rx="2" ry="2" />
<text  x="746.90" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (5 samples, 0.01%)</title><rect x="23.9" y="357" width="0.1" height="15.0" fill="rgb(237,63,23)" rx="2" ry="2" />
<text  x="26.86" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (286 samples, 0.60%)</title><rect x="17.7" y="597" width="7.1" height="15.0" fill="rgb(210,187,53)" rx="2" ry="2" />
<text  x="20.69" y="607.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (56 samples, 0.12%)</title><rect x="1060.6" y="325" width="1.4" height="15.0" fill="rgb(228,112,38)" rx="2" ry="2" />
<text  x="1063.58" y="335.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="909.9" y="325" width="0.8" height="15.0" fill="rgb(214,192,11)" rx="2" ry="2" />
<text  x="912.93" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="495.1" y="309" width="0.2" height="15.0" fill="rgb(237,108,51)" rx="2" ry="2" />
<text  x="498.05" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (14 samples, 0.03%)</title><rect x="450.2" y="277" width="0.3" height="15.0" fill="rgb(238,175,24)" rx="2" ry="2" />
<text  x="453.19" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (76 samples, 0.16%)</title><rect x="999.1" y="245" width="1.8" height="15.0" fill="rgb(247,64,34)" rx="2" ry="2" />
<text  x="1002.05" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (7 samples, 0.01%)</title><rect x="553.1" y="293" width="0.2" height="15.0" fill="rgb(250,53,21)" rx="2" ry="2" />
<text  x="556.08" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (17 samples, 0.04%)</title><rect x="26.5" y="517" width="0.4" height="15.0" fill="rgb(216,184,16)" rx="2" ry="2" />
<text  x="29.49" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="460.0" y="325" width="0.3" height="15.0" fill="rgb(252,210,44)" rx="2" ry="2" />
<text  x="462.99" y="335.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (16 samples, 0.03%)</title><rect x="336.2" y="181" width="0.4" height="15.0" fill="rgb(241,90,11)" rx="2" ry="2" />
<text  x="339.22" y="191.5" ></text>
</g>
<g >
<title>compound_type&lt; (151 samples, 0.32%)</title><rect x="931.5" y="373" width="3.8" height="15.0" fill="rgb(229,157,53)" rx="2" ry="2" />
<text  x="934.53" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="494.9" y="309" width="0.2" height="15.0" fill="rgb(215,220,38)" rx="2" ry="2" />
<text  x="497.91" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (38 samples, 0.08%)</title><rect x="244.3" y="181" width="0.9" height="15.0" fill="rgb(220,54,51)" rx="2" ry="2" />
<text  x="247.27" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (9 samples, 0.02%)</title><rect x="811.6" y="197" width="0.2" height="15.0" fill="rgb(208,140,15)" rx="2" ry="2" />
<text  x="814.55" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (7 samples, 0.01%)</title><rect x="118.4" y="357" width="0.2" height="15.0" fill="rgb(228,117,34)" rx="2" ry="2" />
<text  x="121.42" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="1048.7" y="277" width="0.5" height="15.0" fill="rgb(216,21,10)" rx="2" ry="2" />
<text  x="1051.75" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="139.7" y="213" width="0.2" height="15.0" fill="rgb(236,166,26)" rx="2" ry="2" />
<text  x="142.74" y="223.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (29 samples, 0.06%)</title><rect x="873.5" y="485" width="0.7" height="15.0" fill="rgb(216,131,51)" rx="2" ry="2" />
<text  x="876.48" y="495.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (36 samples, 0.08%)</title><rect x="1138.6" y="485" width="0.9" height="15.0" fill="rgb(230,135,8)" rx="2" ry="2" />
<text  x="1141.59" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="1000.2" y="229" width="0.7" height="15.0" fill="rgb(239,112,38)" rx="2" ry="2" />
<text  x="1003.19" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1094.4" y="277" width="0.2" height="15.0" fill="rgb(230,135,46)" rx="2" ry="2" />
<text  x="1097.38" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (8 samples, 0.02%)</title><rect x="548.9" y="341" width="0.2" height="15.0" fill="rgb(247,200,33)" rx="2" ry="2" />
<text  x="551.87" y="351.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (9 samples, 0.02%)</title><rect x="287.0" y="405" width="0.3" height="15.0" fill="rgb(209,172,23)" rx="2" ry="2" />
<text  x="290.05" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="555.9" y="421" width="0.2" height="15.0" fill="rgb(235,1,53)" rx="2" ry="2" />
<text  x="558.93" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="663.0" y="469" width="0.2" height="15.0" fill="rgb(218,201,39)" rx="2" ry="2" />
<text  x="665.99" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (35 samples, 0.07%)</title><rect x="290.1" y="373" width="0.9" height="15.0" fill="rgb(219,29,54)" rx="2" ry="2" />
<text  x="293.15" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (17 samples, 0.04%)</title><rect x="315.9" y="165" width="0.4" height="15.0" fill="rgb(207,167,40)" rx="2" ry="2" />
<text  x="318.89" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="849.3" y="341" width="0.2" height="15.0" fill="rgb(229,9,35)" rx="2" ry="2" />
<text  x="852.30" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="905.8" y="309" width="0.1" height="15.0" fill="rgb(216,51,49)" rx="2" ry="2" />
<text  x="908.76" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="641.1" y="453" width="0.3" height="15.0" fill="rgb(231,49,47)" rx="2" ry="2" />
<text  x="644.09" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (53 samples, 0.11%)</title><rect x="21.1" y="325" width="1.3" height="15.0" fill="rgb(233,68,0)" rx="2" ry="2" />
<text  x="24.11" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="785.9" y="261" width="0.1" height="15.0" fill="rgb(225,129,41)" rx="2" ry="2" />
<text  x="788.86" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (42 samples, 0.09%)</title><rect x="126.8" y="277" width="1.0" height="15.0" fill="rgb(239,58,28)" rx="2" ry="2" />
<text  x="129.80" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (47 samples, 0.10%)</title><rect x="700.6" y="453" width="1.2" height="15.0" fill="rgb(216,48,43)" rx="2" ry="2" />
<text  x="703.61" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (101 samples, 0.21%)</title><rect x="372.9" y="197" width="2.5" height="15.0" fill="rgb(251,205,18)" rx="2" ry="2" />
<text  x="375.87" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.18%)</title><rect x="974.4" y="341" width="2.2" height="15.0" fill="rgb(244,84,20)" rx="2" ry="2" />
<text  x="977.43" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="278.3" y="293" width="0.3" height="15.0" fill="rgb(211,195,53)" rx="2" ry="2" />
<text  x="281.27" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="635.8" y="485" width="0.2" height="15.0" fill="rgb(218,93,16)" rx="2" ry="2" />
<text  x="638.76" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (7 samples, 0.01%)</title><rect x="1096.8" y="245" width="0.2" height="15.0" fill="rgb(251,49,6)" rx="2" ry="2" />
<text  x="1099.81" y="255.5" ></text>
</g>
<g >
<title>schema::column_at (28 samples, 0.06%)</title><rect x="204.9" y="133" width="0.7" height="15.0" fill="rgb(248,148,1)" rx="2" ry="2" />
<text  x="207.94" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="828.9" y="373" width="0.1" height="15.0" fill="rgb(245,85,1)" rx="2" ry="2" />
<text  x="831.86" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (2,015 samples, 4.23%)</title><rect x="1004.3" y="293" width="50.0" height="15.0" fill="rgb(247,138,5)" rx="2" ry="2" />
<text  x="1007.29" y="303.5" >servi..</text>
</g>
<g >
<title>query::partition_slice::~partition_slice (23 samples, 0.05%)</title><rect x="42.5" y="453" width="0.6" height="15.0" fill="rgb(208,214,0)" rx="2" ry="2" />
<text  x="45.54" y="463.5" ></text>
</g>
<g >
<title>operator delete (9 samples, 0.02%)</title><rect x="419.3" y="277" width="0.2" height="15.0" fill="rgb(212,175,53)" rx="2" ry="2" />
<text  x="422.30" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (10 samples, 0.02%)</title><rect x="916.3" y="341" width="0.2" height="15.0" fill="rgb(228,47,16)" rx="2" ry="2" />
<text  x="919.30" y="351.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (6 samples, 0.01%)</title><rect x="1094.6" y="293" width="0.2" height="15.0" fill="rgb(236,92,28)" rx="2" ry="2" />
<text  x="1097.63" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (24 samples, 0.05%)</title><rect x="776.3" y="357" width="0.6" height="15.0" fill="rgb(236,73,8)" rx="2" ry="2" />
<text  x="779.27" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (54 samples, 0.11%)</title><rect x="1158.9" y="453" width="1.3" height="15.0" fill="rgb(231,148,6)" rx="2" ry="2" />
<text  x="1161.88" y="463.5" ></text>
</g>
<g >
<title>compound_type&lt; (100 samples, 0.21%)</title><rect x="917.8" y="357" width="2.4" height="15.0" fill="rgb(227,206,54)" rx="2" ry="2" />
<text  x="920.76" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (159 samples, 0.33%)</title><rect x="371.4" y="213" width="4.0" height="15.0" fill="rgb(216,104,7)" rx="2" ry="2" />
<text  x="374.43" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="1158.4" y="357" width="0.4" height="15.0" fill="rgb(207,15,15)" rx="2" ry="2" />
<text  x="1161.43" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="911.7" y="373" width="0.3" height="15.0" fill="rgb(216,172,26)" rx="2" ry="2" />
<text  x="914.74" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="38.7" y="437" width="0.1" height="15.0" fill="rgb(232,186,29)" rx="2" ry="2" />
<text  x="41.67" y="447.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="146.5" y="245" width="0.3" height="15.0" fill="rgb(238,166,1)" rx="2" ry="2" />
<text  x="149.54" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (14 samples, 0.03%)</title><rect x="24.9" y="549" width="0.3" height="15.0" fill="rgb(234,106,51)" rx="2" ry="2" />
<text  x="27.85" y="559.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (38 samples, 0.08%)</title><rect x="685.3" y="453" width="0.9" height="15.0" fill="rgb(223,129,51)" rx="2" ry="2" />
<text  x="688.26" y="463.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.03%)</title><rect x="736.7" y="293" width="0.4" height="15.0" fill="rgb(251,64,31)" rx="2" ry="2" />
<text  x="739.74" y="303.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (10 samples, 0.02%)</title><rect x="576.4" y="309" width="0.2" height="15.0" fill="rgb(213,170,24)" rx="2" ry="2" />
<text  x="579.39" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (7 samples, 0.01%)</title><rect x="1050.1" y="277" width="0.1" height="15.0" fill="rgb(232,213,34)" rx="2" ry="2" />
<text  x="1053.06" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (8 samples, 0.02%)</title><rect x="23.8" y="373" width="0.2" height="15.0" fill="rgb(225,83,43)" rx="2" ry="2" />
<text  x="26.84" y="383.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (15 samples, 0.03%)</title><rect x="656.9" y="421" width="0.4" height="15.0" fill="rgb(243,107,5)" rx="2" ry="2" />
<text  x="659.89" y="431.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="843.7" y="373" width="0.4" height="15.0" fill="rgb(212,212,33)" rx="2" ry="2" />
<text  x="846.72" y="383.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,467 samples, 3.08%)</title><rect x="556.5" y="437" width="36.4" height="15.0" fill="rgb(238,182,46)" rx="2" ry="2" />
<text  x="559.48" y="447.5" >que..</text>
</g>
<g >
<title>service::client_state::set_keyspace (160 samples, 0.34%)</title><rect x="853.8" y="421" width="4.0" height="15.0" fill="rgb(208,223,47)" rx="2" ry="2" />
<text  x="856.83" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (13 samples, 0.03%)</title><rect x="1148.5" y="485" width="0.4" height="15.0" fill="rgb(212,105,53)" rx="2" ry="2" />
<text  x="1151.54" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (5 samples, 0.01%)</title><rect x="18.6" y="293" width="0.1" height="15.0" fill="rgb(209,0,13)" rx="2" ry="2" />
<text  x="21.60" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (10 samples, 0.02%)</title><rect x="852.4" y="421" width="0.3" height="15.0" fill="rgb(237,168,44)" rx="2" ry="2" />
<text  x="855.45" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (301 samples, 0.63%)</title><rect x="188.3" y="85" width="7.5" height="15.0" fill="rgb(221,72,10)" rx="2" ry="2" />
<text  x="191.32" y="95.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (47 samples, 0.10%)</title><rect x="415.2" y="245" width="1.2" height="15.0" fill="rgb(237,87,19)" rx="2" ry="2" />
<text  x="418.23" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="643.7" y="485" width="0.6" height="15.0" fill="rgb(213,162,9)" rx="2" ry="2" />
<text  x="646.72" y="495.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (118 samples, 0.25%)</title><rect x="607.1" y="437" width="3.0" height="15.0" fill="rgb(221,145,19)" rx="2" ry="2" />
<text  x="610.14" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (15 samples, 0.03%)</title><rect x="1036.0" y="197" width="0.4" height="15.0" fill="rgb(217,45,18)" rx="2" ry="2" />
<text  x="1039.00" y="207.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (612 samples, 1.29%)</title><rect x="796.6" y="229" width="15.2" height="15.0" fill="rgb(233,121,39)" rx="2" ry="2" />
<text  x="799.60" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="1158.1" y="373" width="0.7" height="15.0" fill="rgb(240,148,51)" rx="2" ry="2" />
<text  x="1161.08" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (25 samples, 0.05%)</title><rect x="211.0" y="85" width="0.6" height="15.0" fill="rgb(230,90,1)" rx="2" ry="2" />
<text  x="213.97" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (28 samples, 0.06%)</title><rect x="1105.6" y="405" width="0.7" height="15.0" fill="rgb(246,98,19)" rx="2" ry="2" />
<text  x="1108.56" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (10 samples, 0.02%)</title><rect x="427.1" y="373" width="0.3" height="15.0" fill="rgb(230,20,16)" rx="2" ry="2" />
<text  x="430.13" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (20 samples, 0.04%)</title><rect x="665.9" y="485" width="0.5" height="15.0" fill="rgb(210,138,24)" rx="2" ry="2" />
<text  x="668.94" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (37 samples, 0.08%)</title><rect x="416.7" y="277" width="0.9" height="15.0" fill="rgb(234,72,53)" rx="2" ry="2" />
<text  x="419.72" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (856 samples, 1.80%)</title><rect x="1077.8" y="341" width="21.2" height="15.0" fill="rgb(208,223,38)" rx="2" ry="2" />
<text  x="1080.81" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (374 samples, 0.79%)</title><rect x="567.1" y="309" width="9.3" height="15.0" fill="rgb(252,182,38)" rx="2" ry="2" />
<text  x="570.12" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (5 samples, 0.01%)</title><rect x="867.6" y="405" width="0.1" height="15.0" fill="rgb(220,97,20)" rx="2" ry="2" />
<text  x="870.60" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (13 samples, 0.03%)</title><rect x="1064.7" y="293" width="0.3" height="15.0" fill="rgb(235,182,46)" rx="2" ry="2" />
<text  x="1067.72" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (164 samples, 0.34%)</title><rect x="38.0" y="469" width="4.0" height="15.0" fill="rgb(219,194,41)" rx="2" ry="2" />
<text  x="40.97" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (13 samples, 0.03%)</title><rect x="427.9" y="405" width="0.3" height="15.0" fill="rgb(251,217,5)" rx="2" ry="2" />
<text  x="430.85" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="228.9" y="213" width="0.3" height="15.0" fill="rgb(214,133,54)" rx="2" ry="2" />
<text  x="231.92" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (53 samples, 0.11%)</title><rect x="915.2" y="357" width="1.3" height="15.0" fill="rgb(236,56,26)" rx="2" ry="2" />
<text  x="918.24" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (90 samples, 0.19%)</title><rect x="946.0" y="389" width="2.2" height="15.0" fill="rgb(205,69,1)" rx="2" ry="2" />
<text  x="948.99" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="941.0" y="389" width="0.2" height="15.0" fill="rgb(239,9,9)" rx="2" ry="2" />
<text  x="944.00" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (10 samples, 0.02%)</title><rect x="833.1" y="277" width="0.2" height="15.0" fill="rgb(248,102,23)" rx="2" ry="2" />
<text  x="836.08" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="629.9" y="373" width="0.3" height="15.0" fill="rgb(241,199,44)" rx="2" ry="2" />
<text  x="632.88" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (14 samples, 0.03%)</title><rect x="52.3" y="485" width="0.4" height="15.0" fill="rgb(216,114,12)" rx="2" ry="2" />
<text  x="55.31" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="642.4" y="453" width="0.2" height="15.0" fill="rgb(224,180,32)" rx="2" ry="2" />
<text  x="645.38" y="463.5" ></text>
</g>
<g >
<title>database::query (1,084 samples, 2.28%)</title><rect x="1016.1" y="261" width="26.8" height="15.0" fill="rgb(246,108,36)" rx="2" ry="2" />
<text  x="1019.07" y="271.5" >d..</text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (30 samples, 0.06%)</title><rect x="41.1" y="405" width="0.8" height="15.0" fill="rgb(220,7,29)" rx="2" ry="2" />
<text  x="44.12" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (24 samples, 0.05%)</title><rect x="218.3" y="149" width="0.6" height="15.0" fill="rgb(224,196,13)" rx="2" ry="2" />
<text  x="221.33" y="159.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (69 samples, 0.15%)</title><rect x="146.3" y="261" width="1.7" height="15.0" fill="rgb(254,160,12)" rx="2" ry="2" />
<text  x="149.27" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (11 samples, 0.02%)</title><rect x="205.8" y="149" width="0.3" height="15.0" fill="rgb(232,162,0)" rx="2" ry="2" />
<text  x="208.78" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (7 samples, 0.01%)</title><rect x="1148.9" y="485" width="0.1" height="15.0" fill="rgb(207,107,51)" rx="2" ry="2" />
<text  x="1151.86" y="495.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (49 samples, 0.10%)</title><rect x="947.0" y="373" width="1.2" height="15.0" fill="rgb(219,224,0)" rx="2" ry="2" />
<text  x="950.00" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (24 samples, 0.05%)</title><rect x="557.1" y="421" width="0.6" height="15.0" fill="rgb(227,46,16)" rx="2" ry="2" />
<text  x="560.12" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (14 samples, 0.03%)</title><rect x="230.6" y="213" width="0.3" height="15.0" fill="rgb(241,171,43)" rx="2" ry="2" />
<text  x="233.58" y="223.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (87 samples, 0.18%)</title><rect x="672.3" y="485" width="2.2" height="15.0" fill="rgb(232,102,34)" rx="2" ry="2" />
<text  x="675.34" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (29 samples, 0.06%)</title><rect x="68.6" y="405" width="0.7" height="15.0" fill="rgb(237,106,34)" rx="2" ry="2" />
<text  x="71.60" y="415.5" ></text>
</g>
<g >
<title>atomic_cell::make_live (5 samples, 0.01%)</title><rect x="873.8" y="261" width="0.2" height="15.0" fill="rgb(216,123,29)" rx="2" ry="2" />
<text  x="876.85" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (21 samples, 0.04%)</title><rect x="867.7" y="437" width="0.6" height="15.0" fill="rgb(228,222,42)" rx="2" ry="2" />
<text  x="870.75" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (81 samples, 0.17%)</title><rect x="716.4" y="437" width="2.0" height="15.0" fill="rgb(253,72,5)" rx="2" ry="2" />
<text  x="719.38" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (7 samples, 0.01%)</title><rect x="432.9" y="357" width="0.1" height="15.0" fill="rgb(219,145,0)" rx="2" ry="2" />
<text  x="435.86" y="367.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (13 samples, 0.03%)</title><rect x="600.6" y="405" width="0.3" height="15.0" fill="rgb(253,91,18)" rx="2" ry="2" />
<text  x="603.60" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (123 samples, 0.26%)</title><rect x="984.6" y="341" width="3.0" height="15.0" fill="rgb(226,208,29)" rx="2" ry="2" />
<text  x="987.57" y="351.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="933.7" y="341" width="0.2" height="15.0" fill="rgb(205,90,16)" rx="2" ry="2" />
<text  x="936.66" y="351.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (117 samples, 0.25%)</title><rect x="354.6" y="165" width="2.9" height="15.0" fill="rgb(210,102,2)" rx="2" ry="2" />
<text  x="357.57" y="175.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="463.8" y="325" width="0.1" height="15.0" fill="rgb(223,175,25)" rx="2" ry="2" />
<text  x="466.78" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (128 samples, 0.27%)</title><rect x="735.7" y="341" width="3.1" height="15.0" fill="rgb(245,155,34)" rx="2" ry="2" />
<text  x="738.67" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (8 samples, 0.02%)</title><rect x="1136.0" y="421" width="0.2" height="15.0" fill="rgb(222,152,10)" rx="2" ry="2" />
<text  x="1138.96" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (40 samples, 0.08%)</title><rect x="573.0" y="277" width="1.0" height="15.0" fill="rgb(217,49,33)" rx="2" ry="2" />
<text  x="575.97" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="1070.4" y="309" width="1.7" height="15.0" fill="rgb(221,140,41)" rx="2" ry="2" />
<text  x="1073.42" y="319.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="514.8" y="229" width="0.1" height="15.0" fill="rgb(211,132,44)" rx="2" ry="2" />
<text  x="517.79" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (16 samples, 0.03%)</title><rect x="1149.4" y="469" width="0.4" height="15.0" fill="rgb(225,16,0)" rx="2" ry="2" />
<text  x="1152.38" y="479.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="646.1" y="485" width="0.5" height="15.0" fill="rgb(219,127,22)" rx="2" ry="2" />
<text  x="649.12" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (24 samples, 0.05%)</title><rect x="647.6" y="485" width="0.6" height="15.0" fill="rgb(232,166,19)" rx="2" ry="2" />
<text  x="650.61" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (5 samples, 0.01%)</title><rect x="804.3" y="149" width="0.1" height="15.0" fill="rgb(210,164,4)" rx="2" ry="2" />
<text  x="807.29" y="159.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (10 samples, 0.02%)</title><rect x="564.7" y="309" width="0.2" height="15.0" fill="rgb(248,108,38)" rx="2" ry="2" />
<text  x="567.66" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (199 samples, 0.42%)</title><rect x="223.4" y="197" width="4.9" height="15.0" fill="rgb(241,124,45)" rx="2" ry="2" />
<text  x="226.36" y="207.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (11 samples, 0.02%)</title><rect x="465.0" y="293" width="0.3" height="15.0" fill="rgb(219,59,30)" rx="2" ry="2" />
<text  x="468.00" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (493 samples, 1.04%)</title><rect x="477.4" y="277" width="12.2" height="15.0" fill="rgb(246,59,6)" rx="2" ry="2" />
<text  x="480.42" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (77 samples, 0.16%)</title><rect x="565.2" y="309" width="1.9" height="15.0" fill="rgb(239,171,25)" rx="2" ry="2" />
<text  x="568.16" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (18 samples, 0.04%)</title><rect x="142.9" y="261" width="0.5" height="15.0" fill="rgb(205,15,3)" rx="2" ry="2" />
<text  x="145.92" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (163 samples, 0.34%)</title><rect x="859.0" y="421" width="4.0" height="15.0" fill="rgb(223,63,17)" rx="2" ry="2" />
<text  x="861.97" y="431.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (362 samples, 0.76%)</title><rect x="467.2" y="293" width="9.0" height="15.0" fill="rgb(224,160,51)" rx="2" ry="2" />
<text  x="470.18" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (20 samples, 0.04%)</title><rect x="56.2" y="469" width="0.5" height="15.0" fill="rgb(217,72,12)" rx="2" ry="2" />
<text  x="59.22" y="479.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (80 samples, 0.17%)</title><rect x="902.6" y="293" width="2.0" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" />
<text  x="905.61" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (5 samples, 0.01%)</title><rect x="18.6" y="277" width="0.1" height="15.0" fill="rgb(218,71,32)" rx="2" ry="2" />
<text  x="21.60" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (33 samples, 0.07%)</title><rect x="156.9" y="213" width="0.8" height="15.0" fill="rgb(225,190,34)" rx="2" ry="2" />
<text  x="159.86" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="944.9" y="405" width="0.5" height="15.0" fill="rgb(254,104,41)" rx="2" ry="2" />
<text  x="947.92" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (47 samples, 0.10%)</title><rect x="1154.3" y="453" width="1.2" height="15.0" fill="rgb(218,88,17)" rx="2" ry="2" />
<text  x="1157.32" y="463.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.01%)</title><rect x="1136.5" y="437" width="0.1" height="15.0" fill="rgb(229,104,37)" rx="2" ry="2" />
<text  x="1139.49" y="447.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="1103.2" y="357" width="0.2" height="15.0" fill="rgb(242,195,51)" rx="2" ry="2" />
<text  x="1106.23" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (16 samples, 0.03%)</title><rect x="878.8" y="469" width="0.4" height="15.0" fill="rgb(222,30,48)" rx="2" ry="2" />
<text  x="881.76" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="599.6" y="389" width="0.1" height="15.0" fill="rgb(213,52,23)" rx="2" ry="2" />
<text  x="602.55" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (183 samples, 0.38%)</title><rect x="418.1" y="309" width="4.5" height="15.0" fill="rgb(214,222,9)" rx="2" ry="2" />
<text  x="421.08" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (38 samples, 0.08%)</title><rect x="617.7" y="437" width="0.9" height="15.0" fill="rgb(233,181,48)" rx="2" ry="2" />
<text  x="620.71" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="893.5" y="389" width="0.1" height="15.0" fill="rgb(219,85,45)" rx="2" ry="2" />
<text  x="896.46" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (19 samples, 0.04%)</title><rect x="1065.0" y="277" width="0.5" height="15.0" fill="rgb(232,200,14)" rx="2" ry="2" />
<text  x="1068.04" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (12 samples, 0.03%)</title><rect x="48.0" y="485" width="0.3" height="15.0" fill="rgb(217,99,23)" rx="2" ry="2" />
<text  x="50.97" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (19 samples, 0.04%)</title><rect x="19.3" y="261" width="0.4" height="15.0" fill="rgb(206,156,45)" rx="2" ry="2" />
<text  x="22.27" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (8 samples, 0.02%)</title><rect x="1076.6" y="293" width="0.2" height="15.0" fill="rgb(242,116,20)" rx="2" ry="2" />
<text  x="1079.65" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="878.6" y="437" width="0.2" height="15.0" fill="rgb(243,110,26)" rx="2" ry="2" />
<text  x="881.63" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (12 samples, 0.03%)</title><rect x="812.1" y="245" width="0.3" height="15.0" fill="rgb(237,155,12)" rx="2" ry="2" />
<text  x="815.15" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="261.1" y="277" width="0.2" height="15.0" fill="rgb(233,146,6)" rx="2" ry="2" />
<text  x="264.06" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (156 samples, 0.33%)</title><rect x="998.0" y="309" width="3.9" height="15.0" fill="rgb(248,20,1)" rx="2" ry="2" />
<text  x="1001.04" y="319.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (13 samples, 0.03%)</title><rect x="935.4" y="389" width="0.3" height="15.0" fill="rgb(247,39,49)" rx="2" ry="2" />
<text  x="938.42" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (17 samples, 0.04%)</title><rect x="1061.5" y="293" width="0.5" height="15.0" fill="rgb(243,203,18)" rx="2" ry="2" />
<text  x="1064.55" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (33 samples, 0.07%)</title><rect x="690.8" y="437" width="0.9" height="15.0" fill="rgb(242,38,24)" rx="2" ry="2" />
<text  x="693.84" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="719.7" y="485" width="0.2" height="15.0" fill="rgb(246,197,47)" rx="2" ry="2" />
<text  x="722.73" y="495.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="502.4" y="245" width="0.3" height="15.0" fill="rgb(210,48,37)" rx="2" ry="2" />
<text  x="505.44" y="255.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (8 samples, 0.02%)</title><rect x="1176.4" y="437" width="0.2" height="15.0" fill="rgb(252,67,35)" rx="2" ry="2" />
<text  x="1179.39" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="580.7" y="325" width="0.2" height="15.0" fill="rgb(242,219,25)" rx="2" ry="2" />
<text  x="583.68" y="335.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="684.7" y="453" width="0.2" height="15.0" fill="rgb(214,153,1)" rx="2" ry="2" />
<text  x="687.74" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (16 samples, 0.03%)</title><rect x="893.3" y="405" width="0.4" height="15.0" fill="rgb(225,90,33)" rx="2" ry="2" />
<text  x="896.26" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (50 samples, 0.11%)</title><rect x="1106.4" y="405" width="1.2" height="15.0" fill="rgb(217,104,14)" rx="2" ry="2" />
<text  x="1109.38" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (6 samples, 0.01%)</title><rect x="844.9" y="437" width="0.1" height="15.0" fill="rgb(238,86,29)" rx="2" ry="2" />
<text  x="847.88" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="445.7" y="261" width="0.3" height="15.0" fill="rgb(239,103,10)" rx="2" ry="2" />
<text  x="448.66" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (724 samples, 1.52%)</title><rect x="560.1" y="341" width="18.0" height="15.0" fill="rgb(212,63,6)" rx="2" ry="2" />
<text  x="563.12" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (8 samples, 0.02%)</title><rect x="722.6" y="501" width="0.2" height="15.0" fill="rgb(224,189,25)" rx="2" ry="2" />
<text  x="725.58" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (29 samples, 0.06%)</title><rect x="693.4" y="341" width="0.7" height="15.0" fill="rgb(230,36,25)" rx="2" ry="2" />
<text  x="696.42" y="351.5" ></text>
</g>
<g >
<title>sstring_hash::operator (28 samples, 0.06%)</title><rect x="1065.0" y="293" width="0.7" height="15.0" fill="rgb(227,140,51)" rx="2" ry="2" />
<text  x="1068.04" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (11 samples, 0.02%)</title><rect x="776.9" y="357" width="0.2" height="15.0" fill="rgb(226,146,2)" rx="2" ry="2" />
<text  x="779.86" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (10 samples, 0.02%)</title><rect x="328.5" y="181" width="0.3" height="15.0" fill="rgb(224,176,35)" rx="2" ry="2" />
<text  x="331.51" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="76.3" y="389" width="0.1" height="15.0" fill="rgb(232,79,12)" rx="2" ry="2" />
<text  x="79.29" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (5 samples, 0.01%)</title><rect x="322.7" y="197" width="0.1" height="15.0" fill="rgb(252,193,24)" rx="2" ry="2" />
<text  x="325.68" y="207.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::expr::expression::impl, cql3::expr::untyped_constant&gt; (7 samples, 0.01%)</title><rect x="21.9" y="261" width="0.2" height="15.0" fill="rgb(231,174,38)" rx="2" ry="2" />
<text  x="24.88" y="271.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (11 samples, 0.02%)</title><rect x="810.3" y="85" width="0.3" height="15.0" fill="rgb(248,46,44)" rx="2" ry="2" />
<text  x="813.29" y="95.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (28 samples, 0.06%)</title><rect x="443.6" y="293" width="0.7" height="15.0" fill="rgb(213,82,19)" rx="2" ry="2" />
<text  x="446.62" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (797 samples, 1.67%)</title><rect x="558.5" y="373" width="19.7" height="15.0" fill="rgb(246,127,50)" rx="2" ry="2" />
<text  x="561.46" y="383.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (27 samples, 0.06%)</title><rect x="693.4" y="309" width="0.7" height="15.0" fill="rgb(233,50,0)" rx="2" ry="2" />
<text  x="696.44" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (53 samples, 0.11%)</title><rect x="767.2" y="341" width="1.4" height="15.0" fill="rgb(241,91,0)" rx="2" ry="2" />
<text  x="770.24" y="351.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="584.1" y="357" width="1.2" height="15.0" fill="rgb(241,85,42)" rx="2" ry="2" />
<text  x="587.08" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="1065.5" y="277" width="0.2" height="15.0" fill="rgb(226,164,9)" rx="2" ry="2" />
<text  x="1068.51" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="872.8" y="405" width="0.3" height="15.0" fill="rgb(219,22,30)" rx="2" ry="2" />
<text  x="875.78" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30 samples, 0.06%)</title><rect x="689.3" y="469" width="0.8" height="15.0" fill="rgb(235,166,32)" rx="2" ry="2" />
<text  x="692.35" y="479.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (8 samples, 0.02%)</title><rect x="911.5" y="357" width="0.2" height="15.0" fill="rgb(231,97,25)" rx="2" ry="2" />
<text  x="914.49" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="864.2" y="405" width="0.5" height="15.0" fill="rgb(251,155,25)" rx="2" ry="2" />
<text  x="867.20" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%)</title><rect x="639.1" y="485" width="0.2" height="15.0" fill="rgb(237,183,27)" rx="2" ry="2" />
<text  x="642.13" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="872.8" y="437" width="0.3" height="15.0" fill="rgb(206,67,49)" rx="2" ry="2" />
<text  x="875.78" y="447.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (34 samples, 0.07%)</title><rect x="512.7" y="197" width="0.9" height="15.0" fill="rgb(214,194,37)" rx="2" ry="2" />
<text  x="515.73" y="207.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="813.8" y="245" width="0.9" height="15.0" fill="rgb(231,201,36)" rx="2" ry="2" />
<text  x="816.81" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (68 samples, 0.14%)</title><rect x="126.4" y="293" width="1.7" height="15.0" fill="rgb(251,172,46)" rx="2" ry="2" />
<text  x="129.38" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="484.3" y="181" width="0.2" height="15.0" fill="rgb(228,59,25)" rx="2" ry="2" />
<text  x="487.27" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="811.0" y="197" width="0.2" height="15.0" fill="rgb(225,195,0)" rx="2" ry="2" />
<text  x="814.03" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (85 samples, 0.18%)</title><rect x="597.6" y="405" width="2.1" height="15.0" fill="rgb(231,77,18)" rx="2" ry="2" />
<text  x="600.57" y="415.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (5 samples, 0.01%)</title><rect x="396.4" y="181" width="0.2" height="15.0" fill="rgb(237,227,42)" rx="2" ry="2" />
<text  x="399.43" y="191.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="1063.9" y="277" width="0.5" height="15.0" fill="rgb(236,166,22)" rx="2" ry="2" />
<text  x="1066.88" y="287.5" ></text>
</g>
<g >
<title>operator new (68 samples, 0.14%)</title><rect x="279.3" y="277" width="1.7" height="15.0" fill="rgb(253,94,44)" rx="2" ry="2" />
<text  x="282.31" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="1138.6" y="293" width="0.3" height="15.0" fill="rgb(240,56,51)" rx="2" ry="2" />
<text  x="1141.64" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (215 samples, 0.45%)</title><rect x="223.3" y="213" width="5.3" height="15.0" fill="rgb(217,136,36)" rx="2" ry="2" />
<text  x="226.26" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1138.6" y="453" width="0.9" height="15.0" fill="rgb(240,181,23)" rx="2" ry="2" />
<text  x="1141.59" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (27 samples, 0.06%)</title><rect x="659.0" y="469" width="0.7" height="15.0" fill="rgb(224,215,13)" rx="2" ry="2" />
<text  x="662.04" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (18 samples, 0.04%)</title><rect x="1066.2" y="325" width="0.4" height="15.0" fill="rgb(211,164,39)" rx="2" ry="2" />
<text  x="1069.16" y="335.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (17 samples, 0.04%)</title><rect x="739.0" y="405" width="0.4" height="15.0" fill="rgb(243,184,31)" rx="2" ry="2" />
<text  x="741.99" y="415.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="905.6" y="309" width="0.2" height="15.0" fill="rgb(249,49,7)" rx="2" ry="2" />
<text  x="908.64" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,400 samples, 2.94%)</title><rect x="557.9" y="405" width="34.7" height="15.0" fill="rgb(243,75,12)" rx="2" ry="2" />
<text  x="560.89" y="415.5" >fl..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (24 samples, 0.05%)</title><rect x="951.0" y="357" width="0.6" height="15.0" fill="rgb(243,148,2)" rx="2" ry="2" />
<text  x="953.97" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="1138.9" y="261" width="0.5" height="15.0" fill="rgb(209,13,30)" rx="2" ry="2" />
<text  x="1141.89" y="271.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (23 samples, 0.05%)</title><rect x="1097.6" y="309" width="0.6" height="15.0" fill="rgb(226,217,2)" rx="2" ry="2" />
<text  x="1100.63" y="319.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (218 samples, 0.46%)</title><rect x="348.9" y="165" width="5.4" height="15.0" fill="rgb(217,138,20)" rx="2" ry="2" />
<text  x="351.89" y="175.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (71 samples, 0.15%)</title><rect x="506.4" y="229" width="1.8" height="15.0" fill="rgb(251,136,43)" rx="2" ry="2" />
<text  x="509.44" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (127 samples, 0.27%)</title><rect x="192.6" y="37" width="3.1" height="15.0" fill="rgb(240,42,37)" rx="2" ry="2" />
<text  x="195.56" y="47.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;dht::token const&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;&amp;, db::read_repair_decision&amp;&gt; (6 samples, 0.01%)</title><rect x="1068.5" y="341" width="0.1" height="15.0" fill="rgb(235,221,7)" rx="2" ry="2" />
<text  x="1071.46" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%)</title><rect x="638.1" y="485" width="0.2" height="15.0" fill="rgb(222,189,42)" rx="2" ry="2" />
<text  x="641.11" y="495.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (23 samples, 0.05%)</title><rect x="591.4" y="389" width="0.6" height="15.0" fill="rgb(238,7,33)" rx="2" ry="2" />
<text  x="594.44" y="399.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (5 samples, 0.01%)</title><rect x="943.4" y="405" width="0.1" height="15.0" fill="rgb(211,110,38)" rx="2" ry="2" />
<text  x="946.36" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="566.9" y="261" width="0.1" height="15.0" fill="rgb(219,8,17)" rx="2" ry="2" />
<text  x="569.87" y="271.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (55 samples, 0.12%)</title><rect x="76.5" y="389" width="1.4" height="15.0" fill="rgb(223,228,17)" rx="2" ry="2" />
<text  x="79.51" y="399.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (6 samples, 0.01%)</title><rect x="24.6" y="357" width="0.1" height="15.0" fill="rgb(205,148,9)" rx="2" ry="2" />
<text  x="27.56" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (23,655 samples, 49.71%)</title><rect x="49.9" y="501" width="586.6" height="15.0" fill="rgb(222,80,30)" rx="2" ry="2" />
<text  x="52.88" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="960.9" y="405" width="0.2" height="15.0" fill="rgb(220,35,6)" rx="2" ry="2" />
<text  x="963.91" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (34 samples, 0.07%)</title><rect x="670.1" y="437" width="0.9" height="15.0" fill="rgb(219,94,16)" rx="2" ry="2" />
<text  x="673.13" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (46 samples, 0.10%)</title><rect x="295.1" y="261" width="1.1" height="15.0" fill="rgb(211,182,48)" rx="2" ry="2" />
<text  x="298.06" y="271.5" ></text>
</g>
<g >
<title>cql3::query_options::prepare (5 samples, 0.01%)</title><rect x="729.6" y="453" width="0.1" height="15.0" fill="rgb(246,140,26)" rx="2" ry="2" />
<text  x="732.57" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (37 samples, 0.08%)</title><rect x="744.1" y="373" width="0.9" height="15.0" fill="rgb(247,120,30)" rx="2" ry="2" />
<text  x="747.10" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (95 samples, 0.20%)</title><rect x="842.5" y="437" width="2.3" height="15.0" fill="rgb(248,61,45)" rx="2" ry="2" />
<text  x="845.48" y="447.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (165 samples, 0.35%)</title><rect x="471.2" y="277" width="4.1" height="15.0" fill="rgb(247,198,37)" rx="2" ry="2" />
<text  x="474.17" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (33 samples, 0.07%)</title><rect x="573.1" y="261" width="0.9" height="15.0" fill="rgb(212,88,41)" rx="2" ry="2" />
<text  x="576.14" y="271.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="503.6" y="229" width="0.1" height="15.0" fill="rgb(229,216,52)" rx="2" ry="2" />
<text  x="506.56" y="239.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="38.4" y="453" width="0.4" height="15.0" fill="rgb(215,57,38)" rx="2" ry="2" />
<text  x="41.37" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (9 samples, 0.02%)</title><rect x="421.1" y="261" width="0.2" height="15.0" fill="rgb(245,120,1)" rx="2" ry="2" />
<text  x="424.11" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="259.9" y="277" width="0.3" height="15.0" fill="rgb(240,129,32)" rx="2" ry="2" />
<text  x="262.87" y="287.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (35 samples, 0.07%)</title><rect x="580.0" y="357" width="0.9" height="15.0" fill="rgb(226,56,47)" rx="2" ry="2" />
<text  x="583.04" y="367.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (15 samples, 0.03%)</title><rect x="373.0" y="181" width="0.4" height="15.0" fill="rgb(213,212,7)" rx="2" ry="2" />
<text  x="376.05" y="191.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (11 samples, 0.02%)</title><rect x="62.0" y="453" width="0.3" height="15.0" fill="rgb(226,0,30)" rx="2" ry="2" />
<text  x="65.03" y="463.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (12 samples, 0.03%)</title><rect x="821.6" y="341" width="0.3" height="15.0" fill="rgb(254,118,48)" rx="2" ry="2" />
<text  x="824.62" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="672.2" y="485" width="0.1" height="15.0" fill="rgb(207,63,10)" rx="2" ry="2" />
<text  x="675.16" y="495.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="621.6" y="421" width="0.9" height="15.0" fill="rgb(238,37,12)" rx="2" ry="2" />
<text  x="624.57" y="431.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (8 samples, 0.02%)</title><rect x="535.0" y="309" width="0.2" height="15.0" fill="rgb(219,116,45)" rx="2" ry="2" />
<text  x="538.00" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (14 samples, 0.03%)</title><rect x="226.9" y="133" width="0.3" height="15.0" fill="rgb(213,104,28)" rx="2" ry="2" />
<text  x="229.89" y="143.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (11 samples, 0.02%)</title><rect x="81.7" y="453" width="0.3" height="15.0" fill="rgb(250,137,15)" rx="2" ry="2" />
<text  x="84.69" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (6 samples, 0.01%)</title><rect x="452.5" y="293" width="0.1" height="15.0" fill="rgb(240,83,29)" rx="2" ry="2" />
<text  x="455.50" y="303.5" ></text>
</g>
<g >
<title>database::has_keyspace (134 samples, 0.28%)</title><rect x="847.5" y="421" width="3.3" height="15.0" fill="rgb(210,20,53)" rx="2" ry="2" />
<text  x="850.46" y="431.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="803.5" y="117" width="0.2" height="15.0" fill="rgb(249,226,26)" rx="2" ry="2" />
<text  x="806.47" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (129 samples, 0.27%)</title><rect x="1125.8" y="405" width="3.2" height="15.0" fill="rgb(254,122,17)" rx="2" ry="2" />
<text  x="1128.82" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (5 samples, 0.01%)</title><rect x="110.1" y="421" width="0.1" height="15.0" fill="rgb(249,220,48)" rx="2" ry="2" />
<text  x="113.06" y="431.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (55 samples, 0.12%)</title><rect x="957.1" y="389" width="1.4" height="15.0" fill="rgb(213,21,38)" rx="2" ry="2" />
<text  x="960.09" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="579.9" y="357" width="0.1" height="15.0" fill="rgb(238,13,25)" rx="2" ry="2" />
<text  x="582.91" y="367.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (158 samples, 0.33%)</title><rect x="806.9" y="165" width="4.0" height="15.0" fill="rgb(246,148,40)" rx="2" ry="2" />
<text  x="809.94" y="175.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="96.4" y="437" width="0.6" height="15.0" fill="rgb(210,137,1)" rx="2" ry="2" />
<text  x="99.45" y="447.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%)</title><rect x="1102.0" y="341" width="0.3" height="15.0" fill="rgb(211,23,46)" rx="2" ry="2" />
<text  x="1105.04" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1146.8" y="485" width="0.2" height="15.0" fill="rgb(247,31,41)" rx="2" ry="2" />
<text  x="1149.83" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,087 samples, 6.49%)</title><rect x="763.0" y="421" width="76.6" height="15.0" fill="rgb(215,184,32)" rx="2" ry="2" />
<text  x="766.05" y="431.5" >cql3::st..</text>
</g>
<g >
<title>standard_allocation_strategy::free (9 samples, 0.02%)</title><rect x="409.2" y="197" width="0.2" height="15.0" fill="rgb(247,154,31)" rx="2" ry="2" />
<text  x="412.15" y="207.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.03%)</title><rect x="42.1" y="453" width="0.4" height="15.0" fill="rgb(216,126,35)" rx="2" ry="2" />
<text  x="45.14" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,800 samples, 10.09%)</title><rect x="297.4" y="277" width="119.0" height="15.0" fill="rgb(208,125,44)" rx="2" ry="2" />
<text  x="300.36" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (116 samples, 0.24%)</title><rect x="1114.5" y="373" width="2.8" height="15.0" fill="rgb(227,104,18)" rx="2" ry="2" />
<text  x="1117.46" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (7 samples, 0.01%)</title><rect x="222.2" y="213" width="0.2" height="15.0" fill="rgb(244,131,4)" rx="2" ry="2" />
<text  x="225.25" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (20 samples, 0.04%)</title><rect x="331.8" y="181" width="0.5" height="15.0" fill="rgb(235,56,50)" rx="2" ry="2" />
<text  x="334.76" y="191.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (6 samples, 0.01%)</title><rect x="612.9" y="421" width="0.1" height="15.0" fill="rgb(222,115,35)" rx="2" ry="2" />
<text  x="615.87" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (22 samples, 0.05%)</title><rect x="1138.9" y="229" width="0.5" height="15.0" fill="rgb(248,189,5)" rx="2" ry="2" />
<text  x="1141.89" y="239.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (15 samples, 0.03%)</title><rect x="568.1" y="293" width="0.4" height="15.0" fill="rgb(238,88,48)" rx="2" ry="2" />
<text  x="571.08" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (6 samples, 0.01%)</title><rect x="771.1" y="405" width="0.1" height="15.0" fill="rgb(251,50,15)" rx="2" ry="2" />
<text  x="774.06" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="320.3" y="149" width="0.2" height="15.0" fill="rgb(226,5,47)" rx="2" ry="2" />
<text  x="323.30" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (19 samples, 0.04%)</title><rect x="752.0" y="293" width="0.5" height="15.0" fill="rgb(249,28,45)" rx="2" ry="2" />
<text  x="754.99" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (108 samples, 0.23%)</title><rect x="860.2" y="389" width="2.7" height="15.0" fill="rgb(218,211,2)" rx="2" ry="2" />
<text  x="863.23" y="399.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="495.3" y="309" width="0.2" height="15.0" fill="rgb(220,34,16)" rx="2" ry="2" />
<text  x="498.25" y="319.5" ></text>
</g>
<g >
<title>operator delete (73 samples, 0.15%)</title><rect x="562.8" y="325" width="1.8" height="15.0" fill="rgb(243,218,3)" rx="2" ry="2" />
<text  x="565.75" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (348 samples, 0.73%)</title><rect x="802.2" y="181" width="8.7" height="15.0" fill="rgb(212,220,28)" rx="2" ry="2" />
<text  x="805.23" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="664.5" y="453" width="0.1" height="15.0" fill="rgb(252,118,6)" rx="2" ry="2" />
<text  x="667.45" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (157 samples, 0.33%)</title><rect x="157.7" y="229" width="3.9" height="15.0" fill="rgb(211,225,33)" rx="2" ry="2" />
<text  x="160.67" y="239.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="920.0" y="341" width="0.2" height="15.0" fill="rgb(241,17,34)" rx="2" ry="2" />
<text  x="922.97" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (34 samples, 0.07%)</title><rect x="959.7" y="373" width="0.9" height="15.0" fill="rgb(245,195,45)" rx="2" ry="2" />
<text  x="962.72" y="383.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (5 samples, 0.01%)</title><rect x="1138.7" y="229" width="0.2" height="15.0" fill="rgb(206,157,53)" rx="2" ry="2" />
<text  x="1141.74" y="239.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,055 samples, 2.22%)</title><rect x="492.9" y="325" width="26.2" height="15.0" fill="rgb(210,110,42)" rx="2" ry="2" />
<text  x="495.92" y="335.5" >m..</text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (92 samples, 0.19%)</title><rect x="683.9" y="485" width="2.3" height="15.0" fill="rgb(249,227,21)" rx="2" ry="2" />
<text  x="686.92" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (52 samples, 0.11%)</title><rect x="574.0" y="293" width="1.3" height="15.0" fill="rgb(243,26,8)" rx="2" ry="2" />
<text  x="577.01" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (8 samples, 0.02%)</title><rect x="589.1" y="341" width="0.2" height="15.0" fill="rgb(228,171,54)" rx="2" ry="2" />
<text  x="592.06" y="351.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="222.1" y="213" width="0.1" height="15.0" fill="rgb(233,28,27)" rx="2" ry="2" />
<text  x="225.12" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (41 samples, 0.09%)</title><rect x="615.8" y="437" width="1.1" height="15.0" fill="rgb(216,201,31)" rx="2" ry="2" />
<text  x="618.85" y="447.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (10 samples, 0.02%)</title><rect x="49.0" y="485" width="0.3" height="15.0" fill="rgb(210,214,35)" rx="2" ry="2" />
<text  x="52.03" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (33 samples, 0.07%)</title><rect x="229.2" y="213" width="0.8" height="15.0" fill="rgb(229,50,51)" rx="2" ry="2" />
<text  x="232.22" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (15 samples, 0.03%)</title><rect x="840.2" y="405" width="0.3" height="15.0" fill="rgb(216,103,31)" rx="2" ry="2" />
<text  x="843.17" y="415.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (23 samples, 0.05%)</title><rect x="291.0" y="373" width="0.6" height="15.0" fill="rgb(243,38,34)" rx="2" ry="2" />
<text  x="294.01" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (31 samples, 0.07%)</title><rect x="793.8" y="229" width="0.7" height="15.0" fill="rgb(245,94,0)" rx="2" ry="2" />
<text  x="796.77" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="646.6" y="485" width="0.2" height="15.0" fill="rgb(231,10,46)" rx="2" ry="2" />
<text  x="649.62" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (5 samples, 0.01%)</title><rect x="711.9" y="421" width="0.1" height="15.0" fill="rgb(246,10,23)" rx="2" ry="2" />
<text  x="714.91" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="592.4" y="373" width="0.1" height="15.0" fill="rgb(239,117,36)" rx="2" ry="2" />
<text  x="595.41" y="383.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (542 samples, 1.14%)</title><rect x="914.4" y="389" width="13.5" height="15.0" fill="rgb(206,188,16)" rx="2" ry="2" />
<text  x="917.42" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="777.5" y="357" width="0.2" height="15.0" fill="rgb(246,47,50)" rx="2" ry="2" />
<text  x="780.51" y="367.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (133 samples, 0.28%)</title><rect x="1152.2" y="469" width="3.3" height="15.0" fill="rgb(214,166,43)" rx="2" ry="2" />
<text  x="1155.18" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (59 samples, 0.12%)</title><rect x="264.1" y="325" width="1.5" height="15.0" fill="rgb(226,49,14)" rx="2" ry="2" />
<text  x="267.13" y="335.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (10,633 samples, 22.35%)</title><rect x="874.2" y="485" width="263.7" height="15.0" fill="rgb(235,71,10)" rx="2" ry="2" />
<text  x="877.19" y="495.5" >seastar::concrete_execution_stage&lt;s..</text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (19 samples, 0.04%)</title><rect x="857.0" y="341" width="0.4" height="15.0" fill="rgb(239,193,5)" rx="2" ry="2" />
<text  x="859.96" y="351.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (8 samples, 0.02%)</title><rect x="1036.9" y="197" width="0.2" height="15.0" fill="rgb(253,10,44)" rx="2" ry="2" />
<text  x="1039.90" y="207.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (42 samples, 0.09%)</title><rect x="827.5" y="373" width="1.1" height="15.0" fill="rgb(215,72,1)" rx="2" ry="2" />
<text  x="830.52" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (7 samples, 0.01%)</title><rect x="605.5" y="373" width="0.2" height="15.0" fill="rgb(246,97,37)" rx="2" ry="2" />
<text  x="608.53" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (77 samples, 0.16%)</title><rect x="153.1" y="213" width="1.9" height="15.0" fill="rgb(216,158,25)" rx="2" ry="2" />
<text  x="156.11" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (8 samples, 0.02%)</title><rect x="1042.2" y="245" width="0.2" height="15.0" fill="rgb(228,31,14)" rx="2" ry="2" />
<text  x="1045.23" y="255.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (9 samples, 0.02%)</title><rect x="1141.9" y="501" width="0.2" height="15.0" fill="rgb(207,60,13)" rx="2" ry="2" />
<text  x="1144.87" y="511.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (778 samples, 1.64%)</title><rect x="558.9" y="357" width="19.3" height="15.0" fill="rgb(221,64,8)" rx="2" ry="2" />
<text  x="561.93" y="367.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (29 samples, 0.06%)</title><rect x="748.5" y="373" width="0.7" height="15.0" fill="rgb(243,180,43)" rx="2" ry="2" />
<text  x="751.52" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (110 samples, 0.23%)</title><rect x="225.2" y="181" width="2.7" height="15.0" fill="rgb(253,203,15)" rx="2" ry="2" />
<text  x="228.20" y="191.5" ></text>
</g>
<g >
<title>dht::tri_compare (12 samples, 0.03%)</title><rect x="1094.1" y="245" width="0.3" height="15.0" fill="rgb(228,170,23)" rx="2" ry="2" />
<text  x="1097.08" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1054.7" y="293" width="0.2" height="15.0" fill="rgb(222,145,30)" rx="2" ry="2" />
<text  x="1057.70" y="303.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (9 samples, 0.02%)</title><rect x="24.9" y="485" width="0.2" height="15.0" fill="rgb(242,225,19)" rx="2" ry="2" />
<text  x="27.85" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (5 samples, 0.01%)</title><rect x="288.7" y="389" width="0.2" height="15.0" fill="rgb(222,159,50)" rx="2" ry="2" />
<text  x="291.73" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (82 samples, 0.17%)</title><rect x="42.0" y="469" width="2.1" height="15.0" fill="rgb(243,135,50)" rx="2" ry="2" />
<text  x="45.04" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,923 samples, 14.55%)</title><rect x="114.4" y="389" width="171.7" height="15.0" fill="rgb(221,95,35)" rx="2" ry="2" />
<text  x="117.40" y="399.5" >merging_reader&lt;mutatio..</text>
</g>
<g >
<title>single_node_cql_env::make_query_state (427 samples, 0.90%)</title><rect x="847.2" y="437" width="10.6" height="15.0" fill="rgb(225,88,18)" rx="2" ry="2" />
<text  x="850.21" y="447.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (76 samples, 0.16%)</title><rect x="101.7" y="405" width="1.9" height="15.0" fill="rgb(214,95,26)" rx="2" ry="2" />
<text  x="104.70" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%)</title><rect x="766.5" y="357" width="0.2" height="15.0" fill="rgb(206,19,23)" rx="2" ry="2" />
<text  x="769.55" y="367.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (33 samples, 0.07%)</title><rect x="1140.5" y="485" width="0.8" height="15.0" fill="rgb(238,63,16)" rx="2" ry="2" />
<text  x="1143.45" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (7,025 samples, 14.76%)</title><rect x="112.8" y="405" width="174.2" height="15.0" fill="rgb(205,68,34)" rx="2" ry="2" />
<text  x="115.84" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (76 samples, 0.16%)</title><rect x="690.2" y="485" width="1.9" height="15.0" fill="rgb(212,6,36)" rx="2" ry="2" />
<text  x="693.19" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (91 samples, 0.19%)</title><rect x="668.7" y="469" width="2.3" height="15.0" fill="rgb(218,13,53)" rx="2" ry="2" />
<text  x="671.72" y="479.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (27 samples, 0.06%)</title><rect x="565.4" y="293" width="0.7" height="15.0" fill="rgb(252,41,21)" rx="2" ry="2" />
<text  x="568.43" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (17 samples, 0.04%)</title><rect x="711.6" y="437" width="0.4" height="15.0" fill="rgb(229,79,1)" rx="2" ry="2" />
<text  x="714.62" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="665.1" y="469" width="0.2" height="15.0" fill="rgb(213,20,23)" rx="2" ry="2" />
<text  x="668.15" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="1159.5" y="405" width="0.7" height="15.0" fill="rgb(232,210,35)" rx="2" ry="2" />
<text  x="1162.55" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (63 samples, 0.13%)</title><rect x="902.8" y="277" width="1.6" height="15.0" fill="rgb(215,25,15)" rx="2" ry="2" />
<text  x="905.81" y="287.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (12 samples, 0.03%)</title><rect x="1034.3" y="133" width="0.3" height="15.0" fill="rgb(228,72,49)" rx="2" ry="2" />
<text  x="1037.32" y="143.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="263.2" y="309" width="0.2" height="15.0" fill="rgb(221,137,52)" rx="2" ry="2" />
<text  x="266.17" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%)</title><rect x="770.3" y="325" width="0.2" height="15.0" fill="rgb(238,221,1)" rx="2" ry="2" />
<text  x="773.34" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%)</title><rect x="866.8" y="421" width="0.9" height="15.0" fill="rgb(210,71,27)" rx="2" ry="2" />
<text  x="869.80" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (76 samples, 0.16%)</title><rect x="726.0" y="437" width="1.9" height="15.0" fill="rgb(227,106,39)" rx="2" ry="2" />
<text  x="729.00" y="447.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="661.6" y="437" width="0.2" height="15.0" fill="rgb(238,135,43)" rx="2" ry="2" />
<text  x="664.65" y="447.5" ></text>
</g>
<g >
<title>reader_permit::set_max_result_size (5 samples, 0.01%)</title><rect x="66.0" y="453" width="0.1" height="15.0" fill="rgb(222,89,28)" rx="2" ry="2" />
<text  x="68.99" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (19 samples, 0.04%)</title><rect x="1141.4" y="501" width="0.5" height="15.0" fill="rgb(248,48,1)" rx="2" ry="2" />
<text  x="1144.40" y="511.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (23 samples, 0.05%)</title><rect x="139.3" y="229" width="0.6" height="15.0" fill="rgb(228,195,41)" rx="2" ry="2" />
<text  x="142.35" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (27 samples, 0.06%)</title><rect x="115.0" y="373" width="0.6" height="15.0" fill="rgb(252,126,13)" rx="2" ry="2" />
<text  x="117.97" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="708.3" y="453" width="0.1" height="15.0" fill="rgb(236,97,25)" rx="2" ry="2" />
<text  x="711.27" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (12 samples, 0.03%)</title><rect x="439.3" y="341" width="0.3" height="15.0" fill="rgb(223,5,7)" rx="2" ry="2" />
<text  x="442.31" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (76 samples, 0.16%)</title><rect x="909.4" y="357" width="1.8" height="15.0" fill="rgb(222,152,41)" rx="2" ry="2" />
<text  x="912.36" y="367.5" ></text>
</g>
<g >
<title>__tls_init (20 samples, 0.04%)</title><rect x="147.5" y="229" width="0.5" height="15.0" fill="rgb(229,72,32)" rx="2" ry="2" />
<text  x="150.48" y="239.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (28 samples, 0.06%)</title><rect x="873.5" y="453" width="0.7" height="15.0" fill="rgb(250,219,29)" rx="2" ry="2" />
<text  x="876.50" y="463.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (8 samples, 0.02%)</title><rect x="739.2" y="389" width="0.2" height="15.0" fill="rgb(245,164,2)" rx="2" ry="2" />
<text  x="742.22" y="399.5" ></text>
</g>
<g >
<title>[unknown] (292 samples, 0.61%)</title><rect x="10.2" y="597" width="7.2" height="15.0" fill="rgb(205,107,38)" rx="2" ry="2" />
<text  x="13.17" y="607.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (44 samples, 0.09%)</title><rect x="482.1" y="213" width="1.1" height="15.0" fill="rgb(254,17,18)" rx="2" ry="2" />
<text  x="485.11" y="223.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (5 samples, 0.01%)</title><rect x="1098.8" y="325" width="0.1" height="15.0" fill="rgb(238,203,35)" rx="2" ry="2" />
<text  x="1101.79" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (15 samples, 0.03%)</title><rect x="869.9" y="485" width="0.3" height="15.0" fill="rgb(228,12,47)" rx="2" ry="2" />
<text  x="872.85" y="495.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%)</title><rect x="1067.9" y="325" width="0.2" height="15.0" fill="rgb(216,5,51)" rx="2" ry="2" />
<text  x="1070.94" y="335.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (6 samples, 0.01%)</title><rect x="25.9" y="517" width="0.1" height="15.0" fill="rgb(230,213,17)" rx="2" ry="2" />
<text  x="28.87" y="527.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (19 samples, 0.04%)</title><rect x="1176.2" y="469" width="0.4" height="15.0" fill="rgb(245,224,8)" rx="2" ry="2" />
<text  x="1179.16" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (48 samples, 0.10%)</title><rect x="226.1" y="149" width="1.2" height="15.0" fill="rgb(232,56,36)" rx="2" ry="2" />
<text  x="229.09" y="159.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (163 samples, 0.34%)</title><rect x="923.6" y="341" width="4.0" height="15.0" fill="rgb(239,25,15)" rx="2" ry="2" />
<text  x="926.57" y="351.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (7 samples, 0.01%)</title><rect x="24.5" y="453" width="0.2" height="15.0" fill="rgb(245,205,18)" rx="2" ry="2" />
<text  x="27.53" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (77 samples, 0.16%)</title><rect x="789.5" y="293" width="1.9" height="15.0" fill="rgb(228,41,43)" rx="2" ry="2" />
<text  x="792.51" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="819.1" y="309" width="0.2" height="15.0" fill="rgb(219,109,33)" rx="2" ry="2" />
<text  x="822.14" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="632.1" y="437" width="0.1" height="15.0" fill="rgb(222,111,52)" rx="2" ry="2" />
<text  x="635.06" y="447.5" ></text>
</g>
<g >
<title>operator new (64 samples, 0.13%)</title><rect x="789.6" y="277" width="1.6" height="15.0" fill="rgb(229,83,50)" rx="2" ry="2" />
<text  x="792.61" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (283 samples, 0.59%)</title><rect x="97.3" y="437" width="7.0" height="15.0" fill="rgb(211,171,52)" rx="2" ry="2" />
<text  x="100.29" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (54 samples, 0.11%)</title><rect x="1025.1" y="213" width="1.3" height="15.0" fill="rgb(224,74,6)" rx="2" ry="2" />
<text  x="1028.09" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (147 samples, 0.31%)</title><rect x="822.6" y="357" width="3.7" height="15.0" fill="rgb(250,100,42)" rx="2" ry="2" />
<text  x="825.64" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (38 samples, 0.08%)</title><rect x="1104.5" y="389" width="1.0" height="15.0" fill="rgb(230,29,10)" rx="2" ry="2" />
<text  x="1107.55" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (20 samples, 0.04%)</title><rect x="298.2" y="261" width="0.5" height="15.0" fill="rgb(216,196,48)" rx="2" ry="2" />
<text  x="301.23" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1172.8" y="421" width="0.1" height="15.0" fill="rgb(254,60,10)" rx="2" ry="2" />
<text  x="1175.77" y="431.5" ></text>
</g>
<g >
<title>operator new (62 samples, 0.13%)</title><rect x="863.1" y="437" width="1.6" height="15.0" fill="rgb(230,97,49)" rx="2" ry="2" />
<text  x="866.13" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="288.9" y="389" width="0.1" height="15.0" fill="rgb(236,80,41)" rx="2" ry="2" />
<text  x="291.86" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="1052.3" y="213" width="0.4" height="15.0" fill="rgb(241,22,19)" rx="2" ry="2" />
<text  x="1055.32" y="223.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (8 samples, 0.02%)</title><rect x="610.3" y="421" width="0.2" height="15.0" fill="rgb(232,205,21)" rx="2" ry="2" />
<text  x="613.27" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="788.4" y="325" width="0.1" height="15.0" fill="rgb(217,36,37)" rx="2" ry="2" />
<text  x="791.42" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (19 samples, 0.04%)</title><rect x="1116.9" y="357" width="0.4" height="15.0" fill="rgb(243,168,4)" rx="2" ry="2" />
<text  x="1119.87" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (181 samples, 0.38%)</title><rect x="734.4" y="357" width="4.4" height="15.0" fill="rgb(214,227,26)" rx="2" ry="2" />
<text  x="737.36" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (83 samples, 0.17%)</title><rect x="63.7" y="437" width="2.1" height="15.0" fill="rgb(245,49,39)" rx="2" ry="2" />
<text  x="66.71" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="429.3" y="405" width="0.2" height="15.0" fill="rgb(240,78,6)" rx="2" ry="2" />
<text  x="432.34" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (153 samples, 0.32%)</title><rect x="766.7" y="357" width="3.8" height="15.0" fill="rgb(228,116,22)" rx="2" ry="2" />
<text  x="769.72" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="142.1" y="261" width="0.1" height="15.0" fill="rgb(221,119,17)" rx="2" ry="2" />
<text  x="145.05" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="537.8" y="277" width="0.3" height="15.0" fill="rgb(211,113,54)" rx="2" ry="2" />
<text  x="540.81" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (63 samples, 0.13%)</title><rect x="843.1" y="405" width="1.5" height="15.0" fill="rgb(208,108,52)" rx="2" ry="2" />
<text  x="846.07" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="591.2" y="373" width="0.2" height="15.0" fill="rgb(233,20,3)" rx="2" ry="2" />
<text  x="594.20" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (18 samples, 0.04%)</title><rect x="363.0" y="149" width="0.4" height="15.0" fill="rgb(240,149,39)" rx="2" ry="2" />
<text  x="365.95" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (17 samples, 0.04%)</title><rect x="1150.7" y="485" width="0.4" height="15.0" fill="rgb(226,95,20)" rx="2" ry="2" />
<text  x="1153.67" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1075.9" y="293" width="0.2" height="15.0" fill="rgb(208,107,29)" rx="2" ry="2" />
<text  x="1078.88" y="303.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.03%)</title><rect x="12.3" y="581" width="0.3" height="15.0" fill="rgb(252,151,42)" rx="2" ry="2" />
<text  x="15.26" y="591.5" ></text>
</g>
<g >
<title>query::result::result (36 samples, 0.08%)</title><rect x="600.0" y="421" width="0.9" height="15.0" fill="rgb(232,217,33)" rx="2" ry="2" />
<text  x="603.05" y="431.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (5 samples, 0.01%)</title><rect x="309.2" y="197" width="0.1" height="15.0" fill="rgb(223,200,49)" rx="2" ry="2" />
<text  x="312.22" y="207.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="463.3" y="325" width="0.2" height="15.0" fill="rgb(245,87,4)" rx="2" ry="2" />
<text  x="466.26" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (15 samples, 0.03%)</title><rect x="299.9" y="245" width="0.3" height="15.0" fill="rgb(211,60,25)" rx="2" ry="2" />
<text  x="302.87" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="795.9" y="229" width="0.4" height="15.0" fill="rgb(227,91,5)" rx="2" ry="2" />
<text  x="798.86" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="285.6" y="357" width="0.5" height="15.0" fill="rgb(233,121,27)" rx="2" ry="2" />
<text  x="288.63" y="367.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (33 samples, 0.07%)</title><rect x="754.8" y="261" width="0.8" height="15.0" fill="rgb(247,122,3)" rx="2" ry="2" />
<text  x="757.77" y="271.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (9 samples, 0.02%)</title><rect x="1055.6" y="293" width="0.2" height="15.0" fill="rgb(233,0,53)" rx="2" ry="2" />
<text  x="1058.57" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (583 samples, 1.23%)</title><rect x="234.8" y="261" width="14.5" height="15.0" fill="rgb(249,229,51)" rx="2" ry="2" />
<text  x="237.85" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (151 samples, 0.32%)</title><rect x="549.6" y="389" width="3.8" height="15.0" fill="rgb(208,145,54)" rx="2" ry="2" />
<text  x="552.61" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (6 samples, 0.01%)</title><rect x="1111.4" y="357" width="0.1" height="15.0" fill="rgb(220,171,48)" rx="2" ry="2" />
<text  x="1114.39" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="946.3" y="357" width="0.6" height="15.0" fill="rgb(246,208,4)" rx="2" ry="2" />
<text  x="949.28" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (52 samples, 0.11%)</title><rect x="421.3" y="261" width="1.3" height="15.0" fill="rgb(221,196,16)" rx="2" ry="2" />
<text  x="424.33" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,289 samples, 11.12%)</title><rect x="291.8" y="357" width="131.2" height="15.0" fill="rgb(232,25,42)" rx="2" ry="2" />
<text  x="294.81" y="367.5" >flat_mutation_re..</text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,316 samples, 2.77%)</title><rect x="336.7" y="181" width="32.7" height="15.0" fill="rgb(226,114,7)" rx="2" ry="2" />
<text  x="339.74" y="191.5" >wr..</text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (17 samples, 0.04%)</title><rect x="803.7" y="117" width="0.5" height="15.0" fill="rgb(229,63,29)" rx="2" ry="2" />
<text  x="806.74" y="127.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (73 samples, 0.15%)</title><rect x="76.1" y="405" width="1.8" height="15.0" fill="rgb(235,51,20)" rx="2" ry="2" />
<text  x="79.06" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="42.6" y="437" width="0.4" height="15.0" fill="rgb(223,71,9)" rx="2" ry="2" />
<text  x="45.63" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%)</title><rect x="221.6" y="149" width="0.2" height="15.0" fill="rgb(239,182,20)" rx="2" ry="2" />
<text  x="224.55" y="159.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (17 samples, 0.04%)</title><rect x="161.1" y="213" width="0.4" height="15.0" fill="rgb(252,84,8)" rx="2" ry="2" />
<text  x="164.10" y="223.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (41 samples, 0.09%)</title><rect x="580.9" y="373" width="1.0" height="15.0" fill="rgb(221,52,27)" rx="2" ry="2" />
<text  x="583.91" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (6 samples, 0.01%)</title><rect x="658.9" y="469" width="0.1" height="15.0" fill="rgb(216,189,22)" rx="2" ry="2" />
<text  x="661.90" y="479.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (497 samples, 1.04%)</title><rect x="66.1" y="453" width="12.3" height="15.0" fill="rgb(242,184,42)" rx="2" ry="2" />
<text  x="69.12" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (8 samples, 0.02%)</title><rect x="1131.7" y="405" width="0.2" height="15.0" fill="rgb(252,226,21)" rx="2" ry="2" />
<text  x="1134.75" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="522.7" y="309" width="0.8" height="15.0" fill="rgb(205,44,15)" rx="2" ry="2" />
<text  x="525.65" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="1122.4" y="405" width="0.2" height="15.0" fill="rgb(237,103,15)" rx="2" ry="2" />
<text  x="1125.35" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (6 samples, 0.01%)</title><rect x="20.4" y="325" width="0.1" height="15.0" fill="rgb(246,5,11)" rx="2" ry="2" />
<text  x="23.37" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%)</title><rect x="495.5" y="309" width="0.3" height="15.0" fill="rgb(206,59,17)" rx="2" ry="2" />
<text  x="498.55" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (8 samples, 0.02%)</title><rect x="630.3" y="389" width="0.2" height="15.0" fill="rgb(208,14,1)" rx="2" ry="2" />
<text  x="633.33" y="399.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (117 samples, 0.25%)</title><rect x="535.2" y="293" width="2.9" height="15.0" fill="rgb(250,136,12)" rx="2" ry="2" />
<text  x="538.23" y="303.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (254 samples, 0.53%)</title><rect x="18.2" y="485" width="6.3" height="15.0" fill="rgb(248,89,17)" rx="2" ry="2" />
<text  x="21.21" y="495.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (141 samples, 0.30%)</title><rect x="419.1" y="293" width="3.5" height="15.0" fill="rgb(217,43,11)" rx="2" ry="2" />
<text  x="422.12" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (65 samples, 0.14%)</title><rect x="155.1" y="213" width="1.6" height="15.0" fill="rgb(248,218,0)" rx="2" ry="2" />
<text  x="158.07" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="228.2" y="181" width="0.1" height="15.0" fill="rgb(218,97,14)" rx="2" ry="2" />
<text  x="231.15" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (19 samples, 0.04%)</title><rect x="872.7" y="453" width="0.5" height="15.0" fill="rgb(222,131,45)" rx="2" ry="2" />
<text  x="875.68" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="576.0" y="293" width="0.4" height="15.0" fill="rgb(248,22,13)" rx="2" ry="2" />
<text  x="579.02" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (12 samples, 0.03%)</title><rect x="572.6" y="277" width="0.3" height="15.0" fill="rgb(253,3,20)" rx="2" ry="2" />
<text  x="575.57" y="287.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.16%)</title><rect x="1050.9" y="245" width="1.8" height="15.0" fill="rgb(233,13,22)" rx="2" ry="2" />
<text  x="1053.88" y="255.5" ></text>
</g>
<g >
<title>executor&lt;test_read (5,855 samples, 12.30%)</title><rect x="724.5" y="485" width="145.2" height="15.0" fill="rgb(253,156,47)" rx="2" ry="2" />
<text  x="727.51" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (5 samples, 0.01%)</title><rect x="842.9" y="405" width="0.2" height="15.0" fill="rgb(213,56,11)" rx="2" ry="2" />
<text  x="845.95" y="415.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (13 samples, 0.03%)</title><rect x="872.8" y="421" width="0.3" height="15.0" fill="rgb(239,2,4)" rx="2" ry="2" />
<text  x="875.78" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="1049.6" y="245" width="0.3" height="15.0" fill="rgb(243,115,32)" rx="2" ry="2" />
<text  x="1052.62" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (19 samples, 0.04%)</title><rect x="751.5" y="293" width="0.5" height="15.0" fill="rgb(211,88,52)" rx="2" ry="2" />
<text  x="754.52" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (23 samples, 0.05%)</title><rect x="673.4" y="469" width="0.5" height="15.0" fill="rgb(209,62,0)" rx="2" ry="2" />
<text  x="676.38" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (172 samples, 0.36%)</title><rect x="1022.2" y="229" width="4.2" height="15.0" fill="rgb(250,108,23)" rx="2" ry="2" />
<text  x="1025.17" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%)</title><rect x="968.6" y="373" width="0.1" height="15.0" fill="rgb(217,27,36)" rx="2" ry="2" />
<text  x="971.60" y="383.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="895.6" y="325" width="0.1" height="15.0" fill="rgb(211,136,8)" rx="2" ry="2" />
<text  x="898.60" y="335.5" ></text>
</g>
<g >
<title>fmt::v7::basic_printf_context&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt;::format&lt;fmt::v7::printf_arg_formatter&lt;fmt::v7::detail::buffer_appender&lt;char&gt;, char&gt; &gt; (7 samples, 0.01%)</title><rect x="17.9" y="501" width="0.2" height="15.0" fill="rgb(238,51,29)" rx="2" ry="2" />
<text  x="20.91" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1068.1" y="325" width="0.3" height="15.0" fill="rgb(246,165,52)" rx="2" ry="2" />
<text  x="1071.09" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (18 samples, 0.04%)</title><rect x="23.8" y="421" width="0.4" height="15.0" fill="rgb(232,33,29)" rx="2" ry="2" />
<text  x="26.76" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (5 samples, 0.01%)</title><rect x="166.4" y="229" width="0.2" height="15.0" fill="rgb(253,5,33)" rx="2" ry="2" />
<text  x="169.43" y="239.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (16 samples, 0.03%)</title><rect x="678.7" y="437" width="0.4" height="15.0" fill="rgb(218,212,26)" rx="2" ry="2" />
<text  x="681.71" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (9 samples, 0.02%)</title><rect x="1174.6" y="389" width="0.2" height="15.0" fill="rgb(219,49,2)" rx="2" ry="2" />
<text  x="1177.63" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (15 samples, 0.03%)</title><rect x="48.6" y="485" width="0.4" height="15.0" fill="rgb(254,53,35)" rx="2" ry="2" />
<text  x="51.59" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (8 samples, 0.02%)</title><rect x="647.4" y="485" width="0.2" height="15.0" fill="rgb(228,183,1)" rx="2" ry="2" />
<text  x="650.41" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (9 samples, 0.02%)</title><rect x="890.2" y="421" width="0.2" height="15.0" fill="rgb(236,133,5)" rx="2" ry="2" />
<text  x="893.19" y="431.5" ></text>
</g>
<g >
<title>row::compact_and_expire (811 samples, 1.70%)</title><rect x="375.9" y="213" width="20.2" height="15.0" fill="rgb(213,4,31)" rx="2" ry="2" />
<text  x="378.95" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="272.1" y="341" width="0.2" height="15.0" fill="rgb(216,182,8)" rx="2" ry="2" />
<text  x="275.14" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="1053.5" y="181" width="0.2" height="15.0" fill="rgb(212,60,42)" rx="2" ry="2" />
<text  x="1056.46" y="191.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (117 samples, 0.25%)</title><rect x="1171.1" y="453" width="2.9" height="15.0" fill="rgb(233,210,30)" rx="2" ry="2" />
<text  x="1174.08" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (27 samples, 0.06%)</title><rect x="521.2" y="261" width="0.7" height="15.0" fill="rgb(220,174,18)" rx="2" ry="2" />
<text  x="524.22" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="788.2" y="309" width="0.2" height="15.0" fill="rgb(234,217,29)" rx="2" ry="2" />
<text  x="791.19" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (6 samples, 0.01%)</title><rect x="856.1" y="341" width="0.2" height="15.0" fill="rgb(214,124,11)" rx="2" ry="2" />
<text  x="859.14" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (134 samples, 0.28%)</title><rect x="198.4" y="117" width="3.3" height="15.0" fill="rgb(214,219,4)" rx="2" ry="2" />
<text  x="201.37" y="127.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (9 samples, 0.02%)</title><rect x="693.4" y="293" width="0.3" height="15.0" fill="rgb(226,211,26)" rx="2" ry="2" />
<text  x="696.44" y="303.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (20 samples, 0.04%)</title><rect x="329.4" y="181" width="0.5" height="15.0" fill="rgb(218,64,5)" rx="2" ry="2" />
<text  x="332.40" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="416.5" y="277" width="0.1" height="15.0" fill="rgb(226,79,34)" rx="2" ry="2" />
<text  x="419.47" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="167.8" y="197" width="0.1" height="15.0" fill="rgb(230,69,5)" rx="2" ry="2" />
<text  x="170.79" y="207.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, auth::role_or_anonymous&amp;&amp;, auth::get_permissions (5 samples, 0.01%)</title><rect x="819.0" y="309" width="0.1" height="15.0" fill="rgb(223,78,33)" rx="2" ry="2" />
<text  x="822.02" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (96 samples, 0.20%)</title><rect x="848.0" y="389" width="2.4" height="15.0" fill="rgb(234,94,11)" rx="2" ry="2" />
<text  x="851.01" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (12 samples, 0.03%)</title><rect x="501.5" y="261" width="0.3" height="15.0" fill="rgb(233,126,35)" rx="2" ry="2" />
<text  x="504.50" y="271.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (19 samples, 0.04%)</title><rect x="927.9" y="389" width="0.4" height="15.0" fill="rgb(224,155,54)" rx="2" ry="2" />
<text  x="930.86" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (8 samples, 0.02%)</title><rect x="1035.8" y="181" width="0.2" height="15.0" fill="rgb(236,19,53)" rx="2" ry="2" />
<text  x="1038.80" y="191.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (5 samples, 0.01%)</title><rect x="601.1" y="437" width="0.1" height="15.0" fill="rgb(217,164,43)" rx="2" ry="2" />
<text  x="604.12" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (7 samples, 0.01%)</title><rect x="714.3" y="405" width="0.2" height="15.0" fill="rgb(242,79,25)" rx="2" ry="2" />
<text  x="717.30" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (21 samples, 0.04%)</title><rect x="848.9" y="373" width="0.6" height="15.0" fill="rgb(214,57,34)" rx="2" ry="2" />
<text  x="851.95" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%)</title><rect x="836.6" y="293" width="0.1" height="15.0" fill="rgb(239,118,10)" rx="2" ry="2" />
<text  x="839.58" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (36 samples, 0.08%)</title><rect x="540.1" y="341" width="0.9" height="15.0" fill="rgb(254,7,23)" rx="2" ry="2" />
<text  x="543.14" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="1128.3" y="373" width="0.2" height="15.0" fill="rgb(221,6,19)" rx="2" ry="2" />
<text  x="1131.33" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (57 samples, 0.12%)</title><rect x="660.6" y="453" width="1.4" height="15.0" fill="rgb(247,204,51)" rx="2" ry="2" />
<text  x="663.61" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (6 samples, 0.01%)</title><rect x="1157.3" y="437" width="0.2" height="15.0" fill="rgb(254,161,25)" rx="2" ry="2" />
<text  x="1160.34" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (74 samples, 0.16%)</title><rect x="799.4" y="213" width="1.8" height="15.0" fill="rgb(240,17,15)" rx="2" ry="2" />
<text  x="802.38" y="223.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (920 samples, 1.93%)</title><rect x="496.0" y="309" width="22.8" height="15.0" fill="rgb(224,200,34)" rx="2" ry="2" />
<text  x="498.97" y="319.5" >s..</text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (9 samples, 0.02%)</title><rect x="676.8" y="469" width="0.2" height="15.0" fill="rgb(245,124,43)" rx="2" ry="2" />
<text  x="679.75" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="562.2" y="309" width="0.2" height="15.0" fill="rgb(240,67,26)" rx="2" ry="2" />
<text  x="565.16" y="319.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (292 samples, 0.61%)</title><rect x="10.2" y="613" width="7.2" height="15.0" fill="rgb(205,211,17)" rx="2" ry="2" />
<text  x="13.17" y="623.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (122 samples, 0.26%)</title><rect x="510.6" y="213" width="3.0" height="15.0" fill="rgb(244,212,17)" rx="2" ry="2" />
<text  x="513.60" y="223.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1099.7" y="341" width="0.1" height="15.0" fill="rgb(212,178,30)" rx="2" ry="2" />
<text  x="1102.71" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (26 samples, 0.05%)</title><rect x="1045.2" y="261" width="0.6" height="15.0" fill="rgb(208,154,9)" rx="2" ry="2" />
<text  x="1048.15" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (13 samples, 0.03%)</title><rect x="660.1" y="437" width="0.3" height="15.0" fill="rgb(219,176,2)" rx="2" ry="2" />
<text  x="663.11" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="52.1" y="485" width="0.1" height="15.0" fill="rgb(227,40,48)" rx="2" ry="2" />
<text  x="55.06" y="495.5" ></text>
</g>
<g >
<title>reader_permit::signal (6 samples, 0.01%)</title><rect x="283.4" y="325" width="0.2" height="15.0" fill="rgb(244,46,45)" rx="2" ry="2" />
<text  x="286.43" y="335.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::optional&lt;auth::resource&gt;&amp;&amp;, service::client_state::check_has_permission (7 samples, 0.01%)</title><rect x="822.1" y="341" width="0.2" height="15.0" fill="rgb(252,144,9)" rx="2" ry="2" />
<text  x="825.12" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="373" width="0.7" height="15.0" fill="rgb(224,173,30)" rx="2" ry="2" />
<text  x="1140.90" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (37 samples, 0.08%)</title><rect x="212.7" y="149" width="0.9" height="15.0" fill="rgb(244,109,53)" rx="2" ry="2" />
<text  x="215.73" y="159.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (41 samples, 0.09%)</title><rect x="1147.5" y="485" width="1.0" height="15.0" fill="rgb(209,161,1)" rx="2" ry="2" />
<text  x="1150.52" y="495.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (17 samples, 0.04%)</title><rect x="150.3" y="245" width="0.4" height="15.0" fill="rgb(214,154,10)" rx="2" ry="2" />
<text  x="153.26" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="1128.2" y="373" width="0.1" height="15.0" fill="rgb(220,72,16)" rx="2" ry="2" />
<text  x="1131.20" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (66 samples, 0.14%)</title><rect x="909.6" y="341" width="1.6" height="15.0" fill="rgb(224,172,36)" rx="2" ry="2" />
<text  x="912.61" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (30 samples, 0.06%)</title><rect x="1113.4" y="389" width="0.8" height="15.0" fill="rgb(254,24,11)" rx="2" ry="2" />
<text  x="1116.45" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (5 samples, 0.01%)</title><rect x="982.2" y="357" width="0.1" height="15.0" fill="rgb(233,107,16)" rx="2" ry="2" />
<text  x="985.19" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (165 samples, 0.35%)</title><rect x="1062.1" y="325" width="4.1" height="15.0" fill="rgb(227,158,45)" rx="2" ry="2" />
<text  x="1065.07" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="767.6" y="309" width="0.4" height="15.0" fill="rgb(235,94,5)" rx="2" ry="2" />
<text  x="770.59" y="319.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (391 samples, 0.82%)</title><rect x="479.9" y="261" width="9.7" height="15.0" fill="rgb(243,124,23)" rx="2" ry="2" />
<text  x="482.88" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (28 samples, 0.06%)</title><rect x="262.0" y="293" width="0.7" height="15.0" fill="rgb(254,1,23)" rx="2" ry="2" />
<text  x="265.05" y="303.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (43 samples, 0.09%)</title><rect x="370.0" y="197" width="1.1" height="15.0" fill="rgb(220,195,51)" rx="2" ry="2" />
<text  x="373.05" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (20 samples, 0.04%)</title><rect x="1119.9" y="405" width="0.5" height="15.0" fill="rgb(223,96,20)" rx="2" ry="2" />
<text  x="1122.94" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%)</title><rect x="333.4" y="165" width="0.3" height="15.0" fill="rgb(246,112,30)" rx="2" ry="2" />
<text  x="336.39" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (13 samples, 0.03%)</title><rect x="745.2" y="389" width="0.3" height="15.0" fill="rgb(241,78,39)" rx="2" ry="2" />
<text  x="748.19" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (7 samples, 0.01%)</title><rect x="538.2" y="309" width="0.2" height="15.0" fill="rgb(219,33,0)" rx="2" ry="2" />
<text  x="541.23" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (10 samples, 0.02%)</title><rect x="564.9" y="309" width="0.3" height="15.0" fill="rgb(237,15,30)" rx="2" ry="2" />
<text  x="567.91" y="319.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (14 samples, 0.03%)</title><rect x="24.9" y="613" width="0.3" height="15.0" fill="rgb(216,158,3)" rx="2" ry="2" />
<text  x="27.85" y="623.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="562.0" y="309" width="0.2" height="15.0" fill="rgb(252,142,46)" rx="2" ry="2" />
<text  x="564.96" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1103.8" y="373" width="0.2" height="15.0" fill="rgb(217,68,47)" rx="2" ry="2" />
<text  x="1106.83" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="1099.8" y="341" width="0.4" height="15.0" fill="rgb(250,38,52)" rx="2" ry="2" />
<text  x="1102.83" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (323 samples, 0.68%)</title><rect x="403.6" y="229" width="8.1" height="15.0" fill="rgb(209,170,54)" rx="2" ry="2" />
<text  x="406.65" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (53 samples, 0.11%)</title><rect x="926.3" y="325" width="1.3" height="15.0" fill="rgb(251,112,45)" rx="2" ry="2" />
<text  x="929.30" y="335.5" ></text>
</g>
<g >
<title>partition_entry::read (65 samples, 0.14%)</title><rect x="520.3" y="309" width="1.6" height="15.0" fill="rgb(205,206,46)" rx="2" ry="2" />
<text  x="523.27" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="633.2" y="469" width="0.3" height="15.0" fill="rgb(218,70,29)" rx="2" ry="2" />
<text  x="636.18" y="479.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="459.4" y="325" width="0.6" height="15.0" fill="rgb(248,200,16)" rx="2" ry="2" />
<text  x="462.37" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="83.0" y="453" width="0.3" height="15.0" fill="rgb(211,109,5)" rx="2" ry="2" />
<text  x="85.98" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (40 samples, 0.08%)</title><rect x="1132.7" y="421" width="1.0" height="15.0" fill="rgb(223,30,35)" rx="2" ry="2" />
<text  x="1135.69" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,232 samples, 2.59%)</title><rect x="174.2" y="133" width="30.5" height="15.0" fill="rgb(249,34,11)" rx="2" ry="2" />
<text  x="177.19" y="143.5" >co..</text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="161.6" y="229" width="0.2" height="15.0" fill="rgb(231,193,9)" rx="2" ry="2" />
<text  x="164.62" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="904.7" y="309" width="0.1" height="15.0" fill="rgb(251,213,32)" rx="2" ry="2" />
<text  x="907.70" y="319.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (24 samples, 0.05%)</title><rect x="841.6" y="421" width="0.6" height="15.0" fill="rgb(212,126,36)" rx="2" ry="2" />
<text  x="844.63" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (7 samples, 0.01%)</title><rect x="700.2" y="437" width="0.2" height="15.0" fill="rgb(236,63,47)" rx="2" ry="2" />
<text  x="703.23" y="447.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="335.4" y="181" width="0.3" height="15.0" fill="rgb(224,157,2)" rx="2" ry="2" />
<text  x="338.43" y="191.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.01%)</title><rect x="288.6" y="389" width="0.1" height="15.0" fill="rgb(232,172,24)" rx="2" ry="2" />
<text  x="291.58" y="399.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="826.9" y="373" width="0.5" height="15.0" fill="rgb(238,84,54)" rx="2" ry="2" />
<text  x="829.93" y="383.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (12 samples, 0.03%)</title><rect x="314.7" y="165" width="0.3" height="15.0" fill="rgb(208,133,5)" rx="2" ry="2" />
<text  x="317.72" y="175.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (15 samples, 0.03%)</title><rect x="310.7" y="165" width="0.4" height="15.0" fill="rgb(223,16,21)" rx="2" ry="2" />
<text  x="313.68" y="175.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.16%)</title><rect x="1123.9" y="405" width="1.8" height="15.0" fill="rgb(207,147,51)" rx="2" ry="2" />
<text  x="1126.91" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="790.8" y="245" width="0.4" height="15.0" fill="rgb(246,84,6)" rx="2" ry="2" />
<text  x="793.80" y="255.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (37 samples, 0.08%)</title><rect x="747.1" y="309" width="0.9" height="15.0" fill="rgb(252,175,4)" rx="2" ry="2" />
<text  x="750.05" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (79 samples, 0.17%)</title><rect x="842.7" y="421" width="2.0" height="15.0" fill="rgb(225,145,54)" rx="2" ry="2" />
<text  x="845.73" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (7 samples, 0.01%)</title><rect x="79.3" y="453" width="0.2" height="15.0" fill="rgb(235,202,48)" rx="2" ry="2" />
<text  x="82.31" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (25 samples, 0.05%)</title><rect x="749.2" y="373" width="0.7" height="15.0" fill="rgb(252,153,5)" rx="2" ry="2" />
<text  x="752.24" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (31 samples, 0.07%)</title><rect x="626.1" y="437" width="0.8" height="15.0" fill="rgb(207,162,30)" rx="2" ry="2" />
<text  x="629.09" y="447.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.04%)</title><rect x="825.1" y="277" width="0.4" height="15.0" fill="rgb(234,167,37)" rx="2" ry="2" />
<text  x="828.12" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (5 samples, 0.01%)</title><rect x="126.1" y="293" width="0.1" height="15.0" fill="rgb(223,40,26)" rx="2" ry="2" />
<text  x="129.08" y="303.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="905.9" y="309" width="0.1" height="15.0" fill="rgb(228,158,35)" rx="2" ry="2" />
<text  x="908.89" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (5 samples, 0.01%)</title><rect x="330.6" y="165" width="0.1" height="15.0" fill="rgb(205,48,14)" rx="2" ry="2" />
<text  x="333.62" y="175.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="637.5" y="485" width="0.4" height="15.0" fill="rgb(232,28,38)" rx="2" ry="2" />
<text  x="640.54" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (76 samples, 0.16%)</title><rect x="826.7" y="389" width="1.9" height="15.0" fill="rgb(214,44,7)" rx="2" ry="2" />
<text  x="829.73" y="399.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1098.7" y="309" width="0.1" height="15.0" fill="rgb(246,184,22)" rx="2" ry="2" />
<text  x="1101.67" y="319.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (51 samples, 0.11%)</title><rect x="751.4" y="309" width="1.3" height="15.0" fill="rgb(221,135,1)" rx="2" ry="2" />
<text  x="754.39" y="319.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (19 samples, 0.04%)</title><rect x="1137.9" y="277" width="0.5" height="15.0" fill="rgb(245,139,42)" rx="2" ry="2" />
<text  x="1140.95" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (23 samples, 0.05%)</title><rect x="70.5" y="389" width="0.6" height="15.0" fill="rgb(221,65,10)" rx="2" ry="2" />
<text  x="73.48" y="399.5" ></text>
</g>
<g >
<title>database::query (18 samples, 0.04%)</title><rect x="1007.4" y="277" width="0.5" height="15.0" fill="rgb(250,88,8)" rx="2" ry="2" />
<text  x="1010.41" y="287.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (47 samples, 0.10%)</title><rect x="444.9" y="277" width="1.1" height="15.0" fill="rgb(226,107,12)" rx="2" ry="2" />
<text  x="447.86" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (107 samples, 0.22%)</title><rect x="807.9" y="149" width="2.7" height="15.0" fill="rgb(214,112,42)" rx="2" ry="2" />
<text  x="810.93" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (10 samples, 0.02%)</title><rect x="899.0" y="293" width="0.3" height="15.0" fill="rgb(254,105,23)" rx="2" ry="2" />
<text  x="902.04" y="303.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (6 samples, 0.01%)</title><rect x="21.4" y="309" width="0.1" height="15.0" fill="rgb(237,81,31)" rx="2" ry="2" />
<text  x="24.38" y="319.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (612 samples, 1.29%)</title><rect x="1080.1" y="309" width="15.2" height="15.0" fill="rgb(253,191,5)" rx="2" ry="2" />
<text  x="1083.09" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="916.6" y="341" width="0.2" height="15.0" fill="rgb(213,37,12)" rx="2" ry="2" />
<text  x="919.57" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="784.6" y="293" width="0.6" height="15.0" fill="rgb(242,37,40)" rx="2" ry="2" />
<text  x="787.65" y="303.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,434 samples, 97.58%)</title><rect x="25.3" y="597" width="1151.5" height="15.0" fill="rgb(221,109,25)" rx="2" ry="2" />
<text  x="28.33" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>query_result_builder::consume (11 samples, 0.02%)</title><rect x="693.7" y="293" width="0.2" height="15.0" fill="rgb(247,181,1)" rx="2" ry="2" />
<text  x="696.66" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,007 samples, 10.52%)</title><rect x="293.9" y="309" width="124.1" height="15.0" fill="rgb(214,5,14)" rx="2" ry="2" />
<text  x="296.87" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (13 samples, 0.03%)</title><rect x="611.8" y="437" width="0.3" height="15.0" fill="rgb(217,184,20)" rx="2" ry="2" />
<text  x="614.78" y="447.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.03%)</title><rect x="754.4" y="261" width="0.4" height="15.0" fill="rgb(224,55,21)" rx="2" ry="2" />
<text  x="757.39" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (18 samples, 0.04%)</title><rect x="320.8" y="213" width="0.5" height="15.0" fill="rgb(226,95,8)" rx="2" ry="2" />
<text  x="323.82" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="423.1" y="373" width="0.2" height="15.0" fill="rgb(227,58,43)" rx="2" ry="2" />
<text  x="426.14" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (53 samples, 0.11%)</title><rect x="675.7" y="485" width="1.3" height="15.0" fill="rgb(205,199,14)" rx="2" ry="2" />
<text  x="678.71" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1148.4" y="469" width="0.1" height="15.0" fill="rgb(229,203,24)" rx="2" ry="2" />
<text  x="1151.39" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (37 samples, 0.08%)</title><rect x="693.3" y="437" width="0.9" height="15.0" fill="rgb(230,182,21)" rx="2" ry="2" />
<text  x="696.32" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="798.9" y="213" width="0.2" height="15.0" fill="rgb(240,70,52)" rx="2" ry="2" />
<text  x="801.93" y="223.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="1138.9" y="245" width="0.5" height="15.0" fill="rgb(216,186,43)" rx="2" ry="2" />
<text  x="1141.89" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (6 samples, 0.01%)</title><rect x="950.1" y="357" width="0.1" height="15.0" fill="rgb(208,209,28)" rx="2" ry="2" />
<text  x="953.05" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (6 samples, 0.01%)</title><rect x="791.5" y="293" width="0.2" height="15.0" fill="rgb(250,53,22)" rx="2" ry="2" />
<text  x="794.54" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="919.4" y="325" width="0.1" height="15.0" fill="rgb(214,69,30)" rx="2" ry="2" />
<text  x="922.35" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (131 samples, 0.28%)</title><rect x="208.4" y="117" width="3.3" height="15.0" fill="rgb(235,220,52)" rx="2" ry="2" />
<text  x="211.44" y="127.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (5 samples, 0.01%)</title><rect x="696.5" y="485" width="0.2" height="15.0" fill="rgb(232,26,49)" rx="2" ry="2" />
<text  x="699.54" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (10 samples, 0.02%)</title><rect x="1151.1" y="485" width="0.2" height="15.0" fill="rgb(226,168,18)" rx="2" ry="2" />
<text  x="1154.09" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="542.7" y="389" width="0.2" height="15.0" fill="rgb(241,7,34)" rx="2" ry="2" />
<text  x="545.69" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (6 samples, 0.01%)</title><rect x="618.6" y="437" width="0.2" height="15.0" fill="rgb(231,123,9)" rx="2" ry="2" />
<text  x="621.65" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (247 samples, 0.52%)</title><rect x="222.5" y="229" width="6.2" height="15.0" fill="rgb(219,224,36)" rx="2" ry="2" />
<text  x="225.55" y="239.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (100 samples, 0.21%)</title><rect x="753.6" y="309" width="2.5" height="15.0" fill="rgb(207,22,41)" rx="2" ry="2" />
<text  x="756.65" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1132.1" y="421" width="0.1" height="15.0" fill="rgb(229,184,41)" rx="2" ry="2" />
<text  x="1135.10" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (6 samples, 0.01%)</title><rect x="39.4" y="421" width="0.1" height="15.0" fill="rgb(219,79,26)" rx="2" ry="2" />
<text  x="42.36" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (57 samples, 0.12%)</title><rect x="829.9" y="309" width="1.4" height="15.0" fill="rgb(231,44,11)" rx="2" ry="2" />
<text  x="832.90" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (33 samples, 0.07%)</title><rect x="820.6" y="309" width="0.8" height="15.0" fill="rgb(212,175,34)" rx="2" ry="2" />
<text  x="823.58" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="809.9" y="85" width="0.1" height="15.0" fill="rgb(237,207,14)" rx="2" ry="2" />
<text  x="812.92" y="95.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (65 samples, 0.14%)</title><rect x="1162.7" y="469" width="1.6" height="15.0" fill="rgb(232,13,18)" rx="2" ry="2" />
<text  x="1165.72" y="479.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (22 samples, 0.05%)</title><rect x="55.7" y="469" width="0.5" height="15.0" fill="rgb(248,208,12)" rx="2" ry="2" />
<text  x="58.68" y="479.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (120 samples, 0.25%)</title><rect x="1073.2" y="309" width="2.9" height="15.0" fill="rgb(235,184,29)" rx="2" ry="2" />
<text  x="1076.15" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (31 samples, 0.07%)</title><rect x="319.8" y="165" width="0.8" height="15.0" fill="rgb(237,215,43)" rx="2" ry="2" />
<text  x="322.80" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="598.8" y="373" width="0.1" height="15.0" fill="rgb(222,63,16)" rx="2" ry="2" />
<text  x="601.76" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="710.1" y="453" width="0.2" height="15.0" fill="rgb(251,75,54)" rx="2" ry="2" />
<text  x="713.05" y="463.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (349 samples, 0.73%)</title><rect x="480.9" y="245" width="8.7" height="15.0" fill="rgb(209,191,29)" rx="2" ry="2" />
<text  x="483.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (40 samples, 0.08%)</title><rect x="1161.3" y="453" width="1.0" height="15.0" fill="rgb(241,186,34)" rx="2" ry="2" />
<text  x="1164.26" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="322.8" y="197" width="0.2" height="15.0" fill="rgb(226,198,32)" rx="2" ry="2" />
<text  x="325.81" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (15 samples, 0.03%)</title><rect x="611.4" y="437" width="0.4" height="15.0" fill="rgb(242,173,8)" rx="2" ry="2" />
<text  x="614.41" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="518.1" y="277" width="0.4" height="15.0" fill="rgb(234,202,9)" rx="2" ry="2" />
<text  x="521.12" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (24 samples, 0.05%)</title><rect x="717.5" y="421" width="0.6" height="15.0" fill="rgb(214,226,40)" rx="2" ry="2" />
<text  x="720.54" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (62 samples, 0.13%)</title><rect x="799.7" y="197" width="1.5" height="15.0" fill="rgb(227,23,15)" rx="2" ry="2" />
<text  x="802.68" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (14 samples, 0.03%)</title><rect x="747.6" y="293" width="0.4" height="15.0" fill="rgb(232,168,24)" rx="2" ry="2" />
<text  x="750.62" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (43 samples, 0.09%)</title><rect x="1008.8" y="277" width="1.1" height="15.0" fill="rgb(212,51,34)" rx="2" ry="2" />
<text  x="1011.80" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="509.1" y="181" width="0.7" height="15.0" fill="rgb(222,0,20)" rx="2" ry="2" />
<text  x="512.09" y="191.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (52 samples, 0.11%)</title><rect x="1126.8" y="389" width="1.3" height="15.0" fill="rgb(229,223,9)" rx="2" ry="2" />
<text  x="1129.79" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,434 samples, 97.58%)</title><rect x="25.3" y="549" width="1151.5" height="15.0" fill="rgb(231,13,9)" rx="2" ry="2" />
<text  x="28.33" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,892 samples, 10.28%)</title><rect x="296.7" y="293" width="121.3" height="15.0" fill="rgb(248,12,18)" rx="2" ry="2" />
<text  x="299.72" y="303.5" >seastar::repeat..</text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (9 samples, 0.02%)</title><rect x="1174.6" y="405" width="0.2" height="15.0" fill="rgb(211,28,25)" rx="2" ry="2" />
<text  x="1177.63" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.02%)</title><rect x="1168.8" y="469" width="0.2" height="15.0" fill="rgb(207,48,50)" rx="2" ry="2" />
<text  x="1171.80" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="982.4" y="357" width="0.2" height="15.0" fill="rgb(215,165,5)" rx="2" ry="2" />
<text  x="985.39" y="367.5" ></text>
</g>
<g >
<title>dht::tri_compare (83 samples, 0.17%)</title><rect x="477.8" y="261" width="2.1" height="15.0" fill="rgb(221,226,54)" rx="2" ry="2" />
<text  x="480.82" y="271.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (18 samples, 0.04%)</title><rect x="717.7" y="405" width="0.4" height="15.0" fill="rgb(225,92,1)" rx="2" ry="2" />
<text  x="720.69" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (10 samples, 0.02%)</title><rect x="249.1" y="245" width="0.2" height="15.0" fill="rgb(247,6,4)" rx="2" ry="2" />
<text  x="252.06" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="673.9" y="469" width="0.5" height="15.0" fill="rgb(243,225,10)" rx="2" ry="2" />
<text  x="676.95" y="479.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (10 samples, 0.02%)</title><rect x="930.8" y="389" width="0.2" height="15.0" fill="rgb(229,87,46)" rx="2" ry="2" />
<text  x="933.78" y="399.5" ></text>
</g>
<g >
<title>query::result::result (12 samples, 0.03%)</title><rect x="615.3" y="421" width="0.2" height="15.0" fill="rgb(230,5,21)" rx="2" ry="2" />
<text  x="618.25" y="431.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="706.6" y="485" width="0.8" height="15.0" fill="rgb(215,146,47)" rx="2" ry="2" />
<text  x="709.58" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (59 samples, 0.12%)</title><rect x="829.9" y="325" width="1.4" height="15.0" fill="rgb(235,92,24)" rx="2" ry="2" />
<text  x="832.85" y="335.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (5,819 samples, 12.23%)</title><rect x="961.3" y="405" width="144.3" height="15.0" fill="rgb(229,1,24)" rx="2" ry="2" />
<text  x="964.26" y="415.5" >service::storage_p..</text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (30 samples, 0.06%)</title><rect x="655.0" y="437" width="0.7" height="15.0" fill="rgb(234,164,8)" rx="2" ry="2" />
<text  x="657.98" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%)</title><rect x="671.7" y="469" width="0.3" height="15.0" fill="rgb(211,200,48)" rx="2" ry="2" />
<text  x="674.69" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="300.2" y="245" width="0.3" height="15.0" fill="rgb(215,73,11)" rx="2" ry="2" />
<text  x="303.24" y="255.5" ></text>
</g>
<g >
<title>do_cql_test (278 samples, 0.58%)</title><rect x="17.9" y="549" width="6.9" height="15.0" fill="rgb(243,133,44)" rx="2" ry="2" />
<text  x="20.89" y="559.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (32 samples, 0.07%)</title><rect x="1138.6" y="325" width="0.8" height="15.0" fill="rgb(243,102,39)" rx="2" ry="2" />
<text  x="1141.64" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (11 samples, 0.02%)</title><rect x="27.7" y="517" width="0.3" height="15.0" fill="rgb(227,131,37)" rx="2" ry="2" />
<text  x="30.71" y="527.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (778 samples, 1.64%)</title><rect x="125.0" y="309" width="19.3" height="15.0" fill="rgb(229,150,5)" rx="2" ry="2" />
<text  x="127.99" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (16 samples, 0.03%)</title><rect x="172.7" y="133" width="0.3" height="15.0" fill="rgb(242,221,11)" rx="2" ry="2" />
<text  x="175.65" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (38 samples, 0.08%)</title><rect x="700.8" y="437" width="1.0" height="15.0" fill="rgb(253,93,22)" rx="2" ry="2" />
<text  x="703.83" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="577.8" y="325" width="0.2" height="15.0" fill="rgb(215,34,19)" rx="2" ry="2" />
<text  x="580.78" y="335.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.01%)</title><rect x="10.0" y="613" width="0.1" height="15.0" fill="rgb(243,81,44)" rx="2" ry="2" />
<text  x="13.00" y="623.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,017 samples, 2.14%)</title><rect x="791.7" y="293" width="25.2" height="15.0" fill="rgb(215,131,51)" rx="2" ry="2" />
<text  x="794.69" y="303.5" >s..</text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (42 samples, 0.09%)</title><rect x="846.1" y="421" width="1.0" height="15.0" fill="rgb(223,194,17)" rx="2" ry="2" />
<text  x="849.07" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="149.6" y="245" width="0.2" height="15.0" fill="rgb(227,154,52)" rx="2" ry="2" />
<text  x="152.61" y="255.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (275 samples, 0.58%)</title><rect x="921.0" y="373" width="6.9" height="15.0" fill="rgb(243,125,32)" rx="2" ry="2" />
<text  x="924.04" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="93.1" y="437" width="0.2" height="15.0" fill="rgb(205,9,0)" rx="2" ry="2" />
<text  x="96.10" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (9 samples, 0.02%)</title><rect x="215.4" y="181" width="0.2" height="15.0" fill="rgb(241,212,47)" rx="2" ry="2" />
<text  x="218.35" y="191.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (9 samples, 0.02%)</title><rect x="24.9" y="469" width="0.2" height="15.0" fill="rgb(240,109,27)" rx="2" ry="2" />
<text  x="27.85" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (55 samples, 0.12%)</title><rect x="1164.4" y="469" width="1.3" height="15.0" fill="rgb(243,112,35)" rx="2" ry="2" />
<text  x="1167.38" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (34 samples, 0.07%)</title><rect x="1138.6" y="373" width="0.9" height="15.0" fill="rgb(209,120,14)" rx="2" ry="2" />
<text  x="1141.62" y="383.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (122 samples, 0.26%)</title><rect x="1185.7" y="613" width="3.1" height="15.0" fill="rgb(230,171,34)" rx="2" ry="2" />
<text  x="1188.73" y="623.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="494.2" y="277" width="0.7" height="15.0" fill="rgb(209,103,12)" rx="2" ry="2" />
<text  x="497.21" y="287.5" ></text>
</g>
<g >
<title>row::compact_and_expire (5 samples, 0.01%)</title><rect x="694.0" y="293" width="0.1" height="15.0" fill="rgb(232,31,9)" rx="2" ry="2" />
<text  x="696.99" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="1069.1" y="341" width="0.4" height="15.0" fill="rgb(211,216,24)" rx="2" ry="2" />
<text  x="1072.13" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (8 samples, 0.02%)</title><rect x="699.9" y="437" width="0.2" height="15.0" fill="rgb(209,8,12)" rx="2" ry="2" />
<text  x="702.86" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (42 samples, 0.09%)</title><rect x="317.6" y="181" width="1.1" height="15.0" fill="rgb(254,91,54)" rx="2" ry="2" />
<text  x="320.65" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (18 samples, 0.04%)</title><rect x="1094.8" y="293" width="0.4" height="15.0" fill="rgb(227,106,16)" rx="2" ry="2" />
<text  x="1097.80" y="303.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (907 samples, 1.91%)</title><rect x="648.5" y="501" width="22.5" height="15.0" fill="rgb(249,147,7)" rx="2" ry="2" />
<text  x="651.51" y="511.5" >s..</text>
</g>
<g >
<title>reader_permit::impl::signal (39 samples, 0.08%)</title><rect x="275.3" y="309" width="1.0" height="15.0" fill="rgb(206,72,38)" rx="2" ry="2" />
<text  x="278.29" y="319.5" ></text>
</g>
<g >
<title>__libc_start_main (46,434 samples, 97.58%)</title><rect x="25.3" y="629" width="1151.5" height="15.0" fill="rgb(208,103,13)" rx="2" ry="2" />
<text  x="28.33" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (9 samples, 0.02%)</title><rect x="608.1" y="405" width="0.3" height="15.0" fill="rgb(253,164,38)" rx="2" ry="2" />
<text  x="611.13" y="415.5" ></text>
</g>
<g >
<title>std::type_info::operator== (8 samples, 0.02%)</title><rect x="1004.1" y="277" width="0.2" height="15.0" fill="rgb(240,151,23)" rx="2" ry="2" />
<text  x="1007.09" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (183 samples, 0.38%)</title><rect x="1169.4" y="469" width="4.6" height="15.0" fill="rgb(215,80,44)" rx="2" ry="2" />
<text  x="1172.44" y="479.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="54.1" y="469" width="0.7" height="15.0" fill="rgb(229,13,44)" rx="2" ry="2" />
<text  x="57.09" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (16 samples, 0.03%)</title><rect x="1009.5" y="261" width="0.4" height="15.0" fill="rgb(241,80,6)" rx="2" ry="2" />
<text  x="1012.47" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (7 samples, 0.01%)</title><rect x="375.2" y="165" width="0.2" height="15.0" fill="rgb(224,102,2)" rx="2" ry="2" />
<text  x="378.20" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="437" width="0.7" height="15.0" fill="rgb(219,73,41)" rx="2" ry="2" />
<text  x="1140.90" y="447.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (5 samples, 0.01%)</title><rect x="78.6" y="453" width="0.2" height="15.0" fill="rgb(252,228,8)" rx="2" ry="2" />
<text  x="81.64" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (16 samples, 0.03%)</title><rect x="1046.0" y="261" width="0.4" height="15.0" fill="rgb(217,122,41)" rx="2" ry="2" />
<text  x="1049.05" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (80 samples, 0.17%)</title><rect x="578.9" y="373" width="2.0" height="15.0" fill="rgb(238,44,45)" rx="2" ry="2" />
<text  x="581.92" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (110 samples, 0.23%)</title><rect x="585.9" y="357" width="2.7" height="15.0" fill="rgb(210,100,28)" rx="2" ry="2" />
<text  x="588.86" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (451 samples, 0.95%)</title><rect x="1177.6" y="629" width="11.2" height="15.0" fill="rgb(228,189,43)" rx="2" ry="2" />
<text  x="1180.58" y="639.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="525.7" y="341" width="0.2" height="15.0" fill="rgb(254,176,37)" rx="2" ry="2" />
<text  x="528.70" y="351.5" ></text>
</g>
<g >
<title>memtable::apply (18 samples, 0.04%)</title><rect x="1137.9" y="261" width="0.5" height="15.0" fill="rgb(208,43,53)" rx="2" ry="2" />
<text  x="1140.95" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (77 samples, 0.16%)</title><rect x="754.2" y="277" width="1.9" height="15.0" fill="rgb(239,50,19)" rx="2" ry="2" />
<text  x="757.17" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (31 samples, 0.07%)</title><rect x="200.9" y="85" width="0.8" height="15.0" fill="rgb(228,70,33)" rx="2" ry="2" />
<text  x="203.92" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (27 samples, 0.06%)</title><rect x="767.3" y="325" width="0.7" height="15.0" fill="rgb(252,149,45)" rx="2" ry="2" />
<text  x="770.34" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,305 samples, 11.15%)</title><rect x="291.6" y="373" width="131.5" height="15.0" fill="rgb(223,131,23)" rx="2" ry="2" />
<text  x="294.58" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (8 samples, 0.02%)</title><rect x="871.3" y="501" width="0.2" height="15.0" fill="rgb(232,56,53)" rx="2" ry="2" />
<text  x="874.29" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (8 samples, 0.02%)</title><rect x="853.6" y="373" width="0.2" height="15.0" fill="rgb(227,139,21)" rx="2" ry="2" />
<text  x="856.64" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="74.6" y="373" width="0.1" height="15.0" fill="rgb(248,131,49)" rx="2" ry="2" />
<text  x="77.57" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (13 samples, 0.03%)</title><rect x="873.8" y="373" width="0.3" height="15.0" fill="rgb(214,8,8)" rx="2" ry="2" />
<text  x="876.80" y="383.5" ></text>
</g>
<g >
<title>auth::resource::resource (48 samples, 0.10%)</title><rect x="775.9" y="373" width="1.2" height="15.0" fill="rgb(225,198,51)" rx="2" ry="2" />
<text  x="778.94" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (13 samples, 0.03%)</title><rect x="318.8" y="181" width="0.4" height="15.0" fill="rgb(241,146,20)" rx="2" ry="2" />
<text  x="321.84" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (9 samples, 0.02%)</title><rect x="488.0" y="181" width="0.2" height="15.0" fill="rgb(243,48,42)" rx="2" ry="2" />
<text  x="491.01" y="191.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="524.7" y="325" width="0.1" height="15.0" fill="rgb(220,116,37)" rx="2" ry="2" />
<text  x="527.66" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="199.1" y="101" width="0.2" height="15.0" fill="rgb(211,175,7)" rx="2" ry="2" />
<text  x="202.14" y="111.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (69 samples, 0.15%)</title><rect x="153.3" y="197" width="1.7" height="15.0" fill="rgb(242,120,37)" rx="2" ry="2" />
<text  x="156.31" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,116 samples, 12.85%)</title><rect x="118.6" y="357" width="151.7" height="15.0" fill="rgb(213,9,21)" rx="2" ry="2" />
<text  x="121.59" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (11 samples, 0.02%)</title><rect x="1041.7" y="197" width="0.2" height="15.0" fill="rgb(211,101,32)" rx="2" ry="2" />
<text  x="1044.66" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (5 samples, 0.01%)</title><rect x="1138.7" y="197" width="0.2" height="15.0" fill="rgb(228,182,38)" rx="2" ry="2" />
<text  x="1141.74" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (33 samples, 0.07%)</title><rect x="23.5" y="437" width="0.8" height="15.0" fill="rgb(208,195,35)" rx="2" ry="2" />
<text  x="26.47" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="549.3" y="357" width="0.1" height="15.0" fill="rgb(210,26,9)" rx="2" ry="2" />
<text  x="552.26" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (32 samples, 0.07%)</title><rect x="1134.3" y="421" width="0.8" height="15.0" fill="rgb(236,49,44)" rx="2" ry="2" />
<text  x="1137.30" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (5 samples, 0.01%)</title><rect x="703.1" y="469" width="0.1" height="15.0" fill="rgb(239,205,36)" rx="2" ry="2" />
<text  x="706.11" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (16 samples, 0.03%)</title><rect x="727.3" y="389" width="0.4" height="15.0" fill="rgb(208,180,5)" rx="2" ry="2" />
<text  x="730.29" y="399.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (99 samples, 0.21%)</title><rect x="773.1" y="389" width="2.5" height="15.0" fill="rgb(238,198,41)" rx="2" ry="2" />
<text  x="776.14" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 0.12%)</title><rect x="817.2" y="293" width="1.5" height="15.0" fill="rgb(253,125,14)" rx="2" ry="2" />
<text  x="820.21" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (35 samples, 0.07%)</title><rect x="286.1" y="389" width="0.8" height="15.0" fill="rgb(227,155,43)" rx="2" ry="2" />
<text  x="289.08" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (63 samples, 0.13%)</title><rect x="786.6" y="309" width="1.6" height="15.0" fill="rgb(238,30,37)" rx="2" ry="2" />
<text  x="789.63" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (14 samples, 0.03%)</title><rect x="994.1" y="261" width="0.4" height="15.0" fill="rgb(227,87,38)" rx="2" ry="2" />
<text  x="997.14" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (31 samples, 0.07%)</title><rect x="1170.3" y="453" width="0.8" height="15.0" fill="rgb(238,55,26)" rx="2" ry="2" />
<text  x="1173.29" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (9 samples, 0.02%)</title><rect x="631.2" y="389" width="0.2" height="15.0" fill="rgb(252,2,28)" rx="2" ry="2" />
<text  x="634.22" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (340 samples, 0.71%)</title><rect x="403.3" y="245" width="8.4" height="15.0" fill="rgb(218,51,37)" rx="2" ry="2" />
<text  x="406.30" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="428.2" y="405" width="0.1" height="15.0" fill="rgb(206,48,48)" rx="2" ry="2" />
<text  x="431.17" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="1128.8" y="389" width="0.2" height="15.0" fill="rgb(220,82,3)" rx="2" ry="2" />
<text  x="1131.77" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (13 samples, 0.03%)</title><rect x="74.2" y="373" width="0.3" height="15.0" fill="rgb(222,12,52)" rx="2" ry="2" />
<text  x="77.23" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="457.2" y="277" width="0.2" height="15.0" fill="rgb(239,77,50)" rx="2" ry="2" />
<text  x="460.24" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (11 samples, 0.02%)</title><rect x="575.0" y="261" width="0.3" height="15.0" fill="rgb(211,145,4)" rx="2" ry="2" />
<text  x="578.03" y="271.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (65 samples, 0.14%)</title><rect x="281.8" y="309" width="1.6" height="15.0" fill="rgb(209,113,16)" rx="2" ry="2" />
<text  x="284.79" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (266 samples, 0.56%)</title><rect x="696.7" y="485" width="6.6" height="15.0" fill="rgb(211,101,21)" rx="2" ry="2" />
<text  x="699.66" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (13 samples, 0.03%)</title><rect x="715.3" y="437" width="0.3" height="15.0" fill="rgb(242,210,44)" rx="2" ry="2" />
<text  x="718.29" y="447.5" ></text>
</g>
<g >
<title>make_combined_reader (695 samples, 1.46%)</title><rect x="441.5" y="325" width="17.2" height="15.0" fill="rgb(252,39,33)" rx="2" ry="2" />
<text  x="444.49" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (110 samples, 0.23%)</title><rect x="63.1" y="453" width="2.8" height="15.0" fill="rgb(216,207,28)" rx="2" ry="2" />
<text  x="66.14" y="463.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="866.8" y="437" width="0.9" height="15.0" fill="rgb(219,212,52)" rx="2" ry="2" />
<text  x="869.78" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (5 samples, 0.01%)</title><rect x="727.9" y="437" width="0.1" height="15.0" fill="rgb(238,40,18)" rx="2" ry="2" />
<text  x="730.91" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (10 samples, 0.02%)</title><rect x="417.6" y="277" width="0.3" height="15.0" fill="rgb(239,162,41)" rx="2" ry="2" />
<text  x="420.63" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (73 samples, 0.15%)</title><rect x="797.0" y="213" width="1.8" height="15.0" fill="rgb(250,15,53)" rx="2" ry="2" />
<text  x="799.97" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (617 samples, 1.30%)</title><rect x="1026.7" y="245" width="15.3" height="15.0" fill="rgb(223,121,10)" rx="2" ry="2" />
<text  x="1029.68" y="255.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (49 samples, 0.10%)</title><rect x="868.5" y="453" width="1.2" height="15.0" fill="rgb(212,109,14)" rx="2" ry="2" />
<text  x="871.49" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (37 samples, 0.08%)</title><rect x="630.5" y="405" width="0.9" height="15.0" fill="rgb(251,24,54)" rx="2" ry="2" />
<text  x="633.53" y="415.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (12 samples, 0.03%)</title><rect x="23.5" y="421" width="0.3" height="15.0" fill="rgb(235,201,21)" rx="2" ry="2" />
<text  x="26.47" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (12 samples, 0.03%)</title><rect x="369.5" y="197" width="0.3" height="15.0" fill="rgb(244,61,34)" rx="2" ry="2" />
<text  x="372.48" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,412 samples, 9.27%)</title><rect x="431.9" y="373" width="109.5" height="15.0" fill="rgb(247,4,41)" rx="2" ry="2" />
<text  x="434.94" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>clustering_row::clustering_row (1,375 samples, 2.89%)</title><rect x="171.5" y="165" width="34.1" height="15.0" fill="rgb(251,41,39)" rx="2" ry="2" />
<text  x="174.54" y="175.5" >cl..</text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (19 samples, 0.04%)</title><rect x="224.7" y="181" width="0.5" height="15.0" fill="rgb(213,34,25)" rx="2" ry="2" />
<text  x="227.70" y="191.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (13 samples, 0.03%)</title><rect x="949.9" y="373" width="0.3" height="15.0" fill="rgb(224,170,1)" rx="2" ry="2" />
<text  x="952.88" y="383.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;managed_bytes&gt;::allocate (6 samples, 0.01%)</title><rect x="943.8" y="389" width="0.1" height="15.0" fill="rgb(248,72,36)" rx="2" ry="2" />
<text  x="946.75" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (10 samples, 0.02%)</title><rect x="1026.4" y="245" width="0.3" height="15.0" fill="rgb(212,197,38)" rx="2" ry="2" />
<text  x="1029.43" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (19 samples, 0.04%)</title><rect x="1107.1" y="389" width="0.5" height="15.0" fill="rgb(232,199,24)" rx="2" ry="2" />
<text  x="1110.15" y="399.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="693.4" y="373" width="0.8" height="15.0" fill="rgb(212,228,41)" rx="2" ry="2" />
<text  x="696.42" y="383.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (11 samples, 0.02%)</title><rect x="714.2" y="421" width="0.3" height="15.0" fill="rgb(205,124,41)" rx="2" ry="2" />
<text  x="717.20" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler_helper (7 samples, 0.01%)</title><rect x="1139.3" y="213" width="0.1" height="15.0" fill="rgb(247,107,47)" rx="2" ry="2" />
<text  x="1142.26" y="223.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (6 samples, 0.01%)</title><rect x="873.6" y="389" width="0.2" height="15.0" fill="rgb(235,180,3)" rx="2" ry="2" />
<text  x="876.62" y="399.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (327 samples, 0.69%)</title><rect x="384.5" y="165" width="8.1" height="15.0" fill="rgb(233,148,41)" rx="2" ry="2" />
<text  x="387.48" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::smp_pollfn::poll (5 samples, 0.01%)</title><rect x="1175.9" y="501" width="0.1" height="15.0" fill="rgb(223,13,3)" rx="2" ry="2" />
<text  x="1178.89" y="511.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (14 samples, 0.03%)</title><rect x="167.9" y="197" width="0.4" height="15.0" fill="rgb(235,148,39)" rx="2" ry="2" />
<text  x="170.92" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (278 samples, 0.58%)</title><rect x="1155.5" y="469" width="6.9" height="15.0" fill="rgb(234,142,46)" rx="2" ry="2" />
<text  x="1158.48" y="479.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="812.6" y="229" width="0.2" height="15.0" fill="rgb(207,52,25)" rx="2" ry="2" />
<text  x="815.65" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (23 samples, 0.05%)</title><rect x="910.7" y="325" width="0.5" height="15.0" fill="rgb(226,135,49)" rx="2" ry="2" />
<text  x="913.67" y="335.5" ></text>
</g>
<g >
<title>operator new (72 samples, 0.15%)</title><rect x="1114.9" y="357" width="1.8" height="15.0" fill="rgb(207,85,0)" rx="2" ry="2" />
<text  x="1117.94" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (7 samples, 0.01%)</title><rect x="1100.2" y="357" width="0.2" height="15.0" fill="rgb(231,39,37)" rx="2" ry="2" />
<text  x="1103.18" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="934.6" y="309" width="0.3" height="15.0" fill="rgb(235,37,35)" rx="2" ry="2" />
<text  x="937.63" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (17 samples, 0.04%)</title><rect x="840.1" y="421" width="0.4" height="15.0" fill="rgb(213,149,6)" rx="2" ry="2" />
<text  x="843.12" y="431.5" ></text>
</g>
<g >
<title>schema::get_partitioner (31 samples, 0.07%)</title><rect x="941.3" y="405" width="0.7" height="15.0" fill="rgb(215,27,4)" rx="2" ry="2" />
<text  x="944.27" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (7 samples, 0.01%)</title><rect x="1036.4" y="197" width="0.1" height="15.0" fill="rgb(220,172,45)" rx="2" ry="2" />
<text  x="1039.37" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="130.8" y="261" width="0.2" height="15.0" fill="rgb(246,42,28)" rx="2" ry="2" />
<text  x="133.82" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="619.8" y="389" width="0.1" height="15.0" fill="rgb(254,207,17)" rx="2" ry="2" />
<text  x="622.76" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.03%)</title><rect x="686.2" y="485" width="0.3" height="15.0" fill="rgb(222,93,7)" rx="2" ry="2" />
<text  x="689.20" y="495.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (5 samples, 0.01%)</title><rect x="1138.7" y="245" width="0.2" height="15.0" fill="rgb(224,187,29)" rx="2" ry="2" />
<text  x="1141.74" y="255.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (20 samples, 0.04%)</title><rect x="232.3" y="245" width="0.5" height="15.0" fill="rgb(233,229,50)" rx="2" ry="2" />
<text  x="235.34" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (8 samples, 0.02%)</title><rect x="995.3" y="277" width="0.2" height="15.0" fill="rgb(229,59,42)" rx="2" ry="2" />
<text  x="998.28" y="287.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (70 samples, 0.15%)</title><rect x="604.1" y="389" width="1.7" height="15.0" fill="rgb(214,93,1)" rx="2" ry="2" />
<text  x="607.09" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="604.9" y="357" width="0.6" height="15.0" fill="rgb(216,180,34)" rx="2" ry="2" />
<text  x="607.89" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="82.0" y="453" width="0.1" height="15.0" fill="rgb(219,59,50)" rx="2" ry="2" />
<text  x="84.96" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (9 samples, 0.02%)</title><rect x="219.0" y="133" width="0.2" height="15.0" fill="rgb(242,5,4)" rx="2" ry="2" />
<text  x="222.02" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (5 samples, 0.01%)</title><rect x="610.7" y="437" width="0.1" height="15.0" fill="rgb(243,168,15)" rx="2" ry="2" />
<text  x="613.71" y="447.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (6 samples, 0.01%)</title><rect x="21.5" y="197" width="0.2" height="15.0" fill="rgb(225,13,52)" rx="2" ry="2" />
<text  x="24.53" y="207.5" ></text>
</g>
<g >
<title>row::~row (6 samples, 0.01%)</title><rect x="253.3" y="213" width="0.1" height="15.0" fill="rgb(213,140,0)" rx="2" ry="2" />
<text  x="256.27" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (51 samples, 0.11%)</title><rect x="1165.7" y="485" width="1.3" height="15.0" fill="rgb(243,39,32)" rx="2" ry="2" />
<text  x="1168.75" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::move_it (7 samples, 0.01%)</title><rect x="697.4" y="469" width="0.2" height="15.0" fill="rgb(207,45,18)" rx="2" ry="2" />
<text  x="700.43" y="479.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,847 samples, 14.39%)</title><rect x="116.3" y="373" width="169.8" height="15.0" fill="rgb(208,109,4)" rx="2" ry="2" />
<text  x="119.26" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (34 samples, 0.07%)</title><rect x="693.4" y="389" width="0.8" height="15.0" fill="rgb(226,65,14)" rx="2" ry="2" />
<text  x="696.37" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="773.3" y="357" width="0.8" height="15.0" fill="rgb(214,191,49)" rx="2" ry="2" />
<text  x="776.31" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (49 samples, 0.10%)</title><rect x="678.6" y="453" width="1.3" height="15.0" fill="rgb(218,105,16)" rx="2" ry="2" />
<text  x="681.64" y="463.5" ></text>
</g>
<g >
<title>database::add_column_family (5 samples, 0.01%)</title><rect x="49.4" y="485" width="0.1" height="15.0" fill="rgb(214,47,50)" rx="2" ry="2" />
<text  x="52.40" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,878 samples, 3.95%)</title><rect x="779.8" y="373" width="46.6" height="15.0" fill="rgb(235,84,49)" rx="2" ry="2" />
<text  x="782.79" y="383.5" >serv..</text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (304 samples, 0.64%)</title><rect x="1080.9" y="261" width="7.6" height="15.0" fill="rgb(221,23,35)" rx="2" ry="2" />
<text  x="1083.91" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (15 samples, 0.03%)</title><rect x="80.0" y="453" width="0.3" height="15.0" fill="rgb(218,137,20)" rx="2" ry="2" />
<text  x="82.96" y="463.5" ></text>
</g>
<g >
<title>row::row (7 samples, 0.01%)</title><rect x="253.1" y="213" width="0.2" height="15.0" fill="rgb(208,36,27)" rx="2" ry="2" />
<text  x="256.10" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (8 samples, 0.02%)</title><rect x="945.4" y="405" width="0.2" height="15.0" fill="rgb(219,17,5)" rx="2" ry="2" />
<text  x="948.41" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (127 samples, 0.27%)</title><rect x="1114.2" y="389" width="3.1" height="15.0" fill="rgb(236,90,14)" rx="2" ry="2" />
<text  x="1117.19" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="54.6" y="453" width="0.2" height="15.0" fill="rgb(226,17,15)" rx="2" ry="2" />
<text  x="57.61" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::io_queue_submission_pollfn::poll (5 samples, 0.01%)</title><rect x="1175.7" y="501" width="0.2" height="15.0" fill="rgb(207,205,19)" rx="2" ry="2" />
<text  x="1178.74" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="691.8" y="437" width="0.2" height="15.0" fill="rgb(207,48,42)" rx="2" ry="2" />
<text  x="694.83" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="1138.9" y="309" width="0.5" height="15.0" fill="rgb(240,5,25)" rx="2" ry="2" />
<text  x="1141.89" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="450.8" y="261" width="0.3" height="15.0" fill="rgb(217,11,0)" rx="2" ry="2" />
<text  x="453.84" y="271.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (5 samples, 0.01%)</title><rect x="729.4" y="453" width="0.1" height="15.0" fill="rgb(254,7,2)" rx="2" ry="2" />
<text  x="732.42" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (37 samples, 0.08%)</title><rect x="693.3" y="453" width="0.9" height="15.0" fill="rgb(208,189,16)" rx="2" ry="2" />
<text  x="696.32" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="100.8" y="373" width="0.9" height="15.0" fill="rgb(214,150,44)" rx="2" ry="2" />
<text  x="103.84" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (41 samples, 0.09%)</title><rect x="657.6" y="469" width="1.0" height="15.0" fill="rgb(216,10,5)" rx="2" ry="2" />
<text  x="660.58" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (77 samples, 0.16%)</title><rect x="819.5" y="325" width="1.9" height="15.0" fill="rgb(252,69,46)" rx="2" ry="2" />
<text  x="822.51" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="20.9" y="309" width="0.1" height="15.0" fill="rgb(230,25,54)" rx="2" ry="2" />
<text  x="23.89" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="1119.6" y="405" width="0.3" height="15.0" fill="rgb(253,181,3)" rx="2" ry="2" />
<text  x="1122.62" y="415.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (33 samples, 0.07%)</title><rect x="155.9" y="197" width="0.8" height="15.0" fill="rgb(249,219,0)" rx="2" ry="2" />
<text  x="158.86" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (13 samples, 0.03%)</title><rect x="265.6" y="325" width="0.3" height="15.0" fill="rgb(234,76,8)" rx="2" ry="2" />
<text  x="268.60" y="335.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (267 samples, 0.56%)</title><rect x="749.9" y="373" width="6.6" height="15.0" fill="rgb(213,207,45)" rx="2" ry="2" />
<text  x="752.86" y="383.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (66 samples, 0.14%)</title><rect x="18.6" y="341" width="1.6" height="15.0" fill="rgb(236,112,22)" rx="2" ry="2" />
<text  x="21.60" y="351.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (25 samples, 0.05%)</title><rect x="583.5" y="357" width="0.6" height="15.0" fill="rgb(245,29,36)" rx="2" ry="2" />
<text  x="586.46" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (15 samples, 0.03%)</title><rect x="1176.3" y="453" width="0.3" height="15.0" fill="rgb(232,88,16)" rx="2" ry="2" />
<text  x="1179.26" y="463.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (64 samples, 0.13%)</title><rect x="759.7" y="389" width="1.5" height="15.0" fill="rgb(250,81,9)" rx="2" ry="2" />
<text  x="762.65" y="399.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (18 samples, 0.04%)</title><rect x="335.8" y="181" width="0.4" height="15.0" fill="rgb(227,208,35)" rx="2" ry="2" />
<text  x="338.77" y="191.5" ></text>
</g>
<g >
<title>database::find_column_family (67 samples, 0.14%)</title><rect x="1020.3" y="245" width="1.6" height="15.0" fill="rgb(208,117,15)" rx="2" ry="2" />
<text  x="1023.28" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (16 samples, 0.03%)</title><rect x="589.8" y="341" width="0.4" height="15.0" fill="rgb(226,142,34)" rx="2" ry="2" />
<text  x="592.76" y="351.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="1138.9" y="277" width="0.5" height="15.0" fill="rgb(248,0,41)" rx="2" ry="2" />
<text  x="1141.89" y="287.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (210 samples, 0.44%)</title><rect x="18.2" y="437" width="5.2" height="15.0" fill="rgb(216,17,5)" rx="2" ry="2" />
<text  x="21.21" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (115 samples, 0.24%)</title><rect x="645.7" y="501" width="2.8" height="15.0" fill="rgb(224,144,40)" rx="2" ry="2" />
<text  x="648.65" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="410.3" y="181" width="0.1" height="15.0" fill="rgb(223,80,44)" rx="2" ry="2" />
<text  x="413.29" y="191.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="232.0" y="229" width="0.3" height="15.0" fill="rgb(249,132,37)" rx="2" ry="2" />
<text  x="234.99" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="537.1" y="245" width="0.6" height="15.0" fill="rgb(248,188,54)" rx="2" ry="2" />
<text  x="540.14" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (5 samples, 0.01%)</title><rect x="211.7" y="117" width="0.1" height="15.0" fill="rgb(229,1,50)" rx="2" ry="2" />
<text  x="214.68" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (64 samples, 0.13%)</title><rect x="246.8" y="197" width="1.6" height="15.0" fill="rgb(219,155,29)" rx="2" ry="2" />
<text  x="249.80" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (20 samples, 0.04%)</title><rect x="811.3" y="213" width="0.5" height="15.0" fill="rgb(222,125,47)" rx="2" ry="2" />
<text  x="814.28" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="445.5" y="245" width="0.2" height="15.0" fill="rgb(230,65,39)" rx="2" ry="2" />
<text  x="448.46" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (91 samples, 0.19%)</title><rect x="687.0" y="453" width="2.2" height="15.0" fill="rgb(230,183,13)" rx="2" ry="2" />
<text  x="689.97" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (13 samples, 0.03%)</title><rect x="579.4" y="341" width="0.4" height="15.0" fill="rgb(207,115,53)" rx="2" ry="2" />
<text  x="582.44" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="599.2" y="389" width="0.4" height="15.0" fill="rgb(224,23,15)" rx="2" ry="2" />
<text  x="602.21" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (7 samples, 0.01%)</title><rect x="1174.1" y="501" width="0.2" height="15.0" fill="rgb(211,197,9)" rx="2" ry="2" />
<text  x="1177.10" y="511.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (63 samples, 0.13%)</title><rect x="225.7" y="165" width="1.6" height="15.0" fill="rgb(254,50,40)" rx="2" ry="2" />
<text  x="228.72" y="175.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (20 samples, 0.04%)</title><rect x="606.6" y="437" width="0.5" height="15.0" fill="rgb(219,9,1)" rx="2" ry="2" />
<text  x="609.65" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (8 samples, 0.02%)</title><rect x="652.4" y="469" width="0.2" height="15.0" fill="rgb(245,132,15)" rx="2" ry="2" />
<text  x="655.40" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="1136.2" y="421" width="0.2" height="15.0" fill="rgb(239,198,23)" rx="2" ry="2" />
<text  x="1139.21" y="431.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="453" width="0.7" height="15.0" fill="rgb(236,148,38)" rx="2" ry="2" />
<text  x="1140.90" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (93 samples, 0.20%)</title><rect x="485.9" y="197" width="2.3" height="15.0" fill="rgb(212,176,10)" rx="2" ry="2" />
<text  x="488.93" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (79 samples, 0.17%)</title><rect x="373.4" y="181" width="2.0" height="15.0" fill="rgb(254,10,53)" rx="2" ry="2" />
<text  x="376.42" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (5 samples, 0.01%)</title><rect x="79.8" y="453" width="0.1" height="15.0" fill="rgb(208,137,18)" rx="2" ry="2" />
<text  x="82.81" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="160.0" y="181" width="0.6" height="15.0" fill="rgb(233,167,22)" rx="2" ry="2" />
<text  x="163.03" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="659.1" y="437" width="0.5" height="15.0" fill="rgb(208,131,1)" rx="2" ry="2" />
<text  x="662.14" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="820.8" y="293" width="0.1" height="15.0" fill="rgb(245,56,0)" rx="2" ry="2" />
<text  x="823.75" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (30 samples, 0.06%)</title><rect x="807.2" y="149" width="0.7" height="15.0" fill="rgb(246,152,51)" rx="2" ry="2" />
<text  x="810.16" y="159.5" ></text>
</g>
<g >
<title>operator new (59 samples, 0.12%)</title><rect x="985.7" y="293" width="1.4" height="15.0" fill="rgb(234,199,18)" rx="2" ry="2" />
<text  x="988.66" y="303.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (45 samples, 0.09%)</title><rect x="760.0" y="373" width="1.1" height="15.0" fill="rgb(238,63,31)" rx="2" ry="2" />
<text  x="763.00" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="872.9" y="341" width="0.1" height="15.0" fill="rgb(251,29,24)" rx="2" ry="2" />
<text  x="875.86" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="320.7" y="197" width="0.1" height="15.0" fill="rgb(240,217,18)" rx="2" ry="2" />
<text  x="323.70" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="389" width="0.7" height="15.0" fill="rgb(251,170,13)" rx="2" ry="2" />
<text  x="1140.90" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (20 samples, 0.04%)</title><rect x="664.8" y="485" width="0.5" height="15.0" fill="rgb(243,22,31)" rx="2" ry="2" />
<text  x="667.82" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (203 samples, 0.43%)</title><rect x="1089.3" y="277" width="5.1" height="15.0" fill="rgb(215,59,19)" rx="2" ry="2" />
<text  x="1092.34" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="960.6" y="405" width="0.2" height="15.0" fill="rgb(235,216,54)" rx="2" ry="2" />
<text  x="963.59" y="415.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="24.6" y="389" width="0.1" height="15.0" fill="rgb(232,35,39)" rx="2" ry="2" />
<text  x="27.56" y="399.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (22 samples, 0.05%)</title><rect x="80.3" y="453" width="0.6" height="15.0" fill="rgb(230,180,45)" rx="2" ry="2" />
<text  x="83.33" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (14 samples, 0.03%)</title><rect x="992.1" y="277" width="0.4" height="15.0" fill="rgb(238,13,9)" rx="2" ry="2" />
<text  x="995.11" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="920.2" y="357" width="0.2" height="15.0" fill="rgb(241,117,22)" rx="2" ry="2" />
<text  x="923.24" y="367.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (50 samples, 0.11%)</title><rect x="561.2" y="325" width="1.2" height="15.0" fill="rgb(234,145,21)" rx="2" ry="2" />
<text  x="564.19" y="335.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (6 samples, 0.01%)</title><rect x="609.9" y="389" width="0.2" height="15.0" fill="rgb(244,226,42)" rx="2" ry="2" />
<text  x="612.92" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (77 samples, 0.16%)</title><rect x="866.4" y="453" width="1.9" height="15.0" fill="rgb(224,122,9)" rx="2" ry="2" />
<text  x="869.36" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%)</title><rect x="141.3" y="261" width="0.2" height="15.0" fill="rgb(206,192,48)" rx="2" ry="2" />
<text  x="144.28" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="637.4" y="469" width="0.1" height="15.0" fill="rgb(217,216,16)" rx="2" ry="2" />
<text  x="640.37" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (7 samples, 0.01%)</title><rect x="654.0" y="437" width="0.2" height="15.0" fill="rgb(228,202,9)" rx="2" ry="2" />
<text  x="657.04" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="1014.6" y="277" width="0.2" height="15.0" fill="rgb(213,162,17)" rx="2" ry="2" />
<text  x="1017.63" y="287.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (53 samples, 0.11%)</title><rect x="774.3" y="357" width="1.3" height="15.0" fill="rgb(229,10,25)" rx="2" ry="2" />
<text  x="777.26" y="367.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (65 samples, 0.14%)</title><rect x="1095.4" y="309" width="1.7" height="15.0" fill="rgb(254,163,14)" rx="2" ry="2" />
<text  x="1098.44" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (39 samples, 0.08%)</title><rect x="944.0" y="389" width="0.9" height="15.0" fill="rgb(239,14,2)" rx="2" ry="2" />
<text  x="946.95" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="818.5" y="261" width="0.2" height="15.0" fill="rgb(220,84,5)" rx="2" ry="2" />
<text  x="821.47" y="271.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="156.1" y="181" width="0.4" height="15.0" fill="rgb(240,153,11)" rx="2" ry="2" />
<text  x="159.11" y="191.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="627.8" y="389" width="0.2" height="15.0" fill="rgb(237,153,34)" rx="2" ry="2" />
<text  x="630.80" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (52 samples, 0.11%)</title><rect x="1157.5" y="421" width="1.3" height="15.0" fill="rgb(212,162,42)" rx="2" ry="2" />
<text  x="1160.54" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%)</title><rect x="1003.7" y="293" width="0.1" height="15.0" fill="rgb(221,47,21)" rx="2" ry="2" />
<text  x="1006.67" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (40 samples, 0.08%)</title><rect x="1159.2" y="421" width="1.0" height="15.0" fill="rgb(222,172,6)" rx="2" ry="2" />
<text  x="1162.18" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (79 samples, 0.17%)</title><rect x="246.4" y="213" width="2.0" height="15.0" fill="rgb(206,152,48)" rx="2" ry="2" />
<text  x="249.43" y="223.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="540.3" y="325" width="0.7" height="15.0" fill="rgb(215,98,54)" rx="2" ry="2" />
<text  x="543.34" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="402.4" y="197" width="0.1" height="15.0" fill="rgb(235,103,37)" rx="2" ry="2" />
<text  x="405.41" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="612.7" y="421" width="0.2" height="15.0" fill="rgb(233,99,35)" rx="2" ry="2" />
<text  x="615.75" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (22 samples, 0.05%)</title><rect x="873.6" y="405" width="0.5" height="15.0" fill="rgb(249,206,41)" rx="2" ry="2" />
<text  x="876.60" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="397.9" y="229" width="0.1" height="15.0" fill="rgb(215,23,18)" rx="2" ry="2" />
<text  x="400.89" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (12 samples, 0.03%)</title><rect x="1063.6" y="277" width="0.3" height="15.0" fill="rgb(246,89,36)" rx="2" ry="2" />
<text  x="1066.55" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="1129.1" y="421" width="0.1" height="15.0" fill="rgb(223,17,11)" rx="2" ry="2" />
<text  x="1132.07" y="431.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="1096.6" y="245" width="0.2" height="15.0" fill="rgb(205,209,13)" rx="2" ry="2" />
<text  x="1099.58" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="96.5" y="421" width="0.5" height="15.0" fill="rgb(227,115,23)" rx="2" ry="2" />
<text  x="99.52" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (32 samples, 0.07%)</title><rect x="693.4" y="357" width="0.8" height="15.0" fill="rgb(243,180,17)" rx="2" ry="2" />
<text  x="696.42" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (30 samples, 0.06%)</title><rect x="679.1" y="437" width="0.8" height="15.0" fill="rgb(234,40,2)" rx="2" ry="2" />
<text  x="682.11" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (286 samples, 0.60%)</title><rect x="17.7" y="581" width="7.1" height="15.0" fill="rgb(250,13,22)" rx="2" ry="2" />
<text  x="20.69" y="591.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (7 samples, 0.01%)</title><rect x="685.0" y="469" width="0.1" height="15.0" fill="rgb(254,11,38)" rx="2" ry="2" />
<text  x="687.96" y="479.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (23 samples, 0.05%)</title><rect x="543.9" y="405" width="0.5" height="15.0" fill="rgb(221,172,4)" rx="2" ry="2" />
<text  x="546.86" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="796.4" y="229" width="0.2" height="15.0" fill="rgb(239,89,37)" rx="2" ry="2" />
<text  x="799.38" y="239.5" ></text>
</g>
<g >
<title>database::find_uuid (5 samples, 0.01%)</title><rect x="770.7" y="405" width="0.2" height="15.0" fill="rgb(208,124,26)" rx="2" ry="2" />
<text  x="773.74" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="81.4" y="453" width="0.3" height="15.0" fill="rgb(240,180,18)" rx="2" ry="2" />
<text  x="84.39" y="463.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,963 samples, 6.23%)</title><rect x="982.9" y="357" width="73.5" height="15.0" fill="rgb(217,185,42)" rx="2" ry="2" />
<text  x="985.89" y="367.5" >service:..</text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (100 samples, 0.21%)</title><rect x="686.7" y="469" width="2.5" height="15.0" fill="rgb(242,44,51)" rx="2" ry="2" />
<text  x="689.74" y="479.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (26 samples, 0.05%)</title><rect x="165.8" y="229" width="0.6" height="15.0" fill="rgb(205,59,24)" rx="2" ry="2" />
<text  x="168.78" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="263.9" y="325" width="0.2" height="15.0" fill="rgb(251,188,52)" rx="2" ry="2" />
<text  x="266.86" y="335.5" ></text>
</g>
<g >
<title>auth::resource::resource (101 samples, 0.21%)</title><rect x="775.6" y="389" width="2.5" height="15.0" fill="rgb(222,105,53)" rx="2" ry="2" />
<text  x="778.60" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (6 samples, 0.01%)</title><rect x="275.1" y="309" width="0.2" height="15.0" fill="rgb(205,85,4)" rx="2" ry="2" />
<text  x="278.14" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (55 samples, 0.12%)</title><rect x="1152.8" y="437" width="1.4" height="15.0" fill="rgb(212,136,48)" rx="2" ry="2" />
<text  x="1155.83" y="447.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (6 samples, 0.01%)</title><rect x="751.8" y="277" width="0.2" height="15.0" fill="rgb(227,5,5)" rx="2" ry="2" />
<text  x="754.84" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (10 samples, 0.02%)</title><rect x="838.1" y="405" width="0.2" height="15.0" fill="rgb(223,110,11)" rx="2" ry="2" />
<text  x="841.09" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="143.8" y="277" width="0.1" height="15.0" fill="rgb(244,16,29)" rx="2" ry="2" />
<text  x="146.76" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (343 samples, 0.72%)</title><rect x="36.7" y="485" width="8.5" height="15.0" fill="rgb(229,129,31)" rx="2" ry="2" />
<text  x="39.66" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%)</title><rect x="20.4" y="261" width="0.1" height="15.0" fill="rgb(208,46,10)" rx="2" ry="2" />
<text  x="23.39" y="271.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (541 samples, 1.14%)</title><rect x="476.4" y="309" width="13.4" height="15.0" fill="rgb(248,142,41)" rx="2" ry="2" />
<text  x="479.36" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (5 samples, 0.01%)</title><rect x="78.8" y="453" width="0.2" height="15.0" fill="rgb(207,110,43)" rx="2" ry="2" />
<text  x="81.84" y="463.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (13 samples, 0.03%)</title><rect x="308.9" y="197" width="0.3" height="15.0" fill="rgb(207,102,38)" rx="2" ry="2" />
<text  x="311.89" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (100 samples, 0.21%)</title><rect x="855.0" y="373" width="2.5" height="15.0" fill="rgb(209,148,39)" rx="2" ry="2" />
<text  x="858.03" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="900.8" y="293" width="0.4" height="15.0" fill="rgb(235,85,32)" rx="2" ry="2" />
<text  x="903.80" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (142 samples, 0.30%)</title><rect x="652.9" y="469" width="3.6" height="15.0" fill="rgb(232,162,17)" rx="2" ry="2" />
<text  x="655.94" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1123.1" y="421" width="0.1" height="15.0" fill="rgb(247,36,29)" rx="2" ry="2" />
<text  x="1126.09" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (11 samples, 0.02%)</title><rect x="680.1" y="437" width="0.3" height="15.0" fill="rgb(217,13,45)" rx="2" ry="2" />
<text  x="683.15" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (6 samples, 0.01%)</title><rect x="575.3" y="293" width="0.1" height="15.0" fill="rgb(209,47,13)" rx="2" ry="2" />
<text  x="578.30" y="303.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%)</title><rect x="654.7" y="405" width="0.3" height="15.0" fill="rgb(234,226,35)" rx="2" ry="2" />
<text  x="657.73" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="708.0" y="469" width="0.4" height="15.0" fill="rgb(250,122,15)" rx="2" ry="2" />
<text  x="711.02" y="479.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (16 samples, 0.03%)</title><rect x="71.4" y="389" width="0.4" height="15.0" fill="rgb(217,163,11)" rx="2" ry="2" />
<text  x="74.38" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="457.6" y="277" width="0.2" height="15.0" fill="rgb(212,36,5)" rx="2" ry="2" />
<text  x="460.63" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (27 samples, 0.06%)</title><rect x="73.1" y="373" width="0.6" height="15.0" fill="rgb(219,190,17)" rx="2" ry="2" />
<text  x="76.06" y="383.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (11 samples, 0.02%)</title><rect x="980.9" y="357" width="0.3" height="15.0" fill="rgb(231,48,45)" rx="2" ry="2" />
<text  x="983.93" y="367.5" ></text>
</g>
<g >
<title>std::variant&lt;cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::variant&lt;cql3::expr::untyped_constant, void, void, cql3::expr::untyped_constant, void&gt; (5 samples, 0.01%)</title><rect x="21.9" y="245" width="0.2" height="15.0" fill="rgb(244,104,4)" rx="2" ry="2" />
<text  x="24.93" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="78.4" y="453" width="0.2" height="15.0" fill="rgb(232,157,34)" rx="2" ry="2" />
<text  x="81.44" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (107 samples, 0.22%)</title><rect x="420.0" y="277" width="2.6" height="15.0" fill="rgb(221,37,27)" rx="2" ry="2" />
<text  x="422.96" y="287.5" ></text>
</g>
<g >
<title>query::querier&lt; (9 samples, 0.02%)</title><rect x="61.7" y="453" width="0.3" height="15.0" fill="rgb(238,20,13)" rx="2" ry="2" />
<text  x="64.73" y="463.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (14 samples, 0.03%)</title><rect x="24.9" y="581" width="0.3" height="15.0" fill="rgb(209,26,50)" rx="2" ry="2" />
<text  x="27.85" y="591.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (37 samples, 0.08%)</title><rect x="947.3" y="357" width="0.9" height="15.0" fill="rgb(227,30,23)" rx="2" ry="2" />
<text  x="950.30" y="367.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (9 samples, 0.02%)</title><rect x="668.5" y="469" width="0.2" height="15.0" fill="rgb(226,162,47)" rx="2" ry="2" />
<text  x="671.49" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (154 samples, 0.32%)</title><rect x="249.7" y="245" width="3.8" height="15.0" fill="rgb(241,191,32)" rx="2" ry="2" />
<text  x="252.70" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (48 samples, 0.10%)</title><rect x="799.9" y="181" width="1.2" height="15.0" fill="rgb(221,179,45)" rx="2" ry="2" />
<text  x="802.95" y="191.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="1154.7" y="437" width="0.8" height="15.0" fill="rgb(235,153,42)" rx="2" ry="2" />
<text  x="1157.69" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (37 samples, 0.08%)</title><rect x="957.5" y="373" width="1.0" height="15.0" fill="rgb(206,43,16)" rx="2" ry="2" />
<text  x="960.54" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (78 samples, 0.16%)</title><rect x="446.6" y="261" width="2.0" height="15.0" fill="rgb(206,112,23)" rx="2" ry="2" />
<text  x="449.62" y="271.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%)</title><rect x="395.7" y="181" width="0.4" height="15.0" fill="rgb(209,62,26)" rx="2" ry="2" />
<text  x="398.71" y="191.5" ></text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (65 samples, 0.14%)</title><rect x="1152.6" y="453" width="1.6" height="15.0" fill="rgb(234,170,2)" rx="2" ry="2" />
<text  x="1155.60" y="463.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="21.5" y="245" width="0.2" height="15.0" fill="rgb(226,151,36)" rx="2" ry="2" />
<text  x="24.53" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (9 samples, 0.02%)</title><rect x="871.1" y="501" width="0.2" height="15.0" fill="rgb(210,42,34)" rx="2" ry="2" />
<text  x="874.07" y="511.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (8 samples, 0.02%)</title><rect x="694.3" y="469" width="0.2" height="15.0" fill="rgb(209,117,19)" rx="2" ry="2" />
<text  x="697.31" y="479.5" ></text>
</g>
<g >
<title>database::find_keyspace (21 samples, 0.04%)</title><rect x="973.6" y="357" width="0.5" height="15.0" fill="rgb(250,71,39)" rx="2" ry="2" />
<text  x="976.59" y="367.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (252 samples, 0.53%)</title><rect x="733.3" y="421" width="6.2" height="15.0" fill="rgb(218,16,31)" rx="2" ry="2" />
<text  x="736.27" y="431.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (28 samples, 0.06%)</title><rect x="1033.3" y="149" width="0.7" height="15.0" fill="rgb(241,144,1)" rx="2" ry="2" />
<text  x="1036.30" y="159.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="666.4" y="485" width="0.2" height="15.0" fill="rgb(246,35,3)" rx="2" ry="2" />
<text  x="669.43" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (105 samples, 0.22%)</title><rect x="668.4" y="485" width="2.6" height="15.0" fill="rgb(242,15,42)" rx="2" ry="2" />
<text  x="671.39" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.13%)</title><rect x="279.4" y="261" width="1.6" height="15.0" fill="rgb(206,168,44)" rx="2" ry="2" />
<text  x="282.41" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="1077.4" y="325" width="0.1" height="15.0" fill="rgb(224,200,9)" rx="2" ry="2" />
<text  x="1080.37" y="335.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (12 samples, 0.03%)</title><rect x="1113.1" y="389" width="0.3" height="15.0" fill="rgb(237,102,51)" rx="2" ry="2" />
<text  x="1116.08" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,301 samples, 21.65%)</title><rect x="882.1" y="453" width="255.4" height="15.0" fill="rgb(213,94,36)" rx="2" ry="2" />
<text  x="885.06" y="463.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="525.1" y="325" width="0.3" height="15.0" fill="rgb(244,97,53)" rx="2" ry="2" />
<text  x="528.11" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (13 samples, 0.03%)</title><rect x="873.8" y="357" width="0.3" height="15.0" fill="rgb(225,48,21)" rx="2" ry="2" />
<text  x="876.80" y="367.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%)</title><rect x="856.3" y="341" width="0.4" height="15.0" fill="rgb(222,61,49)" rx="2" ry="2" />
<text  x="859.29" y="351.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (103 samples, 0.22%)</title><rect x="823.7" y="341" width="2.6" height="15.0" fill="rgb(247,187,7)" rx="2" ry="2" />
<text  x="826.73" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="593.8" y="405" width="0.2" height="15.0" fill="rgb(224,178,16)" rx="2" ry="2" />
<text  x="596.75" y="415.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,978 samples, 4.16%)</title><rect x="322.1" y="213" width="49.0" height="15.0" fill="rgb(242,0,51)" rx="2" ry="2" />
<text  x="325.06" y="223.5" >quer..</text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (51 samples, 0.11%)</title><rect x="595.2" y="421" width="1.3" height="15.0" fill="rgb(226,189,14)" rx="2" ry="2" />
<text  x="598.21" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (35 samples, 0.07%)</title><rect x="589.3" y="357" width="0.9" height="15.0" fill="rgb(249,149,32)" rx="2" ry="2" />
<text  x="592.29" y="367.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (51 samples, 0.11%)</title><rect x="769.1" y="325" width="1.2" height="15.0" fill="rgb(240,127,41)" rx="2" ry="2" />
<text  x="772.07" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="269.6" y="325" width="0.5" height="15.0" fill="rgb(243,229,12)" rx="2" ry="2" />
<text  x="272.56" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="24.9" y="517" width="0.3" height="15.0" fill="rgb(218,7,46)" rx="2" ry="2" />
<text  x="27.85" y="527.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (24 samples, 0.05%)</title><rect x="512.1" y="197" width="0.6" height="15.0" fill="rgb(248,3,43)" rx="2" ry="2" />
<text  x="515.14" y="207.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (203 samples, 0.43%)</title><rect x="276.5" y="309" width="5.0" height="15.0" fill="rgb(207,69,38)" rx="2" ry="2" />
<text  x="279.48" y="319.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (6 samples, 0.01%)</title><rect x="974.1" y="357" width="0.2" height="15.0" fill="rgb(239,127,2)" rx="2" ry="2" />
<text  x="977.11" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="696.8" y="469" width="0.2" height="15.0" fill="rgb(207,5,15)" rx="2" ry="2" />
<text  x="699.84" y="479.5" ></text>
</g>
<g >
<title>[[vdso]] (289 samples, 0.61%)</title><rect x="1178.6" y="613" width="7.1" height="15.0" fill="rgb(254,92,24)" rx="2" ry="2" />
<text  x="1181.57" y="623.5" ></text>
</g>
<g >
<title>seastar::gate::leave (19 samples, 0.04%)</title><rect x="64.8" y="405" width="0.4" height="15.0" fill="rgb(227,100,46)" rx="2" ry="2" />
<text  x="67.75" y="415.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (6 samples, 0.01%)</title><rect x="22.2" y="245" width="0.1" height="15.0" fill="rgb(228,13,19)" rx="2" ry="2" />
<text  x="25.18" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (54 samples, 0.11%)</title><rect x="764.7" y="341" width="1.3" height="15.0" fill="rgb(215,200,54)" rx="2" ry="2" />
<text  x="767.66" y="351.5" ></text>
</g>
<g >
<title>database::do_apply (26 samples, 0.05%)</title><rect x="1137.9" y="341" width="0.6" height="15.0" fill="rgb(207,49,47)" rx="2" ry="2" />
<text  x="1140.90" y="351.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%)</title><rect x="806.6" y="133" width="0.1" height="15.0" fill="rgb(231,64,43)" rx="2" ry="2" />
<text  x="809.57" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="968.9" y="373" width="0.2" height="15.0" fill="rgb(219,121,23)" rx="2" ry="2" />
<text  x="971.92" y="383.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (36 samples, 0.08%)</title><rect x="334.2" y="181" width="0.9" height="15.0" fill="rgb(237,87,45)" rx="2" ry="2" />
<text  x="337.21" y="191.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (265 samples, 0.56%)</title><rect x="18.2" y="501" width="6.5" height="15.0" fill="rgb(242,27,7)" rx="2" ry="2" />
<text  x="21.16" y="511.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (219 samples, 0.46%)</title><rect x="359.2" y="165" width="5.4" height="15.0" fill="rgb(242,98,11)" rx="2" ry="2" />
<text  x="362.21" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (14 samples, 0.03%)</title><rect x="24.9" y="501" width="0.3" height="15.0" fill="rgb(250,121,28)" rx="2" ry="2" />
<text  x="27.85" y="511.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (69 samples, 0.15%)</title><rect x="390.9" y="133" width="1.7" height="15.0" fill="rgb(209,88,49)" rx="2" ry="2" />
<text  x="393.88" y="143.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (987 samples, 2.07%)</title><rect x="465.3" y="325" width="24.5" height="15.0" fill="rgb(243,149,0)" rx="2" ry="2" />
<text  x="468.30" y="335.5" >d..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (243 samples, 0.51%)</title><rect x="636.7" y="501" width="6.0" height="15.0" fill="rgb(253,190,0)" rx="2" ry="2" />
<text  x="639.65" y="511.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (5 samples, 0.01%)</title><rect x="939.8" y="405" width="0.1" height="15.0" fill="rgb(246,20,45)" rx="2" ry="2" />
<text  x="942.81" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (98 samples, 0.21%)</title><rect x="808.1" y="133" width="2.5" height="15.0" fill="rgb(245,5,4)" rx="2" ry="2" />
<text  x="811.13" y="143.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (18 samples, 0.04%)</title><rect x="542.5" y="405" width="0.4" height="15.0" fill="rgb(222,26,2)" rx="2" ry="2" />
<text  x="545.49" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="823.5" y="341" width="0.2" height="15.0" fill="rgb(254,104,4)" rx="2" ry="2" />
<text  x="826.48" y="351.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (26 samples, 0.05%)</title><rect x="837.4" y="293" width="0.7" height="15.0" fill="rgb(229,210,9)" rx="2" ry="2" />
<text  x="840.42" y="303.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (25 samples, 0.05%)</title><rect x="1096.4" y="261" width="0.6" height="15.0" fill="rgb(227,5,24)" rx="2" ry="2" />
<text  x="1099.36" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (17 samples, 0.04%)</title><rect x="293.2" y="293" width="0.4" height="15.0" fill="rgb(205,76,0)" rx="2" ry="2" />
<text  x="296.22" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (6 samples, 0.01%)</title><rect x="422.8" y="341" width="0.2" height="15.0" fill="rgb(231,9,22)" rx="2" ry="2" />
<text  x="425.82" y="351.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (19 samples, 0.04%)</title><rect x="1129.4" y="421" width="0.5" height="15.0" fill="rgb(237,21,1)" rx="2" ry="2" />
<text  x="1132.39" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (9 samples, 0.02%)</title><rect x="862.7" y="357" width="0.2" height="15.0" fill="rgb(248,177,42)" rx="2" ry="2" />
<text  x="865.69" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="577.0" y="309" width="0.1" height="15.0" fill="rgb(209,13,38)" rx="2" ry="2" />
<text  x="579.99" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (10 samples, 0.02%)</title><rect x="857.2" y="325" width="0.2" height="15.0" fill="rgb(250,77,24)" rx="2" ry="2" />
<text  x="860.18" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (15 samples, 0.03%)</title><rect x="63.3" y="437" width="0.3" height="15.0" fill="rgb(242,225,44)" rx="2" ry="2" />
<text  x="66.27" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (29 samples, 0.06%)</title><rect x="123.7" y="309" width="0.8" height="15.0" fill="rgb(240,218,38)" rx="2" ry="2" />
<text  x="126.75" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (28 samples, 0.06%)</title><rect x="219.4" y="133" width="0.7" height="15.0" fill="rgb(229,132,8)" rx="2" ry="2" />
<text  x="222.42" y="143.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.01%)</title><rect x="1100.4" y="357" width="0.1" height="15.0" fill="rgb(226,216,4)" rx="2" ry="2" />
<text  x="1103.35" y="367.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::mhtraits&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, boost::intrusive::list_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="733.0" y="389" width="0.1" height="15.0" fill="rgb(240,131,41)" rx="2" ry="2" />
<text  x="736.02" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="429.2" y="405" width="0.1" height="15.0" fill="rgb(233,142,2)" rx="2" ry="2" />
<text  x="432.19" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (7 samples, 0.01%)</title><rect x="1101.9" y="341" width="0.1" height="15.0" fill="rgb(252,102,43)" rx="2" ry="2" />
<text  x="1104.87" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (25 samples, 0.05%)</title><rect x="836.5" y="309" width="0.6" height="15.0" fill="rgb(214,116,10)" rx="2" ry="2" />
<text  x="839.53" y="319.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="767.9" y="293" width="0.1" height="15.0" fill="rgb(244,218,10)" rx="2" ry="2" />
<text  x="770.86" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="868.1" y="421" width="0.2" height="15.0" fill="rgb(221,227,31)" rx="2" ry="2" />
<text  x="871.12" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (217 samples, 0.46%)</title><rect x="404.0" y="213" width="5.4" height="15.0" fill="rgb(211,215,39)" rx="2" ry="2" />
<text  x="406.99" y="223.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (13 samples, 0.03%)</title><rect x="139.9" y="229" width="0.3" height="15.0" fill="rgb(253,84,38)" rx="2" ry="2" />
<text  x="142.92" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (795 samples, 1.67%)</title><rect x="498.8" y="293" width="19.8" height="15.0" fill="rgb(216,88,14)" rx="2" ry="2" />
<text  x="501.85" y="303.5" ></text>
</g>
<g >
<title>operator new (89 samples, 0.19%)</title><rect x="966.1" y="373" width="2.2" height="15.0" fill="rgb(221,152,32)" rx="2" ry="2" />
<text  x="969.10" y="383.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (19 samples, 0.04%)</title><rect x="1029.5" y="181" width="0.4" height="15.0" fill="rgb(207,115,27)" rx="2" ry="2" />
<text  x="1032.46" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (13 samples, 0.03%)</title><rect x="27.1" y="517" width="0.3" height="15.0" fill="rgb(217,209,51)" rx="2" ry="2" />
<text  x="30.06" y="527.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="833.6" y="277" width="0.2" height="15.0" fill="rgb(214,93,32)" rx="2" ry="2" />
<text  x="836.60" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (17 samples, 0.04%)</title><rect x="753.1" y="277" width="0.4" height="15.0" fill="rgb(251,6,10)" rx="2" ry="2" />
<text  x="756.10" y="287.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="492.7" y="293" width="0.1" height="15.0" fill="rgb(247,18,2)" rx="2" ry="2" />
<text  x="495.67" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (500 samples, 1.05%)</title><rect x="131.1" y="277" width="12.4" height="15.0" fill="rgb(248,227,0)" rx="2" ry="2" />
<text  x="134.07" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (37 samples, 0.08%)</title><rect x="979.6" y="309" width="0.9" height="15.0" fill="rgb(251,214,20)" rx="2" ry="2" />
<text  x="982.59" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (32 samples, 0.07%)</title><rect x="680.4" y="453" width="0.8" height="15.0" fill="rgb(228,12,38)" rx="2" ry="2" />
<text  x="683.45" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (14 samples, 0.03%)</title><rect x="398.5" y="229" width="0.3" height="15.0" fill="rgb(252,229,28)" rx="2" ry="2" />
<text  x="401.46" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="1117.2" y="341" width="0.1" height="15.0" fill="rgb(244,73,17)" rx="2" ry="2" />
<text  x="1120.22" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (19 samples, 0.04%)</title><rect x="689.6" y="453" width="0.5" height="15.0" fill="rgb(244,98,30)" rx="2" ry="2" />
<text  x="692.60" y="463.5" ></text>
</g>
<g >
<title>db::block_for (8 samples, 0.02%)</title><rect x="1067.2" y="341" width="0.2" height="15.0" fill="rgb(241,141,37)" rx="2" ry="2" />
<text  x="1070.20" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (26 samples, 0.05%)</title><rect x="227.3" y="165" width="0.6" height="15.0" fill="rgb(210,106,38)" rx="2" ry="2" />
<text  x="230.28" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%)</title><rect x="555.7" y="405" width="0.2" height="15.0" fill="rgb(232,84,23)" rx="2" ry="2" />
<text  x="558.71" y="415.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (15 samples, 0.03%)</title><rect x="625.1" y="389" width="0.4" height="15.0" fill="rgb(238,180,0)" rx="2" ry="2" />
<text  x="628.10" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (518 samples, 1.09%)</title><rect x="271.4" y="357" width="12.9" height="15.0" fill="rgb(236,0,19)" rx="2" ry="2" />
<text  x="274.42" y="367.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="860.4" y="373" width="0.1" height="15.0" fill="rgb(232,123,19)" rx="2" ry="2" />
<text  x="863.41" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="1144.1" y="501" width="0.2" height="15.0" fill="rgb(229,71,34)" rx="2" ry="2" />
<text  x="1147.10" y="511.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (13 samples, 0.03%)</title><rect x="609.1" y="405" width="0.3" height="15.0" fill="rgb(228,87,52)" rx="2" ry="2" />
<text  x="612.05" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (64 samples, 0.13%)</title><rect x="918.4" y="341" width="1.6" height="15.0" fill="rgb(214,40,33)" rx="2" ry="2" />
<text  x="921.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="707.2" y="469" width="0.2" height="15.0" fill="rgb(206,22,16)" rx="2" ry="2" />
<text  x="710.23" y="479.5" ></text>
</g>
<g >
<title>seastar::gate::leave (9 samples, 0.02%)</title><rect x="612.4" y="437" width="0.2" height="15.0" fill="rgb(230,181,45)" rx="2" ry="2" />
<text  x="615.37" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (19 samples, 0.04%)</title><rect x="603.3" y="405" width="0.5" height="15.0" fill="rgb(250,57,42)" rx="2" ry="2" />
<text  x="606.35" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (15 samples, 0.03%)</title><rect x="610.8" y="437" width="0.4" height="15.0" fill="rgb(244,190,37)" rx="2" ry="2" />
<text  x="613.84" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (175 samples, 0.37%)</title><rect x="484.6" y="213" width="4.4" height="15.0" fill="rgb(236,197,42)" rx="2" ry="2" />
<text  x="487.61" y="223.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (14 samples, 0.03%)</title><rect x="287.3" y="405" width="0.3" height="15.0" fill="rgb(210,100,44)" rx="2" ry="2" />
<text  x="290.27" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="550.6" y="341" width="0.4" height="15.0" fill="rgb(222,142,1)" rx="2" ry="2" />
<text  x="553.63" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%)</title><rect x="126.2" y="293" width="0.2" height="15.0" fill="rgb(216,194,25)" rx="2" ry="2" />
<text  x="129.20" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (201 samples, 0.42%)</title><rect x="18.4" y="421" width="5.0" height="15.0" fill="rgb(249,34,4)" rx="2" ry="2" />
<text  x="21.43" y="431.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (37 samples, 0.08%)</title><rect x="1142.8" y="501" width="0.9" height="15.0" fill="rgb(245,43,5)" rx="2" ry="2" />
<text  x="1145.76" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (58 samples, 0.12%)</title><rect x="1020.5" y="213" width="1.4" height="15.0" fill="rgb(216,75,42)" rx="2" ry="2" />
<text  x="1023.50" y="223.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (6 samples, 0.01%)</title><rect x="631.8" y="437" width="0.2" height="15.0" fill="rgb(246,146,11)" rx="2" ry="2" />
<text  x="634.82" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (291 samples, 0.61%)</title><rect x="988.3" y="341" width="7.2" height="15.0" fill="rgb(224,172,2)" rx="2" ry="2" />
<text  x="991.29" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (17 samples, 0.04%)</title><rect x="613.3" y="437" width="0.5" height="15.0" fill="rgb(242,194,6)" rx="2" ry="2" />
<text  x="616.34" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::TrailingZeros&lt;unsigned int&gt; (5 samples, 0.01%)</title><rect x="1062.1" y="309" width="0.2" height="15.0" fill="rgb(250,118,0)" rx="2" ry="2" />
<text  x="1065.14" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="696.0" y="469" width="0.3" height="15.0" fill="rgb(227,169,31)" rx="2" ry="2" />
<text  x="698.99" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (128 samples, 0.27%)</title><rect x="1050.5" y="261" width="3.2" height="15.0" fill="rgb(247,76,37)" rx="2" ry="2" />
<text  x="1053.51" y="271.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (65 samples, 0.14%)</title><rect x="784.4" y="325" width="1.6" height="15.0" fill="rgb(226,222,54)" rx="2" ry="2" />
<text  x="787.42" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (30 samples, 0.06%)</title><rect x="871.7" y="501" width="0.7" height="15.0" fill="rgb(252,28,30)" rx="2" ry="2" />
<text  x="874.66" y="511.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="675.4" y="485" width="0.3" height="15.0" fill="rgb(253,94,45)" rx="2" ry="2" />
<text  x="678.36" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (10 samples, 0.02%)</title><rect x="20.8" y="341" width="0.2" height="15.0" fill="rgb(231,222,35)" rx="2" ry="2" />
<text  x="23.76" y="351.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="629.9" y="389" width="0.3" height="15.0" fill="rgb(233,84,46)" rx="2" ry="2" />
<text  x="632.86" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (20 samples, 0.04%)</title><rect x="417.1" y="261" width="0.5" height="15.0" fill="rgb(253,107,15)" rx="2" ry="2" />
<text  x="420.14" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (43 samples, 0.09%)</title><rect x="693.2" y="485" width="1.1" height="15.0" fill="rgb(246,61,43)" rx="2" ry="2" />
<text  x="696.22" y="495.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="438.0" y="341" width="0.2" height="15.0" fill="rgb(248,104,50)" rx="2" ry="2" />
<text  x="440.99" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="872.9" y="357" width="0.1" height="15.0" fill="rgb(209,142,38)" rx="2" ry="2" />
<text  x="875.86" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (135 samples, 0.28%)</title><rect x="217.3" y="165" width="3.3" height="15.0" fill="rgb(218,117,0)" rx="2" ry="2" />
<text  x="220.26" y="175.5" ></text>
</g>
<g >
<title>database::find_column_family (65 samples, 0.14%)</title><rect x="764.4" y="373" width="1.6" height="15.0" fill="rgb(213,17,1)" rx="2" ry="2" />
<text  x="767.39" y="383.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="354.3" y="165" width="0.3" height="15.0" fill="rgb(233,154,40)" rx="2" ry="2" />
<text  x="357.30" y="175.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (18 samples, 0.04%)</title><rect x="808.6" y="117" width="0.4" height="15.0" fill="rgb(241,171,41)" rx="2" ry="2" />
<text  x="811.58" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (30 samples, 0.06%)</title><rect x="424.6" y="325" width="0.7" height="15.0" fill="rgb(245,93,0)" rx="2" ry="2" />
<text  x="427.58" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="768.2" y="309" width="0.2" height="15.0" fill="rgb(221,36,2)" rx="2" ry="2" />
<text  x="771.18" y="319.5" ></text>
</g>
<g >
<title>operator delete (55 samples, 0.12%)</title><rect x="282.0" y="293" width="1.3" height="15.0" fill="rgb(230,161,11)" rx="2" ry="2" />
<text  x="284.96" y="303.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="100.8" y="389" width="0.9" height="15.0" fill="rgb(209,115,3)" rx="2" ry="2" />
<text  x="103.84" y="399.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (9 samples, 0.02%)</title><rect x="583.7" y="341" width="0.2" height="15.0" fill="rgb(208,21,24)" rx="2" ry="2" />
<text  x="586.68" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (9 samples, 0.02%)</title><rect x="840.3" y="389" width="0.2" height="15.0" fill="rgb(240,89,51)" rx="2" ry="2" />
<text  x="843.32" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="1128.1" y="389" width="0.4" height="15.0" fill="rgb(240,138,44)" rx="2" ry="2" />
<text  x="1131.08" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="1119.2" y="389" width="0.2" height="15.0" fill="rgb(252,0,39)" rx="2" ry="2" />
<text  x="1122.15" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (21 samples, 0.04%)</title><rect x="95.9" y="421" width="0.5" height="15.0" fill="rgb(237,145,11)" rx="2" ry="2" />
<text  x="98.93" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (7 samples, 0.01%)</title><rect x="82.8" y="453" width="0.2" height="15.0" fill="rgb(214,169,41)" rx="2" ry="2" />
<text  x="85.81" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (24 samples, 0.05%)</title><rect x="610.1" y="437" width="0.6" height="15.0" fill="rgb(225,132,30)" rx="2" ry="2" />
<text  x="613.07" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (27 samples, 0.06%)</title><rect x="103.6" y="421" width="0.7" height="15.0" fill="rgb(247,164,15)" rx="2" ry="2" />
<text  x="106.64" y="431.5" ></text>
</g>
<g >
<title>operator new (49 samples, 0.10%)</title><rect x="861.5" y="357" width="1.2" height="15.0" fill="rgb(214,128,48)" rx="2" ry="2" />
<text  x="864.47" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.06%)</title><rect x="201.7" y="117" width="0.7" height="15.0" fill="rgb(243,143,27)" rx="2" ry="2" />
<text  x="204.69" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="638.4" y="485" width="0.7" height="15.0" fill="rgb(209,48,18)" rx="2" ry="2" />
<text  x="641.44" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (23,420 samples, 49.22%)</title><rect x="52.7" y="485" width="580.8" height="15.0" fill="rgb(252,65,19)" rx="2" ry="2" />
<text  x="55.70" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (37 samples, 0.08%)</title><rect x="693.3" y="421" width="0.9" height="15.0" fill="rgb(251,79,23)" rx="2" ry="2" />
<text  x="696.32" y="431.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (315 samples, 0.66%)</title><rect x="1080.6" y="277" width="7.9" height="15.0" fill="rgb(243,61,5)" rx="2" ry="2" />
<text  x="1083.64" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (20 samples, 0.04%)</title><rect x="781.1" y="357" width="0.5" height="15.0" fill="rgb(220,104,18)" rx="2" ry="2" />
<text  x="784.08" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (93 samples, 0.20%)</title><rect x="860.6" y="373" width="2.3" height="15.0" fill="rgb(205,43,17)" rx="2" ry="2" />
<text  x="863.60" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%)</title><rect x="65.4" y="405" width="0.1" height="15.0" fill="rgb(218,46,34)" rx="2" ry="2" />
<text  x="68.37" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (12 samples, 0.03%)</title><rect x="34.8" y="469" width="0.3" height="15.0" fill="rgb(237,88,6)" rx="2" ry="2" />
<text  x="37.80" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (10 samples, 0.02%)</title><rect x="219.8" y="117" width="0.3" height="15.0" fill="rgb(219,151,39)" rx="2" ry="2" />
<text  x="222.82" y="127.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="662.1" y="485" width="1.1" height="15.0" fill="rgb(234,140,18)" rx="2" ry="2" />
<text  x="665.12" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (16 samples, 0.03%)</title><rect x="909.0" y="357" width="0.4" height="15.0" fill="rgb(233,229,23)" rx="2" ry="2" />
<text  x="911.96" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1038.8" y="229" width="0.2" height="15.0" fill="rgb(246,90,38)" rx="2" ry="2" />
<text  x="1041.81" y="239.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (20 samples, 0.04%)</title><rect x="1137.9" y="309" width="0.5" height="15.0" fill="rgb(206,28,26)" rx="2" ry="2" />
<text  x="1140.92" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="828.7" y="389" width="0.3" height="15.0" fill="rgb(218,100,13)" rx="2" ry="2" />
<text  x="831.74" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (5 samples, 0.01%)</title><rect x="912.0" y="373" width="0.1" height="15.0" fill="rgb(208,214,46)" rx="2" ry="2" />
<text  x="914.99" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (12 samples, 0.03%)</title><rect x="143.5" y="277" width="0.3" height="15.0" fill="rgb(221,42,25)" rx="2" ry="2" />
<text  x="146.46" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (7 samples, 0.01%)</title><rect x="160.9" y="197" width="0.1" height="15.0" fill="rgb(250,124,53)" rx="2" ry="2" />
<text  x="163.87" y="207.5" ></text>
</g>
<g >
<title>database::has_keyspace (127 samples, 0.27%)</title><rect x="854.4" y="405" width="3.2" height="15.0" fill="rgb(249,191,9)" rx="2" ry="2" />
<text  x="857.43" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (6 samples, 0.01%)</title><rect x="788.2" y="293" width="0.2" height="15.0" fill="rgb(221,91,5)" rx="2" ry="2" />
<text  x="791.24" y="303.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="704.8" y="469" width="0.2" height="15.0" fill="rgb(227,206,19)" rx="2" ry="2" />
<text  x="707.77" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1105.4" y="357" width="0.1" height="15.0" fill="rgb(238,153,52)" rx="2" ry="2" />
<text  x="1108.36" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="1029.3" y="181" width="0.2" height="15.0" fill="rgb(211,51,10)" rx="2" ry="2" />
<text  x="1032.28" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (9 samples, 0.02%)</title><rect x="991.2" y="293" width="0.2" height="15.0" fill="rgb(219,44,45)" rx="2" ry="2" />
<text  x="994.17" y="303.5" ></text>
</g>
<g >
<title>validation::validate_column_family (35 samples, 0.07%)</title><rect x="838.7" y="405" width="0.9" height="15.0" fill="rgb(245,31,22)" rx="2" ry="2" />
<text  x="841.73" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (5 samples, 0.01%)</title><rect x="743.5" y="389" width="0.1" height="15.0" fill="rgb(225,172,14)" rx="2" ry="2" />
<text  x="746.51" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="811.4" y="197" width="0.2" height="15.0" fill="rgb(245,22,54)" rx="2" ry="2" />
<text  x="814.43" y="207.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.05%)</title><rect x="292.6" y="293" width="0.6" height="15.0" fill="rgb(243,194,11)" rx="2" ry="2" />
<text  x="295.63" y="303.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="446.5" y="261" width="0.1" height="15.0" fill="rgb(242,136,32)" rx="2" ry="2" />
<text  x="449.50" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (46 samples, 0.10%)</title><rect x="150.7" y="245" width="1.1" height="15.0" fill="rgb(246,40,10)" rx="2" ry="2" />
<text  x="153.68" y="255.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="676.4" y="469" width="0.4" height="15.0" fill="rgb(241,108,42)" rx="2" ry="2" />
<text  x="679.40" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (16 samples, 0.03%)</title><rect x="36.0" y="485" width="0.4" height="15.0" fill="rgb(205,31,11)" rx="2" ry="2" />
<text  x="38.96" y="495.5" ></text>
</g>
<g >
<title>schema::get_sharder (61 samples, 0.13%)</title><rect x="1013.1" y="277" width="1.5" height="15.0" fill="rgb(229,74,28)" rx="2" ry="2" />
<text  x="1016.09" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (452 samples, 0.95%)</title><rect x="895.1" y="357" width="11.2" height="15.0" fill="rgb(215,212,28)" rx="2" ry="2" />
<text  x="898.12" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (105 samples, 0.22%)</title><rect x="20.3" y="373" width="2.6" height="15.0" fill="rgb(242,117,10)" rx="2" ry="2" />
<text  x="23.34" y="383.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (6 samples, 0.01%)</title><rect x="114.3" y="389" width="0.1" height="15.0" fill="rgb(219,180,50)" rx="2" ry="2" />
<text  x="117.25" y="399.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (403 samples, 0.85%)</title><rect x="801.2" y="213" width="10.0" height="15.0" fill="rgb(250,128,30)" rx="2" ry="2" />
<text  x="804.21" y="223.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="550.6" y="357" width="0.4" height="15.0" fill="rgb(209,2,41)" rx="2" ry="2" />
<text  x="553.55" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (22 samples, 0.05%)</title><rect x="665.4" y="485" width="0.5" height="15.0" fill="rgb(209,32,16)" rx="2" ry="2" />
<text  x="668.39" y="495.5" ></text>
</g>
<g >
<title>row_cache::make_reader (5 samples, 0.01%)</title><rect x="433.4" y="357" width="0.2" height="15.0" fill="rgb(206,6,52)" rx="2" ry="2" />
<text  x="436.43" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="533.6" y="309" width="0.2" height="15.0" fill="rgb(240,125,54)" rx="2" ry="2" />
<text  x="536.57" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="173.0" y="133" width="0.3" height="15.0" fill="rgb(227,54,2)" rx="2" ry="2" />
<text  x="176.05" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="910.8" y="309" width="0.4" height="15.0" fill="rgb(215,86,11)" rx="2" ry="2" />
<text  x="913.82" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (126 samples, 0.26%)</title><rect x="1085.3" y="229" width="3.2" height="15.0" fill="rgb(243,43,37)" rx="2" ry="2" />
<text  x="1088.33" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="960.8" y="405" width="0.1" height="15.0" fill="rgb(214,122,1)" rx="2" ry="2" />
<text  x="963.79" y="415.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (268 samples, 0.56%)</title><rect x="858.1" y="453" width="6.7" height="15.0" fill="rgb(220,54,7)" rx="2" ry="2" />
<text  x="861.15" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (202 samples, 0.42%)</title><rect x="990.5" y="325" width="5.0" height="15.0" fill="rgb(242,157,31)" rx="2" ry="2" />
<text  x="993.47" y="335.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="794.6" y="261" width="0.1" height="15.0" fill="rgb(233,36,41)" rx="2" ry="2" />
<text  x="797.62" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (28 samples, 0.06%)</title><rect x="947.5" y="325" width="0.7" height="15.0" fill="rgb(248,110,12)" rx="2" ry="2" />
<text  x="950.52" y="335.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (12 samples, 0.03%)</title><rect x="1068.8" y="341" width="0.3" height="15.0" fill="rgb(250,86,2)" rx="2" ry="2" />
<text  x="1071.84" y="351.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="580.2" y="341" width="0.7" height="15.0" fill="rgb(218,133,3)" rx="2" ry="2" />
<text  x="583.21" y="351.5" ></text>
</g>
<g >
<title>schema::position (9 samples, 0.02%)</title><rect x="1122.7" y="421" width="0.2" height="15.0" fill="rgb(252,144,30)" rx="2" ry="2" />
<text  x="1125.72" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1003.5" y="293" width="0.2" height="15.0" fill="rgb(246,13,41)" rx="2" ry="2" />
<text  x="1006.54" y="303.5" ></text>
</g>
<g >
<title>row::row (35 samples, 0.07%)</title><rect x="252.1" y="197" width="0.9" height="15.0" fill="rgb(229,207,26)" rx="2" ry="2" />
<text  x="255.11" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (204 samples, 0.43%)</title><rect x="152.6" y="229" width="5.1" height="15.0" fill="rgb(240,162,14)" rx="2" ry="2" />
<text  x="155.61" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="1077.2" y="325" width="0.2" height="15.0" fill="rgb(226,142,43)" rx="2" ry="2" />
<text  x="1080.19" y="335.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (88 samples, 0.18%)</title><rect x="423.3" y="373" width="2.1" height="15.0" fill="rgb(246,129,2)" rx="2" ry="2" />
<text  x="426.26" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="722.5" y="501" width="0.1" height="15.0" fill="rgb(254,180,5)" rx="2" ry="2" />
<text  x="725.45" y="511.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="202.4" y="117" width="0.2" height="15.0" fill="rgb(236,2,35)" rx="2" ry="2" />
<text  x="205.36" y="127.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (37 samples, 0.08%)</title><rect x="566.2" y="293" width="0.9" height="15.0" fill="rgb(227,9,35)" rx="2" ry="2" />
<text  x="569.15" y="303.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (211 samples, 0.44%)</title><rect x="18.2" y="453" width="5.2" height="15.0" fill="rgb(229,150,37)" rx="2" ry="2" />
<text  x="21.21" y="463.5" ></text>
</g>
<g >
<title>service::client_state::has_access (7 samples, 0.01%)</title><rect x="24.5" y="437" width="0.2" height="15.0" fill="rgb(216,222,2)" rx="2" ry="2" />
<text  x="27.53" y="447.5" ></text>
</g>
<g >
<title>std::variant&lt;query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::operator=&lt;query::noop_hasher&gt; (5 samples, 0.01%)</title><rect x="603.1" y="389" width="0.1" height="15.0" fill="rgb(218,217,3)" rx="2" ry="2" />
<text  x="606.10" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (17 samples, 0.04%)</title><rect x="329.9" y="181" width="0.4" height="15.0" fill="rgb(250,13,32)" rx="2" ry="2" />
<text  x="332.90" y="191.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (38 samples, 0.08%)</title><rect x="632.2" y="437" width="1.0" height="15.0" fill="rgb(231,99,5)" rx="2" ry="2" />
<text  x="635.21" y="447.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (76 samples, 0.16%)</title><rect x="547.6" y="373" width="1.8" height="15.0" fill="rgb(251,54,53)" rx="2" ry="2" />
<text  x="550.55" y="383.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (64 samples, 0.13%)</title><rect x="936.9" y="405" width="1.5" height="15.0" fill="rgb(208,162,7)" rx="2" ry="2" />
<text  x="939.86" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (12 samples, 0.03%)</title><rect x="453.0" y="277" width="0.3" height="15.0" fill="rgb(233,110,30)" rx="2" ry="2" />
<text  x="456.05" y="287.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (13 samples, 0.03%)</title><rect x="335.1" y="181" width="0.3" height="15.0" fill="rgb(254,57,51)" rx="2" ry="2" />
<text  x="338.11" y="191.5" ></text>
</g>
<g >
<title>__tls_init (15 samples, 0.03%)</title><rect x="491.5" y="309" width="0.4" height="15.0" fill="rgb(236,109,3)" rx="2" ry="2" />
<text  x="494.53" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="835.5" y="325" width="0.3" height="15.0" fill="rgb(213,143,13)" rx="2" ry="2" />
<text  x="838.53" y="335.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (192 samples, 0.40%)</title><rect x="453.9" y="309" width="4.7" height="15.0" fill="rgb(215,229,53)" rx="2" ry="2" />
<text  x="456.86" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="65.5" y="405" width="0.1" height="15.0" fill="rgb(209,69,18)" rx="2" ry="2" />
<text  x="68.52" y="415.5" ></text>
</g>
<g >
<title>__start_context (286 samples, 0.60%)</title><rect x="17.7" y="613" width="7.1" height="15.0" fill="rgb(251,8,3)" rx="2" ry="2" />
<text  x="20.69" y="623.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (472 samples, 0.99%)</title><rect x="707.5" y="485" width="11.7" height="15.0" fill="rgb(252,122,54)" rx="2" ry="2" />
<text  x="710.53" y="495.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (53 samples, 0.11%)</title><rect x="1110.9" y="373" width="1.4" height="15.0" fill="rgb(244,134,39)" rx="2" ry="2" />
<text  x="1113.94" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="72.2" y="389" width="0.3" height="15.0" fill="rgb(233,19,0)" rx="2" ry="2" />
<text  x="75.24" y="399.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (10 samples, 0.02%)</title><rect x="17.4" y="613" width="0.3" height="15.0" fill="rgb(222,137,3)" rx="2" ry="2" />
<text  x="20.41" y="623.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (6 samples, 0.01%)</title><rect x="146.0" y="261" width="0.1" height="15.0" fill="rgb(240,43,25)" rx="2" ry="2" />
<text  x="148.99" y="271.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="927.6" y="341" width="0.3" height="15.0" fill="rgb(239,129,11)" rx="2" ry="2" />
<text  x="930.61" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (6 samples, 0.01%)</title><rect x="22.2" y="261" width="0.1" height="15.0" fill="rgb(227,76,32)" rx="2" ry="2" />
<text  x="25.18" y="271.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (13 samples, 0.03%)</title><rect x="371.1" y="213" width="0.3" height="15.0" fill="rgb(206,225,32)" rx="2" ry="2" />
<text  x="374.11" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (93 samples, 0.20%)</title><rect x="659.7" y="469" width="2.3" height="15.0" fill="rgb(211,159,23)" rx="2" ry="2" />
<text  x="662.71" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (187 samples, 0.39%)</title><rect x="18.6" y="389" width="4.6" height="15.0" fill="rgb(245,43,38)" rx="2" ry="2" />
<text  x="21.58" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume (8 samples, 0.02%)</title><rect x="161.3" y="197" width="0.2" height="15.0" fill="rgb(212,67,9)" rx="2" ry="2" />
<text  x="164.32" y="207.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (39 samples, 0.08%)</title><rect x="319.7" y="181" width="1.0" height="15.0" fill="rgb(227,12,26)" rx="2" ry="2" />
<text  x="322.71" y="191.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="289.1" y="389" width="0.1" height="15.0" fill="rgb(230,18,29)" rx="2" ry="2" />
<text  x="292.08" y="399.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (7 samples, 0.01%)</title><rect x="24.5" y="421" width="0.2" height="15.0" fill="rgb(248,76,19)" rx="2" ry="2" />
<text  x="27.53" y="431.5" ></text>
</g>
<g >
<title>_ZSt5visitIR18overloaded_functorIJZN4cql34expr9find_atomIZNS2_4findERKNS2_10expressionENS2_6oper_tEEUlRKNS2_15binary_operatorEE_EEPS9_S6_T_EUlSA_E_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_8constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_11conjunctionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_12column_valueEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_5tokenEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_21unresolved_identifierEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_25column_mutation_attributeEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13function_callEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4castEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_15field_selectionEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_4nullEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_13bind_variableEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_16untyped_constantEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_17tuple_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_22collection_constructorEE_ZNS3_ISB_EESC_S6_SD_EUlRKNS2_20usertype_constructorEE_EEJRSt7variantIJSJ_S8_SN_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_SF_S1R_S1V_S1Z_EEEENSt13invoke_resultISD_JDpDTclsr3stdE3getILm0EEclsr3stdE7declvalIT0_EEEEEE4typeEOSD_DpOS29_ (6 samples, 0.01%)</title><rect x="958.0" y="341" width="0.1" height="15.0" fill="rgb(213,158,48)" rx="2" ry="2" />
<text  x="960.99" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (63 samples, 0.13%)</title><rect x="829.8" y="341" width="1.5" height="15.0" fill="rgb(232,108,40)" rx="2" ry="2" />
<text  x="832.76" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (118 samples, 0.25%)</title><rect x="1010.1" y="261" width="2.9" height="15.0" fill="rgb(210,3,24)" rx="2" ry="2" />
<text  x="1013.09" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (5 samples, 0.01%)</title><rect x="411.2" y="213" width="0.1" height="15.0" fill="rgb(226,111,20)" rx="2" ry="2" />
<text  x="414.21" y="223.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (35 samples, 0.07%)</title><rect x="1138.6" y="405" width="0.9" height="15.0" fill="rgb(211,152,26)" rx="2" ry="2" />
<text  x="1141.59" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="202.6" y="117" width="0.2" height="15.0" fill="rgb(220,80,13)" rx="2" ry="2" />
<text  x="205.58" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (75 samples, 0.16%)</title><rect x="804.7" y="133" width="1.9" height="15.0" fill="rgb(234,6,25)" rx="2" ry="2" />
<text  x="807.71" y="143.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (75 samples, 0.16%)</title><rect x="138.9" y="245" width="1.9" height="15.0" fill="rgb(240,160,15)" rx="2" ry="2" />
<text  x="141.93" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (93 samples, 0.20%)</title><rect x="753.8" y="293" width="2.3" height="15.0" fill="rgb(225,226,34)" rx="2" ry="2" />
<text  x="756.77" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (6 samples, 0.01%)</title><rect x="872.8" y="373" width="0.2" height="15.0" fill="rgb(251,203,44)" rx="2" ry="2" />
<text  x="875.83" y="383.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (8 samples, 0.02%)</title><rect x="1079.9" y="309" width="0.2" height="15.0" fill="rgb(230,91,27)" rx="2" ry="2" />
<text  x="1082.90" y="319.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (10 samples, 0.02%)</title><rect x="1056.1" y="325" width="0.3" height="15.0" fill="rgb(217,16,6)" rx="2" ry="2" />
<text  x="1059.11" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="1121.9" y="405" width="0.2" height="15.0" fill="rgb(221,36,28)" rx="2" ry="2" />
<text  x="1124.88" y="415.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="630.7" y="389" width="0.5" height="15.0" fill="rgb(254,216,52)" rx="2" ry="2" />
<text  x="633.65" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (25 samples, 0.05%)</title><rect x="715.6" y="453" width="0.6" height="15.0" fill="rgb(252,105,6)" rx="2" ry="2" />
<text  x="718.61" y="463.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (28 samples, 0.06%)</title><rect x="310.0" y="165" width="0.7" height="15.0" fill="rgb(248,112,16)" rx="2" ry="2" />
<text  x="312.98" y="175.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (275 samples, 0.58%)</title><rect x="205.6" y="165" width="6.9" height="15.0" fill="rgb(254,123,14)" rx="2" ry="2" />
<text  x="208.63" y="175.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (198 samples, 0.42%)</title><rect x="69.9" y="405" width="4.9" height="15.0" fill="rgb(250,129,35)" rx="2" ry="2" />
<text  x="72.86" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (19 samples, 0.04%)</title><rect x="1032.8" y="149" width="0.5" height="15.0" fill="rgb(240,195,21)" rx="2" ry="2" />
<text  x="1035.83" y="159.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.03%)</title><rect x="652.1" y="469" width="0.3" height="15.0" fill="rgb(252,209,15)" rx="2" ry="2" />
<text  x="655.08" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (22 samples, 0.05%)</title><rect x="408.2" y="165" width="0.5" height="15.0" fill="rgb(246,84,45)" rx="2" ry="2" />
<text  x="411.16" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (20 samples, 0.04%)</title><rect x="656.8" y="437" width="0.5" height="15.0" fill="rgb(243,105,50)" rx="2" ry="2" />
<text  x="659.76" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="166.3" y="213" width="0.1" height="15.0" fill="rgb(221,58,27)" rx="2" ry="2" />
<text  x="169.25" y="223.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,697 samples, 5.67%)</title><rect x="771.2" y="405" width="66.9" height="15.0" fill="rgb(245,169,40)" rx="2" ry="2" />
<text  x="774.21" y="415.5" >service..</text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (11 samples, 0.02%)</title><rect x="607.5" y="421" width="0.3" height="15.0" fill="rgb(220,32,12)" rx="2" ry="2" />
<text  x="610.51" y="431.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (5 samples, 0.01%)</title><rect x="1162.3" y="453" width="0.1" height="15.0" fill="rgb(208,79,13)" rx="2" ry="2" />
<text  x="1165.25" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (7 samples, 0.01%)</title><rect x="1138.7" y="261" width="0.2" height="15.0" fill="rgb(228,207,32)" rx="2" ry="2" />
<text  x="1141.69" y="271.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="247.5" y="181" width="0.6" height="15.0" fill="rgb(209,92,53)" rx="2" ry="2" />
<text  x="250.47" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="906.6" y="341" width="0.2" height="15.0" fill="rgb(237,52,22)" rx="2" ry="2" />
<text  x="909.58" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5 samples, 0.01%)</title><rect x="961.1" y="405" width="0.2" height="15.0" fill="rgb(246,177,2)" rx="2" ry="2" />
<text  x="964.14" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (28 samples, 0.06%)</title><rect x="748.5" y="357" width="0.7" height="15.0" fill="rgb(245,193,13)" rx="2" ry="2" />
<text  x="751.54" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (28 samples, 0.06%)</title><rect x="752.9" y="293" width="0.7" height="15.0" fill="rgb(252,16,43)" rx="2" ry="2" />
<text  x="755.88" y="303.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (5 samples, 0.01%)</title><rect x="834.9" y="293" width="0.1" height="15.0" fill="rgb(243,201,34)" rx="2" ry="2" />
<text  x="837.86" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (29 samples, 0.06%)</title><rect x="1032.1" y="149" width="0.7" height="15.0" fill="rgb(219,188,5)" rx="2" ry="2" />
<text  x="1035.11" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (10 samples, 0.02%)</title><rect x="217.0" y="133" width="0.2" height="15.0" fill="rgb(237,190,2)" rx="2" ry="2" />
<text  x="219.99" y="143.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (84 samples, 0.18%)</title><rect x="547.4" y="389" width="2.1" height="15.0" fill="rgb(224,205,51)" rx="2" ry="2" />
<text  x="550.38" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (24 samples, 0.05%)</title><rect x="141.5" y="261" width="0.6" height="15.0" fill="rgb(247,35,36)" rx="2" ry="2" />
<text  x="144.46" y="271.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (206 samples, 0.43%)</title><rect x="733.9" y="389" width="5.1" height="15.0" fill="rgb(247,98,13)" rx="2" ry="2" />
<text  x="736.86" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (17 samples, 0.04%)</title><rect x="23.8" y="405" width="0.4" height="15.0" fill="rgb(212,228,53)" rx="2" ry="2" />
<text  x="26.76" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="935.1" y="357" width="0.1" height="15.0" fill="rgb(240,27,4)" rx="2" ry="2" />
<text  x="938.07" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,156 samples, 4.53%)</title><rect x="168.4" y="197" width="53.5" height="15.0" fill="rgb(246,226,29)" rx="2" ry="2" />
<text  x="171.41" y="207.5" >parti..</text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (16 samples, 0.03%)</title><rect x="705.5" y="469" width="0.4" height="15.0" fill="rgb(222,1,33)" rx="2" ry="2" />
<text  x="708.52" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="1053.1" y="213" width="0.6" height="15.0" fill="rgb(228,21,25)" rx="2" ry="2" />
<text  x="1056.14" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (7 samples, 0.01%)</title><rect x="1001.4" y="277" width="0.2" height="15.0" fill="rgb(242,158,35)" rx="2" ry="2" />
<text  x="1004.43" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="284.1" y="341" width="0.2" height="15.0" fill="rgb(241,42,0)" rx="2" ry="2" />
<text  x="287.14" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (82 samples, 0.17%)</title><rect x="1156.8" y="453" width="2.1" height="15.0" fill="rgb(228,177,15)" rx="2" ry="2" />
<text  x="1159.84" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%)</title><rect x="856.1" y="357" width="0.6" height="15.0" fill="rgb(249,14,26)" rx="2" ry="2" />
<text  x="859.09" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (23 samples, 0.05%)</title><rect x="1149.9" y="453" width="0.6" height="15.0" fill="rgb(243,18,9)" rx="2" ry="2" />
<text  x="1152.90" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (659 samples, 1.38%)</title><rect x="500.5" y="277" width="16.3" height="15.0" fill="rgb(219,208,17)" rx="2" ry="2" />
<text  x="503.46" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,862 samples, 3.91%)</title><rect x="323.2" y="197" width="46.2" height="15.0" fill="rgb(246,66,53)" rx="2" ry="2" />
<text  x="326.20" y="207.5" >muta..</text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (144 samples, 0.30%)</title><rect x="249.8" y="229" width="3.6" height="15.0" fill="rgb(248,210,25)" rx="2" ry="2" />
<text  x="252.85" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (62 samples, 0.13%)</title><rect x="1020.4" y="229" width="1.5" height="15.0" fill="rgb(227,25,23)" rx="2" ry="2" />
<text  x="1023.40" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="828.1" y="341" width="0.2" height="15.0" fill="rgb(243,117,1)" rx="2" ry="2" />
<text  x="831.12" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt;::allocate (5 samples, 0.01%)</title><rect x="247.3" y="181" width="0.2" height="15.0" fill="rgb(212,159,37)" rx="2" ry="2" />
<text  x="250.34" y="191.5" ></text>
</g>
<g >
<title>tracing::add_table_name (35 samples, 0.07%)</title><rect x="1135.1" y="421" width="0.9" height="15.0" fill="rgb(211,107,27)" rx="2" ry="2" />
<text  x="1138.10" y="431.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (15 samples, 0.03%)</title><rect x="39.1" y="437" width="0.4" height="15.0" fill="rgb(227,5,50)" rx="2" ry="2" />
<text  x="42.14" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (22 samples, 0.05%)</title><rect x="572.0" y="277" width="0.6" height="15.0" fill="rgb(238,31,11)" rx="2" ry="2" />
<text  x="575.03" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (14 samples, 0.03%)</title><rect x="408.8" y="197" width="0.4" height="15.0" fill="rgb(232,218,18)" rx="2" ry="2" />
<text  x="411.81" y="207.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (122 samples, 0.26%)</title><rect x="535.2" y="309" width="3.0" height="15.0" fill="rgb(248,71,40)" rx="2" ry="2" />
<text  x="538.20" y="319.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (65 samples, 0.14%)</title><rect x="746.5" y="357" width="1.6" height="15.0" fill="rgb(205,65,19)" rx="2" ry="2" />
<text  x="749.53" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (748 samples, 1.57%)</title><rect x="1078.5" y="325" width="18.6" height="15.0" fill="rgb(208,148,9)" rx="2" ry="2" />
<text  x="1081.51" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (180 samples, 0.38%)</title><rect x="766.2" y="373" width="4.4" height="15.0" fill="rgb(245,137,40)" rx="2" ry="2" />
<text  x="769.17" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (12 samples, 0.03%)</title><rect x="1028.8" y="197" width="0.3" height="15.0" fill="rgb(208,99,27)" rx="2" ry="2" />
<text  x="1031.81" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (74 samples, 0.16%)</title><rect x="704.5" y="485" width="1.9" height="15.0" fill="rgb(239,167,51)" rx="2" ry="2" />
<text  x="707.52" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="673.2" y="469" width="0.1" height="15.0" fill="rgb(234,220,30)" rx="2" ry="2" />
<text  x="676.15" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (12 samples, 0.03%)</title><rect x="173.3" y="133" width="0.3" height="15.0" fill="rgb(249,143,49)" rx="2" ry="2" />
<text  x="176.30" y="143.5" ></text>
</g>
<g >
<title>__dynamic_cast (13 samples, 0.03%)</title><rect x="889.7" y="421" width="0.4" height="15.0" fill="rgb(250,89,3)" rx="2" ry="2" />
<text  x="892.74" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::consume (11 samples, 0.02%)</title><rect x="693.7" y="277" width="0.2" height="15.0" fill="rgb(217,77,52)" rx="2" ry="2" />
<text  x="696.66" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (24 samples, 0.05%)</title><rect x="818.1" y="277" width="0.6" height="15.0" fill="rgb(241,68,15)" rx="2" ry="2" />
<text  x="821.08" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (51 samples, 0.11%)</title><rect x="401.3" y="213" width="1.2" height="15.0" fill="rgb(206,201,38)" rx="2" ry="2" />
<text  x="404.27" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (124 samples, 0.26%)</title><rect x="38.8" y="453" width="3.1" height="15.0" fill="rgb(251,115,17)" rx="2" ry="2" />
<text  x="41.84" y="463.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (20 samples, 0.04%)</title><rect x="768.1" y="325" width="0.5" height="15.0" fill="rgb(253,173,17)" rx="2" ry="2" />
<text  x="771.06" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (5 samples, 0.01%)</title><rect x="146.1" y="261" width="0.2" height="15.0" fill="rgb(219,175,46)" rx="2" ry="2" />
<text  x="149.14" y="271.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1055.0" y="293" width="0.2" height="15.0" fill="rgb(231,143,54)" rx="2" ry="2" />
<text  x="1058.05" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (10 samples, 0.02%)</title><rect x="825.9" y="261" width="0.2" height="15.0" fill="rgb(210,152,47)" rx="2" ry="2" />
<text  x="828.89" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1040.9" y="181" width="0.5" height="15.0" fill="rgb(228,57,14)" rx="2" ry="2" />
<text  x="1043.94" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (95 samples, 0.20%)</title><rect x="158.3" y="197" width="2.3" height="15.0" fill="rgb(247,31,22)" rx="2" ry="2" />
<text  x="161.29" y="207.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,410 samples, 21.88%)</title><rect x="879.4" y="469" width="258.1" height="15.0" fill="rgb(252,149,38)" rx="2" ry="2" />
<text  x="882.35" y="479.5" >seastar::noncopyable_function&lt;seas..</text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (11 samples, 0.02%)</title><rect x="245.7" y="213" width="0.3" height="15.0" fill="rgb(253,102,4)" rx="2" ry="2" />
<text  x="248.71" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="43.8" y="437" width="0.2" height="15.0" fill="rgb(209,221,54)" rx="2" ry="2" />
<text  x="46.75" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="958.1" y="341" width="0.4" height="15.0" fill="rgb(237,55,49)" rx="2" ry="2" />
<text  x="961.14" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="554.7" y="421" width="0.3" height="15.0" fill="rgb(209,185,42)" rx="2" ry="2" />
<text  x="557.74" y="431.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (35 samples, 0.07%)</title><rect x="41.0" y="421" width="0.9" height="15.0" fill="rgb(230,40,26)" rx="2" ry="2" />
<text  x="44.05" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (6 samples, 0.01%)</title><rect x="225.6" y="165" width="0.1" height="15.0" fill="rgb(252,227,19)" rx="2" ry="2" />
<text  x="228.57" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (138 samples, 0.29%)</title><rect x="405.4" y="197" width="3.4" height="15.0" fill="rgb(205,143,23)" rx="2" ry="2" />
<text  x="408.38" y="207.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="60.9" y="453" width="0.6" height="15.0" fill="rgb(215,46,53)" rx="2" ry="2" />
<text  x="63.86" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (669 samples, 1.41%)</title><rect x="795.2" y="261" width="16.6" height="15.0" fill="rgb(248,69,34)" rx="2" ry="2" />
<text  x="798.21" y="271.5" ></text>
</g>
<g >
<title>database::has_keyspace (114 samples, 0.24%)</title><rect x="835.3" y="357" width="2.8" height="15.0" fill="rgb(244,45,26)" rx="2" ry="2" />
<text  x="838.26" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (149 samples, 0.31%)</title><rect x="471.6" y="261" width="3.7" height="15.0" fill="rgb(238,159,5)" rx="2" ry="2" />
<text  x="474.57" y="271.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (7 samples, 0.01%)</title><rect x="227.9" y="181" width="0.2" height="15.0" fill="rgb(251,66,38)" rx="2" ry="2" />
<text  x="230.93" y="191.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="856.8" y="357" width="0.1" height="15.0" fill="rgb(250,40,47)" rx="2" ry="2" />
<text  x="859.76" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (10 samples, 0.02%)</title><rect x="375.7" y="197" width="0.2" height="15.0" fill="rgb(247,131,49)" rx="2" ry="2" />
<text  x="378.70" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (43 samples, 0.09%)</title><rect x="541.4" y="389" width="1.1" height="15.0" fill="rgb(232,88,30)" rx="2" ry="2" />
<text  x="544.43" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (6 samples, 0.01%)</title><rect x="1055.2" y="293" width="0.1" height="15.0" fill="rgb(243,4,9)" rx="2" ry="2" />
<text  x="1058.17" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="903.9" y="261" width="0.5" height="15.0" fill="rgb(217,5,28)" rx="2" ry="2" />
<text  x="906.88" y="271.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="20.4" y="277" width="0.1" height="15.0" fill="rgb(227,167,10)" rx="2" ry="2" />
<text  x="23.39" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (57 samples, 0.12%)</title><rect x="985.7" y="277" width="1.4" height="15.0" fill="rgb(231,74,8)" rx="2" ry="2" />
<text  x="988.71" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (84 samples, 0.18%)</title><rect x="966.2" y="357" width="2.1" height="15.0" fill="rgb(237,19,53)" rx="2" ry="2" />
<text  x="969.17" y="367.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (26 samples, 0.05%)</title><rect x="1176.8" y="629" width="0.7" height="15.0" fill="rgb(216,125,32)" rx="2" ry="2" />
<text  x="1179.83" y="639.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (6 samples, 0.01%)</title><rect x="816.1" y="277" width="0.2" height="15.0" fill="rgb(207,135,46)" rx="2" ry="2" />
<text  x="819.14" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="1154.8" y="421" width="0.7" height="15.0" fill="rgb(235,189,11)" rx="2" ry="2" />
<text  x="1157.76" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (15 samples, 0.03%)</title><rect x="488.5" y="181" width="0.4" height="15.0" fill="rgb(228,189,23)" rx="2" ry="2" />
<text  x="491.48" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (5 samples, 0.01%)</title><rect x="1027.4" y="213" width="0.2" height="15.0" fill="rgb(219,33,0)" rx="2" ry="2" />
<text  x="1030.45" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="519.3" y="325" width="0.3" height="15.0" fill="rgb(251,213,35)" rx="2" ry="2" />
<text  x="522.28" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (29 samples, 0.06%)</title><rect x="654.3" y="437" width="0.7" height="15.0" fill="rgb(214,138,30)" rx="2" ry="2" />
<text  x="657.26" y="447.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (18 samples, 0.04%)</title><rect x="429.0" y="421" width="0.5" height="15.0" fill="rgb(229,21,30)" rx="2" ry="2" />
<text  x="432.02" y="431.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.05%)</title><rect x="678.0" y="453" width="0.6" height="15.0" fill="rgb(236,211,21)" rx="2" ry="2" />
<text  x="680.99" y="463.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (13 samples, 0.03%)</title><rect x="844.1" y="373" width="0.4" height="15.0" fill="rgb(225,20,45)" rx="2" ry="2" />
<text  x="847.14" y="383.5" ></text>
</g>
<g >
<title>table::query (23 samples, 0.05%)</title><rect x="1174.6" y="501" width="0.5" height="15.0" fill="rgb(242,13,45)" rx="2" ry="2" />
<text  x="1177.55" y="511.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (11 samples, 0.02%)</title><rect x="19.4" y="245" width="0.3" height="15.0" fill="rgb(254,111,46)" rx="2" ry="2" />
<text  x="22.45" y="255.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="250.6" y="213" width="0.1" height="15.0" fill="rgb(250,34,41)" rx="2" ry="2" />
<text  x="253.62" y="223.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (190 samples, 0.40%)</title><rect x="1072.3" y="325" width="4.7" height="15.0" fill="rgb(236,28,9)" rx="2" ry="2" />
<text  x="1075.33" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::getCurrentInputSymbol (6 samples, 0.01%)</title><rect x="20.4" y="309" width="0.1" height="15.0" fill="rgb(229,140,5)" rx="2" ry="2" />
<text  x="23.37" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (13 samples, 0.03%)</title><rect x="261.3" y="277" width="0.3" height="15.0" fill="rgb(218,181,7)" rx="2" ry="2" />
<text  x="264.31" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="969.2" y="373" width="0.2" height="15.0" fill="rgb(228,134,48)" rx="2" ry="2" />
<text  x="972.17" y="383.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%)</title><rect x="402.5" y="213" width="0.2" height="15.0" fill="rgb(239,20,28)" rx="2" ry="2" />
<text  x="405.53" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="56.8" y="469" width="0.3" height="15.0" fill="rgb(242,190,50)" rx="2" ry="2" />
<text  x="59.82" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="1077.0" y="325" width="0.2" height="15.0" fill="rgb(254,30,3)" rx="2" ry="2" />
<text  x="1080.04" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (90 samples, 0.19%)</title><rect x="455.0" y="277" width="2.2" height="15.0" fill="rgb(216,223,32)" rx="2" ry="2" />
<text  x="458.00" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="643.4" y="469" width="0.2" height="15.0" fill="rgb(230,172,20)" rx="2" ry="2" />
<text  x="646.45" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (14 samples, 0.03%)</title><rect x="633.7" y="469" width="0.3" height="15.0" fill="rgb(211,145,23)" rx="2" ry="2" />
<text  x="636.65" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (18 samples, 0.04%)</title><rect x="524.0" y="325" width="0.4" height="15.0" fill="rgb(205,28,1)" rx="2" ry="2" />
<text  x="526.97" y="335.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (74 samples, 0.16%)</title><rect x="451.7" y="309" width="1.8" height="15.0" fill="rgb(244,155,53)" rx="2" ry="2" />
<text  x="454.68" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (68 samples, 0.14%)</title><rect x="202.8" y="117" width="1.7" height="15.0" fill="rgb(212,183,44)" rx="2" ry="2" />
<text  x="205.78" y="127.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="294.3" y="293" width="0.1" height="15.0" fill="rgb(225,93,13)" rx="2" ry="2" />
<text  x="297.26" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (10 samples, 0.02%)</title><rect x="266.3" y="341" width="0.2" height="15.0" fill="rgb(208,37,1)" rx="2" ry="2" />
<text  x="269.27" y="351.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (19 samples, 0.04%)</title><rect x="512.3" y="181" width="0.4" height="15.0" fill="rgb(222,219,49)" rx="2" ry="2" />
<text  x="515.26" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (176 samples, 0.37%)</title><rect x="802.5" y="165" width="4.3" height="15.0" fill="rgb(230,198,39)" rx="2" ry="2" />
<text  x="805.48" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (79 samples, 0.17%)</title><rect x="746.3" y="373" width="1.9" height="15.0" fill="rgb(208,67,7)" rx="2" ry="2" />
<text  x="749.26" y="383.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="598.4" y="389" width="0.5" height="15.0" fill="rgb(232,2,1)" rx="2" ry="2" />
<text  x="601.44" y="399.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (19 samples, 0.04%)</title><rect x="1098.2" y="309" width="0.5" height="15.0" fill="rgb(235,2,27)" rx="2" ry="2" />
<text  x="1101.20" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="791.2" y="277" width="0.2" height="15.0" fill="rgb(209,81,32)" rx="2" ry="2" />
<text  x="794.19" y="287.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (20 samples, 0.04%)</title><rect x="1099.2" y="341" width="0.5" height="15.0" fill="rgb(253,109,17)" rx="2" ry="2" />
<text  x="1102.21" y="351.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (21 samples, 0.04%)</title><rect x="810.0" y="101" width="0.6" height="15.0" fill="rgb(209,58,5)" rx="2" ry="2" />
<text  x="813.04" y="111.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="1111.6" y="357" width="0.2" height="15.0" fill="rgb(253,8,24)" rx="2" ry="2" />
<text  x="1114.64" y="367.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (32 samples, 0.07%)</title><rect x="213.6" y="165" width="0.8" height="15.0" fill="rgb(226,175,35)" rx="2" ry="2" />
<text  x="216.64" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="48.3" y="485" width="0.3" height="15.0" fill="rgb(213,23,54)" rx="2" ry="2" />
<text  x="51.26" y="495.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="20.4" y="245" width="0.1" height="15.0" fill="rgb(219,229,32)" rx="2" ry="2" />
<text  x="23.39" y="255.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (120 samples, 0.25%)</title><rect x="949.0" y="405" width="3.0" height="15.0" fill="rgb(232,215,22)" rx="2" ry="2" />
<text  x="952.01" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (35 samples, 0.07%)</title><rect x="656.5" y="469" width="0.8" height="15.0" fill="rgb(253,79,42)" rx="2" ry="2" />
<text  x="659.47" y="479.5" ></text>
</g>
<g >
<title>schema::column_at (70 samples, 0.15%)</title><rect x="393.8" y="165" width="1.7" height="15.0" fill="rgb(220,98,3)" rx="2" ry="2" />
<text  x="396.80" y="175.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (93 samples, 0.20%)</title><rect x="551.0" y="357" width="2.4" height="15.0" fill="rgb(223,176,24)" rx="2" ry="2" />
<text  x="554.05" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (14 samples, 0.03%)</title><rect x="1174.6" y="453" width="0.3" height="15.0" fill="rgb(229,127,47)" rx="2" ry="2" />
<text  x="1177.60" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="397.5" y="181" width="0.1" height="15.0" fill="rgb(209,175,6)" rx="2" ry="2" />
<text  x="400.47" y="191.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1138.6" y="437" width="0.9" height="15.0" fill="rgb(234,108,36)" rx="2" ry="2" />
<text  x="1141.59" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (14 samples, 0.03%)</title><rect x="510.3" y="213" width="0.3" height="15.0" fill="rgb(209,74,26)" rx="2" ry="2" />
<text  x="513.26" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (16 samples, 0.03%)</title><rect x="586.3" y="341" width="0.4" height="15.0" fill="rgb(239,70,46)" rx="2" ry="2" />
<text  x="589.29" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (47 samples, 0.10%)</title><rect x="1011.8" y="245" width="1.2" height="15.0" fill="rgb(234,51,15)" rx="2" ry="2" />
<text  x="1014.85" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="576.7" y="309" width="0.2" height="15.0" fill="rgb(232,128,44)" rx="2" ry="2" />
<text  x="579.69" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (16 samples, 0.03%)</title><rect x="836.7" y="293" width="0.4" height="15.0" fill="rgb(206,78,27)" rx="2" ry="2" />
<text  x="839.75" y="303.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%)</title><rect x="956.7" y="389" width="0.2" height="15.0" fill="rgb(208,24,21)" rx="2" ry="2" />
<text  x="959.75" y="399.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (6 samples, 0.01%)</title><rect x="626.9" y="437" width="0.1" height="15.0" fill="rgb(234,59,12)" rx="2" ry="2" />
<text  x="629.86" y="447.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (59 samples, 0.12%)</title><rect x="267.9" y="325" width="1.4" height="15.0" fill="rgb(248,9,52)" rx="2" ry="2" />
<text  x="270.88" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (41 samples, 0.09%)</title><rect x="734.5" y="341" width="1.0" height="15.0" fill="rgb(211,203,19)" rx="2" ry="2" />
<text  x="737.53" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (221 samples, 0.46%)</title><rect x="750.7" y="341" width="5.5" height="15.0" fill="rgb(230,35,30)" rx="2" ry="2" />
<text  x="753.72" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (82 samples, 0.17%)</title><rect x="240.1" y="181" width="2.0" height="15.0" fill="rgb(244,206,29)" rx="2" ry="2" />
<text  x="243.08" y="191.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (52 samples, 0.11%)</title><rect x="809.3" y="117" width="1.3" height="15.0" fill="rgb(231,124,12)" rx="2" ry="2" />
<text  x="812.27" y="127.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="696.3" y="485" width="0.2" height="15.0" fill="rgb(217,142,43)" rx="2" ry="2" />
<text  x="699.34" y="495.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (12 samples, 0.03%)</title><rect x="1035.3" y="165" width="0.3" height="15.0" fill="rgb(248,68,17)" rx="2" ry="2" />
<text  x="1038.31" y="175.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.01%)</title><rect x="24.6" y="373" width="0.1" height="15.0" fill="rgb(247,34,24)" rx="2" ry="2" />
<text  x="27.56" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (15 samples, 0.03%)</title><rect x="260.7" y="277" width="0.4" height="15.0" fill="rgb(209,104,6)" rx="2" ry="2" />
<text  x="263.69" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="564.3" y="309" width="0.3" height="15.0" fill="rgb(209,24,19)" rx="2" ry="2" />
<text  x="567.32" y="319.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (11 samples, 0.02%)</title><rect x="714.8" y="421" width="0.3" height="15.0" fill="rgb(239,50,11)" rx="2" ry="2" />
<text  x="717.82" y="431.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (28 samples, 0.06%)</title><rect x="1137.9" y="405" width="0.7" height="15.0" fill="rgb(242,225,42)" rx="2" ry="2" />
<text  x="1140.90" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (14 samples, 0.03%)</title><rect x="80.9" y="453" width="0.3" height="15.0" fill="rgb(211,136,47)" rx="2" ry="2" />
<text  x="83.87" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::value (23 samples, 0.05%)</title><rect x="21.8" y="293" width="0.5" height="15.0" fill="rgb(251,92,0)" rx="2" ry="2" />
<text  x="24.78" y="303.5" ></text>
</g>
<g >
<title>database::find_keyspace (187 samples, 0.39%)</title><rect x="1062.0" y="341" width="4.6" height="15.0" fill="rgb(251,208,14)" rx="2" ry="2" />
<text  x="1064.97" y="351.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (457 samples, 0.96%)</title><rect x="309.3" y="197" width="11.4" height="15.0" fill="rgb(210,217,25)" rx="2" ry="2" />
<text  x="312.34" y="207.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="357" width="0.7" height="15.0" fill="rgb(207,187,6)" rx="2" ry="2" />
<text  x="1140.90" y="367.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (8 samples, 0.02%)</title><rect x="693.5" y="277" width="0.2" height="15.0" fill="rgb(242,227,4)" rx="2" ry="2" />
<text  x="696.46" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (88 samples, 0.18%)</title><rect x="985.2" y="309" width="2.2" height="15.0" fill="rgb(216,139,7)" rx="2" ry="2" />
<text  x="988.24" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="743.3" y="389" width="0.2" height="15.0" fill="rgb(216,157,45)" rx="2" ry="2" />
<text  x="746.33" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="939.0" y="389" width="0.4" height="15.0" fill="rgb(207,194,15)" rx="2" ry="2" />
<text  x="941.99" y="399.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (689 samples, 1.45%)</title><rect x="894.6" y="373" width="17.1" height="15.0" fill="rgb(234,175,52)" rx="2" ry="2" />
<text  x="897.60" y="383.5" ></text>
</g>
<g >
<title>make_combined_reader (6 samples, 0.01%)</title><rect x="433.0" y="357" width="0.2" height="15.0" fill="rgb(232,24,7)" rx="2" ry="2" />
<text  x="436.03" y="367.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (33 samples, 0.07%)</title><rect x="1029.1" y="197" width="0.8" height="15.0" fill="rgb(245,98,32)" rx="2" ry="2" />
<text  x="1032.11" y="207.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (29 samples, 0.06%)</title><rect x="752.9" y="309" width="0.7" height="15.0" fill="rgb(243,110,25)" rx="2" ry="2" />
<text  x="755.86" y="319.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (21 samples, 0.04%)</title><rect x="834.3" y="293" width="0.6" height="15.0" fill="rgb(247,7,20)" rx="2" ry="2" />
<text  x="837.34" y="303.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (27 samples, 0.06%)</title><rect x="54.8" y="469" width="0.6" height="15.0" fill="rgb(214,16,7)" rx="2" ry="2" />
<text  x="57.76" y="479.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.06%)</title><rect x="494.2" y="293" width="0.7" height="15.0" fill="rgb(236,38,42)" rx="2" ry="2" />
<text  x="497.19" y="303.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="682.5" y="485" width="0.9" height="15.0" fill="rgb(206,167,13)" rx="2" ry="2" />
<text  x="685.53" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="838.5" y="405" width="0.2" height="15.0" fill="rgb(235,149,21)" rx="2" ry="2" />
<text  x="841.48" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (110 samples, 0.23%)</title><rect x="346.2" y="165" width="2.7" height="15.0" fill="rgb(236,160,9)" rx="2" ry="2" />
<text  x="349.17" y="175.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (32 samples, 0.07%)</title><rect x="805.8" y="117" width="0.8" height="15.0" fill="rgb(232,97,25)" rx="2" ry="2" />
<text  x="808.78" y="127.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (30 samples, 0.06%)</title><rect x="1103.1" y="373" width="0.7" height="15.0" fill="rgb(234,16,31)" rx="2" ry="2" />
<text  x="1106.08" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="541.0" y="341" width="0.3" height="15.0" fill="rgb(228,196,0)" rx="2" ry="2" />
<text  x="544.03" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="1071.5" y="293" width="0.6" height="15.0" fill="rgb(215,74,11)" rx="2" ry="2" />
<text  x="1074.49" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (29 samples, 0.06%)</title><rect x="934.2" y="325" width="0.7" height="15.0" fill="rgb(226,207,23)" rx="2" ry="2" />
<text  x="937.16" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="623.8" y="373" width="0.2" height="15.0" fill="rgb(251,107,11)" rx="2" ry="2" />
<text  x="626.78" y="383.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (47 samples, 0.10%)</title><rect x="825.1" y="309" width="1.2" height="15.0" fill="rgb(245,213,35)" rx="2" ry="2" />
<text  x="828.09" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="1043.4" y="245" width="1.8" height="15.0" fill="rgb(233,32,10)" rx="2" ry="2" />
<text  x="1046.39" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (7 samples, 0.01%)</title><rect x="48.1" y="469" width="0.2" height="15.0" fill="rgb(244,36,17)" rx="2" ry="2" />
<text  x="51.09" y="479.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (55 samples, 0.12%)</title><rect x="463.9" y="325" width="1.4" height="15.0" fill="rgb(239,72,47)" rx="2" ry="2" />
<text  x="466.93" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (13 samples, 0.03%)</title><rect x="699.3" y="453" width="0.3" height="15.0" fill="rgb(208,194,52)" rx="2" ry="2" />
<text  x="702.27" y="463.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="484.5" y="197" width="0.1" height="15.0" fill="rgb(216,118,20)" rx="2" ry="2" />
<text  x="487.46" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (29 samples, 0.06%)</title><rect x="270.7" y="341" width="0.7" height="15.0" fill="rgb(235,6,31)" rx="2" ry="2" />
<text  x="273.70" y="351.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="458.0" y="293" width="0.5" height="15.0" fill="rgb(239,43,36)" rx="2" ry="2" />
<text  x="460.98" y="303.5" ></text>
</g>
<g >
<title>sstring_hash::operator (24 samples, 0.05%)</title><rect x="856.9" y="357" width="0.6" height="15.0" fill="rgb(223,167,18)" rx="2" ry="2" />
<text  x="859.89" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (44 samples, 0.09%)</title><rect x="409.4" y="213" width="1.1" height="15.0" fill="rgb(213,64,28)" rx="2" ry="2" />
<text  x="412.38" y="223.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (42 samples, 0.09%)</title><rect x="150.8" y="229" width="1.0" height="15.0" fill="rgb(220,193,0)" rx="2" ry="2" />
<text  x="153.78" y="239.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="836.9" y="277" width="0.2" height="15.0" fill="rgb(254,147,39)" rx="2" ry="2" />
<text  x="839.95" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%)</title><rect x="652.8" y="469" width="0.1" height="15.0" fill="rgb(224,27,32)" rx="2" ry="2" />
<text  x="655.77" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (13 samples, 0.03%)</title><rect x="283.0" y="277" width="0.3" height="15.0" fill="rgb(225,198,29)" rx="2" ry="2" />
<text  x="286.00" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="615.7" y="437" width="0.1" height="15.0" fill="rgb(219,185,0)" rx="2" ry="2" />
<text  x="618.70" y="447.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1174.6" y="421" width="0.2" height="15.0" fill="rgb(242,145,6)" rx="2" ry="2" />
<text  x="1177.60" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator::operator* (5 samples, 0.01%)</title><rect x="835.0" y="325" width="0.1" height="15.0" fill="rgb(244,31,15)" rx="2" ry="2" />
<text  x="837.99" y="335.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (6 samples, 0.01%)</title><rect x="824.8" y="309" width="0.1" height="15.0" fill="rgb(247,224,1)" rx="2" ry="2" />
<text  x="827.80" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::stats (35 samples, 0.07%)</title><rect x="502.8" y="245" width="0.9" height="15.0" fill="rgb(230,96,3)" rx="2" ry="2" />
<text  x="505.82" y="255.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (11 samples, 0.02%)</title><rect x="980.5" y="341" width="0.3" height="15.0" fill="rgb(206,100,1)" rx="2" ry="2" />
<text  x="983.50" y="351.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="314.6" y="165" width="0.1" height="15.0" fill="rgb(239,124,23)" rx="2" ry="2" />
<text  x="317.60" y="175.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (54 samples, 0.11%)</title><rect x="868.4" y="469" width="1.3" height="15.0" fill="rgb(225,133,27)" rx="2" ry="2" />
<text  x="871.37" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (66 samples, 0.14%)</title><rect x="134.0" y="261" width="1.7" height="15.0" fill="rgb(225,11,26)" rx="2" ry="2" />
<text  x="137.04" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (34 samples, 0.07%)</title><rect x="935.9" y="389" width="0.9" height="15.0" fill="rgb(240,39,49)" rx="2" ry="2" />
<text  x="938.94" y="399.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (195 samples, 0.41%)</title><rect x="12.6" y="581" width="4.8" height="15.0" fill="rgb(213,73,13)" rx="2" ry="2" />
<text  x="15.58" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (62 samples, 0.13%)</title><rect x="774.1" y="373" width="1.5" height="15.0" fill="rgb(205,186,34)" rx="2" ry="2" />
<text  x="777.06" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,138 samples, 8.70%)</title><rect x="739.7" y="437" width="102.6" height="15.0" fill="rgb(229,36,0)" rx="2" ry="2" />
<text  x="742.69" y="447.5" >cql3::query_..</text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1143.9" y="501" width="0.2" height="15.0" fill="rgb(241,68,0)" rx="2" ry="2" />
<text  x="1146.90" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="37.6" y="453" width="0.3" height="15.0" fill="rgb(221,112,41)" rx="2" ry="2" />
<text  x="40.60" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (12 samples, 0.03%)</title><rect x="837.8" y="277" width="0.3" height="15.0" fill="rgb(217,217,43)" rx="2" ry="2" />
<text  x="840.77" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (9 samples, 0.02%)</title><rect x="719.0" y="469" width="0.2" height="15.0" fill="rgb(243,32,21)" rx="2" ry="2" />
<text  x="721.96" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (7 samples, 0.01%)</title><rect x="810.9" y="181" width="0.1" height="15.0" fill="rgb(251,79,31)" rx="2" ry="2" />
<text  x="813.86" y="191.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (5 samples, 0.01%)</title><rect x="24.9" y="437" width="0.2" height="15.0" fill="rgb(205,47,13)" rx="2" ry="2" />
<text  x="27.93" y="447.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (7 samples, 0.01%)</title><rect x="905.5" y="309" width="0.1" height="15.0" fill="rgb(207,225,42)" rx="2" ry="2" />
<text  x="908.46" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (34 samples, 0.07%)</title><rect x="64.4" y="421" width="0.8" height="15.0" fill="rgb(241,75,2)" rx="2" ry="2" />
<text  x="67.38" y="431.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (7 samples, 0.01%)</title><rect x="897.3" y="309" width="0.2" height="15.0" fill="rgb(213,200,54)" rx="2" ry="2" />
<text  x="900.33" y="319.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,167 samples, 4.55%)</title><rect x="1002.1" y="309" width="53.7" height="15.0" fill="rgb(214,96,30)" rx="2" ry="2" />
<text  x="1005.05" y="319.5" >servi..</text>
</g>
<g >
<title>seastar::memory::allocate (51 samples, 0.11%)</title><rect x="761.3" y="389" width="1.3" height="15.0" fill="rgb(237,45,48)" rx="2" ry="2" />
<text  x="764.29" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="916.1" y="341" width="0.2" height="15.0" fill="rgb(209,79,14)" rx="2" ry="2" />
<text  x="919.13" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (19 samples, 0.04%)</title><rect x="1000.9" y="261" width="0.5" height="15.0" fill="rgb(211,33,21)" rx="2" ry="2" />
<text  x="1003.94" y="271.5" ></text>
</g>
<g >
<title>table::query (22,168 samples, 46.59%)</title><rect x="83.4" y="453" width="549.8" height="15.0" fill="rgb(240,193,45)" rx="2" ry="2" />
<text  x="86.43" y="463.5" >table::query</text>
</g>
<g >
<title>database::query (160 samples, 0.34%)</title><rect x="45.3" y="501" width="4.0" height="15.0" fill="rgb(230,32,13)" rx="2" ry="2" />
<text  x="48.31" y="511.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="1102.4" y="357" width="0.2" height="15.0" fill="rgb(214,111,15)" rx="2" ry="2" />
<text  x="1105.39" y="367.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (96 samples, 0.20%)</title><rect x="603.8" y="405" width="2.4" height="15.0" fill="rgb(221,99,24)" rx="2" ry="2" />
<text  x="606.82" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="20.9" y="325" width="0.1" height="15.0" fill="rgb(238,22,23)" rx="2" ry="2" />
<text  x="23.89" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (96 samples, 0.20%)</title><rect x="39.5" y="437" width="2.4" height="15.0" fill="rgb(206,45,29)" rx="2" ry="2" />
<text  x="42.53" y="447.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (6 samples, 0.01%)</title><rect x="21.5" y="261" width="0.2" height="15.0" fill="rgb(224,58,15)" rx="2" ry="2" />
<text  x="24.53" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (25 samples, 0.05%)</title><rect x="813.0" y="213" width="0.7" height="15.0" fill="rgb(229,209,12)" rx="2" ry="2" />
<text  x="816.04" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (25 samples, 0.05%)</title><rect x="1044.5" y="229" width="0.7" height="15.0" fill="rgb(236,107,47)" rx="2" ry="2" />
<text  x="1047.53" y="239.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (67 samples, 0.14%)</title><rect x="10.3" y="581" width="1.6" height="15.0" fill="rgb(238,140,23)" rx="2" ry="2" />
<text  x="13.27" y="591.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (33 samples, 0.07%)</title><rect x="21.5" y="309" width="0.8" height="15.0" fill="rgb(237,208,33)" rx="2" ry="2" />
<text  x="24.53" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (8 samples, 0.02%)</title><rect x="1132.2" y="421" width="0.2" height="15.0" fill="rgb(240,186,36)" rx="2" ry="2" />
<text  x="1135.22" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (12 samples, 0.03%)</title><rect x="942.7" y="405" width="0.3" height="15.0" fill="rgb(211,184,46)" rx="2" ry="2" />
<text  x="945.74" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (137 samples, 0.29%)</title><rect x="266.7" y="341" width="3.4" height="15.0" fill="rgb(216,124,9)" rx="2" ry="2" />
<text  x="269.66" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (165 samples, 0.35%)</title><rect x="1090.3" y="261" width="4.1" height="15.0" fill="rgb(209,210,46)" rx="2" ry="2" />
<text  x="1093.29" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (10 samples, 0.02%)</title><rect x="1033.7" y="133" width="0.3" height="15.0" fill="rgb(228,211,50)" rx="2" ry="2" />
<text  x="1036.75" y="143.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="814.9" y="229" width="0.2" height="15.0" fill="rgb(232,85,30)" rx="2" ry="2" />
<text  x="817.90" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;gms::inet_address&gt;::operator (8 samples, 0.02%)</title><rect x="718.1" y="421" width="0.2" height="15.0" fill="rgb(244,144,26)" rx="2" ry="2" />
<text  x="721.14" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="247.5" y="165" width="0.6" height="15.0" fill="rgb(231,79,36)" rx="2" ry="2" />
<text  x="250.47" y="175.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (23 samples, 0.05%)</title><rect x="807.3" y="133" width="0.5" height="15.0" fill="rgb(234,2,50)" rx="2" ry="2" />
<text  x="810.26" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (18 samples, 0.04%)</title><rect x="286.5" y="373" width="0.4" height="15.0" fill="rgb(223,115,19)" rx="2" ry="2" />
<text  x="289.45" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (14 samples, 0.03%)</title><rect x="448.7" y="261" width="0.4" height="15.0" fill="rgb(211,118,25)" rx="2" ry="2" />
<text  x="451.71" y="271.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (22 samples, 0.05%)</title><rect x="738.3" y="293" width="0.5" height="15.0" fill="rgb(208,123,8)" rx="2" ry="2" />
<text  x="741.28" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (7 samples, 0.01%)</title><rect x="636.3" y="469" width="0.2" height="15.0" fill="rgb(217,151,2)" rx="2" ry="2" />
<text  x="639.30" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (22 samples, 0.05%)</title><rect x="1176.2" y="485" width="0.5" height="15.0" fill="rgb(237,95,36)" rx="2" ry="2" />
<text  x="1179.16" y="495.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (79 samples, 0.17%)</title><rect x="629.5" y="421" width="2.0" height="15.0" fill="rgb(232,183,13)" rx="2" ry="2" />
<text  x="632.51" y="431.5" ></text>
</g>
<g >
<title>table::estimate_read_memory_cost (9 samples, 0.02%)</title><rect x="1047.5" y="261" width="0.2" height="15.0" fill="rgb(253,178,22)" rx="2" ry="2" />
<text  x="1050.46" y="271.5" ></text>
</g>
<g >
<title>operator delete (99 samples, 0.21%)</title><rect x="412.6" y="245" width="2.4" height="15.0" fill="rgb(242,125,14)" rx="2" ry="2" />
<text  x="415.57" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (48 samples, 0.10%)</title><rect x="520.7" y="293" width="1.2" height="15.0" fill="rgb(232,61,12)" rx="2" ry="2" />
<text  x="523.70" y="303.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="1146.4" y="485" width="0.4" height="15.0" fill="rgb(251,202,44)" rx="2" ry="2" />
<text  x="1149.36" y="495.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (9 samples, 0.02%)</title><rect x="716.0" y="437" width="0.2" height="15.0" fill="rgb(233,227,23)" rx="2" ry="2" />
<text  x="719.01" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (32 samples, 0.07%)</title><rect x="667.6" y="485" width="0.7" height="15.0" fill="rgb(241,221,44)" rx="2" ry="2" />
<text  x="670.55" y="495.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (19 samples, 0.04%)</title><rect x="636.0" y="485" width="0.5" height="15.0" fill="rgb(254,228,45)" rx="2" ry="2" />
<text  x="639.01" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="630.7" y="373" width="0.5" height="15.0" fill="rgb(213,151,41)" rx="2" ry="2" />
<text  x="633.73" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="196.0" y="101" width="0.2" height="15.0" fill="rgb(223,215,14)" rx="2" ry="2" />
<text  x="199.01" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="854.7" y="373" width="0.3" height="15.0" fill="rgb(227,95,1)" rx="2" ry="2" />
<text  x="857.73" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1125.2" y="373" width="0.5" height="15.0" fill="rgb(224,2,35)" rx="2" ry="2" />
<text  x="1128.23" y="383.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (42 samples, 0.09%)</title><rect x="1160.2" y="453" width="1.1" height="15.0" fill="rgb(253,194,53)" rx="2" ry="2" />
<text  x="1163.22" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (33 samples, 0.07%)</title><rect x="803.3" y="133" width="0.9" height="15.0" fill="rgb(244,8,39)" rx="2" ry="2" />
<text  x="806.35" y="143.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (9 samples, 0.02%)</title><rect x="359.0" y="165" width="0.2" height="15.0" fill="rgb(224,131,5)" rx="2" ry="2" />
<text  x="361.99" y="175.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (31 samples, 0.07%)</title><rect x="582.7" y="357" width="0.8" height="15.0" fill="rgb(227,32,47)" rx="2" ry="2" />
<text  x="585.69" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (18 samples, 0.04%)</title><rect x="777.7" y="357" width="0.4" height="15.0" fill="rgb(223,156,0)" rx="2" ry="2" />
<text  x="780.65" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="758.0" y="405" width="0.2" height="15.0" fill="rgb(239,67,33)" rx="2" ry="2" />
<text  x="761.01" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="431.7" y="373" width="0.2" height="15.0" fill="rgb(218,106,32)" rx="2" ry="2" />
<text  x="434.72" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,256 samples, 11.05%)</title><rect x="292.3" y="325" width="130.3" height="15.0" fill="rgb(232,165,15)" rx="2" ry="2" />
<text  x="295.28" y="335.5" >seastar::interna..</text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="296.2" y="261" width="0.1" height="15.0" fill="rgb(221,178,4)" rx="2" ry="2" />
<text  x="299.20" y="271.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (477 samples, 1.00%)</title><rect x="272.3" y="341" width="11.8" height="15.0" fill="rgb(211,218,38)" rx="2" ry="2" />
<text  x="275.32" y="351.5" ></text>
</g>
<g >
<title>operator new (29 samples, 0.06%)</title><rect x="509.1" y="197" width="0.7" height="15.0" fill="rgb(226,185,5)" rx="2" ry="2" />
<text  x="512.06" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::~node_head (25 samples, 0.05%)</title><rect x="410.6" y="213" width="0.6" height="15.0" fill="rgb(231,26,48)" rx="2" ry="2" />
<text  x="413.57" y="223.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="746.1" y="373" width="0.2" height="15.0" fill="rgb(205,54,36)" rx="2" ry="2" />
<text  x="749.11" y="383.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (13 samples, 0.03%)</title><rect x="1138.9" y="181" width="0.4" height="15.0" fill="rgb(217,152,48)" rx="2" ry="2" />
<text  x="1141.94" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (9 samples, 0.02%)</title><rect x="27.4" y="517" width="0.2" height="15.0" fill="rgb(226,13,1)" rx="2" ry="2" />
<text  x="30.38" y="527.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (8 samples, 0.02%)</title><rect x="253.6" y="261" width="0.2" height="15.0" fill="rgb(242,22,20)" rx="2" ry="2" />
<text  x="256.57" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="220.4" y="133" width="0.2" height="15.0" fill="rgb(222,81,25)" rx="2" ry="2" />
<text  x="223.44" y="143.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (17 samples, 0.04%)</title><rect x="160.7" y="213" width="0.4" height="15.0" fill="rgb(237,93,23)" rx="2" ry="2" />
<text  x="163.67" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="606.4" y="437" width="0.2" height="15.0" fill="rgb(253,168,45)" rx="2" ry="2" />
<text  x="609.40" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::take_value (6 samples, 0.01%)</title><rect x="748.3" y="373" width="0.2" height="15.0" fill="rgb(243,174,6)" rx="2" ry="2" />
<text  x="751.32" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (19 samples, 0.04%)</title><rect x="699.6" y="453" width="0.5" height="15.0" fill="rgb(243,66,15)" rx="2" ry="2" />
<text  x="702.59" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="996.6" y="325" width="0.4" height="15.0" fill="rgb(219,23,54)" rx="2" ry="2" />
<text  x="999.65" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (6 samples, 0.01%)</title><rect x="21.5" y="293" width="0.2" height="15.0" fill="rgb(236,0,30)" rx="2" ry="2" />
<text  x="24.53" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (16 samples, 0.03%)</title><rect x="567.7" y="293" width="0.4" height="15.0" fill="rgb(253,157,41)" rx="2" ry="2" />
<text  x="570.69" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (29 samples, 0.06%)</title><rect x="1139.5" y="485" width="0.7" height="15.0" fill="rgb(240,174,40)" rx="2" ry="2" />
<text  x="1142.49" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="719.3" y="485" width="0.4" height="15.0" fill="rgb(248,145,45)" rx="2" ry="2" />
<text  x="722.33" y="495.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (364 samples, 0.76%)</title><rect x="802.0" y="197" width="9.0" height="15.0" fill="rgb(230,129,2)" rx="2" ry="2" />
<text  x="805.01" y="207.5" ></text>
</g>
<g >
<title>perf_simple_que (47,582 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(209,130,32)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>query::querier_base::close (15 samples, 0.03%)</title><rect x="1174.6" y="485" width="0.4" height="15.0" fill="rgb(236,105,21)" rx="2" ry="2" />
<text  x="1177.60" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (28 samples, 0.06%)</title><rect x="878.1" y="469" width="0.7" height="15.0" fill="rgb(205,115,2)" rx="2" ry="2" />
<text  x="881.06" y="479.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (125 samples, 0.26%)</title><rect x="399.6" y="245" width="3.1" height="15.0" fill="rgb(230,188,3)" rx="2" ry="2" />
<text  x="402.61" y="255.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,263 samples, 97.22%)</title><rect x="28.1" y="517" width="1147.2" height="15.0" fill="rgb(223,4,14)" rx="2" ry="2" />
<text  x="31.08" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>global_schema_ptr::get (12 samples, 0.03%)</title><rect x="1042.9" y="261" width="0.3" height="15.0" fill="rgb(211,53,44)" rx="2" ry="2" />
<text  x="1045.95" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (21 samples, 0.04%)</title><rect x="872.6" y="485" width="0.6" height="15.0" fill="rgb(233,119,12)" rx="2" ry="2" />
<text  x="875.63" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (22 samples, 0.05%)</title><rect x="138.3" y="245" width="0.6" height="15.0" fill="rgb(249,168,12)" rx="2" ry="2" />
<text  x="141.33" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::clear (9 samples, 0.02%)</title><rect x="79.5" y="453" width="0.2" height="15.0" fill="rgb(234,34,47)" rx="2" ry="2" />
<text  x="82.48" y="463.5" ></text>
</g>
<g >
<title>operator new (88 samples, 0.18%)</title><rect x="974.4" y="357" width="2.2" height="15.0" fill="rgb(233,225,46)" rx="2" ry="2" />
<text  x="977.40" y="367.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (650 samples, 1.37%)</title><rect x="128.2" y="293" width="16.1" height="15.0" fill="rgb(252,72,4)" rx="2" ry="2" />
<text  x="131.16" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (17 samples, 0.04%)</title><rect x="515.9" y="229" width="0.4" height="15.0" fill="rgb(207,216,33)" rx="2" ry="2" />
<text  x="518.91" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (10 samples, 0.02%)</title><rect x="536.6" y="245" width="0.2" height="15.0" fill="rgb(211,140,16)" rx="2" ry="2" />
<text  x="539.57" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="928.6" y="373" width="0.2" height="15.0" fill="rgb(214,219,13)" rx="2" ry="2" />
<text  x="931.55" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (58 samples, 0.12%)</title><rect x="943.5" y="405" width="1.4" height="15.0" fill="rgb(245,207,36)" rx="2" ry="2" />
<text  x="946.48" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (16 samples, 0.03%)</title><rect x="156.1" y="165" width="0.4" height="15.0" fill="rgb(225,196,16)" rx="2" ry="2" />
<text  x="159.14" y="175.5" ></text>
</g>
<g >
<title>query::querier&lt; (18,190 samples, 38.23%)</title><rect x="105.4" y="437" width="451.1" height="15.0" fill="rgb(216,105,38)" rx="2" ry="2" />
<text  x="108.40" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (42 samples, 0.09%)</title><rect x="532.0" y="277" width="1.1" height="15.0" fill="rgb(205,163,22)" rx="2" ry="2" />
<text  x="535.03" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (11 samples, 0.02%)</title><rect x="890.4" y="421" width="0.3" height="15.0" fill="rgb(223,13,24)" rx="2" ry="2" />
<text  x="893.41" y="431.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (43 samples, 0.09%)</title><rect x="624.0" y="389" width="1.1" height="15.0" fill="rgb(208,159,33)" rx="2" ry="2" />
<text  x="627.03" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (49 samples, 0.10%)</title><rect x="861.5" y="341" width="1.2" height="15.0" fill="rgb(233,226,15)" rx="2" ry="2" />
<text  x="864.47" y="351.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (7 samples, 0.01%)</title><rect x="693.8" y="261" width="0.1" height="15.0" fill="rgb(219,169,39)" rx="2" ry="2" />
<text  x="696.76" y="271.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 0.12%)</title><rect x="797.3" y="181" width="1.4" height="15.0" fill="rgb(233,84,38)" rx="2" ry="2" />
<text  x="800.27" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="1133.9" y="421" width="0.2" height="15.0" fill="rgb(222,111,27)" rx="2" ry="2" />
<text  x="1136.91" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (413 samples, 0.87%)</title><rect x="708.7" y="469" width="10.2" height="15.0" fill="rgb(212,175,53)" rx="2" ry="2" />
<text  x="711.69" y="479.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (16 samples, 0.03%)</title><rect x="608.4" y="405" width="0.4" height="15.0" fill="rgb(242,174,23)" rx="2" ry="2" />
<text  x="611.36" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (70 samples, 0.15%)</title><rect x="1097.1" y="325" width="1.7" height="15.0" fill="rgb(253,151,16)" rx="2" ry="2" />
<text  x="1100.06" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (10 samples, 0.02%)</title><rect x="968.4" y="373" width="0.2" height="15.0" fill="rgb(252,76,1)" rx="2" ry="2" />
<text  x="971.35" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (45 samples, 0.09%)</title><rect x="371.8" y="197" width="1.1" height="15.0" fill="rgb(216,10,31)" rx="2" ry="2" />
<text  x="374.76" y="207.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (12 samples, 0.03%)</title><rect x="454.7" y="277" width="0.3" height="15.0" fill="rgb(241,37,2)" rx="2" ry="2" />
<text  x="457.71" y="287.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (52 samples, 0.11%)</title><rect x="1095.7" y="293" width="1.3" height="15.0" fill="rgb(217,200,50)" rx="2" ry="2" />
<text  x="1098.74" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="414.8" y="229" width="0.2" height="15.0" fill="rgb(242,154,38)" rx="2" ry="2" />
<text  x="417.76" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="963.3" y="389" width="0.2" height="15.0" fill="rgb(217,22,11)" rx="2" ry="2" />
<text  x="966.34" y="399.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (115 samples, 0.24%)</title><rect x="835.2" y="373" width="2.9" height="15.0" fill="rgb(250,203,0)" rx="2" ry="2" />
<text  x="838.24" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="458.1" y="277" width="0.4" height="15.0" fill="rgb(207,68,17)" rx="2" ry="2" />
<text  x="461.05" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (41 samples, 0.09%)</title><rect x="747.0" y="325" width="1.0" height="15.0" fill="rgb(212,62,5)" rx="2" ry="2" />
<text  x="749.95" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="590.5" y="373" width="0.2" height="15.0" fill="rgb(219,110,29)" rx="2" ry="2" />
<text  x="593.48" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,325 samples, 2.78%)</title><rect x="1014.9" y="277" width="32.9" height="15.0" fill="rgb(226,24,9)" rx="2" ry="2" />
<text  x="1017.92" y="287.5" >se..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (24 samples, 0.05%)</title><rect x="173.6" y="133" width="0.6" height="15.0" fill="rgb(218,37,41)" rx="2" ry="2" />
<text  x="176.59" y="143.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (472 samples, 0.99%)</title><rect x="694.7" y="501" width="11.7" height="15.0" fill="rgb(239,25,44)" rx="2" ry="2" />
<text  x="697.70" y="511.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (11 samples, 0.02%)</title><rect x="828.3" y="341" width="0.3" height="15.0" fill="rgb(253,68,25)" rx="2" ry="2" />
<text  x="831.29" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (44 samples, 0.09%)</title><rect x="627.4" y="421" width="1.0" height="15.0" fill="rgb(224,160,33)" rx="2" ry="2" />
<text  x="630.35" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (91 samples, 0.19%)</title><rect x="250.7" y="213" width="2.3" height="15.0" fill="rgb(229,90,53)" rx="2" ry="2" />
<text  x="253.74" y="223.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (5 samples, 0.01%)</title><rect x="1049.2" y="277" width="0.1" height="15.0" fill="rgb(232,217,47)" rx="2" ry="2" />
<text  x="1052.17" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (59 samples, 0.12%)</title><rect x="863.2" y="421" width="1.5" height="15.0" fill="rgb(226,5,5)" rx="2" ry="2" />
<text  x="866.21" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (56 samples, 0.12%)</title><rect x="764.6" y="357" width="1.4" height="15.0" fill="rgb(228,93,38)" rx="2" ry="2" />
<text  x="767.61" y="367.5" ></text>
</g>
<g >
<title>seastar::schedule (5 samples, 0.01%)</title><rect x="1142.6" y="501" width="0.2" height="15.0" fill="rgb(223,35,23)" rx="2" ry="2" />
<text  x="1145.64" y="511.5" ></text>
</g>
<g >
<title>validation::validate_column_family (367 samples, 0.77%)</title><rect x="829.0" y="389" width="9.1" height="15.0" fill="rgb(237,1,6)" rx="2" ry="2" />
<text  x="831.99" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (9 samples, 0.02%)</title><rect x="1120.7" y="421" width="0.3" height="15.0" fill="rgb(238,117,40)" rx="2" ry="2" />
<text  x="1123.74" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="857.8" y="437" width="0.1" height="15.0" fill="rgb(248,225,54)" rx="2" ry="2" />
<text  x="860.80" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (53 samples, 0.11%)</title><rect x="901.2" y="293" width="1.3" height="15.0" fill="rgb(230,72,20)" rx="2" ry="2" />
<text  x="904.22" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="785.4" y="293" width="0.6" height="15.0" fill="rgb(213,201,50)" rx="2" ry="2" />
<text  x="788.37" y="303.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (52 samples, 0.11%)</title><rect x="535.7" y="261" width="1.3" height="15.0" fill="rgb(246,122,2)" rx="2" ry="2" />
<text  x="538.75" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (20 samples, 0.04%)</title><rect x="785.5" y="277" width="0.5" height="15.0" fill="rgb(233,106,2)" rx="2" ry="2" />
<text  x="788.49" y="287.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (14 samples, 0.03%)</title><rect x="198.7" y="101" width="0.4" height="15.0" fill="rgb(216,166,6)" rx="2" ry="2" />
<text  x="201.74" y="111.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (60 samples, 0.13%)</title><rect x="238.4" y="197" width="1.5" height="15.0" fill="rgb(223,183,24)" rx="2" ry="2" />
<text  x="241.39" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="599.1" y="389" width="0.1" height="15.0" fill="rgb(251,108,24)" rx="2" ry="2" />
<text  x="602.06" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="596.2" y="389" width="0.3" height="15.0" fill="rgb(245,39,8)" rx="2" ry="2" />
<text  x="599.21" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1055.3" y="293" width="0.2" height="15.0" fill="rgb(222,191,33)" rx="2" ry="2" />
<text  x="1058.35" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (278 samples, 0.58%)</title><rect x="17.9" y="565" width="6.9" height="15.0" fill="rgb(244,30,21)" rx="2" ry="2" />
<text  x="20.89" y="575.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="143.9" y="277" width="0.1" height="15.0" fill="rgb(207,9,34)" rx="2" ry="2" />
<text  x="146.89" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (15 samples, 0.03%)</title><rect x="501.1" y="261" width="0.4" height="15.0" fill="rgb(222,228,23)" rx="2" ry="2" />
<text  x="504.13" y="271.5" ></text>
</g>
<g >
<title>seastar::gate::enter (6 samples, 0.01%)</title><rect x="1042.8" y="229" width="0.1" height="15.0" fill="rgb(205,219,54)" rx="2" ry="2" />
<text  x="1045.80" y="239.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (550 samples, 1.16%)</title><rect x="706.4" y="501" width="13.6" height="15.0" fill="rgb(218,58,10)" rx="2" ry="2" />
<text  x="709.41" y="511.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (24 samples, 0.05%)</title><rect x="1066.6" y="341" width="0.6" height="15.0" fill="rgb(237,70,30)" rx="2" ry="2" />
<text  x="1069.60" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (111 samples, 0.23%)</title><rect x="835.3" y="341" width="2.8" height="15.0" fill="rgb(222,196,49)" rx="2" ry="2" />
<text  x="838.34" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (90 samples, 0.19%)</title><rect x="243.0" y="197" width="2.2" height="15.0" fill="rgb(214,160,6)" rx="2" ry="2" />
<text  x="245.98" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="588.3" y="325" width="0.3" height="15.0" fill="rgb(250,106,16)" rx="2" ry="2" />
<text  x="591.30" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (139 samples, 0.29%)</title><rect x="677.8" y="469" width="3.4" height="15.0" fill="rgb(253,13,11)" rx="2" ry="2" />
<text  x="680.79" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (504 samples, 1.06%)</title><rect x="504.3" y="261" width="12.5" height="15.0" fill="rgb(214,211,31)" rx="2" ry="2" />
<text  x="507.25" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (6 samples, 0.01%)</title><rect x="984.6" y="325" width="0.2" height="15.0" fill="rgb(214,118,2)" rx="2" ry="2" />
<text  x="987.65" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="727.7" y="421" width="0.2" height="15.0" fill="rgb(216,191,29)" rx="2" ry="2" />
<text  x="730.69" y="431.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (566 samples, 1.19%)</title><rect x="1080.6" y="293" width="14.0" height="15.0" fill="rgb(232,60,30)" rx="2" ry="2" />
<text  x="1083.59" y="303.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (6 samples, 0.01%)</title><rect x="527.3" y="325" width="0.1" height="15.0" fill="rgb(220,138,3)" rx="2" ry="2" />
<text  x="530.29" y="335.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (430 samples, 0.90%)</title><rect x="67.2" y="421" width="10.7" height="15.0" fill="rgb(226,162,44)" rx="2" ry="2" />
<text  x="70.23" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (43 samples, 0.09%)</title><rect x="832.7" y="309" width="1.1" height="15.0" fill="rgb(242,85,8)" rx="2" ry="2" />
<text  x="835.73" y="319.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="852.9" y="405" width="0.9" height="15.0" fill="rgb(228,80,45)" rx="2" ry="2" />
<text  x="855.87" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (12 samples, 0.03%)</title><rect x="697.0" y="469" width="0.3" height="15.0" fill="rgb(205,122,36)" rx="2" ry="2" />
<text  x="699.96" y="479.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (6 samples, 0.01%)</title><rect x="411.5" y="213" width="0.2" height="15.0" fill="rgb(247,227,0)" rx="2" ry="2" />
<text  x="414.51" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="911.2" y="357" width="0.3" height="15.0" fill="rgb(219,156,38)" rx="2" ry="2" />
<text  x="914.24" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (6 samples, 0.01%)</title><rect x="1073.0" y="309" width="0.1" height="15.0" fill="rgb(218,216,1)" rx="2" ry="2" />
<text  x="1075.98" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="598.5" y="373" width="0.3" height="15.0" fill="rgb(239,2,32)" rx="2" ry="2" />
<text  x="601.51" y="383.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="819.7" y="309" width="0.9" height="15.0" fill="rgb(211,55,44)" rx="2" ry="2" />
<text  x="822.74" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (8 samples, 0.02%)</title><rect x="982.0" y="357" width="0.2" height="15.0" fill="rgb(213,150,0)" rx="2" ry="2" />
<text  x="984.97" y="367.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (23 samples, 0.05%)</title><rect x="663.3" y="485" width="0.6" height="15.0" fill="rgb(246,148,42)" rx="2" ry="2" />
<text  x="666.33" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="683.3" y="469" width="0.1" height="15.0" fill="rgb(245,91,19)" rx="2" ry="2" />
<text  x="686.30" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="554.1" y="389" width="0.5" height="15.0" fill="rgb(218,226,43)" rx="2" ry="2" />
<text  x="557.15" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (8 samples, 0.02%)</title><rect x="951.7" y="389" width="0.2" height="15.0" fill="rgb(224,35,51)" rx="2" ry="2" />
<text  x="954.74" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="21.4" y="293" width="0.1" height="15.0" fill="rgb(252,63,34)" rx="2" ry="2" />
<text  x="24.41" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (69 samples, 0.15%)</title><rect x="812.0" y="261" width="1.7" height="15.0" fill="rgb(236,199,40)" rx="2" ry="2" />
<text  x="814.98" y="271.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="643.2" y="485" width="0.4" height="15.0" fill="rgb(249,184,47)" rx="2" ry="2" />
<text  x="646.20" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="422.4" y="245" width="0.2" height="15.0" fill="rgb(211,219,5)" rx="2" ry="2" />
<text  x="425.42" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (223 samples, 0.47%)</title><rect x="135.8" y="261" width="5.5" height="15.0" fill="rgb(214,132,31)" rx="2" ry="2" />
<text  x="138.75" y="271.5" ></text>
</g>
<g >
<title>operator delete (11 samples, 0.02%)</title><rect x="1169.6" y="453" width="0.3" height="15.0" fill="rgb(232,115,28)" rx="2" ry="2" />
<text  x="1172.59" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (53 samples, 0.11%)</title><rect x="199.6" y="69" width="1.3" height="15.0" fill="rgb(213,103,6)" rx="2" ry="2" />
<text  x="202.61" y="79.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (18 samples, 0.04%)</title><rect x="62.7" y="453" width="0.4" height="15.0" fill="rgb(224,124,46)" rx="2" ry="2" />
<text  x="65.70" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="628.8" y="437" width="0.1" height="15.0" fill="rgb(238,151,2)" rx="2" ry="2" />
<text  x="631.79" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (15 samples, 0.03%)</title><rect x="612.6" y="437" width="0.4" height="15.0" fill="rgb(250,161,18)" rx="2" ry="2" />
<text  x="615.65" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (14 samples, 0.03%)</title><rect x="798.2" y="133" width="0.4" height="15.0" fill="rgb(249,34,13)" rx="2" ry="2" />
<text  x="801.24" y="143.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (35 samples, 0.07%)</title><rect x="797.7" y="149" width="0.9" height="15.0" fill="rgb(248,122,19)" rx="2" ry="2" />
<text  x="800.72" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="787.3" y="293" width="0.1" height="15.0" fill="rgb(234,62,51)" rx="2" ry="2" />
<text  x="790.25" y="303.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (24 samples, 0.05%)</title><rect x="1137.9" y="325" width="0.6" height="15.0" fill="rgb(224,215,52)" rx="2" ry="2" />
<text  x="1140.90" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (11 samples, 0.02%)</title><rect x="1036.6" y="197" width="0.3" height="15.0" fill="rgb(245,11,54)" rx="2" ry="2" />
<text  x="1039.62" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (7 samples, 0.01%)</title><rect x="455.7" y="261" width="0.2" height="15.0" fill="rgb(243,49,1)" rx="2" ry="2" />
<text  x="458.75" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="536.8" y="245" width="0.2" height="15.0" fill="rgb(225,24,19)" rx="2" ry="2" />
<text  x="539.81" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (6 samples, 0.01%)</title><rect x="98.1" y="421" width="0.2" height="15.0" fill="rgb(248,153,20)" rx="2" ry="2" />
<text  x="101.13" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (336 samples, 0.71%)</title><rect x="581.9" y="373" width="8.4" height="15.0" fill="rgb(224,117,24)" rx="2" ry="2" />
<text  x="584.92" y="383.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (24 samples, 0.05%)</title><rect x="1046.8" y="261" width="0.6" height="15.0" fill="rgb(209,127,12)" rx="2" ry="2" />
<text  x="1049.77" y="271.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (44 samples, 0.09%)</title><rect x="190.0" y="69" width="1.1" height="15.0" fill="rgb(241,186,9)" rx="2" ry="2" />
<text  x="193.04" y="79.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (22 samples, 0.05%)</title><rect x="1147.0" y="485" width="0.5" height="15.0" fill="rgb(217,70,17)" rx="2" ry="2" />
<text  x="1149.98" y="495.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (42 samples, 0.09%)</title><rect x="316.3" y="181" width="1.0" height="15.0" fill="rgb(242,124,38)" rx="2" ry="2" />
<text  x="319.31" y="191.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (6 samples, 0.01%)</title><rect x="1174.6" y="373" width="0.2" height="15.0" fill="rgb(254,137,53)" rx="2" ry="2" />
<text  x="1177.65" y="383.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (214 samples, 0.45%)</title><rect x="697.8" y="469" width="5.3" height="15.0" fill="rgb(235,137,32)" rx="2" ry="2" />
<text  x="700.80" y="479.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1138.6" y="469" width="0.9" height="15.0" fill="rgb(222,164,42)" rx="2" ry="2" />
<text  x="1141.59" y="479.5" ></text>
</g>
<g >
<title>query::digester::digester (17 samples, 0.04%)</title><rect x="602.8" y="405" width="0.4" height="15.0" fill="rgb(233,221,12)" rx="2" ry="2" />
<text  x="605.80" y="415.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="24.9" y="453" width="0.2" height="15.0" fill="rgb(205,226,30)" rx="2" ry="2" />
<text  x="27.93" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (14 samples, 0.03%)</title><rect x="374.9" y="149" width="0.3" height="15.0" fill="rgb(215,206,48)" rx="2" ry="2" />
<text  x="377.86" y="159.5" ></text>
</g>
<g >
<title>utils::array_search_gt (8 samples, 0.02%)</title><rect x="475.3" y="277" width="0.2" height="15.0" fill="rgb(242,113,22)" rx="2" ry="2" />
<text  x="478.26" y="287.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (10 samples, 0.02%)</title><rect x="873.8" y="325" width="0.3" height="15.0" fill="rgb(221,200,8)" rx="2" ry="2" />
<text  x="876.82" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (8 samples, 0.02%)</title><rect x="613.8" y="437" width="0.2" height="15.0" fill="rgb(220,211,37)" rx="2" ry="2" />
<text  x="616.81" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="555.2" y="421" width="0.2" height="15.0" fill="rgb(217,214,8)" rx="2" ry="2" />
<text  x="558.16" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (17 samples, 0.04%)</title><rect x="450.7" y="277" width="0.4" height="15.0" fill="rgb(216,99,30)" rx="2" ry="2" />
<text  x="453.66" y="287.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="758.1" y="389" width="0.1" height="15.0" fill="rgb(245,67,29)" rx="2" ry="2" />
<text  x="761.11" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="870.8" y="501" width="0.3" height="15.0" fill="rgb(210,148,37)" rx="2" ry="2" />
<text  x="873.82" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="34.1" y="469" width="0.3" height="15.0" fill="rgb(206,161,6)" rx="2" ry="2" />
<text  x="37.13" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (14 samples, 0.03%)</title><rect x="700.1" y="453" width="0.3" height="15.0" fill="rgb(252,207,38)" rx="2" ry="2" />
<text  x="703.06" y="463.5" ></text>
</g>
<g >
<title>std::type_info::operator== (8 samples, 0.02%)</title><rect x="1074.8" y="277" width="0.2" height="15.0" fill="rgb(207,75,29)" rx="2" ry="2" />
<text  x="1077.79" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="105.1" y="421" width="0.2" height="15.0" fill="rgb(240,21,9)" rx="2" ry="2" />
<text  x="108.08" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (5 samples, 0.01%)</title><rect x="43.1" y="453" width="0.2" height="15.0" fill="rgb(252,211,23)" rx="2" ry="2" />
<text  x="46.13" y="463.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (9 samples, 0.02%)</title><rect x="1107.4" y="373" width="0.2" height="15.0" fill="rgb(239,135,41)" rx="2" ry="2" />
<text  x="1110.40" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1034.4" y="117" width="0.2" height="15.0" fill="rgb(210,188,27)" rx="2" ry="2" />
<text  x="1037.39" y="127.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (26 samples, 0.05%)</title><rect x="616.9" y="437" width="0.6" height="15.0" fill="rgb(253,175,0)" rx="2" ry="2" />
<text  x="619.86" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (6 samples, 0.01%)</title><rect x="958.3" y="325" width="0.1" height="15.0" fill="rgb(228,228,38)" rx="2" ry="2" />
<text  x="961.26" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="571.8" y="261" width="0.2" height="15.0" fill="rgb(217,121,2)" rx="2" ry="2" />
<text  x="574.83" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (26 samples, 0.05%)</title><rect x="1127.4" y="373" width="0.7" height="15.0" fill="rgb(244,60,25)" rx="2" ry="2" />
<text  x="1130.43" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="847.8" y="389" width="0.2" height="15.0" fill="rgb(210,219,20)" rx="2" ry="2" />
<text  x="850.78" y="399.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.01%)</title><rect x="1035.0" y="165" width="0.2" height="15.0" fill="rgb(234,144,14)" rx="2" ry="2" />
<text  x="1038.04" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (113 samples, 0.24%)</title><rect x="998.6" y="277" width="2.8" height="15.0" fill="rgb(219,132,18)" rx="2" ry="2" />
<text  x="1001.63" y="287.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (5 samples, 0.01%)</title><rect x="694.0" y="277" width="0.1" height="15.0" fill="rgb(223,43,10)" rx="2" ry="2" />
<text  x="696.99" y="287.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (12 samples, 0.03%)</title><rect x="559.8" y="341" width="0.3" height="15.0" fill="rgb(217,14,38)" rx="2" ry="2" />
<text  x="562.83" y="351.5" ></text>
</g>
<g >
<title>table::set_hit_rate (85 samples, 0.18%)</title><rect x="716.3" y="453" width="2.1" height="15.0" fill="rgb(224,52,34)" rx="2" ry="2" />
<text  x="719.28" y="463.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="212.7" y="165" width="0.9" height="15.0" fill="rgb(214,93,37)" rx="2" ry="2" />
<text  x="215.68" y="175.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (10 samples, 0.02%)</title><rect x="631.5" y="421" width="0.2" height="15.0" fill="rgb(215,203,19)" rx="2" ry="2" />
<text  x="634.47" y="431.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="928.3" y="389" width="0.5" height="15.0" fill="rgb(223,110,52)" rx="2" ry="2" />
<text  x="931.33" y="399.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (52 samples, 0.11%)</title><rect x="292.5" y="309" width="1.2" height="15.0" fill="rgb(251,205,40)" rx="2" ry="2" />
<text  x="295.45" y="319.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (27 samples, 0.06%)</title><rect x="428.3" y="421" width="0.7" height="15.0" fill="rgb(209,46,45)" rx="2" ry="2" />
<text  x="431.35" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.01%)</title><rect x="561.8" y="293" width="0.2" height="15.0" fill="rgb(220,192,16)" rx="2" ry="2" />
<text  x="564.84" y="303.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (30 samples, 0.06%)</title><rect x="656.6" y="453" width="0.7" height="15.0" fill="rgb(217,135,3)" rx="2" ry="2" />
<text  x="659.59" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (12 samples, 0.03%)</title><rect x="692.2" y="485" width="0.3" height="15.0" fill="rgb(218,67,27)" rx="2" ry="2" />
<text  x="695.20" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="845.6" y="437" width="0.2" height="15.0" fill="rgb(242,182,32)" rx="2" ry="2" />
<text  x="848.55" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (16 samples, 0.03%)</title><rect x="34.7" y="485" width="0.4" height="15.0" fill="rgb(211,90,51)" rx="2" ry="2" />
<text  x="37.70" y="495.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (118 samples, 0.25%)</title><rect x="278.6" y="293" width="2.9" height="15.0" fill="rgb(248,188,18)" rx="2" ry="2" />
<text  x="281.59" y="303.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (94 samples, 0.20%)</title><rect x="199.4" y="101" width="2.3" height="15.0" fill="rgb(215,40,17)" rx="2" ry="2" />
<text  x="202.36" y="111.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (39 samples, 0.08%)</title><rect x="950.6" y="373" width="1.0" height="15.0" fill="rgb(218,51,25)" rx="2" ry="2" />
<text  x="953.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="420.9" y="245" width="0.2" height="15.0" fill="rgb(209,186,32)" rx="2" ry="2" />
<text  x="423.93" y="255.5" ></text>
</g>
<g >
<title>seastar::gate::leave (5 samples, 0.01%)</title><rect x="49.2" y="469" width="0.1" height="15.0" fill="rgb(252,10,7)" rx="2" ry="2" />
<text  x="52.16" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="1118.7" y="373" width="0.4" height="15.0" fill="rgb(226,28,32)" rx="2" ry="2" />
<text  x="1121.73" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (39 samples, 0.08%)</title><rect x="1074.0" y="293" width="1.0" height="15.0" fill="rgb(223,81,54)" rx="2" ry="2" />
<text  x="1077.02" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (13 samples, 0.03%)</title><rect x="516.3" y="229" width="0.4" height="15.0" fill="rgb(252,226,51)" rx="2" ry="2" />
<text  x="519.33" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="583.9" y="341" width="0.2" height="15.0" fill="rgb(229,104,51)" rx="2" ry="2" />
<text  x="586.91" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (9 samples, 0.02%)</title><rect x="204.5" y="117" width="0.2" height="15.0" fill="rgb(220,63,4)" rx="2" ry="2" />
<text  x="207.52" y="127.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="784.6" y="309" width="0.6" height="15.0" fill="rgb(209,212,28)" rx="2" ry="2" />
<text  x="787.65" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (5 samples, 0.01%)</title><rect x="1037.6" y="213" width="0.2" height="15.0" fill="rgb(212,149,46)" rx="2" ry="2" />
<text  x="1040.64" y="223.5" ></text>
</g>
<g >
<title>make_random_seq (5 samples, 0.01%)</title><rect x="869.7" y="485" width="0.1" height="15.0" fill="rgb(219,216,41)" rx="2" ry="2" />
<text  x="872.71" y="495.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (120 samples, 0.25%)</title><rect x="642.7" y="501" width="3.0" height="15.0" fill="rgb(243,100,18)" rx="2" ry="2" />
<text  x="645.68" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (211 samples, 0.44%)</title><rect x="98.4" y="421" width="5.2" height="15.0" fill="rgb(241,54,20)" rx="2" ry="2" />
<text  x="101.36" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (37 samples, 0.08%)</title><rect x="757.0" y="389" width="0.9" height="15.0" fill="rgb(251,136,33)" rx="2" ry="2" />
<text  x="760.02" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="715.8" y="437" width="0.2" height="15.0" fill="rgb(252,64,16)" rx="2" ry="2" />
<text  x="718.83" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="939.5" y="405" width="0.3" height="15.0" fill="rgb(227,34,23)" rx="2" ry="2" />
<text  x="942.49" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (562 samples, 1.18%)</title><rect x="742.5" y="405" width="14.0" height="15.0" fill="rgb(246,147,32)" rx="2" ry="2" />
<text  x="745.54" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (31 samples, 0.07%)</title><rect x="379.8" y="181" width="0.8" height="15.0" fill="rgb(242,126,54)" rx="2" ry="2" />
<text  x="382.82" y="191.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (415 samples, 0.87%)</title><rect x="895.7" y="325" width="10.3" height="15.0" fill="rgb(237,158,1)" rx="2" ry="2" />
<text  x="898.72" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (69 samples, 0.15%)</title><rect x="768.8" y="341" width="1.7" height="15.0" fill="rgb(227,40,51)" rx="2" ry="2" />
<text  x="771.80" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="228.5" y="197" width="0.1" height="15.0" fill="rgb(246,93,14)" rx="2" ry="2" />
<text  x="231.47" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (20 samples, 0.04%)</title><rect x="574.2" y="277" width="0.5" height="15.0" fill="rgb(211,194,0)" rx="2" ry="2" />
<text  x="577.19" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,939 samples, 4.07%)</title><rect x="778.3" y="389" width="48.1" height="15.0" fill="rgb(236,8,18)" rx="2" ry="2" />
<text  x="781.32" y="399.5" >std:..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="294.9" y="261" width="0.2" height="15.0" fill="rgb(206,114,50)" rx="2" ry="2" />
<text  x="297.91" y="271.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (29 samples, 0.06%)</title><rect x="1137.9" y="485" width="0.7" height="15.0" fill="rgb(243,178,0)" rx="2" ry="2" />
<text  x="1140.87" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="276.1" y="293" width="0.2" height="15.0" fill="rgb(219,111,25)" rx="2" ry="2" />
<text  x="279.13" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (25 samples, 0.05%)</title><rect x="900.2" y="293" width="0.6" height="15.0" fill="rgb(213,70,52)" rx="2" ry="2" />
<text  x="903.18" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="831.8" y="325" width="0.2" height="15.0" fill="rgb(253,68,11)" rx="2" ry="2" />
<text  x="834.76" y="335.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="418.3" y="293" width="0.7" height="15.0" fill="rgb(238,202,5)" rx="2" ry="2" />
<text  x="421.28" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (24 samples, 0.05%)</title><rect x="229.4" y="197" width="0.6" height="15.0" fill="rgb(222,110,4)" rx="2" ry="2" />
<text  x="232.44" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (7 samples, 0.01%)</title><rect x="735.9" y="309" width="0.2" height="15.0" fill="rgb(234,32,8)" rx="2" ry="2" />
<text  x="738.94" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (10 samples, 0.02%)</title><rect x="1168.5" y="453" width="0.3" height="15.0" fill="rgb(253,119,38)" rx="2" ry="2" />
<text  x="1171.55" y="463.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (239 samples, 0.50%)</title><rect x="1030.1" y="197" width="5.9" height="15.0" fill="rgb(209,15,29)" rx="2" ry="2" />
<text  x="1033.08" y="207.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (117 samples, 0.25%)</title><rect x="725.3" y="469" width="2.9" height="15.0" fill="rgb(217,198,5)" rx="2" ry="2" />
<text  x="728.26" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="840.0" y="421" width="0.1" height="15.0" fill="rgb(218,133,13)" rx="2" ry="2" />
<text  x="842.97" y="431.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (11 samples, 0.02%)</title><rect x="852.2" y="421" width="0.2" height="15.0" fill="rgb(209,192,32)" rx="2" ry="2" />
<text  x="855.17" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (12 samples, 0.03%)</title><rect x="231.7" y="229" width="0.3" height="15.0" fill="rgb(218,177,11)" rx="2" ry="2" />
<text  x="234.70" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (12 samples, 0.03%)</title><rect x="1104.2" y="389" width="0.3" height="15.0" fill="rgb(234,153,6)" rx="2" ry="2" />
<text  x="1107.22" y="399.5" ></text>
</g>
<g >
<title>free (29 samples, 0.06%)</title><rect x="409.7" y="197" width="0.7" height="15.0" fill="rgb(250,195,23)" rx="2" ry="2" />
<text  x="412.72" y="207.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,371 samples, 4.98%)</title><rect x="997.1" y="325" width="58.8" height="15.0" fill="rgb(229,98,38)" rx="2" ry="2" />
<text  x="1000.09" y="335.5" >servic..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (15 samples, 0.03%)</title><rect x="490.2" y="325" width="0.4" height="15.0" fill="rgb(221,76,3)" rx="2" ry="2" />
<text  x="493.22" y="335.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (55 samples, 0.12%)</title><rect x="228.7" y="229" width="1.3" height="15.0" fill="rgb(212,54,21)" rx="2" ry="2" />
<text  x="231.67" y="239.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (114 samples, 0.24%)</title><rect x="712.3" y="437" width="2.8" height="15.0" fill="rgb(216,19,19)" rx="2" ry="2" />
<text  x="715.26" y="447.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (12 samples, 0.03%)</title><rect x="611.5" y="421" width="0.3" height="15.0" fill="rgb(241,17,6)" rx="2" ry="2" />
<text  x="614.48" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (52 samples, 0.11%)</title><rect x="1175.5" y="517" width="1.3" height="15.0" fill="rgb(227,7,33)" rx="2" ry="2" />
<text  x="1178.47" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (610 samples, 1.28%)</title><rect x="380.6" y="181" width="15.1" height="15.0" fill="rgb(250,149,47)" rx="2" ry="2" />
<text  x="383.59" y="191.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="537.1" y="261" width="0.6" height="15.0" fill="rgb(235,121,23)" rx="2" ry="2" />
<text  x="540.11" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1133.7" y="421" width="0.1" height="15.0" fill="rgb(248,37,49)" rx="2" ry="2" />
<text  x="1136.68" y="431.5" ></text>
</g>
<g >
<title>query_result_builder::query_result_builder (5 samples, 0.01%)</title><rect x="62.4" y="453" width="0.2" height="15.0" fill="rgb(253,149,51)" rx="2" ry="2" />
<text  x="65.45" y="463.5" ></text>
</g>
<g >
<title>database::find_schema (68 samples, 0.14%)</title><rect x="829.7" y="357" width="1.6" height="15.0" fill="rgb(237,199,1)" rx="2" ry="2" />
<text  x="832.66" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (18 samples, 0.04%)</title><rect x="919.5" y="325" width="0.5" height="15.0" fill="rgb(251,5,54)" rx="2" ry="2" />
<text  x="922.53" y="335.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="660.1" y="453" width="0.3" height="15.0" fill="rgb(220,212,12)" rx="2" ry="2" />
<text  x="663.06" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="135.5" y="245" width="0.2" height="15.0" fill="rgb(211,133,36)" rx="2" ry="2" />
<text  x="138.45" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (55 samples, 0.12%)</title><rect x="18.7" y="293" width="1.4" height="15.0" fill="rgb(240,217,1)" rx="2" ry="2" />
<text  x="21.73" y="303.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (822 samples, 1.73%)</title><rect x="558.3" y="389" width="20.4" height="15.0" fill="rgb(246,172,21)" rx="2" ry="2" />
<text  x="561.31" y="399.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (97 samples, 0.20%)</title><rect x="1110.7" y="389" width="2.4" height="15.0" fill="rgb(250,173,19)" rx="2" ry="2" />
<text  x="1113.67" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (13 samples, 0.03%)</title><rect x="71.1" y="389" width="0.3" height="15.0" fill="rgb(249,55,33)" rx="2" ry="2" />
<text  x="74.05" y="399.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="670.3" y="421" width="0.7" height="15.0" fill="rgb(228,98,54)" rx="2" ry="2" />
<text  x="673.25" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (172 samples, 0.36%)</title><rect x="249.3" y="261" width="4.3" height="15.0" fill="rgb(213,104,9)" rx="2" ry="2" />
<text  x="252.30" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (5 samples, 0.01%)</title><rect x="61.6" y="453" width="0.1" height="15.0" fill="rgb(218,125,1)" rx="2" ry="2" />
<text  x="64.61" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (9 samples, 0.02%)</title><rect x="269.3" y="325" width="0.3" height="15.0" fill="rgb(211,74,20)" rx="2" ry="2" />
<text  x="272.34" y="335.5" ></text>
</g>
<g >
<title>posix_memalign (148 samples, 0.31%)</title><rect x="192.0" y="53" width="3.7" height="15.0" fill="rgb(247,155,12)" rx="2" ry="2" />
<text  x="195.04" y="63.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (46 samples, 0.10%)</title><rect x="793.4" y="245" width="1.1" height="15.0" fill="rgb(243,17,37)" rx="2" ry="2" />
<text  x="796.40" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (14 samples, 0.03%)</title><rect x="628.0" y="389" width="0.3" height="15.0" fill="rgb(222,152,14)" rx="2" ry="2" />
<text  x="631.00" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (39 samples, 0.08%)</title><rect x="544.5" y="421" width="1.0" height="15.0" fill="rgb(214,144,46)" rx="2" ry="2" />
<text  x="547.50" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1138.6" y="389" width="0.9" height="15.0" fill="rgb(223,156,9)" rx="2" ry="2" />
<text  x="1141.59" y="399.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (18 samples, 0.04%)</title><rect x="1111.8" y="357" width="0.5" height="15.0" fill="rgb(209,51,7)" rx="2" ry="2" />
<text  x="1114.81" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="728.3" y="469" width="0.2" height="15.0" fill="rgb(208,66,54)" rx="2" ry="2" />
<text  x="731.33" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="511.5" y="181" width="0.6" height="15.0" fill="rgb(245,229,3)" rx="2" ry="2" />
<text  x="514.47" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;bool  (12 samples, 0.03%)</title><rect x="553.7" y="389" width="0.3" height="15.0" fill="rgb(237,194,37)" rx="2" ry="2" />
<text  x="556.73" y="399.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::raw_value::to_managed_bytes_opt (6 samples, 0.01%)</title><rect x="912.4" y="373" width="0.1" height="15.0" fill="rgb(246,109,26)" rx="2" ry="2" />
<text  x="915.36" y="383.5" ></text>
</g>
<g >
<title>tracing::add_table_name (18 samples, 0.04%)</title><rect x="1137.1" y="437" width="0.4" height="15.0" fill="rgb(227,54,21)" rx="2" ry="2" />
<text  x="1140.06" y="447.5" ></text>
</g>
<g >
<title>dht::tri_compare (34 samples, 0.07%)</title><rect x="1081.5" y="245" width="0.8" height="15.0" fill="rgb(227,152,0)" rx="2" ry="2" />
<text  x="1084.46" y="255.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (33 samples, 0.07%)</title><rect x="494.1" y="309" width="0.8" height="15.0" fill="rgb(241,19,11)" rx="2" ry="2" />
<text  x="497.09" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.03%)</title><rect x="97.7" y="421" width="0.4" height="15.0" fill="rgb(241,188,17)" rx="2" ry="2" />
<text  x="100.74" y="431.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="669.6" y="437" width="0.3" height="15.0" fill="rgb(248,0,17)" rx="2" ry="2" />
<text  x="672.56" y="447.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (13 samples, 0.03%)</title><rect x="11.9" y="581" width="0.4" height="15.0" fill="rgb(229,67,43)" rx="2" ry="2" />
<text  x="14.93" y="591.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (54 samples, 0.11%)</title><rect x="690.7" y="469" width="1.3" height="15.0" fill="rgb(249,50,20)" rx="2" ry="2" />
<text  x="693.69" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (91 samples, 0.19%)</title><rect x="835.8" y="325" width="2.3" height="15.0" fill="rgb(241,157,7)" rx="2" ry="2" />
<text  x="838.81" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (15 samples, 0.03%)</title><rect x="787.8" y="277" width="0.3" height="15.0" fill="rgb(252,94,54)" rx="2" ry="2" />
<text  x="790.77" y="287.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="761.2" y="405" width="1.4" height="15.0" fill="rgb(226,23,16)" rx="2" ry="2" />
<text  x="764.24" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (633 samples, 1.33%)</title><rect x="180.5" y="117" width="15.7" height="15.0" fill="rgb(227,32,15)" rx="2" ry="2" />
<text  x="183.46" y="127.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,251 samples, 13.14%)</title><rect x="952.6" y="421" width="155.0" height="15.0" fill="rgb(253,43,10)" rx="2" ry="2" />
<text  x="955.61" y="431.5" >cql3::statements::s..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (13 samples, 0.03%)</title><rect x="311.1" y="165" width="0.3" height="15.0" fill="rgb(211,171,18)" rx="2" ry="2" />
<text  x="314.05" y="175.5" ></text>
</g>
<g >
<title>db::block_for (6 samples, 0.01%)</title><rect x="1067.1" y="325" width="0.1" height="15.0" fill="rgb(231,187,0)" rx="2" ry="2" />
<text  x="1070.05" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (9 samples, 0.02%)</title><rect x="1138.6" y="277" width="0.3" height="15.0" fill="rgb(208,14,31)" rx="2" ry="2" />
<text  x="1141.64" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (140 samples, 0.29%)</title><rect x="998.2" y="293" width="3.5" height="15.0" fill="rgb(230,4,54)" rx="2" ry="2" />
<text  x="1001.21" y="303.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (92 samples, 0.19%)</title><rect x="804.4" y="149" width="2.3" height="15.0" fill="rgb(239,90,9)" rx="2" ry="2" />
<text  x="807.41" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%)</title><rect x="852.9" y="389" width="0.9" height="15.0" fill="rgb(207,224,38)" rx="2" ry="2" />
<text  x="855.94" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (11 samples, 0.02%)</title><rect x="890.9" y="421" width="0.3" height="15.0" fill="rgb(225,190,32)" rx="2" ry="2" />
<text  x="893.88" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (24 samples, 0.05%)</title><rect x="701.8" y="453" width="0.6" height="15.0" fill="rgb(219,157,33)" rx="2" ry="2" />
<text  x="704.77" y="463.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="658.4" y="453" width="0.2" height="15.0" fill="rgb(209,176,48)" rx="2" ry="2" />
<text  x="661.40" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (82 samples, 0.17%)</title><rect x="294.5" y="293" width="2.0" height="15.0" fill="rgb(213,137,40)" rx="2" ry="2" />
<text  x="297.46" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="285.2" y="357" width="0.3" height="15.0" fill="rgb(245,81,17)" rx="2" ry="2" />
<text  x="288.16" y="367.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (5 samples, 0.01%)</title><rect x="78.1" y="421" width="0.2" height="15.0" fill="rgb(208,183,44)" rx="2" ry="2" />
<text  x="81.15" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (5 samples, 0.01%)</title><rect x="905.0" y="309" width="0.1" height="15.0" fill="rgb(211,14,2)" rx="2" ry="2" />
<text  x="908.02" y="319.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (160 samples, 0.34%)</title><rect x="312.3" y="181" width="4.0" height="15.0" fill="rgb(225,204,31)" rx="2" ry="2" />
<text  x="315.34" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="910.0" y="309" width="0.7" height="15.0" fill="rgb(246,210,36)" rx="2" ry="2" />
<text  x="912.95" y="319.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (206 samples, 0.43%)</title><rect x="922.7" y="357" width="5.2" height="15.0" fill="rgb(216,82,39)" rx="2" ry="2" />
<text  x="925.75" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="936.4" y="373" width="0.4" height="15.0" fill="rgb(250,153,0)" rx="2" ry="2" />
<text  x="939.36" y="383.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (7 samples, 0.01%)</title><rect x="25.6" y="517" width="0.2" height="15.0" fill="rgb(250,185,36)" rx="2" ry="2" />
<text  x="28.62" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="540.4" y="309" width="0.6" height="15.0" fill="rgb(214,2,53)" rx="2" ry="2" />
<text  x="543.41" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,119 samples, 8.66%)</title><rect x="300.6" y="261" width="102.1" height="15.0" fill="rgb(229,191,41)" rx="2" ry="2" />
<text  x="303.56" y="271.5" >mutation_fra..</text>
</g>
<g >
<title>mutation_fragment::destroy_data (369 samples, 0.78%)</title><rect x="402.7" y="261" width="9.2" height="15.0" fill="rgb(251,83,0)" rx="2" ry="2" />
<text  x="405.71" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (19 samples, 0.04%)</title><rect x="513.1" y="181" width="0.5" height="15.0" fill="rgb(237,121,26)" rx="2" ry="2" />
<text  x="516.11" y="191.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (10 samples, 0.02%)</title><rect x="245.0" y="165" width="0.2" height="15.0" fill="rgb(218,171,0)" rx="2" ry="2" />
<text  x="247.96" y="175.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (28 samples, 0.06%)</title><rect x="619.2" y="421" width="0.7" height="15.0" fill="rgb(211,16,9)" rx="2" ry="2" />
<text  x="622.22" y="431.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (22 samples, 0.05%)</title><rect x="661.1" y="437" width="0.5" height="15.0" fill="rgb(242,70,3)" rx="2" ry="2" />
<text  x="664.08" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1077.5" y="325" width="0.2" height="15.0" fill="rgb(223,6,29)" rx="2" ry="2" />
<text  x="1080.52" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (21 samples, 0.04%)</title><rect x="375.4" y="213" width="0.5" height="15.0" fill="rgb(253,134,51)" rx="2" ry="2" />
<text  x="378.43" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (8 samples, 0.02%)</title><rect x="657.1" y="405" width="0.2" height="15.0" fill="rgb(211,77,31)" rx="2" ry="2" />
<text  x="660.06" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (11 samples, 0.02%)</title><rect x="859.9" y="389" width="0.3" height="15.0" fill="rgb(235,190,44)" rx="2" ry="2" />
<text  x="862.91" y="399.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (248 samples, 0.52%)</title><rect x="1082.3" y="245" width="6.2" height="15.0" fill="rgb(252,85,52)" rx="2" ry="2" />
<text  x="1085.30" y="255.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (22 samples, 0.05%)</title><rect x="190.6" y="53" width="0.5" height="15.0" fill="rgb(245,23,33)" rx="2" ry="2" />
<text  x="193.58" y="63.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (134 samples, 0.28%)</title><rect x="570.7" y="293" width="3.3" height="15.0" fill="rgb(251,36,13)" rx="2" ry="2" />
<text  x="573.69" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="100.5" y="405" width="0.2" height="15.0" fill="rgb(229,5,45)" rx="2" ry="2" />
<text  x="103.54" y="415.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (11 samples, 0.02%)</title><rect x="20.4" y="357" width="0.2" height="15.0" fill="rgb(248,22,23)" rx="2" ry="2" />
<text  x="23.37" y="367.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (60 samples, 0.13%)</title><rect x="731.7" y="421" width="1.4" height="15.0" fill="rgb(212,53,27)" rx="2" ry="2" />
<text  x="734.65" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (20 samples, 0.04%)</title><rect x="426.2" y="357" width="0.5" height="15.0" fill="rgb(252,21,53)" rx="2" ry="2" />
<text  x="429.24" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (32 samples, 0.07%)</title><rect x="284.4" y="357" width="0.8" height="15.0" fill="rgb(225,229,12)" rx="2" ry="2" />
<text  x="287.37" y="367.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (27 samples, 0.06%)</title><rect x="849.6" y="357" width="0.6" height="15.0" fill="rgb(227,73,1)" rx="2" ry="2" />
<text  x="852.57" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="670.8" y="405" width="0.2" height="15.0" fill="rgb(209,200,49)" rx="2" ry="2" />
<text  x="673.85" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="644.3" y="485" width="0.1" height="15.0" fill="rgb(247,194,4)" rx="2" ry="2" />
<text  x="647.26" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (28 samples, 0.06%)</title><rect x="1149.8" y="469" width="0.7" height="15.0" fill="rgb(235,93,8)" rx="2" ry="2" />
<text  x="1152.78" y="479.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (269 samples, 0.57%)</title><rect x="18.1" y="517" width="6.7" height="15.0" fill="rgb(213,218,21)" rx="2" ry="2" />
<text  x="21.08" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large_and_trim (5 samples, 0.01%)</title><rect x="553.1" y="277" width="0.2" height="15.0" fill="rgb(207,1,30)" rx="2" ry="2" />
<text  x="556.13" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="397.2" y="197" width="0.4" height="15.0" fill="rgb(217,164,27)" rx="2" ry="2" />
<text  x="400.15" y="207.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (27 samples, 0.06%)</title><rect x="142.2" y="261" width="0.7" height="15.0" fill="rgb(249,38,10)" rx="2" ry="2" />
<text  x="145.25" y="271.5" ></text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (14 samples, 0.03%)</title><rect x="596.1" y="405" width="0.4" height="15.0" fill="rgb(228,80,9)" rx="2" ry="2" />
<text  x="599.13" y="415.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.8" y="629" width="1.1" height="15.0" fill="rgb(228,190,53)" rx="2" ry="2" />
<text  x="1191.78" y="639.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (98 samples, 0.21%)</title><rect x="531.0" y="309" width="2.4" height="15.0" fill="rgb(227,225,16)" rx="2" ry="2" />
<text  x="533.96" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (23 samples, 0.05%)</title><rect x="679.9" y="453" width="0.5" height="15.0" fill="rgb(248,172,29)" rx="2" ry="2" />
<text  x="682.88" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (6 samples, 0.01%)</title><rect x="980.8" y="341" width="0.1" height="15.0" fill="rgb(242,63,49)" rx="2" ry="2" />
<text  x="983.78" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (10 samples, 0.02%)</title><rect x="993.9" y="261" width="0.2" height="15.0" fill="rgb(210,87,2)" rx="2" ry="2" />
<text  x="996.90" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="449.7" y="261" width="0.1" height="15.0" fill="rgb(244,147,41)" rx="2" ry="2" />
<text  x="452.67" y="271.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%)</title><rect x="214.1" y="133" width="0.3" height="15.0" fill="rgb(220,103,4)" rx="2" ry="2" />
<text  x="217.09" y="143.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="543.1" y="405" width="0.1" height="15.0" fill="rgb(220,199,11)" rx="2" ry="2" />
<text  x="546.11" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1143.7" y="501" width="0.1" height="15.0" fill="rgb(221,67,38)" rx="2" ry="2" />
<text  x="1146.70" y="511.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="640.5" y="469" width="0.9" height="15.0" fill="rgb(219,114,52)" rx="2" ry="2" />
<text  x="643.50" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (12 samples, 0.03%)</title><rect x="376.8" y="197" width="0.3" height="15.0" fill="rgb(231,192,51)" rx="2" ry="2" />
<text  x="379.77" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;std::optional&lt;managed_bytes&gt; &gt;  (8 samples, 0.02%)</title><rect x="908.7" y="357" width="0.2" height="15.0" fill="rgb(216,183,17)" rx="2" ry="2" />
<text  x="911.71" y="367.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,229 samples, 4.68%)</title><rect x="166.8" y="213" width="55.3" height="15.0" fill="rgb(223,151,28)" rx="2" ry="2" />
<text  x="169.85" y="223.5" >logal..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (51 samples, 0.11%)</title><rect x="1060.7" y="309" width="1.3" height="15.0" fill="rgb(243,139,17)" rx="2" ry="2" />
<text  x="1063.70" y="319.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="509.8" y="197" width="0.2" height="15.0" fill="rgb(236,205,1)" rx="2" ry="2" />
<text  x="512.78" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (8 samples, 0.02%)</title><rect x="26.0" y="517" width="0.2" height="15.0" fill="rgb(206,62,30)" rx="2" ry="2" />
<text  x="29.02" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (10 samples, 0.02%)</title><rect x="820.3" y="293" width="0.3" height="15.0" fill="rgb(236,109,44)" rx="2" ry="2" />
<text  x="823.31" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%)</title><rect x="20.4" y="229" width="0.1" height="15.0" fill="rgb(246,64,46)" rx="2" ry="2" />
<text  x="23.39" y="239.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (15 samples, 0.03%)</title><rect x="449.8" y="277" width="0.4" height="15.0" fill="rgb(213,167,11)" rx="2" ry="2" />
<text  x="452.80" y="287.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.01%)</title><rect x="738.8" y="357" width="0.2" height="15.0" fill="rgb(246,26,10)" rx="2" ry="2" />
<text  x="741.85" y="367.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (47 samples, 0.10%)</title><rect x="1130.6" y="389" width="1.1" height="15.0" fill="rgb(239,34,43)" rx="2" ry="2" />
<text  x="1133.58" y="399.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (272 samples, 0.57%)</title><rect x="593.0" y="437" width="6.7" height="15.0" fill="rgb(239,73,37)" rx="2" ry="2" />
<text  x="595.96" y="447.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (14 samples, 0.03%)</title><rect x="322.3" y="197" width="0.4" height="15.0" fill="rgb(207,174,27)" rx="2" ry="2" />
<text  x="325.33" y="207.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="224.5" y="181" width="0.2" height="15.0" fill="rgb(244,158,17)" rx="2" ry="2" />
<text  x="227.53" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="912.2" y="373" width="0.2" height="15.0" fill="rgb(248,55,4)" rx="2" ry="2" />
<text  x="915.19" y="383.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (25 samples, 0.05%)</title><rect x="1176.1" y="501" width="0.6" height="15.0" fill="rgb(216,81,5)" rx="2" ry="2" />
<text  x="1179.09" y="511.5" ></text>
</g>
<g >
<title>query::result::builder::build (51 samples, 0.11%)</title><rect x="599.7" y="437" width="1.3" height="15.0" fill="rgb(216,111,44)" rx="2" ry="2" />
<text  x="602.70" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (18 samples, 0.04%)</title><rect x="137.9" y="245" width="0.4" height="15.0" fill="rgb(225,177,36)" rx="2" ry="2" />
<text  x="140.88" y="255.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (122 samples, 0.26%)</title><rect x="735.8" y="325" width="3.0" height="15.0" fill="rgb(222,15,28)" rx="2" ry="2" />
<text  x="738.80" y="335.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (61 samples, 0.13%)</title><rect x="357.5" y="165" width="1.5" height="15.0" fill="rgb(223,91,10)" rx="2" ry="2" />
<text  x="360.47" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 0.09%)</title><rect x="361.9" y="149" width="1.1" height="15.0" fill="rgb(207,170,41)" rx="2" ry="2" />
<text  x="364.94" y="159.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (549 samples, 1.15%)</title><rect x="235.4" y="245" width="13.7" height="15.0" fill="rgb(223,82,1)" rx="2" ry="2" />
<text  x="238.44" y="255.5" ></text>
</g>
<g >
<title>cql3::query_processor::parse_statement (211 samples, 0.44%)</title><rect x="18.2" y="469" width="5.2" height="15.0" fill="rgb(223,111,32)" rx="2" ry="2" />
<text  x="21.21" y="479.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (41 samples, 0.09%)</title><rect x="130.0" y="277" width="1.0" height="15.0" fill="rgb(243,190,9)" rx="2" ry="2" />
<text  x="132.97" y="287.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (7 samples, 0.01%)</title><rect x="438.5" y="341" width="0.2" height="15.0" fill="rgb(243,189,33)" rx="2" ry="2" />
<text  x="441.49" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (519 samples, 1.09%)</title><rect x="1107.6" y="421" width="12.9" height="15.0" fill="rgb(220,227,9)" rx="2" ry="2" />
<text  x="1110.65" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (43 samples, 0.09%)</title><rect x="533.9" y="309" width="1.1" height="15.0" fill="rgb(227,8,0)" rx="2" ry="2" />
<text  x="536.94" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="498.0" y="277" width="0.8" height="15.0" fill="rgb(227,186,1)" rx="2" ry="2" />
<text  x="501.03" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="699.1" y="453" width="0.2" height="15.0" fill="rgb(234,69,48)" rx="2" ry="2" />
<text  x="702.14" y="463.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (11 samples, 0.02%)</title><rect x="23.5" y="405" width="0.2" height="15.0" fill="rgb(206,14,8)" rx="2" ry="2" />
<text  x="26.47" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (22 samples, 0.05%)</title><rect x="1138.9" y="293" width="0.5" height="15.0" fill="rgb(243,153,38)" rx="2" ry="2" />
<text  x="1141.89" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (11 samples, 0.02%)</title><rect x="235.2" y="245" width="0.2" height="15.0" fill="rgb(219,38,14)" rx="2" ry="2" />
<text  x="238.17" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (83 samples, 0.17%)</title><rect x="551.2" y="325" width="2.1" height="15.0" fill="rgb(218,221,1)" rx="2" ry="2" />
<text  x="554.22" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (22 samples, 0.05%)</title><rect x="655.2" y="421" width="0.5" height="15.0" fill="rgb(215,202,49)" rx="2" ry="2" />
<text  x="658.15" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (23 samples, 0.05%)</title><rect x="872.6" y="501" width="0.6" height="15.0" fill="rgb(232,90,21)" rx="2" ry="2" />
<text  x="875.61" y="511.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (40 samples, 0.08%)</title><rect x="23.4" y="469" width="1.0" height="15.0" fill="rgb(243,109,54)" rx="2" ry="2" />
<text  x="26.44" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (6 samples, 0.01%)</title><rect x="448.6" y="261" width="0.1" height="15.0" fill="rgb(231,199,4)" rx="2" ry="2" />
<text  x="451.56" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="204.7" y="133" width="0.2" height="15.0" fill="rgb(217,119,8)" rx="2" ry="2" />
<text  x="207.74" y="143.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (16 samples, 0.03%)</title><rect x="283.6" y="325" width="0.4" height="15.0" fill="rgb(234,218,3)" rx="2" ry="2" />
<text  x="286.62" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (5 samples, 0.01%)</title><rect x="1165.6" y="453" width="0.1" height="15.0" fill="rgb(212,76,26)" rx="2" ry="2" />
<text  x="1168.62" y="463.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.01%)</title><rect x="24.5" y="405" width="0.2" height="15.0" fill="rgb(252,157,47)" rx="2" ry="2" />
<text  x="27.53" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (7 samples, 0.01%)</title><rect x="702.9" y="453" width="0.2" height="15.0" fill="rgb(253,106,53)" rx="2" ry="2" />
<text  x="705.94" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (13 samples, 0.03%)</title><rect x="512.4" y="165" width="0.3" height="15.0" fill="rgb(238,188,3)" rx="2" ry="2" />
<text  x="515.41" y="175.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (39 samples, 0.08%)</title><rect x="241.1" y="165" width="1.0" height="15.0" fill="rgb(241,50,39)" rx="2" ry="2" />
<text  x="244.14" y="175.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (21 samples, 0.04%)</title><rect x="849.7" y="341" width="0.5" height="15.0" fill="rgb(223,225,15)" rx="2" ry="2" />
<text  x="852.72" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (135 samples, 0.28%)</title><rect x="1031.3" y="165" width="3.3" height="15.0" fill="rgb(208,14,47)" rx="2" ry="2" />
<text  x="1034.27" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (6 samples, 0.01%)</title><rect x="279.2" y="277" width="0.1" height="15.0" fill="rgb(235,44,34)" rx="2" ry="2" />
<text  x="282.16" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="625.9" y="437" width="0.2" height="15.0" fill="rgb(206,134,9)" rx="2" ry="2" />
<text  x="628.86" y="447.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (10 samples, 0.02%)</title><rect x="22.1" y="277" width="0.2" height="15.0" fill="rgb(245,22,32)" rx="2" ry="2" />
<text  x="25.08" y="287.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (64 samples, 0.13%)</title><rect x="956.9" y="405" width="1.6" height="15.0" fill="rgb(237,211,24)" rx="2" ry="2" />
<text  x="959.87" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="664.0" y="485" width="0.1" height="15.0" fill="rgb(251,186,48)" rx="2" ry="2" />
<text  x="666.98" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (6 samples, 0.01%)</title><rect x="330.5" y="165" width="0.1" height="15.0" fill="rgb(222,169,37)" rx="2" ry="2" />
<text  x="333.47" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (227 samples, 0.48%)</title><rect x="750.6" y="357" width="5.6" height="15.0" fill="rgb(238,206,37)" rx="2" ry="2" />
<text  x="753.57" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (7 samples, 0.01%)</title><rect x="1001.7" y="293" width="0.2" height="15.0" fill="rgb(207,19,51)" rx="2" ry="2" />
<text  x="1004.68" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="949.4" y="389" width="0.1" height="15.0" fill="rgb(250,90,1)" rx="2" ry="2" />
<text  x="952.36" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (105 samples, 0.22%)</title><rect x="945.6" y="405" width="2.6" height="15.0" fill="rgb(245,193,14)" rx="2" ry="2" />
<text  x="948.61" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (17 samples, 0.04%)</title><rect x="654.6" y="421" width="0.4" height="15.0" fill="rgb(253,54,8)" rx="2" ry="2" />
<text  x="657.56" y="431.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (12 samples, 0.03%)</title><rect x="916.5" y="357" width="0.3" height="15.0" fill="rgb(226,136,7)" rx="2" ry="2" />
<text  x="919.55" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (14 samples, 0.03%)</title><rect x="1059.9" y="341" width="0.4" height="15.0" fill="rgb(241,4,14)" rx="2" ry="2" />
<text  x="1062.93" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="155.7" y="197" width="0.1" height="15.0" fill="rgb(236,226,7)" rx="2" ry="2" />
<text  x="158.69" y="207.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="897.1" y="309" width="0.2" height="15.0" fill="rgb(211,140,5)" rx="2" ry="2" />
<text  x="900.08" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="549.1" y="341" width="0.2" height="15.0" fill="rgb(238,16,42)" rx="2" ry="2" />
<text  x="552.06" y="351.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (28 samples, 0.06%)</title><rect x="475.5" y="277" width="0.7" height="15.0" fill="rgb(249,90,8)" rx="2" ry="2" />
<text  x="478.46" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="47.4" y="485" width="0.2" height="15.0" fill="rgb(218,229,30)" rx="2" ry="2" />
<text  x="50.45" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (86 samples, 0.18%)</title><rect x="514.5" y="245" width="2.2" height="15.0" fill="rgb(206,183,31)" rx="2" ry="2" />
<text  x="517.52" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (168 samples, 0.35%)</title><rect x="412.2" y="261" width="4.2" height="15.0" fill="rgb(234,30,24)" rx="2" ry="2" />
<text  x="415.23" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (105 samples, 0.22%)</title><rect x="1039.4" y="229" width="2.6" height="15.0" fill="rgb(215,228,31)" rx="2" ry="2" />
<text  x="1042.38" y="239.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (124 samples, 0.26%)</title><rect x="847.6" y="405" width="3.1" height="15.0" fill="rgb(227,21,35)" rx="2" ry="2" />
<text  x="850.61" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (5 samples, 0.01%)</title><rect x="137.8" y="245" width="0.1" height="15.0" fill="rgb(207,102,21)" rx="2" ry="2" />
<text  x="140.76" y="255.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (8 samples, 0.02%)</title><rect x="242.2" y="197" width="0.2" height="15.0" fill="rgb(238,148,7)" rx="2" ry="2" />
<text  x="245.16" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (13 samples, 0.03%)</title><rect x="1031.7" y="149" width="0.3" height="15.0" fill="rgb(241,96,26)" rx="2" ry="2" />
<text  x="1034.66" y="159.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (24 samples, 0.05%)</title><rect x="243.7" y="181" width="0.6" height="15.0" fill="rgb(208,182,14)" rx="2" ry="2" />
<text  x="246.67" y="191.5" ></text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="726.3" y="421" width="1.4" height="15.0" fill="rgb(231,47,7)" rx="2" ry="2" />
<text  x="729.35" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (28 samples, 0.06%)</title><rect x="1153.4" y="421" width="0.7" height="15.0" fill="rgb(214,211,48)" rx="2" ry="2" />
<text  x="1156.42" y="431.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (148 samples, 0.31%)</title><rect x="454.3" y="293" width="3.6" height="15.0" fill="rgb(235,212,54)" rx="2" ry="2" />
<text  x="457.26" y="303.5" ></text>
</g>
<g >
<title>tombstone::apply (10 samples, 0.02%)</title><rect x="396.3" y="197" width="0.3" height="15.0" fill="rgb(205,201,5)" rx="2" ry="2" />
<text  x="399.31" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,435 samples, 9.32%)</title><rect x="144.3" y="309" width="110.0" height="15.0" fill="rgb(211,199,36)" rx="2" ry="2" />
<text  x="147.28" y="319.5" >partition_sna..</text>
</g>
<g >
<title>query::consume_page&lt; (5,571 samples, 11.71%)</title><rect x="289.2" y="389" width="138.2" height="15.0" fill="rgb(247,37,30)" rx="2" ry="2" />
<text  x="292.23" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (9 samples, 0.02%)</title><rect x="323.0" y="197" width="0.2" height="15.0" fill="rgb(240,182,7)" rx="2" ry="2" />
<text  x="325.98" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (6 samples, 0.01%)</title><rect x="1064.6" y="293" width="0.1" height="15.0" fill="rgb(252,163,53)" rx="2" ry="2" />
<text  x="1067.57" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (37 samples, 0.08%)</title><rect x="516.8" y="277" width="0.9" height="15.0" fill="rgb(236,51,41)" rx="2" ry="2" />
<text  x="519.80" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (26 samples, 0.05%)</title><rect x="815.1" y="229" width="0.7" height="15.0" fill="rgb(229,118,54)" rx="2" ry="2" />
<text  x="818.12" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (473 samples, 0.99%)</title><rect x="184.3" y="101" width="11.7" height="15.0" fill="rgb(249,179,52)" rx="2" ry="2" />
<text  x="187.28" y="111.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (6 samples, 0.01%)</title><rect x="21.5" y="213" width="0.2" height="15.0" fill="rgb(244,172,44)" rx="2" ry="2" />
<text  x="24.53" y="223.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (26 samples, 0.05%)</title><rect x="221.1" y="165" width="0.7" height="15.0" fill="rgb(215,54,29)" rx="2" ry="2" />
<text  x="224.13" y="175.5" ></text>
</g>
<g >
<title>operator delete (44 samples, 0.09%)</title><rect x="570.9" y="277" width="1.1" height="15.0" fill="rgb(247,161,10)" rx="2" ry="2" />
<text  x="573.94" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="718.2" y="405" width="0.1" height="15.0" fill="rgb(241,44,8)" rx="2" ry="2" />
<text  x="721.21" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (22 samples, 0.05%)</title><rect x="140.2" y="229" width="0.6" height="15.0" fill="rgb(212,123,47)" rx="2" ry="2" />
<text  x="143.24" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (11 samples, 0.02%)</title><rect x="705.2" y="469" width="0.3" height="15.0" fill="rgb(251,220,39)" rx="2" ry="2" />
<text  x="708.19" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (365 samples, 0.77%)</title><rect x="505.3" y="245" width="9.0" height="15.0" fill="rgb(246,46,40)" rx="2" ry="2" />
<text  x="508.27" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="417.9" y="277" width="0.1" height="15.0" fill="rgb(218,182,7)" rx="2" ry="2" />
<text  x="420.88" y="287.5" ></text>
</g>
<g >
<title>database::apply_in_memory (19 samples, 0.04%)</title><rect x="1137.9" y="293" width="0.5" height="15.0" fill="rgb(232,35,52)" rx="2" ry="2" />
<text  x="1140.95" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (30 samples, 0.06%)</title><rect x="1118.3" y="389" width="0.8" height="15.0" fill="rgb(209,156,36)" rx="2" ry="2" />
<text  x="1121.33" y="399.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (17 samples, 0.04%)</title><rect x="441.1" y="325" width="0.4" height="15.0" fill="rgb(218,27,39)" rx="2" ry="2" />
<text  x="444.07" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (35 samples, 0.07%)</title><rect x="693.3" y="405" width="0.9" height="15.0" fill="rgb(222,32,6)" rx="2" ry="2" />
<text  x="696.34" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (87 samples, 0.18%)</title><rect x="653.8" y="453" width="2.1" height="15.0" fill="rgb(206,101,6)" rx="2" ry="2" />
<text  x="656.76" y="463.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (61 samples, 0.13%)</title><rect x="614.1" y="437" width="1.5" height="15.0" fill="rgb(230,77,11)" rx="2" ry="2" />
<text  x="617.09" y="447.5" ></text>
</g>
<g >
<title>malloc (11 samples, 0.02%)</title><rect x="605.8" y="389" width="0.3" height="15.0" fill="rgb(235,25,0)" rx="2" ry="2" />
<text  x="608.83" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (222 samples, 0.47%)</title><rect x="620.4" y="437" width="5.5" height="15.0" fill="rgb(249,107,6)" rx="2" ry="2" />
<text  x="623.36" y="447.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (5 samples, 0.01%)</title><rect x="308.8" y="197" width="0.1" height="15.0" fill="rgb(241,120,14)" rx="2" ry="2" />
<text  x="311.77" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (6 samples, 0.01%)</title><rect x="981.2" y="357" width="0.1" height="15.0" fill="rgb(223,61,2)" rx="2" ry="2" />
<text  x="984.20" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (29 samples, 0.06%)</title><rect x="134.7" y="245" width="0.8" height="15.0" fill="rgb(244,176,12)" rx="2" ry="2" />
<text  x="137.74" y="255.5" ></text>
</g>
<g >
<title>free (19 samples, 0.04%)</title><rect x="39.7" y="421" width="0.5" height="15.0" fill="rgb(231,211,54)" rx="2" ry="2" />
<text  x="42.68" y="431.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (48 samples, 0.10%)</title><rect x="737.1" y="293" width="1.2" height="15.0" fill="rgb(230,160,4)" rx="2" ry="2" />
<text  x="740.08" y="303.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="425.5" y="373" width="0.7" height="15.0" fill="rgb(239,125,2)" rx="2" ry="2" />
<text  x="428.49" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (62 samples, 0.13%)</title><rect x="789.7" y="261" width="1.5" height="15.0" fill="rgb(241,80,20)" rx="2" ry="2" />
<text  x="792.66" y="271.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,819 samples, 26.94%)</title><rect x="110.5" y="421" width="317.8" height="15.0" fill="rgb(226,76,32)" rx="2" ry="2" />
<text  x="113.46" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (10 samples, 0.02%)</title><rect x="533.1" y="277" width="0.2" height="15.0" fill="rgb(233,33,20)" rx="2" ry="2" />
<text  x="536.07" y="287.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (11 samples, 0.02%)</title><rect x="438.2" y="341" width="0.3" height="15.0" fill="rgb(254,15,4)" rx="2" ry="2" />
<text  x="441.22" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (13 samples, 0.03%)</title><rect x="489.9" y="325" width="0.3" height="15.0" fill="rgb(230,227,0)" rx="2" ry="2" />
<text  x="492.87" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,881 samples, 12.36%)</title><rect x="120.4" y="341" width="145.9" height="15.0" fill="rgb(244,161,12)" rx="2" ry="2" />
<text  x="123.43" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="44.1" y="469" width="0.7" height="15.0" fill="rgb(223,140,52)" rx="2" ry="2" />
<text  x="47.15" y="479.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="934.9" y="325" width="0.2" height="15.0" fill="rgb(237,28,50)" rx="2" ry="2" />
<text  x="937.88" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="459.4" y="309" width="0.6" height="15.0" fill="rgb(240,166,50)" rx="2" ry="2" />
<text  x="462.37" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt; (5 samples, 0.01%)</title><rect x="25.1" y="485" width="0.1" height="15.0" fill="rgb(253,61,53)" rx="2" ry="2" />
<text  x="28.08" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (8 samples, 0.02%)</title><rect x="816.3" y="277" width="0.2" height="15.0" fill="rgb(212,138,30)" rx="2" ry="2" />
<text  x="819.32" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (33 samples, 0.07%)</title><rect x="35.1" y="485" width="0.9" height="15.0" fill="rgb(218,143,36)" rx="2" ry="2" />
<text  x="38.15" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (21 samples, 0.04%)</title><rect x="878.2" y="453" width="0.6" height="15.0" fill="rgb(224,41,25)" rx="2" ry="2" />
<text  x="881.24" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (20 samples, 0.04%)</title><rect x="577.1" y="309" width="0.5" height="15.0" fill="rgb(246,176,9)" rx="2" ry="2" />
<text  x="580.14" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (6 samples, 0.01%)</title><rect x="1117.3" y="405" width="0.2" height="15.0" fill="rgb(237,171,22)" rx="2" ry="2" />
<text  x="1120.34" y="415.5" ></text>
</g>
<g >
<title>operator delete (125 samples, 0.26%)</title><rect x="93.3" y="437" width="3.1" height="15.0" fill="rgb(251,180,42)" rx="2" ry="2" />
<text  x="96.35" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="595.9" y="389" width="0.1" height="15.0" fill="rgb(237,35,9)" rx="2" ry="2" />
<text  x="598.88" y="399.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (36 samples, 0.08%)</title><rect x="392.9" y="165" width="0.9" height="15.0" fill="rgb(224,154,27)" rx="2" ry="2" />
<text  x="395.91" y="175.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (7 samples, 0.01%)</title><rect x="892.9" y="405" width="0.1" height="15.0" fill="rgb(237,189,27)" rx="2" ry="2" />
<text  x="895.87" y="415.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (8 samples, 0.02%)</title><rect x="809.0" y="117" width="0.2" height="15.0" fill="rgb(238,153,12)" rx="2" ry="2" />
<text  x="812.02" y="127.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (46 samples, 0.10%)</title><rect x="852.7" y="421" width="1.1" height="15.0" fill="rgb(247,92,18)" rx="2" ry="2" />
<text  x="855.69" y="431.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (477 samples, 1.00%)</title><rect x="33.4" y="501" width="11.8" height="15.0" fill="rgb(213,159,15)" rx="2" ry="2" />
<text  x="36.36" y="511.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (9 samples, 0.02%)</title><rect x="263.6" y="325" width="0.3" height="15.0" fill="rgb(238,216,10)" rx="2" ry="2" />
<text  x="266.64" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (123 samples, 0.26%)</title><rect x="622.5" y="421" width="3.0" height="15.0" fill="rgb(243,26,42)" rx="2" ry="2" />
<text  x="625.47" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="666.6" y="485" width="0.2" height="15.0" fill="rgb(249,202,45)" rx="2" ry="2" />
<text  x="669.56" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (56 samples, 0.12%)</title><rect x="746.8" y="341" width="1.3" height="15.0" fill="rgb(238,208,33)" rx="2" ry="2" />
<text  x="749.76" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (34 samples, 0.07%)</title><rect x="1075.0" y="293" width="0.8" height="15.0" fill="rgb(218,88,38)" rx="2" ry="2" />
<text  x="1077.99" y="303.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (88 samples, 0.18%)</title><rect x="303.3" y="229" width="2.2" height="15.0" fill="rgb(251,199,29)" rx="2" ry="2" />
<text  x="306.34" y="239.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="554.1" y="405" width="0.5" height="15.0" fill="rgb(236,184,14)" rx="2" ry="2" />
<text  x="557.12" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (18 samples, 0.04%)</title><rect x="503.8" y="261" width="0.4" height="15.0" fill="rgb(251,198,14)" rx="2" ry="2" />
<text  x="506.76" y="271.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%)</title><rect x="695.0" y="485" width="1.3" height="15.0" fill="rgb(205,141,7)" rx="2" ry="2" />
<text  x="698.03" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (5 samples, 0.01%)</title><rect x="1056.4" y="357" width="0.1" height="15.0" fill="rgb(223,156,21)" rx="2" ry="2" />
<text  x="1059.36" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (170 samples, 0.36%)</title><rect x="677.0" y="485" width="4.3" height="15.0" fill="rgb(234,158,8)" rx="2" ry="2" />
<text  x="680.05" y="495.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,434 samples, 97.58%)</title><rect x="25.3" y="565" width="1151.5" height="15.0" fill="rgb(216,65,23)" rx="2" ry="2" />
<text  x="28.33" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>seastar::memory::allocate (77 samples, 0.16%)</title><rect x="988.5" y="309" width="1.9" height="15.0" fill="rgb(254,36,14)" rx="2" ry="2" />
<text  x="991.54" y="319.5" ></text>
</g>
<g >
<title>operator new (175 samples, 0.37%)</title><rect x="1022.1" y="245" width="4.3" height="15.0" fill="rgb(242,119,4)" rx="2" ry="2" />
<text  x="1025.09" y="255.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="944.1" y="373" width="0.8" height="15.0" fill="rgb(249,21,17)" rx="2" ry="2" />
<text  x="947.10" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (13 samples, 0.03%)</title><rect x="873.8" y="389" width="0.3" height="15.0" fill="rgb(248,30,35)" rx="2" ry="2" />
<text  x="876.80" y="399.5" ></text>
</g>
<g >
<title>operator new (42 samples, 0.09%)</title><rect x="1159.1" y="437" width="1.1" height="15.0" fill="rgb(235,59,47)" rx="2" ry="2" />
<text  x="1162.13" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (301 samples, 0.63%)</title><rect x="546.6" y="405" width="7.4" height="15.0" fill="rgb(223,12,20)" rx="2" ry="2" />
<text  x="549.58" y="415.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (6 samples, 0.01%)</title><rect x="238.0" y="213" width="0.2" height="15.0" fill="rgb(219,229,34)" rx="2" ry="2" />
<text  x="241.04" y="223.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (167 samples, 0.35%)</title><rect x="510.1" y="229" width="4.1" height="15.0" fill="rgb(206,80,17)" rx="2" ry="2" />
<text  x="513.11" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="1105.2" y="373" width="0.3" height="15.0" fill="rgb(228,75,47)" rx="2" ry="2" />
<text  x="1108.17" y="383.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (10,814 samples, 22.73%)</title><rect x="873.2" y="501" width="268.1" height="15.0" fill="rgb(217,34,44)" rx="2" ry="2" />
<text  x="876.18" y="511.5" >seastar::lambda_task&lt;seastar::execu..</text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (90 samples, 0.19%)</title><rect x="824.0" y="325" width="2.3" height="15.0" fill="rgb(209,62,18)" rx="2" ry="2" />
<text  x="827.03" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state_base::future_state_base (9 samples, 0.02%)</title><rect x="794.8" y="261" width="0.3" height="15.0" fill="rgb(228,91,47)" rx="2" ry="2" />
<text  x="797.84" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (27 samples, 0.06%)</title><rect x="43.4" y="453" width="0.6" height="15.0" fill="rgb(206,53,12)" rx="2" ry="2" />
<text  x="46.35" y="463.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,189 samples, 2.50%)</title><rect x="1144.5" y="501" width="29.5" height="15.0" fill="rgb(221,137,41)" rx="2" ry="2" />
<text  x="1147.50" y="511.5" >se..</text>
</g>
<g >
<title>dht::shard_of (35 samples, 0.07%)</title><rect x="1007.9" y="277" width="0.8" height="15.0" fill="rgb(206,137,13)" rx="2" ry="2" />
<text  x="1010.86" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="269.2" y="309" width="0.1" height="15.0" fill="rgb(232,155,39)" rx="2" ry="2" />
<text  x="272.19" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (58 samples, 0.12%)</title><rect x="950.2" y="389" width="1.4" height="15.0" fill="rgb(235,61,12)" rx="2" ry="2" />
<text  x="953.20" y="399.5" ></text>
</g>
<g >
<title>row::external_memory_usage (257 samples, 0.54%)</title><rect x="206.1" y="149" width="6.4" height="15.0" fill="rgb(221,200,40)" rx="2" ry="2" />
<text  x="209.08" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (15 samples, 0.03%)</title><rect x="22.5" y="357" width="0.3" height="15.0" fill="rgb(223,76,28)" rx="2" ry="2" />
<text  x="25.47" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (333 samples, 0.70%)</title><rect x="1069.5" y="341" width="8.2" height="15.0" fill="rgb(223,162,50)" rx="2" ry="2" />
<text  x="1072.46" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (11 samples, 0.02%)</title><rect x="523.5" y="325" width="0.3" height="15.0" fill="rgb(206,142,45)" rx="2" ry="2" />
<text  x="526.52" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (9 samples, 0.02%)</title><rect x="893.0" y="405" width="0.3" height="15.0" fill="rgb(216,175,32)" rx="2" ry="2" />
<text  x="896.04" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (14 samples, 0.03%)</title><rect x="1038.3" y="229" width="0.4" height="15.0" fill="rgb(226,14,39)" rx="2" ry="2" />
<text  x="1041.33" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (8 samples, 0.02%)</title><rect x="1102.7" y="357" width="0.2" height="15.0" fill="rgb(231,35,27)" rx="2" ry="2" />
<text  x="1105.71" y="367.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (22 samples, 0.05%)</title><rect x="398.8" y="229" width="0.6" height="15.0" fill="rgb(209,0,0)" rx="2" ry="2" />
<text  x="401.81" y="239.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="566.2" y="277" width="0.8" height="15.0" fill="rgb(251,108,53)" rx="2" ry="2" />
<text  x="569.25" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (7 samples, 0.01%)</title><rect x="491.0" y="325" width="0.2" height="15.0" fill="rgb(217,135,10)" rx="2" ry="2" />
<text  x="493.99" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (16 samples, 0.03%)</title><rect x="305.0" y="197" width="0.4" height="15.0" fill="rgb(205,214,9)" rx="2" ry="2" />
<text  x="308.05" y="207.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="1139.0" y="165" width="0.2" height="15.0" fill="rgb(225,66,35)" rx="2" ry="2" />
<text  x="1142.01" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (31 samples, 0.07%)</title><rect x="785.2" y="309" width="0.8" height="15.0" fill="rgb(211,213,16)" rx="2" ry="2" />
<text  x="788.22" y="319.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (19 samples, 0.04%)</title><rect x="951.1" y="341" width="0.5" height="15.0" fill="rgb(234,120,49)" rx="2" ry="2" />
<text  x="954.09" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (27 samples, 0.06%)</title><rect x="693.4" y="325" width="0.7" height="15.0" fill="rgb(228,177,40)" rx="2" ry="2" />
<text  x="696.44" y="335.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="162.0" y="229" width="0.2" height="15.0" fill="rgb(226,157,17)" rx="2" ry="2" />
<text  x="164.99" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,432 samples, 9.31%)</title><rect x="431.5" y="389" width="109.9" height="15.0" fill="rgb(229,4,2)" rx="2" ry="2" />
<text  x="434.50" y="399.5" >std::function..</text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (13 samples, 0.03%)</title><rect x="333.9" y="181" width="0.3" height="15.0" fill="rgb(248,42,51)" rx="2" ry="2" />
<text  x="336.89" y="191.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (5 samples, 0.01%)</title><rect x="252.0" y="197" width="0.1" height="15.0" fill="rgb(221,87,16)" rx="2" ry="2" />
<text  x="254.98" y="207.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%)</title><rect x="710.6" y="453" width="0.3" height="15.0" fill="rgb(240,19,42)" rx="2" ry="2" />
<text  x="713.55" y="463.5" ></text>
</g>
<g >
<title>operator new (86 samples, 0.18%)</title><rect x="958.5" y="405" width="2.1" height="15.0" fill="rgb(211,139,36)" rx="2" ry="2" />
<text  x="961.46" y="415.5" ></text>
</g>
<g >
<title>dht::shard_of (17 samples, 0.04%)</title><rect x="1002.8" y="293" width="0.5" height="15.0" fill="rgb(240,69,38)" rx="2" ry="2" />
<text  x="1005.85" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="933.5" y="341" width="0.2" height="15.0" fill="rgb(206,227,14)" rx="2" ry="2" />
<text  x="936.49" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="421" width="0.7" height="15.0" fill="rgb(206,165,9)" rx="2" ry="2" />
<text  x="1140.90" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="645.2" y="485" width="0.4" height="15.0" fill="rgb(242,159,15)" rx="2" ry="2" />
<text  x="648.18" y="495.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20 samples, 0.04%)</title><rect x="805.3" y="117" width="0.5" height="15.0" fill="rgb(218,30,33)" rx="2" ry="2" />
<text  x="808.28" y="127.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="521.1" y="277" width="0.8" height="15.0" fill="rgb(224,86,25)" rx="2" ry="2" />
<text  x="524.14" y="287.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (109 samples, 0.23%)</title><rect x="736.1" y="309" width="2.7" height="15.0" fill="rgb(213,158,29)" rx="2" ry="2" />
<text  x="739.12" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (20 samples, 0.04%)</title><rect x="260.2" y="277" width="0.5" height="15.0" fill="rgb(205,46,34)" rx="2" ry="2" />
<text  x="263.19" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (11 samples, 0.02%)</title><rect x="987.1" y="293" width="0.3" height="15.0" fill="rgb(214,105,33)" rx="2" ry="2" />
<text  x="990.13" y="303.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (12 samples, 0.03%)</title><rect x="912.6" y="389" width="0.3" height="15.0" fill="rgb(235,67,30)" rx="2" ry="2" />
<text  x="915.56" y="399.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (5 samples, 0.01%)</title><rect x="19.8" y="261" width="0.1" height="15.0" fill="rgb(250,70,51)" rx="2" ry="2" />
<text  x="22.82" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%)</title><rect x="1075.6" y="277" width="0.2" height="15.0" fill="rgb(234,114,31)" rx="2" ry="2" />
<text  x="1078.61" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="392.6" y="165" width="0.3" height="15.0" fill="rgb(220,194,21)" rx="2" ry="2" />
<text  x="395.59" y="175.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,421 samples, 9.29%)</title><rect x="144.6" y="293" width="109.7" height="15.0" fill="rgb(241,209,19)" rx="2" ry="2" />
<text  x="147.63" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="722.2" y="501" width="0.2" height="15.0" fill="rgb(211,170,44)" rx="2" ry="2" />
<text  x="725.18" y="511.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (9 samples, 0.02%)</title><rect x="127.8" y="277" width="0.3" height="15.0" fill="rgb(250,12,29)" rx="2" ry="2" />
<text  x="130.84" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (15 samples, 0.03%)</title><rect x="65.3" y="421" width="0.3" height="15.0" fill="rgb(221,142,26)" rx="2" ry="2" />
<text  x="68.28" y="431.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.18%)</title><rect x="551.2" y="341" width="2.2" height="15.0" fill="rgb(237,47,38)" rx="2" ry="2" />
<text  x="554.20" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,823 samples, 5.93%)</title><rect x="162.3" y="245" width="70.0" height="15.0" fill="rgb(250,103,4)" rx="2" ry="2" />
<text  x="165.34" y="255.5" >partiti..</text>
</g>
<g >
<title>seastar::memory::stats (22 samples, 0.05%)</title><rect x="534.5" y="293" width="0.5" height="15.0" fill="rgb(232,55,17)" rx="2" ry="2" />
<text  x="537.46" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (19 samples, 0.04%)</title><rect x="232.8" y="245" width="0.5" height="15.0" fill="rgb(228,95,39)" rx="2" ry="2" />
<text  x="235.84" y="255.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (47 samples, 0.10%)</title><rect x="18.9" y="277" width="1.1" height="15.0" fill="rgb(233,71,5)" rx="2" ry="2" />
<text  x="21.88" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (22 samples, 0.05%)</title><rect x="1172.9" y="421" width="0.6" height="15.0" fill="rgb(210,88,54)" rx="2" ry="2" />
<text  x="1175.91" y="431.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (8 samples, 0.02%)</title><rect x="694.3" y="485" width="0.2" height="15.0" fill="rgb(220,202,10)" rx="2" ry="2" />
<text  x="697.31" y="495.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="595.5" y="405" width="0.5" height="15.0" fill="rgb(247,180,46)" rx="2" ry="2" />
<text  x="598.46" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (24 samples, 0.05%)</title><rect x="328.8" y="181" width="0.6" height="15.0" fill="rgb(216,136,24)" rx="2" ry="2" />
<text  x="331.81" y="191.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,450 samples, 5.15%)</title><rect x="995.6" y="341" width="60.8" height="15.0" fill="rgb(205,173,52)" rx="2" ry="2" />
<text  x="998.61" y="351.5" >servic..</text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="449.1" y="277" width="0.7" height="15.0" fill="rgb(247,19,16)" rx="2" ry="2" />
<text  x="452.05" y="287.5" ></text>
</g>
<g >
<title>compound_type&lt; (63 samples, 0.13%)</title><rect x="547.7" y="357" width="1.6" height="15.0" fill="rgb(225,106,52)" rx="2" ry="2" />
<text  x="550.70" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (344 samples, 0.72%)</title><rect x="546.2" y="421" width="8.5" height="15.0" fill="rgb(229,111,29)" rx="2" ry="2" />
<text  x="549.21" y="431.5" ></text>
</g>
<g >
<title>posix_memalign (8 samples, 0.02%)</title><rect x="191.2" y="69" width="0.2" height="15.0" fill="rgb(209,204,47)" rx="2" ry="2" />
<text  x="194.18" y="79.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (522 samples, 1.10%)</title><rect x="476.8" y="293" width="13.0" height="15.0" fill="rgb(249,68,26)" rx="2" ry="2" />
<text  x="479.83" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (25 samples, 0.05%)</title><rect x="415.8" y="229" width="0.6" height="15.0" fill="rgb(232,185,48)" rx="2" ry="2" />
<text  x="418.77" y="239.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (15 samples, 0.03%)</title><rect x="1137.5" y="469" width="0.4" height="15.0" fill="rgb(240,147,44)" rx="2" ry="2" />
<text  x="1140.50" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (22 samples, 0.05%)</title><rect x="1049.4" y="277" width="0.5" height="15.0" fill="rgb(247,211,12)" rx="2" ry="2" />
<text  x="1052.39" y="287.5" ></text>
</g>
<g >
<title>operator delete (43 samples, 0.09%)</title><rect x="1121.1" y="421" width="1.0" height="15.0" fill="rgb(219,149,36)" rx="2" ry="2" />
<text  x="1124.06" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (12 samples, 0.03%)</title><rect x="452.0" y="293" width="0.3" height="15.0" fill="rgb(240,31,9)" rx="2" ry="2" />
<text  x="454.98" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="673.0" y="469" width="0.2" height="15.0" fill="rgb(241,141,52)" rx="2" ry="2" />
<text  x="675.98" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (18 samples, 0.04%)</title><rect x="140.8" y="245" width="0.5" height="15.0" fill="rgb(241,145,10)" rx="2" ry="2" />
<text  x="143.84" y="255.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (16 samples, 0.03%)</title><rect x="578.3" y="373" width="0.4" height="15.0" fill="rgb(224,59,29)" rx="2" ry="2" />
<text  x="581.30" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (18 samples, 0.04%)</title><rect x="765.6" y="325" width="0.4" height="15.0" fill="rgb(226,49,23)" rx="2" ry="2" />
<text  x="768.55" y="335.5" ></text>
</g>
<g >
<title>row_tombstone::apply (18 samples, 0.04%)</title><rect x="396.1" y="213" width="0.5" height="15.0" fill="rgb(247,158,23)" rx="2" ry="2" />
<text  x="399.13" y="223.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (330 samples, 0.69%)</title><rect x="731.5" y="437" width="8.1" height="15.0" fill="rgb(222,52,49)" rx="2" ry="2" />
<text  x="734.46" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="517.8" y="277" width="0.3" height="15.0" fill="rgb(242,110,54)" rx="2" ry="2" />
<text  x="520.82" y="287.5" ></text>
</g>
<g >
<title>operator new (96 samples, 0.20%)</title><rect x="158.3" y="213" width="2.4" height="15.0" fill="rgb(232,40,14)" rx="2" ry="2" />
<text  x="161.29" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="1053.2" y="197" width="0.5" height="15.0" fill="rgb(221,25,27)" rx="2" ry="2" />
<text  x="1056.21" y="207.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (70 samples, 0.15%)</title><rect x="20.7" y="357" width="1.8" height="15.0" fill="rgb(224,93,18)" rx="2" ry="2" />
<text  x="23.74" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (30 samples, 0.06%)</title><rect x="545.5" y="421" width="0.7" height="15.0" fill="rgb(253,204,18)" rx="2" ry="2" />
<text  x="548.47" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (35 samples, 0.07%)</title><rect x="690.8" y="453" width="0.9" height="15.0" fill="rgb(253,186,16)" rx="2" ry="2" />
<text  x="693.79" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (120 samples, 0.25%)</title><rect x="832.0" y="325" width="3.0" height="15.0" fill="rgb(225,213,52)" rx="2" ry="2" />
<text  x="835.01" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (7 samples, 0.01%)</title><rect x="677.6" y="469" width="0.1" height="15.0" fill="rgb(248,12,34)" rx="2" ry="2" />
<text  x="680.57" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (8 samples, 0.02%)</title><rect x="501.8" y="261" width="0.2" height="15.0" fill="rgb(252,80,5)" rx="2" ry="2" />
<text  x="504.80" y="271.5" ></text>
</g>
<g >
<title>db::filter_for_query (39 samples, 0.08%)</title><rect x="1067.4" y="341" width="1.0" height="15.0" fill="rgb(208,101,10)" rx="2" ry="2" />
<text  x="1070.40" y="351.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::update_parameters::make_cell (6 samples, 0.01%)</title><rect x="873.8" y="277" width="0.2" height="15.0" fill="rgb(221,126,45)" rx="2" ry="2" />
<text  x="876.82" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (160 samples, 0.34%)</title><rect x="991.5" y="293" width="4.0" height="15.0" fill="rgb(232,197,4)" rx="2" ry="2" />
<text  x="994.51" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (34 samples, 0.07%)</title><rect x="40.2" y="421" width="0.8" height="15.0" fill="rgb(245,49,14)" rx="2" ry="2" />
<text  x="43.20" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (76 samples, 0.16%)</title><rect x="400.8" y="229" width="1.9" height="15.0" fill="rgb(245,3,23)" rx="2" ry="2" />
<text  x="403.82" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="865.4" y="469" width="0.2" height="15.0" fill="rgb(246,127,11)" rx="2" ry="2" />
<text  x="868.37" y="479.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (15 samples, 0.03%)</title><rect x="849.1" y="357" width="0.4" height="15.0" fill="rgb(251,36,36)" rx="2" ry="2" />
<text  x="852.10" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (7 samples, 0.01%)</title><rect x="595.0" y="421" width="0.2" height="15.0" fill="rgb(214,138,1)" rx="2" ry="2" />
<text  x="598.04" y="431.5" ></text>
</g>
<g >
<title>malloc (26 samples, 0.05%)</title><rect x="604.9" y="373" width="0.6" height="15.0" fill="rgb(234,64,37)" rx="2" ry="2" />
<text  x="607.89" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="229.9" y="181" width="0.1" height="15.0" fill="rgb(241,117,20)" rx="2" ry="2" />
<text  x="232.86" y="191.5" ></text>
</g>
<g >
<title>operator new (44 samples, 0.09%)</title><rect x="541.4" y="405" width="1.1" height="15.0" fill="rgb(236,168,45)" rx="2" ry="2" />
<text  x="544.40" y="415.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (55 samples, 0.12%)</title><rect x="18.7" y="309" width="1.4" height="15.0" fill="rgb(230,197,45)" rx="2" ry="2" />
<text  x="21.73" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (23 samples, 0.05%)</title><rect x="458.7" y="325" width="0.6" height="15.0" fill="rgb(232,122,6)" rx="2" ry="2" />
<text  x="461.72" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (11 samples, 0.02%)</title><rect x="1173.6" y="421" width="0.2" height="15.0" fill="rgb(238,227,54)" rx="2" ry="2" />
<text  x="1176.56" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (483 samples, 1.02%)</title><rect x="650.1" y="485" width="12.0" height="15.0" fill="rgb(212,49,51)" rx="2" ry="2" />
<text  x="653.14" y="495.5" ></text>
</g>
<g >
<title>compound_type&lt; (89 samples, 0.19%)</title><rect x="914.7" y="373" width="2.2" height="15.0" fill="rgb(229,72,48)" rx="2" ry="2" />
<text  x="917.67" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (47 samples, 0.10%)</title><rect x="508.8" y="213" width="1.2" height="15.0" fill="rgb(249,70,43)" rx="2" ry="2" />
<text  x="511.79" y="223.5" ></text>
</g>
<g >
<title>operator new (70 samples, 0.15%)</title><rect x="1039.6" y="213" width="1.8" height="15.0" fill="rgb(216,169,42)" rx="2" ry="2" />
<text  x="1042.62" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="845.4" y="437" width="0.2" height="15.0" fill="rgb(236,145,45)" rx="2" ry="2" />
<text  x="848.43" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (165 samples, 0.35%)</title><rect x="948.3" y="421" width="4.1" height="15.0" fill="rgb(234,183,33)" rx="2" ry="2" />
<text  x="951.27" y="431.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (105 samples, 0.22%)</title><rect x="309.7" y="181" width="2.6" height="15.0" fill="rgb(239,13,51)" rx="2" ry="2" />
<text  x="312.71" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (9 samples, 0.02%)</title><rect x="799.2" y="213" width="0.2" height="15.0" fill="rgb(208,185,39)" rx="2" ry="2" />
<text  x="802.15" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%)</title><rect x="989.6" y="293" width="0.8" height="15.0" fill="rgb(205,40,43)" rx="2" ry="2" />
<text  x="992.58" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (18 samples, 0.04%)</title><rect x="906.3" y="357" width="0.5" height="15.0" fill="rgb(224,189,1)" rx="2" ry="2" />
<text  x="909.33" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (13 samples, 0.03%)</title><rect x="782.7" y="341" width="0.3" height="15.0" fill="rgb(245,173,28)" rx="2" ry="2" />
<text  x="785.71" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="619.9" y="437" width="0.2" height="15.0" fill="rgb(206,138,7)" rx="2" ry="2" />
<text  x="622.91" y="447.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="773.3" y="373" width="0.8" height="15.0" fill="rgb(253,4,48)" rx="2" ry="2" />
<text  x="776.31" y="383.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (83 samples, 0.17%)</title><rect x="531.3" y="293" width="2.1" height="15.0" fill="rgb(221,177,44)" rx="2" ry="2" />
<text  x="534.33" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (30 samples, 0.06%)</title><rect x="809.3" y="101" width="0.7" height="15.0" fill="rgb(211,216,8)" rx="2" ry="2" />
<text  x="812.30" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="292.7" y="277" width="0.5" height="15.0" fill="rgb(224,139,29)" rx="2" ry="2" />
<text  x="295.65" y="287.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (178 samples, 0.37%)</title><rect x="191.4" y="69" width="4.4" height="15.0" fill="rgb(215,192,36)" rx="2" ry="2" />
<text  x="194.37" y="79.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (9 samples, 0.02%)</title><rect x="873.8" y="309" width="0.2" height="15.0" fill="rgb(235,121,7)" rx="2" ry="2" />
<text  x="876.82" y="319.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (656 samples, 1.38%)</title><rect x="742.0" y="421" width="16.3" height="15.0" fill="rgb(209,129,10)" rx="2" ry="2" />
<text  x="745.02" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="336.6" y="181" width="0.1" height="15.0" fill="rgb(206,172,14)" rx="2" ry="2" />
<text  x="339.62" y="191.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (142 samples, 0.30%)</title><rect x="916.9" y="373" width="3.5" height="15.0" fill="rgb(247,108,51)" rx="2" ry="2" />
<text  x="919.87" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (27 samples, 0.06%)</title><rect x="787.5" y="293" width="0.6" height="15.0" fill="rgb(231,180,13)" rx="2" ry="2" />
<text  x="790.47" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (20 samples, 0.04%)</title><rect x="864.8" y="453" width="0.5" height="15.0" fill="rgb(236,175,30)" rx="2" ry="2" />
<text  x="867.80" y="463.5" ></text>
</g>
<g >
<title>database::find_uuid (189 samples, 0.40%)</title><rect x="766.0" y="389" width="4.7" height="15.0" fill="rgb(226,89,3)" rx="2" ry="2" />
<text  x="769.05" y="399.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (7 samples, 0.01%)</title><rect x="625.6" y="421" width="0.2" height="15.0" fill="rgb(239,48,29)" rx="2" ry="2" />
<text  x="628.62" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="598.9" y="389" width="0.2" height="15.0" fill="rgb(211,162,35)" rx="2" ry="2" />
<text  x="601.93" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="669.9" y="437" width="0.2" height="15.0" fill="rgb(250,134,38)" rx="2" ry="2" />
<text  x="672.86" y="447.5" ></text>
</g>
<g >
<title>operator delete (77 samples, 0.16%)</title><rect x="586.7" y="341" width="1.9" height="15.0" fill="rgb(224,210,5)" rx="2" ry="2" />
<text  x="589.68" y="351.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (127 samples, 0.27%)</title><rect x="242.5" y="213" width="3.1" height="15.0" fill="rgb(234,76,3)" rx="2" ry="2" />
<text  x="245.46" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (11 samples, 0.02%)</title><rect x="220.3" y="149" width="0.3" height="15.0" fill="rgb(234,165,32)" rx="2" ry="2" />
<text  x="223.34" y="159.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (6 samples, 0.01%)</title><rect x="526.2" y="341" width="0.2" height="15.0" fill="rgb(211,119,1)" rx="2" ry="2" />
<text  x="529.25" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (374 samples, 0.79%)</title><rect x="442.4" y="309" width="9.3" height="15.0" fill="rgb(215,30,15)" rx="2" ry="2" />
<text  x="445.41" y="319.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (41 samples, 0.09%)</title><rect x="731.9" y="405" width="1.0" height="15.0" fill="rgb(224,113,28)" rx="2" ry="2" />
<text  x="734.85" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="663.2" y="485" width="0.1" height="15.0" fill="rgb(231,87,2)" rx="2" ry="2" />
<text  x="666.19" y="495.5" ></text>
</g>
<g >
<title>database::find_schema (76 samples, 0.16%)</title><rect x="764.2" y="389" width="1.8" height="15.0" fill="rgb(247,218,21)" rx="2" ry="2" />
<text  x="767.16" y="399.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (12 samples, 0.03%)</title><rect x="608.8" y="405" width="0.3" height="15.0" fill="rgb(218,40,9)" rx="2" ry="2" />
<text  x="611.75" y="415.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,237 samples, 2.60%)</title><rect x="788.6" y="325" width="30.7" height="15.0" fill="rgb(237,106,36)" rx="2" ry="2" />
<text  x="791.62" y="335.5" >st..</text>
</g>
<g >
<title>memtable_entry::snapshot (82 samples, 0.17%)</title><rect x="519.9" y="325" width="2.0" height="15.0" fill="rgb(212,184,52)" rx="2" ry="2" />
<text  x="522.88" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (22 samples, 0.05%)</title><rect x="776.3" y="341" width="0.6" height="15.0" fill="rgb(214,198,16)" rx="2" ry="2" />
<text  x="779.32" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,494 samples, 7.34%)</title><rect x="148.0" y="261" width="86.7" height="15.0" fill="rgb(235,214,14)" rx="2" ry="2" />
<text  x="151.03" y="271.5" >partition_..</text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (28 samples, 0.06%)</title><rect x="825.6" y="293" width="0.7" height="15.0" fill="rgb(219,162,47)" rx="2" ry="2" />
<text  x="828.56" y="303.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (50 samples, 0.11%)</title><rect x="363.4" y="149" width="1.2" height="15.0" fill="rgb(240,211,29)" rx="2" ry="2" />
<text  x="366.40" y="159.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (136 samples, 0.29%)</title><rect x="752.8" y="325" width="3.3" height="15.0" fill="rgb(229,132,41)" rx="2" ry="2" />
<text  x="755.76" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (21 samples, 0.04%)</title><rect x="712.9" y="421" width="0.5" height="15.0" fill="rgb(243,92,3)" rx="2" ry="2" />
<text  x="715.88" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="793.6" y="229" width="0.1" height="15.0" fill="rgb(243,0,40)" rx="2" ry="2" />
<text  x="796.55" y="239.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (6 samples, 0.01%)</title><rect x="21.5" y="229" width="0.2" height="15.0" fill="rgb(238,42,17)" rx="2" ry="2" />
<text  x="24.53" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (968 samples, 2.03%)</title><rect x="912.9" y="405" width="24.0" height="15.0" fill="rgb(221,65,20)" rx="2" ry="2" />
<text  x="915.85" y="415.5" >c..</text>
</g>
<g >
<title>schema_registry::get_entry (141 samples, 0.30%)</title><rect x="977.0" y="341" width="3.5" height="15.0" fill="rgb(206,172,41)" rx="2" ry="2" />
<text  x="980.01" y="351.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (444 samples, 0.93%)</title><rect x="527.5" y="325" width="11.0" height="15.0" fill="rgb(212,91,11)" rx="2" ry="2" />
<text  x="530.49" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (7 samples, 0.01%)</title><rect x="103.4" y="389" width="0.2" height="15.0" fill="rgb(241,97,44)" rx="2" ry="2" />
<text  x="106.42" y="399.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (9 samples, 0.02%)</title><rect x="303.1" y="229" width="0.2" height="15.0" fill="rgb(240,38,19)" rx="2" ry="2" />
<text  x="306.09" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%)</title><rect x="227.0" y="117" width="0.2" height="15.0" fill="rgb(214,102,44)" rx="2" ry="2" />
<text  x="230.01" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (139 samples, 0.29%)</title><rect x="1050.2" y="277" width="3.5" height="15.0" fill="rgb(251,213,48)" rx="2" ry="2" />
<text  x="1053.24" y="287.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (177 samples, 0.37%)</title><rect x="931.0" y="389" width="4.4" height="15.0" fill="rgb(220,130,48)" rx="2" ry="2" />
<text  x="934.03" y="399.5" ></text>
</g>
<g >
<title>__tls_init (8 samples, 0.02%)</title><rect x="500.9" y="261" width="0.2" height="15.0" fill="rgb(223,127,6)" rx="2" ry="2" />
<text  x="503.93" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (12 samples, 0.03%)</title><rect x="1039.0" y="229" width="0.3" height="15.0" fill="rgb(206,188,22)" rx="2" ry="2" />
<text  x="1042.03" y="239.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (6 samples, 0.01%)</title><rect x="592.6" y="405" width="0.2" height="15.0" fill="rgb(208,84,44)" rx="2" ry="2" />
<text  x="595.61" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="456.2" y="261" width="0.3" height="15.0" fill="rgb(240,107,1)" rx="2" ry="2" />
<text  x="459.17" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (49 samples, 0.10%)</title><rect x="812.5" y="245" width="1.2" height="15.0" fill="rgb(246,143,51)" rx="2" ry="2" />
<text  x="815.47" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="726.4" y="405" width="1.3" height="15.0" fill="rgb(218,129,29)" rx="2" ry="2" />
<text  x="729.40" y="415.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (7 samples, 0.01%)</title><rect x="533.4" y="309" width="0.2" height="15.0" fill="rgb(212,109,22)" rx="2" ry="2" />
<text  x="536.39" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (774 samples, 1.63%)</title><rect x="893.7" y="405" width="19.2" height="15.0" fill="rgb(238,49,20)" rx="2" ry="2" />
<text  x="896.66" y="415.5" ></text>
</g>
<g >
<title>free (106 samples, 0.22%)</title><rect x="406.1" y="181" width="2.6" height="15.0" fill="rgb(207,210,21)" rx="2" ry="2" />
<text  x="409.08" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (6 samples, 0.01%)</title><rect x="212.3" y="133" width="0.2" height="15.0" fill="rgb(235,208,28)" rx="2" ry="2" />
<text  x="215.30" y="143.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (40 samples, 0.08%)</title><rect x="756.9" y="405" width="1.0" height="15.0" fill="rgb(226,213,21)" rx="2" ry="2" />
<text  x="759.95" y="415.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.03%)</title><rect x="637.2" y="485" width="0.3" height="15.0" fill="rgb(223,23,21)" rx="2" ry="2" />
<text  x="640.20" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (10 samples, 0.02%)</title><rect x="1112.3" y="373" width="0.2" height="15.0" fill="rgb(219,210,13)" rx="2" ry="2" />
<text  x="1115.26" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="905.1" y="309" width="0.3" height="15.0" fill="rgb(211,168,42)" rx="2" ry="2" />
<text  x="908.14" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (5 samples, 0.01%)</title><rect x="694.3" y="453" width="0.2" height="15.0" fill="rgb(254,142,46)" rx="2" ry="2" />
<text  x="697.33" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (12 samples, 0.03%)</title><rect x="214.7" y="149" width="0.3" height="15.0" fill="rgb(253,88,53)" rx="2" ry="2" />
<text  x="217.66" y="159.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (24 samples, 0.05%)</title><rect x="930.1" y="357" width="0.6" height="15.0" fill="rgb(227,124,29)" rx="2" ry="2" />
<text  x="933.06" y="367.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="817.3" y="277" width="0.7" height="15.0" fill="rgb(220,39,0)" rx="2" ry="2" />
<text  x="820.31" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (30 samples, 0.06%)</title><rect x="99.7" y="405" width="0.7" height="15.0" fill="rgb(215,188,44)" rx="2" ry="2" />
<text  x="102.70" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (10 samples, 0.02%)</title><rect x="821.2" y="277" width="0.2" height="15.0" fill="rgb(230,99,4)" rx="2" ry="2" />
<text  x="824.15" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (13 samples, 0.03%)</title><rect x="204.1" y="101" width="0.4" height="15.0" fill="rgb(247,143,42)" rx="2" ry="2" />
<text  x="207.15" y="111.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (5 samples, 0.01%)</title><rect x="188.2" y="85" width="0.1" height="15.0" fill="rgb(248,201,5)" rx="2" ry="2" />
<text  x="191.20" y="95.5" ></text>
</g>
<g >
<title>schema::column_at (59 samples, 0.12%)</title><rect x="332.3" y="181" width="1.4" height="15.0" fill="rgb(234,62,33)" rx="2" ry="2" />
<text  x="335.25" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (112 samples, 0.24%)</title><rect x="984.8" y="325" width="2.8" height="15.0" fill="rgb(238,110,7)" rx="2" ry="2" />
<text  x="987.79" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (15 samples, 0.03%)</title><rect x="1103.4" y="357" width="0.4" height="15.0" fill="rgb(213,168,52)" rx="2" ry="2" />
<text  x="1106.43" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (21 samples, 0.04%)</title><rect x="555.4" y="421" width="0.5" height="15.0" fill="rgb(219,171,29)" rx="2" ry="2" />
<text  x="558.41" y="431.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="281.6" y="309" width="0.2" height="15.0" fill="rgb(238,166,20)" rx="2" ry="2" />
<text  x="284.62" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="1138.6" y="309" width="0.3" height="15.0" fill="rgb(207,95,15)" rx="2" ry="2" />
<text  x="1141.64" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (11 samples, 0.02%)</title><rect x="233.6" y="245" width="0.2" height="15.0" fill="rgb(212,64,44)" rx="2" ry="2" />
<text  x="236.56" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (27 samples, 0.06%)</title><rect x="830.6" y="293" width="0.7" height="15.0" fill="rgb(243,168,35)" rx="2" ry="2" />
<text  x="833.65" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (17 samples, 0.04%)</title><rect x="833.4" y="293" width="0.4" height="15.0" fill="rgb(244,34,31)" rx="2" ry="2" />
<text  x="836.38" y="303.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="521.9" y="325" width="0.7" height="15.0" fill="rgb(233,216,26)" rx="2" ry="2" />
<text  x="524.91" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (15 samples, 0.03%)</title><rect x="251.5" y="197" width="0.4" height="15.0" fill="rgb(220,220,54)" rx="2" ry="2" />
<text  x="254.51" y="207.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="489.4" y="213" width="0.1" height="15.0" fill="rgb(237,70,30)" rx="2" ry="2" />
<text  x="492.38" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="981.5" y="357" width="0.2" height="15.0" fill="rgb(228,31,1)" rx="2" ry="2" />
<text  x="984.50" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (9 samples, 0.02%)</title><rect x="949.5" y="389" width="0.2" height="15.0" fill="rgb(206,188,3)" rx="2" ry="2" />
<text  x="952.48" y="399.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (415 samples, 0.87%)</title><rect x="465.9" y="309" width="10.3" height="15.0" fill="rgb(222,105,26)" rx="2" ry="2" />
<text  x="468.94" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (6 samples, 0.01%)</title><rect x="248.6" y="229" width="0.1" height="15.0" fill="rgb(242,191,49)" rx="2" ry="2" />
<text  x="251.56" y="239.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (218 samples, 0.46%)</title><rect x="1030.2" y="181" width="5.4" height="15.0" fill="rgb(232,211,32)" rx="2" ry="2" />
<text  x="1033.22" y="191.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="703.3" y="485" width="0.1" height="15.0" fill="rgb(253,228,37)" rx="2" ry="2" />
<text  x="706.26" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (102 samples, 0.21%)</title><rect x="181.8" y="101" width="2.5" height="15.0" fill="rgb(240,128,16)" rx="2" ry="2" />
<text  x="184.75" y="111.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,758 samples, 3.69%)</title><rect x="1056.6" y="357" width="43.6" height="15.0" fill="rgb(213,166,45)" rx="2" ry="2" />
<text  x="1059.59" y="367.5" >serv..</text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (98 samples, 0.21%)</title><rect x="623.1" y="405" width="2.4" height="15.0" fill="rgb(224,74,37)" rx="2" ry="2" />
<text  x="626.09" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (192 samples, 0.40%)</title><rect x="1169.2" y="485" width="4.8" height="15.0" fill="rgb(252,139,10)" rx="2" ry="2" />
<text  x="1172.22" y="495.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (19 samples, 0.04%)</title><rect x="127.4" y="261" width="0.4" height="15.0" fill="rgb(241,9,35)" rx="2" ry="2" />
<text  x="130.37" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (7 samples, 0.01%)</title><rect x="656.1" y="453" width="0.2" height="15.0" fill="rgb(252,33,48)" rx="2" ry="2" />
<text  x="659.14" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="487.8" y="181" width="0.2" height="15.0" fill="rgb(253,161,17)" rx="2" ry="2" />
<text  x="490.84" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (8 samples, 0.02%)</title><rect x="610.5" y="421" width="0.2" height="15.0" fill="rgb(240,9,36)" rx="2" ry="2" />
<text  x="613.46" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (16 samples, 0.03%)</title><rect x="490.6" y="325" width="0.4" height="15.0" fill="rgb(224,51,38)" rx="2" ry="2" />
<text  x="493.59" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (15 samples, 0.03%)</title><rect x="865.7" y="469" width="0.4" height="15.0" fill="rgb(226,77,47)" rx="2" ry="2" />
<text  x="868.71" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="452.3" y="293" width="0.2" height="15.0" fill="rgb(253,29,47)" rx="2" ry="2" />
<text  x="455.33" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="837.2" y="309" width="0.1" height="15.0" fill="rgb(217,45,33)" rx="2" ry="2" />
<text  x="840.17" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="585.1" y="341" width="0.2" height="15.0" fill="rgb(247,190,52)" rx="2" ry="2" />
<text  x="588.12" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (5 samples, 0.01%)</title><rect x="952.2" y="405" width="0.1" height="15.0" fill="rgb(212,50,51)" rx="2" ry="2" />
<text  x="955.18" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="419.6" y="277" width="0.1" height="15.0" fill="rgb(252,217,4)" rx="2" ry="2" />
<text  x="422.62" y="287.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (274 samples, 0.58%)</title><rect x="444.4" y="293" width="6.8" height="15.0" fill="rgb(224,159,2)" rx="2" ry="2" />
<text  x="447.37" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1138.6" y="421" width="0.9" height="15.0" fill="rgb(206,159,11)" rx="2" ry="2" />
<text  x="1141.59" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (8 samples, 0.02%)</title><rect x="1076.8" y="309" width="0.2" height="15.0" fill="rgb(253,172,7)" rx="2" ry="2" />
<text  x="1079.85" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (12 samples, 0.03%)</title><rect x="988.0" y="341" width="0.3" height="15.0" fill="rgb(238,112,49)" rx="2" ry="2" />
<text  x="990.97" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="261.7" y="293" width="0.2" height="15.0" fill="rgb(231,71,11)" rx="2" ry="2" />
<text  x="264.73" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (10 samples, 0.02%)</title><rect x="952.4" y="421" width="0.2" height="15.0" fill="rgb(215,155,0)" rx="2" ry="2" />
<text  x="955.36" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%)</title><rect x="614.4" y="405" width="0.9" height="15.0" fill="rgb(225,32,17)" rx="2" ry="2" />
<text  x="617.36" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="418.8" y="277" width="0.2" height="15.0" fill="rgb(209,36,43)" rx="2" ry="2" />
<text  x="421.85" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume (28 samples, 0.06%)</title><rect x="400.1" y="229" width="0.7" height="15.0" fill="rgb(229,185,16)" rx="2" ry="2" />
<text  x="403.13" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (766 samples, 1.61%)</title><rect x="377.1" y="197" width="19.0" height="15.0" fill="rgb(213,62,18)" rx="2" ry="2" />
<text  x="380.06" y="207.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (66 samples, 0.14%)</title><rect x="797.1" y="197" width="1.6" height="15.0" fill="rgb(235,225,19)" rx="2" ry="2" />
<text  x="800.10" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (22 samples, 0.05%)</title><rect x="832.8" y="293" width="0.5" height="15.0" fill="rgb(245,188,54)" rx="2" ry="2" />
<text  x="835.78" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (152 samples, 0.32%)</title><rect x="238.3" y="213" width="3.8" height="15.0" fill="rgb(231,63,11)" rx="2" ry="2" />
<text  x="241.34" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (74 samples, 0.16%)</title><rect x="1117.6" y="405" width="1.8" height="15.0" fill="rgb(254,171,18)" rx="2" ry="2" />
<text  x="1120.56" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,519 samples, 11.60%)</title><rect x="728.5" y="469" width="136.8" height="15.0" fill="rgb(230,76,16)" rx="2" ry="2" />
<text  x="731.45" y="479.5" >single_node_cql_e..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="644.8" y="469" width="0.2" height="15.0" fill="rgb(251,69,21)" rx="2" ry="2" />
<text  x="647.84" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="710.3" y="453" width="0.3" height="15.0" fill="rgb(239,26,17)" rx="2" ry="2" />
<text  x="713.33" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="986.6" y="261" width="0.5" height="15.0" fill="rgb(237,126,4)" rx="2" ry="2" />
<text  x="989.58" y="271.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (21 samples, 0.04%)</title><rect x="233.8" y="245" width="0.5" height="15.0" fill="rgb(234,103,4)" rx="2" ry="2" />
<text  x="236.83" y="255.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (76 samples, 0.16%)</title><rect x="792.7" y="261" width="1.9" height="15.0" fill="rgb(226,153,16)" rx="2" ry="2" />
<text  x="795.73" y="271.5" ></text>
</g>
<g >
<title>schema_registry::learn (5 samples, 0.01%)</title><rect x="49.4" y="469" width="0.1" height="15.0" fill="rgb(218,191,41)" rx="2" ry="2" />
<text  x="52.40" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (11 samples, 0.02%)</title><rect x="892.6" y="405" width="0.2" height="15.0" fill="rgb(245,55,30)" rx="2" ry="2" />
<text  x="895.57" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume (19 samples, 0.04%)</title><rect x="281.0" y="277" width="0.5" height="15.0" fill="rgb(210,33,1)" rx="2" ry="2" />
<text  x="284.00" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (13 samples, 0.03%)</title><rect x="943.0" y="405" width="0.4" height="15.0" fill="rgb(236,46,6)" rx="2" ry="2" />
<text  x="946.03" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (6 samples, 0.01%)</title><rect x="317.5" y="181" width="0.1" height="15.0" fill="rgb(226,113,18)" rx="2" ry="2" />
<text  x="320.50" y="191.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="768.4" y="309" width="0.2" height="15.0" fill="rgb(248,179,51)" rx="2" ry="2" />
<text  x="771.38" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (49 samples, 0.10%)</title><rect x="72.5" y="389" width="1.2" height="15.0" fill="rgb(235,179,31)" rx="2" ry="2" />
<text  x="75.52" y="399.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (24 samples, 0.05%)</title><rect x="684.3" y="469" width="0.6" height="15.0" fill="rgb(240,125,37)" rx="2" ry="2" />
<text  x="687.26" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (86 samples, 0.18%)</title><rect x="866.1" y="469" width="2.2" height="15.0" fill="rgb(235,137,2)" rx="2" ry="2" />
<text  x="869.13" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (40 samples, 0.08%)</title><rect x="514.9" y="229" width="1.0" height="15.0" fill="rgb(214,15,20)" rx="2" ry="2" />
<text  x="517.92" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (35 samples, 0.07%)</title><rect x="483.6" y="197" width="0.9" height="15.0" fill="rgb(205,70,44)" rx="2" ry="2" />
<text  x="486.60" y="207.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (10 samples, 0.02%)</title><rect x="920.5" y="373" width="0.2" height="15.0" fill="rgb(207,188,6)" rx="2" ry="2" />
<text  x="923.49" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,780 samples, 3.74%)</title><rect x="171.0" y="181" width="44.2" height="15.0" fill="rgb(250,189,40)" rx="2" ry="2" />
<text  x="174.04" y="191.5" >muta..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (23 samples, 0.05%)</title><rect x="75.4" y="405" width="0.6" height="15.0" fill="rgb(235,158,8)" rx="2" ry="2" />
<text  x="78.44" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (12 samples, 0.03%)</title><rect x="518.8" y="309" width="0.3" height="15.0" fill="rgb(207,104,46)" rx="2" ry="2" />
<text  x="521.79" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (334 samples, 0.70%)</title><rect x="481.3" y="229" width="8.3" height="15.0" fill="rgb(251,51,53)" rx="2" ry="2" />
<text  x="484.29" y="239.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (32 samples, 0.07%)</title><rect x="259.1" y="277" width="0.8" height="15.0" fill="rgb(227,93,29)" rx="2" ry="2" />
<text  x="262.07" y="287.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (15 samples, 0.03%)</title><rect x="315.0" y="165" width="0.4" height="15.0" fill="rgb(244,76,0)" rx="2" ry="2" />
<text  x="318.02" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (8 samples, 0.02%)</title><rect x="23.8" y="389" width="0.2" height="15.0" fill="rgb(239,169,32)" rx="2" ry="2" />
<text  x="26.84" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (10 samples, 0.02%)</title><rect x="77.9" y="421" width="0.2" height="15.0" fill="rgb(209,22,11)" rx="2" ry="2" />
<text  x="80.90" y="431.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (13 samples, 0.03%)</title><rect x="245.3" y="197" width="0.3" height="15.0" fill="rgb(252,0,0)" rx="2" ry="2" />
<text  x="248.29" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;abstract_type const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="906.9" y="357" width="0.1" height="15.0" fill="rgb(226,62,24)" rx="2" ry="2" />
<text  x="909.85" y="367.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="856.6" y="325" width="0.1" height="15.0" fill="rgb(209,55,33)" rx="2" ry="2" />
<text  x="859.56" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (9 samples, 0.02%)</title><rect x="1055.9" y="325" width="0.2" height="15.0" fill="rgb(238,127,20)" rx="2" ry="2" />
<text  x="1058.89" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="944.1" y="357" width="0.8" height="15.0" fill="rgb(244,208,15)" rx="2" ry="2" />
<text  x="947.10" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (26 samples, 0.05%)</title><rect x="957.8" y="357" width="0.7" height="15.0" fill="rgb(244,74,46)" rx="2" ry="2" />
<text  x="960.81" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (8 samples, 0.02%)</title><rect x="714.5" y="421" width="0.2" height="15.0" fill="rgb(208,173,37)" rx="2" ry="2" />
<text  x="717.47" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="942.4" y="405" width="0.2" height="15.0" fill="rgb(247,128,27)" rx="2" ry="2" />
<text  x="945.41" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (15 samples, 0.03%)</title><rect x="815.4" y="213" width="0.4" height="15.0" fill="rgb(241,91,15)" rx="2" ry="2" />
<text  x="818.40" y="223.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (19 samples, 0.04%)</title><rect x="1122.3" y="421" width="0.4" height="15.0" fill="rgb(232,61,2)" rx="2" ry="2" />
<text  x="1125.25" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (36 samples, 0.08%)</title><rect x="800.2" y="165" width="0.9" height="15.0" fill="rgb(214,196,27)" rx="2" ry="2" />
<text  x="803.25" y="175.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (15 samples, 0.03%)</title><rect x="1042.6" y="245" width="0.3" height="15.0" fill="rgb(219,86,34)" rx="2" ry="2" />
<text  x="1045.57" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (23 samples, 0.05%)</title><rect x="809.3" y="85" width="0.6" height="15.0" fill="rgb(228,146,14)" rx="2" ry="2" />
<text  x="812.35" y="95.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (20 samples, 0.04%)</title><rect x="499.8" y="277" width="0.5" height="15.0" fill="rgb(223,178,35)" rx="2" ry="2" />
<text  x="502.84" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (29 samples, 0.06%)</title><rect x="1021.2" y="197" width="0.7" height="15.0" fill="rgb(218,110,10)" rx="2" ry="2" />
<text  x="1024.22" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="427.6" y="389" width="0.2" height="15.0" fill="rgb(233,28,32)" rx="2" ry="2" />
<text  x="430.55" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (414 samples, 0.87%)</title><rect x="671.0" y="501" width="10.3" height="15.0" fill="rgb(245,138,13)" rx="2" ry="2" />
<text  x="674.00" y="511.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (482 samples, 1.01%)</title><rect x="681.3" y="501" width="11.9" height="15.0" fill="rgb(220,52,6)" rx="2" ry="2" />
<text  x="684.26" y="511.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="856.4" y="325" width="0.2" height="15.0" fill="rgb(236,149,0)" rx="2" ry="2" />
<text  x="859.39" y="335.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="501.7" y="245" width="0.1" height="15.0" fill="rgb(226,16,25)" rx="2" ry="2" />
<text  x="504.67" y="255.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (8 samples, 0.02%)</title><rect x="433.2" y="357" width="0.2" height="15.0" fill="rgb(208,2,45)" rx="2" ry="2" />
<text  x="436.23" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (66 samples, 0.14%)</title><rect x="18.6" y="325" width="1.6" height="15.0" fill="rgb(254,161,15)" rx="2" ry="2" />
<text  x="21.60" y="335.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (5 samples, 0.01%)</title><rect x="881.9" y="453" width="0.2" height="15.0" fill="rgb(218,88,4)" rx="2" ry="2" />
<text  x="884.93" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (12 samples, 0.03%)</title><rect x="1029.6" y="165" width="0.3" height="15.0" fill="rgb(229,27,13)" rx="2" ry="2" />
<text  x="1032.63" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="1064.2" y="261" width="0.2" height="15.0" fill="rgb(223,16,37)" rx="2" ry="2" />
<text  x="1067.25" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (14 samples, 0.03%)</title><rect x="445.3" y="261" width="0.4" height="15.0" fill="rgb(251,40,9)" rx="2" ry="2" />
<text  x="448.31" y="271.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="767.7" y="293" width="0.2" height="15.0" fill="rgb(235,23,33)" rx="2" ry="2" />
<text  x="770.69" y="303.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (13 samples, 0.03%)</title><rect x="513.8" y="213" width="0.3" height="15.0" fill="rgb(229,229,20)" rx="2" ry="2" />
<text  x="516.78" y="223.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (11 samples, 0.02%)</title><rect x="218.7" y="133" width="0.2" height="15.0" fill="rgb(232,111,41)" rx="2" ry="2" />
<text  x="221.65" y="143.5" ></text>
</g>
<g >
<title>__start_context (14 samples, 0.03%)</title><rect x="24.9" y="597" width="0.3" height="15.0" fill="rgb(206,195,10)" rx="2" ry="2" />
<text  x="27.85" y="607.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (192 samples, 0.40%)</title><rect x="758.3" y="421" width="4.7" height="15.0" fill="rgb(246,223,32)" rx="2" ry="2" />
<text  x="761.29" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (47 samples, 0.10%)</title><rect x="270.3" y="357" width="1.1" height="15.0" fill="rgb(239,206,35)" rx="2" ry="2" />
<text  x="273.26" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="854.3" y="405" width="0.1" height="15.0" fill="rgb(249,138,52)" rx="2" ry="2" />
<text  x="857.26" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (20 samples, 0.04%)</title><rect x="718.4" y="453" width="0.5" height="15.0" fill="rgb(229,139,42)" rx="2" ry="2" />
<text  x="721.41" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (27 samples, 0.06%)</title><rect x="561.3" y="309" width="0.7" height="15.0" fill="rgb(206,123,35)" rx="2" ry="2" />
<text  x="564.29" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="556.1" y="421" width="0.1" height="15.0" fill="rgb(217,44,11)" rx="2" ry="2" />
<text  x="559.11" y="431.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (28 samples, 0.06%)</title><rect x="396.9" y="213" width="0.7" height="15.0" fill="rgb(244,18,11)" rx="2" ry="2" />
<text  x="399.90" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%)</title><rect x="570.3" y="277" width="0.4" height="15.0" fill="rgb(232,11,8)" rx="2" ry="2" />
<text  x="573.29" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (52 samples, 0.11%)</title><rect x="447.3" y="229" width="1.3" height="15.0" fill="rgb(241,70,37)" rx="2" ry="2" />
<text  x="450.27" y="239.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (11 samples, 0.02%)</title><rect x="810.6" y="149" width="0.3" height="15.0" fill="rgb(225,79,52)" rx="2" ry="2" />
<text  x="813.59" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="278.1" y="293" width="0.2" height="15.0" fill="rgb(244,95,42)" rx="2" ry="2" />
<text  x="281.07" y="303.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,154 samples, 10.83%)</title><rect x="730.2" y="453" width="127.8" height="15.0" fill="rgb(226,83,51)" rx="2" ry="2" />
<text  x="733.17" y="463.5" >single_node_cql_..</text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="397.7" y="229" width="0.2" height="15.0" fill="rgb(226,24,32)" rx="2" ry="2" />
<text  x="400.70" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (24 samples, 0.05%)</title><rect x="353.7" y="149" width="0.6" height="15.0" fill="rgb(245,164,50)" rx="2" ry="2" />
<text  x="356.70" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="1169.9" y="453" width="0.4" height="15.0" fill="rgb(241,115,45)" rx="2" ry="2" />
<text  x="1172.89" y="463.5" ></text>
</g>
<g >
<title>operator new (56 samples, 0.12%)</title><rect x="447.2" y="245" width="1.4" height="15.0" fill="rgb(207,31,22)" rx="2" ry="2" />
<text  x="450.17" y="255.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (49 samples, 0.10%)</title><rect x="843.3" y="389" width="1.2" height="15.0" fill="rgb(238,105,20)" rx="2" ry="2" />
<text  x="846.32" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (13 samples, 0.03%)</title><rect x="825.8" y="277" width="0.4" height="15.0" fill="rgb(230,12,35)" rx="2" ry="2" />
<text  x="828.84" y="287.5" ></text>
</g>
<g >
<title>sstring_hash::operator (11 samples, 0.02%)</title><rect x="850.4" y="389" width="0.3" height="15.0" fill="rgb(226,200,42)" rx="2" ry="2" />
<text  x="853.41" y="399.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.03%)</title><rect x="49.6" y="501" width="0.3" height="15.0" fill="rgb(243,98,9)" rx="2" ry="2" />
<text  x="52.55" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (18 samples, 0.04%)</title><rect x="246.0" y="213" width="0.4" height="15.0" fill="rgb(218,13,17)" rx="2" ry="2" />
<text  x="248.98" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (6 samples, 0.01%)</title><rect x="231.8" y="213" width="0.2" height="15.0" fill="rgb(219,27,40)" rx="2" ry="2" />
<text  x="234.85" y="223.5" ></text>
</g>
<g >
<title>database::find_uuid (155 samples, 0.33%)</title><rect x="831.3" y="357" width="3.9" height="15.0" fill="rgb(213,172,12)" rx="2" ry="2" />
<text  x="834.34" y="367.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (65 samples, 0.14%)</title><rect x="294.7" y="277" width="1.6" height="15.0" fill="rgb(245,27,30)" rx="2" ry="2" />
<text  x="297.73" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (66 samples, 0.14%)</title><rect x="18.6" y="357" width="1.6" height="15.0" fill="rgb(210,35,34)" rx="2" ry="2" />
<text  x="21.60" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (20 samples, 0.04%)</title><rect x="466.7" y="277" width="0.5" height="15.0" fill="rgb(253,219,2)" rx="2" ry="2" />
<text  x="469.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (39 samples, 0.08%)</title><rect x="594.0" y="421" width="1.0" height="15.0" fill="rgb(251,122,32)" rx="2" ry="2" />
<text  x="597.00" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (569 samples, 1.20%)</title><rect x="1151.6" y="485" width="14.1" height="15.0" fill="rgb(207,23,23)" rx="2" ry="2" />
<text  x="1154.64" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (19 samples, 0.04%)</title><rect x="644.6" y="485" width="0.4" height="15.0" fill="rgb(252,68,50)" rx="2" ry="2" />
<text  x="647.56" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (82 samples, 0.17%)</title><rect x="992.5" y="277" width="2.0" height="15.0" fill="rgb(242,223,10)" rx="2" ry="2" />
<text  x="995.46" y="287.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (5 samples, 0.01%)</title><rect x="549.5" y="389" width="0.1" height="15.0" fill="rgb(226,37,5)" rx="2" ry="2" />
<text  x="552.49" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,723 samples, 12.03%)</title><rect x="121.7" y="325" width="141.9" height="15.0" fill="rgb(228,59,31)" rx="2" ry="2" />
<text  x="124.72" y="335.5" >mutation_reader_me..</text>
</g>
<g >
<title>compact_mutation_state&lt; (128 samples, 0.27%)</title><rect x="302.3" y="245" width="3.2" height="15.0" fill="rgb(235,176,48)" rx="2" ry="2" />
<text  x="305.35" y="255.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (6 samples, 0.01%)</title><rect x="1021.9" y="245" width="0.2" height="15.0" fill="rgb(206,11,22)" rx="2" ry="2" />
<text  x="1024.94" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (15 samples, 0.03%)</title><rect x="1174.6" y="469" width="0.4" height="15.0" fill="rgb(224,117,24)" rx="2" ry="2" />
<text  x="1177.60" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_M_reset (7 samples, 0.01%)</title><rect x="820.9" y="293" width="0.2" height="15.0" fill="rgb(211,54,32)" rx="2" ry="2" />
<text  x="823.88" y="303.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (19 samples, 0.04%)</title><rect x="71.8" y="389" width="0.4" height="15.0" fill="rgb(247,184,22)" rx="2" ry="2" />
<text  x="74.77" y="399.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="639.3" y="485" width="0.4" height="15.0" fill="rgb(229,112,51)" rx="2" ry="2" />
<text  x="642.31" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (15 samples, 0.03%)</title><rect x="691.7" y="453" width="0.3" height="15.0" fill="rgb(250,112,11)" rx="2" ry="2" />
<text  x="694.65" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="911.1" y="293" width="0.1" height="15.0" fill="rgb(223,110,12)" rx="2" ry="2" />
<text  x="914.12" y="303.5" ></text>
</g>
<g >
<title>database::find_column_family (68 samples, 0.14%)</title><rect x="1060.3" y="341" width="1.7" height="15.0" fill="rgb(226,68,35)" rx="2" ry="2" />
<text  x="1063.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (20 samples, 0.04%)</title><rect x="315.4" y="165" width="0.5" height="15.0" fill="rgb(214,222,19)" rx="2" ry="2" />
<text  x="318.39" y="175.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (27 samples, 0.06%)</title><rect x="466.5" y="293" width="0.7" height="15.0" fill="rgb(218,175,38)" rx="2" ry="2" />
<text  x="469.51" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (7 samples, 0.01%)</title><rect x="705.0" y="469" width="0.2" height="15.0" fill="rgb(231,57,10)" rx="2" ry="2" />
<text  x="708.02" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,380 samples, 11.31%)</title><rect x="969.5" y="373" width="133.5" height="15.0" fill="rgb(223,187,19)" rx="2" ry="2" />
<text  x="972.54" y="383.5" >service::storage..</text>
</g>
<g >
<title>mutation_source::make_reader (4,471 samples, 9.40%)</title><rect x="430.5" y="405" width="110.9" height="15.0" fill="rgb(208,214,8)" rx="2" ry="2" />
<text  x="433.53" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>schema::column_at (17 samples, 0.04%)</title><rect x="211.8" y="117" width="0.4" height="15.0" fill="rgb(215,105,17)" rx="2" ry="2" />
<text  x="214.81" y="127.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (7 samples, 0.01%)</title><rect x="1068.7" y="341" width="0.1" height="15.0" fill="rgb(228,37,31)" rx="2" ry="2" />
<text  x="1071.66" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (10 samples, 0.02%)</title><rect x="242.1" y="213" width="0.3" height="15.0" fill="rgb(219,102,34)" rx="2" ry="2" />
<text  x="245.11" y="223.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%)</title><rect x="1173.2" y="405" width="0.3" height="15.0" fill="rgb(217,8,2)" rx="2" ry="2" />
<text  x="1176.21" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (7 samples, 0.01%)</title><rect x="890.7" y="421" width="0.2" height="15.0" fill="rgb(241,8,23)" rx="2" ry="2" />
<text  x="893.71" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (5 samples, 0.01%)</title><rect x="450.5" y="277" width="0.2" height="15.0" fill="rgb(206,157,48)" rx="2" ry="2" />
<text  x="453.54" y="287.5" ></text>
</g>
<g >
<title>operator delete (39 samples, 0.08%)</title><rect x="36.9" y="469" width="1.0" height="15.0" fill="rgb(208,160,26)" rx="2" ry="2" />
<text  x="39.93" y="479.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="677.1" y="469" width="0.4" height="15.0" fill="rgb(250,214,26)" rx="2" ry="2" />
<text  x="680.10" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (31 samples, 0.07%)</title><rect x="947.4" y="341" width="0.8" height="15.0" fill="rgb(238,7,34)" rx="2" ry="2" />
<text  x="950.45" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (8 samples, 0.02%)</title><rect x="212.5" y="165" width="0.2" height="15.0" fill="rgb(206,196,8)" rx="2" ry="2" />
<text  x="215.48" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (26 samples, 0.05%)</title><rect x="1168.2" y="469" width="0.6" height="15.0" fill="rgb(240,162,0)" rx="2" ry="2" />
<text  x="1171.15" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (11 samples, 0.02%)</title><rect x="625.2" y="373" width="0.3" height="15.0" fill="rgb(244,18,5)" rx="2" ry="2" />
<text  x="628.20" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (28 samples, 0.06%)</title><rect x="734.8" y="325" width="0.7" height="15.0" fill="rgb(221,193,23)" rx="2" ry="2" />
<text  x="737.83" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::stats (34 samples, 0.07%)</title><rect x="492.0" y="309" width="0.8" height="15.0" fill="rgb(224,157,29)" rx="2" ry="2" />
<text  x="494.98" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="1050.9" y="229" width="1.8" height="15.0" fill="rgb(209,41,28)" rx="2" ry="2" />
<text  x="1053.88" y="239.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="624.3" y="373" width="0.8" height="15.0" fill="rgb(207,107,30)" rx="2" ry="2" />
<text  x="627.30" y="383.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (188 samples, 0.40%)</title><rect x="710.9" y="453" width="4.7" height="15.0" fill="rgb(207,44,18)" rx="2" ry="2" />
<text  x="713.95" y="463.5" ></text>
</g>
<g >
<title>seastar::sprint&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (7 samples, 0.01%)</title><rect x="17.9" y="517" width="0.2" height="15.0" fill="rgb(251,166,17)" rx="2" ry="2" />
<text  x="20.91" y="527.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (119 samples, 0.25%)</title><rect x="854.6" y="389" width="2.9" height="15.0" fill="rgb(230,74,8)" rx="2" ry="2" />
<text  x="857.55" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="234.3" y="245" width="0.4" height="15.0" fill="rgb(210,6,17)" rx="2" ry="2" />
<text  x="237.35" y="255.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="426.2" y="373" width="0.5" height="15.0" fill="rgb(226,206,53)" rx="2" ry="2" />
<text  x="429.19" y="383.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (5 samples, 0.01%)</title><rect x="220.1" y="149" width="0.1" height="15.0" fill="rgb(234,117,45)" rx="2" ry="2" />
<text  x="223.12" y="159.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (9 samples, 0.02%)</title><rect x="195.8" y="85" width="0.2" height="15.0" fill="rgb(249,26,49)" rx="2" ry="2" />
<text  x="198.79" y="95.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1137.9" y="469" width="0.7" height="15.0" fill="rgb(248,17,22)" rx="2" ry="2" />
<text  x="1140.90" y="479.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="1065.3" y="261" width="0.2" height="15.0" fill="rgb(218,213,37)" rx="2" ry="2" />
<text  x="1068.29" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="947.9" y="309" width="0.3" height="15.0" fill="rgb(212,174,4)" rx="2" ry="2" />
<text  x="950.92" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (7 samples, 0.01%)</title><rect x="411.3" y="213" width="0.2" height="15.0" fill="rgb(251,68,36)" rx="2" ry="2" />
<text  x="414.33" y="223.5" ></text>
</g>
<g >
<title>operator delete (29 samples, 0.06%)</title><rect x="33.7" y="485" width="0.7" height="15.0" fill="rgb(230,65,35)" rx="2" ry="2" />
<text  x="36.66" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,784 samples, 7.95%)</title><rect x="305.5" y="245" width="93.9" height="15.0" fill="rgb(219,223,20)" rx="2" ry="2" />
<text  x="308.52" y="255.5" >flat_mutati..</text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (43 samples, 0.09%)</title><rect x="929.6" y="373" width="1.1" height="15.0" fill="rgb(217,124,54)" rx="2" ry="2" />
<text  x="932.59" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (6 samples, 0.01%)</title><rect x="870.3" y="469" width="0.1" height="15.0" fill="rgb(218,26,43)" rx="2" ry="2" />
<text  x="873.30" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="762.2" y="373" width="0.4" height="15.0" fill="rgb(241,130,35)" rx="2" ry="2" />
<text  x="765.23" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (7 samples, 0.01%)</title><rect x="629.0" y="437" width="0.2" height="15.0" fill="rgb(246,133,23)" rx="2" ry="2" />
<text  x="632.04" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="648.3" y="485" width="0.1" height="15.0" fill="rgb(251,169,34)" rx="2" ry="2" />
<text  x="651.26" y="495.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (61 samples, 0.13%)</title><rect x="423.9" y="357" width="1.5" height="15.0" fill="rgb(216,203,34)" rx="2" ry="2" />
<text  x="426.86" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (34 samples, 0.07%)</title><rect x="1096.2" y="277" width="0.8" height="15.0" fill="rgb(225,203,46)" rx="2" ry="2" />
<text  x="1099.19" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (11 samples, 0.02%)</title><rect x="1136.8" y="437" width="0.3" height="15.0" fill="rgb(208,48,20)" rx="2" ry="2" />
<text  x="1139.78" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (736 samples, 1.55%)</title><rect x="894.3" y="389" width="18.2" height="15.0" fill="rgb(215,150,33)" rx="2" ry="2" />
<text  x="897.26" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (463 samples, 0.97%)</title><rect x="66.9" y="437" width="11.5" height="15.0" fill="rgb(206,79,47)" rx="2" ry="2" />
<text  x="69.94" y="447.5" ></text>
</g>
<g >
<title>operator delete (28 samples, 0.06%)</title><rect x="596.8" y="405" width="0.7" height="15.0" fill="rgb(212,125,51)" rx="2" ry="2" />
<text  x="599.78" y="415.5" ></text>
</g>
<g >
<title>main (46,434 samples, 97.58%)</title><rect x="25.3" y="613" width="1151.5" height="15.0" fill="rgb(223,102,32)" rx="2" ry="2" />
<text  x="28.33" y="623.5" >main</text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (14 samples, 0.03%)</title><rect x="649.8" y="485" width="0.3" height="15.0" fill="rgb(252,163,45)" rx="2" ry="2" />
<text  x="652.79" y="495.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (24 samples, 0.05%)</title><rect x="1048.1" y="277" width="0.6" height="15.0" fill="rgb(250,185,36)" rx="2" ry="2" />
<text  x="1051.13" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (42 samples, 0.09%)</title><rect x="100.7" y="405" width="1.0" height="15.0" fill="rgb(231,86,19)" rx="2" ry="2" />
<text  x="103.66" y="415.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (20 samples, 0.04%)</title><rect x="74.8" y="405" width="0.5" height="15.0" fill="rgb(224,68,1)" rx="2" ry="2" />
<text  x="77.85" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="495.8" y="309" width="0.2" height="15.0" fill="rgb(240,204,6)" rx="2" ry="2" />
<text  x="498.80" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (28 samples, 0.06%)</title><rect x="873.5" y="469" width="0.7" height="15.0" fill="rgb(233,72,12)" rx="2" ry="2" />
<text  x="876.50" y="479.5" ></text>
</g>
<g >
<title>posix_memalign (60 samples, 0.13%)</title><rect x="199.4" y="85" width="1.5" height="15.0" fill="rgb(208,210,8)" rx="2" ry="2" />
<text  x="202.43" y="95.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (9 samples, 0.02%)</title><rect x="994.3" y="245" width="0.2" height="15.0" fill="rgb(228,21,32)" rx="2" ry="2" />
<text  x="997.27" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (22 samples, 0.05%)</title><rect x="319.2" y="181" width="0.5" height="15.0" fill="rgb(214,156,54)" rx="2" ry="2" />
<text  x="322.16" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (12 samples, 0.03%)</title><rect x="428.7" y="405" width="0.3" height="15.0" fill="rgb(212,45,44)" rx="2" ry="2" />
<text  x="431.72" y="415.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (22 samples, 0.05%)</title><rect x="720.3" y="501" width="0.5" height="15.0" fill="rgb(251,185,31)" rx="2" ry="2" />
<text  x="723.27" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="814.4" y="229" width="0.3" height="15.0" fill="rgb(207,222,19)" rx="2" ry="2" />
<text  x="817.43" y="239.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (11 samples, 0.02%)</title><rect x="519.6" y="325" width="0.3" height="15.0" fill="rgb(206,73,27)" rx="2" ry="2" />
<text  x="522.60" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (9 samples, 0.02%)</title><rect x="248.8" y="229" width="0.3" height="15.0" fill="rgb(234,223,8)" rx="2" ry="2" />
<text  x="251.83" y="239.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::from_string_visitor&gt; (6 samples, 0.01%)</title><rect x="23.5" y="357" width="0.1" height="15.0" fill="rgb(230,186,20)" rx="2" ry="2" />
<text  x="26.49" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="433.6" y="357" width="0.2" height="15.0" fill="rgb(242,84,35)" rx="2" ry="2" />
<text  x="436.55" y="367.5" ></text>
</g>
<g >
<title>all (47,584 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(231,86,21)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (58 samples, 0.12%)</title><rect x="21.0" y="341" width="1.4" height="15.0" fill="rgb(253,103,49)" rx="2" ry="2" />
<text  x="24.01" y="351.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (69 samples, 0.15%)</title><rect x="1130.0" y="405" width="1.7" height="15.0" fill="rgb(244,40,38)" rx="2" ry="2" />
<text  x="1133.04" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (201 samples, 0.42%)</title><rect x="18.4" y="405" width="5.0" height="15.0" fill="rgb(229,157,32)" rx="2" ry="2" />
<text  x="21.43" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (148 samples, 0.31%)</title><rect x="831.5" y="341" width="3.7" height="15.0" fill="rgb(236,222,51)" rx="2" ry="2" />
<text  x="834.49" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (13 samples, 0.03%)</title><rect x="524.8" y="325" width="0.3" height="15.0" fill="rgb(218,77,37)" rx="2" ry="2" />
<text  x="527.79" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (7 samples, 0.01%)</title><rect x="721.9" y="501" width="0.1" height="15.0" fill="rgb(247,107,9)" rx="2" ry="2" />
<text  x="724.86" y="511.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="490.7" y="309" width="0.3" height="15.0" fill="rgb(205,153,26)" rx="2" ry="2" />
<text  x="493.71" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::result_set, std::default_delete&lt;cql3::result_set&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="661.9" y="437" width="0.1" height="15.0" fill="rgb(241,163,37)" rx="2" ry="2" />
<text  x="664.87" y="447.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (5 samples, 0.01%)</title><rect x="284.0" y="325" width="0.1" height="15.0" fill="rgb(243,63,42)" rx="2" ry="2" />
<text  x="287.02" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (5 samples, 0.01%)</title><rect x="1174.6" y="357" width="0.2" height="15.0" fill="rgb(217,76,41)" rx="2" ry="2" />
<text  x="1177.65" y="367.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="897.2" y="293" width="0.1" height="15.0" fill="rgb(224,37,42)" rx="2" ry="2" />
<text  x="900.21" y="303.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (65 samples, 0.14%)</title><rect x="508.3" y="229" width="1.7" height="15.0" fill="rgb(221,31,20)" rx="2" ry="2" />
<text  x="511.35" y="239.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt; (7 samples, 0.01%)</title><rect x="811.8" y="261" width="0.2" height="15.0" fill="rgb(219,196,1)" rx="2" ry="2" />
<text  x="814.80" y="271.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.15%)</title><rect x="1070.4" y="325" width="1.7" height="15.0" fill="rgb(247,192,31)" rx="2" ry="2" />
<text  x="1073.42" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (442 samples, 0.93%)</title><rect x="745.5" y="389" width="11.0" height="15.0" fill="rgb(250,110,52)" rx="2" ry="2" />
<text  x="748.52" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="396.6" y="213" width="0.3" height="15.0" fill="rgb(205,102,43)" rx="2" ry="2" />
<text  x="399.58" y="223.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (33 samples, 0.07%)</title><rect x="627.5" y="405" width="0.8" height="15.0" fill="rgb(237,14,40)" rx="2" ry="2" />
<text  x="630.53" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (38 samples, 0.08%)</title><rect x="311.4" y="165" width="0.9" height="15.0" fill="rgb(216,137,52)" rx="2" ry="2" />
<text  x="314.37" y="175.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="1115.0" y="341" width="1.7" height="15.0" fill="rgb(253,207,9)" rx="2" ry="2" />
<text  x="1117.96" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (34 samples, 0.07%)</title><rect x="629.7" y="405" width="0.8" height="15.0" fill="rgb(236,36,23)" rx="2" ry="2" />
<text  x="632.68" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="938.4" y="405" width="0.2" height="15.0" fill="rgb(234,220,47)" rx="2" ry="2" />
<text  x="941.45" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (26 samples, 0.05%)</title><rect x="275.5" y="293" width="0.6" height="15.0" fill="rgb(227,64,36)" rx="2" ry="2" />
<text  x="278.49" y="303.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (91 samples, 0.19%)</title><rect x="607.8" y="421" width="2.3" height="15.0" fill="rgb(238,164,27)" rx="2" ry="2" />
<text  x="610.81" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (32 samples, 0.07%)</title><rect x="994.5" y="277" width="0.8" height="15.0" fill="rgb(227,201,4)" rx="2" ry="2" />
<text  x="997.49" y="287.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (13 samples, 0.03%)</title><rect x="559.5" y="341" width="0.3" height="15.0" fill="rgb(210,21,1)" rx="2" ry="2" />
<text  x="562.50" y="351.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (21 samples, 0.04%)</title><rect x="214.4" y="165" width="0.6" height="15.0" fill="rgb(237,12,13)" rx="2" ry="2" />
<text  x="217.44" y="175.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="592.0" y="389" width="0.5" height="15.0" fill="rgb(223,130,44)" rx="2" ry="2" />
<text  x="595.01" y="399.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (8 samples, 0.02%)</title><rect x="525.4" y="341" width="0.2" height="15.0" fill="rgb(239,197,18)" rx="2" ry="2" />
<text  x="528.38" y="351.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (15 samples, 0.03%)</title><rect x="682.2" y="485" width="0.3" height="15.0" fill="rgb(216,180,21)" rx="2" ry="2" />
<text  x="685.16" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="827.7" y="357" width="0.2" height="15.0" fill="rgb(254,208,51)" rx="2" ry="2" />
<text  x="830.72" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (12 samples, 0.03%)</title><rect x="590.7" y="373" width="0.3" height="15.0" fill="rgb(235,174,52)" rx="2" ry="2" />
<text  x="593.70" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (11 samples, 0.02%)</title><rect x="23.5" y="389" width="0.2" height="15.0" fill="rgb(246,28,22)" rx="2" ry="2" />
<text  x="26.47" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (41 samples, 0.09%)</title><rect x="220.8" y="181" width="1.0" height="15.0" fill="rgb(243,80,39)" rx="2" ry="2" />
<text  x="223.76" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (31 samples, 0.07%)</title><rect x="539.4" y="341" width="0.7" height="15.0" fill="rgb(216,214,26)" rx="2" ry="2" />
<text  x="542.37" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (381 samples, 0.80%)</title><rect x="274.0" y="325" width="9.4" height="15.0" fill="rgb(209,110,53)" rx="2" ry="2" />
<text  x="276.95" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (6 samples, 0.01%)</title><rect x="151.9" y="245" width="0.1" height="15.0" fill="rgb(216,62,44)" rx="2" ry="2" />
<text  x="154.87" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (7 samples, 0.01%)</title><rect x="810.4" y="69" width="0.1" height="15.0" fill="rgb(213,154,37)" rx="2" ry="2" />
<text  x="813.36" y="79.5" ></text>
</g>
<g >
<title>[unknown] (615 samples, 1.29%)</title><rect x="10.0" y="629" width="15.3" height="15.0" fill="rgb(245,220,43)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="844.3" y="357" width="0.2" height="15.0" fill="rgb(224,128,30)" rx="2" ry="2" />
<text  x="847.29" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (8 samples, 0.02%)</title><rect x="611.2" y="437" width="0.2" height="15.0" fill="rgb(206,101,21)" rx="2" ry="2" />
<text  x="614.21" y="447.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (21 samples, 0.04%)</title><rect x="642.2" y="469" width="0.5" height="15.0" fill="rgb(250,152,28)" rx="2" ry="2" />
<text  x="645.16" y="479.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (5 samples, 0.01%)</title><rect x="603.2" y="405" width="0.1" height="15.0" fill="rgb(234,133,37)" rx="2" ry="2" />
<text  x="606.22" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (7 samples, 0.01%)</title><rect x="858.0" y="453" width="0.1" height="15.0" fill="rgb(253,27,43)" rx="2" ry="2" />
<text  x="860.98" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (26 samples, 0.05%)</title><rect x="535.9" y="245" width="0.7" height="15.0" fill="rgb(228,37,46)" rx="2" ry="2" />
<text  x="538.92" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,417 samples, 2.98%)</title><rect x="557.7" y="421" width="35.2" height="15.0" fill="rgb(243,228,36)" rx="2" ry="2" />
<text  x="560.72" y="431.5" >st..</text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="1158.1" y="389" width="0.7" height="15.0" fill="rgb(254,26,1)" rx="2" ry="2" />
<text  x="1161.06" y="399.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (40 samples, 0.08%)</title><rect x="230.0" y="229" width="1.0" height="15.0" fill="rgb(211,120,32)" rx="2" ry="2" />
<text  x="233.03" y="239.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (22 samples, 0.05%)</title><rect x="69.3" y="405" width="0.6" height="15.0" fill="rgb(237,104,22)" rx="2" ry="2" />
<text  x="72.32" y="415.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (36 samples, 0.08%)</title><rect x="1052.8" y="245" width="0.9" height="15.0" fill="rgb(230,104,50)" rx="2" ry="2" />
<text  x="1055.79" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (9 samples, 0.02%)</title><rect x="265.4" y="309" width="0.2" height="15.0" fill="rgb(251,201,21)" rx="2" ry="2" />
<text  x="268.37" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (17 samples, 0.04%)</title><rect x="216.8" y="149" width="0.4" height="15.0" fill="rgb(205,209,21)" rx="2" ry="2" />
<text  x="219.82" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (21 samples, 0.04%)</title><rect x="115.6" y="373" width="0.6" height="15.0" fill="rgb(252,196,51)" rx="2" ry="2" />
<text  x="118.64" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (51 samples, 0.11%)</title><rect x="76.6" y="373" width="1.3" height="15.0" fill="rgb(231,16,5)" rx="2" ry="2" />
<text  x="79.61" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (30 samples, 0.06%)</title><rect x="464.5" y="309" width="0.8" height="15.0" fill="rgb(227,93,0)" rx="2" ry="2" />
<text  x="467.53" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (119 samples, 0.25%)</title><rect x="639.7" y="485" width="3.0" height="15.0" fill="rgb(243,46,29)" rx="2" ry="2" />
<text  x="642.73" y="495.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (101 samples, 0.21%)</title><rect x="364.6" y="165" width="2.5" height="15.0" fill="rgb(245,188,1)" rx="2" ry="2" />
<text  x="367.64" y="175.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (37 samples, 0.08%)</title><rect x="330.7" y="165" width="1.0" height="15.0" fill="rgb(243,203,42)" rx="2" ry="2" />
<text  x="333.74" y="175.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1001.2" y="245" width="0.2" height="15.0" fill="rgb(221,93,52)" rx="2" ry="2" />
<text  x="1004.21" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (416 samples, 0.87%)</title><rect x="152.0" y="245" width="10.3" height="15.0" fill="rgb(209,26,2)" rx="2" ry="2" />
<text  x="155.02" y="255.5" ></text>
</g>
<g >
<title>sstring_hash::operator (33 samples, 0.07%)</title><rect x="849.5" y="373" width="0.9" height="15.0" fill="rgb(217,111,54)" rx="2" ry="2" />
<text  x="852.54" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="749.3" y="357" width="0.3" height="15.0" fill="rgb(236,8,47)" rx="2" ry="2" />
<text  x="752.31" y="367.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (135 samples, 0.28%)</title><rect x="859.6" y="405" width="3.3" height="15.0" fill="rgb(219,81,31)" rx="2" ry="2" />
<text  x="862.56" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (9 samples, 0.02%)</title><rect x="439.0" y="341" width="0.3" height="15.0" fill="rgb(228,31,0)" rx="2" ry="2" />
<text  x="442.03" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="519.1" y="325" width="0.2" height="15.0" fill="rgb(223,211,11)" rx="2" ry="2" />
<text  x="522.08" y="335.5" ></text>
</g>
<g >
<title>compound_type&lt; (101 samples, 0.21%)</title><rect x="932.6" y="357" width="2.5" height="15.0" fill="rgb(230,17,14)" rx="2" ry="2" />
<text  x="935.57" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (19 samples, 0.04%)</title><rect x="646.9" y="485" width="0.5" height="15.0" fill="rgb(220,56,53)" rx="2" ry="2" />
<text  x="649.92" y="495.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="904.4" y="277" width="0.2" height="15.0" fill="rgb(238,222,39)" rx="2" ry="2" />
<text  x="907.37" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (42 samples, 0.09%)</title><rect x="618.9" y="437" width="1.0" height="15.0" fill="rgb(220,131,36)" rx="2" ry="2" />
<text  x="621.87" y="447.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (9 samples, 0.02%)</title><rect x="26.2" y="517" width="0.2" height="15.0" fill="rgb(211,100,30)" rx="2" ry="2" />
<text  x="29.22" y="527.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (16 samples, 0.03%)</title><rect x="692.5" y="485" width="0.4" height="15.0" fill="rgb(252,177,7)" rx="2" ry="2" />
<text  x="695.50" y="495.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (9 samples, 0.02%)</title><rect x="922.5" y="357" width="0.2" height="15.0" fill="rgb(220,137,15)" rx="2" ry="2" />
<text  x="925.53" y="367.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="1106.3" y="405" width="0.1" height="15.0" fill="rgb(218,120,12)" rx="2" ry="2" />
<text  x="1109.26" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (85 samples, 0.18%)</title><rect x="813.7" y="261" width="2.1" height="15.0" fill="rgb(229,20,24)" rx="2" ry="2" />
<text  x="816.69" y="271.5" ></text>
</g>
<g >
<title>make_combined_reader (835 samples, 1.75%)</title><rect x="439.6" y="341" width="20.7" height="15.0" fill="rgb(244,167,10)" rx="2" ry="2" />
<text  x="442.63" y="351.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (18 samples, 0.04%)</title><rect x="825.1" y="293" width="0.5" height="15.0" fill="rgb(246,160,19)" rx="2" ry="2" />
<text  x="828.12" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (19 samples, 0.04%)</title><rect x="841.8" y="405" width="0.4" height="15.0" fill="rgb(245,228,39)" rx="2" ry="2" />
<text  x="844.76" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (122 samples, 0.26%)</title><rect x="446.0" y="277" width="3.1" height="15.0" fill="rgb(241,182,38)" rx="2" ry="2" />
<text  x="449.03" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,434 samples, 97.58%)</title><rect x="25.3" y="533" width="1151.5" height="15.0" fill="rgb(205,183,1)" rx="2" ry="2" />
<text  x="28.33" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>operator new (54 samples, 0.11%)</title><rect x="850.8" y="421" width="1.3" height="15.0" fill="rgb(233,214,15)" rx="2" ry="2" />
<text  x="853.78" y="431.5" ></text>
</g>
<g >
<title>table::make_reader (4,335 samples, 9.11%)</title><rect x="433.9" y="357" width="107.5" height="15.0" fill="rgb(230,7,12)" rx="2" ry="2" />
<text  x="436.85" y="367.5" >table::make_r..</text>
</g>
<g >
<title>auth::get_permissions (1,186 samples, 2.49%)</title><rect x="789.3" y="309" width="29.4" height="15.0" fill="rgb(249,163,5)" rx="2" ry="2" />
<text  x="792.26" y="319.5" >au..</text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (12 samples, 0.03%)</title><rect x="124.5" y="309" width="0.3" height="15.0" fill="rgb(241,106,14)" rx="2" ry="2" />
<text  x="127.47" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (5 samples, 0.01%)</title><rect x="872.9" y="325" width="0.1" height="15.0" fill="rgb(247,66,10)" rx="2" ry="2" />
<text  x="875.86" y="335.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="671.1" y="485" width="0.9" height="15.0" fill="rgb(224,209,3)" rx="2" ry="2" />
<text  x="674.15" y="495.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (19 samples, 0.04%)</title><rect x="585.3" y="357" width="0.5" height="15.0" fill="rgb(243,152,21)" rx="2" ry="2" />
<text  x="588.34" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="510.0" y="229" width="0.1" height="15.0" fill="rgb(245,189,26)" rx="2" ry="2" />
<text  x="512.96" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (28 samples, 0.06%)</title><rect x="1053.0" y="229" width="0.7" height="15.0" fill="rgb(208,186,45)" rx="2" ry="2" />
<text  x="1055.96" y="239.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="419.7" y="277" width="0.3" height="15.0" fill="rgb(217,29,41)" rx="2" ry="2" />
<text  x="422.74" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (279 samples, 0.59%)</title><rect x="1110.4" y="405" width="6.9" height="15.0" fill="rgb(240,96,21)" rx="2" ry="2" />
<text  x="1113.42" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (5 samples, 0.01%)</title><rect x="850.2" y="357" width="0.2" height="15.0" fill="rgb(238,95,48)" rx="2" ry="2" />
<text  x="853.24" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (13 samples, 0.03%)</title><rect x="562.4" y="325" width="0.4" height="15.0" fill="rgb(231,81,7)" rx="2" ry="2" />
<text  x="565.43" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="543.0" y="405" width="0.1" height="15.0" fill="rgb(209,35,23)" rx="2" ry="2" />
<text  x="545.99" y="415.5" ></text>
</g>
<g >
<title>operator delete (53 samples, 0.11%)</title><rect x="939.9" y="405" width="1.3" height="15.0" fill="rgb(216,139,46)" rx="2" ry="2" />
<text  x="942.93" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (7 samples, 0.01%)</title><rect x="453.7" y="309" width="0.2" height="15.0" fill="rgb(235,51,5)" rx="2" ry="2" />
<text  x="456.69" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="762.9" y="405" width="0.1" height="15.0" fill="rgb(205,116,8)" rx="2" ry="2" />
<text  x="765.85" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (6 samples, 0.01%)</title><rect x="318.7" y="181" width="0.1" height="15.0" fill="rgb(239,197,17)" rx="2" ry="2" />
<text  x="321.69" y="191.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (20 samples, 0.04%)</title><rect x="441.9" y="309" width="0.5" height="15.0" fill="rgb(206,190,41)" rx="2" ry="2" />
<text  x="444.91" y="319.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,556 samples, 3.27%)</title><rect x="783.0" y="341" width="38.6" height="15.0" fill="rgb(247,24,33)" rx="2" ry="2" />
<text  x="786.04" y="351.5" >ser..</text>
</g>
<g >
<title>seastar::memory::allocate (70 samples, 0.15%)</title><rect x="1039.6" y="197" width="1.8" height="15.0" fill="rgb(213,122,28)" rx="2" ry="2" />
<text  x="1042.62" y="207.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (12 samples, 0.03%)</title><rect x="424.3" y="341" width="0.3" height="15.0" fill="rgb(227,160,6)" rx="2" ry="2" />
<text  x="427.28" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="906.2" y="325" width="0.1" height="15.0" fill="rgb(246,85,2)" rx="2" ry="2" />
<text  x="909.21" y="335.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES29_S2C_ (12 samples, 0.03%)</title><rect x="957.2" y="373" width="0.3" height="15.0" fill="rgb(210,21,33)" rx="2" ry="2" />
<text  x="960.24" y="383.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (90 samples, 0.19%)</title><rect x="367.1" y="165" width="2.3" height="15.0" fill="rgb(226,166,54)" rx="2" ry="2" />
<text  x="370.14" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::iterator_at (5 samples, 0.01%)</title><rect x="768.6" y="341" width="0.2" height="15.0" fill="rgb(214,34,44)" rx="2" ry="2" />
<text  x="771.63" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="455.9" y="261" width="0.3" height="15.0" fill="rgb(234,132,38)" rx="2" ry="2" />
<text  x="458.92" y="271.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (9 samples, 0.02%)</title><rect x="1138.1" y="245" width="0.2" height="15.0" fill="rgb(233,133,6)" rx="2" ry="2" />
<text  x="1141.12" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (10 samples, 0.02%)</title><rect x="262.8" y="309" width="0.2" height="15.0" fill="rgb(215,86,19)" rx="2" ry="2" />
<text  x="265.77" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (7 samples, 0.01%)</title><rect x="263.5" y="309" width="0.1" height="15.0" fill="rgb(218,95,53)" rx="2" ry="2" />
<text  x="266.46" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="678.4" y="437" width="0.2" height="15.0" fill="rgb(227,172,27)" rx="2" ry="2" />
<text  x="681.44" y="447.5" ></text>
</g>
<g >
<title>sstring_hash::operator (14 samples, 0.03%)</title><rect x="1065.8" y="309" width="0.4" height="15.0" fill="rgb(221,152,9)" rx="2" ry="2" />
<text  x="1068.81" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (26 samples, 0.05%)</title><rect x="374.6" y="165" width="0.6" height="15.0" fill="rgb(225,130,12)" rx="2" ry="2" />
<text  x="377.56" y="175.5" ></text>
</g>
<g >
<title>query::result::builder::builder (154 samples, 0.32%)</title><rect x="602.5" y="421" width="3.8" height="15.0" fill="rgb(213,147,41)" rx="2" ry="2" />
<text  x="605.46" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (7 samples, 0.01%)</title><rect x="984.4" y="341" width="0.1" height="15.0" fill="rgb(216,13,41)" rx="2" ry="2" />
<text  x="987.37" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (11 samples, 0.02%)</title><rect x="672.7" y="469" width="0.2" height="15.0" fill="rgb(254,56,9)" rx="2" ry="2" />
<text  x="675.66" y="479.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (13 samples, 0.03%)</title><rect x="97.0" y="437" width="0.3" height="15.0" fill="rgb(248,153,0)" rx="2" ry="2" />
<text  x="99.97" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (36 samples, 0.08%)</title><rect x="774.7" y="341" width="0.9" height="15.0" fill="rgb(210,52,42)" rx="2" ry="2" />
<text  x="777.68" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (46 samples, 0.10%)</title><rect x="803.1" y="149" width="1.2" height="15.0" fill="rgb(241,210,0)" rx="2" ry="2" />
<text  x="806.15" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (342 samples, 0.72%)</title><rect x="254.3" y="309" width="8.5" height="15.0" fill="rgb(233,112,41)" rx="2" ry="2" />
<text  x="257.29" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (11 samples, 0.02%)</title><rect x="1064.0" y="261" width="0.2" height="15.0" fill="rgb(236,41,47)" rx="2" ry="2" />
<text  x="1066.98" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (6 samples, 0.01%)</title><rect x="1042.1" y="245" width="0.1" height="15.0" fill="rgb(245,71,30)" rx="2" ry="2" />
<text  x="1045.08" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (32 samples, 0.07%)</title><rect x="777.3" y="373" width="0.8" height="15.0" fill="rgb(208,116,53)" rx="2" ry="2" />
<text  x="780.31" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="936.6" y="357" width="0.2" height="15.0" fill="rgb(221,134,51)" rx="2" ry="2" />
<text  x="939.61" y="367.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (34 samples, 0.07%)</title><rect x="1088.5" y="277" width="0.8" height="15.0" fill="rgb(231,110,30)" rx="2" ry="2" />
<text  x="1091.45" y="287.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (20 samples, 0.04%)</title><rect x="755.6" y="261" width="0.5" height="15.0" fill="rgb(238,229,1)" rx="2" ry="2" />
<text  x="758.58" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (68 samples, 0.14%)</title><rect x="502.0" y="261" width="1.7" height="15.0" fill="rgb(215,179,13)" rx="2" ry="2" />
<text  x="505.00" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="259.6" y="261" width="0.2" height="15.0" fill="rgb(218,52,3)" rx="2" ry="2" />
<text  x="262.62" y="271.5" ></text>
</g>
<g >
<title>operator delete (84 samples, 0.18%)</title><rect x="568.6" y="293" width="2.1" height="15.0" fill="rgb(211,214,36)" rx="2" ry="2" />
<text  x="571.58" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (78 samples, 0.16%)</title><rect x="387.9" y="149" width="1.9" height="15.0" fill="rgb(224,14,33)" rx="2" ry="2" />
<text  x="390.85" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (35 samples, 0.07%)</title><rect x="975.7" y="325" width="0.9" height="15.0" fill="rgb(236,152,12)" rx="2" ry="2" />
<text  x="978.72" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="235.6" y="229" width="0.2" height="15.0" fill="rgb(252,63,34)" rx="2" ry="2" />
<text  x="238.64" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (36 samples, 0.08%)</title><rect x="812.8" y="229" width="0.9" height="15.0" fill="rgb(240,75,0)" rx="2" ry="2" />
<text  x="815.77" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (23 samples, 0.05%)</title><rect x="619.3" y="405" width="0.6" height="15.0" fill="rgb(231,228,4)" rx="2" ry="2" />
<text  x="622.34" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="641.4" y="469" width="0.7" height="15.0" fill="rgb(215,111,30)" rx="2" ry="2" />
<text  x="644.41" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (13 samples, 0.03%)</title><rect x="1116.4" y="325" width="0.3" height="15.0" fill="rgb(254,79,41)" rx="2" ry="2" />
<text  x="1119.40" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (5 samples, 0.01%)</title><rect x="735.5" y="341" width="0.2" height="15.0" fill="rgb(210,170,26)" rx="2" ry="2" />
<text  x="738.55" y="351.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="751.7" y="277" width="0.1" height="15.0" fill="rgb(223,151,33)" rx="2" ry="2" />
<text  x="754.69" y="287.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (13 samples, 0.03%)</title><rect x="1138.9" y="213" width="0.4" height="15.0" fill="rgb(249,11,46)" rx="2" ry="2" />
<text  x="1141.94" y="223.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (66 samples, 0.14%)</title><rect x="18.6" y="373" width="1.6" height="15.0" fill="rgb(212,72,9)" rx="2" ry="2" />
<text  x="21.60" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="674.6" y="485" width="0.7" height="15.0" fill="rgb(240,22,50)" rx="2" ry="2" />
<text  x="677.59" y="495.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="424.6" y="341" width="0.7" height="15.0" fill="rgb(214,206,30)" rx="2" ry="2" />
<text  x="427.58" y="351.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (22 samples, 0.05%)</title><rect x="243.1" y="181" width="0.6" height="15.0" fill="rgb(228,111,21)" rx="2" ry="2" />
<text  x="246.13" y="191.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="295.7" y="245" width="0.4" height="15.0" fill="rgb(208,28,51)" rx="2" ry="2" />
<text  x="298.73" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_unused (26 samples, 0.05%)</title><rect x="66.3" y="437" width="0.6" height="15.0" fill="rgb(229,89,39)" rx="2" ry="2" />
<text  x="69.29" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,674 samples, 11.92%)</title><rect x="963.5" y="389" width="140.7" height="15.0" fill="rgb(218,164,36)" rx="2" ry="2" />
<text  x="966.52" y="399.5" >service::storage_..</text>
</g>
<g >
<title>memtable::make_flat_reader (2,617 samples, 5.50%)</title><rect x="460.5" y="341" width="64.9" height="15.0" fill="rgb(210,197,20)" rx="2" ry="2" />
<text  x="463.49" y="351.5" >memtabl..</text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (9 samples, 0.02%)</title><rect x="165.5" y="229" width="0.2" height="15.0" fill="rgb(224,117,25)" rx="2" ry="2" />
<text  x="168.51" y="239.5" ></text>
</g>
<g >
<title>create_partitions (278 samples, 0.58%)</title><rect x="17.9" y="533" width="6.9" height="15.0" fill="rgb(219,49,23)" rx="2" ry="2" />
<text  x="20.89" y="543.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (20 samples, 0.04%)</title><rect x="735.0" y="309" width="0.5" height="15.0" fill="rgb(245,64,18)" rx="2" ry="2" />
<text  x="738.03" y="319.5" ></text>
</g>
</g>
</svg>
