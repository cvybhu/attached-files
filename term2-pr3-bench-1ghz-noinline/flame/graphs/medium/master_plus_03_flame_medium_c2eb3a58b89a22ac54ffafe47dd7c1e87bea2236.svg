<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="710" onload="init(evt)" viewBox="0 0 1200 710" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="710.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="693" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="693" > </text>
<g id="frames">
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="778.4" y="245" width="0.4" height="15.0" fill="rgb(212,6,23)" rx="2" ry="2" />
<text  x="781.44" y="255.5" ></text>
</g>
<g >
<title>seastar::gate::enter (9 samples, 0.02%)</title><rect x="1043.9" y="229" width="0.2" height="15.0" fill="rgb(245,40,42)" rx="2" ry="2" />
<text  x="1046.90" y="239.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::merge_to (7 samples, 0.01%)</title><rect x="21.6" y="389" width="0.2" height="15.0" fill="rgb(238,180,0)" rx="2" ry="2" />
<text  x="24.64" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (50 samples, 0.11%)</title><rect x="672.3" y="469" width="1.2" height="15.0" fill="rgb(253,188,15)" rx="2" ry="2" />
<text  x="675.28" y="479.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="16.1" y="261" width="0.1" height="15.0" fill="rgb(237,174,43)" rx="2" ry="2" />
<text  x="19.08" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (13 samples, 0.03%)</title><rect x="936.6" y="405" width="0.3" height="15.0" fill="rgb(244,26,18)" rx="2" ry="2" />
<text  x="939.59" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (10 samples, 0.02%)</title><rect x="596.1" y="437" width="0.2" height="15.0" fill="rgb(226,27,14)" rx="2" ry="2" />
<text  x="599.06" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="36.6" y="405" width="0.2" height="15.0" fill="rgb(226,147,5)" rx="2" ry="2" />
<text  x="39.63" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (22 samples, 0.05%)</title><rect x="539.4" y="309" width="0.5" height="15.0" fill="rgb(220,115,2)" rx="2" ry="2" />
<text  x="542.36" y="319.5" ></text>
</g>
<g >
<title>make_combined_reader (940 samples, 1.99%)</title><rect x="427.0" y="341" width="23.5" height="15.0" fill="rgb(218,43,40)" rx="2" ry="2" />
<text  x="430.02" y="351.5" >m..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (5 samples, 0.01%)</title><rect x="865.9" y="373" width="0.1" height="15.0" fill="rgb(243,184,23)" rx="2" ry="2" />
<text  x="868.85" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (53 samples, 0.11%)</title><rect x="852.0" y="341" width="1.3" height="15.0" fill="rgb(224,113,38)" rx="2" ry="2" />
<text  x="854.99" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (127 samples, 0.27%)</title><rect x="170.7" y="101" width="3.2" height="15.0" fill="rgb(253,35,24)" rx="2" ry="2" />
<text  x="173.74" y="111.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (55 samples, 0.12%)</title><rect x="666.2" y="453" width="1.3" height="15.0" fill="rgb(210,164,3)" rx="2" ry="2" />
<text  x="669.17" y="463.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (17 samples, 0.04%)</title><rect x="719.0" y="293" width="0.4" height="15.0" fill="rgb(212,143,29)" rx="2" ry="2" />
<text  x="721.98" y="303.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (16 samples, 0.03%)</title><rect x="480.0" y="325" width="0.4" height="15.0" fill="rgb(221,150,16)" rx="2" ry="2" />
<text  x="483.03" y="335.5" ></text>
</g>
<g >
<title>query_result_builder::consume_end_of_partition (71 samples, 0.15%)</title><rect x="293.2" y="229" width="1.7" height="15.0" fill="rgb(219,48,24)" rx="2" ry="2" />
<text  x="296.16" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (123 samples, 0.26%)</title><rect x="92.2" y="421" width="3.1" height="15.0" fill="rgb(214,115,27)" rx="2" ry="2" />
<text  x="95.20" y="431.5" ></text>
</g>
<g >
<title>compound_type&lt; (9 samples, 0.02%)</title><rect x="535.2" y="341" width="0.3" height="15.0" fill="rgb(223,70,13)" rx="2" ry="2" />
<text  x="538.23" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="630.9" y="469" width="0.2" height="15.0" fill="rgb(222,127,13)" rx="2" ry="2" />
<text  x="633.94" y="479.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;bool, bool  (36 samples, 0.08%)</title><rect x="1099.9" y="277" width="0.9" height="15.0" fill="rgb(252,48,17)" rx="2" ry="2" />
<text  x="1102.87" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (28 samples, 0.06%)</title><rect x="624.1" y="469" width="0.7" height="15.0" fill="rgb(228,24,10)" rx="2" ry="2" />
<text  x="627.13" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%)</title><rect x="1054.2" y="213" width="0.5" height="15.0" fill="rgb(253,62,20)" rx="2" ry="2" />
<text  x="1057.22" y="223.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (4,633 samples, 9.79%)</title><rect x="415.9" y="421" width="115.5" height="15.0" fill="rgb(217,97,25)" rx="2" ry="2" />
<text  x="418.90" y="431.5" >query::querier..</text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (14 samples, 0.03%)</title><rect x="211.4" y="149" width="0.3" height="15.0" fill="rgb(222,58,20)" rx="2" ry="2" />
<text  x="214.35" y="159.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (27 samples, 0.06%)</title><rect x="402.6" y="277" width="0.7" height="15.0" fill="rgb(216,82,52)" rx="2" ry="2" />
<text  x="405.61" y="287.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="1112.3" y="389" width="0.3" height="15.0" fill="rgb(221,2,34)" rx="2" ry="2" />
<text  x="1115.26" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (13 samples, 0.03%)</title><rect x="1055.3" y="197" width="0.3" height="15.0" fill="rgb(243,221,31)" rx="2" ry="2" />
<text  x="1058.29" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (27 samples, 0.06%)</title><rect x="389.9" y="229" width="0.7" height="15.0" fill="rgb(232,114,44)" rx="2" ry="2" />
<text  x="392.89" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (52 samples, 0.11%)</title><rect x="1111.9" y="405" width="1.3" height="15.0" fill="rgb(225,87,43)" rx="2" ry="2" />
<text  x="1114.89" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (80 samples, 0.17%)</title><rect x="1002.3" y="245" width="2.0" height="15.0" fill="rgb(236,64,37)" rx="2" ry="2" />
<text  x="1005.28" y="255.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="605.9" y="373" width="0.8" height="15.0" fill="rgb(239,229,39)" rx="2" ry="2" />
<text  x="608.88" y="383.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (182 samples, 0.38%)</title><rect x="462.5" y="277" width="4.6" height="15.0" fill="rgb(251,167,17)" rx="2" ry="2" />
<text  x="465.52" y="287.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.01%)</title><rect x="502.8" y="213" width="0.1" height="15.0" fill="rgb(243,83,20)" rx="2" ry="2" />
<text  x="505.79" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="673.4" y="421" width="0.1" height="15.0" fill="rgb(242,28,35)" rx="2" ry="2" />
<text  x="676.38" y="431.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (22 samples, 0.05%)</title><rect x="205.3" y="165" width="0.6" height="15.0" fill="rgb(238,73,21)" rx="2" ry="2" />
<text  x="208.35" y="175.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (20 samples, 0.04%)</title><rect x="1120.0" y="389" width="0.5" height="15.0" fill="rgb(250,213,45)" rx="2" ry="2" />
<text  x="1123.01" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::execute_operations_for_key (18 samples, 0.04%)</title><rect x="866.1" y="341" width="0.4" height="15.0" fill="rgb(229,128,30)" rx="2" ry="2" />
<text  x="869.05" y="351.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="986.0" y="341" width="0.2" height="15.0" fill="rgb(207,151,20)" rx="2" ry="2" />
<text  x="988.98" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt;::then_impl&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (84 samples, 0.18%)</title><rect x="730.0" y="373" width="2.1" height="15.0" fill="rgb(235,227,15)" rx="2" ry="2" />
<text  x="732.97" y="383.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (36 samples, 0.08%)</title><rect x="279.4" y="373" width="0.9" height="15.0" fill="rgb(231,142,53)" rx="2" ry="2" />
<text  x="282.42" y="383.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (15 samples, 0.03%)</title><rect x="1118.3" y="357" width="0.4" height="15.0" fill="rgb(221,205,46)" rx="2" ry="2" />
<text  x="1121.32" y="367.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digest_read_resolver (167 samples, 0.35%)</title><rect x="993.4" y="309" width="4.1" height="15.0" fill="rgb(209,213,19)" rx="2" ry="2" />
<text  x="996.38" y="319.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (77 samples, 0.16%)</title><rect x="518.4" y="309" width="1.9" height="15.0" fill="rgb(252,220,19)" rx="2" ry="2" />
<text  x="521.42" y="319.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (19 samples, 0.04%)</title><rect x="885.5" y="341" width="0.4" height="15.0" fill="rgb(244,142,46)" rx="2" ry="2" />
<text  x="888.45" y="351.5" ></text>
</g>
<g >
<title>auth::resource::resource (65 samples, 0.14%)</title><rect x="763.1" y="373" width="1.6" height="15.0" fill="rgb(227,16,20)" rx="2" ry="2" />
<text  x="766.08" y="383.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (10 samples, 0.02%)</title><rect x="453.4" y="325" width="0.2" height="15.0" fill="rgb(207,179,2)" rx="2" ry="2" />
<text  x="456.37" y="335.5" ></text>
</g>
<g >
<title>service::client_state::validate_login (10 samples, 0.02%)</title><rect x="810.8" y="357" width="0.3" height="15.0" fill="rgb(253,75,26)" rx="2" ry="2" />
<text  x="813.83" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (139 samples, 0.29%)</title><rect x="238.7" y="245" width="3.5" height="15.0" fill="rgb(238,16,50)" rx="2" ry="2" />
<text  x="241.73" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (7 samples, 0.01%)</title><rect x="1040.1" y="229" width="0.2" height="15.0" fill="rgb(246,180,35)" rx="2" ry="2" />
<text  x="1043.08" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="438.2" y="261" width="0.2" height="15.0" fill="rgb(224,188,14)" rx="2" ry="2" />
<text  x="441.24" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (14 samples, 0.03%)</title><rect x="908.7" y="357" width="0.4" height="15.0" fill="rgb(240,181,45)" rx="2" ry="2" />
<text  x="911.71" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (5 samples, 0.01%)</title><rect x="134.4" y="261" width="0.1" height="15.0" fill="rgb(221,166,47)" rx="2" ry="2" />
<text  x="137.36" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::reserve (28 samples, 0.06%)</title><rect x="1157.1" y="453" width="0.7" height="15.0" fill="rgb(223,111,9)" rx="2" ry="2" />
<text  x="1160.14" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (50 samples, 0.11%)</title><rect x="798.8" y="117" width="1.2" height="15.0" fill="rgb(215,75,4)" rx="2" ry="2" />
<text  x="801.79" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (22 samples, 0.05%)</title><rect x="802.2" y="213" width="0.5" height="15.0" fill="rgb(241,142,42)" rx="2" ry="2" />
<text  x="805.15" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="781.2" y="229" width="0.6" height="15.0" fill="rgb(249,172,4)" rx="2" ry="2" />
<text  x="784.18" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="573.0" y="373" width="0.2" height="15.0" fill="rgb(211,7,18)" rx="2" ry="2" />
<text  x="576.00" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (9 samples, 0.02%)</title><rect x="358.4" y="197" width="0.3" height="15.0" fill="rgb(244,23,26)" rx="2" ry="2" />
<text  x="361.43" y="207.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (11 samples, 0.02%)</title><rect x="695.6" y="405" width="0.3" height="15.0" fill="rgb(221,117,42)" rx="2" ry="2" />
<text  x="698.62" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;, query::consume_page&lt; (28 samples, 0.06%)</title><rect x="674.8" y="501" width="0.7" height="15.0" fill="rgb(244,208,17)" rx="2" ry="2" />
<text  x="677.85" y="511.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (7 samples, 0.01%)</title><rect x="686.8" y="453" width="0.1" height="15.0" fill="rgb(241,61,10)" rx="2" ry="2" />
<text  x="689.76" y="463.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair (51 samples, 0.11%)</title><rect x="789.4" y="213" width="1.3" height="15.0" fill="rgb(206,80,3)" rx="2" ry="2" />
<text  x="792.39" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,831 samples, 10.21%)</title><rect x="283.3" y="309" width="120.4" height="15.0" fill="rgb(230,24,17)" rx="2" ry="2" />
<text  x="286.28" y="319.5" >std::__invoke_i..</text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="673.7" y="485" width="0.4" height="15.0" fill="rgb(216,164,36)" rx="2" ry="2" />
<text  x="676.70" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="1004.7" y="245" width="0.2" height="15.0" fill="rgb(206,75,7)" rx="2" ry="2" />
<text  x="1007.65" y="255.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (5 samples, 0.01%)</title><rect x="218.1" y="181" width="0.1" height="15.0" fill="rgb(215,25,20)" rx="2" ry="2" />
<text  x="221.11" y="191.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (27 samples, 0.06%)</title><rect x="1153.5" y="485" width="0.7" height="15.0" fill="rgb(206,156,10)" rx="2" ry="2" />
<text  x="1156.55" y="495.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (17 samples, 0.04%)</title><rect x="221.7" y="229" width="0.4" height="15.0" fill="rgb(239,60,2)" rx="2" ry="2" />
<text  x="224.65" y="239.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;dht::ring_position&gt;::wrapping_interval (48 samples, 0.10%)</title><rect x="929.3" y="357" width="1.2" height="15.0" fill="rgb(229,193,53)" rx="2" ry="2" />
<text  x="932.33" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="408.0" y="341" width="0.1" height="15.0" fill="rgb(221,6,13)" rx="2" ry="2" />
<text  x="410.97" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::result&gt;::dispose (109 samples, 0.23%)</title><rect x="35.7" y="453" width="2.7" height="15.0" fill="rgb(227,178,31)" rx="2" ry="2" />
<text  x="38.73" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (10 samples, 0.02%)</title><rect x="74.3" y="453" width="0.3" height="15.0" fill="rgb(209,49,21)" rx="2" ry="2" />
<text  x="77.33" y="463.5" ></text>
</g>
<g >
<title>auth::get_permissions (1,208 samples, 2.55%)</title><rect x="777.2" y="309" width="30.1" height="15.0" fill="rgb(210,217,8)" rx="2" ry="2" />
<text  x="780.22" y="319.5" >au..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (19 samples, 0.04%)</title><rect x="1119.4" y="373" width="0.5" height="15.0" fill="rgb(222,35,54)" rx="2" ry="2" />
<text  x="1122.42" y="383.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (159 samples, 0.34%)</title><rect x="214.5" y="197" width="4.0" height="15.0" fill="rgb(254,98,34)" rx="2" ry="2" />
<text  x="217.55" y="207.5" ></text>
</g>
<g >
<title>row_tombstone::apply (26 samples, 0.05%)</title><rect x="382.7" y="213" width="0.6" height="15.0" fill="rgb(240,127,31)" rx="2" ry="2" />
<text  x="385.69" y="223.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="1064.7" y="309" width="0.2" height="15.0" fill="rgb(228,81,35)" rx="2" ry="2" />
<text  x="1067.66" y="319.5" ></text>
</g>
<g >
<title>query::clustering_position_tracker&lt;query_result_builder&gt;::consume_new_partition (8 samples, 0.02%)</title><rect x="298.4" y="197" width="0.2" height="15.0" fill="rgb(228,197,12)" rx="2" ry="2" />
<text  x="301.37" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (28 samples, 0.06%)</title><rect x="1110.2" y="389" width="0.7" height="15.0" fill="rgb(247,189,8)" rx="2" ry="2" />
<text  x="1113.19" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (75 samples, 0.16%)</title><rect x="480.8" y="325" width="1.8" height="15.0" fill="rgb(229,46,19)" rx="2" ry="2" />
<text  x="483.77" y="335.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (194 samples, 0.41%)</title><rect x="975.4" y="341" width="4.8" height="15.0" fill="rgb(249,194,41)" rx="2" ry="2" />
<text  x="978.38" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (156 samples, 0.33%)</title><rect x="1014.0" y="261" width="3.8" height="15.0" fill="rgb(228,21,19)" rx="2" ry="2" />
<text  x="1016.95" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (18 samples, 0.04%)</title><rect x="132.8" y="261" width="0.5" height="15.0" fill="rgb(223,61,16)" rx="2" ry="2" />
<text  x="135.82" y="271.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (10 samples, 0.02%)</title><rect x="504.6" y="245" width="0.2" height="15.0" fill="rgb(218,83,2)" rx="2" ry="2" />
<text  x="507.58" y="255.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,311 samples, 9.11%)</title><rect x="135.7" y="293" width="107.4" height="15.0" fill="rgb(209,96,17)" rx="2" ry="2" />
<text  x="138.66" y="303.5" >seastar::do_u..</text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="275.1" y="357" width="0.5" height="15.0" fill="rgb(239,179,25)" rx="2" ry="2" />
<text  x="278.13" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (66 samples, 0.14%)</title><rect x="773.7" y="309" width="1.6" height="15.0" fill="rgb(223,9,17)" rx="2" ry="2" />
<text  x="776.68" y="319.5" ></text>
</g>
<g >
<title>__tls_init (5 samples, 0.01%)</title><rect x="136.6" y="261" width="0.1" height="15.0" fill="rgb(249,143,9)" rx="2" ry="2" />
<text  x="139.58" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;boost::intrusive::detail::null_disposer, boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (12 samples, 0.03%)</title><rect x="553.3" y="293" width="0.3" height="15.0" fill="rgb(244,175,9)" rx="2" ry="2" />
<text  x="556.25" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="408.2" y="357" width="0.1" height="15.0" fill="rgb(227,21,12)" rx="2" ry="2" />
<text  x="411.20" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::do_flush (29 samples, 0.06%)</title><rect x="1144.2" y="485" width="0.7" height="15.0" fill="rgb(219,60,35)" rx="2" ry="2" />
<text  x="1147.17" y="495.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::range_tombstone_accumulator (161 samples, 0.34%)</title><rect x="535.9" y="389" width="4.1" height="15.0" fill="rgb(223,47,7)" rx="2" ry="2" />
<text  x="538.95" y="399.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (8 samples, 0.02%)</title><rect x="913.7" y="389" width="0.2" height="15.0" fill="rgb(209,28,2)" rx="2" ry="2" />
<text  x="916.70" y="399.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (24 samples, 0.05%)</title><rect x="1035.1" y="133" width="0.6" height="15.0" fill="rgb(254,180,4)" rx="2" ry="2" />
<text  x="1038.10" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (114 samples, 0.24%)</title><rect x="838.1" y="389" width="2.8" height="15.0" fill="rgb(219,220,54)" rx="2" ry="2" />
<text  x="841.05" y="399.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (10 samples, 0.02%)</title><rect x="512.9" y="325" width="0.2" height="15.0" fill="rgb(227,89,27)" rx="2" ry="2" />
<text  x="515.89" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="524.7" y="245" width="0.4" height="15.0" fill="rgb(235,97,18)" rx="2" ry="2" />
<text  x="527.70" y="255.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="22.2" y="453" width="0.2" height="15.0" fill="rgb(233,108,36)" rx="2" ry="2" />
<text  x="25.17" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (105 samples, 0.22%)</title><rect x="786.1" y="197" width="2.7" height="15.0" fill="rgb(207,63,3)" rx="2" ry="2" />
<text  x="789.15" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (10 samples, 0.02%)</title><rect x="855.2" y="405" width="0.2" height="15.0" fill="rgb(213,170,50)" rx="2" ry="2" />
<text  x="858.16" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::awaiter (7 samples, 0.01%)</title><rect x="982.7" y="357" width="0.2" height="15.0" fill="rgb(210,209,39)" rx="2" ry="2" />
<text  x="985.71" y="367.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (20 samples, 0.04%)</title><rect x="737.5" y="293" width="0.5" height="15.0" fill="rgb(232,59,13)" rx="2" ry="2" />
<text  x="740.45" y="303.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (8 samples, 0.02%)</title><rect x="250.7" y="309" width="0.2" height="15.0" fill="rgb(211,149,32)" rx="2" ry="2" />
<text  x="253.70" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_transfer (27 samples, 0.06%)</title><rect x="129.3" y="245" width="0.7" height="15.0" fill="rgb(217,158,54)" rx="2" ry="2" />
<text  x="132.33" y="255.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (705 samples, 1.49%)</title><rect x="117.5" y="309" width="17.6" height="15.0" fill="rgb(225,84,1)" rx="2" ry="2" />
<text  x="120.51" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::pop_clustering_row (33 samples, 0.07%)</title><rect x="211.9" y="181" width="0.8" height="15.0" fill="rgb(244,48,44)" rx="2" ry="2" />
<text  x="214.88" y="191.5" ></text>
</g>
<g >
<title>cql3::prepared_statements_cache::find (330 samples, 0.70%)</title><rect x="715.1" y="437" width="8.2" height="15.0" fill="rgb(217,129,24)" rx="2" ry="2" />
<text  x="718.11" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (197 samples, 0.42%)</title><rect x="717.4" y="373" width="4.9" height="15.0" fill="rgb(212,49,42)" rx="2" ry="2" />
<text  x="720.38" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="497.7" y="181" width="0.7" height="15.0" fill="rgb(212,12,10)" rx="2" ry="2" />
<text  x="500.65" y="191.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (7 samples, 0.01%)</title><rect x="1036.0" y="165" width="0.2" height="15.0" fill="rgb(253,90,12)" rx="2" ry="2" />
<text  x="1039.02" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::~vector (19 samples, 0.04%)</title><rect x="941.4" y="405" width="0.5" height="15.0" fill="rgb(222,32,44)" rx="2" ry="2" />
<text  x="944.40" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (51 samples, 0.11%)</title><rect x="806.1" y="293" width="1.2" height="15.0" fill="rgb(217,130,36)" rx="2" ry="2" />
<text  x="809.07" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (21 samples, 0.04%)</title><rect x="674.9" y="389" width="0.6" height="15.0" fill="rgb(230,48,29)" rx="2" ry="2" />
<text  x="677.95" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::create_write_response_handler (9 samples, 0.02%)</title><rect x="1144.7" y="229" width="0.2" height="15.0" fill="rgb(246,204,25)" rx="2" ry="2" />
<text  x="1147.67" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (475 samples, 1.00%)</title><rect x="889.4" y="309" width="11.9" height="15.0" fill="rgb(231,224,22)" rx="2" ry="2" />
<text  x="892.42" y="319.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="897.5" y="229" width="0.1" height="15.0" fill="rgb(237,175,21)" rx="2" ry="2" />
<text  x="900.47" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (10 samples, 0.02%)</title><rect x="695.0" y="421" width="0.3" height="15.0" fill="rgb(208,201,7)" rx="2" ry="2" />
<text  x="698.04" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (30 samples, 0.06%)</title><rect x="742.3" y="389" width="0.8" height="15.0" fill="rgb(218,119,14)" rx="2" ry="2" />
<text  x="745.31" y="399.5" ></text>
</g>
<g >
<title>database::query (5 samples, 0.01%)</title><rect x="22.9" y="517" width="0.1" height="15.0" fill="rgb(219,220,25)" rx="2" ry="2" />
<text  x="25.91" y="527.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (44 samples, 0.09%)</title><rect x="275.6" y="389" width="1.1" height="15.0" fill="rgb(227,199,44)" rx="2" ry="2" />
<text  x="278.55" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::reserve (42 samples, 0.09%)</title><rect x="527.9" y="341" width="1.1" height="15.0" fill="rgb(208,179,38)" rx="2" ry="2" />
<text  x="530.95" y="351.5" ></text>
</g>
<g >
<title>std::__remove_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (73 samples, 0.15%)</title><rect x="1098.9" y="309" width="1.9" height="15.0" fill="rgb(219,122,19)" rx="2" ry="2" />
<text  x="1101.95" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="409.5" y="357" width="0.1" height="15.0" fill="rgb(244,91,10)" rx="2" ry="2" />
<text  x="412.47" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (23 samples, 0.05%)</title><rect x="1129.1" y="421" width="0.6" height="15.0" fill="rgb(236,129,33)" rx="2" ry="2" />
<text  x="1132.12" y="431.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::clear (62 samples, 0.13%)</title><rect x="360.1" y="197" width="1.5" height="15.0" fill="rgb(254,65,50)" rx="2" ry="2" />
<text  x="363.05" y="207.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (15 samples, 0.03%)</title><rect x="1138.8" y="405" width="0.4" height="15.0" fill="rgb(247,55,28)" rx="2" ry="2" />
<text  x="1141.81" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::take_value (19 samples, 0.04%)</title><rect x="52.1" y="469" width="0.4" height="15.0" fill="rgb(247,41,2)" rx="2" ry="2" />
<text  x="55.06" y="479.5" ></text>
</g>
<g >
<title>std::construct_at&lt;mutation_fragment, schema const&amp;, reader_permit&amp;, partition_start&gt; (175 samples, 0.37%)</title><rect x="498.6" y="229" width="4.4" height="15.0" fill="rgb(207,75,29)" rx="2" ry="2" />
<text  x="501.62" y="239.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="691.0" y="453" width="0.2" height="15.0" fill="rgb(246,37,38)" rx="2" ry="2" />
<text  x="694.03" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%)</title><rect x="396.0" y="197" width="0.4" height="15.0" fill="rgb(228,220,12)" rx="2" ry="2" />
<text  x="398.98" y="207.5" ></text>
</g>
<g >
<title>cql3::expr::possible_lhs_values (1,229 samples, 2.60%)</title><rect x="883.3" y="405" width="30.6" height="15.0" fill="rgb(223,158,6)" rx="2" ry="2" />
<text  x="886.26" y="415.5" >cq..</text>
</g>
<g >
<title>operator delete (58 samples, 0.12%)</title><rect x="569.6" y="341" width="1.4" height="15.0" fill="rgb(237,204,48)" rx="2" ry="2" />
<text  x="572.58" y="351.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (25 samples, 0.05%)</title><rect x="300.4" y="165" width="0.6" height="15.0" fill="rgb(223,168,1)" rx="2" ry="2" />
<text  x="303.41" y="175.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10bool_classIN22mutation_reader_merger15needs_merge_tagEEEE9then_implIZNS5_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (26 samples, 0.05%)</title><rect x="121.6" y="277" width="0.7" height="15.0" fill="rgb(248,200,30)" rx="2" ry="2" />
<text  x="124.65" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node_base*&gt;::allocate (5 samples, 0.01%)</title><rect x="1159.9" y="405" width="0.1" height="15.0" fill="rgb(207,157,22)" rx="2" ry="2" />
<text  x="1162.91" y="415.5" ></text>
</g>
<g >
<title>dht::shard_of (20 samples, 0.04%)</title><rect x="1012.2" y="277" width="0.5" height="15.0" fill="rgb(247,63,20)" rx="2" ry="2" />
<text  x="1015.23" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_move_assign (11 samples, 0.02%)</title><rect x="532.3" y="405" width="0.3" height="15.0" fill="rgb(218,71,14)" rx="2" ry="2" />
<text  x="535.33" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1079.6" y="293" width="0.2" height="15.0" fill="rgb(232,185,18)" rx="2" ry="2" />
<text  x="1082.62" y="303.5" ></text>
</g>
<g >
<title>database::shard_of (5 samples, 0.01%)</title><rect x="1144.4" y="181" width="0.1" height="15.0" fill="rgb(228,94,2)" rx="2" ry="2" />
<text  x="1147.37" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (548 samples, 1.16%)</title><rect x="491.3" y="277" width="13.7" height="15.0" fill="rgb(212,188,9)" rx="2" ry="2" />
<text  x="494.34" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (47 samples, 0.10%)</title><rect x="228.5" y="181" width="1.1" height="15.0" fill="rgb(244,93,54)" rx="2" ry="2" />
<text  x="231.46" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::small_vector (27 samples, 0.06%)</title><rect x="446.9" y="261" width="0.7" height="15.0" fill="rgb(214,91,39)" rx="2" ry="2" />
<text  x="449.92" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (5 samples, 0.01%)</title><rect x="232.7" y="197" width="0.1" height="15.0" fill="rgb(236,159,30)" rx="2" ry="2" />
<text  x="235.72" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (9 samples, 0.02%)</title><rect x="1158.9" y="453" width="0.3" height="15.0" fill="rgb(219,102,46)" rx="2" ry="2" />
<text  x="1161.93" y="463.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="146.0" y="181" width="0.7" height="15.0" fill="rgb(209,208,29)" rx="2" ry="2" />
<text  x="149.01" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (8 samples, 0.02%)</title><rect x="261.1" y="341" width="0.2" height="15.0" fill="rgb(215,132,27)" rx="2" ry="2" />
<text  x="264.12" y="351.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (11 samples, 0.02%)</title><rect x="222.4" y="245" width="0.3" height="15.0" fill="rgb(218,7,35)" rx="2" ry="2" />
<text  x="225.42" y="255.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared_with_qo (5,431 samples, 11.48%)</title><rect x="713.6" y="453" width="135.4" height="15.0" fill="rgb(240,192,18)" rx="2" ry="2" />
<text  x="716.64" y="463.5" >single_node_cql_e..</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (11 samples, 0.02%)</title><rect x="621.2" y="469" width="0.3" height="15.0" fill="rgb(210,2,13)" rx="2" ry="2" />
<text  x="624.22" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (14 samples, 0.03%)</title><rect x="413.4" y="373" width="0.3" height="15.0" fill="rgb(247,208,54)" rx="2" ry="2" />
<text  x="416.38" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (160 samples, 0.34%)</title><rect x="1001.2" y="293" width="4.0" height="15.0" fill="rgb(228,173,26)" rx="2" ry="2" />
<text  x="1004.21" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (5 samples, 0.01%)</title><rect x="702.7" y="501" width="0.1" height="15.0" fill="rgb(224,139,52)" rx="2" ry="2" />
<text  x="705.67" y="511.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="1172.1" y="453" width="0.5" height="15.0" fill="rgb(211,171,52)" rx="2" ry="2" />
<text  x="1175.12" y="463.5" ></text>
</g>
<g >
<title>operator new (36 samples, 0.08%)</title><rect x="940.5" y="373" width="0.9" height="15.0" fill="rgb(223,95,33)" rx="2" ry="2" />
<text  x="943.48" y="383.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (5 samples, 0.01%)</title><rect x="683.4" y="437" width="0.1" height="15.0" fill="rgb(231,211,46)" rx="2" ry="2" />
<text  x="686.40" y="447.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (47 samples, 0.10%)</title><rect x="181.2" y="69" width="1.2" height="15.0" fill="rgb(229,186,44)" rx="2" ry="2" />
<text  x="184.24" y="79.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (16 samples, 0.03%)</title><rect x="74.6" y="453" width="0.4" height="15.0" fill="rgb(248,134,37)" rx="2" ry="2" />
<text  x="77.57" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="542.5" y="421" width="0.2" height="15.0" fill="rgb(235,19,17)" rx="2" ry="2" />
<text  x="545.51" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::on_read_resolved (13 samples, 0.03%)</title><rect x="683.2" y="453" width="0.4" height="15.0" fill="rgb(220,110,3)" rx="2" ry="2" />
<text  x="686.25" y="463.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (92 samples, 0.19%)</title><rect x="745.1" y="405" width="2.3" height="15.0" fill="rgb(229,27,22)" rx="2" ry="2" />
<text  x="748.08" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (6 samples, 0.01%)</title><rect x="678.2" y="469" width="0.1" height="15.0" fill="rgb(227,47,19)" rx="2" ry="2" />
<text  x="681.16" y="479.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (18 samples, 0.04%)</title><rect x="592.1" y="405" width="0.4" height="15.0" fill="rgb(237,135,48)" rx="2" ry="2" />
<text  x="595.10" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (51 samples, 0.11%)</title><rect x="832.6" y="389" width="1.3" height="15.0" fill="rgb(246,133,23)" rx="2" ry="2" />
<text  x="835.62" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::statement_restrictions (15 samples, 0.03%)</title><rect x="21.5" y="405" width="0.4" height="15.0" fill="rgb(226,156,16)" rx="2" ry="2" />
<text  x="24.52" y="415.5" ></text>
</g>
<g >
<title>operator delete (93 samples, 0.20%)</title><rect x="88.0" y="437" width="2.3" height="15.0" fill="rgb(247,102,2)" rx="2" ry="2" />
<text  x="90.96" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="881.5" y="405" width="0.2" height="15.0" fill="rgb(218,216,43)" rx="2" ry="2" />
<text  x="884.54" y="415.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (29 samples, 0.06%)</title><rect x="847.0" y="357" width="0.7" height="15.0" fill="rgb(214,228,11)" rx="2" ry="2" />
<text  x="849.96" y="367.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::fillBuffer (70 samples, 0.15%)</title><rect x="16.1" y="325" width="1.7" height="15.0" fill="rgb(235,36,50)" rx="2" ry="2" />
<text  x="19.08" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (17 samples, 0.04%)</title><rect x="927.7" y="389" width="0.4" height="15.0" fill="rgb(213,58,41)" rx="2" ry="2" />
<text  x="930.71" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="442.7" y="277" width="0.3" height="15.0" fill="rgb(211,192,8)" rx="2" ry="2" />
<text  x="445.73" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (42 samples, 0.09%)</title><rect x="747.5" y="389" width="1.0" height="15.0" fill="rgb(254,199,3)" rx="2" ry="2" />
<text  x="750.48" y="399.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::with_value&lt;cql3::raw_value_view::validate (5 samples, 0.01%)</title><rect x="897.7" y="277" width="0.1" height="15.0" fill="rgb(207,188,27)" rx="2" ry="2" />
<text  x="900.72" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (5 samples, 0.01%)</title><rect x="241.9" y="213" width="0.1" height="15.0" fill="rgb(224,131,54)" rx="2" ry="2" />
<text  x="244.90" y="223.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1058.2" y="293" width="0.1" height="15.0" fill="rgb(254,136,15)" rx="2" ry="2" />
<text  x="1061.16" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (6,366 samples, 13.45%)</title><rect x="704.1" y="501" width="158.7" height="15.0" fill="rgb(236,212,26)" rx="2" ry="2" />
<text  x="707.12" y="511.5" >seastar::internal::d..</text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (88 samples, 0.19%)</title><rect x="613.9" y="485" width="2.2" height="15.0" fill="rgb(245,75,29)" rx="2" ry="2" />
<text  x="616.91" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="870.3" y="437" width="0.1" height="15.0" fill="rgb(251,170,17)" rx="2" ry="2" />
<text  x="873.29" y="447.5" ></text>
</g>
<g >
<title>free (16 samples, 0.03%)</title><rect x="36.4" y="421" width="0.4" height="15.0" fill="rgb(209,224,40)" rx="2" ry="2" />
<text  x="39.40" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (5 samples, 0.01%)</title><rect x="265.6" y="309" width="0.1" height="15.0" fill="rgb(238,186,15)" rx="2" ry="2" />
<text  x="268.56" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (14 samples, 0.03%)</title><rect x="318.9" y="165" width="0.4" height="15.0" fill="rgb(222,100,35)" rx="2" ry="2" />
<text  x="321.94" y="175.5" ></text>
</g>
<g >
<title>std::optional&lt;mutation_querier&gt;::emplace&lt;mutation_querier&gt; (50 samples, 0.11%)</title><rect x="308.1" y="181" width="1.3" height="15.0" fill="rgb(225,157,33)" rx="2" ry="2" />
<text  x="311.14" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="513.1" y="325" width="0.3" height="15.0" fill="rgb(236,102,52)" rx="2" ry="2" />
<text  x="516.14" y="335.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (60 samples, 0.13%)</title><rect x="228.1" y="197" width="1.5" height="15.0" fill="rgb(246,33,14)" rx="2" ry="2" />
<text  x="231.13" y="207.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (224 samples, 0.47%)</title><rect x="743.5" y="421" width="5.6" height="15.0" fill="rgb(205,53,36)" rx="2" ry="2" />
<text  x="746.51" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="418.2" y="373" width="0.3" height="15.0" fill="rgb(208,196,49)" rx="2" ry="2" />
<text  x="421.22" y="383.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (23 samples, 0.05%)</title><rect x="181.8" y="53" width="0.6" height="15.0" fill="rgb(225,92,31)" rx="2" ry="2" />
<text  x="184.83" y="63.5" ></text>
</g>
<g >
<title>utils::array_search_gt (12 samples, 0.03%)</title><rect x="467.1" y="277" width="0.3" height="15.0" fill="rgb(211,122,37)" rx="2" ry="2" />
<text  x="470.06" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="967.5" y="373" width="0.1" height="15.0" fill="rgb(215,99,27)" rx="2" ry="2" />
<text  x="970.48" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (17 samples, 0.04%)</title><rect x="1171.3" y="469" width="0.4" height="15.0" fill="rgb(251,138,29)" rx="2" ry="2" />
<text  x="1174.30" y="479.5" ></text>
</g>
<g >
<title>empty_flat_reader::empty_flat_reader (39 samples, 0.08%)</title><rect x="523.7" y="261" width="1.0" height="15.0" fill="rgb(208,148,1)" rx="2" ry="2" />
<text  x="526.68" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="630.0" y="485" width="0.1" height="15.0" fill="rgb(246,2,44)" rx="2" ry="2" />
<text  x="632.99" y="495.5" ></text>
</g>
<g >
<title>std::type_info::operator== (12 samples, 0.03%)</title><rect x="1078.4" y="277" width="0.3" height="15.0" fill="rgb(253,45,52)" rx="2" ry="2" />
<text  x="1081.40" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="1127.8" y="421" width="0.1" height="15.0" fill="rgb(210,57,20)" rx="2" ry="2" />
<text  x="1130.79" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (20 samples, 0.04%)</title><rect x="864.9" y="469" width="0.5" height="15.0" fill="rgb(224,0,7)" rx="2" ry="2" />
<text  x="867.91" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="480.6" y="325" width="0.2" height="15.0" fill="rgb(232,102,41)" rx="2" ry="2" />
<text  x="483.65" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (76 samples, 0.16%)</title><rect x="373.5" y="149" width="1.9" height="15.0" fill="rgb(232,187,47)" rx="2" ry="2" />
<text  x="376.46" y="159.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::operator (42 samples, 0.09%)</title><rect x="796.2" y="133" width="1.0" height="15.0" fill="rgb(219,147,32)" rx="2" ry="2" />
<text  x="799.17" y="143.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIN7seastar10shared_ptrIN4cql34termEEEEER18overloaded_functorIJZNS6_4expr12prepare_termERKNSB_10expressionER8databaseRKNS4_13basic_sstringIcjLj15ELb1EEENS4_13lw_shared_ptrINS6_20column_specificationEEEE3$_0ZNSB_12prepare_termESE_SG_SK_SN_E3$_1ZNSB_12prepare_termESE_SG_SK_SN_E3$_2ZNSB_12prepare_termESE_SG_SK_SN_E3$_3ZNSB_12prepare_termESE_SG_SK_SN_E3$_4ZNSB_12prepare_termESE_SG_SK_SN_E3$_5ZNSB_12prepare_termESE_SG_SK_SN_E3$_6ZNSB_12prepare_termESE_SG_SK_SN_E3$_7ZNSB_12prepare_termESE_SG_SK_SN_E3$_8ZNSB_12prepare_termESE_SG_SK_SN_E3$_9ZNSB_12prepare_termESE_SG_SK_SN_E4$_10ZNSB_12prepare_termESE_SG_SK_SN_E4$_11ZNSB_12prepare_termESE_SG_SK_SN_E4$_12ZNSB_12prepare_termESE_SG_SK_SN_E4$_13ZNSB_12prepare_termESE_SG_SK_SN_E4$_14ZNSB_12prepare_termESE_SG_SK_SN_E4$_15EERSt7variantIJNSB_11conjunctionENSB_15binary_operatorENSB_12column_valueENSB_5tokenENSB_21unresolved_identifierENSB_25column_mutation_attributeENSB_13function_callENSB_4castENSB_15field_selectionENSB_4nullENSB_13bind_variableENSB_16untyped_constantENSB_8constantENSB_17tuple_constructorENSB_22collection_constructorENSB_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm11EEEE14__visit_invokeES15_S1O_ (5 samples, 0.01%)</title><rect x="21.4" y="389" width="0.1" height="15.0" fill="rgb(252,45,54)" rx="2" ry="2" />
<text  x="24.37" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_limit (18 samples, 0.04%)</title><rect x="1113.2" y="421" width="0.4" height="15.0" fill="rgb(225,196,8)" rx="2" ry="2" />
<text  x="1116.18" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (7 samples, 0.01%)</title><rect x="72.3" y="453" width="0.1" height="15.0" fill="rgb(209,115,49)" rx="2" ry="2" />
<text  x="75.26" y="463.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%)</title><rect x="1146.0" y="501" width="0.5" height="15.0" fill="rgb(243,108,33)" rx="2" ry="2" />
<text  x="1148.99" y="511.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="665.6" y="453" width="0.1" height="15.0" fill="rgb(209,123,2)" rx="2" ry="2" />
<text  x="668.57" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="1154.6" y="485" width="0.1" height="15.0" fill="rgb(206,87,46)" rx="2" ry="2" />
<text  x="1157.57" y="495.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (97 samples, 0.20%)</title><rect x="719.8" y="341" width="2.4" height="15.0" fill="rgb(205,110,37)" rx="2" ry="2" />
<text  x="722.75" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (23 samples, 0.05%)</title><rect x="395.2" y="165" width="0.6" height="15.0" fill="rgb(222,68,22)" rx="2" ry="2" />
<text  x="398.21" y="175.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (5 samples, 0.01%)</title><rect x="275.0" y="357" width="0.1" height="15.0" fill="rgb(237,136,27)" rx="2" ry="2" />
<text  x="278.01" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (12 samples, 0.03%)</title><rect x="1123.0" y="325" width="0.3" height="15.0" fill="rgb(243,183,8)" rx="2" ry="2" />
<text  x="1125.98" y="335.5" ></text>
</g>
<g >
<title>operator new (38 samples, 0.08%)</title><rect x="500.0" y="197" width="1.0" height="15.0" fill="rgb(215,129,0)" rx="2" ry="2" />
<text  x="503.05" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (8 samples, 0.02%)</title><rect x="606.9" y="373" width="0.2" height="15.0" fill="rgb(251,38,23)" rx="2" ry="2" />
<text  x="609.93" y="383.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (226 samples, 0.48%)</title><rect x="1031.2" y="197" width="5.7" height="15.0" fill="rgb(219,20,5)" rx="2" ry="2" />
<text  x="1034.23" y="207.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (15 samples, 0.03%)</title><rect x="133.6" y="261" width="0.3" height="15.0" fill="rgb(241,153,34)" rx="2" ry="2" />
<text  x="136.56" y="271.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (22 samples, 0.05%)</title><rect x="1051.2" y="245" width="0.5" height="15.0" fill="rgb(253,41,4)" rx="2" ry="2" />
<text  x="1054.15" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="833.9" y="389" width="0.1" height="15.0" fill="rgb(221,191,51)" rx="2" ry="2" />
<text  x="836.89" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (36 samples, 0.08%)</title><rect x="916.7" y="357" width="0.9" height="15.0" fill="rgb(212,45,14)" rx="2" ry="2" />
<text  x="919.72" y="367.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (76 samples, 0.16%)</title><rect x="1100.8" y="325" width="1.9" height="15.0" fill="rgb(226,142,15)" rx="2" ry="2" />
<text  x="1103.77" y="335.5" ></text>
</g>
<g >
<title>TLS init function for seastar::testing::local_random_engine (6 samples, 0.01%)</title><rect x="859.6" y="453" width="0.1" height="15.0" fill="rgb(213,33,15)" rx="2" ry="2" />
<text  x="862.60" y="463.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="455.0" y="309" width="0.5" height="15.0" fill="rgb(211,9,41)" rx="2" ry="2" />
<text  x="457.99" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (6 samples, 0.01%)</title><rect x="233.4" y="213" width="0.2" height="15.0" fill="rgb(239,176,51)" rx="2" ry="2" />
<text  x="236.42" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (18 samples, 0.04%)</title><rect x="616.1" y="485" width="0.5" height="15.0" fill="rgb(230,112,43)" rx="2" ry="2" />
<text  x="619.11" y="495.5" ></text>
</g>
<g >
<title>cql3::relation::to_restriction (5 samples, 0.01%)</title><rect x="21.5" y="389" width="0.1" height="15.0" fill="rgb(217,134,53)" rx="2" ry="2" />
<text  x="24.52" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (28 samples, 0.06%)</title><rect x="772.3" y="277" width="0.7" height="15.0" fill="rgb(209,11,34)" rx="2" ry="2" />
<text  x="775.28" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (15 samples, 0.03%)</title><rect x="210.4" y="117" width="0.4" height="15.0" fill="rgb(247,30,39)" rx="2" ry="2" />
<text  x="213.43" y="127.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="805.0" y="277" width="0.2" height="15.0" fill="rgb(225,87,17)" rx="2" ry="2" />
<text  x="808.04" y="287.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (8 samples, 0.02%)</title><rect x="825.8" y="293" width="0.2" height="15.0" fill="rgb(227,40,22)" rx="2" ry="2" />
<text  x="828.76" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (16 samples, 0.03%)</title><rect x="617.9" y="469" width="0.4" height="15.0" fill="rgb(232,71,40)" rx="2" ry="2" />
<text  x="620.85" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::close (17 samples, 0.04%)</title><rect x="561.6" y="341" width="0.5" height="15.0" fill="rgb(210,84,15)" rx="2" ry="2" />
<text  x="564.63" y="351.5" ></text>
</g>
<g >
<title>service::shared_mutation::apply_locally (10 samples, 0.02%)</title><rect x="1144.4" y="229" width="0.2" height="15.0" fill="rgb(251,160,3)" rx="2" ry="2" />
<text  x="1147.37" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (19 samples, 0.04%)</title><rect x="804.5" y="229" width="0.4" height="15.0" fill="rgb(233,218,47)" rx="2" ry="2" />
<text  x="807.47" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (7 samples, 0.01%)</title><rect x="65.5" y="389" width="0.2" height="15.0" fill="rgb(248,40,46)" rx="2" ry="2" />
<text  x="68.50" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (46 samples, 0.10%)</title><rect x="751.1" y="341" width="1.2" height="15.0" fill="rgb(245,148,52)" rx="2" ry="2" />
<text  x="754.14" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (692 samples, 1.46%)</title><rect x="783.7" y="245" width="17.3" height="15.0" fill="rgb(240,203,11)" rx="2" ry="2" />
<text  x="786.70" y="255.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (14 samples, 0.03%)</title><rect x="949.9" y="357" width="0.3" height="15.0" fill="rgb(249,183,0)" rx="2" ry="2" />
<text  x="952.85" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (11 samples, 0.02%)</title><rect x="781.9" y="229" width="0.2" height="15.0" fill="rgb(242,54,39)" rx="2" ry="2" />
<text  x="784.86" y="239.5" ></text>
</g>
<g >
<title>query_result_builder::consume (1,981 samples, 4.19%)</title><rect x="310.0" y="213" width="49.4" height="15.0" fill="rgb(253,21,6)" rx="2" ry="2" />
<text  x="313.04" y="223.5" >quer..</text>
</g>
<g >
<title>dht::tri_compare (137 samples, 0.29%)</title><rect x="1088.8" y="229" width="3.4" height="15.0" fill="rgb(243,77,30)" rx="2" ry="2" />
<text  x="1091.80" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::set&lt;&gt; (18 samples, 0.04%)</title><rect x="31.5" y="469" width="0.4" height="15.0" fill="rgb(223,61,17)" rx="2" ry="2" />
<text  x="34.49" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="589.7" y="373" width="0.2" height="15.0" fill="rgb(250,108,42)" rx="2" ry="2" />
<text  x="592.68" y="383.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="646.6" y="469" width="0.2" height="15.0" fill="rgb(222,94,44)" rx="2" ry="2" />
<text  x="649.60" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::set_coroutine (6 samples, 0.01%)</title><rect x="1047.3" y="261" width="0.1" height="15.0" fill="rgb(233,165,51)" rx="2" ry="2" />
<text  x="1050.26" y="271.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (716 samples, 1.51%)</title><rect x="489.1" y="293" width="17.8" height="15.0" fill="rgb(237,54,11)" rx="2" ry="2" />
<text  x="492.08" y="303.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="659.8" y="453" width="0.8" height="15.0" fill="rgb(238,73,15)" rx="2" ry="2" />
<text  x="662.81" y="463.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (95 samples, 0.20%)</title><rect x="786.4" y="181" width="2.4" height="15.0" fill="rgb(234,19,24)" rx="2" ry="2" />
<text  x="789.39" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="559.9" y="293" width="0.3" height="15.0" fill="rgb(227,179,44)" rx="2" ry="2" />
<text  x="562.93" y="303.5" ></text>
</g>
<g >
<title>database::get_reader_concurrency_semaphore (5 samples, 0.01%)</title><rect x="1025.0" y="245" width="0.2" height="15.0" fill="rgb(217,214,40)" rx="2" ry="2" />
<text  x="1028.05" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::set&lt;service::storage_proxy_coordinator_query_result&gt; (21 samples, 0.04%)</title><rect x="1152.5" y="469" width="0.5" height="15.0" fill="rgb(222,28,28)" rx="2" ry="2" />
<text  x="1155.45" y="479.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;managed_bytes&gt;::make&lt;managed_bytes&gt; (35 samples, 0.07%)</title><rect x="904.3" y="309" width="0.8" height="15.0" fill="rgb(229,106,8)" rx="2" ry="2" />
<text  x="907.27" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (59 samples, 0.12%)</title><rect x="1108.0" y="373" width="1.5" height="15.0" fill="rgb(252,163,1)" rx="2" ry="2" />
<text  x="1111.00" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (14 samples, 0.03%)</title><rect x="647.9" y="485" width="0.3" height="15.0" fill="rgb(219,143,43)" rx="2" ry="2" />
<text  x="650.87" y="495.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (9 samples, 0.02%)</title><rect x="911.1" y="373" width="0.2" height="15.0" fill="rgb(241,137,19)" rx="2" ry="2" />
<text  x="914.11" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (1,228 samples, 2.59%)</title><rect x="1018.2" y="277" width="30.6" height="15.0" fill="rgb(241,133,39)" rx="2" ry="2" />
<text  x="1021.19" y="287.5" >se..</text>
</g>
<g >
<title>cql3::statements::modification_statement::execute_without_condition (36 samples, 0.08%)</title><rect x="865.7" y="421" width="0.9" height="15.0" fill="rgb(251,218,53)" rx="2" ry="2" />
<text  x="868.68" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="525.2" y="261" width="0.1" height="15.0" fill="rgb(211,161,34)" rx="2" ry="2" />
<text  x="528.18" y="271.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="509.3" y="277" width="1.0" height="15.0" fill="rgb(226,208,13)" rx="2" ry="2" />
<text  x="512.35" y="287.5" ></text>
</g>
<g >
<title>intrusive_array&lt;memtable_entry&gt;::lower_bound&lt;dht::ring_position, dht::ring_position_comparator&gt; (473 samples, 1.00%)</title><rect x="468.0" y="309" width="11.8" height="15.0" fill="rgb(220,157,23)" rx="2" ry="2" />
<text  x="470.96" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (7 samples, 0.01%)</title><rect x="694.9" y="421" width="0.1" height="15.0" fill="rgb(243,197,9)" rx="2" ry="2" />
<text  x="697.87" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::process_where_clause (16 samples, 0.03%)</title><rect x="21.5" y="421" width="0.4" height="15.0" fill="rgb(225,35,30)" rx="2" ry="2" />
<text  x="24.49" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (8 samples, 0.02%)</title><rect x="97.2" y="421" width="0.2" height="15.0" fill="rgb(214,191,6)" rx="2" ry="2" />
<text  x="100.16" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (25 samples, 0.05%)</title><rect x="790.0" y="181" width="0.6" height="15.0" fill="rgb(239,91,24)" rx="2" ry="2" />
<text  x="793.01" y="191.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (8 samples, 0.02%)</title><rect x="240.9" y="197" width="0.2" height="15.0" fill="rgb(224,136,32)" rx="2" ry="2" />
<text  x="243.90" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (76 samples, 0.16%)</title><rect x="685.4" y="485" width="1.9" height="15.0" fill="rgb(212,78,48)" rx="2" ry="2" />
<text  x="688.44" y="495.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (8 samples, 0.02%)</title><rect x="888.8" y="309" width="0.2" height="15.0" fill="rgb(218,15,15)" rx="2" ry="2" />
<text  x="891.84" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.05%)</title><rect x="350.0" y="149" width="0.5" height="15.0" fill="rgb(227,44,51)" rx="2" ry="2" />
<text  x="352.98" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (186 samples, 0.39%)</title><rect x="658.5" y="485" width="4.7" height="15.0" fill="rgb(232,175,5)" rx="2" ry="2" />
<text  x="661.54" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1057.1" y="293" width="0.1" height="15.0" fill="rgb(222,23,9)" rx="2" ry="2" />
<text  x="1060.06" y="303.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (21 samples, 0.04%)</title><rect x="830.5" y="405" width="0.5" height="15.0" fill="rgb(227,72,45)" rx="2" ry="2" />
<text  x="833.50" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::make&lt;query::result&gt; (48 samples, 0.10%)</title><rect x="597.0" y="437" width="1.2" height="15.0" fill="rgb(233,54,8)" rx="2" ry="2" />
<text  x="600.01" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (23 samples, 0.05%)</title><rect x="1173.2" y="453" width="0.6" height="15.0" fill="rgb(239,163,29)" rx="2" ry="2" />
<text  x="1176.20" y="463.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (24 samples, 0.05%)</title><rect x="798.9" y="101" width="0.6" height="15.0" fill="rgb(238,116,2)" rx="2" ry="2" />
<text  x="801.86" y="111.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="17.9" y="341" width="0.1" height="15.0" fill="rgb(213,30,0)" rx="2" ry="2" />
<text  x="20.88" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::push_back (9 samples, 0.02%)</title><rect x="1038.9" y="213" width="0.2" height="15.0" fill="rgb(234,214,7)" rx="2" ry="2" />
<text  x="1041.88" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="938.1" y="389" width="0.2" height="15.0" fill="rgb(251,87,20)" rx="2" ry="2" />
<text  x="941.13" y="399.5" ></text>
</g>
<g >
<title>dht::shard_of (6 samples, 0.01%)</title><rect x="1007.0" y="293" width="0.1" height="15.0" fill="rgb(250,181,16)" rx="2" ry="2" />
<text  x="1010.00" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="1048.8" y="277" width="0.1" height="15.0" fill="rgb(242,146,31)" rx="2" ry="2" />
<text  x="1051.81" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (348 samples, 0.74%)</title><rect x="551.9" y="309" width="8.7" height="15.0" fill="rgb(225,42,37)" rx="2" ry="2" />
<text  x="554.88" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="536.8" y="341" width="0.7" height="15.0" fill="rgb(244,124,43)" rx="2" ry="2" />
<text  x="539.77" y="351.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (40 samples, 0.08%)</title><rect x="190.9" y="101" width="1.0" height="15.0" fill="rgb(223,114,23)" rx="2" ry="2" />
<text  x="193.91" y="111.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (105 samples, 0.22%)</title><rect x="918.0" y="373" width="2.6" height="15.0" fill="rgb(244,102,54)" rx="2" ry="2" />
<text  x="920.99" y="383.5" ></text>
</g>
<g >
<title>cql3::query_options::fill_value_views (109 samples, 0.23%)</title><rect x="850.8" y="405" width="2.7" height="15.0" fill="rgb(230,56,12)" rx="2" ry="2" />
<text  x="853.82" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (8 samples, 0.02%)</title><rect x="958.5" y="405" width="0.2" height="15.0" fill="rgb(218,120,31)" rx="2" ry="2" />
<text  x="961.45" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (10 samples, 0.02%)</title><rect x="251.2" y="309" width="0.3" height="15.0" fill="rgb(243,65,17)" rx="2" ry="2" />
<text  x="254.22" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (126 samples, 0.27%)</title><rect x="977.1" y="325" width="3.1" height="15.0" fill="rgb(248,197,50)" rx="2" ry="2" />
<text  x="980.08" y="335.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (19 samples, 0.04%)</title><rect x="323.5" y="181" width="0.5" height="15.0" fill="rgb(207,127,12)" rx="2" ry="2" />
<text  x="326.52" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (31 samples, 0.07%)</title><rect x="600.6" y="437" width="0.8" height="15.0" fill="rgb(217,62,33)" rx="2" ry="2" />
<text  x="603.65" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="500.1" y="181" width="0.9" height="15.0" fill="rgb(231,32,15)" rx="2" ry="2" />
<text  x="503.12" y="191.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (121 samples, 0.26%)</title><rect x="404.8" y="293" width="3.0" height="15.0" fill="rgb(251,157,41)" rx="2" ry="2" />
<text  x="407.83" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::do_execute (37 samples, 0.08%)</title><rect x="865.7" y="437" width="0.9" height="15.0" fill="rgb(223,17,4)" rx="2" ry="2" />
<text  x="868.65" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="933.8" y="309" width="0.2" height="15.0" fill="rgb(227,45,1)" rx="2" ry="2" />
<text  x="936.77" y="319.5" ></text>
</g>
<g >
<title>__start_context (10 samples, 0.02%)</title><rect x="22.5" y="549" width="0.3" height="15.0" fill="rgb(251,118,51)" rx="2" ry="2" />
<text  x="25.54" y="559.5" ></text>
</g>
<g >
<title>seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::return_all (15 samples, 0.03%)</title><rect x="35.8" y="437" width="0.4" height="15.0" fill="rgb(219,56,49)" rx="2" ry="2" />
<text  x="38.83" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (90 samples, 0.19%)</title><rect x="227.4" y="213" width="2.2" height="15.0" fill="rgb(242,215,2)" rx="2" ry="2" />
<text  x="230.39" y="223.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (5 samples, 0.01%)</title><rect x="911.3" y="373" width="0.2" height="15.0" fill="rgb(238,121,35)" rx="2" ry="2" />
<text  x="914.33" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (118 samples, 0.25%)</title><rect x="785.8" y="213" width="3.0" height="15.0" fill="rgb(244,101,18)" rx="2" ry="2" />
<text  x="788.85" y="223.5" ></text>
</g>
<g >
<title>tombstone::operator&lt;=&gt; (9 samples, 0.02%)</title><rect x="383.0" y="181" width="0.3" height="15.0" fill="rgb(226,217,7)" rx="2" ry="2" />
<text  x="386.04" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::execution_loop (22,946 samples, 48.48%)</title><rect x="46.2" y="501" width="572.1" height="15.0" fill="rgb(219,188,45)" rx="2" ry="2" />
<text  x="49.15" y="511.5" >reader_concurrency_semaphore::execution_loop</text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (57 samples, 0.12%)</title><rect x="16.3" y="309" width="1.5" height="15.0" fill="rgb(245,221,20)" rx="2" ry="2" />
<text  x="19.33" y="319.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%)</title><rect x="1052.8" y="245" width="1.9" height="15.0" fill="rgb(227,145,44)" rx="2" ry="2" />
<text  x="1055.85" y="255.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (9 samples, 0.02%)</title><rect x="23.8" y="517" width="0.2" height="15.0" fill="rgb(233,43,45)" rx="2" ry="2" />
<text  x="26.81" y="527.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (29 samples, 0.06%)</title><rect x="1118.7" y="373" width="0.7" height="15.0" fill="rgb(216,56,47)" rx="2" ry="2" />
<text  x="1121.69" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (26 samples, 0.05%)</title><rect x="65.7" y="389" width="0.6" height="15.0" fill="rgb(205,93,25)" rx="2" ry="2" />
<text  x="68.67" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (18 samples, 0.04%)</title><rect x="553.6" y="293" width="0.4" height="15.0" fill="rgb(245,201,54)" rx="2" ry="2" />
<text  x="556.55" y="303.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="1130.6" y="405" width="1.9" height="15.0" fill="rgb(242,103,7)" rx="2" ry="2" />
<text  x="1133.61" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="282.9" y="293" width="0.2" height="15.0" fill="rgb(213,166,15)" rx="2" ry="2" />
<text  x="285.88" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (38 samples, 0.08%)</title><rect x="836.2" y="437" width="0.9" height="15.0" fill="rgb(222,221,22)" rx="2" ry="2" />
<text  x="839.16" y="447.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (14 samples, 0.03%)</title><rect x="1056.7" y="293" width="0.4" height="15.0" fill="rgb(230,201,53)" rx="2" ry="2" />
<text  x="1059.71" y="303.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (5 samples, 0.01%)</title><rect x="51.6" y="469" width="0.2" height="15.0" fill="rgb(228,153,44)" rx="2" ry="2" />
<text  x="54.64" y="479.5" ></text>
</g>
<g >
<title>seastar::reactor::do_run (46,372 samples, 97.98%)</title><rect x="22.9" y="533" width="1156.1" height="15.0" fill="rgb(237,195,0)" rx="2" ry="2" />
<text  x="25.87" y="543.5" >seastar::reactor::do_run</text>
</g>
<g >
<title>mutation_reader_merger::prepare_next (7 samples, 0.01%)</title><rect x="252.0" y="325" width="0.2" height="15.0" fill="rgb(240,25,53)" rx="2" ry="2" />
<text  x="255.02" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (14 samples, 0.03%)</title><rect x="305.9" y="181" width="0.3" height="15.0" fill="rgb(211,223,44)" rx="2" ry="2" />
<text  x="308.90" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (16 samples, 0.03%)</title><rect x="626.7" y="485" width="0.4" height="15.0" fill="rgb(242,164,33)" rx="2" ry="2" />
<text  x="629.65" y="495.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="136.0" y="277" width="0.1" height="15.0" fill="rgb(211,227,2)" rx="2" ry="2" />
<text  x="139.01" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (13 samples, 0.03%)</title><rect x="44.0" y="469" width="0.3" height="15.0" fill="rgb(219,17,40)" rx="2" ry="2" />
<text  x="47.01" y="479.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (4,450 samples, 9.40%)</title><rect x="418.5" y="373" width="110.9" height="15.0" fill="rgb(221,159,37)" rx="2" ry="2" />
<text  x="421.47" y="383.5" >std::_Functio..</text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;std::function&lt;partition_presence_checker_result  (32 samples, 0.07%)</title><rect x="611.6" y="405" width="0.8" height="15.0" fill="rgb(238,79,41)" rx="2" ry="2" />
<text  x="614.64" y="415.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,373 samples, 97.98%)</title><rect x="22.9" y="581" width="1156.2" height="15.0" fill="rgb(248,22,44)" rx="2" ry="2" />
<text  x="25.87" y="591.5" >seastar::app_template::run</text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (10 samples, 0.02%)</title><rect x="641.0" y="453" width="0.3" height="15.0" fill="rgb(240,178,53)" rx="2" ry="2" />
<text  x="644.01" y="463.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="17.9" y="357" width="0.1" height="15.0" fill="rgb(221,82,18)" rx="2" ry="2" />
<text  x="20.88" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (30 samples, 0.06%)</title><rect x="75.7" y="453" width="0.8" height="15.0" fill="rgb(234,106,53)" rx="2" ry="2" />
<text  x="78.72" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="698.7" y="421" width="0.4" height="15.0" fill="rgb(222,127,52)" rx="2" ry="2" />
<text  x="701.66" y="431.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_ready_permit (17 samples, 0.04%)</title><rect x="1038.4" y="213" width="0.4" height="15.0" fill="rgb(237,154,16)" rx="2" ry="2" />
<text  x="1041.39" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (111 samples, 0.23%)</title><rect x="797.3" y="149" width="2.8" height="15.0" fill="rgb(229,164,50)" rx="2" ry="2" />
<text  x="800.31" y="159.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (20 samples, 0.04%)</title><rect x="11.9" y="581" width="0.5" height="15.0" fill="rgb(242,77,54)" rx="2" ry="2" />
<text  x="14.87" y="591.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (15 samples, 0.03%)</title><rect x="731.4" y="293" width="0.4" height="15.0" fill="rgb(234,146,13)" rx="2" ry="2" />
<text  x="734.39" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (11 samples, 0.02%)</title><rect x="865.1" y="389" width="0.3" height="15.0" fill="rgb(219,38,48)" rx="2" ry="2" />
<text  x="868.11" y="399.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (26 samples, 0.05%)</title><rect x="501.0" y="197" width="0.7" height="15.0" fill="rgb(224,200,32)" rx="2" ry="2" />
<text  x="504.04" y="207.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (30 samples, 0.06%)</title><rect x="599.6" y="437" width="0.7" height="15.0" fill="rgb(254,131,21)" rx="2" ry="2" />
<text  x="602.60" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (23 samples, 0.05%)</title><rect x="784.3" y="229" width="0.6" height="15.0" fill="rgb(211,171,29)" rx="2" ry="2" />
<text  x="787.33" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::wait (12 samples, 0.03%)</title><rect x="590.4" y="437" width="0.3" height="15.0" fill="rgb(211,9,27)" rx="2" ry="2" />
<text  x="593.35" y="447.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (8 samples, 0.02%)</title><rect x="797.5" y="133" width="0.2" height="15.0" fill="rgb(226,52,13)" rx="2" ry="2" />
<text  x="800.49" y="143.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (74 samples, 0.16%)</title><rect x="376.8" y="133" width="1.9" height="15.0" fill="rgb(233,118,39)" rx="2" ry="2" />
<text  x="379.83" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_sorted_endpoints (838 samples, 1.77%)</title><rect x="1082.1" y="341" width="20.9" height="15.0" fill="rgb(235,217,17)" rx="2" ry="2" />
<text  x="1085.09" y="351.5" ></text>
</g>
<g >
<title>schema::column_at (15 samples, 0.03%)</title><rect x="382.1" y="181" width="0.4" height="15.0" fill="rgb(216,195,42)" rx="2" ry="2" />
<text  x="385.09" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="998.8" y="325" width="0.2" height="15.0" fill="rgb(242,43,10)" rx="2" ry="2" />
<text  x="1001.84" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (6 samples, 0.01%)</title><rect x="829.7" y="421" width="0.1" height="15.0" fill="rgb(246,23,8)" rx="2" ry="2" />
<text  x="832.68" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (20 samples, 0.04%)</title><rect x="506.3" y="277" width="0.5" height="15.0" fill="rgb(250,177,0)" rx="2" ry="2" />
<text  x="509.33" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (37 samples, 0.08%)</title><rect x="789.7" y="197" width="1.0" height="15.0" fill="rgb(252,74,43)" rx="2" ry="2" />
<text  x="792.74" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (12 samples, 0.03%)</title><rect x="784.0" y="229" width="0.3" height="15.0" fill="rgb(210,221,28)" rx="2" ry="2" />
<text  x="787.03" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (17 samples, 0.04%)</title><rect x="607.4" y="437" width="0.5" height="15.0" fill="rgb(236,99,21)" rx="2" ry="2" />
<text  x="610.43" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="674.9" y="437" width="0.6" height="15.0" fill="rgb(241,182,51)" rx="2" ry="2" />
<text  x="677.95" y="447.5" ></text>
</g>
<g >
<title>database::do_apply (35 samples, 0.07%)</title><rect x="1143.3" y="341" width="0.9" height="15.0" fill="rgb(215,114,1)" rx="2" ry="2" />
<text  x="1146.30" y="351.5" ></text>
</g>
<g >
<title>sstables::noop_write_monitor::~noop_write_monitor (10 samples, 0.02%)</title><rect x="22.5" y="613" width="0.3" height="15.0" fill="rgb(239,58,42)" rx="2" ry="2" />
<text  x="25.54" y="623.5" ></text>
</g>
<g >
<title>cql3::query_processor::get_statement (258 samples, 0.55%)</title><rect x="15.7" y="485" width="6.4" height="15.0" fill="rgb(242,113,31)" rx="2" ry="2" />
<text  x="18.71" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (91 samples, 0.19%)</title><rect x="405.6" y="277" width="2.2" height="15.0" fill="rgb(239,12,34)" rx="2" ry="2" />
<text  x="408.58" y="287.5" ></text>
</g>
<g >
<title>cql3::attributes::is_timeout_set (5 samples, 0.01%)</title><rect x="955.2" y="389" width="0.1" height="15.0" fill="rgb(253,204,17)" rx="2" ry="2" />
<text  x="958.16" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (16 samples, 0.03%)</title><rect x="1125.6" y="389" width="0.4" height="15.0" fill="rgb(235,125,53)" rx="2" ry="2" />
<text  x="1128.62" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="563.4" y="325" width="0.1" height="15.0" fill="rgb(251,220,20)" rx="2" ry="2" />
<text  x="566.42" y="335.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (88 samples, 0.19%)</title><rect x="142.8" y="213" width="2.2" height="15.0" fill="rgb(249,31,30)" rx="2" ry="2" />
<text  x="145.81" y="223.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (34 samples, 0.07%)</title><rect x="782.2" y="229" width="0.9" height="15.0" fill="rgb(246,122,32)" rx="2" ry="2" />
<text  x="785.21" y="239.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (695 samples, 1.47%)</title><rect x="783.6" y="261" width="17.4" height="15.0" fill="rgb(246,37,38)" rx="2" ry="2" />
<text  x="786.63" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;bool  (43 samples, 0.09%)</title><rect x="1177.9" y="517" width="1.1" height="15.0" fill="rgb(244,7,16)" rx="2" ry="2" />
<text  x="1180.93" y="527.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="944.4" y="325" width="0.4" height="15.0" fill="rgb(237,71,29)" rx="2" ry="2" />
<text  x="947.42" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_common&lt;false, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (77 samples, 0.16%)</title><rect x="832.1" y="421" width="1.9" height="15.0" fill="rgb(230,160,5)" rx="2" ry="2" />
<text  x="835.12" y="431.5" ></text>
</g>
<g >
<title>sstring_hash::operator (5 samples, 0.01%)</title><rect x="840.9" y="389" width="0.1" height="15.0" fill="rgb(208,128,48)" rx="2" ry="2" />
<text  x="843.90" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (9 samples, 0.02%)</title><rect x="865.1" y="373" width="0.3" height="15.0" fill="rgb(216,12,2)" rx="2" ry="2" />
<text  x="868.13" y="383.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::never_speculating_read_executor (212 samples, 0.45%)</title><rect x="1075.3" y="325" width="5.3" height="15.0" fill="rgb(221,43,43)" rx="2" ry="2" />
<text  x="1078.31" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (5 samples, 0.01%)</title><rect x="1143.3" y="213" width="0.2" height="15.0" fill="rgb(217,210,26)" rx="2" ry="2" />
<text  x="1146.33" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,183 samples, 4.61%)</title><rect x="158.5" y="197" width="54.4" height="15.0" fill="rgb(245,85,45)" rx="2" ry="2" />
<text  x="161.50" y="207.5" >parti..</text>
</g>
<g >
<title>operator delete (27 samples, 0.06%)</title><rect x="806.2" y="277" width="0.6" height="15.0" fill="rgb(231,218,15)" rx="2" ry="2" />
<text  x="809.17" y="287.5" ></text>
</g>
<g >
<title>abstract_type::bound_value_needs_to_be_reserialized (6 samples, 0.01%)</title><rect x="889.5" y="293" width="0.1" height="15.0" fill="rgb(252,29,53)" rx="2" ry="2" />
<text  x="892.47" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="678.7" y="469" width="0.1" height="15.0" fill="rgb(240,216,3)" rx="2" ry="2" />
<text  x="681.71" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (73 samples, 0.15%)</title><rect x="825.0" y="325" width="1.8" height="15.0" fill="rgb(229,35,42)" rx="2" ry="2" />
<text  x="828.01" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (5 samples, 0.01%)</title><rect x="163.7" y="133" width="0.1" height="15.0" fill="rgb(216,89,43)" rx="2" ry="2" />
<text  x="166.71" y="143.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_mutate (25 samples, 0.05%)</title><rect x="1144.3" y="341" width="0.6" height="15.0" fill="rgb(230,34,19)" rx="2" ry="2" />
<text  x="1147.27" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::process_results (454 samples, 0.96%)</title><rect x="633.6" y="485" width="11.3" height="15.0" fill="rgb(248,61,42)" rx="2" ry="2" />
<text  x="636.61" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="941.7" y="389" width="0.2" height="15.0" fill="rgb(217,222,11)" rx="2" ry="2" />
<text  x="944.72" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (15 samples, 0.03%)</title><rect x="1042.4" y="181" width="0.3" height="15.0" fill="rgb(214,144,24)" rx="2" ry="2" />
<text  x="1045.35" y="191.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::start_cells (27 samples, 0.06%)</title><rect x="322.9" y="181" width="0.6" height="15.0" fill="rgb(252,138,53)" rx="2" ry="2" />
<text  x="325.85" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (70 samples, 0.15%)</title><rect x="909.3" y="357" width="1.8" height="15.0" fill="rgb(221,120,3)" rx="2" ry="2" />
<text  x="912.31" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (103 samples, 0.22%)</title><rect x="942.2" y="389" width="2.6" height="15.0" fill="rgb(210,33,35)" rx="2" ry="2" />
<text  x="945.22" y="399.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (5 samples, 0.01%)</title><rect x="1070.5" y="341" width="0.1" height="15.0" fill="rgb(250,0,38)" rx="2" ry="2" />
<text  x="1073.47" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (277 samples, 0.59%)</title><rect x="944.9" y="421" width="6.9" height="15.0" fill="rgb(230,78,16)" rx="2" ry="2" />
<text  x="947.86" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (9 samples, 0.02%)</title><rect x="694.0" y="421" width="0.3" height="15.0" fill="rgb(221,185,11)" rx="2" ry="2" />
<text  x="697.04" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (51 samples, 0.11%)</title><rect x="1062.8" y="325" width="1.3" height="15.0" fill="rgb(209,62,10)" rx="2" ry="2" />
<text  x="1065.84" y="335.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1050.1" y="261" width="0.2" height="15.0" fill="rgb(234,208,42)" rx="2" ry="2" />
<text  x="1053.13" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (74 samples, 0.16%)</title><rect x="637.3" y="453" width="1.9" height="15.0" fill="rgb(221,118,19)" rx="2" ry="2" />
<text  x="640.35" y="463.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt; &gt;::invoke&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (73 samples, 0.15%)</title><rect x="730.2" y="357" width="1.8" height="15.0" fill="rgb(229,91,45)" rx="2" ry="2" />
<text  x="733.17" y="367.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (163 samples, 0.34%)</title><rect x="337.2" y="165" width="4.1" height="15.0" fill="rgb(246,227,24)" rx="2" ry="2" />
<text  x="340.21" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (22 samples, 0.05%)</title><rect x="822.4" y="277" width="0.6" height="15.0" fill="rgb(207,147,28)" rx="2" ry="2" />
<text  x="825.42" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (46 samples, 0.10%)</title><rect x="435.2" y="229" width="1.1" height="15.0" fill="rgb(251,13,31)" rx="2" ry="2" />
<text  x="438.20" y="239.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (34 samples, 0.07%)</title><rect x="265.9" y="293" width="0.8" height="15.0" fill="rgb(209,126,8)" rx="2" ry="2" />
<text  x="268.86" y="303.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::got_cl (13 samples, 0.03%)</title><rect x="683.8" y="469" width="0.3" height="15.0" fill="rgb(250,119,30)" rx="2" ry="2" />
<text  x="686.77" y="479.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (13 samples, 0.03%)</title><rect x="1100.2" y="261" width="0.3" height="15.0" fill="rgb(215,179,19)" rx="2" ry="2" />
<text  x="1103.19" y="271.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (11,224 samples, 23.72%)</title><rect x="865.5" y="501" width="279.8" height="15.0" fill="rgb(227,35,5)" rx="2" ry="2" />
<text  x="868.50" y="511.5" >seastar::lambda_task&lt;seastar::executi..</text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="1063.7" y="293" width="0.4" height="15.0" fill="rgb(210,161,19)" rx="2" ry="2" />
<text  x="1066.74" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="219.8" y="197" width="0.4" height="15.0" fill="rgb(252,109,9)" rx="2" ry="2" />
<text  x="222.83" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (18 samples, 0.04%)</title><rect x="721.7" y="293" width="0.5" height="15.0" fill="rgb(207,34,19)" rx="2" ry="2" />
<text  x="724.72" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (7 samples, 0.01%)</title><rect x="73.7" y="453" width="0.2" height="15.0" fill="rgb(233,155,42)" rx="2" ry="2" />
<text  x="76.73" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (61 samples, 0.13%)</title><rect x="550.3" y="309" width="1.6" height="15.0" fill="rgb(251,55,37)" rx="2" ry="2" />
<text  x="553.33" y="319.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="601.2" y="389" width="0.2" height="15.0" fill="rgb(223,35,18)" rx="2" ry="2" />
<text  x="604.22" y="399.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (5 samples, 0.01%)</title><rect x="795.6" y="165" width="0.2" height="15.0" fill="rgb(228,103,11)" rx="2" ry="2" />
<text  x="798.64" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (26 samples, 0.05%)</title><rect x="592.5" y="437" width="0.7" height="15.0" fill="rgb(251,177,9)" rx="2" ry="2" />
<text  x="595.55" y="447.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (24 samples, 0.05%)</title><rect x="208.8" y="133" width="0.6" height="15.0" fill="rgb(228,196,5)" rx="2" ry="2" />
<text  x="211.84" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (30 samples, 0.06%)</title><rect x="107.7" y="373" width="0.7" height="15.0" fill="rgb(207,186,42)" rx="2" ry="2" />
<text  x="110.66" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (82 samples, 0.17%)</title><rect x="258.3" y="325" width="2.0" height="15.0" fill="rgb(247,185,21)" rx="2" ry="2" />
<text  x="261.25" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="511.2" y="309" width="0.2" height="15.0" fill="rgb(207,17,7)" rx="2" ry="2" />
<text  x="514.17" y="319.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (6 samples, 0.01%)</title><rect x="560.6" y="309" width="0.1" height="15.0" fill="rgb(218,52,7)" rx="2" ry="2" />
<text  x="563.56" y="319.5" ></text>
</g>
<g >
<title>__strcmp_avx2 (90 samples, 0.19%)</title><rect x="12.6" y="581" width="2.3" height="15.0" fill="rgb(218,72,28)" rx="2" ry="2" />
<text  x="15.62" y="591.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::lru_entry::touch (31 samples, 0.07%)</title><rect x="731.0" y="309" width="0.8" height="15.0" fill="rgb(223,46,17)" rx="2" ry="2" />
<text  x="733.99" y="319.5" ></text>
</g>
<g >
<title>single_node_cql_env::make_query_state (464 samples, 0.98%)</title><rect x="837.2" y="437" width="11.6" height="15.0" fill="rgb(246,68,15)" rx="2" ry="2" />
<text  x="840.18" y="447.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (30 samples, 0.06%)</title><rect x="67.4" y="389" width="0.7" height="15.0" fill="rgb(207,72,51)" rx="2" ry="2" />
<text  x="70.37" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="858.9" y="405" width="0.2" height="15.0" fill="rgb(241,170,45)" rx="2" ry="2" />
<text  x="861.92" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1139.4" y="421" width="0.2" height="15.0" fill="rgb(212,141,40)" rx="2" ry="2" />
<text  x="1142.41" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;std::function&lt;flat_mutation_reader  (12 samples, 0.03%)</title><rect x="595.8" y="437" width="0.3" height="15.0" fill="rgb(235,145,10)" rx="2" ry="2" />
<text  x="598.76" y="447.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (5 samples, 0.01%)</title><rect x="232.0" y="165" width="0.1" height="15.0" fill="rgb(213,7,2)" rx="2" ry="2" />
<text  x="235.00" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (24 samples, 0.05%)</title><rect x="800.3" y="213" width="0.6" height="15.0" fill="rgb(221,77,11)" rx="2" ry="2" />
<text  x="803.33" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="440.6" y="261" width="0.1" height="15.0" fill="rgb(254,96,30)" rx="2" ry="2" />
<text  x="443.56" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (8 samples, 0.02%)</title><rect x="678.0" y="469" width="0.2" height="15.0" fill="rgb(225,154,35)" rx="2" ry="2" />
<text  x="680.96" y="479.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (7 samples, 0.01%)</title><rect x="675.6" y="485" width="0.2" height="15.0" fill="rgb(235,142,25)" rx="2" ry="2" />
<text  x="678.62" y="495.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (7 samples, 0.01%)</title><rect x="696.1" y="405" width="0.2" height="15.0" fill="rgb(241,128,9)" rx="2" ry="2" />
<text  x="699.09" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::operator (7 samples, 0.01%)</title><rect x="757.4" y="325" width="0.2" height="15.0" fill="rgb(251,13,36)" rx="2" ry="2" />
<text  x="760.42" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (12 samples, 0.03%)</title><rect x="1154.2" y="485" width="0.3" height="15.0" fill="rgb(238,98,23)" rx="2" ry="2" />
<text  x="1157.22" y="495.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5 samples, 0.01%)</title><rect x="90.9" y="437" width="0.1" height="15.0" fill="rgb(231,226,18)" rx="2" ry="2" />
<text  x="93.86" y="447.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_used (12 samples, 0.03%)</title><rect x="58.9" y="453" width="0.3" height="15.0" fill="rgb(229,84,40)" rx="2" ry="2" />
<text  x="61.92" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::mutation_fragment_merger (106 samples, 0.22%)</title><rect x="444.9" y="277" width="2.7" height="15.0" fill="rgb(244,174,19)" rx="2" ry="2" />
<text  x="447.95" y="287.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (16 samples, 0.03%)</title><rect x="150.7" y="197" width="0.4" height="15.0" fill="rgb(210,170,28)" rx="2" ry="2" />
<text  x="153.69" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="322.0" y="165" width="0.4" height="15.0" fill="rgb(247,132,6)" rx="2" ry="2" />
<text  x="325.00" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::done (8 samples, 0.02%)</title><rect x="683.6" y="453" width="0.2" height="15.0" fill="rgb(251,57,15)" rx="2" ry="2" />
<text  x="686.57" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1176.9" y="421" width="0.2" height="15.0" fill="rgb(228,50,5)" rx="2" ry="2" />
<text  x="1179.86" y="431.5" ></text>
</g>
<g >
<title>[unknown] (185 samples, 0.39%)</title><rect x="10.2" y="597" width="4.7" height="15.0" fill="rgb(211,110,52)" rx="2" ry="2" />
<text  x="13.25" y="607.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="269.1" y="293" width="0.2" height="15.0" fill="rgb(228,85,11)" rx="2" ry="2" />
<text  x="272.15" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;partition_snapshot_read_accounter&amp;&gt; (35 samples, 0.07%)</title><rect x="140.9" y="229" width="0.8" height="15.0" fill="rgb(221,35,45)" rx="2" ry="2" />
<text  x="143.87" y="239.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (12 samples, 0.03%)</title><rect x="51.8" y="469" width="0.3" height="15.0" fill="rgb(241,126,8)" rx="2" ry="2" />
<text  x="54.76" y="479.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (34 samples, 0.07%)</title><rect x="804.1" y="245" width="0.8" height="15.0" fill="rgb(253,83,0)" rx="2" ry="2" />
<text  x="807.10" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::take_value (8 samples, 0.02%)</title><rect x="769.0" y="357" width="0.2" height="15.0" fill="rgb(246,21,22)" rx="2" ry="2" />
<text  x="772.04" y="367.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (19 samples, 0.04%)</title><rect x="467.4" y="277" width="0.4" height="15.0" fill="rgb(221,173,17)" rx="2" ry="2" />
<text  x="470.36" y="287.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (187 samples, 0.40%)</title><rect x="444.0" y="293" width="4.7" height="15.0" fill="rgb(236,212,50)" rx="2" ry="2" />
<text  x="447.05" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (12 samples, 0.03%)</title><rect x="512.2" y="325" width="0.3" height="15.0" fill="rgb(206,40,39)" rx="2" ry="2" />
<text  x="515.24" y="335.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (8 samples, 0.02%)</title><rect x="846.0" y="373" width="0.2" height="15.0" fill="rgb(233,201,7)" rx="2" ry="2" />
<text  x="849.03" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (10 samples, 0.02%)</title><rect x="654.5" y="469" width="0.2" height="15.0" fill="rgb(222,143,16)" rx="2" ry="2" />
<text  x="657.48" y="479.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (10 samples, 0.02%)</title><rect x="1176.9" y="437" width="0.2" height="15.0" fill="rgb(249,82,12)" rx="2" ry="2" />
<text  x="1179.86" y="447.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%)</title><rect x="691.7" y="453" width="0.4" height="15.0" fill="rgb(215,206,0)" rx="2" ry="2" />
<text  x="694.68" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="246.6" y="261" width="0.3" height="15.0" fill="rgb(220,0,13)" rx="2" ry="2" />
<text  x="249.63" y="271.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="22.2" y="325" width="0.2" height="15.0" fill="rgb(254,20,41)" rx="2" ry="2" />
<text  x="25.24" y="335.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser&lt;std::_Mem_fn&lt;std::unique_ptr&lt;cql3::statements::raw::parsed_statement, std::default_delete&lt;cql3::statements::raw::parsed_statement&gt; &gt;  (221 samples, 0.47%)</title><rect x="15.7" y="453" width="5.5" height="15.0" fill="rgb(219,227,50)" rx="2" ry="2" />
<text  x="18.73" y="463.5" ></text>
</g>
<g >
<title>operator new (109 samples, 0.23%)</title><rect x="147.9" y="213" width="2.7" height="15.0" fill="rgb(235,25,54)" rx="2" ry="2" />
<text  x="150.90" y="223.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="524.4" y="245" width="0.1" height="15.0" fill="rgb(205,224,21)" rx="2" ry="2" />
<text  x="527.36" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (9 samples, 0.02%)</title><rect x="306.3" y="181" width="0.2" height="15.0" fill="rgb(225,48,48)" rx="2" ry="2" />
<text  x="309.27" y="191.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="603.6" y="421" width="0.5" height="15.0" fill="rgb(222,204,52)" rx="2" ry="2" />
<text  x="606.62" y="431.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.14%)</title><rect x="320.8" y="181" width="1.6" height="15.0" fill="rgb(207,198,5)" rx="2" ry="2" />
<text  x="323.76" y="191.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (6 samples, 0.01%)</title><rect x="719.4" y="293" width="0.2" height="15.0" fill="rgb(221,143,30)" rx="2" ry="2" />
<text  x="722.40" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (7 samples, 0.01%)</title><rect x="224.4" y="261" width="0.2" height="15.0" fill="rgb(228,47,13)" rx="2" ry="2" />
<text  x="227.39" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;empty_flat_reader, std::default_delete&lt;empty_flat_reader&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="525.3" y="277" width="0.4" height="15.0" fill="rgb(213,174,20)" rx="2" ry="2" />
<text  x="528.30" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (121 samples, 0.26%)</title><rect x="986.8" y="325" width="3.0" height="15.0" fill="rgb(218,198,53)" rx="2" ry="2" />
<text  x="989.75" y="335.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="847.5" y="325" width="0.2" height="15.0" fill="rgb(210,188,15)" rx="2" ry="2" />
<text  x="850.50" y="335.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (5 samples, 0.01%)</title><rect x="18.2" y="309" width="0.1" height="15.0" fill="rgb(248,8,8)" rx="2" ry="2" />
<text  x="21.15" y="319.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::external_memory_usage (18 samples, 0.04%)</title><rect x="199.7" y="117" width="0.4" height="15.0" fill="rgb(225,102,50)" rx="2" ry="2" />
<text  x="202.66" y="127.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (5,759 samples, 12.17%)</title><rect x="112.3" y="341" width="143.6" height="15.0" fill="rgb(249,6,45)" rx="2" ry="2" />
<text  x="115.35" y="351.5" >mutation_fragment_..</text>
</g>
<g >
<title>mutation_reader_merger::operator (18 samples, 0.04%)</title><rect x="864.9" y="453" width="0.5" height="15.0" fill="rgb(236,80,6)" rx="2" ry="2" />
<text  x="867.93" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::disable_abort_on_alloc_failure_temporarily (6 samples, 0.01%)</title><rect x="213.4" y="213" width="0.2" height="15.0" fill="rgb(213,181,38)" rx="2" ry="2" />
<text  x="216.45" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (45 samples, 0.10%)</title><rect x="681.3" y="437" width="1.1" height="15.0" fill="rgb(226,144,24)" rx="2" ry="2" />
<text  x="684.25" y="447.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (140 samples, 0.30%)</title><rect x="837.5" y="405" width="3.5" height="15.0" fill="rgb(233,62,49)" rx="2" ry="2" />
<text  x="840.53" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="645.5" y="469" width="0.2" height="15.0" fill="rgb(208,181,8)" rx="2" ry="2" />
<text  x="648.45" y="479.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="478.2" y="197" width="0.5" height="15.0" fill="rgb(221,178,1)" rx="2" ry="2" />
<text  x="481.23" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::get_promise (9 samples, 0.02%)</title><rect x="960.3" y="389" width="0.3" height="15.0" fill="rgb(209,142,35)" rx="2" ry="2" />
<text  x="963.35" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (79 samples, 0.17%)</title><rect x="1121.3" y="341" width="2.0" height="15.0" fill="rgb(219,171,6)" rx="2" ry="2" />
<text  x="1124.31" y="351.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="909.9" y="325" width="0.6" height="15.0" fill="rgb(240,121,2)" rx="2" ry="2" />
<text  x="912.86" y="335.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (23 samples, 0.05%)</title><rect x="799.5" y="101" width="0.5" height="15.0" fill="rgb(227,145,6)" rx="2" ry="2" />
<text  x="802.46" y="111.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (26 samples, 0.05%)</title><rect x="637.9" y="437" width="0.7" height="15.0" fill="rgb(240,125,32)" rx="2" ry="2" />
<text  x="640.95" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (6 samples, 0.01%)</title><rect x="872.3" y="453" width="0.2" height="15.0" fill="rgb(231,224,41)" rx="2" ry="2" />
<text  x="875.31" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1168.7" y="453" width="0.1" height="15.0" fill="rgb(243,93,5)" rx="2" ry="2" />
<text  x="1171.66" y="463.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::make_temporary (93 samples, 0.20%)</title><rect x="903.7" y="341" width="2.3" height="15.0" fill="rgb(240,124,42)" rx="2" ry="2" />
<text  x="906.65" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (31 samples, 0.07%)</title><rect x="836.3" y="421" width="0.8" height="15.0" fill="rgb(237,36,1)" rx="2" ry="2" />
<text  x="839.33" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.05%)</title><rect x="191.9" y="117" width="0.6" height="15.0" fill="rgb(217,168,10)" rx="2" ry="2" />
<text  x="194.91" y="127.5" ></text>
</g>
<g >
<title>partition_entry::read (66 samples, 0.14%)</title><rect x="508.7" y="309" width="1.6" height="15.0" fill="rgb(254,56,9)" rx="2" ry="2" />
<text  x="511.67" y="319.5" ></text>
</g>
<g >
<title>operator new (10 samples, 0.02%)</title><rect x="485.6" y="309" width="0.3" height="15.0" fill="rgb(225,21,2)" rx="2" ry="2" />
<text  x="488.61" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (37 samples, 0.08%)</title><rect x="1024.1" y="229" width="0.9" height="15.0" fill="rgb(221,57,12)" rx="2" ry="2" />
<text  x="1027.12" y="239.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (165 samples, 0.35%)</title><rect x="403.8" y="309" width="4.1" height="15.0" fill="rgb(230,207,0)" rx="2" ry="2" />
<text  x="406.76" y="319.5" ></text>
</g>
<g >
<title>operator delete (33 samples, 0.07%)</title><rect x="510.5" y="325" width="0.9" height="15.0" fill="rgb(214,170,51)" rx="2" ry="2" />
<text  x="513.54" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::term (26 samples, 0.05%)</title><rect x="19.2" y="309" width="0.7" height="15.0" fill="rgb(240,78,6)" rx="2" ry="2" />
<text  x="22.25" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="443.3" y="309" width="0.2" height="15.0" fill="rgb(222,104,53)" rx="2" ry="2" />
<text  x="446.30" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (6,888 samples, 14.55%)</title><rect x="105.0" y="405" width="171.8" height="15.0" fill="rgb(235,11,30)" rx="2" ry="2" />
<text  x="108.04" y="415.5" >flat_mutation_reader::..</text>
</g>
<g >
<title>cql3::statements::select_statement::get_per_partition_limit (10 samples, 0.02%)</title><rect x="1123.9" y="405" width="0.3" height="15.0" fill="rgb(232,65,4)" rx="2" ry="2" />
<text  x="1126.90" y="415.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (43 samples, 0.09%)</title><rect x="794.3" y="117" width="1.1" height="15.0" fill="rgb(250,221,29)" rx="2" ry="2" />
<text  x="797.35" y="127.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (16 samples, 0.03%)</title><rect x="882.9" y="405" width="0.4" height="15.0" fill="rgb(222,92,8)" rx="2" ry="2" />
<text  x="885.86" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="904.3" y="277" width="0.8" height="15.0" fill="rgb(210,155,25)" rx="2" ry="2" />
<text  x="907.32" y="287.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="285.4" y="245" width="0.5" height="15.0" fill="rgb(217,111,0)" rx="2" ry="2" />
<text  x="288.38" y="255.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="1100.4" y="245" width="0.1" height="15.0" fill="rgb(219,159,40)" rx="2" ry="2" />
<text  x="1103.37" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="411.3" y="357" width="0.2" height="15.0" fill="rgb(233,154,39)" rx="2" ry="2" />
<text  x="414.26" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="729.1" y="389" width="0.1" height="15.0" fill="rgb(212,74,4)" rx="2" ry="2" />
<text  x="732.07" y="399.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;blob_storage&gt; (10 samples, 0.02%)</title><rect x="179.0" y="85" width="0.2" height="15.0" fill="rgb(220,107,28)" rx="2" ry="2" />
<text  x="181.97" y="95.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (39 samples, 0.08%)</title><rect x="822.0" y="293" width="1.0" height="15.0" fill="rgb(222,75,7)" rx="2" ry="2" />
<text  x="825.00" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="39.7" y="453" width="0.3" height="15.0" fill="rgb(213,184,45)" rx="2" ry="2" />
<text  x="42.72" y="463.5" ></text>
</g>
<g >
<title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (16 samples, 0.03%)</title><rect x="14.9" y="613" width="0.4" height="15.0" fill="rgb(235,141,31)" rx="2" ry="2" />
<text  x="17.86" y="623.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (6 samples, 0.01%)</title><rect x="768.7" y="357" width="0.2" height="15.0" fill="rgb(245,23,38)" rx="2" ry="2" />
<text  x="771.74" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="273.2" y="277" width="0.3" height="15.0" fill="rgb(241,113,18)" rx="2" ry="2" />
<text  x="276.24" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (26 samples, 0.05%)</title><rect x="682.4" y="453" width="0.6" height="15.0" fill="rgb(218,62,10)" rx="2" ry="2" />
<text  x="685.38" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%)</title><rect x="930.3" y="341" width="0.2" height="15.0" fill="rgb(232,150,21)" rx="2" ry="2" />
<text  x="933.30" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::query_state&gt;::~shared_ptr_count_for (50 samples, 0.11%)</title><rect x="657.2" y="485" width="1.3" height="15.0" fill="rgb(215,5,42)" rx="2" ry="2" />
<text  x="660.24" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_max_result_size (108 samples, 0.23%)</title><rect x="1136.5" y="421" width="2.7" height="15.0" fill="rgb(242,98,46)" rx="2" ry="2" />
<text  x="1139.50" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (37 samples, 0.08%)</title><rect x="645.9" y="485" width="0.9" height="15.0" fill="rgb(220,86,10)" rx="2" ry="2" />
<text  x="648.88" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (17 samples, 0.04%)</title><rect x="934.9" y="389" width="0.4" height="15.0" fill="rgb(244,74,4)" rx="2" ry="2" />
<text  x="937.87" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="273.7" y="325" width="0.3" height="15.0" fill="rgb(251,58,35)" rx="2" ry="2" />
<text  x="276.73" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (19 samples, 0.04%)</title><rect x="1045.4" y="229" width="0.5" height="15.0" fill="rgb(222,171,8)" rx="2" ry="2" />
<text  x="1048.44" y="239.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache_key::hash (155 samples, 0.33%)</title><rect x="737.1" y="325" width="3.9" height="15.0" fill="rgb(218,66,46)" rx="2" ry="2" />
<text  x="740.13" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (6 samples, 0.01%)</title><rect x="68.3" y="405" width="0.2" height="15.0" fill="rgb(235,19,46)" rx="2" ry="2" />
<text  x="71.32" y="415.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.04%)</title><rect x="738.7" y="261" width="0.4" height="15.0" fill="rgb(252,59,8)" rx="2" ry="2" />
<text  x="741.70" y="271.5" ></text>
</g>
<g >
<title>validation::validate_keyspace (97 samples, 0.20%)</title><rect x="824.6" y="373" width="2.4" height="15.0" fill="rgb(232,3,5)" rx="2" ry="2" />
<text  x="827.57" y="383.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::snitch_instance (6 samples, 0.01%)</title><rect x="1101.4" y="293" width="0.2" height="15.0" fill="rgb(241,218,33)" rx="2" ry="2" />
<text  x="1104.42" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="125.8" y="245" width="0.2" height="15.0" fill="rgb(215,110,25)" rx="2" ry="2" />
<text  x="128.76" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="282.2" y="277" width="0.7" height="15.0" fill="rgb(224,83,5)" rx="2" ry="2" />
<text  x="285.24" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar12continuationINS_8internal22promise_base_with_typeIvEEZNS_6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14discard_resultEvEUlDpOT_E_ZNSA_14then_impl_nrvoISE_NS4_IvEEEET0_OT_EUlOS3_RSE_ONS_12future_stateIS9_EEE_S9_E15run_and_disposeEv (458 samples, 0.97%)</title><rect x="30.0" y="501" width="11.4" height="15.0" fill="rgb(231,172,17)" rx="2" ry="2" />
<text  x="32.97" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (15 samples, 0.03%)</title><rect x="1024.7" y="197" width="0.3" height="15.0" fill="rgb(238,165,11)" rx="2" ry="2" />
<text  x="1027.67" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="835.9" y="437" width="0.3" height="15.0" fill="rgb(221,150,20)" rx="2" ry="2" />
<text  x="838.89" y="447.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (6 samples, 0.01%)</title><rect x="618.3" y="501" width="0.1" height="15.0" fill="rgb(214,187,45)" rx="2" ry="2" />
<text  x="621.28" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::allocate_large (6 samples, 0.01%)</title><rect x="539.8" y="293" width="0.1" height="15.0" fill="rgb(243,159,6)" rx="2" ry="2" />
<text  x="542.76" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="601.0" y="405" width="0.4" height="15.0" fill="rgb(226,93,10)" rx="2" ry="2" />
<text  x="604.02" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt;::then_impl&lt;query::querier&lt; (27 samples, 0.06%)</title><rect x="531.9" y="421" width="0.7" height="15.0" fill="rgb(225,149,0)" rx="2" ry="2" />
<text  x="534.93" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (13 samples, 0.03%)</title><rect x="413.9" y="389" width="0.3" height="15.0" fill="rgb(245,226,20)" rx="2" ry="2" />
<text  x="416.90" y="399.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (10 samples, 0.02%)</title><rect x="239.9" y="213" width="0.2" height="15.0" fill="rgb(227,73,21)" rx="2" ry="2" />
<text  x="242.85" y="223.5" ></text>
</g>
<g >
<title>db::block_for (7 samples, 0.01%)</title><rect x="1069.5" y="341" width="0.2" height="15.0" fill="rgb(238,65,27)" rx="2" ry="2" />
<text  x="1072.50" y="351.5" ></text>
</g>
<g >
<title>locator::i_endpoint_snitch::get_local_snitch_ptr (8 samples, 0.02%)</title><rect x="1101.4" y="309" width="0.2" height="15.0" fill="rgb(246,113,52)" rx="2" ry="2" />
<text  x="1104.37" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (6 samples, 0.01%)</title><rect x="1107.8" y="373" width="0.2" height="15.0" fill="rgb(206,62,48)" rx="2" ry="2" />
<text  x="1110.82" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (9 samples, 0.02%)</title><rect x="1081.3" y="325" width="0.3" height="15.0" fill="rgb(237,154,12)" rx="2" ry="2" />
<text  x="1084.34" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="627.1" y="485" width="0.1" height="15.0" fill="rgb(250,88,8)" rx="2" ry="2" />
<text  x="630.10" y="495.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_permit_inactive (6 samples, 0.01%)</title><rect x="1031.0" y="197" width="0.2" height="15.0" fill="rgb(223,138,54)" rx="2" ry="2" />
<text  x="1034.03" y="207.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_Move_ctor_base (7 samples, 0.01%)</title><rect x="888.4" y="309" width="0.2" height="15.0" fill="rgb(237,181,13)" rx="2" ry="2" />
<text  x="891.44" y="319.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="771.6" y="309" width="0.3" height="15.0" fill="rgb(254,210,34)" rx="2" ry="2" />
<text  x="774.56" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (7 samples, 0.01%)</title><rect x="691.2" y="453" width="0.1" height="15.0" fill="rgb(242,183,3)" rx="2" ry="2" />
<text  x="694.15" y="463.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="865.1" y="405" width="0.3" height="15.0" fill="rgb(205,125,32)" rx="2" ry="2" />
<text  x="868.11" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (10 samples, 0.02%)</title><rect x="640.1" y="405" width="0.3" height="15.0" fill="rgb(227,102,44)" rx="2" ry="2" />
<text  x="643.12" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (8 samples, 0.02%)</title><rect x="593.0" y="421" width="0.2" height="15.0" fill="rgb(236,144,37)" rx="2" ry="2" />
<text  x="595.99" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_check_len (8 samples, 0.02%)</title><rect x="853.3" y="357" width="0.2" height="15.0" fill="rgb(239,119,31)" rx="2" ry="2" />
<text  x="856.34" y="367.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (21 samples, 0.04%)</title><rect x="162.9" y="133" width="0.6" height="15.0" fill="rgb(218,149,37)" rx="2" ry="2" />
<text  x="165.94" y="143.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::drop_expired_front (25 samples, 0.05%)</title><rect x="64.3" y="405" width="0.6" height="15.0" fill="rgb(234,113,15)" rx="2" ry="2" />
<text  x="67.28" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (13 samples, 0.03%)</title><rect x="1013.5" y="261" width="0.3" height="15.0" fill="rgb(238,11,3)" rx="2" ry="2" />
<text  x="1016.45" y="271.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (340 samples, 0.72%)</title><rect x="791.7" y="181" width="8.4" height="15.0" fill="rgb(242,142,6)" rx="2" ry="2" />
<text  x="794.66" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (47 samples, 0.10%)</title><rect x="1168.8" y="485" width="1.2" height="15.0" fill="rgb(222,189,26)" rx="2" ry="2" />
<text  x="1171.81" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (32 samples, 0.07%)</title><rect x="935.8" y="405" width="0.8" height="15.0" fill="rgb(239,208,52)" rx="2" ry="2" />
<text  x="938.79" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (126 samples, 0.27%)</title><rect x="555.3" y="293" width="3.2" height="15.0" fill="rgb(213,229,18)" rx="2" ry="2" />
<text  x="558.32" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash (80 samples, 0.17%)</title><rect x="1159.7" y="437" width="2.0" height="15.0" fill="rgb(254,176,43)" rx="2" ry="2" />
<text  x="1162.71" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::update_statement::add_update_for_key (19 samples, 0.04%)</title><rect x="866.1" y="357" width="0.4" height="15.0" fill="rgb(215,43,1)" rx="2" ry="2" />
<text  x="869.05" y="367.5" ></text>
</g>
<g >
<title>service::client_state::has_access (8 samples, 0.02%)</title><rect x="22.2" y="437" width="0.2" height="15.0" fill="rgb(223,227,9)" rx="2" ry="2" />
<text  x="25.17" y="447.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="447.6" y="277" width="0.3" height="15.0" fill="rgb(249,31,54)" rx="2" ry="2" />
<text  x="450.59" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (101 samples, 0.21%)</title><rect x="334.7" y="165" width="2.5" height="15.0" fill="rgb(228,185,35)" rx="2" ry="2" />
<text  x="337.69" y="175.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.02%)</title><rect x="22.5" y="517" width="0.3" height="15.0" fill="rgb(251,42,45)" rx="2" ry="2" />
<text  x="25.54" y="527.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (6 samples, 0.01%)</title><rect x="712.7" y="453" width="0.2" height="15.0" fill="rgb(212,135,36)" rx="2" ry="2" />
<text  x="715.74" y="463.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (17 samples, 0.04%)</title><rect x="675.0" y="341" width="0.4" height="15.0" fill="rgb(211,116,14)" rx="2" ry="2" />
<text  x="677.97" y="351.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%)</title><rect x="792.9" y="117" width="0.1" height="15.0" fill="rgb(230,151,29)" rx="2" ry="2" />
<text  x="795.88" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (64 samples, 0.14%)</title><rect x="841.4" y="405" width="1.6" height="15.0" fill="rgb(248,134,15)" rx="2" ry="2" />
<text  x="844.45" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (7 samples, 0.01%)</title><rect x="243.0" y="277" width="0.1" height="15.0" fill="rgb(222,226,54)" rx="2" ry="2" />
<text  x="245.97" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="246.9" y="277" width="0.4" height="15.0" fill="rgb(217,180,30)" rx="2" ry="2" />
<text  x="249.93" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (49 samples, 0.10%)</title><rect x="69.8" y="373" width="1.3" height="15.0" fill="rgb(226,220,51)" rx="2" ry="2" />
<text  x="72.84" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1124.0" y="389" width="0.1" height="15.0" fill="rgb(237,191,28)" rx="2" ry="2" />
<text  x="1127.00" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;seastar::semaphore_units&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt; &gt;::dispose (5 samples, 0.01%)</title><rect x="658.3" y="469" width="0.1" height="15.0" fill="rgb(249,32,14)" rx="2" ry="2" />
<text  x="661.27" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="674.9" y="453" width="0.6" height="15.0" fill="rgb(250,201,36)" rx="2" ry="2" />
<text  x="677.95" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (13 samples, 0.03%)</title><rect x="673.2" y="437" width="0.3" height="15.0" fill="rgb(227,190,12)" rx="2" ry="2" />
<text  x="676.18" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (48 samples, 0.10%)</title><rect x="949.2" y="389" width="1.2" height="15.0" fill="rgb(231,24,8)" rx="2" ry="2" />
<text  x="952.18" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (71 samples, 0.15%)</title><rect x="496.8" y="229" width="1.8" height="15.0" fill="rgb(234,50,21)" rx="2" ry="2" />
<text  x="499.83" y="239.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (5 samples, 0.01%)</title><rect x="1102.5" y="309" width="0.2" height="15.0" fill="rgb(254,176,16)" rx="2" ry="2" />
<text  x="1105.54" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (19 samples, 0.04%)</title><rect x="1030.6" y="165" width="0.4" height="15.0" fill="rgb(221,28,49)" rx="2" ry="2" />
<text  x="1033.56" y="175.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (6 samples, 0.01%)</title><rect x="157.6" y="197" width="0.1" height="15.0" fill="rgb(219,203,33)" rx="2" ry="2" />
<text  x="160.60" y="207.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (31 samples, 0.07%)</title><rect x="139.8" y="245" width="0.8" height="15.0" fill="rgb(211,154,18)" rx="2" ry="2" />
<text  x="142.85" y="255.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%)</title><rect x="440.8" y="293" width="0.2" height="15.0" fill="rgb(239,161,18)" rx="2" ry="2" />
<text  x="443.83" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="285.8" y="229" width="0.1" height="15.0" fill="rgb(207,169,26)" rx="2" ry="2" />
<text  x="288.75" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="596.3" y="437" width="0.2" height="15.0" fill="rgb(253,142,22)" rx="2" ry="2" />
<text  x="599.31" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="1143.1" y="453" width="0.2" height="15.0" fill="rgb(209,227,33)" rx="2" ry="2" />
<text  x="1146.05" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="844.2" y="389" width="0.9" height="15.0" fill="rgb(219,63,25)" rx="2" ry="2" />
<text  x="847.16" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (10 samples, 0.02%)</title><rect x="361.3" y="165" width="0.3" height="15.0" fill="rgb(205,155,14)" rx="2" ry="2" />
<text  x="364.35" y="175.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (7 samples, 0.01%)</title><rect x="504.4" y="229" width="0.2" height="15.0" fill="rgb(211,82,39)" rx="2" ry="2" />
<text  x="507.41" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (11 samples, 0.02%)</title><rect x="819.6" y="293" width="0.3" height="15.0" fill="rgb(221,52,32)" rx="2" ry="2" />
<text  x="822.63" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (251 samples, 0.53%)</title><rect x="126.1" y="261" width="6.2" height="15.0" fill="rgb(224,191,22)" rx="2" ry="2" />
<text  x="129.06" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (18 samples, 0.04%)</title><rect x="1037.1" y="197" width="0.4" height="15.0" fill="rgb(234,70,13)" rx="2" ry="2" />
<text  x="1040.09" y="207.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,782 samples, 14.33%)</title><rect x="106.5" y="389" width="169.1" height="15.0" fill="rgb(216,20,37)" rx="2" ry="2" />
<text  x="109.46" y="399.5" >merging_reader&lt;mutati..</text>
</g>
<g >
<title>std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt;::operator (11 samples, 0.02%)</title><rect x="578.2" y="405" width="0.2" height="15.0" fill="rgb(220,43,8)" rx="2" ry="2" />
<text  x="581.16" y="415.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="629.6" y="485" width="0.4" height="15.0" fill="rgb(224,143,16)" rx="2" ry="2" />
<text  x="632.57" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mHEXNUMBER (18 samples, 0.04%)</title><rect x="16.8" y="261" width="0.4" height="15.0" fill="rgb(214,148,47)" rx="2" ry="2" />
<text  x="19.78" y="271.5" ></text>
</g>
<g >
<title>__dynamic_cast (10 samples, 0.02%)</title><rect x="12.4" y="581" width="0.2" height="15.0" fill="rgb(224,22,32)" rx="2" ry="2" />
<text  x="15.37" y="591.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (10 samples, 0.02%)</title><rect x="948.9" y="357" width="0.3" height="15.0" fill="rgb(246,171,10)" rx="2" ry="2" />
<text  x="951.93" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (9 samples, 0.02%)</title><rect x="810.1" y="325" width="0.2" height="15.0" fill="rgb(252,48,52)" rx="2" ry="2" />
<text  x="813.11" y="335.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (19 samples, 0.04%)</title><rect x="945.9" y="405" width="0.5" height="15.0" fill="rgb(227,166,9)" rx="2" ry="2" />
<text  x="948.94" y="415.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="484.5" y="293" width="0.9" height="15.0" fill="rgb(220,1,38)" rx="2" ry="2" />
<text  x="487.49" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (32 samples, 0.07%)</title><rect x="763.5" y="341" width="0.8" height="15.0" fill="rgb(205,86,45)" rx="2" ry="2" />
<text  x="766.48" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relationType (6 samples, 0.01%)</title><rect x="20.2" y="325" width="0.1" height="15.0" fill="rgb(227,96,39)" rx="2" ry="2" />
<text  x="23.20" y="335.5" ></text>
</g>
<g >
<title>__start_context (288 samples, 0.61%)</title><rect x="15.3" y="613" width="7.2" height="15.0" fill="rgb(249,167,52)" rx="2" ry="2" />
<text  x="18.29" y="623.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (81 samples, 0.17%)</title><rect x="142.9" y="197" width="2.0" height="15.0" fill="rgb(220,11,48)" rx="2" ry="2" />
<text  x="145.91" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (689 samples, 1.46%)</title><rect x="364.9" y="181" width="17.2" height="15.0" fill="rgb(217,170,34)" rx="2" ry="2" />
<text  x="367.91" y="191.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (45 samples, 0.10%)</title><rect x="735.9" y="309" width="1.2" height="15.0" fill="rgb(235,221,0)" rx="2" ry="2" />
<text  x="738.93" y="319.5" ></text>
</g>
<g >
<title>database::find_schema (71 samples, 0.15%)</title><rect x="818.1" y="357" width="1.8" height="15.0" fill="rgb(212,180,1)" rx="2" ry="2" />
<text  x="821.13" y="367.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (7 samples, 0.01%)</title><rect x="1177.3" y="485" width="0.2" height="15.0" fill="rgb(217,27,54)" rx="2" ry="2" />
<text  x="1180.28" y="495.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (14 samples, 0.03%)</title><rect x="675.0" y="309" width="0.4" height="15.0" fill="rgb(215,141,24)" rx="2" ry="2" />
<text  x="678.02" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (267 samples, 0.56%)</title><rect x="472.7" y="229" width="6.7" height="15.0" fill="rgb(213,70,27)" rx="2" ry="2" />
<text  x="475.72" y="239.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (44 samples, 0.09%)</title><rect x="293.4" y="213" width="1.1" height="15.0" fill="rgb(223,207,20)" rx="2" ry="2" />
<text  x="296.43" y="223.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="73.5" y="453" width="0.1" height="15.0" fill="rgb(211,113,48)" rx="2" ry="2" />
<text  x="76.45" y="463.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.01%)</title><rect x="274.0" y="357" width="0.2" height="15.0" fill="rgb(222,40,28)" rx="2" ry="2" />
<text  x="277.03" y="367.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (5 samples, 0.01%)</title><rect x="826.0" y="277" width="0.1" height="15.0" fill="rgb(227,109,19)" rx="2" ry="2" />
<text  x="829.01" y="287.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (42 samples, 0.09%)</title><rect x="1045.9" y="261" width="1.1" height="15.0" fill="rgb(217,222,46)" rx="2" ry="2" />
<text  x="1048.92" y="271.5" ></text>
</g>
<g >
<title>database::find_uuid (224 samples, 0.47%)</title><rect x="752.4" y="389" width="5.6" height="15.0" fill="rgb(209,185,52)" rx="2" ry="2" />
<text  x="755.39" y="399.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (9 samples, 0.02%)</title><rect x="298.6" y="197" width="0.2" height="15.0" fill="rgb(223,175,53)" rx="2" ry="2" />
<text  x="301.57" y="207.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (114 samples, 0.24%)</title><rect x="269.3" y="293" width="2.9" height="15.0" fill="rgb(226,102,13)" rx="2" ry="2" />
<text  x="272.32" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (14 samples, 0.03%)</title><rect x="540.3" y="389" width="0.4" height="15.0" fill="rgb(242,136,15)" rx="2" ry="2" />
<text  x="543.34" y="399.5" ></text>
</g>
<g >
<title>make_flat_mutation_reader&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (108 samples, 0.23%)</title><rect x="523.0" y="293" width="2.7" height="15.0" fill="rgb(230,127,9)" rx="2" ry="2" />
<text  x="525.96" y="303.5" ></text>
</g>
<g >
<title>service::client_state::get_timestamp (16 samples, 0.03%)</title><rect x="1136.1" y="421" width="0.4" height="15.0" fill="rgb(250,200,12)" rx="2" ry="2" />
<text  x="1139.10" y="431.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt; &gt;::invoke&lt;service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1144.6" y="277" width="0.3" height="15.0" fill="rgb(220,103,53)" rx="2" ry="2" />
<text  x="1147.65" y="287.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIN5utils15timestamped_valINS_11checked_ptrINS_8weak_ptrIN4cql310statements18prepared_statementEEENS_25default_null_deref_actionEEENS5_40authorized_prepared_statements_cache_keyENS5_41authorized_prepared_statements_cache_sizeESt4hashISB_ESt8equal_toISB_ENS5_36authorized_prepared_statements_cache50authorized_prepared_statements_cache_stats_updaterEE9value_ptrEE9then_implIZNSL_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (8 samples, 0.02%)</title><rect x="727.7" y="389" width="0.2" height="15.0" fill="rgb(214,121,31)" rx="2" ry="2" />
<text  x="730.70" y="399.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="447.9" y="277" width="0.3" height="15.0" fill="rgb(216,147,7)" rx="2" ry="2" />
<text  x="450.91" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (72 samples, 0.15%)</title><rect x="1052.9" y="229" width="1.8" height="15.0" fill="rgb(238,195,36)" rx="2" ry="2" />
<text  x="1055.87" y="239.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextToken (57 samples, 0.12%)</title><rect x="16.3" y="293" width="1.5" height="15.0" fill="rgb(228,156,29)" rx="2" ry="2" />
<text  x="19.33" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="689.4" y="469" width="0.1" height="15.0" fill="rgb(248,37,8)" rx="2" ry="2" />
<text  x="692.41" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (30 samples, 0.06%)</title><rect x="116.0" y="309" width="0.8" height="15.0" fill="rgb(232,109,20)" rx="2" ry="2" />
<text  x="119.04" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="406.8" y="245" width="0.1" height="15.0" fill="rgb(228,15,42)" rx="2" ry="2" />
<text  x="409.77" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (9 samples, 0.02%)</title><rect x="506.9" y="293" width="0.3" height="15.0" fill="rgb(252,104,11)" rx="2" ry="2" />
<text  x="509.93" y="303.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (28 samples, 0.06%)</title><rect x="222.7" y="245" width="0.7" height="15.0" fill="rgb(253,3,30)" rx="2" ry="2" />
<text  x="225.70" y="255.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (6 samples, 0.01%)</title><rect x="1039.1" y="213" width="0.2" height="15.0" fill="rgb(221,140,37)" rx="2" ry="2" />
<text  x="1042.11" y="223.5" ></text>
</g>
<g >
<title>partition_key::legacy_tri_compare (313 samples, 0.66%)</title><rect x="471.6" y="261" width="7.8" height="15.0" fill="rgb(227,181,32)" rx="2" ry="2" />
<text  x="474.57" y="271.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (8 samples, 0.02%)</title><rect x="22.2" y="421" width="0.2" height="15.0" fill="rgb(236,157,26)" rx="2" ry="2" />
<text  x="25.17" y="431.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::free (11 samples, 0.02%)</title><rect x="396.4" y="197" width="0.3" height="15.0" fill="rgb(232,159,38)" rx="2" ry="2" />
<text  x="399.38" y="207.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (72 samples, 0.15%)</title><rect x="252.6" y="325" width="1.8" height="15.0" fill="rgb(235,209,2)" rx="2" ry="2" />
<text  x="255.62" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="529.6" y="389" width="0.7" height="15.0" fill="rgb(235,2,22)" rx="2" ry="2" />
<text  x="532.64" y="399.5" ></text>
</g>
<g >
<title>operator new (69 samples, 0.15%)</title><rect x="708.7" y="421" width="1.7" height="15.0" fill="rgb(212,23,34)" rx="2" ry="2" />
<text  x="711.71" y="431.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (36 samples, 0.08%)</title><rect x="378.7" y="165" width="0.9" height="15.0" fill="rgb(226,217,11)" rx="2" ry="2" />
<text  x="381.68" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (220 samples, 0.46%)</title><rect x="206.4" y="181" width="5.5" height="15.0" fill="rgb(210,145,46)" rx="2" ry="2" />
<text  x="209.39" y="191.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (12 samples, 0.03%)</title><rect x="792.7" y="133" width="0.3" height="15.0" fill="rgb(226,59,35)" rx="2" ry="2" />
<text  x="795.70" y="143.5" ></text>
</g>
<g >
<title>dht::ring_position_comparator::operator (456 samples, 0.96%)</title><rect x="468.4" y="293" width="11.3" height="15.0" fill="rgb(251,147,15)" rx="2" ry="2" />
<text  x="471.36" y="303.5" ></text>
</g>
<g >
<title>partition_version_ref::operator (8 samples, 0.02%)</title><rect x="504.2" y="229" width="0.2" height="15.0" fill="rgb(241,23,38)" rx="2" ry="2" />
<text  x="507.21" y="239.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (10 samples, 0.02%)</title><rect x="449.2" y="325" width="0.3" height="15.0" fill="rgb(240,89,20)" rx="2" ry="2" />
<text  x="452.23" y="335.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="20.2" y="309" width="0.1" height="15.0" fill="rgb(253,135,4)" rx="2" ry="2" />
<text  x="23.22" y="319.5" ></text>
</g>
<g >
<title>mutation_reader_merger::close (754 samples, 1.59%)</title><rect x="543.3" y="373" width="18.8" height="15.0" fill="rgb(211,195,48)" rx="2" ry="2" />
<text  x="546.28" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (37 samples, 0.08%)</title><rect x="118.9" y="293" width="0.9" height="15.0" fill="rgb(239,134,15)" rx="2" ry="2" />
<text  x="121.90" y="303.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (36 samples, 0.08%)</title><rect x="457.6" y="277" width="0.9" height="15.0" fill="rgb(237,174,44)" rx="2" ry="2" />
<text  x="460.61" y="287.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (55 samples, 0.12%)</title><rect x="59.5" y="437" width="1.4" height="15.0" fill="rgb(231,9,38)" rx="2" ry="2" />
<text  x="62.52" y="447.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.03%)</title><rect x="473.1" y="213" width="0.3" height="15.0" fill="rgb(218,176,7)" rx="2" ry="2" />
<text  x="476.14" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="1129.2" y="405" width="0.4" height="15.0" fill="rgb(210,220,14)" rx="2" ry="2" />
<text  x="1132.21" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (20 samples, 0.04%)</title><rect x="675.0" y="357" width="0.5" height="15.0" fill="rgb(231,224,33)" rx="2" ry="2" />
<text  x="677.97" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="341.3" y="165" width="0.2" height="15.0" fill="rgb(253,215,2)" rx="2" ry="2" />
<text  x="344.28" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;schema_registry_entry&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (44 samples, 0.09%)</title><rect x="979.1" y="309" width="1.1" height="15.0" fill="rgb(244,152,15)" rx="2" ry="2" />
<text  x="982.12" y="319.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (16 samples, 0.03%)</title><rect x="550.7" y="277" width="0.4" height="15.0" fill="rgb(209,71,5)" rx="2" ry="2" />
<text  x="553.71" y="287.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (2,517 samples, 5.32%)</title><rect x="450.6" y="341" width="62.8" height="15.0" fill="rgb(216,161,29)" rx="2" ry="2" />
<text  x="453.63" y="351.5" >memtab..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (7 samples, 0.01%)</title><rect x="670.9" y="453" width="0.1" height="15.0" fill="rgb(223,40,25)" rx="2" ry="2" />
<text  x="673.86" y="463.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::operator (76 samples, 0.16%)</title><rect x="124.1" y="261" width="1.9" height="15.0" fill="rgb(243,174,17)" rx="2" ry="2" />
<text  x="127.12" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="44.3" y="485" width="0.4" height="15.0" fill="rgb(246,165,11)" rx="2" ry="2" />
<text  x="47.33" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (14 samples, 0.03%)</title><rect x="651.7" y="437" width="0.4" height="15.0" fill="rgb(207,217,42)" rx="2" ry="2" />
<text  x="654.71" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::need_filtering (125 samples, 0.26%)</title><rect x="636.5" y="469" width="3.1" height="15.0" fill="rgb(211,156,52)" rx="2" ry="2" />
<text  x="639.45" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (22 samples, 0.05%)</title><rect x="763.7" y="325" width="0.6" height="15.0" fill="rgb(216,213,37)" rx="2" ry="2" />
<text  x="766.73" y="335.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (7 samples, 0.01%)</title><rect x="1110.9" y="389" width="0.2" height="15.0" fill="rgb(232,121,6)" rx="2" ry="2" />
<text  x="1113.89" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (87 samples, 0.18%)</title><rect x="802.8" y="261" width="2.2" height="15.0" fill="rgb(246,209,26)" rx="2" ry="2" />
<text  x="805.80" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (65 samples, 0.14%)</title><rect x="651.2" y="453" width="1.7" height="15.0" fill="rgb(227,140,48)" rx="2" ry="2" />
<text  x="654.24" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="1075.2" y="325" width="0.1" height="15.0" fill="rgb(252,84,42)" rx="2" ry="2" />
<text  x="1078.19" y="335.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (56 samples, 0.12%)</title><rect x="69.7" y="389" width="1.4" height="15.0" fill="rgb(252,100,6)" rx="2" ry="2" />
<text  x="72.66" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (36 samples, 0.08%)</title><rect x="670.6" y="469" width="0.9" height="15.0" fill="rgb(231,9,26)" rx="2" ry="2" />
<text  x="673.63" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (74 samples, 0.16%)</title><rect x="1040.9" y="197" width="1.8" height="15.0" fill="rgb(213,54,17)" rx="2" ry="2" />
<text  x="1043.88" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="260.1" y="309" width="0.2" height="15.0" fill="rgb(245,173,26)" rx="2" ry="2" />
<text  x="263.15" y="319.5" ></text>
</g>
<g >
<title>_ZSt13__invoke_implISt10unique_ptrIN7seastar8internal13do_with_stateISt5tupleIJN20flat_mutation_reader4impl16consumer_adapterI35stable_flattened_mutations_consumerI17compact_for_queryIL19emit_only_live_rows1EN5query27clustering_position_trackerI20query_result_builderEEEEEEEENS1_6futureIvEEEESt14default_deleteISL_EEZNS2_12do_with_implISH_ZNS6_7consumeISG_EEDaT_EUlRSH_E_JEEEDaOSR_OT0_DpOT1_EUlDpOT_E_JSH_EESR_St14__invoke_otherSW_SZ_ (45 samples, 0.10%)</title><rect x="282.1" y="309" width="1.1" height="15.0" fill="rgb(243,166,28)" rx="2" ry="2" />
<text  x="285.06" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="618.0" y="453" width="0.1" height="15.0" fill="rgb(243,152,37)" rx="2" ry="2" />
<text  x="621.00" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, std::allocator&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="41.2" y="469" width="0.2" height="15.0" fill="rgb(227,148,52)" rx="2" ry="2" />
<text  x="44.24" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (18 samples, 0.04%)</title><rect x="647.2" y="469" width="0.4" height="15.0" fill="rgb(234,115,18)" rx="2" ry="2" />
<text  x="650.17" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (39 samples, 0.08%)</title><rect x="210.0" y="133" width="1.0" height="15.0" fill="rgb(232,163,21)" rx="2" ry="2" />
<text  x="212.98" y="143.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (84 samples, 0.18%)</title><rect x="387.0" y="229" width="2.1" height="15.0" fill="rgb(209,154,44)" rx="2" ry="2" />
<text  x="389.98" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;service::storage_proxy_coordinator_query_result&gt;::promise_type::run_and_dispose (11 samples, 0.02%)</title><rect x="24.4" y="517" width="0.3" height="15.0" fill="rgb(219,198,29)" rx="2" ry="2" />
<text  x="27.44" y="527.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::weed_from_slot&lt;row::remove_if&lt;row::compact_and_expire (777 samples, 1.64%)</title><rect x="363.1" y="197" width="19.4" height="15.0" fill="rgb(216,91,26)" rx="2" ry="2" />
<text  x="366.09" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="610.0" y="437" width="0.1" height="15.0" fill="rgb(241,209,23)" rx="2" ry="2" />
<text  x="613.02" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,306 samples, 4.87%)</title><rect x="156.1" y="229" width="57.5" height="15.0" fill="rgb(240,22,20)" rx="2" ry="2" />
<text  x="159.10" y="239.5" >partit..</text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (13 samples, 0.03%)</title><rect x="1056.4" y="277" width="0.3" height="15.0" fill="rgb(244,135,45)" rx="2" ry="2" />
<text  x="1059.39" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (20 samples, 0.04%)</title><rect x="793.8" y="117" width="0.5" height="15.0" fill="rgb(208,209,24)" rx="2" ry="2" />
<text  x="796.85" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::~vector (34 samples, 0.07%)</title><rect x="662.2" y="453" width="0.9" height="15.0" fill="rgb(242,35,42)" rx="2" ry="2" />
<text  x="665.23" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="983.3" y="357" width="0.3" height="15.0" fill="rgb(222,22,26)" rx="2" ry="2" />
<text  x="986.34" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="638.8" y="405" width="0.1" height="15.0" fill="rgb(226,162,7)" rx="2" ry="2" />
<text  x="641.82" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="1147.4" y="501" width="0.1" height="15.0" fill="rgb(235,151,24)" rx="2" ry="2" />
<text  x="1150.42" y="511.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="390.7" y="229" width="0.1" height="15.0" fill="rgb(254,148,50)" rx="2" ry="2" />
<text  x="393.67" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="895.9" y="261" width="0.2" height="15.0" fill="rgb(232,88,45)" rx="2" ry="2" />
<text  x="898.87" y="271.5" ></text>
</g>
<g >
<title>database::apply_in_memory (28 samples, 0.06%)</title><rect x="1143.3" y="293" width="0.7" height="15.0" fill="rgb(242,65,13)" rx="2" ry="2" />
<text  x="1146.30" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (211 samples, 0.45%)</title><rect x="752.5" y="373" width="5.2" height="15.0" fill="rgb(240,11,2)" rx="2" ry="2" />
<text  x="755.46" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (6 samples, 0.01%)</title><rect x="647.2" y="453" width="0.2" height="15.0" fill="rgb(211,93,48)" rx="2" ry="2" />
<text  x="650.25" y="463.5" ></text>
</g>
<g >
<title>make_random_seq (5 samples, 0.01%)</title><rect x="710.8" y="469" width="0.1" height="15.0" fill="rgb(210,84,3)" rx="2" ry="2" />
<text  x="713.80" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (17 samples, 0.04%)</title><rect x="613.5" y="469" width="0.4" height="15.0" fill="rgb(223,1,51)" rx="2" ry="2" />
<text  x="616.49" y="479.5" ></text>
</g>
<g >
<title>__tls_init (11 samples, 0.02%)</title><rect x="482.4" y="293" width="0.2" height="15.0" fill="rgb(231,48,14)" rx="2" ry="2" />
<text  x="485.37" y="303.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (71 samples, 0.15%)</title><rect x="16.1" y="373" width="1.8" height="15.0" fill="rgb(251,122,3)" rx="2" ry="2" />
<text  x="19.08" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%)</title><rect x="205.1" y="133" width="0.2" height="15.0" fill="rgb(242,130,3)" rx="2" ry="2" />
<text  x="208.07" y="143.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (5 samples, 0.01%)</title><rect x="503.6" y="229" width="0.1" height="15.0" fill="rgb(240,221,8)" rx="2" ry="2" />
<text  x="506.59" y="239.5" ></text>
</g>
<g >
<title>cql3::raw_value::make_value (20 samples, 0.04%)</title><rect x="900.7" y="293" width="0.5" height="15.0" fill="rgb(218,187,18)" rx="2" ry="2" />
<text  x="903.71" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (15 samples, 0.03%)</title><rect x="934.9" y="373" width="0.4" height="15.0" fill="rgb(233,138,15)" rx="2" ry="2" />
<text  x="937.92" y="383.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (14 samples, 0.03%)</title><rect x="1083.4" y="309" width="0.4" height="15.0" fill="rgb(210,78,54)" rx="2" ry="2" />
<text  x="1086.41" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (93 samples, 0.20%)</title><rect x="797.7" y="133" width="2.3" height="15.0" fill="rgb(236,194,15)" rx="2" ry="2" />
<text  x="800.71" y="143.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (10 samples, 0.02%)</title><rect x="569.3" y="341" width="0.3" height="15.0" fill="rgb(209,86,1)" rx="2" ry="2" />
<text  x="572.33" y="351.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (5 samples, 0.01%)</title><rect x="18.2" y="325" width="0.1" height="15.0" fill="rgb(229,73,23)" rx="2" ry="2" />
<text  x="21.15" y="335.5" ></text>
</g>
<g >
<title>double_decker&lt;long, cache_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (5 samples, 0.01%)</title><rect x="515.3" y="325" width="0.1" height="15.0" fill="rgb(234,180,53)" rx="2" ry="2" />
<text  x="518.28" y="335.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check (15 samples, 0.03%)</title><rect x="294.6" y="213" width="0.3" height="15.0" fill="rgb(208,210,30)" rx="2" ry="2" />
<text  x="297.55" y="223.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (49 samples, 0.10%)</title><rect x="926.1" y="325" width="1.2" height="15.0" fill="rgb(239,212,20)" rx="2" ry="2" />
<text  x="929.09" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;gms::inet_address, std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, table::cache_hit_rate&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (60 samples, 0.13%)</title><rect x="697.8" y="437" width="1.5" height="15.0" fill="rgb(236,227,40)" rx="2" ry="2" />
<text  x="700.81" y="447.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (72 samples, 0.15%)</title><rect x="832.2" y="405" width="1.8" height="15.0" fill="rgb(210,205,17)" rx="2" ry="2" />
<text  x="835.22" y="415.5" ></text>
</g>
<g >
<title>cql3::authorized_prepared_statements_cache::insert (565 samples, 1.19%)</title><rect x="727.1" y="405" width="14.0" height="15.0" fill="rgb(222,96,52)" rx="2" ry="2" />
<text  x="730.06" y="415.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (8 samples, 0.02%)</title><rect x="853.5" y="405" width="0.2" height="15.0" fill="rgb(214,73,40)" rx="2" ry="2" />
<text  x="856.54" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::entry::entry (43 samples, 0.09%)</title><rect x="1030.0" y="197" width="1.0" height="15.0" fill="rgb(222,117,15)" rx="2" ry="2" />
<text  x="1032.96" y="207.5" ></text>
</g>
<g >
<title>operator delete (56 samples, 0.12%)</title><rect x="936.9" y="405" width="1.4" height="15.0" fill="rgb(234,228,54)" rx="2" ry="2" />
<text  x="939.94" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="910.9" y="293" width="0.2" height="15.0" fill="rgb(224,167,19)" rx="2" ry="2" />
<text  x="913.91" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (208 samples, 0.44%)</title><rect x="213.6" y="229" width="5.2" height="15.0" fill="rgb(211,28,54)" rx="2" ry="2" />
<text  x="216.60" y="239.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (143 samples, 0.30%)</title><rect x="923.7" y="341" width="3.6" height="15.0" fill="rgb(245,132,47)" rx="2" ry="2" />
<text  x="926.75" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (13 samples, 0.03%)</title><rect x="956.1" y="341" width="0.3" height="15.0" fill="rgb(213,193,21)" rx="2" ry="2" />
<text  x="959.11" y="351.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (5,510 samples, 11.64%)</title><rect x="277.0" y="405" width="137.4" height="15.0" fill="rgb(250,187,5)" rx="2" ry="2" />
<text  x="279.98" y="415.5" >seastar::future&lt;m..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (5 samples, 0.01%)</title><rect x="702.5" y="501" width="0.2" height="15.0" fill="rgb(238,157,24)" rx="2" ry="2" />
<text  x="705.55" y="511.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (970 samples, 2.05%)</title><rect x="455.6" y="325" width="24.2" height="15.0" fill="rgb(213,222,54)" rx="2" ry="2" />
<text  x="458.57" y="335.5" >d..</text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="30.3" y="485" width="0.9" height="15.0" fill="rgb(246,53,15)" rx="2" ry="2" />
<text  x="33.32" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (85 samples, 0.18%)</title><rect x="569.0" y="357" width="2.1" height="15.0" fill="rgb(240,202,52)" rx="2" ry="2" />
<text  x="571.96" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr, false&gt;::uninitialized_set&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (5 samples, 0.01%)</title><rect x="730.9" y="309" width="0.1" height="15.0" fill="rgb(217,221,49)" rx="2" ry="2" />
<text  x="733.87" y="319.5" ></text>
</g>
<g >
<title>database::has_keyspace (92 samples, 0.19%)</title><rect x="824.7" y="357" width="2.3" height="15.0" fill="rgb(207,147,9)" rx="2" ry="2" />
<text  x="827.69" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (28 samples, 0.06%)</title><rect x="414.8" y="421" width="0.7" height="15.0" fill="rgb(225,181,17)" rx="2" ry="2" />
<text  x="417.83" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="771.6" y="293" width="0.3" height="15.0" fill="rgb(231,115,43)" rx="2" ry="2" />
<text  x="774.56" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="208.6" y="149" width="0.2" height="15.0" fill="rgb(215,162,45)" rx="2" ry="2" />
<text  x="211.64" y="159.5" ></text>
</g>
<g >
<title>db::block_for (10 samples, 0.02%)</title><rect x="1070.0" y="325" width="0.2" height="15.0" fill="rgb(220,183,10)" rx="2" ry="2" />
<text  x="1072.98" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (7 samples, 0.01%)</title><rect x="1176.9" y="373" width="0.2" height="15.0" fill="rgb(229,218,33)" rx="2" ry="2" />
<text  x="1179.91" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (40 samples, 0.08%)</title><rect x="957.4" y="373" width="1.0" height="15.0" fill="rgb(211,36,18)" rx="2" ry="2" />
<text  x="960.43" y="383.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (489 samples, 1.03%)</title><rect x="889.1" y="325" width="12.2" height="15.0" fill="rgb(212,173,34)" rx="2" ry="2" />
<text  x="892.07" y="335.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="479.3" y="213" width="0.1" height="15.0" fill="rgb(216,44,0)" rx="2" ry="2" />
<text  x="482.25" y="223.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (45 samples, 0.10%)</title><rect x="546.4" y="325" width="1.1" height="15.0" fill="rgb(228,130,15)" rx="2" ry="2" />
<text  x="549.42" y="335.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.04%)</title><rect x="38.7" y="453" width="0.4" height="15.0" fill="rgb(253,72,36)" rx="2" ry="2" />
<text  x="41.70" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Copy_ctor_base (13 samples, 0.03%)</title><rect x="858.7" y="421" width="0.4" height="15.0" fill="rgb(241,7,51)" rx="2" ry="2" />
<text  x="861.75" y="431.5" ></text>
</g>
<g >
<title>operator new (8 samples, 0.02%)</title><rect x="1128.9" y="421" width="0.2" height="15.0" fill="rgb(237,151,30)" rx="2" ry="2" />
<text  x="1131.87" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::move_it (7 samples, 0.01%)</title><rect x="982.2" y="357" width="0.1" height="15.0" fill="rgb(205,187,16)" rx="2" ry="2" />
<text  x="985.16" y="367.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt;::operator (37 samples, 0.08%)</title><rect x="816.6" y="373" width="0.9" height="15.0" fill="rgb(210,33,53)" rx="2" ry="2" />
<text  x="819.56" y="383.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::~__si_class_type_info (185 samples, 0.39%)</title><rect x="10.2" y="613" width="4.7" height="15.0" fill="rgb(251,81,8)" rx="2" ry="2" />
<text  x="13.25" y="623.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="397.8" y="213" width="0.2" height="15.0" fill="rgb(235,178,24)" rx="2" ry="2" />
<text  x="400.80" y="223.5" ></text>
</g>
<g >
<title>dht::murmur3_partitioner::get_token (459 samples, 0.97%)</title><rect x="916.0" y="389" width="11.4" height="15.0" fill="rgb(222,112,26)" rx="2" ry="2" />
<text  x="918.97" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (13 samples, 0.03%)</title><rect x="541.7" y="405" width="0.3" height="15.0" fill="rgb(228,197,14)" rx="2" ry="2" />
<text  x="544.66" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (12 samples, 0.03%)</title><rect x="306.5" y="181" width="0.3" height="15.0" fill="rgb(233,56,42)" rx="2" ry="2" />
<text  x="309.50" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (9 samples, 0.02%)</title><rect x="1080.4" y="309" width="0.2" height="15.0" fill="rgb(230,159,17)" rx="2" ry="2" />
<text  x="1083.37" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="1080.2" y="293" width="0.2" height="15.0" fill="rgb(222,151,12)" rx="2" ry="2" />
<text  x="1083.25" y="303.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (297 samples, 0.63%)</title><rect x="243.2" y="309" width="7.4" height="15.0" fill="rgb(246,133,52)" rx="2" ry="2" />
<text  x="246.19" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="146.1" y="165" width="0.6" height="15.0" fill="rgb(236,136,49)" rx="2" ry="2" />
<text  x="149.06" y="175.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (412 samples, 0.87%)</title><rect x="689.6" y="469" width="10.2" height="15.0" fill="rgb(208,82,23)" rx="2" ry="2" />
<text  x="692.56" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (143 samples, 0.30%)</title><rect x="850.2" y="421" width="3.6" height="15.0" fill="rgb(214,13,10)" rx="2" ry="2" />
<text  x="853.25" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (11 samples, 0.02%)</title><rect x="1048.9" y="277" width="0.3" height="15.0" fill="rgb(215,77,0)" rx="2" ry="2" />
<text  x="1051.93" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="703.1" y="501" width="0.1" height="15.0" fill="rgb(245,124,45)" rx="2" ry="2" />
<text  x="706.07" y="511.5" ></text>
</g>
<g >
<title>single_node_cql_env::local_qp (8 samples, 0.02%)</title><rect x="849.0" y="453" width="0.2" height="15.0" fill="rgb(233,19,45)" rx="2" ry="2" />
<text  x="852.05" y="463.5" ></text>
</g>
<g >
<title>mutation_partition::upper_bound (5 samples, 0.01%)</title><rect x="229.7" y="197" width="0.1" height="15.0" fill="rgb(232,47,44)" rx="2" ry="2" />
<text  x="232.70" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="1047.4" y="261" width="0.2" height="15.0" fill="rgb(242,132,16)" rx="2" ry="2" />
<text  x="1050.41" y="271.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (76 samples, 0.16%)</title><rect x="233.6" y="213" width="1.9" height="15.0" fill="rgb(252,173,1)" rx="2" ry="2" />
<text  x="236.57" y="223.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (5 samples, 0.01%)</title><rect x="827.0" y="405" width="0.1" height="15.0" fill="rgb(231,131,30)" rx="2" ry="2" />
<text  x="830.01" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="567.9" y="341" width="0.2" height="15.0" fill="rgb(209,46,25)" rx="2" ry="2" />
<text  x="570.91" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="743.1" y="405" width="0.1" height="15.0" fill="rgb(247,157,34)" rx="2" ry="2" />
<text  x="746.06" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (11 samples, 0.02%)</title><rect x="384.1" y="229" width="0.3" height="15.0" fill="rgb(238,46,1)" rx="2" ry="2" />
<text  x="387.11" y="239.5" ></text>
</g>
<g >
<title>sstring_hash::operator (34 samples, 0.07%)</title><rect x="840.0" y="373" width="0.9" height="15.0" fill="rgb(212,180,8)" rx="2" ry="2" />
<text  x="843.05" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (332 samples, 0.70%)</title><rect x="389.8" y="245" width="8.3" height="15.0" fill="rgb(236,96,0)" rx="2" ry="2" />
<text  x="392.80" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (14 samples, 0.03%)</title><rect x="130.6" y="229" width="0.4" height="15.0" fill="rgb(222,22,21)" rx="2" ry="2" />
<text  x="133.62" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (201 samples, 0.42%)</title><rect x="602.3" y="437" width="5.0" height="15.0" fill="rgb(209,34,46)" rx="2" ry="2" />
<text  x="605.32" y="447.5" ></text>
</g>
<g >
<title>operator delete (19 samples, 0.04%)</title><rect x="577.5" y="405" width="0.5" height="15.0" fill="rgb(228,10,27)" rx="2" ry="2" />
<text  x="580.54" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::get_or_load&lt;utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (275 samples, 0.58%)</title><rect x="734.3" y="373" width="6.8" height="15.0" fill="rgb(229,128,51)" rx="2" ry="2" />
<text  x="737.29" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (9 samples, 0.02%)</title><rect x="1145.4" y="501" width="0.2" height="15.0" fill="rgb(230,175,36)" rx="2" ry="2" />
<text  x="1148.42" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (17 samples, 0.04%)</title><rect x="433.3" y="261" width="0.4" height="15.0" fill="rgb(205,123,52)" rx="2" ry="2" />
<text  x="436.25" y="271.5" ></text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="987.4" y="293" width="1.9" height="15.0" fill="rgb(252,172,27)" rx="2" ry="2" />
<text  x="990.40" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (10 samples, 0.02%)</title><rect x="637.6" y="437" width="0.3" height="15.0" fill="rgb(252,8,33)" rx="2" ry="2" />
<text  x="640.62" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::push_static_row (157 samples, 0.33%)</title><rect x="238.3" y="261" width="3.9" height="15.0" fill="rgb(220,8,46)" rx="2" ry="2" />
<text  x="241.28" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (15 samples, 0.03%)</title><rect x="675.0" y="325" width="0.4" height="15.0" fill="rgb(222,160,17)" rx="2" ry="2" />
<text  x="678.02" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (9 samples, 0.02%)</title><rect x="685.9" y="469" width="0.2" height="15.0" fill="rgb(244,89,11)" rx="2" ry="2" />
<text  x="688.89" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1176.2" y="421" width="0.1" height="15.0" fill="rgb(239,158,41)" rx="2" ry="2" />
<text  x="1179.21" y="431.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (6 samples, 0.01%)</title><rect x="1139.7" y="421" width="0.1" height="15.0" fill="rgb(228,159,15)" rx="2" ry="2" />
<text  x="1142.66" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (20 samples, 0.04%)</title><rect x="864.9" y="485" width="0.5" height="15.0" fill="rgb(237,99,24)" rx="2" ry="2" />
<text  x="867.91" y="495.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,850 samples, 22.93%)</title><rect x="872.5" y="453" width="270.5" height="15.0" fill="rgb(236,185,35)" rx="2" ry="2" />
<text  x="875.46" y="463.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>std::_Hash_bytes (13 samples, 0.03%)</title><rect x="737.6" y="277" width="0.3" height="15.0" fill="rgb(232,62,0)" rx="2" ry="2" />
<text  x="740.60" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (15 samples, 0.03%)</title><rect x="89.9" y="421" width="0.4" height="15.0" fill="rgb(252,10,19)" rx="2" ry="2" />
<text  x="92.91" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (18 samples, 0.04%)</title><rect x="974.6" y="325" width="0.4" height="15.0" fill="rgb(217,148,38)" rx="2" ry="2" />
<text  x="977.58" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (51 samples, 0.11%)</title><rect x="289.0" y="261" width="1.3" height="15.0" fill="rgb(210,2,46)" rx="2" ry="2" />
<text  x="292.02" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::clear (6 samples, 0.01%)</title><rect x="677.4" y="485" width="0.1" height="15.0" fill="rgb(251,84,3)" rx="2" ry="2" />
<text  x="680.39" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="251.5" y="309" width="0.2" height="15.0" fill="rgb(213,52,49)" rx="2" ry="2" />
<text  x="254.47" y="319.5" ></text>
</g>
<g >
<title>all (47,328 samples, 100%)</title><rect x="10.0" y="661" width="1180.0" height="15.0" fill="rgb(230,54,11)" rx="2" ry="2" />
<text  x="13.00" y="671.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.03%)</title><rect x="658.7" y="469" width="0.4" height="15.0" fill="rgb(239,63,11)" rx="2" ry="2" />
<text  x="661.69" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="1109.5" y="373" width="0.1" height="15.0" fill="rgb(216,13,18)" rx="2" ry="2" />
<text  x="1112.47" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (5,073 samples, 10.72%)</title><rect x="281.4" y="341" width="126.5" height="15.0" fill="rgb(208,54,50)" rx="2" ry="2" />
<text  x="284.44" y="351.5" >seastar::futuri..</text>
</g>
<g >
<title>dht::tri_compare (11 samples, 0.02%)</title><rect x="1097.8" y="245" width="0.2" height="15.0" fill="rgb(210,193,24)" rx="2" ry="2" />
<text  x="1100.78" y="255.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="511.4" y="325" width="0.8" height="15.0" fill="rgb(234,192,23)" rx="2" ry="2" />
<text  x="514.37" y="335.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (9 samples, 0.02%)</title><rect x="499.8" y="197" width="0.2" height="15.0" fill="rgb(239,119,40)" rx="2" ry="2" />
<text  x="502.82" y="207.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (37 samples, 0.08%)</title><rect x="720.8" y="293" width="0.9" height="15.0" fill="rgb(216,225,23)" rx="2" ry="2" />
<text  x="723.80" y="303.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (13 samples, 0.03%)</title><rect x="804.6" y="213" width="0.3" height="15.0" fill="rgb(239,130,13)" rx="2" ry="2" />
<text  x="807.62" y="223.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.04%)</title><rect x="642.2" y="453" width="0.4" height="15.0" fill="rgb(237,91,33)" rx="2" ry="2" />
<text  x="645.19" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (347 samples, 0.73%)</title><rect x="432.1" y="293" width="8.7" height="15.0" fill="rgb(222,174,1)" rx="2" ry="2" />
<text  x="435.13" y="303.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.05%)</title><rect x="412.5" y="373" width="0.5" height="15.0" fill="rgb(246,45,23)" rx="2" ry="2" />
<text  x="415.46" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (290 samples, 0.61%)</title><rect x="390.8" y="229" width="7.3" height="15.0" fill="rgb(238,134,17)" rx="2" ry="2" />
<text  x="393.84" y="239.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (38 samples, 0.08%)</title><rect x="286.1" y="293" width="0.9" height="15.0" fill="rgb(242,0,11)" rx="2" ry="2" />
<text  x="289.05" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;interval_bound&lt;dht::ring_position&gt;, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="943.7" y="373" width="0.1" height="15.0" fill="rgb(238,140,49)" rx="2" ry="2" />
<text  x="946.69" y="383.5" ></text>
</g>
<g >
<title>compact_mutation&lt; (9 samples, 0.02%)</title><rect x="410.1" y="341" width="0.2" height="15.0" fill="rgb(235,161,52)" rx="2" ry="2" />
<text  x="413.11" y="351.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (155 samples, 0.33%)</title><rect x="398.5" y="261" width="3.9" height="15.0" fill="rgb(250,137,31)" rx="2" ry="2" />
<text  x="401.50" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (10 samples, 0.02%)</title><rect x="627.7" y="469" width="0.3" height="15.0" fill="rgb(240,196,16)" rx="2" ry="2" />
<text  x="630.75" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (27 samples, 0.06%)</title><rect x="1150.1" y="485" width="0.6" height="15.0" fill="rgb(250,118,15)" rx="2" ry="2" />
<text  x="1153.06" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="1107.0" y="341" width="0.2" height="15.0" fill="rgb(211,84,17)" rx="2" ry="2" />
<text  x="1110.00" y="351.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::push_back (10 samples, 0.02%)</title><rect x="16.1" y="277" width="0.2" height="15.0" fill="rgb(213,175,32)" rx="2" ry="2" />
<text  x="19.08" y="287.5" ></text>
</g>
<g >
<title>query::querier_base::close (17 samples, 0.04%)</title><rect x="1176.9" y="485" width="0.4" height="15.0" fill="rgb(242,131,13)" rx="2" ry="2" />
<text  x="1179.86" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (22 samples, 0.05%)</title><rect x="546.6" y="309" width="0.5" height="15.0" fill="rgb(250,112,10)" rx="2" ry="2" />
<text  x="549.57" y="319.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (49 samples, 0.10%)</title><rect x="746.2" y="373" width="1.2" height="15.0" fill="rgb(205,141,5)" rx="2" ry="2" />
<text  x="749.15" y="383.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (165 samples, 0.35%)</title><rect x="147.4" y="229" width="4.1" height="15.0" fill="rgb(221,183,37)" rx="2" ry="2" />
<text  x="150.43" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (6 samples, 0.01%)</title><rect x="381.9" y="165" width="0.2" height="15.0" fill="rgb(236,176,3)" rx="2" ry="2" />
<text  x="384.94" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (21 samples, 0.04%)</title><rect x="901.4" y="325" width="0.5" height="15.0" fill="rgb(222,195,3)" rx="2" ry="2" />
<text  x="904.38" y="335.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (45 samples, 0.10%)</title><rect x="787.0" y="149" width="1.2" height="15.0" fill="rgb(228,227,2)" rx="2" ry="2" />
<text  x="790.04" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*&gt; (109 samples, 0.23%)</title><rect x="1121.1" y="373" width="2.7" height="15.0" fill="rgb(236,56,4)" rx="2" ry="2" />
<text  x="1124.06" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="420.1" y="357" width="0.2" height="15.0" fill="rgb(243,107,53)" rx="2" ry="2" />
<text  x="423.14" y="367.5" ></text>
</g>
<g >
<title>table::query (21,519 samples, 45.47%)</title><rect x="76.5" y="453" width="536.5" height="15.0" fill="rgb(232,210,1)" rx="2" ry="2" />
<text  x="79.52" y="463.5" >table::query</text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (17 samples, 0.04%)</title><rect x="523.9" y="245" width="0.5" height="15.0" fill="rgb(252,173,30)" rx="2" ry="2" />
<text  x="526.93" y="255.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (359 samples, 0.76%)</title><rect x="62.1" y="421" width="9.0" height="15.0" fill="rgb(216,103,18)" rx="2" ry="2" />
<text  x="65.11" y="431.5" ></text>
</g>
<g >
<title>row_cache::make_reader (490 samples, 1.04%)</title><rect x="514.0" y="341" width="12.2" height="15.0" fill="rgb(219,226,23)" rx="2" ry="2" />
<text  x="517.03" y="351.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIRKNS0_13basic_sstringIcjLj15ELb1EEEN4auth8resourceEJZNK7service12client_state24has_column_family_accessERK8databaseS6_S6_NS7_10permissionENS7_12command_desc4typeEE3$_4EEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJS6_OS8_EEEDcSJ_SL_ (109 samples, 0.23%)</title><rect x="760.1" y="389" width="2.8" height="15.0" fill="rgb(213,107,52)" rx="2" ry="2" />
<text  x="763.14" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (5 samples, 0.01%)</title><rect x="1176.5" y="501" width="0.1" height="15.0" fill="rgb(234,2,35)" rx="2" ry="2" />
<text  x="1179.49" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (12 samples, 0.03%)</title><rect x="403.0" y="261" width="0.3" height="15.0" fill="rgb(217,68,0)" rx="2" ry="2" />
<text  x="405.98" y="271.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (13 samples, 0.03%)</title><rect x="408.3" y="373" width="0.3" height="15.0" fill="rgb(242,18,46)" rx="2" ry="2" />
<text  x="411.32" y="383.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (6 samples, 0.01%)</title><rect x="848.1" y="325" width="0.1" height="15.0" fill="rgb(218,82,49)" rx="2" ry="2" />
<text  x="851.08" y="335.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;mutation_reader_merger::reader_and_last_fragment_kind*, mutation_reader_merger::prepare_next (607 samples, 1.28%)</title><rect x="120.0" y="293" width="15.1" height="15.0" fill="rgb(234,181,44)" rx="2" ry="2" />
<text  x="122.95" y="303.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (54 samples, 0.11%)</title><rect x="912.4" y="389" width="1.3" height="15.0" fill="rgb(211,1,33)" rx="2" ry="2" />
<text  x="915.35" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="626.4" y="469" width="0.1" height="15.0" fill="rgb(250,158,41)" rx="2" ry="2" />
<text  x="629.40" y="479.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (32 samples, 0.07%)</title><rect x="490.3" y="277" width="0.8" height="15.0" fill="rgb(215,88,17)" rx="2" ry="2" />
<text  x="493.30" y="287.5" ></text>
</g>
<g >
<title>operator new (91 samples, 0.19%)</title><rect x="972.8" y="357" width="2.2" height="15.0" fill="rgb(214,54,47)" rx="2" ry="2" />
<text  x="975.76" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="757.7" y="373" width="0.2" height="15.0" fill="rgb(252,165,15)" rx="2" ry="2" />
<text  x="760.72" y="383.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_direct (269 samples, 0.57%)</title><rect x="15.7" y="501" width="6.7" height="15.0" fill="rgb(230,64,37)" rx="2" ry="2" />
<text  x="18.66" y="511.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (33 samples, 0.07%)</title><rect x="567.3" y="357" width="0.8" height="15.0" fill="rgb(240,107,23)" rx="2" ry="2" />
<text  x="570.29" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (54 samples, 0.11%)</title><rect x="608.5" y="421" width="1.3" height="15.0" fill="rgb(251,102,19)" rx="2" ry="2" />
<text  x="611.45" y="431.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_result_local (1,927 samples, 4.07%)</title><rect x="1008.7" y="293" width="48.0" height="15.0" fill="rgb(225,92,44)" rx="2" ry="2" />
<text  x="1011.67" y="303.5" >serv..</text>
</g>
<g >
<title>seastar::memory::allocate (18 samples, 0.04%)</title><rect x="760.6" y="357" width="0.4" height="15.0" fill="rgb(245,22,20)" rx="2" ry="2" />
<text  x="763.59" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="560.8" y="309" width="0.1" height="15.0" fill="rgb(254,0,34)" rx="2" ry="2" />
<text  x="563.76" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="609.8" y="437" width="0.2" height="15.0" fill="rgb(216,202,6)" rx="2" ry="2" />
<text  x="612.80" y="447.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (12 samples, 0.03%)</title><rect x="638.7" y="421" width="0.3" height="15.0" fill="rgb(251,155,0)" rx="2" ry="2" />
<text  x="641.70" y="431.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (12 samples, 0.03%)</title><rect x="947.8" y="389" width="0.3" height="15.0" fill="rgb(241,1,46)" rx="2" ry="2" />
<text  x="950.81" y="399.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (5 samples, 0.01%)</title><rect x="831.0" y="421" width="0.1" height="15.0" fill="rgb(246,19,42)" rx="2" ry="2" />
<text  x="834.02" y="431.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::response_count (6 samples, 0.01%)</title><rect x="696.3" y="421" width="0.1" height="15.0" fill="rgb(244,187,21)" rx="2" ry="2" />
<text  x="699.26" y="431.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="898.6" y="277" width="0.2" height="15.0" fill="rgb(230,76,16)" rx="2" ry="2" />
<text  x="901.62" y="287.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (20 samples, 0.04%)</title><rect x="675.0" y="373" width="0.5" height="15.0" fill="rgb(221,83,6)" rx="2" ry="2" />
<text  x="677.97" y="383.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cident (13 samples, 0.03%)</title><rect x="18.1" y="341" width="0.4" height="15.0" fill="rgb(235,142,8)" rx="2" ry="2" />
<text  x="21.13" y="351.5" ></text>
</g>
<g >
<title>wrapping_interval&lt;clustering_key_prefix&gt;::wrapping_interval (5 samples, 0.01%)</title><rect x="1119.9" y="373" width="0.1" height="15.0" fill="rgb(223,38,39)" rx="2" ry="2" />
<text  x="1122.89" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (29 samples, 0.06%)</title><rect x="601.4" y="437" width="0.7" height="15.0" fill="rgb(240,64,2)" rx="2" ry="2" />
<text  x="604.42" y="447.5" ></text>
</g>
<g >
<title>db::commitlog::segment_manager::allocate_when_possible&lt;db::commitlog::add_entry (5 samples, 0.01%)</title><rect x="1144.0" y="293" width="0.1" height="15.0" fill="rgb(222,30,37)" rx="2" ry="2" />
<text  x="1147.02" y="303.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (15 samples, 0.03%)</title><rect x="39.1" y="453" width="0.4" height="15.0" fill="rgb(228,123,27)" rx="2" ry="2" />
<text  x="42.12" y="463.5" ></text>
</g>
<g >
<title>mutation_querier::mutation_querier (103 samples, 0.22%)</title><rect x="299.3" y="181" width="2.6" height="15.0" fill="rgb(223,61,0)" rx="2" ry="2" />
<text  x="302.32" y="191.5" ></text>
</g>
<g >
<title>make_empty_flat_reader (111 samples, 0.23%)</title><rect x="522.9" y="309" width="2.8" height="15.0" fill="rgb(240,38,7)" rx="2" ry="2" />
<text  x="525.93" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="389" width="0.9" height="15.0" fill="rgb(243,153,38)" rx="2" ry="2" />
<text  x="1146.30" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (5 samples, 0.01%)</title><rect x="436.3" y="245" width="0.2" height="15.0" fill="rgb(254,130,14)" rx="2" ry="2" />
<text  x="439.34" y="255.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="642.9" y="453" width="0.4" height="15.0" fill="rgb(210,84,27)" rx="2" ry="2" />
<text  x="645.91" y="463.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="134.9" y="277" width="0.2" height="15.0" fill="rgb(236,228,7)" rx="2" ry="2" />
<text  x="137.89" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (41 samples, 0.09%)</title><rect x="495.8" y="229" width="1.0" height="15.0" fill="rgb(223,192,32)" rx="2" ry="2" />
<text  x="498.78" y="239.5" ></text>
</g>
<g >
<title>std::make_unique&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit, dht::decorated_key, partition_snapshot_ptr&amp;, query::clustering_key_filter_ranges, bool&amp;, logalloc::region&amp;, logalloc::allocating_section&amp;, boost::any, memtable&amp;&gt; (849 samples, 1.79%)</title><rect x="486.4" y="309" width="21.2" height="15.0" fill="rgb(227,21,53)" rx="2" ry="2" />
<text  x="489.43" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (103 samples, 0.22%)</title><rect x="215.5" y="181" width="2.6" height="15.0" fill="rgb(208,90,33)" rx="2" ry="2" />
<text  x="218.54" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1079.9" y="309" width="0.1" height="15.0" fill="rgb(233,112,5)" rx="2" ry="2" />
<text  x="1082.87" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="595.9" y="421" width="0.1" height="15.0" fill="rgb(245,20,49)" rx="2" ry="2" />
<text  x="598.86" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (19 samples, 0.04%)</title><rect x="1153.0" y="469" width="0.4" height="15.0" fill="rgb(223,165,19)" rx="2" ry="2" />
<text  x="1155.98" y="479.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition (5 samples, 0.01%)</title><rect x="1143.3" y="229" width="0.2" height="15.0" fill="rgb(254,162,3)" rx="2" ry="2" />
<text  x="1146.33" y="239.5" ></text>
</g>
<g >
<title>database::find_column_family (62 samples, 0.13%)</title><rect x="1062.6" y="341" width="1.5" height="15.0" fill="rgb(247,74,35)" rx="2" ry="2" />
<text  x="1065.57" y="351.5" ></text>
</g>
<g >
<title>empty_flat_reader::~empty_flat_reader (16 samples, 0.03%)</title><rect x="545.5" y="341" width="0.4" height="15.0" fill="rgb(211,115,35)" rx="2" ry="2" />
<text  x="548.52" y="351.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="75.1" y="453" width="0.2" height="15.0" fill="rgb(217,112,37)" rx="2" ry="2" />
<text  x="78.15" y="463.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (5 samples, 0.01%)</title><rect x="1033.2" y="149" width="0.1" height="15.0" fill="rgb(224,151,6)" rx="2" ry="2" />
<text  x="1036.20" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="162.4" y="133" width="0.1" height="15.0" fill="rgb(235,54,44)" rx="2" ry="2" />
<text  x="165.36" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::_S_construct&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; const&amp;&gt; (5 samples, 0.01%)</title><rect x="16.1" y="245" width="0.1" height="15.0" fill="rgb(246,210,7)" rx="2" ry="2" />
<text  x="19.08" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::emplace_back&lt;cql3::raw_value_view&gt; (86 samples, 0.18%)</title><rect x="851.4" y="389" width="2.1" height="15.0" fill="rgb(248,208,24)" rx="2" ry="2" />
<text  x="854.39" y="399.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::operator (110 samples, 0.23%)</title><rect x="812.5" y="341" width="2.7" height="15.0" fill="rgb(248,215,13)" rx="2" ry="2" />
<text  x="815.50" y="351.5" ></text>
</g>
<g >
<title>table::do_apply&lt;frozen_mutation const&amp;, seastar::lw_shared_ptr&lt;schema const&gt; const&amp;&gt; (28 samples, 0.06%)</title><rect x="1143.3" y="277" width="0.7" height="15.0" fill="rgb(214,153,24)" rx="2" ry="2" />
<text  x="1146.30" y="287.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (65 samples, 0.14%)</title><rect x="928.9" y="373" width="1.6" height="15.0" fill="rgb(232,210,51)" rx="2" ry="2" />
<text  x="931.91" y="383.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="410.3" y="341" width="0.8" height="15.0" fill="rgb(227,92,38)" rx="2" ry="2" />
<text  x="413.34" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (22 samples, 0.05%)</title><rect x="823.8" y="293" width="0.5" height="15.0" fill="rgb(241,187,47)" rx="2" ry="2" />
<text  x="826.79" y="303.5" ></text>
</g>
<g >
<title>std::visit&lt;overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (5 samples, 0.01%)</title><rect x="950.3" y="373" width="0.1" height="15.0" fill="rgb(249,83,54)" rx="2" ry="2" />
<text  x="953.25" y="383.5" ></text>
</g>
<g >
<title>[unknown] (8 samples, 0.02%)</title><rect x="10.0" y="613" width="0.2" height="15.0" fill="rgb(222,176,45)" rx="2" ry="2" />
<text  x="13.05" y="623.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (9 samples, 0.02%)</title><rect x="552.5" y="293" width="0.2" height="15.0" fill="rgb(226,65,41)" rx="2" ry="2" />
<text  x="555.48" y="303.5" ></text>
</g>
<g >
<title>database::find_uuid (186 samples, 0.39%)</title><rect x="819.9" y="357" width="4.6" height="15.0" fill="rgb(235,81,53)" rx="2" ry="2" />
<text  x="822.90" y="367.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="507.2" y="293" width="0.1" height="15.0" fill="rgb(243,34,49)" rx="2" ry="2" />
<text  x="510.15" y="303.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.04%)</title><rect x="524.7" y="261" width="0.4" height="15.0" fill="rgb(225,79,25)" rx="2" ry="2" />
<text  x="527.68" y="271.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (13 samples, 0.03%)</title><rect x="492.3" y="261" width="0.4" height="15.0" fill="rgb(209,175,22)" rx="2" ry="2" />
<text  x="495.34" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1144.2" y="389" width="0.7" height="15.0" fill="rgb(251,211,14)" rx="2" ry="2" />
<text  x="1147.22" y="399.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (18 samples, 0.04%)</title><rect x="1098.4" y="293" width="0.4" height="15.0" fill="rgb(242,29,8)" rx="2" ry="2" />
<text  x="1101.37" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (23 samples, 0.05%)</title><rect x="146.9" y="213" width="0.5" height="15.0" fill="rgb(225,54,48)" rx="2" ry="2" />
<text  x="149.85" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::metadata&gt;::~shared_ptr_count_for (5 samples, 0.01%)</title><rect x="33.5" y="485" width="0.1" height="15.0" fill="rgb(226,61,18)" rx="2" ry="2" />
<text  x="36.46" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="415.4" y="405" width="0.1" height="15.0" fill="rgb(220,187,40)" rx="2" ry="2" />
<text  x="418.38" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="555.0" y="277" width="0.3" height="15.0" fill="rgb(216,223,36)" rx="2" ry="2" />
<text  x="558.00" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;query::querier&lt; (9 samples, 0.02%)</title><rect x="75.4" y="453" width="0.2" height="15.0" fill="rgb(253,46,15)" rx="2" ry="2" />
<text  x="78.42" y="463.5" ></text>
</g>
<g >
<title>memtable::apply (28 samples, 0.06%)</title><rect x="1143.3" y="261" width="0.7" height="15.0" fill="rgb(232,145,39)" rx="2" ry="2" />
<text  x="1146.30" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (18 samples, 0.04%)</title><rect x="107.2" y="373" width="0.4" height="15.0" fill="rgb(243,27,18)" rx="2" ry="2" />
<text  x="110.19" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (29 samples, 0.06%)</title><rect x="410.4" y="325" width="0.7" height="15.0" fill="rgb(217,170,43)" rx="2" ry="2" />
<text  x="413.39" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (14 samples, 0.03%)</title><rect x="202.9" y="85" width="0.3" height="15.0" fill="rgb(222,147,16)" rx="2" ry="2" />
<text  x="205.85" y="95.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="807.3" y="309" width="0.2" height="15.0" fill="rgb(226,60,3)" rx="2" ry="2" />
<text  x="810.34" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (5 samples, 0.01%)</title><rect x="1036.9" y="197" width="0.1" height="15.0" fill="rgb(244,25,51)" rx="2" ry="2" />
<text  x="1039.87" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.15%)</title><rect x="987.4" y="277" width="1.9" height="15.0" fill="rgb(238,67,21)" rx="2" ry="2" />
<text  x="990.45" y="287.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (17 samples, 0.04%)</title><rect x="591.2" y="405" width="0.4" height="15.0" fill="rgb(235,223,2)" rx="2" ry="2" />
<text  x="594.22" y="415.5" ></text>
</g>
<g >
<title>operator new (41 samples, 0.09%)</title><rect x="1160.6" y="389" width="1.1" height="15.0" fill="rgb(212,100,34)" rx="2" ry="2" />
<text  x="1163.63" y="399.5" ></text>
</g>
<g >
<title>seastar::app_template::run_deprecated (46,373 samples, 97.98%)</title><rect x="22.9" y="565" width="1156.2" height="15.0" fill="rgb(226,142,48)" rx="2" ry="2" />
<text  x="25.87" y="575.5" >seastar::app_template::run_deprecated</text>
</g>
<g >
<title>mutation_partition::upper_bound (11 samples, 0.02%)</title><rect x="209.6" y="133" width="0.2" height="15.0" fill="rgb(216,131,35)" rx="2" ry="2" />
<text  x="212.56" y="143.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::set_callback (14 samples, 0.03%)</title><rect x="861.5" y="485" width="0.3" height="15.0" fill="rgb(250,208,53)" rx="2" ry="2" />
<text  x="864.47" y="495.5" ></text>
</g>
<g >
<title>service::endpoints_to_replica_ids (110 samples, 0.23%)</title><rect x="1155.1" y="469" width="2.7" height="15.0" fill="rgb(229,202,45)" rx="2" ry="2" />
<text  x="1158.09" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="1055.1" y="213" width="0.5" height="15.0" fill="rgb(242,136,17)" rx="2" ry="2" />
<text  x="1058.12" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="619.3" y="469" width="0.2" height="15.0" fill="rgb(235,191,5)" rx="2" ry="2" />
<text  x="622.27" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (10 samples, 0.02%)</title><rect x="1004.9" y="277" width="0.3" height="15.0" fill="rgb(227,43,30)" rx="2" ry="2" />
<text  x="1007.90" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::awaiter&lt;query::result_memory_accounter&gt;::awaiter (6 samples, 0.01%)</title><rect x="595.6" y="437" width="0.1" height="15.0" fill="rgb(241,17,33)" rx="2" ry="2" />
<text  x="598.59" y="447.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="578.7" y="405" width="0.7" height="15.0" fill="rgb(252,78,36)" rx="2" ry="2" />
<text  x="581.68" y="415.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (10 samples, 0.02%)</title><rect x="309.0" y="149" width="0.2" height="15.0" fill="rgb(253,41,52)" rx="2" ry="2" />
<text  x="311.99" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (10 samples, 0.02%)</title><rect x="736.1" y="293" width="0.3" height="15.0" fill="rgb(217,198,40)" rx="2" ry="2" />
<text  x="739.13" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (83 samples, 0.18%)</title><rect x="846.2" y="373" width="2.1" height="15.0" fill="rgb(246,184,15)" rx="2" ry="2" />
<text  x="849.23" y="383.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::global_trace_state_ptr (6 samples, 0.01%)</title><rect x="1058.0" y="293" width="0.2" height="15.0" fill="rgb(243,51,46)" rx="2" ry="2" />
<text  x="1061.01" y="303.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (717 samples, 1.51%)</title><rect x="544.2" y="357" width="17.9" height="15.0" fill="rgb(233,38,16)" rx="2" ry="2" />
<text  x="547.20" y="367.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (38 samples, 0.08%)</title><rect x="896.6" y="245" width="1.0" height="15.0" fill="rgb(207,172,38)" rx="2" ry="2" />
<text  x="899.65" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="934.7" y="389" width="0.2" height="15.0" fill="rgb(242,64,10)" rx="2" ry="2" />
<text  x="937.72" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;query::querier&lt; (7 samples, 0.01%)</title><rect x="600.3" y="437" width="0.2" height="15.0" fill="rgb(239,183,32)" rx="2" ry="2" />
<text  x="603.35" y="447.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, service::storage_proxy*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt;, db::consistency_level, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, tracing::trace_state_ptr, service_permit, bool, seastar::lw_shared_ptr&lt;cdc::operation_result_tracker&gt; &gt;::make_stage_for_group (28 samples, 0.06%)</title><rect x="1144.2" y="405" width="0.7" height="15.0" fill="rgb(213,99,3)" rx="2" ry="2" />
<text  x="1147.20" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (17 samples, 0.04%)</title><rect x="1102.1" y="309" width="0.4" height="15.0" fill="rgb(225,160,31)" rx="2" ry="2" />
<text  x="1105.11" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (9 samples, 0.02%)</title><rect x="145.7" y="197" width="0.2" height="15.0" fill="rgb(214,214,0)" rx="2" ry="2" />
<text  x="148.68" y="207.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (181 samples, 0.38%)</title><rect x="717.7" y="357" width="4.5" height="15.0" fill="rgb(250,148,29)" rx="2" ry="2" />
<text  x="720.66" y="367.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (288 samples, 0.61%)</title><rect x="15.3" y="597" width="7.2" height="15.0" fill="rgb(235,97,13)" rx="2" ry="2" />
<text  x="18.29" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (7 samples, 0.01%)</title><rect x="284.0" y="293" width="0.2" height="15.0" fill="rgb(234,194,50)" rx="2" ry="2" />
<text  x="287.01" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="755.4" y="293" width="0.2" height="15.0" fill="rgb(248,122,35)" rx="2" ry="2" />
<text  x="758.43" y="303.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (10 samples, 0.02%)</title><rect x="934.4" y="389" width="0.2" height="15.0" fill="rgb(222,71,19)" rx="2" ry="2" />
<text  x="937.39" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (26 samples, 0.05%)</title><rect x="887.8" y="277" width="0.6" height="15.0" fill="rgb(206,88,6)" rx="2" ry="2" />
<text  x="890.79" y="287.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (25 samples, 0.05%)</title><rect x="227.5" y="197" width="0.6" height="15.0" fill="rgb(251,170,9)" rx="2" ry="2" />
<text  x="230.51" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (8 samples, 0.02%)</title><rect x="274.2" y="357" width="0.2" height="15.0" fill="rgb(241,212,13)" rx="2" ry="2" />
<text  x="277.16" y="367.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (143 samples, 0.30%)</title><rect x="229.9" y="213" width="3.5" height="15.0" fill="rgb(244,178,13)" rx="2" ry="2" />
<text  x="232.85" y="223.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (13 samples, 0.03%)</title><rect x="157.7" y="197" width="0.4" height="15.0" fill="rgb(231,63,2)" rx="2" ry="2" />
<text  x="160.75" y="207.5" ></text>
</g>
<g >
<title>service::shared_mutation::shared_mutation (8 samples, 0.02%)</title><rect x="1144.7" y="213" width="0.2" height="15.0" fill="rgb(215,131,23)" rx="2" ry="2" />
<text  x="1147.67" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::prepare_term (7 samples, 0.01%)</title><rect x="21.3" y="405" width="0.2" height="15.0" fill="rgb(217,104,36)" rx="2" ry="2" />
<text  x="24.32" y="415.5" ></text>
</g>
<g >
<title>query::digester::digester (12 samples, 0.03%)</title><rect x="587.1" y="405" width="0.3" height="15.0" fill="rgb(210,131,16)" rx="2" ry="2" />
<text  x="590.06" y="415.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="897.6" y="245" width="0.1" height="15.0" fill="rgb(237,30,42)" rx="2" ry="2" />
<text  x="900.59" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::clear (180 samples, 0.38%)</title><rect x="1172.0" y="469" width="4.5" height="15.0" fill="rgb(207,126,54)" rx="2" ry="2" />
<text  x="1175.00" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (16 samples, 0.03%)</title><rect x="928.1" y="389" width="0.4" height="15.0" fill="rgb(239,103,9)" rx="2" ry="2" />
<text  x="931.14" y="399.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="421" width="0.9" height="15.0" fill="rgb(251,106,30)" rx="2" ry="2" />
<text  x="1146.30" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (30 samples, 0.06%)</title><rect x="700.8" y="501" width="0.7" height="15.0" fill="rgb(233,63,23)" rx="2" ry="2" />
<text  x="703.75" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (12 samples, 0.03%)</title><rect x="1110.6" y="373" width="0.3" height="15.0" fill="rgb(235,143,25)" rx="2" ry="2" />
<text  x="1113.57" y="383.5" ></text>
</g>
<g >
<title>database::find_column_family (61 samples, 0.13%)</title><rect x="750.8" y="373" width="1.5" height="15.0" fill="rgb(223,111,32)" rx="2" ry="2" />
<text  x="753.77" y="383.5" ></text>
</g>
<g >
<title>std::variant&lt;fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (23 samples, 0.05%)</title><rect x="905.2" y="309" width="0.6" height="15.0" fill="rgb(205,172,10)" rx="2" ry="2" />
<text  x="908.25" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (6,054 samples, 12.79%)</title><rect x="110.6" y="357" width="150.9" height="15.0" fill="rgb(243,128,28)" rx="2" ry="2" />
<text  x="113.58" y="367.5" >mutation_fragment_m..</text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (49 samples, 0.10%)</title><rect x="605.6" y="389" width="1.2" height="15.0" fill="rgb(218,179,24)" rx="2" ry="2" />
<text  x="608.56" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (5 samples, 0.01%)</title><rect x="593.3" y="437" width="0.1" height="15.0" fill="rgb(244,20,52)" rx="2" ry="2" />
<text  x="596.29" y="447.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (18 samples, 0.04%)</title><rect x="359.0" y="197" width="0.4" height="15.0" fill="rgb(212,93,28)" rx="2" ry="2" />
<text  x="361.98" y="207.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (29 samples, 0.06%)</title><rect x="1143.3" y="309" width="0.7" height="15.0" fill="rgb(252,55,21)" rx="2" ry="2" />
<text  x="1146.30" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::reserve (6 samples, 0.01%)</title><rect x="95.9" y="405" width="0.1" height="15.0" fill="rgb(254,42,3)" rx="2" ry="2" />
<text  x="98.89" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lsa_partition_reader (32 samples, 0.07%)</title><rect x="505.0" y="277" width="0.8" height="15.0" fill="rgb(242,59,25)" rx="2" ry="2" />
<text  x="508.01" y="287.5" ></text>
</g>
<g >
<title>cql3::raw_value::to_view (7 samples, 0.01%)</title><rect x="851.1" y="389" width="0.2" height="15.0" fill="rgb(254,213,10)" rx="2" ry="2" />
<text  x="854.09" y="399.5" ></text>
</g>
<g >
<title>schema_registry::get (220 samples, 0.46%)</title><rect x="975.0" y="357" width="5.5" height="15.0" fill="rgb(206,219,30)" rx="2" ry="2" />
<text  x="978.03" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (10 samples, 0.02%)</title><rect x="861.8" y="485" width="0.3" height="15.0" fill="rgb(240,74,24)" rx="2" ry="2" />
<text  x="864.81" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::upgrade_schema (6 samples, 0.01%)</title><rect x="479.8" y="325" width="0.1" height="15.0" fill="rgb(206,201,37)" rx="2" ry="2" />
<text  x="482.75" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="610.9" y="373" width="0.5" height="15.0" fill="rgb(242,76,0)" rx="2" ry="2" />
<text  x="613.90" y="383.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (15 samples, 0.03%)</title><rect x="1160.0" y="405" width="0.4" height="15.0" fill="rgb(219,209,8)" rx="2" ry="2" />
<text  x="1163.03" y="415.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (15 samples, 0.03%)</title><rect x="1069.1" y="341" width="0.4" height="15.0" fill="rgb(206,184,25)" rx="2" ry="2" />
<text  x="1072.13" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (45 samples, 0.10%)</title><rect x="1066.3" y="293" width="1.1" height="15.0" fill="rgb(249,190,41)" rx="2" ry="2" />
<text  x="1069.29" y="303.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (62 samples, 0.13%)</title><rect x="821.9" y="309" width="1.5" height="15.0" fill="rgb(211,126,0)" rx="2" ry="2" />
<text  x="824.87" y="319.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (15 samples, 0.03%)</title><rect x="922.5" y="357" width="0.4" height="15.0" fill="rgb(241,155,19)" rx="2" ry="2" />
<text  x="925.53" y="367.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (1,296 samples, 2.74%)</title><rect x="325.1" y="181" width="32.3" height="15.0" fill="rgb(254,199,42)" rx="2" ry="2" />
<text  x="328.07" y="191.5" >wr..</text>
</g>
<g >
<title>managed_bytes::managed_bytes (26 samples, 0.05%)</title><rect x="895.2" y="261" width="0.7" height="15.0" fill="rgb(205,228,0)" rx="2" ry="2" />
<text  x="898.22" y="271.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (5 samples, 0.01%)</title><rect x="755.6" y="293" width="0.1" height="15.0" fill="rgb(231,136,37)" rx="2" ry="2" />
<text  x="758.60" y="303.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (84 samples, 0.18%)</title><rect x="441.1" y="309" width="2.1" height="15.0" fill="rgb(217,77,27)" rx="2" ry="2" />
<text  x="444.06" y="319.5" ></text>
</g>
<g >
<title>malloc (15 samples, 0.03%)</title><rect x="589.2" y="373" width="0.4" height="15.0" fill="rgb(249,213,11)" rx="2" ry="2" />
<text  x="592.23" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::shared_ptr_count_for&lt;cql3::result&gt; (53 samples, 0.11%)</title><rect x="643.5" y="453" width="1.3" height="15.0" fill="rgb(226,138,26)" rx="2" ry="2" />
<text  x="646.51" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::restrictions::multi_column_restriction&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1135.5" y="421" width="0.2" height="15.0" fill="rgb(232,184,29)" rx="2" ry="2" />
<text  x="1138.47" y="431.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%)</title><rect x="502.1" y="181" width="0.4" height="15.0" fill="rgb(227,108,46)" rx="2" ry="2" />
<text  x="505.07" y="191.5" ></text>
</g>
<g >
<title>operator delete (36 samples, 0.08%)</title><rect x="411.6" y="373" width="0.9" height="15.0" fill="rgb(210,69,5)" rx="2" ry="2" />
<text  x="414.56" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (6 samples, 0.01%)</title><rect x="751.0" y="341" width="0.1" height="15.0" fill="rgb(243,54,20)" rx="2" ry="2" />
<text  x="753.99" y="351.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::get_static_row (124 samples, 0.26%)</title><rect x="238.9" y="229" width="3.1" height="15.0" fill="rgb(219,222,25)" rx="2" ry="2" />
<text  x="241.93" y="239.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;::do_with_state&lt;std::optional&lt;auth::resource&gt; &gt; (42 samples, 0.09%)</title><rect x="771.9" y="309" width="1.1" height="15.0" fill="rgb(212,54,50)" rx="2" ry="2" />
<text  x="774.93" y="319.5" ></text>
</g>
<g >
<title>compound_type&lt; (141 samples, 0.30%)</title><rect x="930.8" y="373" width="3.5" height="15.0" fill="rgb(216,160,27)" rx="2" ry="2" />
<text  x="933.83" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (8 samples, 0.02%)</title><rect x="741.8" y="389" width="0.2" height="15.0" fill="rgb(213,68,9)" rx="2" ry="2" />
<text  x="744.79" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::small_vector (21 samples, 0.04%)</title><rect x="445.9" y="261" width="0.6" height="15.0" fill="rgb(241,108,30)" rx="2" ry="2" />
<text  x="448.94" y="271.5" ></text>
</g>
<g >
<title>cql3::restrictions::clustering_key_restrictions::needs_filtering (8 samples, 0.02%)</title><rect x="879.3" y="421" width="0.2" height="15.0" fill="rgb(231,135,25)" rx="2" ry="2" />
<text  x="882.32" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (33 samples, 0.07%)</title><rect x="857.6" y="421" width="0.8" height="15.0" fill="rgb(220,46,29)" rx="2" ry="2" />
<text  x="860.63" y="431.5" ></text>
</g>
<g >
<title>bytes_ostream::linearize (24 samples, 0.05%)</title><rect x="583.1" y="405" width="0.6" height="15.0" fill="rgb(217,44,10)" rx="2" ry="2" />
<text  x="586.15" y="415.5" ></text>
</g>
<g >
<title>mutation_partition_serializer::write_serialized&lt;ser::writer_of_mutation_partition&lt;bytes_ostream&gt; &gt; (5 samples, 0.01%)</title><rect x="1144.7" y="165" width="0.1" height="15.0" fill="rgb(229,76,48)" rx="2" ry="2" />
<text  x="1147.72" y="175.5" ></text>
</g>
<g >
<title>row_cache::do_make_reader (400 samples, 0.85%)</title><rect x="515.9" y="325" width="10.0" height="15.0" fill="rgb(234,88,52)" rx="2" ry="2" />
<text  x="518.90" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="906.7" y="357" width="0.5" height="15.0" fill="rgb(206,98,25)" rx="2" ry="2" />
<text  x="909.72" y="367.5" ></text>
</g>
<g >
<title>position_in_partition::position_in_partition (57 samples, 0.12%)</title><rect x="218.8" y="229" width="1.4" height="15.0" fill="rgb(242,12,25)" rx="2" ry="2" />
<text  x="221.78" y="239.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (31 samples, 0.07%)</title><rect x="865.8" y="405" width="0.8" height="15.0" fill="rgb(252,171,30)" rx="2" ry="2" />
<text  x="868.78" y="415.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (5 samples, 0.01%)</title><rect x="993.3" y="309" width="0.1" height="15.0" fill="rgb(210,217,16)" rx="2" ry="2" />
<text  x="996.26" y="319.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="623.3" y="469" width="0.8" height="15.0" fill="rgb(228,8,46)" rx="2" ry="2" />
<text  x="626.26" y="479.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="66.6" y="389" width="0.2" height="15.0" fill="rgb(240,42,25)" rx="2" ry="2" />
<text  x="69.60" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (20 samples, 0.04%)</title><rect x="132.3" y="261" width="0.5" height="15.0" fill="rgb(247,228,29)" rx="2" ry="2" />
<text  x="135.32" y="271.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (730 samples, 1.54%)</title><rect x="1082.6" y="325" width="18.2" height="15.0" fill="rgb(209,51,28)" rx="2" ry="2" />
<text  x="1085.57" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="478.5" y="181" width="0.2" height="15.0" fill="rgb(212,140,50)" rx="2" ry="2" />
<text  x="481.50" y="191.5" ></text>
</g>
<g >
<title>row::row (6 samples, 0.01%)</title><rect x="865.1" y="277" width="0.2" height="15.0" fill="rgb(232,38,42)" rx="2" ry="2" />
<text  x="868.13" y="287.5" ></text>
</g>
<g >
<title>memtable::make_flat_reader (13 samples, 0.03%)</title><rect x="419.6" y="357" width="0.4" height="15.0" fill="rgb(208,161,25)" rx="2" ry="2" />
<text  x="422.64" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (29 samples, 0.06%)</title><rect x="580.5" y="389" width="0.7" height="15.0" fill="rgb(212,84,4)" rx="2" ry="2" />
<text  x="583.50" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (64 samples, 0.14%)</title><rect x="735.5" y="325" width="1.6" height="15.0" fill="rgb(235,192,44)" rx="2" ry="2" />
<text  x="738.53" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;compact_mutation_state&lt; (122 samples, 0.26%)</title><rect x="604.1" y="421" width="3.1" height="15.0" fill="rgb(241,86,43)" rx="2" ry="2" />
<text  x="607.11" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (6 samples, 0.01%)</title><rect x="442.2" y="293" width="0.2" height="15.0" fill="rgb(225,55,40)" rx="2" ry="2" />
<text  x="445.20" y="303.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.08%)</title><rect x="732.4" y="373" width="0.9" height="15.0" fill="rgb(248,32,1)" rx="2" ry="2" />
<text  x="735.37" y="383.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::initial_key_restrictions&lt;partition_key&gt;::do_merge_to (7 samples, 0.01%)</title><rect x="21.6" y="373" width="0.2" height="15.0" fill="rgb(235,48,10)" rx="2" ry="2" />
<text  x="24.64" y="383.5" ></text>
</g>
<g >
<title>make_combined_reader (830 samples, 1.75%)</title><rect x="428.5" y="325" width="20.7" height="15.0" fill="rgb(214,147,41)" rx="2" ry="2" />
<text  x="431.54" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="1172.7" y="453" width="0.5" height="15.0" fill="rgb(214,188,15)" rx="2" ry="2" />
<text  x="1175.67" y="463.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt;::operator (23 samples, 0.05%)</title><rect x="809.4" y="309" width="0.5" height="15.0" fill="rgb(232,118,5)" rx="2" ry="2" />
<text  x="812.36" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (14 samples, 0.03%)</title><rect x="203.3" y="117" width="0.4" height="15.0" fill="rgb(207,136,46)" rx="2" ry="2" />
<text  x="206.33" y="127.5" ></text>
</g>
<g >
<title>query_result_builder::consume (8 samples, 0.02%)</title><rect x="675.1" y="293" width="0.2" height="15.0" fill="rgb(239,66,4)" rx="2" ry="2" />
<text  x="678.12" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="786.9" y="149" width="0.1" height="15.0" fill="rgb(246,95,54)" rx="2" ry="2" />
<text  x="789.92" y="159.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (19 samples, 0.04%)</title><rect x="280.3" y="373" width="0.5" height="15.0" fill="rgb(238,131,16)" rx="2" ry="2" />
<text  x="283.32" y="383.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_algorithms&lt;boost::intrusive::rbtree_node_traits&lt;void*, false&gt; &gt;::clear_and_dispose&lt;boost::intrusive::detail::node_disposer&lt;current_deleter&lt;range_tombstone_entry&gt; (6 samples, 0.01%)</title><rect x="558.6" y="277" width="0.1" height="15.0" fill="rgb(236,96,11)" rx="2" ry="2" />
<text  x="561.56" y="287.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (2,283 samples, 4.82%)</title><rect x="156.4" y="213" width="56.9" height="15.0" fill="rgb(224,10,3)" rx="2" ry="2" />
<text  x="159.43" y="223.5" >logall..</text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="526.1" y="325" width="0.1" height="15.0" fill="rgb(215,224,26)" rx="2" ry="2" />
<text  x="529.08" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (9 samples, 0.02%)</title><rect x="310.7" y="197" width="0.2" height="15.0" fill="rgb(219,95,17)" rx="2" ry="2" />
<text  x="313.71" y="207.5" ></text>
</g>
<g >
<title>query::result::result (8 samples, 0.02%)</title><rect x="598.0" y="421" width="0.2" height="15.0" fill="rgb(230,213,50)" rx="2" ry="2" />
<text  x="600.98" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (14 samples, 0.03%)</title><rect x="1106.8" y="357" width="0.4" height="15.0" fill="rgb(243,96,32)" rx="2" ry="2" />
<text  x="1109.83" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="251.3" y="293" width="0.2" height="15.0" fill="rgb(227,52,17)" rx="2" ry="2" />
<text  x="254.30" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (6,471 samples, 13.67%)</title><rect x="951.8" y="421" width="161.4" height="15.0" fill="rgb(227,116,27)" rx="2" ry="2" />
<text  x="954.85" y="431.5" >cql3::statements::se..</text>
</g>
<g >
<title>locator::token_metadata::get_host_id_if_known (62 samples, 0.13%)</title><rect x="1155.4" y="453" width="1.6" height="15.0" fill="rgb(218,101,5)" rx="2" ry="2" />
<text  x="1158.44" y="463.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, std::allocator&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt; (76 samples, 0.16%)</title><rect x="533.9" y="373" width="1.9" height="15.0" fill="rgb(208,195,15)" rx="2" ry="2" />
<text  x="536.88" y="383.5" ></text>
</g>
<g >
<title>perf_simple_que (47,328 samples, 100.00%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(246,98,47)" rx="2" ry="2" />
<text  x="13.00" y="655.5" >perf_simple_que</text>
</g>
<g >
<title>seastar::do_until&lt;flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="22.5" y="421" width="0.2" height="15.0" fill="rgb(246,94,14)" rx="2" ry="2" />
<text  x="25.54" y="431.5" ></text>
</g>
<g >
<title>query::result::result (53 samples, 0.11%)</title><rect x="582.6" y="421" width="1.4" height="15.0" fill="rgb(232,89,44)" rx="2" ry="2" />
<text  x="585.65" y="431.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (10 samples, 0.02%)</title><rect x="22.5" y="485" width="0.3" height="15.0" fill="rgb(223,91,51)" rx="2" ry="2" />
<text  x="25.54" y="495.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (53 samples, 0.11%)</title><rect x="96.0" y="437" width="1.4" height="15.0" fill="rgb(231,106,32)" rx="2" ry="2" />
<text  x="99.04" y="447.5" ></text>
</g>
<g >
<title>seastar::execution_stage::flush (9 samples, 0.02%)</title><rect x="746.9" y="357" width="0.2" height="15.0" fill="rgb(249,93,44)" rx="2" ry="2" />
<text  x="749.90" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (19 samples, 0.04%)</title><rect x="611.9" y="373" width="0.4" height="15.0" fill="rgb(208,61,19)" rx="2" ry="2" />
<text  x="614.87" y="383.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (34 samples, 0.07%)</title><rect x="146.0" y="197" width="0.8" height="15.0" fill="rgb(238,156,10)" rx="2" ry="2" />
<text  x="148.96" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (8 samples, 0.02%)</title><rect x="826.1" y="277" width="0.2" height="15.0" fill="rgb(220,48,29)" rx="2" ry="2" />
<text  x="829.14" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (19 samples, 0.04%)</title><rect x="556.9" y="277" width="0.5" height="15.0" fill="rgb(246,35,41)" rx="2" ry="2" />
<text  x="559.94" y="287.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::waiting_for (7 samples, 0.01%)</title><rect x="696.4" y="421" width="0.2" height="15.0" fill="rgb(229,10,49)" rx="2" ry="2" />
<text  x="699.41" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (10 samples, 0.02%)</title><rect x="1109.2" y="357" width="0.2" height="15.0" fill="rgb(242,114,19)" rx="2" ry="2" />
<text  x="1112.19" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (9 samples, 0.02%)</title><rect x="858.2" y="405" width="0.2" height="15.0" fill="rgb(210,94,15)" rx="2" ry="2" />
<text  x="861.22" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (41 samples, 0.09%)</title><rect x="1050.7" y="277" width="1.0" height="15.0" fill="rgb(233,55,46)" rx="2" ry="2" />
<text  x="1053.68" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;cql3::expr::constant&gt;  (7 samples, 0.01%)</title><rect x="901.9" y="325" width="0.2" height="15.0" fill="rgb(229,29,5)" rx="2" ry="2" />
<text  x="904.91" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (6 samples, 0.01%)</title><rect x="1152.1" y="485" width="0.2" height="15.0" fill="rgb(236,87,53)" rx="2" ry="2" />
<text  x="1155.13" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="988.7" y="261" width="0.6" height="15.0" fill="rgb(216,59,35)" rx="2" ry="2" />
<text  x="991.70" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (39 samples, 0.08%)</title><rect x="943.8" y="373" width="1.0" height="15.0" fill="rgb(241,142,2)" rx="2" ry="2" />
<text  x="946.82" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="433.5" y="245" width="0.2" height="15.0" fill="rgb(206,34,31)" rx="2" ry="2" />
<text  x="436.45" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (25 samples, 0.05%)</title><rect x="955.8" y="357" width="0.6" height="15.0" fill="rgb(227,218,26)" rx="2" ry="2" />
<text  x="958.81" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (6 samples, 0.01%)</title><rect x="503.3" y="245" width="0.2" height="15.0" fill="rgb(242,99,32)" rx="2" ry="2" />
<text  x="506.31" y="255.5" ></text>
</g>
<g >
<title>memtable::find_or_create_partition_slow (7 samples, 0.01%)</title><rect x="1143.3" y="245" width="0.2" height="15.0" fill="rgb(233,48,37)" rx="2" ry="2" />
<text  x="1146.30" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="809.7" y="293" width="0.2" height="15.0" fill="rgb(240,172,12)" rx="2" ry="2" />
<text  x="812.68" y="303.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (7 samples, 0.01%)</title><rect x="18.8" y="293" width="0.1" height="15.0" fill="rgb(239,45,49)" rx="2" ry="2" />
<text  x="21.75" y="303.5" ></text>
</g>
<g >
<title>make_partition_snapshot_flat_reader_from_snp_schema (1,004 samples, 2.12%)</title><rect x="482.9" y="325" width="25.0" height="15.0" fill="rgb(236,189,4)" rx="2" ry="2" />
<text  x="485.89" y="335.5" >m..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (9 samples, 0.02%)</title><rect x="698.9" y="405" width="0.2" height="15.0" fill="rgb(223,74,21)" rx="2" ry="2" />
<text  x="701.91" y="415.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="800.3" y="197" width="0.2" height="15.0" fill="rgb(252,39,34)" rx="2" ry="2" />
<text  x="803.33" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (23 samples, 0.05%)</title><rect x="1004.3" y="261" width="0.6" height="15.0" fill="rgb(252,210,23)" rx="2" ry="2" />
<text  x="1007.28" y="271.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="856.3" y="469" width="0.2" height="15.0" fill="rgb(232,203,16)" rx="2" ry="2" />
<text  x="859.30" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (316 samples, 0.67%)</title><rect x="179.2" y="85" width="7.9" height="15.0" fill="rgb(205,0,35)" rx="2" ry="2" />
<text  x="182.22" y="95.5" ></text>
</g>
<g >
<title>row::row (22 samples, 0.05%)</title><rect x="241.1" y="197" width="0.5" height="15.0" fill="rgb(246,124,16)" rx="2" ry="2" />
<text  x="244.10" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::_M_range_initialize&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*&gt; (121 samples, 0.26%)</title><rect x="1052.6" y="261" width="3.0" height="15.0" fill="rgb(228,153,42)" rx="2" ry="2" />
<text  x="1055.60" y="271.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (226 samples, 0.48%)</title><rect x="391.0" y="213" width="5.7" height="15.0" fill="rgb(211,149,16)" rx="2" ry="2" />
<text  x="394.02" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::handle_exception&lt;cql3::query_processor::execute_prepared (32 samples, 0.07%)</title><rect x="741.2" y="405" width="0.8" height="15.0" fill="rgb(209,158,4)" rx="2" ry="2" />
<text  x="744.19" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="403.4" y="277" width="0.3" height="15.0" fill="rgb(236,150,15)" rx="2" ry="2" />
<text  x="406.43" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;auth::role_or_anonymous&gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (16 samples, 0.03%)</title><rect x="806.9" y="277" width="0.4" height="15.0" fill="rgb(242,112,7)" rx="2" ry="2" />
<text  x="809.94" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="581.3" y="389" width="0.1" height="15.0" fill="rgb(233,104,51)" rx="2" ry="2" />
<text  x="584.25" y="399.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix&amp;&gt; (26 samples, 0.05%)</title><rect x="383.4" y="213" width="0.7" height="15.0" fill="rgb(225,116,54)" rx="2" ry="2" />
<text  x="386.41" y="223.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (8 samples, 0.02%)</title><rect x="160.7" y="181" width="0.2" height="15.0" fill="rgb(222,112,26)" rx="2" ry="2" />
<text  x="163.72" y="191.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (6 samples, 0.01%)</title><rect x="385.4" y="245" width="0.1" height="15.0" fill="rgb(220,34,36)" rx="2" ry="2" />
<text  x="388.36" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (26 samples, 0.05%)</title><rect x="1124.8" y="389" width="0.7" height="15.0" fill="rgb(225,52,9)" rx="2" ry="2" />
<text  x="1127.83" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="573.7" y="373" width="0.2" height="15.0" fill="rgb(226,61,30)" rx="2" ry="2" />
<text  x="576.72" y="383.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::set_value&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt; (48 samples, 0.10%)</title><rect x="681.2" y="453" width="1.2" height="15.0" fill="rgb(248,48,14)" rx="2" ry="2" />
<text  x="684.18" y="463.5" ></text>
</g>
<g >
<title>reader_permit::impl::on_admission (43 samples, 0.09%)</title><rect x="63.2" y="405" width="1.1" height="15.0" fill="rgb(235,99,25)" rx="2" ry="2" />
<text  x="66.21" y="415.5" ></text>
</g>
<g >
<title>mutation_reader_merger::add_readers (143 samples, 0.30%)</title><rect x="433.9" y="277" width="3.5" height="15.0" fill="rgb(242,108,0)" rx="2" ry="2" />
<text  x="436.85" y="287.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (15 samples, 0.03%)</title><rect x="415.5" y="421" width="0.4" height="15.0" fill="rgb(232,197,31)" rx="2" ry="2" />
<text  x="418.53" y="431.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (173 samples, 0.37%)</title><rect x="462.7" y="261" width="4.4" height="15.0" fill="rgb(241,153,20)" rx="2" ry="2" />
<text  x="465.75" y="271.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="146.9" y="197" width="0.5" height="15.0" fill="rgb(246,48,6)" rx="2" ry="2" />
<text  x="149.93" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (187 samples, 0.40%)</title><rect x="1064.4" y="325" width="4.6" height="15.0" fill="rgb(211,201,30)" rx="2" ry="2" />
<text  x="1067.37" y="335.5" ></text>
</g>
<g >
<title>database::get_unlimited_query_max_result_size (74 samples, 0.16%)</title><rect x="1136.6" y="405" width="1.8" height="15.0" fill="rgb(248,135,49)" rx="2" ry="2" />
<text  x="1139.57" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (21 samples, 0.04%)</title><rect x="1161.1" y="357" width="0.6" height="15.0" fill="rgb(243,62,24)" rx="2" ry="2" />
<text  x="1164.13" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (5 samples, 0.01%)</title><rect x="1140.9" y="421" width="0.1" height="15.0" fill="rgb(206,195,44)" rx="2" ry="2" />
<text  x="1143.86" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::query_state, false&gt;::make&lt;service::client_state&amp;, service_permit&gt; (48 samples, 0.10%)</title><rect x="844.0" y="421" width="1.2" height="15.0" fill="rgb(216,56,38)" rx="2" ry="2" />
<text  x="846.96" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="450.3" y="325" width="0.2" height="15.0" fill="rgb(252,8,4)" rx="2" ry="2" />
<text  x="453.28" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;auth::resource_kind, std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;auth::resource_kind const, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;auth::resource_kind&gt;, std::hash&lt;auth::resource_kind&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::at (34 samples, 0.07%)</title><rect x="763.4" y="357" width="0.9" height="15.0" fill="rgb(230,20,44)" rx="2" ry="2" />
<text  x="766.43" y="367.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (5 samples, 0.01%)</title><rect x="23.2" y="517" width="0.1" height="15.0" fill="rgb(213,63,44)" rx="2" ry="2" />
<text  x="26.19" y="527.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="640.4" y="469" width="0.1" height="15.0" fill="rgb(209,42,46)" rx="2" ry="2" />
<text  x="643.39" y="479.5" ></text>
</g>
<g >
<title>schema_registry_entry::get_schema (8 samples, 0.02%)</title><rect x="980.2" y="341" width="0.2" height="15.0" fill="rgb(239,156,45)" rx="2" ry="2" />
<text  x="983.22" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="1039.3" y="213" width="0.1" height="15.0" fill="rgb(212,33,3)" rx="2" ry="2" />
<text  x="1042.26" y="223.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (27 samples, 0.06%)</title><rect x="639.7" y="453" width="0.7" height="15.0" fill="rgb(232,49,41)" rx="2" ry="2" />
<text  x="642.72" y="463.5" ></text>
</g>
<g >
<title>std::optional&lt;dht::decorated_key&gt;::emplace&lt;dht::decorated_key&gt; (13 samples, 0.03%)</title><rect x="385.0" y="229" width="0.3" height="15.0" fill="rgb(250,146,10)" rx="2" ry="2" />
<text  x="388.01" y="239.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (26 samples, 0.05%)</title><rect x="903.0" y="293" width="0.6" height="15.0" fill="rgb(228,149,8)" rx="2" ry="2" />
<text  x="905.95" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;mutation_fragment&gt;::allocate (7 samples, 0.01%)</title><rect x="268.4" y="293" width="0.2" height="15.0" fill="rgb(215,0,12)" rx="2" ry="2" />
<text  x="271.42" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (15 samples, 0.03%)</title><rect x="440.3" y="277" width="0.4" height="15.0" fill="rgb(244,57,18)" rx="2" ry="2" />
<text  x="443.33" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1144.2" y="453" width="0.7" height="15.0" fill="rgb(232,64,24)" rx="2" ry="2" />
<text  x="1147.20" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (7 samples, 0.01%)</title><rect x="967.0" y="373" width="0.2" height="15.0" fill="rgb(245,186,51)" rx="2" ry="2" />
<text  x="970.00" y="383.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt;::~_Variant_storage (7 samples, 0.01%)</title><rect x="939.3" y="405" width="0.2" height="15.0" fill="rgb(212,133,37)" rx="2" ry="2" />
<text  x="942.28" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::allocate (91 samples, 0.19%)</title><rect x="189.6" y="117" width="2.3" height="15.0" fill="rgb(239,161,10)" rx="2" ry="2" />
<text  x="192.64" y="127.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::operator= (20 samples, 0.04%)</title><rect x="869.9" y="453" width="0.5" height="15.0" fill="rgb(214,76,9)" rx="2" ry="2" />
<text  x="872.92" y="463.5" ></text>
</g>
<g >
<title>reader_permit::consume (17 samples, 0.04%)</title><rect x="271.7" y="277" width="0.4" height="15.0" fill="rgb(221,101,46)" rx="2" ry="2" />
<text  x="274.69" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="1057.8" y="293" width="0.2" height="15.0" fill="rgb(216,179,6)" rx="2" ry="2" />
<text  x="1060.76" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::_M_reset (22 samples, 0.05%)</title><rect x="903.1" y="277" width="0.5" height="15.0" fill="rgb(214,215,25)" rx="2" ry="2" />
<text  x="906.05" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="1035.8" y="165" width="0.1" height="15.0" fill="rgb(224,219,52)" rx="2" ry="2" />
<text  x="1038.79" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;bool&gt;::move_it (10 samples, 0.02%)</title><rect x="770.1" y="341" width="0.3" height="15.0" fill="rgb(236,155,53)" rx="2" ry="2" />
<text  x="773.14" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="1003.6" y="229" width="0.7" height="15.0" fill="rgb(244,34,36)" rx="2" ry="2" />
<text  x="1006.56" y="239.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::operation::set_value, cql3::expr::expression&amp;&gt; (5 samples, 0.01%)</title><rect x="19.9" y="309" width="0.1" height="15.0" fill="rgb(212,171,30)" rx="2" ry="2" />
<text  x="22.90" y="319.5" ></text>
</g>
<g >
<title>dht::tri_compare (6 samples, 0.01%)</title><rect x="479.5" y="277" width="0.2" height="15.0" fill="rgb(216,27,32)" rx="2" ry="2" />
<text  x="482.53" y="287.5" ></text>
</g>
<g >
<title>abstract_type::without_reversed (7 samples, 0.01%)</title><rect x="882.6" y="405" width="0.2" height="15.0" fill="rgb(206,176,18)" rx="2" ry="2" />
<text  x="885.58" y="415.5" ></text>
</g>
<g >
<title>atomic_cell_or_collection::copy (725 samples, 1.53%)</title><rect x="169.3" y="117" width="18.1" height="15.0" fill="rgb(235,218,50)" rx="2" ry="2" />
<text  x="172.32" y="127.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="644.9" y="485" width="0.8" height="15.0" fill="rgb(241,62,33)" rx="2" ry="2" />
<text  x="647.93" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::apply_updates (20 samples, 0.04%)</title><rect x="866.1" y="373" width="0.5" height="15.0" fill="rgb(218,58,6)" rx="2" ry="2" />
<text  x="869.05" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::emplace_back&lt;query::result_digest const&gt; (17 samples, 0.04%)</title><rect x="696.7" y="437" width="0.4" height="15.0" fill="rgb(229,44,11)" rx="2" ry="2" />
<text  x="699.69" y="447.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (22 samples, 0.05%)</title><rect x="879.7" y="421" width="0.6" height="15.0" fill="rgb(242,97,34)" rx="2" ry="2" />
<text  x="882.72" y="431.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="765.1" y="357" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="768.13" y="367.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="833.1" y="373" width="0.4" height="15.0" fill="rgb(248,68,54)" rx="2" ry="2" />
<text  x="836.12" y="383.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (71 samples, 0.15%)</title><rect x="651.1" y="469" width="1.8" height="15.0" fill="rgb(215,152,47)" rx="2" ry="2" />
<text  x="654.09" y="479.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;signed char&gt; (5 samples, 0.01%)</title><rect x="736.6" y="277" width="0.1" height="15.0" fill="rgb(214,70,11)" rx="2" ry="2" />
<text  x="739.60" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql3::statements::update_statement&gt;::~shared_ptr_count_for (6 samples, 0.01%)</title><rect x="632.1" y="485" width="0.2" height="15.0" fill="rgb(247,110,46)" rx="2" ry="2" />
<text  x="635.11" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="133.3" y="261" width="0.1" height="15.0" fill="rgb(221,102,29)" rx="2" ry="2" />
<text  x="136.27" y="271.5" ></text>
</g>
<g >
<title>reader_permit::mark_unused (8 samples, 0.02%)</title><rect x="61.1" y="453" width="0.2" height="15.0" fill="rgb(210,57,14)" rx="2" ry="2" />
<text  x="64.06" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::key_is_in_relation (40 samples, 0.08%)</title><rect x="955.5" y="389" width="1.0" height="15.0" fill="rgb(235,83,30)" rx="2" ry="2" />
<text  x="958.46" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (30 samples, 0.06%)</title><rect x="562.8" y="341" width="0.7" height="15.0" fill="rgb(229,55,8)" rx="2" ry="2" />
<text  x="565.80" y="351.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (9 samples, 0.02%)</title><rect x="212.5" y="149" width="0.2" height="15.0" fill="rgb(229,11,46)" rx="2" ry="2" />
<text  x="215.48" y="159.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (15 samples, 0.03%)</title><rect x="997.2" y="277" width="0.3" height="15.0" fill="rgb(238,73,22)" rx="2" ry="2" />
<text  x="1000.17" y="287.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (15 samples, 0.03%)</title><rect x="688.9" y="469" width="0.4" height="15.0" fill="rgb(219,140,19)" rx="2" ry="2" />
<text  x="691.91" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (59 samples, 0.12%)</title><rect x="786.7" y="165" width="1.5" height="15.0" fill="rgb(210,91,19)" rx="2" ry="2" />
<text  x="789.69" y="175.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="808.5" y="309" width="0.7" height="15.0" fill="rgb(249,100,24)" rx="2" ry="2" />
<text  x="811.46" y="319.5" ></text>
</g>
<g >
<title>schema::column_at (51 samples, 0.11%)</title><rect x="380.7" y="165" width="1.2" height="15.0" fill="rgb(222,13,15)" rx="2" ry="2" />
<text  x="383.67" y="175.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="910.7" y="309" width="0.4" height="15.0" fill="rgb(254,60,38)" rx="2" ry="2" />
<text  x="913.71" y="319.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="1056.9" y="277" width="0.2" height="15.0" fill="rgb(239,161,11)" rx="2" ry="2" />
<text  x="1059.94" y="287.5" ></text>
</g>
<g >
<title>antlr3::TokenIntStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LA (71 samples, 0.15%)</title><rect x="16.1" y="357" width="1.8" height="15.0" fill="rgb(221,225,40)" rx="2" ry="2" />
<text  x="19.08" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (10 samples, 0.02%)</title><rect x="242.2" y="261" width="0.2" height="15.0" fill="rgb(229,135,49)" rx="2" ry="2" />
<text  x="245.20" y="271.5" ></text>
</g>
<g >
<title>cql3::query_processor::process_authorized_statement (9 samples, 0.02%)</title><rect x="831.2" y="437" width="0.2" height="15.0" fill="rgb(241,191,10)" rx="2" ry="2" />
<text  x="834.20" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;managed_bytes&gt;::dispose (10 samples, 0.02%)</title><rect x="911.7" y="373" width="0.3" height="15.0" fill="rgb(220,40,2)" rx="2" ry="2" />
<text  x="914.70" y="383.5" ></text>
</g>
<g >
<title>reader_permit::consume (10 samples, 0.02%)</title><rect x="205.6" y="149" width="0.3" height="15.0" fill="rgb(219,192,11)" rx="2" ry="2" />
<text  x="208.64" y="159.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_data_request (2,104 samples, 4.45%)</title><rect x="1005.8" y="309" width="52.5" height="15.0" fill="rgb(250,86,51)" rx="2" ry="2" />
<text  x="1008.85" y="319.5" >servi..</text>
</g>
<g >
<title>cql3::statements::select_statement::do_execute (10,766 samples, 22.75%)</title><rect x="874.0" y="437" width="268.4" height="15.0" fill="rgb(221,4,14)" rx="2" ry="2" />
<text  x="876.96" y="447.5" >cql3::statements::select_statement:..</text>
</g>
<g >
<title>local_schema_registry (19 samples, 0.04%)</title><rect x="972.3" y="357" width="0.4" height="15.0" fill="rgb(247,118,0)" rx="2" ry="2" />
<text  x="975.27" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="710.9" y="469" width="0.1" height="15.0" fill="rgb(211,115,27)" rx="2" ry="2" />
<text  x="713.92" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;dht::decorated_key&gt;::_M_reset (5 samples, 0.01%)</title><rect x="384.8" y="229" width="0.1" height="15.0" fill="rgb(217,159,50)" rx="2" ry="2" />
<text  x="387.81" y="239.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (22 samples, 0.05%)</title><rect x="551.3" y="293" width="0.6" height="15.0" fill="rgb(251,190,2)" rx="2" ry="2" />
<text  x="554.31" y="303.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (28 samples, 0.06%)</title><rect x="840.1" y="357" width="0.7" height="15.0" fill="rgb(219,172,49)" rx="2" ry="2" />
<text  x="843.10" y="367.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="479.1" y="213" width="0.2" height="15.0" fill="rgb(221,150,20)" rx="2" ry="2" />
<text  x="482.05" y="223.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (282 samples, 0.60%)</title><rect x="472.3" y="245" width="7.1" height="15.0" fill="rgb(252,158,7)" rx="2" ry="2" />
<text  x="475.35" y="255.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (5 samples, 0.01%)</title><rect x="151.7" y="229" width="0.2" height="15.0" fill="rgb(229,167,23)" rx="2" ry="2" />
<text  x="154.74" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (5 samples, 0.01%)</title><rect x="1047.0" y="261" width="0.1" height="15.0" fill="rgb(226,161,0)" rx="2" ry="2" />
<text  x="1049.96" y="271.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (65 samples, 0.14%)</title><rect x="859.7" y="453" width="1.7" height="15.0" fill="rgb(215,171,10)" rx="2" ry="2" />
<text  x="862.75" y="463.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (122 samples, 0.26%)</title><rect x="738.0" y="309" width="3.0" height="15.0" fill="rgb(235,153,33)" rx="2" ry="2" />
<text  x="740.95" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (30 samples, 0.06%)</title><rect x="191.1" y="69" width="0.7" height="15.0" fill="rgb(250,205,13)" rx="2" ry="2" />
<text  x="194.08" y="79.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::add (8 samples, 0.02%)</title><rect x="665.7" y="469" width="0.2" height="15.0" fill="rgb(220,74,18)" rx="2" ry="2" />
<text  x="668.75" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="751.8" y="325" width="0.5" height="15.0" fill="rgb(230,76,23)" rx="2" ry="2" />
<text  x="754.81" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::disable_abort_on_alloc_failure_temporarily::~disable_abort_on_alloc_failure_temporarily (8 samples, 0.02%)</title><rect x="218.3" y="181" width="0.2" height="15.0" fill="rgb(225,87,31)" rx="2" ry="2" />
<text  x="221.31" y="191.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::take (5 samples, 0.01%)</title><rect x="594.8" y="437" width="0.1" height="15.0" fill="rgb(206,52,26)" rx="2" ry="2" />
<text  x="597.81" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (9 samples, 0.02%)</title><rect x="620.2" y="485" width="0.3" height="15.0" fill="rgb(218,56,44)" rx="2" ry="2" />
<text  x="623.25" y="495.5" ></text>
</g>
<g >
<title>memtable::upgrade_entry (10 samples, 0.02%)</title><rect x="508.1" y="325" width="0.2" height="15.0" fill="rgb(253,195,31)" rx="2" ry="2" />
<text  x="511.07" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (47 samples, 0.10%)</title><rect x="818.7" y="309" width="1.2" height="15.0" fill="rgb(247,222,31)" rx="2" ry="2" />
<text  x="821.73" y="319.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (28 samples, 0.06%)</title><rect x="231.4" y="181" width="0.7" height="15.0" fill="rgb(242,150,0)" rx="2" ry="2" />
<text  x="234.42" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume (7 samples, 0.01%)</title><rect x="151.3" y="197" width="0.1" height="15.0" fill="rgb(242,32,17)" rx="2" ry="2" />
<text  x="154.27" y="207.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="1127.9" y="421" width="1.0" height="15.0" fill="rgb(226,113,15)" rx="2" ry="2" />
<text  x="1130.94" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;mutation_fragment*&gt;::then_impl&lt;query::consume_page&lt; (17 samples, 0.04%)</title><rect x="531.5" y="421" width="0.4" height="15.0" fill="rgb(227,64,7)" rx="2" ry="2" />
<text  x="534.51" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="603.9" y="405" width="0.2" height="15.0" fill="rgb(208,143,32)" rx="2" ry="2" />
<text  x="606.94" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="1080.9" y="325" width="0.4" height="15.0" fill="rgb(233,132,42)" rx="2" ry="2" />
<text  x="1083.90" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (31 samples, 0.07%)</title><rect x="40.1" y="469" width="0.8" height="15.0" fill="rgb(234,56,11)" rx="2" ry="2" />
<text  x="43.12" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (5 samples, 0.01%)</title><rect x="1036.1" y="149" width="0.1" height="15.0" fill="rgb(230,118,31)" rx="2" ry="2" />
<text  x="1039.07" y="159.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (1,027 samples, 2.17%)</title><rect x="779.4" y="277" width="25.6" height="15.0" fill="rgb(242,171,46)" rx="2" ry="2" />
<text  x="782.44" y="287.5" >a..</text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::LA (7 samples, 0.01%)</title><rect x="18.8" y="309" width="0.1" height="15.0" fill="rgb(223,171,37)" rx="2" ry="2" />
<text  x="21.75" y="319.5" ></text>
</g>
<g >
<title>std::type_info::operator== (5 samples, 0.01%)</title><rect x="1175.9" y="405" width="0.2" height="15.0" fill="rgb(239,5,13)" rx="2" ry="2" />
<text  x="1178.94" y="415.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (14 samples, 0.03%)</title><rect x="740.6" y="261" width="0.4" height="15.0" fill="rgb(238,74,33)" rx="2" ry="2" />
<text  x="743.64" y="271.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::make_open_ended_both_sides (121 samples, 0.26%)</title><rect x="1117.0" y="389" width="3.0" height="15.0" fill="rgb(218,135,2)" rx="2" ry="2" />
<text  x="1120.00" y="399.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (7 samples, 0.01%)</title><rect x="22.2" y="405" width="0.2" height="15.0" fill="rgb(221,22,27)" rx="2" ry="2" />
<text  x="25.19" y="415.5" ></text>
</g>
<g >
<title>reader_selector::~reader_selector (15 samples, 0.03%)</title><rect x="567.5" y="341" width="0.4" height="15.0" fill="rgb(236,71,48)" rx="2" ry="2" />
<text  x="570.54" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::sort_endpoints_by_proximity (7 samples, 0.01%)</title><rect x="1103.0" y="341" width="0.2" height="15.0" fill="rgb(240,176,18)" rx="2" ry="2" />
<text  x="1105.99" y="351.5" ></text>
</g>
<g >
<title>std::make_unique&lt;empty_flat_reader, seastar::lw_shared_ptr&lt;schema const&gt;, reader_permit&gt; (78 samples, 0.16%)</title><rect x="523.4" y="277" width="1.9" height="15.0" fill="rgb(245,155,28)" rx="2" ry="2" />
<text  x="526.36" y="287.5" ></text>
</g>
<g >
<title>seastar::thread_context::main (10 samples, 0.02%)</title><rect x="22.5" y="533" width="0.3" height="15.0" fill="rgb(218,197,20)" rx="2" ry="2" />
<text  x="25.54" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;clustering_key_prefix, false, false&gt;::_Optional_base (7 samples, 0.01%)</title><rect x="221.9" y="213" width="0.2" height="15.0" fill="rgb(219,118,6)" rx="2" ry="2" />
<text  x="224.90" y="223.5" ></text>
</g>
<g >
<title>std::optional&lt;reader_concurrency_semaphore::entry&gt;::optional&lt;reader_concurrency_semaphore::entry, true&gt; (37 samples, 0.08%)</title><rect x="1034.8" y="149" width="0.9" height="15.0" fill="rgb(209,183,6)" rx="2" ry="2" />
<text  x="1037.77" y="159.5" ></text>
</g>
<g >
<title>utils::phased_barrier::start (13 samples, 0.03%)</title><rect x="1043.8" y="245" width="0.3" height="15.0" fill="rgb(252,198,32)" rx="2" ry="2" />
<text  x="1046.80" y="255.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (29 samples, 0.06%)</title><rect x="1133.7" y="389" width="0.7" height="15.0" fill="rgb(215,52,39)" rx="2" ry="2" />
<text  x="1136.70" y="399.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (12 samples, 0.03%)</title><rect x="255.5" y="325" width="0.3" height="15.0" fill="rgb(232,58,36)" rx="2" ry="2" />
<text  x="258.51" y="335.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="42.8" y="485" width="0.5" height="15.0" fill="rgb(244,166,48)" rx="2" ry="2" />
<text  x="45.81" y="495.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (8 samples, 0.02%)</title><rect x="22.2" y="469" width="0.2" height="15.0" fill="rgb(219,138,31)" rx="2" ry="2" />
<text  x="25.17" y="479.5" ></text>
</g>
<g >
<title>row::compact_and_expire (805 samples, 1.70%)</title><rect x="362.4" y="213" width="20.1" height="15.0" fill="rgb(246,183,0)" rx="2" ry="2" />
<text  x="365.39" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (28 samples, 0.06%)</title><rect x="566.6" y="357" width="0.7" height="15.0" fill="rgb(239,14,17)" rx="2" ry="2" />
<text  x="569.59" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (14 samples, 0.03%)</title><rect x="1070.7" y="341" width="0.4" height="15.0" fill="rgb(234,120,14)" rx="2" ry="2" />
<text  x="1073.75" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::~abstract_read_resolver (25 samples, 0.05%)</title><rect x="686.3" y="469" width="0.6" height="15.0" fill="rgb(240,82,40)" rx="2" ry="2" />
<text  x="689.32" y="479.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (23 samples, 0.05%)</title><rect x="453.6" y="325" width="0.6" height="15.0" fill="rgb(235,53,27)" rx="2" ry="2" />
<text  x="456.62" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (21 samples, 0.04%)</title><rect x="834.2" y="437" width="0.5" height="15.0" fill="rgb(222,129,34)" rx="2" ry="2" />
<text  x="837.16" y="447.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (129 samples, 0.27%)</title><rect x="707.6" y="469" width="3.2" height="15.0" fill="rgb(223,97,4)" rx="2" ry="2" />
<text  x="710.58" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (71 samples, 0.15%)</title><rect x="16.1" y="341" width="1.8" height="15.0" fill="rgb(224,197,30)" rx="2" ry="2" />
<text  x="19.08" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="535.5" y="341" width="0.1" height="15.0" fill="rgb(239,76,0)" rx="2" ry="2" />
<text  x="538.45" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="772.9" y="261" width="0.1" height="15.0" fill="rgb(234,110,51)" rx="2" ry="2" />
<text  x="775.86" y="271.5" ></text>
</g>
<g >
<title>[unknown] (514 samples, 1.09%)</title><rect x="10.0" y="629" width="12.8" height="15.0" fill="rgb(221,103,20)" rx="2" ry="2" />
<text  x="13.02" y="639.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.18%)</title><rect x="537.7" y="325" width="2.2" height="15.0" fill="rgb(231,12,24)" rx="2" ry="2" />
<text  x="540.74" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (15 samples, 0.03%)</title><rect x="775.3" y="309" width="0.4" height="15.0" fill="rgb(215,36,42)" rx="2" ry="2" />
<text  x="778.32" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (37 samples, 0.08%)</title><rect x="562.7" y="357" width="0.9" height="15.0" fill="rgb(231,117,9)" rx="2" ry="2" />
<text  x="565.73" y="367.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="781.1" y="245" width="0.7" height="15.0" fill="rgb(219,93,52)" rx="2" ry="2" />
<text  x="784.13" y="255.5" ></text>
</g>
<g >
<title>__cxxabiv1::__si_class_type_info::__do_dyncast (60 samples, 0.13%)</title><rect x="10.4" y="581" width="1.5" height="15.0" fill="rgb(216,126,44)" rx="2" ry="2" />
<text  x="13.37" y="591.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (94 samples, 0.20%)</title><rect x="1104.5" y="357" width="2.3" height="15.0" fill="rgb(232,116,23)" rx="2" ry="2" />
<text  x="1107.48" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="855.4" y="437" width="0.3" height="15.0" fill="rgb(229,134,2)" rx="2" ry="2" />
<text  x="858.41" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (27 samples, 0.06%)</title><rect x="655.2" y="469" width="0.6" height="15.0" fill="rgb(220,105,36)" rx="2" ry="2" />
<text  x="658.15" y="479.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;service::digest_read_result&gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::execute (265 samples, 0.56%)</title><rect x="677.6" y="485" width="6.6" height="15.0" fill="rgb(234,229,3)" rx="2" ry="2" />
<text  x="680.56" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (5 samples, 0.01%)</title><rect x="879.6" y="421" width="0.1" height="15.0" fill="rgb(238,14,45)" rx="2" ry="2" />
<text  x="882.59" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (9 samples, 0.02%)</title><rect x="263.0" y="341" width="0.3" height="15.0" fill="rgb(225,80,48)" rx="2" ry="2" />
<text  x="266.04" y="351.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (32 samples, 0.07%)</title><rect x="796.3" y="117" width="0.8" height="15.0" fill="rgb(218,129,31)" rx="2" ry="2" />
<text  x="799.34" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (28 samples, 0.06%)</title><rect x="93.8" y="373" width="0.7" height="15.0" fill="rgb(248,191,42)" rx="2" ry="2" />
<text  x="96.77" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;cql_transport::messages::result_message::rows&gt;::~shared_ptr_count_for (313 samples, 0.66%)</title><rect x="33.6" y="485" width="7.8" height="15.0" fill="rgb(218,211,4)" rx="2" ry="2" />
<text  x="36.59" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (7 samples, 0.01%)</title><rect x="1033.0" y="149" width="0.2" height="15.0" fill="rgb(252,29,5)" rx="2" ry="2" />
<text  x="1035.98" y="159.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="702.9" y="501" width="0.2" height="15.0" fill="rgb(234,160,4)" rx="2" ry="2" />
<text  x="705.90" y="511.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (46 samples, 0.10%)</title><rect x="209.8" y="149" width="1.2" height="15.0" fill="rgb(249,178,28)" rx="2" ry="2" />
<text  x="212.83" y="159.5" ></text>
</g>
<g >
<title>flush_reader::fill_buffer (6 samples, 0.01%)</title><rect x="22.5" y="437" width="0.2" height="15.0" fill="rgb(254,153,43)" rx="2" ry="2" />
<text  x="25.54" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (39 samples, 0.08%)</title><rect x="942.7" y="357" width="1.0" height="15.0" fill="rgb(253,157,22)" rx="2" ry="2" />
<text  x="945.70" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (6 samples, 0.01%)</title><rect x="758.4" y="405" width="0.2" height="15.0" fill="rgb(219,43,20)" rx="2" ry="2" />
<text  x="761.42" y="415.5" ></text>
</g>
<g >
<title>database::has_keyspace (108 samples, 0.23%)</title><rect x="845.9" y="405" width="2.7" height="15.0" fill="rgb(248,53,13)" rx="2" ry="2" />
<text  x="848.86" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::~vector (22 samples, 0.05%)</title><rect x="661.7" y="453" width="0.5" height="15.0" fill="rgb(233,131,14)" rx="2" ry="2" />
<text  x="664.68" y="463.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (5,543 samples, 11.71%)</title><rect x="113.8" y="325" width="138.2" height="15.0" fill="rgb(233,11,52)" rx="2" ry="2" />
<text  x="116.82" y="335.5" >mutation_reader_m..</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;query::result_memory_limiter::new_data_read (29 samples, 0.06%)</title><rect x="593.4" y="437" width="0.7" height="15.0" fill="rgb(233,150,48)" rx="2" ry="2" />
<text  x="596.42" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::shared_ptr_count_for&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (181 samples, 0.38%)</title><rect x="993.0" y="325" width="4.5" height="15.0" fill="rgb(237,36,37)" rx="2" ry="2" />
<text  x="996.03" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::move_it (5 samples, 0.01%)</title><rect x="655.6" y="453" width="0.2" height="15.0" fill="rgb(217,75,40)" rx="2" ry="2" />
<text  x="658.65" y="463.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (12 samples, 0.03%)</title><rect x="207.6" y="149" width="0.3" height="15.0" fill="rgb(208,88,16)" rx="2" ry="2" />
<text  x="210.56" y="159.5" ></text>
</g>
<g >
<title>service::abstract_write_response_handler::apply_locally (10 samples, 0.02%)</title><rect x="1144.4" y="245" width="0.2" height="15.0" fill="rgb(206,118,47)" rx="2" ry="2" />
<text  x="1147.37" y="255.5" ></text>
</g>
<g >
<title>sched_setaffinity@@GLIBC_2.3.4 (44 samples, 0.09%)</title><rect x="1188.9" y="629" width="1.1" height="15.0" fill="rgb(241,175,35)" rx="2" ry="2" />
<text  x="1191.88" y="639.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (3,560 samples, 7.52%)</title><rect x="295.4" y="229" width="88.7" height="15.0" fill="rgb(205,33,0)" rx="2" ry="2" />
<text  x="298.35" y="239.5" >compact_mu..</text>
</g>
<g >
<title>cql3::raw_value::make_value (206 samples, 0.44%)</title><rect x="892.6" y="277" width="5.1" height="15.0" fill="rgb(253,87,28)" rx="2" ry="2" />
<text  x="895.58" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::digest_read_result&gt;::set_value&lt;service::digest_read_result&gt; (21 samples, 0.04%)</title><rect x="694.3" y="421" width="0.6" height="15.0" fill="rgb(212,221,19)" rx="2" ry="2" />
<text  x="697.34" y="431.5" ></text>
</g>
<g >
<title>dht::ring_position_tri_compare (409 samples, 0.86%)</title><rect x="469.3" y="277" width="10.2" height="15.0" fill="rgb(252,151,3)" rx="2" ry="2" />
<text  x="472.33" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (9 samples, 0.02%)</title><rect x="405.4" y="277" width="0.2" height="15.0" fill="rgb(233,38,37)" rx="2" ry="2" />
<text  x="408.35" y="287.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (852 samples, 1.80%)</title><rect x="885.2" y="357" width="21.3" height="15.0" fill="rgb(236,195,13)" rx="2" ry="2" />
<text  x="888.23" y="367.5" >c..</text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_range_check (8 samples, 0.02%)</title><rect x="892.4" y="261" width="0.2" height="15.0" fill="rgb(212,154,40)" rx="2" ry="2" />
<text  x="895.38" y="271.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="896.1" y="261" width="0.2" height="15.0" fill="rgb(212,125,49)" rx="2" ry="2" />
<text  x="899.07" y="271.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="773.5" y="309" width="0.1" height="15.0" fill="rgb(250,67,53)" rx="2" ry="2" />
<text  x="776.48" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="511.4" y="309" width="0.8" height="15.0" fill="rgb(249,9,9)" rx="2" ry="2" />
<text  x="514.39" y="319.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (74 samples, 0.16%)</title><rect x="59.2" y="453" width="1.9" height="15.0" fill="rgb(241,82,15)" rx="2" ry="2" />
<text  x="62.22" y="463.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="657.1" y="485" width="0.1" height="15.0" fill="rgb(226,124,2)" rx="2" ry="2" />
<text  x="660.12" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (67 samples, 0.14%)</title><rect x="1016.2" y="245" width="1.6" height="15.0" fill="rgb(205,199,51)" rx="2" ry="2" />
<text  x="1019.17" y="255.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (5 samples, 0.01%)</title><rect x="544.0" y="357" width="0.2" height="15.0" fill="rgb(214,16,54)" rx="2" ry="2" />
<text  x="547.03" y="367.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (11 samples, 0.02%)</title><rect x="158.1" y="197" width="0.2" height="15.0" fill="rgb(233,30,44)" rx="2" ry="2" />
<text  x="161.07" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_rehash_aux (76 samples, 0.16%)</title><rect x="1159.8" y="421" width="1.9" height="15.0" fill="rgb(235,62,0)" rx="2" ry="2" />
<text  x="1162.81" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::run (46,373 samples, 97.98%)</title><rect x="22.9" y="549" width="1156.2" height="15.0" fill="rgb(220,26,33)" rx="2" ry="2" />
<text  x="25.87" y="559.5" >seastar::reactor::run</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="600.9" y="421" width="0.5" height="15.0" fill="rgb(247,221,9)" rx="2" ry="2" />
<text  x="603.92" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::maybe_drop_from (7 samples, 0.01%)</title><rect x="362.9" y="197" width="0.2" height="15.0" fill="rgb(225,115,54)" rx="2" ry="2" />
<text  x="365.92" y="207.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (19 samples, 0.04%)</title><rect x="799.6" y="85" width="0.4" height="15.0" fill="rgb(215,198,40)" rx="2" ry="2" />
<text  x="802.56" y="95.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;void&gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_nrvo&lt;void, service::abstract_read_executor::make_data_requests (462 samples, 0.98%)</title><rect x="688.5" y="485" width="11.5" height="15.0" fill="rgb(220,122,20)" rx="2" ry="2" />
<text  x="691.46" y="495.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_28has_slice_or_needs_filteringERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm0EEEE14__visit_invokeES28_S2B_ (15 samples, 0.03%)</title><rect x="947.4" y="389" width="0.4" height="15.0" fill="rgb(239,25,2)" rx="2" ry="2" />
<text  x="950.43" y="399.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (36 samples, 0.08%)</title><rect x="823.5" y="309" width="0.9" height="15.0" fill="rgb(253,136,1)" rx="2" ry="2" />
<text  x="826.52" y="319.5" ></text>
</g>
<g >
<title>operator new (53 samples, 0.11%)</title><rect x="852.0" y="357" width="1.3" height="15.0" fill="rgb(245,211,0)" rx="2" ry="2" />
<text  x="854.99" y="367.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.02%)</title><rect x="22.5" y="581" width="0.3" height="15.0" fill="rgb(220,154,50)" rx="2" ry="2" />
<text  x="25.54" y="591.5" ></text>
</g>
<g >
<title>cql3::to_managed_bytes_opt (7 samples, 0.01%)</title><rect x="906.5" y="357" width="0.2" height="15.0" fill="rgb(246,140,10)" rx="2" ry="2" />
<text  x="909.54" y="367.5" ></text>
</g>
<g >
<title>TLS init function for cql3::query_options::specific_options::DEFAULT (9 samples, 0.02%)</title><rect x="707.3" y="469" width="0.2" height="15.0" fill="rgb(213,7,7)" rx="2" ry="2" />
<text  x="710.28" y="479.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEENK4$_43clERKNSF_15binary_operatorEEUlRKNSF_12column_valueEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_17tuple_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlNSF_5tokenEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlSS_E_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_11conjunctionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_8constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_21unresolved_identifierEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_25column_mutation_attributeEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13function_callEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4castEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_15field_selectionEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_4nullEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_13bind_variableEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_16untyped_constantEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_22collection_constructorEE_ZZNSF_19possible_lhs_valuesESI_SL_SO_ENKSP_clESS_EUlRKNSF_20usertype_constructorEE_EERS4_IJS14_SQ_ST_S11_S1C_S1G_S1K_S1O_S1S_S1W_S20_S24_S18_SX_S28_S2C_EEEJEEESt16integer_sequenceImJLm2EEEE14__visit_invokeES2H_S2J_ (1,083 samples, 2.29%)</title><rect x="884.1" y="373" width="27.0" height="15.0" fill="rgb(240,36,21)" rx="2" ry="2" />
<text  x="887.10" y="383.5" >_..</text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::operator== (81 samples, 0.17%)</title><rect x="793.4" y="133" width="2.0" height="15.0" fill="rgb(210,140,50)" rx="2" ry="2" />
<text  x="796.40" y="143.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (374 samples, 0.79%)</title><rect x="458.5" y="293" width="9.3" height="15.0" fill="rgb(250,175,25)" rx="2" ry="2" />
<text  x="461.51" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (139 samples, 0.29%)</title><rect x="578.4" y="421" width="3.5" height="15.0" fill="rgb(229,215,52)" rx="2" ry="2" />
<text  x="581.43" y="431.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (9 samples, 0.02%)</title><rect x="865.1" y="309" width="0.3" height="15.0" fill="rgb(228,6,5)" rx="2" ry="2" />
<text  x="868.13" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (8 samples, 0.02%)</title><rect x="775.5" y="293" width="0.2" height="15.0" fill="rgb(238,216,19)" rx="2" ry="2" />
<text  x="778.50" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (5 samples, 0.01%)</title><rect x="1135.3" y="421" width="0.2" height="15.0" fill="rgb(227,201,19)" rx="2" ry="2" />
<text  x="1138.35" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="16.1" y="309" width="0.2" height="15.0" fill="rgb(232,31,37)" rx="2" ry="2" />
<text  x="19.08" y="319.5" ></text>
</g>
<g >
<title>reader_permit::used_guard::~used_guard (403 samples, 0.85%)</title><rect x="61.4" y="453" width="10.0" height="15.0" fill="rgb(209,147,54)" rx="2" ry="2" />
<text  x="64.36" y="463.5" ></text>
</g>
<g >
<title>bound_view::from_range_end&lt;nonwrapping_interval&gt; (15 samples, 0.03%)</title><rect x="220.6" y="213" width="0.4" height="15.0" fill="rgb(231,166,18)" rx="2" ry="2" />
<text  x="223.63" y="223.5" ></text>
</g>
<g >
<title>__tls_init (6 samples, 0.01%)</title><rect x="522.5" y="277" width="0.2" height="15.0" fill="rgb(232,61,43)" rx="2" ry="2" />
<text  x="525.51" y="287.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;long*, std::vector&lt;long, std::allocator&lt;long&gt; &gt; &gt;, long, __gnu_cxx::__ops::_Iter_less_val&gt; (45 samples, 0.10%)</title><rect x="1166.2" y="453" width="1.1" height="15.0" fill="rgb(236,47,44)" rx="2" ry="2" />
<text  x="1169.19" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (15 samples, 0.03%)</title><rect x="1080.0" y="309" width="0.4" height="15.0" fill="rgb(237,223,3)" rx="2" ry="2" />
<text  x="1083.00" y="319.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_cell&lt;bytes_ostream&gt;::skip_timestamp (110 samples, 0.23%)</title><rect x="352.2" y="165" width="2.7" height="15.0" fill="rgb(226,48,44)" rx="2" ry="2" />
<text  x="355.17" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (5 samples, 0.01%)</title><rect x="986.6" y="325" width="0.2" height="15.0" fill="rgb(237,158,14)" rx="2" ry="2" />
<text  x="989.63" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (39 samples, 0.08%)</title><rect x="576.2" y="421" width="0.9" height="15.0" fill="rgb(233,0,36)" rx="2" ry="2" />
<text  x="579.16" y="431.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark (65 samples, 0.14%)</title><rect x="590.9" y="421" width="1.6" height="15.0" fill="rgb(251,213,8)" rx="2" ry="2" />
<text  x="593.92" y="431.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::execute (33 samples, 0.07%)</title><rect x="827.7" y="421" width="0.8" height="15.0" fill="rgb(240,166,24)" rx="2" ry="2" />
<text  x="830.66" y="431.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (12,533 samples, 26.48%)</title><rect x="102.3" y="421" width="312.5" height="15.0" fill="rgb(223,138,51)" rx="2" ry="2" />
<text  x="105.35" y="431.5" >query::consume_page&lt;</text>
</g>
<g >
<title>flat_mutation_reader::close (16 samples, 0.03%)</title><rect x="1176.9" y="453" width="0.4" height="15.0" fill="rgb(224,147,33)" rx="2" ry="2" />
<text  x="1179.86" y="463.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::merge_to (6 samples, 0.01%)</title><rect x="21.6" y="357" width="0.2" height="15.0" fill="rgb(222,218,46)" rx="2" ry="2" />
<text  x="24.64" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="449.6" y="309" width="0.6" height="15.0" fill="rgb(239,87,41)" rx="2" ry="2" />
<text  x="452.58" y="319.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="488.4" y="293" width="0.6" height="15.0" fill="rgb(213,38,53)" rx="2" ry="2" />
<text  x="491.40" y="303.5" ></text>
</g>
<g >
<title>service::never_speculating_read_executor::~never_speculating_read_executor (106 samples, 0.22%)</title><rect x="1173.8" y="453" width="2.7" height="15.0" fill="rgb(222,162,5)" rx="2" ry="2" />
<text  x="1176.84" y="463.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mTokens (7 samples, 0.01%)</title><rect x="17.5" y="261" width="0.2" height="15.0" fill="rgb(232,215,5)" rx="2" ry="2" />
<text  x="20.48" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::~_Hashtable (41 samples, 0.09%)</title><rect x="660.6" y="453" width="1.1" height="15.0" fill="rgb(221,42,10)" rx="2" ry="2" />
<text  x="663.64" y="463.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (50 samples, 0.11%)</title><rect x="940.2" y="389" width="1.2" height="15.0" fill="rgb(236,153,1)" rx="2" ry="2" />
<text  x="943.15" y="399.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (5 samples, 0.01%)</title><rect x="677.3" y="485" width="0.1" height="15.0" fill="rgb(220,131,27)" rx="2" ry="2" />
<text  x="680.27" y="495.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (78 samples, 0.16%)</title><rect x="318.3" y="181" width="1.9" height="15.0" fill="rgb(248,125,44)" rx="2" ry="2" />
<text  x="321.26" y="191.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (9 samples, 0.02%)</title><rect x="522.7" y="309" width="0.2" height="15.0" fill="rgb(218,52,11)" rx="2" ry="2" />
<text  x="525.66" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value_view, std::allocator&lt;cql3::raw_value_view&gt; &gt;::_M_realloc_insert&lt;cql3::raw_value_view&gt; (80 samples, 0.17%)</title><rect x="851.5" y="373" width="2.0" height="15.0" fill="rgb(242,57,30)" rx="2" ry="2" />
<text  x="854.54" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::node_size (12 samples, 0.03%)</title><rect x="197.5" y="149" width="0.3" height="15.0" fill="rgb(242,188,53)" rx="2" ry="2" />
<text  x="200.49" y="159.5" ></text>
</g>
<g >
<title>logalloc::basic_region_impl::set_reclaiming_enabled (10 samples, 0.02%)</title><rect x="215.3" y="181" width="0.2" height="15.0" fill="rgb(229,142,29)" rx="2" ry="2" />
<text  x="218.27" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (7 samples, 0.01%)</title><rect x="764.4" y="341" width="0.1" height="15.0" fill="rgb(234,203,35)" rx="2" ry="2" />
<text  x="767.35" y="351.5" ></text>
</g>
<g >
<title>database::query (153 samples, 0.32%)</title><rect x="41.5" y="501" width="3.8" height="15.0" fill="rgb(216,48,32)" rx="2" ry="2" />
<text  x="44.51" y="511.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (31 samples, 0.07%)</title><rect x="1111.1" y="405" width="0.7" height="15.0" fill="rgb(219,112,44)" rx="2" ry="2" />
<text  x="1114.06" y="415.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::~modification_statement (6 samples, 0.01%)</title><rect x="632.1" y="469" width="0.2" height="15.0" fill="rgb(218,47,53)" rx="2" ry="2" />
<text  x="635.11" y="479.5" ></text>
</g>
<g >
<title>antlr3::TokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::_LT (5 samples, 0.01%)</title><rect x="18.8" y="277" width="0.1" height="15.0" fill="rgb(216,12,34)" rx="2" ry="2" />
<text  x="21.75" y="287.5" ></text>
</g>
<g >
<title>dht::tri_compare (31 samples, 0.07%)</title><rect x="1084.7" y="245" width="0.8" height="15.0" fill="rgb(211,221,4)" rx="2" ry="2" />
<text  x="1087.69" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="530.8" y="405" width="0.2" height="15.0" fill="rgb(243,118,17)" rx="2" ry="2" />
<text  x="533.84" y="415.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_cql (272 samples, 0.57%)</title><rect x="15.7" y="517" width="6.7" height="15.0" fill="rgb(235,72,47)" rx="2" ry="2" />
<text  x="18.66" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;cql3::query_options&gt;::operator (137 samples, 0.29%)</title><rect x="659.7" y="469" width="3.4" height="15.0" fill="rgb(215,147,8)" rx="2" ry="2" />
<text  x="662.66" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (7 samples, 0.01%)</title><rect x="274.8" y="357" width="0.2" height="15.0" fill="rgb(212,132,35)" rx="2" ry="2" />
<text  x="277.83" y="367.5" ></text>
</g>
<g >
<title>flat_mutation_reader::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,115 samples, 10.81%)</title><rect x="280.8" y="373" width="127.5" height="15.0" fill="rgb(211,192,4)" rx="2" ry="2" />
<text  x="283.79" y="383.5" >flat_mutation_re..</text>
</g>
<g >
<title>reader_permit::resource_units::reset (143 samples, 0.30%)</title><rect x="385.5" y="245" width="3.6" height="15.0" fill="rgb(248,111,10)" rx="2" ry="2" />
<text  x="388.51" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (24 samples, 0.05%)</title><rect x="966.2" y="341" width="0.6" height="15.0" fill="rgb(226,152,20)" rx="2" ry="2" />
<text  x="969.21" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="559.6" y="293" width="0.3" height="15.0" fill="rgb(220,39,22)" rx="2" ry="2" />
<text  x="562.56" y="303.5" ></text>
</g>
<g >
<title>global_schema_ptr::get (6 samples, 0.01%)</title><rect x="1044.1" y="261" width="0.2" height="15.0" fill="rgb(206,29,12)" rx="2" ry="2" />
<text  x="1047.12" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%)</title><rect x="1044.4" y="245" width="1.5" height="15.0" fill="rgb(232,134,47)" rx="2" ry="2" />
<text  x="1047.42" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;__gnu_cxx::__normal_iterator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt; &gt;, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (31 samples, 0.07%)</title><rect x="94.5" y="405" width="0.8" height="15.0" fill="rgb(252,36,9)" rx="2" ry="2" />
<text  x="97.50" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (19 samples, 0.04%)</title><rect x="150.6" y="213" width="0.5" height="15.0" fill="rgb(226,162,31)" rx="2" ry="2" />
<text  x="153.64" y="223.5" ></text>
</g>
<g >
<title>dht::maximum_token (6 samples, 0.01%)</title><rect x="432.4" y="277" width="0.1" height="15.0" fill="rgb(210,2,42)" rx="2" ry="2" />
<text  x="435.38" y="287.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,645 samples, 47.85%)</title><rect x="48.7" y="485" width="564.6" height="15.0" fill="rgb(218,81,27)" rx="2" ry="2" />
<text  x="51.72" y="495.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (31 samples, 0.07%)</title><rect x="246.1" y="277" width="0.8" height="15.0" fill="rgb(231,213,24)" rx="2" ry="2" />
<text  x="249.13" y="287.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (6 samples, 0.01%)</title><rect x="680.5" y="437" width="0.1" height="15.0" fill="rgb(238,161,23)" rx="2" ry="2" />
<text  x="683.48" y="447.5" ></text>
</g>
<g >
<title>db::filter_for_query (28 samples, 0.06%)</title><rect x="1069.7" y="341" width="0.7" height="15.0" fill="rgb(231,33,19)" rx="2" ry="2" />
<text  x="1072.68" y="351.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::operator== (7 samples, 0.01%)</title><rect x="795.5" y="149" width="0.1" height="15.0" fill="rgb(233,145,24)" rx="2" ry="2" />
<text  x="798.47" y="159.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::allocate (50 samples, 0.11%)</title><rect x="497.4" y="213" width="1.2" height="15.0" fill="rgb(206,86,46)" rx="2" ry="2" />
<text  x="500.35" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (15 samples, 0.03%)</title><rect x="129.0" y="245" width="0.3" height="15.0" fill="rgb(215,181,52)" rx="2" ry="2" />
<text  x="131.95" y="255.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="944.6" y="309" width="0.2" height="15.0" fill="rgb(252,158,32)" rx="2" ry="2" />
<text  x="947.64" y="319.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (5 samples, 0.01%)</title><rect x="577.2" y="421" width="0.1" height="15.0" fill="rgb(238,149,4)" rx="2" ry="2" />
<text  x="580.21" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt; const&amp;, mutation_fragment&gt; (19 samples, 0.04%)</title><rect x="131.8" y="245" width="0.5" height="15.0" fill="rgb(228,159,22)" rx="2" ry="2" />
<text  x="134.84" y="255.5" ></text>
</g>
<g >
<title>database::find_column_family (54 samples, 0.11%)</title><rect x="818.6" y="341" width="1.3" height="15.0" fill="rgb(228,221,34)" rx="2" ry="2" />
<text  x="821.56" y="351.5" ></text>
</g>
<g >
<title>utils::estimated_histogram::add (59 samples, 0.12%)</title><rect x="1165.9" y="469" width="1.5" height="15.0" fill="rgb(253,21,21)" rx="2" ry="2" />
<text  x="1168.89" y="479.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice const, std::default_delete&lt;query::partition_slice const&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="1177.3" y="469" width="0.2" height="15.0" fill="rgb(227,194,27)" rx="2" ry="2" />
<text  x="1180.31" y="479.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::digest_read_result&gt;::set&lt;service::digest_read_result&gt; (15 samples, 0.03%)</title><rect x="694.5" y="405" width="0.4" height="15.0" fill="rgb(207,212,53)" rx="2" ry="2" />
<text  x="697.49" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (6 samples, 0.01%)</title><rect x="437.3" y="261" width="0.1" height="15.0" fill="rgb(219,194,28)" rx="2" ry="2" />
<text  x="440.27" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (12 samples, 0.03%)</title><rect x="1129.9" y="421" width="0.3" height="15.0" fill="rgb(248,10,46)" rx="2" ry="2" />
<text  x="1132.86" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="524.2" y="229" width="0.2" height="15.0" fill="rgb(230,99,4)" rx="2" ry="2" />
<text  x="527.23" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (6 samples, 0.01%)</title><rect x="217.6" y="117" width="0.2" height="15.0" fill="rgb(254,217,3)" rx="2" ry="2" />
<text  x="220.64" y="127.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_digest_requests (6 samples, 0.01%)</title><rect x="1058.5" y="325" width="0.1" height="15.0" fill="rgb(249,0,29)" rx="2" ry="2" />
<text  x="1061.46" y="335.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::normalColumnOperation (54 samples, 0.11%)</title><rect x="18.7" y="325" width="1.4" height="15.0" fill="rgb(237,79,42)" rx="2" ry="2" />
<text  x="21.73" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Copy_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Copy_ctor_base (7 samples, 0.01%)</title><rect x="304.3" y="165" width="0.2" height="15.0" fill="rgb(228,57,1)" rx="2" ry="2" />
<text  x="307.33" y="175.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="839.5" y="341" width="0.2" height="15.0" fill="rgb(254,21,33)" rx="2" ry="2" />
<text  x="842.50" y="351.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (32 samples, 0.07%)</title><rect x="955.6" y="373" width="0.8" height="15.0" fill="rgb(241,72,39)" rx="2" ry="2" />
<text  x="958.64" y="383.5" ></text>
</g>
<g >
<title>position_in_partition_view::position_in_partition_view (7 samples, 0.01%)</title><rect x="221.0" y="213" width="0.2" height="15.0" fill="rgb(212,106,44)" rx="2" ry="2" />
<text  x="224.00" y="223.5" ></text>
</g>
<g >
<title>seastar::chunked_fifo&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, 128ul&gt;::emplace_back&lt;reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (190 samples, 0.40%)</title><rect x="1031.6" y="181" width="4.7" height="15.0" fill="rgb(214,217,38)" rx="2" ry="2" />
<text  x="1034.60" y="191.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.11%)</title><rect x="554.0" y="293" width="1.3" height="15.0" fill="rgb(239,153,27)" rx="2" ry="2" />
<text  x="557.00" y="303.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;std::optional&lt;auth::resource&gt; &gt; (9 samples, 0.02%)</title><rect x="808.1" y="325" width="0.2" height="15.0" fill="rgb(249,201,22)" rx="2" ry="2" />
<text  x="811.09" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1145.1" y="485" width="0.1" height="15.0" fill="rgb(227,169,11)" rx="2" ry="2" />
<text  x="1148.07" y="495.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (220 samples, 0.46%)</title><rect x="198.2" y="133" width="5.5" height="15.0" fill="rgb(214,92,4)" rx="2" ry="2" />
<text  x="201.19" y="143.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;locator::snitch_ptr&gt;::local (16 samples, 0.03%)</title><rect x="1101.7" y="309" width="0.4" height="15.0" fill="rgb(253,188,19)" rx="2" ry="2" />
<text  x="1104.71" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (12 samples, 0.03%)</title><rect x="310.2" y="197" width="0.3" height="15.0" fill="rgb(216,61,19)" rx="2" ry="2" />
<text  x="313.24" y="207.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (8 samples, 0.02%)</title><rect x="917.4" y="341" width="0.2" height="15.0" fill="rgb(215,37,5)" rx="2" ry="2" />
<text  x="920.41" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (22 samples, 0.05%)</title><rect x="412.5" y="357" width="0.5" height="15.0" fill="rgb(209,166,38)" rx="2" ry="2" />
<text  x="415.46" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (6 samples, 0.01%)</title><rect x="768.9" y="357" width="0.1" height="15.0" fill="rgb(226,216,23)" rx="2" ry="2" />
<text  x="771.89" y="367.5" ></text>
</g>
<g >
<title>operator new (80 samples, 0.17%)</title><rect x="956.5" y="405" width="2.0" height="15.0" fill="rgb(239,151,48)" rx="2" ry="2" />
<text  x="959.46" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_move_assign (38 samples, 0.08%)</title><rect x="439.4" y="277" width="0.9" height="15.0" fill="rgb(248,212,37)" rx="2" ry="2" />
<text  x="442.39" y="287.5" ></text>
</g>
<g >
<title>mutation_fragment::destroy_data (360 samples, 0.76%)</title><rect x="389.2" y="261" width="9.0" height="15.0" fill="rgb(239,157,51)" rx="2" ry="2" />
<text  x="392.22" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (183 samples, 0.39%)</title><rect x="1001.0" y="309" width="4.6" height="15.0" fill="rgb(206,206,54)" rx="2" ry="2" />
<text  x="1003.99" y="319.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate_to_raw_view (7 samples, 0.01%)</title><rect x="866.3" y="309" width="0.1" height="15.0" fill="rgb(224,58,4)" rx="2" ry="2" />
<text  x="869.25" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (101 samples, 0.21%)</title><rect x="738.5" y="277" width="2.5" height="15.0" fill="rgb(246,171,3)" rx="2" ry="2" />
<text  x="741.47" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (87 samples, 0.18%)</title><rect x="650.7" y="485" width="2.2" height="15.0" fill="rgb(252,109,8)" rx="2" ry="2" />
<text  x="653.74" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.09%)</title><rect x="206.9" y="165" width="1.0" height="15.0" fill="rgb(209,29,31)" rx="2" ry="2" />
<text  x="209.87" y="175.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="33.8" y="469" width="0.9" height="15.0" fill="rgb(227,9,40)" rx="2" ry="2" />
<text  x="36.84" y="479.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="190.6" y="101" width="0.3" height="15.0" fill="rgb(209,157,13)" rx="2" ry="2" />
<text  x="193.61" y="111.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;clustering_key_prefix&gt;::nonwrapping_interval (63 samples, 0.13%)</title><rect x="1117.1" y="373" width="1.6" height="15.0" fill="rgb(227,188,0)" rx="2" ry="2" />
<text  x="1120.12" y="383.5" ></text>
</g>
<g >
<title>service::client_state::check_has_permission (1,601 samples, 3.38%)</title><rect x="770.4" y="341" width="39.9" height="15.0" fill="rgb(247,156,43)" rx="2" ry="2" />
<text  x="773.41" y="351.5" >ser..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="736.4" y="277" width="0.2" height="15.0" fill="rgb(236,32,18)" rx="2" ry="2" />
<text  x="739.43" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="401.0" y="229" width="0.3" height="15.0" fill="rgb(218,203,53)" rx="2" ry="2" />
<text  x="403.99" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (47 samples, 0.10%)</title><rect x="801.6" y="245" width="1.2" height="15.0" fill="rgb(212,131,41)" rx="2" ry="2" />
<text  x="804.63" y="255.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::cqlStatement (201 samples, 0.42%)</title><rect x="16.1" y="389" width="5.0" height="15.0" fill="rgb(214,64,11)" rx="2" ry="2" />
<text  x="19.08" y="399.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (46 samples, 0.10%)</title><rect x="351.0" y="149" width="1.2" height="15.0" fill="rgb(251,152,49)" rx="2" ry="2" />
<text  x="354.03" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data_aux (27 samples, 0.06%)</title><rect x="360.7" y="149" width="0.6" height="15.0" fill="rgb(219,191,34)" rx="2" ry="2" />
<text  x="363.67" y="159.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (36 samples, 0.08%)</title><rect x="728.2" y="389" width="0.9" height="15.0" fill="rgb(214,8,32)" rx="2" ry="2" />
<text  x="731.18" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (9 samples, 0.02%)</title><rect x="250.3" y="293" width="0.3" height="15.0" fill="rgb(211,22,29)" rx="2" ry="2" />
<text  x="253.35" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::build_partition_keys (7 samples, 0.01%)</title><rect x="865.9" y="389" width="0.1" height="15.0" fill="rgb(210,74,25)" rx="2" ry="2" />
<text  x="868.85" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (271 samples, 0.57%)</title><rect x="817.8" y="373" width="6.7" height="15.0" fill="rgb(214,78,13)" rx="2" ry="2" />
<text  x="820.78" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="967.6" y="373" width="0.2" height="15.0" fill="rgb(251,8,48)" rx="2" ry="2" />
<text  x="970.63" y="383.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (23 samples, 0.05%)</title><rect x="232.8" y="197" width="0.6" height="15.0" fill="rgb(208,220,43)" rx="2" ry="2" />
<text  x="235.85" y="207.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (46 samples, 0.10%)</title><rect x="430.9" y="293" width="1.2" height="15.0" fill="rgb(228,135,47)" rx="2" ry="2" />
<text  x="433.93" y="303.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.04%)</title><rect x="610.9" y="389" width="0.5" height="15.0" fill="rgb(226,41,9)" rx="2" ry="2" />
<text  x="613.90" y="399.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (16 samples, 0.03%)</title><rect x="1037.8" y="197" width="0.4" height="15.0" fill="rgb(245,127,22)" rx="2" ry="2" />
<text  x="1040.84" y="207.5" ></text>
</g>
<g >
<title>mutation_reader_merger::~mutation_reader_merger (273 samples, 0.58%)</title><rect x="566.0" y="373" width="6.8" height="15.0" fill="rgb(231,215,46)" rx="2" ry="2" />
<text  x="569.04" y="383.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (6 samples, 0.01%)</title><rect x="359.9" y="197" width="0.2" height="15.0" fill="rgb(216,160,37)" rx="2" ry="2" />
<text  x="362.90" y="207.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="515.7" y="325" width="0.2" height="15.0" fill="rgb(207,60,46)" rx="2" ry="2" />
<text  x="518.68" y="335.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (23 samples, 0.05%)</title><rect x="839.3" y="357" width="0.5" height="15.0" fill="rgb(246,109,9)" rx="2" ry="2" />
<text  x="842.28" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (7 samples, 0.01%)</title><rect x="1135.2" y="421" width="0.1" height="15.0" fill="rgb(243,200,13)" rx="2" ry="2" />
<text  x="1138.17" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_next_bkt (50 samples, 0.11%)</title><rect x="1164.0" y="453" width="1.2" height="15.0" fill="rgb(221,54,3)" rx="2" ry="2" />
<text  x="1166.97" y="463.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (467 samples, 0.99%)</title><rect x="298.0" y="213" width="11.7" height="15.0" fill="rgb(241,196,13)" rx="2" ry="2" />
<text  x="301.02" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::partition_slice, std::default_delete&lt;query::partition_slice&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="527.0" y="341" width="0.2" height="15.0" fill="rgb(225,129,35)" rx="2" ry="2" />
<text  x="530.02" y="351.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="22.2" y="293" width="0.2" height="15.0" fill="rgb(234,176,46)" rx="2" ry="2" />
<text  x="25.24" y="303.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (23 samples, 0.05%)</title><rect x="737.4" y="309" width="0.6" height="15.0" fill="rgb(212,135,47)" rx="2" ry="2" />
<text  x="740.38" y="319.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;service::storage_proxy::unique_response_handler*, service::storage_proxy::mutate_begin (10 samples, 0.02%)</title><rect x="1144.4" y="277" width="0.2" height="15.0" fill="rgb(233,222,18)" rx="2" ry="2" />
<text  x="1147.37" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (6 samples, 0.01%)</title><rect x="505.9" y="277" width="0.1" height="15.0" fill="rgb(225,125,33)" rx="2" ry="2" />
<text  x="508.86" y="287.5" ></text>
</g>
<g >
<title>std::default_delete&lt;compact_for_query&lt; (30 samples, 0.06%)</title><rect x="407.1" y="261" width="0.7" height="15.0" fill="rgb(226,219,44)" rx="2" ry="2" />
<text  x="410.10" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (10 samples, 0.02%)</title><rect x="47.9" y="485" width="0.3" height="15.0" fill="rgb(235,224,28)" rx="2" ry="2" />
<text  x="50.95" y="495.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (273 samples, 0.58%)</title><rect x="716.5" y="421" width="6.8" height="15.0" fill="rgb(237,93,39)" rx="2" ry="2" />
<text  x="719.46" y="431.5" ></text>
</g>
<g >
<title>mutation_source::mutation_source (79 samples, 0.17%)</title><rect x="610.5" y="421" width="2.0" height="15.0" fill="rgb(242,118,9)" rx="2" ry="2" />
<text  x="613.50" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (177 samples, 0.37%)</title><rect x="753.2" y="357" width="4.4" height="15.0" fill="rgb(211,211,15)" rx="2" ry="2" />
<text  x="756.18" y="367.5" ></text>
</g>
<g >
<title>main (46,373 samples, 97.98%)</title><rect x="22.9" y="613" width="1156.2" height="15.0" fill="rgb(237,93,13)" rx="2" ry="2" />
<text  x="25.87" y="623.5" >main</text>
</g>
<g >
<title>cql3_parser::CqlParser::value (16 samples, 0.03%)</title><rect x="19.4" y="293" width="0.4" height="15.0" fill="rgb(248,177,10)" rx="2" ry="2" />
<text  x="22.45" y="303.5" ></text>
</g>
<g >
<title>operator delete (32 samples, 0.07%)</title><rect x="653.2" y="485" width="0.8" height="15.0" fill="rgb(242,66,15)" rx="2" ry="2" />
<text  x="656.18" y="495.5" ></text>
</g>
<g >
<title>seastar::hrtimer_aio_completion::complete_with (21 samples, 0.04%)</title><rect x="1178.4" y="469" width="0.5" height="15.0" fill="rgb(221,88,27)" rx="2" ry="2" />
<text  x="1181.38" y="479.5" ></text>
</g>
<g >
<title>operator delete (89 samples, 0.19%)</title><rect x="399.0" y="245" width="2.3" height="15.0" fill="rgb(214,68,20)" rx="2" ry="2" />
<text  x="402.04" y="255.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1144.2" y="421" width="0.7" height="15.0" fill="rgb(236,142,12)" rx="2" ry="2" />
<text  x="1147.20" y="431.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::find&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt; (147 samples, 0.31%)</title><rect x="820.8" y="325" width="3.6" height="15.0" fill="rgb(245,45,32)" rx="2" ry="2" />
<text  x="823.75" y="335.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="413.8" y="389" width="0.1" height="15.0" fill="rgb(251,74,22)" rx="2" ry="2" />
<text  x="416.78" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="621.7" y="485" width="0.2" height="15.0" fill="rgb(243,83,12)" rx="2" ry="2" />
<text  x="624.67" y="495.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="60.9" y="437" width="0.2" height="15.0" fill="rgb(234,16,49)" rx="2" ry="2" />
<text  x="63.89" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="561.5" y="325" width="0.1" height="15.0" fill="rgb(228,41,45)" rx="2" ry="2" />
<text  x="564.45" y="335.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (72 samples, 0.15%)</title><rect x="145.0" y="213" width="1.8" height="15.0" fill="rgb(233,71,18)" rx="2" ry="2" />
<text  x="148.01" y="223.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (17 samples, 0.04%)</title><rect x="638.6" y="437" width="0.4" height="15.0" fill="rgb(222,218,52)" rx="2" ry="2" />
<text  x="641.60" y="447.5" ></text>
</g>
<g >
<title>schema::column_at (64 samples, 0.14%)</title><rect x="192.8" y="117" width="1.6" height="15.0" fill="rgb(235,88,44)" rx="2" ry="2" />
<text  x="195.80" y="127.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (9 samples, 0.02%)</title><rect x="752.9" y="357" width="0.2" height="15.0" fill="rgb(253,178,31)" rx="2" ry="2" />
<text  x="755.86" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::at&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt; &gt; (177 samples, 0.37%)</title><rect x="820.1" y="341" width="4.4" height="15.0" fill="rgb(212,9,53)" rx="2" ry="2" />
<text  x="823.08" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (1,278 samples, 2.70%)</title><rect x="542.9" y="421" width="31.8" height="15.0" fill="rgb(230,196,54)" rx="2" ry="2" />
<text  x="545.88" y="431.5" >st..</text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="658.1" y="453" width="0.2" height="15.0" fill="rgb(225,125,52)" rx="2" ry="2" />
<text  x="661.07" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="598.3" y="437" width="0.1" height="15.0" fill="rgb(207,75,36)" rx="2" ry="2" />
<text  x="601.28" y="447.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="409.2" y="357" width="0.1" height="15.0" fill="rgb(224,217,45)" rx="2" ry="2" />
<text  x="412.19" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::term&gt;::~shared_ptr (11 samples, 0.02%)</title><rect x="1135.7" y="421" width="0.3" height="15.0" fill="rgb(226,196,31)" rx="2" ry="2" />
<text  x="1138.75" y="431.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (699 samples, 1.48%)</title><rect x="726.1" y="421" width="17.4" height="15.0" fill="rgb(225,195,39)" rx="2" ry="2" />
<text  x="729.08" y="431.5" ></text>
</g>
<g >
<title>seastar::promise&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::promise (12 samples, 0.03%)</title><rect x="1143.0" y="469" width="0.3" height="15.0" fill="rgb(208,228,10)" rx="2" ry="2" />
<text  x="1145.98" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (26 samples, 0.05%)</title><rect x="944.1" y="357" width="0.7" height="15.0" fill="rgb(214,124,46)" rx="2" ry="2" />
<text  x="947.14" y="367.5" ></text>
</g>
<g >
<title>seastar::lambda_task&lt;seastar::execution_stage::flush (5 samples, 0.01%)</title><rect x="25.1" y="517" width="0.1" height="15.0" fill="rgb(247,77,44)" rx="2" ry="2" />
<text  x="28.08" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (93 samples, 0.20%)</title><rect x="579.6" y="405" width="2.3" height="15.0" fill="rgb(233,142,35)" rx="2" ry="2" />
<text  x="582.56" y="415.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (53 samples, 0.11%)</title><rect x="751.0" y="357" width="1.3" height="15.0" fill="rgb(219,65,37)" rx="2" ry="2" />
<text  x="753.97" y="367.5" ></text>
</g>
<g >
<title>ser::safe_serialize_as_uint32&lt;bytes_ostream&gt; (8 samples, 0.02%)</title><rect x="347.4" y="165" width="0.2" height="15.0" fill="rgb(251,181,47)" rx="2" ry="2" />
<text  x="350.43" y="175.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (8 samples, 0.02%)</title><rect x="639.3" y="453" width="0.2" height="15.0" fill="rgb(241,193,41)" rx="2" ry="2" />
<text  x="642.29" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="628.2" y="485" width="0.4" height="15.0" fill="rgb(230,28,47)" rx="2" ry="2" />
<text  x="631.25" y="495.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (1,385 samples, 2.93%)</title><rect x="161.5" y="165" width="34.5" height="15.0" fill="rgb(229,122,53)" rx="2" ry="2" />
<text  x="164.46" y="175.5" >cl..</text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="18.8" y="261" width="0.1" height="15.0" fill="rgb(218,195,27)" rx="2" ry="2" />
<text  x="21.75" y="271.5" ></text>
</g>
<g >
<title>tracing::add_table_name (12 samples, 0.03%)</title><rect x="1141.8" y="421" width="0.3" height="15.0" fill="rgb(225,114,29)" rx="2" ry="2" />
<text  x="1144.78" y="431.5" ></text>
</g>
<g >
<title>operator new (163 samples, 0.34%)</title><rect x="1013.8" y="277" width="4.0" height="15.0" fill="rgb(237,89,3)" rx="2" ry="2" />
<text  x="1016.78" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (87 samples, 0.18%)</title><rect x="476.1" y="197" width="2.1" height="15.0" fill="rgb(233,137,9)" rx="2" ry="2" />
<text  x="479.06" y="207.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (475 samples, 1.00%)</title><rect x="729.3" y="389" width="11.8" height="15.0" fill="rgb(244,135,24)" rx="2" ry="2" />
<text  x="732.30" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::coroutine_traits_base&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::promise_type::run_and_dispose (6 samples, 0.01%)</title><rect x="24.7" y="517" width="0.2" height="15.0" fill="rgb(216,46,17)" rx="2" ry="2" />
<text  x="27.71" y="527.5" ></text>
</g>
<g >
<title>cql3::statements::prepared_statement::checked_weak_from_this (48 samples, 0.10%)</title><rect x="715.2" y="421" width="1.2" height="15.0" fill="rgb(239,2,33)" rx="2" ry="2" />
<text  x="718.24" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="809.1" y="293" width="0.1" height="15.0" fill="rgb(242,158,32)" rx="2" ry="2" />
<text  x="812.11" y="303.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (8 samples, 0.02%)</title><rect x="998.5" y="325" width="0.2" height="15.0" fill="rgb(234,173,27)" rx="2" ry="2" />
<text  x="1001.52" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt;::push_back (5 samples, 0.01%)</title><rect x="1157.0" y="453" width="0.1" height="15.0" fill="rgb(205,88,32)" rx="2" ry="2" />
<text  x="1160.01" y="463.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implIN4auth17role_or_anonymousEZNS3_15get_permissionsERKNS3_7serviceERKNS3_18authenticated_userERKNS3_8resourceEE3$_9JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS4_EEEDcSG_SI_ (52 samples, 0.11%)</title><rect x="777.6" y="293" width="1.3" height="15.0" fill="rgb(242,171,47)" rx="2" ry="2" />
<text  x="780.57" y="303.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (8 samples, 0.02%)</title><rect x="261.3" y="341" width="0.2" height="15.0" fill="rgb(206,67,18)" rx="2" ry="2" />
<text  x="264.32" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (5 samples, 0.01%)</title><rect x="703.4" y="501" width="0.1" height="15.0" fill="rgb(216,157,17)" rx="2" ry="2" />
<text  x="706.39" y="511.5" ></text>
</g>
<g >
<title>bytes_ostream::view (6 samples, 0.01%)</title><rect x="583.6" y="389" width="0.1" height="15.0" fill="rgb(251,40,17)" rx="2" ry="2" />
<text  x="586.59" y="399.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (11 samples, 0.02%)</title><rect x="151.2" y="213" width="0.2" height="15.0" fill="rgb(212,153,28)" rx="2" ry="2" />
<text  x="154.17" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (33 samples, 0.07%)</title><rect x="728.3" y="373" width="0.8" height="15.0" fill="rgb(235,150,5)" rx="2" ry="2" />
<text  x="731.25" y="383.5" ></text>
</g>
<g >
<title>seastar::futurize_invoke&lt;seastar::future&lt;void&gt;  (23 samples, 0.05%)</title><rect x="674.9" y="421" width="0.6" height="15.0" fill="rgb(234,81,15)" rx="2" ry="2" />
<text  x="677.95" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (5 samples, 0.01%)</title><rect x="513.6" y="341" width="0.1" height="15.0" fill="rgb(244,209,32)" rx="2" ry="2" />
<text  x="516.58" y="351.5" ></text>
</g>
<g >
<title>mutation_partition_view::do_accept&lt;partition_builder&gt; (16 samples, 0.03%)</title><rect x="1143.6" y="245" width="0.3" height="15.0" fill="rgb(227,41,10)" rx="2" ry="2" />
<text  x="1146.55" y="255.5" ></text>
</g>
<g >
<title>dht::tri_compare (71 samples, 0.15%)</title><rect x="469.8" y="261" width="1.8" height="15.0" fill="rgb(225,137,37)" rx="2" ry="2" />
<text  x="472.80" y="271.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (5 samples, 0.01%)</title><rect x="255.9" y="341" width="0.2" height="15.0" fill="rgb(236,54,27)" rx="2" ry="2" />
<text  x="258.93" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="677.8" y="469" width="0.2" height="15.0" fill="rgb(208,220,11)" rx="2" ry="2" />
<text  x="680.84" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (7 samples, 0.01%)</title><rect x="934.1" y="357" width="0.2" height="15.0" fill="rgb(244,194,30)" rx="2" ry="2" />
<text  x="937.12" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1080.6" y="325" width="0.3" height="15.0" fill="rgb(224,203,21)" rx="2" ry="2" />
<text  x="1083.65" y="335.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (14 samples, 0.03%)</title><rect x="995.4" y="261" width="0.4" height="15.0" fill="rgb(215,43,29)" rx="2" ry="2" />
<text  x="998.40" y="271.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (26 samples, 0.05%)</title><rect x="674.9" y="469" width="0.6" height="15.0" fill="rgb(218,150,16)" rx="2" ry="2" />
<text  x="677.90" y="479.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, true&gt;::operator (50 samples, 0.11%)</title><rect x="796.1" y="149" width="1.2" height="15.0" fill="rgb(222,134,5)" rx="2" ry="2" />
<text  x="799.07" y="159.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="478.9" y="213" width="0.2" height="15.0" fill="rgb(240,63,27)" rx="2" ry="2" />
<text  x="481.85" y="223.5" ></text>
</g>
<g >
<title>query::querier&lt; (17,862 samples, 37.74%)</title><rect x="97.4" y="437" width="445.3" height="15.0" fill="rgb(242,169,8)" rx="2" ry="2" />
<text  x="100.36" y="447.5" >query::querier&lt;</text>
</g>
<g >
<title>std::default_delete&lt;cql3::expr::expression::impl&gt;::operator (32 samples, 0.07%)</title><rect x="902.9" y="309" width="0.8" height="15.0" fill="rgb(225,169,6)" rx="2" ry="2" />
<text  x="905.85" y="319.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.03%)</title><rect x="540.3" y="405" width="0.4" height="15.0" fill="rgb(217,51,39)" rx="2" ry="2" />
<text  x="543.31" y="415.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (21 samples, 0.04%)</title><rect x="530.3" y="405" width="0.5" height="15.0" fill="rgb(221,101,8)" rx="2" ry="2" />
<text  x="533.26" y="415.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::tombstone_for_row (23 samples, 0.05%)</title><rect x="361.8" y="213" width="0.6" height="15.0" fill="rgb(220,41,42)" rx="2" ry="2" />
<text  x="364.82" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (30 samples, 0.06%)</title><rect x="1131.7" y="373" width="0.8" height="15.0" fill="rgb(217,50,22)" rx="2" ry="2" />
<text  x="1134.73" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot::~partition_snapshot (27 samples, 0.06%)</title><rect x="557.8" y="261" width="0.7" height="15.0" fill="rgb(240,116,29)" rx="2" ry="2" />
<text  x="560.79" y="271.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="469" width="0.9" height="15.0" fill="rgb(237,66,22)" rx="2" ry="2" />
<text  x="1146.30" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::querier_base (33 samples, 0.07%)</title><rect x="608.9" y="405" width="0.8" height="15.0" fill="rgb(233,226,36)" rx="2" ry="2" />
<text  x="611.90" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot::version_count (16 samples, 0.03%)</title><rect x="217.4" y="133" width="0.4" height="15.0" fill="rgb(228,70,47)" rx="2" ry="2" />
<text  x="220.41" y="143.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (47 samples, 0.10%)</title><rect x="754.6" y="325" width="1.1" height="15.0" fill="rgb(232,97,34)" rx="2" ry="2" />
<text  x="757.56" y="335.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (27 samples, 0.06%)</title><rect x="715.6" y="389" width="0.7" height="15.0" fill="rgb(219,135,29)" rx="2" ry="2" />
<text  x="718.64" y="399.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (6 samples, 0.01%)</title><rect x="801.8" y="229" width="0.2" height="15.0" fill="rgb(239,149,2)" rx="2" ry="2" />
<text  x="804.83" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="920.6" y="373" width="0.2" height="15.0" fill="rgb(212,192,25)" rx="2" ry="2" />
<text  x="923.61" y="383.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (1,150 samples, 2.43%)</title><rect x="883.7" y="389" width="28.7" height="15.0" fill="rgb(222,176,51)" rx="2" ry="2" />
<text  x="886.68" y="399.5" >_Z..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (12 samples, 0.03%)</title><rect x="1037.5" y="197" width="0.3" height="15.0" fill="rgb(237,193,17)" rx="2" ry="2" />
<text  x="1040.54" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (411 samples, 0.87%)</title><rect x="652.9" y="501" width="10.3" height="15.0" fill="rgb(212,142,2)" rx="2" ry="2" />
<text  x="655.93" y="511.5" ></text>
</g>
<g >
<title>mutation_querier::consume (1,852 samples, 3.91%)</title><rect x="311.2" y="197" width="46.2" height="15.0" fill="rgb(216,136,25)" rx="2" ry="2" />
<text  x="314.21" y="207.5" >muta..</text>
</g>
<g >
<title>seastar::net::inet_address::operator== (10 samples, 0.02%)</title><rect x="1156.6" y="405" width="0.2" height="15.0" fill="rgb(244,154,27)" rx="2" ry="2" />
<text  x="1159.57" y="415.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::start_cells (5 samples, 0.01%)</title><rect x="305.7" y="181" width="0.1" height="15.0" fill="rgb(207,100,52)" rx="2" ry="2" />
<text  x="308.70" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="671.4" y="437" width="0.1" height="15.0" fill="rgb(206,92,1)" rx="2" ry="2" />
<text  x="674.41" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (24 samples, 0.05%)</title><rect x="990.4" y="341" width="0.6" height="15.0" fill="rgb(210,163,16)" rx="2" ry="2" />
<text  x="993.42" y="351.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (8 samples, 0.02%)</title><rect x="936.3" y="373" width="0.2" height="15.0" fill="rgb(228,158,49)" rx="2" ry="2" />
<text  x="939.34" y="383.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (5 samples, 0.01%)</title><rect x="862.7" y="485" width="0.1" height="15.0" fill="rgb(240,47,45)" rx="2" ry="2" />
<text  x="865.71" y="495.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (12 samples, 0.03%)</title><rect x="575.9" y="405" width="0.3" height="15.0" fill="rgb(247,219,37)" rx="2" ry="2" />
<text  x="578.87" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (7 samples, 0.01%)</title><rect x="527.2" y="341" width="0.1" height="15.0" fill="rgb(231,222,53)" rx="2" ry="2" />
<text  x="530.17" y="351.5" ></text>
</g>
<g >
<title>database::find_column_family (5 samples, 0.01%)</title><rect x="750.4" y="389" width="0.1" height="15.0" fill="rgb(248,155,2)" rx="2" ry="2" />
<text  x="753.39" y="399.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="906.3" y="341" width="0.2" height="15.0" fill="rgb(215,20,44)" rx="2" ry="2" />
<text  x="909.32" y="351.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt4pairIN4auth17role_or_anonymousENS4_8resourceEEZNS4_17permissions_cache3getERKS5_RKS6_E3$_0JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS7_EEEDcSF_SH_ (92 samples, 0.19%)</title><rect x="780.9" y="261" width="2.3" height="15.0" fill="rgb(219,8,30)" rx="2" ry="2" />
<text  x="783.88" y="271.5" ></text>
</g>
<g >
<title>std::operator==&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; (8 samples, 0.02%)</title><rect x="736.9" y="293" width="0.2" height="15.0" fill="rgb(235,173,39)" rx="2" ry="2" />
<text  x="739.85" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (86 samples, 0.18%)</title><rect x="1073.0" y="309" width="2.2" height="15.0" fill="rgb(231,70,7)" rx="2" ry="2" />
<text  x="1076.02" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (8 samples, 0.02%)</title><rect x="1039.5" y="213" width="0.2" height="15.0" fill="rgb(242,114,27)" rx="2" ry="2" />
<text  x="1042.53" y="223.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (8 samples, 0.02%)</title><rect x="1176.9" y="389" width="0.2" height="15.0" fill="rgb(216,169,5)" rx="2" ry="2" />
<text  x="1179.89" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set_value&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (18 samples, 0.04%)</title><rect x="596.5" y="437" width="0.5" height="15.0" fill="rgb(223,176,7)" rx="2" ry="2" />
<text  x="599.53" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::emplace_back&lt;mutation_fragment&gt; (21 samples, 0.04%)</title><rect x="248.3" y="277" width="0.6" height="15.0" fill="rgb(215,206,31)" rx="2" ry="2" />
<text  x="251.33" y="287.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="618.9" y="485" width="0.6" height="15.0" fill="rgb(244,92,27)" rx="2" ry="2" />
<text  x="621.87" y="495.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (9 samples, 0.02%)</title><rect x="720.6" y="293" width="0.2" height="15.0" fill="rgb(247,35,32)" rx="2" ry="2" />
<text  x="723.57" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (9 samples, 0.02%)</title><rect x="498.8" y="213" width="0.3" height="15.0" fill="rgb(252,229,3)" rx="2" ry="2" />
<text  x="501.85" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::vector (93 samples, 0.20%)</title><rect x="856.9" y="469" width="2.3" height="15.0" fill="rgb(212,121,22)" rx="2" ry="2" />
<text  x="859.90" y="479.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (6 samples, 0.01%)</title><rect x="810.3" y="341" width="0.2" height="15.0" fill="rgb(215,199,29)" rx="2" ry="2" />
<text  x="813.33" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (16 samples, 0.03%)</title><rect x="1067.0" y="261" width="0.4" height="15.0" fill="rgb(210,12,33)" rx="2" ry="2" />
<text  x="1070.01" y="271.5" ></text>
</g>
<g >
<title>compound_type&lt; (71 samples, 0.15%)</title><rect x="918.7" y="357" width="1.8" height="15.0" fill="rgb(239,177,47)" rx="2" ry="2" />
<text  x="921.74" y="367.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="788.8" y="213" width="0.1" height="15.0" fill="rgb(214,134,20)" rx="2" ry="2" />
<text  x="791.79" y="223.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;std::optional&lt;auth::resource&gt; &gt;, seastar::future&lt;bool&gt; &gt; &gt; &gt;::~unique_ptr (65 samples, 0.14%)</title><rect x="808.4" y="325" width="1.6" height="15.0" fill="rgb(206,83,51)" rx="2" ry="2" />
<text  x="811.36" y="335.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (7 samples, 0.01%)</title><rect x="1043.6" y="245" width="0.1" height="15.0" fill="rgb(211,84,16)" rx="2" ry="2" />
<text  x="1046.57" y="255.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="563.8" y="341" width="0.8" height="15.0" fill="rgb(234,146,10)" rx="2" ry="2" />
<text  x="566.80" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (14 samples, 0.03%)</title><rect x="835.5" y="437" width="0.4" height="15.0" fill="rgb(209,200,47)" rx="2" ry="2" />
<text  x="838.54" y="447.5" ></text>
</g>
<g >
<title>seastar::weakly_referencable&lt;cql3::statements::prepared_statement&gt;::weak_from_this (5 samples, 0.01%)</title><rect x="716.3" y="405" width="0.1" height="15.0" fill="rgb(247,162,11)" rx="2" ry="2" />
<text  x="719.31" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (23 samples, 0.05%)</title><rect x="276.0" y="373" width="0.6" height="15.0" fill="rgb(234,86,39)" rx="2" ry="2" />
<text  x="279.03" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="195.2" y="133" width="0.2" height="15.0" fill="rgb(219,103,14)" rx="2" ry="2" />
<text  x="198.20" y="143.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (21 samples, 0.04%)</title><rect x="788.2" y="165" width="0.6" height="15.0" fill="rgb(232,216,31)" rx="2" ry="2" />
<text  x="791.24" y="175.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (6 samples, 0.01%)</title><rect x="1036.6" y="165" width="0.2" height="15.0" fill="rgb(206,189,41)" rx="2" ry="2" />
<text  x="1039.62" y="175.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_token (30 samples, 0.06%)</title><rect x="949.5" y="373" width="0.8" height="15.0" fill="rgb(231,77,38)" rx="2" ry="2" />
<text  x="952.50" y="383.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8 samples, 0.02%)</title><rect x="932.7" y="341" width="0.2" height="15.0" fill="rgb(242,18,46)" rx="2" ry="2" />
<text  x="935.70" y="351.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="568.1" y="357" width="0.9" height="15.0" fill="rgb(254,98,35)" rx="2" ry="2" />
<text  x="571.11" y="367.5" ></text>
</g>
<g >
<title>__dynamic_cast (15 samples, 0.03%)</title><rect x="635.7" y="469" width="0.4" height="15.0" fill="rgb(249,199,36)" rx="2" ry="2" />
<text  x="638.70" y="479.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (5 samples, 0.01%)</title><rect x="596.2" y="421" width="0.1" height="15.0" fill="rgb(225,73,45)" rx="2" ry="2" />
<text  x="599.16" y="431.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::reserve (6 samples, 0.01%)</title><rect x="1109.7" y="373" width="0.2" height="15.0" fill="rgb(251,202,44)" rx="2" ry="2" />
<text  x="1112.74" y="383.5" ></text>
</g>
<g >
<title>mutation_reader_merger::prepare_one (487 samples, 1.03%)</title><rect x="122.3" y="277" width="12.2" height="15.0" fill="rgb(228,105,39)" rx="2" ry="2" />
<text  x="125.35" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;reader_concurrency_semaphore::entry, seastar::circular_buffer&lt;reader_concurrency_semaphore::entry, std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt; &gt;::pop (33 samples, 0.07%)</title><rect x="617.4" y="485" width="0.9" height="15.0" fill="rgb(254,131,42)" rx="2" ry="2" />
<text  x="620.43" y="495.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (20 samples, 0.04%)</title><rect x="501.2" y="181" width="0.5" height="15.0" fill="rgb(241,74,54)" rx="2" ry="2" />
<text  x="504.17" y="191.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%)</title><rect x="1106.6" y="341" width="0.2" height="15.0" fill="rgb(245,168,32)" rx="2" ry="2" />
<text  x="1109.58" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::move_it (13 samples, 0.03%)</title><rect x="594.5" y="437" width="0.3" height="15.0" fill="rgb(207,167,44)" rx="2" ry="2" />
<text  x="597.49" y="447.5" ></text>
</g>
<g >
<title>operator new (87 samples, 0.18%)</title><rect x="1073.0" y="325" width="2.2" height="15.0" fill="rgb(215,46,36)" rx="2" ry="2" />
<text  x="1075.99" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (127 samples, 0.27%)</title><rect x="1001.7" y="277" width="3.2" height="15.0" fill="rgb(218,100,48)" rx="2" ry="2" />
<text  x="1004.74" y="287.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="1157.3" y="437" width="0.5" height="15.0" fill="rgb(220,12,8)" rx="2" ry="2" />
<text  x="1160.31" y="447.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::role_or_anonymous, auth::resource&gt;::pair&lt;auth::role_or_anonymous, auth::resource, true&gt; (64 samples, 0.14%)</title><rect x="801.2" y="261" width="1.6" height="15.0" fill="rgb(225,190,43)" rx="2" ry="2" />
<text  x="804.20" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (29 samples, 0.06%)</title><rect x="802.0" y="229" width="0.7" height="15.0" fill="rgb(245,120,35)" rx="2" ry="2" />
<text  x="804.98" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (63 samples, 0.13%)</title><rect x="240.1" y="213" width="1.6" height="15.0" fill="rgb(247,6,5)" rx="2" ry="2" />
<text  x="243.10" y="223.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__deduce_visit_result&lt;seastar::future&lt;void&gt; &gt;  (17 samples, 0.04%)</title><rect x="1176.9" y="469" width="0.4" height="15.0" fill="rgb(238,55,28)" rx="2" ry="2" />
<text  x="1179.86" y="479.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (6 samples, 0.01%)</title><rect x="675.6" y="453" width="0.2" height="15.0" fill="rgb(214,176,11)" rx="2" ry="2" />
<text  x="678.62" y="463.5" ></text>
</g>
<g >
<title>skip_empty_fragments&lt;managed_bytes_basic_view&lt; (6 samples, 0.01%)</title><rect x="934.0" y="325" width="0.1" height="15.0" fill="rgb(249,89,24)" rx="2" ry="2" />
<text  x="936.97" y="335.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="611.8" y="389" width="0.5" height="15.0" fill="rgb(230,167,10)" rx="2" ry="2" />
<text  x="614.82" y="399.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (7 samples, 0.01%)</title><rect x="384.4" y="229" width="0.2" height="15.0" fill="rgb(246,226,27)" rx="2" ry="2" />
<text  x="387.38" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (19 samples, 0.04%)</title><rect x="1055.6" y="277" width="0.5" height="15.0" fill="rgb(213,224,37)" rx="2" ry="2" />
<text  x="1058.61" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (57 samples, 0.12%)</title><rect x="887.0" y="293" width="1.4" height="15.0" fill="rgb(251,63,14)" rx="2" ry="2" />
<text  x="890.02" y="303.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (13 samples, 0.03%)</title><rect x="477.9" y="181" width="0.3" height="15.0" fill="rgb(252,116,37)" rx="2" ry="2" />
<text  x="480.91" y="191.5" ></text>
</g>
<g >
<title>double_decker&lt;long, memtable_entry, dht::raw_token_less_comparator, dht::ring_position_comparator, 16,  (18 samples, 0.04%)</title><rect x="426.0" y="341" width="0.5" height="15.0" fill="rgb(207,39,27)" rx="2" ry="2" />
<text  x="429.05" y="351.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_count_for&lt;service::digest_read_resolver&gt;::~shared_ptr_count_for (8 samples, 0.02%)</title><rect x="1147.5" y="501" width="0.2" height="15.0" fill="rgb(215,183,7)" rx="2" ry="2" />
<text  x="1150.54" y="511.5" ></text>
</g>
<g >
<title>service::client_state::has_access (1,929 samples, 4.08%)</title><rect x="767.2" y="373" width="48.1" height="15.0" fill="rgb(241,90,42)" rx="2" ry="2" />
<text  x="770.17" y="383.5" >serv..</text>
</g>
<g >
<title>seastar::repeat&lt;flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,682 samples, 9.89%)</title><rect x="287.0" y="293" width="116.7" height="15.0" fill="rgb(206,88,46)" rx="2" ry="2" />
<text  x="290.00" y="303.5" >seastar::repea..</text>
</g>
<g >
<title>seastar::reactor_backend_aio::await_events (24 samples, 0.05%)</title><rect x="1178.4" y="485" width="0.6" height="15.0" fill="rgb(252,109,6)" rx="2" ry="2" />
<text  x="1181.36" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::partition_key_restrictions::needs_filtering (147 samples, 0.31%)</title><rect x="947.1" y="405" width="3.6" height="15.0" fill="rgb(216,130,19)" rx="2" ry="2" />
<text  x="950.08" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,097 samples, 10.77%)</title><rect x="281.0" y="357" width="127.1" height="15.0" fill="rgb(205,63,36)" rx="2" ry="2" />
<text  x="284.02" y="367.5" >flat_mutation_r..</text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (11 samples, 0.02%)</title><rect x="784.9" y="229" width="0.3" height="15.0" fill="rgb(214,102,0)" rx="2" ry="2" />
<text  x="787.95" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_allocate_node&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (63 samples, 0.13%)</title><rect x="1161.7" y="453" width="1.6" height="15.0" fill="rgb(236,144,53)" rx="2" ry="2" />
<text  x="1164.70" y="463.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="801.5" y="229" width="0.1" height="15.0" fill="rgb(236,135,38)" rx="2" ry="2" />
<text  x="804.45" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::stats (46 samples, 0.10%)</title><rect x="481.5" y="309" width="1.1" height="15.0" fill="rgb(249,221,15)" rx="2" ry="2" />
<text  x="484.50" y="319.5" ></text>
</g>
<g >
<title>database::find_column_family (41 samples, 0.09%)</title><rect x="1024.0" y="245" width="1.0" height="15.0" fill="rgb(253,146,3)" rx="2" ry="2" />
<text  x="1027.03" y="255.5" ></text>
</g>
<g >
<title>free (107 samples, 0.23%)</title><rect x="393.1" y="181" width="2.7" height="15.0" fill="rgb(228,11,51)" rx="2" ry="2" />
<text  x="396.11" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (102 samples, 0.22%)</title><rect x="665.0" y="485" width="2.5" height="15.0" fill="rgb(245,219,12)" rx="2" ry="2" />
<text  x="668.00" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (22 samples, 0.05%)</title><rect x="1033.3" y="149" width="0.6" height="15.0" fill="rgb(244,105,49)" rx="2" ry="2" />
<text  x="1036.32" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1144.2" y="373" width="0.7" height="15.0" fill="rgb(228,191,35)" rx="2" ry="2" />
<text  x="1147.22" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (32 samples, 0.07%)</title><rect x="1078.8" y="293" width="0.7" height="15.0" fill="rgb(214,39,53)" rx="2" ry="2" />
<text  x="1081.75" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="907.2" y="357" width="0.3" height="15.0" fill="rgb(211,139,38)" rx="2" ry="2" />
<text  x="910.24" y="367.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_create_nodes (97 samples, 0.20%)</title><rect x="537.5" y="357" width="2.5" height="15.0" fill="rgb(207,188,47)" rx="2" ry="2" />
<text  x="540.54" y="367.5" ></text>
</g>
<g >
<title>bytes_ostream::alloc_new (49 samples, 0.10%)</title><rect x="588.7" y="389" width="1.2" height="15.0" fill="rgb(221,12,30)" rx="2" ry="2" />
<text  x="591.68" y="399.5" ></text>
</g>
<g >
<title>cql3::statements::raw::update_statement::prepare_internal (29 samples, 0.06%)</title><rect x="21.3" y="437" width="0.7" height="15.0" fill="rgb(206,64,24)" rx="2" ry="2" />
<text  x="24.29" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::external_memory_usage (11 samples, 0.02%)</title><rect x="201.2" y="101" width="0.3" height="15.0" fill="rgb(232,166,39)" rx="2" ry="2" />
<text  x="204.21" y="111.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (6 samples, 0.01%)</title><rect x="22.2" y="389" width="0.2" height="15.0" fill="rgb(246,112,11)" rx="2" ry="2" />
<text  x="25.22" y="399.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (55 samples, 0.12%)</title><rect x="454.2" y="325" width="1.4" height="15.0" fill="rgb(207,117,1)" rx="2" ry="2" />
<text  x="457.20" y="335.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (30 samples, 0.06%)</title><rect x="260.4" y="325" width="0.7" height="15.0" fill="rgb(216,212,39)" rx="2" ry="2" />
<text  x="263.37" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (75 samples, 0.16%)</title><rect x="1130.6" y="389" width="1.9" height="15.0" fill="rgb(245,15,45)" rx="2" ry="2" />
<text  x="1133.61" y="399.5" ></text>
</g>
<g >
<title>seastar::future&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (26 samples, 0.05%)</title><rect x="256.2" y="341" width="0.6" height="15.0" fill="rgb(224,170,19)" rx="2" ry="2" />
<text  x="259.16" y="351.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="826.0" y="293" width="0.3" height="15.0" fill="rgb(240,65,46)" rx="2" ry="2" />
<text  x="828.99" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;managed_bytes&gt;::_M_reset (7 samples, 0.01%)</title><rect x="912.0" y="373" width="0.1" height="15.0" fill="rgb(212,106,5)" rx="2" ry="2" />
<text  x="914.95" y="383.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="290.1" y="245" width="0.2" height="15.0" fill="rgb(241,228,5)" rx="2" ry="2" />
<text  x="293.12" y="255.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (234 samples, 0.49%)</title><rect x="735.2" y="357" width="5.8" height="15.0" fill="rgb(223,105,45)" rx="2" ry="2" />
<text  x="738.18" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="528.2" y="309" width="0.6" height="15.0" fill="rgb(228,203,29)" rx="2" ry="2" />
<text  x="531.22" y="319.5" ></text>
</g>
<g >
<title>operator delete (31 samples, 0.07%)</title><rect x="802.9" y="245" width="0.8" height="15.0" fill="rgb(239,222,19)" rx="2" ry="2" />
<text  x="805.95" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;partition_key, false, false&gt;::_Optional_base (9 samples, 0.02%)</title><rect x="1081.1" y="309" width="0.2" height="15.0" fill="rgb(241,30,7)" rx="2" ry="2" />
<text  x="1084.12" y="319.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (6 samples, 0.01%)</title><rect x="1070.2" y="325" width="0.2" height="15.0" fill="rgb(228,8,53)" rx="2" ry="2" />
<text  x="1073.22" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::emplace_mutation_fragment (40 samples, 0.08%)</title><rect x="140.7" y="245" width="1.0" height="15.0" fill="rgb(225,103,10)" rx="2" ry="2" />
<text  x="143.75" y="255.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (7 samples, 0.01%)</title><rect x="664.5" y="485" width="0.1" height="15.0" fill="rgb(237,182,2)" rx="2" ry="2" />
<text  x="667.48" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (16 samples, 0.03%)</title><rect x="631.1" y="485" width="0.4" height="15.0" fill="rgb(217,109,17)" rx="2" ry="2" />
<text  x="634.09" y="495.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.05%)</title><rect x="902.2" y="309" width="0.6" height="15.0" fill="rgb(237,77,50)" rx="2" ry="2" />
<text  x="905.21" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (10 samples, 0.02%)</title><rect x="951.4" y="405" width="0.3" height="15.0" fill="rgb(237,91,2)" rx="2" ry="2" />
<text  x="954.45" y="415.5" ></text>
</g>
<g >
<title>locator::effective_replication_map::get_natural_endpoints_without_node_being_replaced (605 samples, 1.28%)</title><rect x="1083.8" y="309" width="15.0" height="15.0" fill="rgb(245,115,29)" rx="2" ry="2" />
<text  x="1086.76" y="319.5" ></text>
</g>
<g >
<title>utils::fb_utilities::get_broadcast_address (6 samples, 0.01%)</title><rect x="697.5" y="437" width="0.2" height="15.0" fill="rgb(228,64,5)" rx="2" ry="2" />
<text  x="700.54" y="447.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (17 samples, 0.04%)</title><rect x="66.9" y="373" width="0.5" height="15.0" fill="rgb(229,140,29)" rx="2" ry="2" />
<text  x="69.95" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally&lt;single_node_cql_env::execute_prepared_with_qo (98 samples, 0.21%)</title><rect x="831.7" y="437" width="2.5" height="15.0" fill="rgb(221,219,13)" rx="2" ry="2" />
<text  x="834.72" y="447.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="204.3" y="165" width="0.6" height="15.0" fill="rgb(207,139,1)" rx="2" ry="2" />
<text  x="207.32" y="175.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.07%)</title><rect x="497.6" y="197" width="0.8" height="15.0" fill="rgb(216,100,35)" rx="2" ry="2" />
<text  x="500.63" y="207.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (8 samples, 0.02%)</title><rect x="800.7" y="181" width="0.2" height="15.0" fill="rgb(247,104,7)" rx="2" ry="2" />
<text  x="803.73" y="191.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (5 samples, 0.01%)</title><rect x="745.0" y="405" width="0.1" height="15.0" fill="rgb(221,14,46)" rx="2" ry="2" />
<text  x="747.96" y="415.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;cql3::query_processor&gt;::local (10 samples, 0.02%)</title><rect x="835.1" y="437" width="0.2" height="15.0" fill="rgb(222,39,47)" rx="2" ry="2" />
<text  x="838.06" y="447.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (34 samples, 0.07%)</title><rect x="1047.7" y="261" width="0.8" height="15.0" fill="rgb(222,175,28)" rx="2" ry="2" />
<text  x="1050.69" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::make_data_requests (5 samples, 0.01%)</title><rect x="998.7" y="325" width="0.1" height="15.0" fill="rgb(237,97,10)" rx="2" ry="2" />
<text  x="1001.72" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (5 samples, 0.01%)</title><rect x="809.8" y="277" width="0.1" height="15.0" fill="rgb(219,178,31)" rx="2" ry="2" />
<text  x="812.81" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (25 samples, 0.05%)</title><rect x="1140.0" y="421" width="0.6" height="15.0" fill="rgb(221,60,17)" rx="2" ry="2" />
<text  x="1143.01" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (151 samples, 0.32%)</title><rect x="207.9" y="165" width="3.8" height="15.0" fill="rgb(240,46,15)" rx="2" ry="2" />
<text  x="210.94" y="175.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (29 samples, 0.06%)</title><rect x="830.3" y="421" width="0.7" height="15.0" fill="rgb(212,215,21)" rx="2" ry="2" />
<text  x="833.30" y="431.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_node (32 samples, 0.07%)</title><rect x="652.1" y="437" width="0.8" height="15.0" fill="rgb(221,151,23)" rx="2" ry="2" />
<text  x="655.06" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (13 samples, 0.03%)</title><rect x="917.6" y="357" width="0.3" height="15.0" fill="rgb(224,209,23)" rx="2" ry="2" />
<text  x="920.61" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (14 samples, 0.03%)</title><rect x="248.9" y="277" width="0.3" height="15.0" fill="rgb(227,51,18)" rx="2" ry="2" />
<text  x="251.85" y="287.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (351 samples, 0.74%)</title><rect x="791.4" y="197" width="8.7" height="15.0" fill="rgb(247,204,14)" rx="2" ry="2" />
<text  x="794.38" y="207.5" ></text>
</g>
<g >
<title>__tls_init (9 samples, 0.02%)</title><rect x="481.1" y="309" width="0.2" height="15.0" fill="rgb(251,163,42)" rx="2" ry="2" />
<text  x="484.10" y="319.5" ></text>
</g>
<g >
<title>std::hash&lt;wrapping_interval&lt;dht::token&gt; &gt;::operator (10 samples, 0.02%)</title><rect x="1165.2" y="453" width="0.3" height="15.0" fill="rgb(239,47,41)" rx="2" ry="2" />
<text  x="1168.22" y="463.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (17 samples, 0.04%)</title><rect x="921.2" y="373" width="0.4" height="15.0" fill="rgb(213,85,41)" rx="2" ry="2" />
<text  x="924.20" y="383.5" ></text>
</g>
<g >
<title>operator delete (34 samples, 0.07%)</title><rect x="687.5" y="485" width="0.9" height="15.0" fill="rgb(242,13,38)" rx="2" ry="2" />
<text  x="690.51" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (32 samples, 0.07%)</title><rect x="509.5" y="261" width="0.8" height="15.0" fill="rgb(221,194,13)" rx="2" ry="2" />
<text  x="512.47" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::make_stage_for_group (35 samples, 0.07%)</title><rect x="1143.3" y="405" width="0.9" height="15.0" fill="rgb(221,87,35)" rx="2" ry="2" />
<text  x="1146.30" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (37 samples, 0.08%)</title><rect x="865.7" y="453" width="0.9" height="15.0" fill="rgb(222,198,43)" rx="2" ry="2" />
<text  x="868.65" y="463.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (5 samples, 0.01%)</title><rect x="203.7" y="133" width="0.1" height="15.0" fill="rgb(222,163,21)" rx="2" ry="2" />
<text  x="206.72" y="143.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="485.5" y="309" width="0.1" height="15.0" fill="rgb(218,47,22)" rx="2" ry="2" />
<text  x="488.49" y="319.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::pop_mutation_fragment (23 samples, 0.05%)</title><rect x="125.0" y="245" width="0.6" height="15.0" fill="rgb(234,127,27)" rx="2" ry="2" />
<text  x="128.04" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="589.2" y="357" width="0.4" height="15.0" fill="rgb(228,188,11)" rx="2" ry="2" />
<text  x="592.23" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::add_partition (114 samples, 0.24%)</title><rect x="301.9" y="181" width="2.9" height="15.0" fill="rgb(217,98,9)" rx="2" ry="2" />
<text  x="304.93" y="191.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (9 samples, 0.02%)</title><rect x="101.9" y="421" width="0.2" height="15.0" fill="rgb(210,157,54)" rx="2" ry="2" />
<text  x="104.90" y="431.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (30 samples, 0.06%)</title><rect x="996.4" y="277" width="0.8" height="15.0" fill="rgb(251,149,52)" rx="2" ry="2" />
<text  x="999.42" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::~flat_mutation_reader (6 samples, 0.01%)</title><rect x="426.5" y="341" width="0.2" height="15.0" fill="rgb(206,35,42)" rx="2" ry="2" />
<text  x="429.52" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="898.5" y="261" width="0.1" height="15.0" fill="rgb(236,104,32)" rx="2" ry="2" />
<text  x="901.47" y="271.5" ></text>
</g>
<g >
<title>seastar::inheriting_concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::operator (65 samples, 0.14%)</title><rect x="745.8" y="389" width="1.6" height="15.0" fill="rgb(233,212,34)" rx="2" ry="2" />
<text  x="748.75" y="399.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.07%)</title><rect x="272.6" y="293" width="0.9" height="15.0" fill="rgb(238,14,0)" rx="2" ry="2" />
<text  x="275.59" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (14 samples, 0.03%)</title><rect x="661.9" y="437" width="0.3" height="15.0" fill="rgb(246,119,27)" rx="2" ry="2" />
<text  x="664.86" y="447.5" ></text>
</g>
<g >
<title>read_simple&lt;unsigned short, managed_bytes_basic_view&lt; (9 samples, 0.02%)</title><rect x="920.3" y="341" width="0.2" height="15.0" fill="rgb(227,32,31)" rx="2" ry="2" />
<text  x="923.28" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (17 samples, 0.04%)</title><rect x="995.8" y="261" width="0.4" height="15.0" fill="rgb(241,126,7)" rx="2" ry="2" />
<text  x="998.75" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::pop_back (13 samples, 0.03%)</title><rect x="249.7" y="277" width="0.3" height="15.0" fill="rgb(210,41,51)" rx="2" ry="2" />
<text  x="252.68" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;query::result_digest, 3ul&gt;::~small_vector (16 samples, 0.03%)</title><rect x="686.9" y="469" width="0.4" height="15.0" fill="rgb(232,176,11)" rx="2" ry="2" />
<text  x="689.94" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="600.5" y="437" width="0.1" height="15.0" fill="rgb(244,68,7)" rx="2" ry="2" />
<text  x="603.52" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (4,596 samples, 9.71%)</title><rect x="287.8" y="277" width="114.6" height="15.0" fill="rgb(216,44,35)" rx="2" ry="2" />
<text  x="290.77" y="287.5" >flat_mutation_..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6 samples, 0.01%)</title><rect x="845.7" y="405" width="0.1" height="15.0" fill="rgb(247,16,21)" rx="2" ry="2" />
<text  x="848.68" y="415.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (5 samples, 0.01%)</title><rect x="285.0" y="261" width="0.1" height="15.0" fill="rgb(205,132,29)" rx="2" ry="2" />
<text  x="287.95" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (5 samples, 0.01%)</title><rect x="1139.3" y="421" width="0.1" height="15.0" fill="rgb(251,16,0)" rx="2" ry="2" />
<text  x="1142.29" y="431.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="10.2" y="581" width="0.2" height="15.0" fill="rgb(230,168,36)" rx="2" ry="2" />
<text  x="13.25" y="591.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::operator= (18 samples, 0.04%)</title><rect x="693.0" y="437" width="0.5" height="15.0" fill="rgb(225,115,22)" rx="2" ry="2" />
<text  x="696.02" y="447.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (18 samples, 0.04%)</title><rect x="755.8" y="325" width="0.4" height="15.0" fill="rgb(223,152,40)" rx="2" ry="2" />
<text  x="758.75" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (6 samples, 0.01%)</title><rect x="122.1" y="261" width="0.2" height="15.0" fill="rgb(238,124,32)" rx="2" ry="2" />
<text  x="125.15" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (10,915 samples, 23.06%)</title><rect x="870.8" y="469" width="272.2" height="15.0" fill="rgb(222,204,29)" rx="2" ry="2" />
<text  x="873.84" y="479.5" >seastar::noncopyable_function&lt;seasta..</text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="357" width="0.9" height="15.0" fill="rgb(208,209,52)" rx="2" ry="2" />
<text  x="1146.30" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (43 samples, 0.09%)</title><rect x="1077.6" y="293" width="1.1" height="15.0" fill="rgb(230,72,41)" rx="2" ry="2" />
<text  x="1080.63" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::consume&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,967 samples, 8.38%)</title><rect x="290.3" y="261" width="98.9" height="15.0" fill="rgb(209,9,9)" rx="2" ry="2" />
<text  x="293.31" y="271.5" >mutation_fr..</text>
</g>
<g >
<title>cql3::expr::evaluate (439 samples, 0.93%)</title><rect x="889.7" y="293" width="11.0" height="15.0" fill="rgb(245,90,49)" rx="2" ry="2" />
<text  x="892.74" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (10 samples, 0.02%)</title><rect x="1144.4" y="197" width="0.2" height="15.0" fill="rgb(231,221,51)" rx="2" ry="2" />
<text  x="1147.37" y="207.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (31 samples, 0.07%)</title><rect x="839.1" y="373" width="0.7" height="15.0" fill="rgb(209,15,22)" rx="2" ry="2" />
<text  x="842.08" y="383.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (13 samples, 0.03%)</title><rect x="1066.7" y="261" width="0.3" height="15.0" fill="rgb(218,137,25)" rx="2" ry="2" />
<text  x="1069.68" y="271.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::start_partitions (28 samples, 0.06%)</title><rect x="587.6" y="405" width="0.7" height="15.0" fill="rgb(207,83,20)" rx="2" ry="2" />
<text  x="590.63" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (21 samples, 0.04%)</title><rect x="656.6" y="485" width="0.5" height="15.0" fill="rgb(253,203,9)" rx="2" ry="2" />
<text  x="659.57" y="495.5" ></text>
</g>
<g >
<title>compare_unsigned&lt;managed_bytes_basic_view&lt; (46 samples, 0.10%)</title><rect x="473.4" y="213" width="1.2" height="15.0" fill="rgb(225,224,10)" rx="2" ry="2" />
<text  x="476.44" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (21 samples, 0.04%)</title><rect x="948.7" y="373" width="0.5" height="15.0" fill="rgb(236,157,17)" rx="2" ry="2" />
<text  x="951.65" y="383.5" ></text>
</g>
<g >
<title>std::make_unique&lt;seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry, reader_concurrency_semaphore::entry, seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (12 samples, 0.03%)</title><rect x="1036.6" y="181" width="0.3" height="15.0" fill="rgb(245,169,43)" rx="2" ry="2" />
<text  x="1039.57" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reclaiming_disabled&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="865.1" y="341" width="0.3" height="15.0" fill="rgb(219,0,51)" rx="2" ry="2" />
<text  x="868.13" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::do_refresh_state (492 samples, 1.04%)</title><rect x="225.1" y="229" width="12.3" height="15.0" fill="rgb(240,13,6)" rx="2" ry="2" />
<text  x="228.14" y="239.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%)</title><rect x="405.8" y="261" width="1.1" height="15.0" fill="rgb(208,134,33)" rx="2" ry="2" />
<text  x="408.80" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="748.2" y="373" width="0.3" height="15.0" fill="rgb(248,62,44)" rx="2" ry="2" />
<text  x="751.17" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1144.6" y="293" width="0.3" height="15.0" fill="rgb(218,128,34)" rx="2" ry="2" />
<text  x="1147.65" y="303.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (8 samples, 0.02%)</title><rect x="453.2" y="325" width="0.2" height="15.0" fill="rgb(216,112,44)" rx="2" ry="2" />
<text  x="456.17" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;auth::authenticated_user, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;::pair (37 samples, 0.08%)</title><rect x="733.4" y="373" width="0.9" height="15.0" fill="rgb(242,149,22)" rx="2" ry="2" />
<text  x="736.36" y="383.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::future (5 samples, 0.01%)</title><rect x="747.1" y="357" width="0.2" height="15.0" fill="rgb(232,163,17)" rx="2" ry="2" />
<text  x="750.13" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="194.1" y="101" width="0.3" height="15.0" fill="rgb(211,39,11)" rx="2" ry="2" />
<text  x="197.10" y="111.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata const&gt;::~shared_ptr (5 samples, 0.01%)</title><rect x="643.3" y="453" width="0.1" height="15.0" fill="rgb(244,129,52)" rx="2" ry="2" />
<text  x="646.28" y="463.5" ></text>
</g>
<g >
<title>reader_permit::resource_units::reset (29 samples, 0.06%)</title><rect x="501.8" y="197" width="0.7" height="15.0" fill="rgb(213,8,51)" rx="2" ry="2" />
<text  x="504.77" y="207.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="93.3" y="405" width="0.1" height="15.0" fill="rgb(244,49,3)" rx="2" ry="2" />
<text  x="96.30" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::_M_realloc_insert&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (62 samples, 0.13%)</title><rect x="235.9" y="197" width="1.5" height="15.0" fill="rgb(247,43,47)" rx="2" ry="2" />
<text  x="238.86" y="207.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.06%)</title><rect x="756.7" y="325" width="0.7" height="15.0" fill="rgb(220,222,54)" rx="2" ry="2" />
<text  x="759.68" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (32 samples, 0.07%)</title><rect x="194.4" y="117" width="0.8" height="15.0" fill="rgb(217,15,50)" rx="2" ry="2" />
<text  x="197.40" y="127.5" ></text>
</g>
<g >
<title>seastar::timer_set&lt;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;, &amp;seastar::timer&lt;std::chrono::_V2::steady_clock&gt;::_link&gt;::expire (9 samples, 0.02%)</title><rect x="1178.6" y="437" width="0.2" height="15.0" fill="rgb(214,119,18)" rx="2" ry="2" />
<text  x="1181.58" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (14 samples, 0.03%)</title><rect x="863.0" y="501" width="0.4" height="15.0" fill="rgb(230,155,13)" rx="2" ry="2" />
<text  x="866.01" y="511.5" ></text>
</g>
<g >
<title>std::default_delete&lt;bytes_ostream::chunk&gt;::operator (39 samples, 0.08%)</title><rect x="37.5" y="421" width="0.9" height="15.0" fill="rgb(208,225,50)" rx="2" ry="2" />
<text  x="40.48" y="431.5" ></text>
</g>
<g >
<title>operator delete (46 samples, 0.10%)</title><rect x="555.5" y="277" width="1.1" height="15.0" fill="rgb(212,175,26)" rx="2" ry="2" />
<text  x="558.47" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (39 samples, 0.08%)</title><rect x="898.8" y="277" width="1.0" height="15.0" fill="rgb(244,53,41)" rx="2" ry="2" />
<text  x="901.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (10 samples, 0.02%)</title><rect x="441.7" y="293" width="0.3" height="15.0" fill="rgb(231,138,2)" rx="2" ry="2" />
<text  x="444.73" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;auth::resource&gt;::_Optional_payload_base (36 samples, 0.08%)</title><rect x="772.1" y="293" width="0.9" height="15.0" fill="rgb(222,210,31)" rx="2" ry="2" />
<text  x="775.08" y="303.5" ></text>
</g>
<g >
<title>database::find_keyspace (201 samples, 0.42%)</title><rect x="1064.1" y="341" width="5.0" height="15.0" fill="rgb(215,31,22)" rx="2" ry="2" />
<text  x="1067.12" y="351.5" ></text>
</g>
<g >
<title>cql3::query_options::get_value_at (49 samples, 0.10%)</title><rect x="891.4" y="277" width="1.2" height="15.0" fill="rgb(213,154,15)" rx="2" ry="2" />
<text  x="894.36" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_allocate_buckets (52 samples, 0.11%)</title><rect x="1160.4" y="405" width="1.3" height="15.0" fill="rgb(248,197,49)" rx="2" ry="2" />
<text  x="1163.41" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (28 samples, 0.06%)</title><rect x="95.3" y="421" width="0.7" height="15.0" fill="rgb(236,69,14)" rx="2" ry="2" />
<text  x="98.34" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="733.7" y="357" width="0.2" height="15.0" fill="rgb(235,96,20)" rx="2" ry="2" />
<text  x="736.66" y="367.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (12 samples, 0.03%)</title><rect x="983.8" y="357" width="0.3" height="15.0" fill="rgb(227,50,53)" rx="2" ry="2" />
<text  x="986.83" y="367.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.03%)</title><rect x="448.8" y="293" width="0.3" height="15.0" fill="rgb(231,146,26)" rx="2" ry="2" />
<text  x="451.76" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (15 samples, 0.03%)</title><rect x="1040.3" y="229" width="0.4" height="15.0" fill="rgb(218,157,33)" rx="2" ry="2" />
<text  x="1043.31" y="239.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (5 samples, 0.01%)</title><rect x="932.9" y="341" width="0.1" height="15.0" fill="rgb(254,59,8)" rx="2" ry="2" />
<text  x="935.90" y="351.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;  (37 samples, 0.08%)</title><rect x="865.7" y="469" width="0.9" height="15.0" fill="rgb(214,71,33)" rx="2" ry="2" />
<text  x="868.65" y="479.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="403.9" y="293" width="0.6" height="15.0" fill="rgb(206,43,28)" rx="2" ry="2" />
<text  x="406.88" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;mutation_reader_merger::needs_merge_tag&gt; &gt;::take_value (5 samples, 0.01%)</title><rect x="134.5" y="277" width="0.1" height="15.0" fill="rgb(210,67,44)" rx="2" ry="2" />
<text  x="137.49" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (6 samples, 0.01%)</title><rect x="1030.3" y="181" width="0.2" height="15.0" fill="rgb(223,47,22)" rx="2" ry="2" />
<text  x="1033.31" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::has_available_units (5 samples, 0.01%)</title><rect x="388.8" y="197" width="0.1" height="15.0" fill="rgb(219,96,25)" rx="2" ry="2" />
<text  x="391.77" y="207.5" ></text>
</g>
<g >
<title>query::querier_base::close (5 samples, 0.01%)</title><rect x="57.9" y="453" width="0.2" height="15.0" fill="rgb(214,61,35)" rx="2" ry="2" />
<text  x="60.94" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="834.8" y="437" width="0.1" height="15.0" fill="rgb(217,145,7)" rx="2" ry="2" />
<text  x="837.79" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (18 samples, 0.04%)</title><rect x="446.5" y="261" width="0.4" height="15.0" fill="rgb(237,53,52)" rx="2" ry="2" />
<text  x="449.47" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (227 samples, 0.48%)</title><rect x="1092.4" y="277" width="5.6" height="15.0" fill="rgb(238,186,37)" rx="2" ry="2" />
<text  x="1095.39" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="397.5" y="181" width="0.1" height="15.0" fill="rgb(218,159,4)" rx="2" ry="2" />
<text  x="400.52" y="191.5" ></text>
</g>
<g >
<title>operator new (60 samples, 0.13%)</title><rect x="853.9" y="437" width="1.5" height="15.0" fill="rgb(215,108,33)" rx="2" ry="2" />
<text  x="856.91" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (39 samples, 0.08%)</title><rect x="718.6" y="325" width="1.0" height="15.0" fill="rgb(205,168,45)" rx="2" ry="2" />
<text  x="721.63" y="335.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (69 samples, 0.15%)</title><rect x="965.1" y="357" width="1.7" height="15.0" fill="rgb(232,10,12)" rx="2" ry="2" />
<text  x="968.08" y="367.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (12 samples, 0.03%)</title><rect x="665.4" y="469" width="0.3" height="15.0" fill="rgb(209,41,1)" rx="2" ry="2" />
<text  x="668.40" y="479.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1144.6" y="309" width="0.3" height="15.0" fill="rgb(229,67,45)" rx="2" ry="2" />
<text  x="1147.65" y="319.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (10 samples, 0.02%)</title><rect x="607.9" y="437" width="0.2" height="15.0" fill="rgb(253,159,52)" rx="2" ry="2" />
<text  x="610.85" y="447.5" ></text>
</g>
<g >
<title>cql3::operation::set_value::prepare (8 samples, 0.02%)</title><rect x="21.3" y="421" width="0.2" height="15.0" fill="rgb(208,131,20)" rx="2" ry="2" />
<text  x="24.29" y="431.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%)</title><rect x="118.7" y="293" width="0.2" height="15.0" fill="rgb(242,134,37)" rx="2" ry="2" />
<text  x="121.73" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1134.9" y="389" width="0.1" height="15.0" fill="rgb(212,169,22)" rx="2" ry="2" />
<text  x="1137.90" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (13 samples, 0.03%)</title><rect x="787.8" y="133" width="0.4" height="15.0" fill="rgb(228,4,5)" rx="2" ry="2" />
<text  x="790.84" y="143.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;schema const&gt;::operator= (27 samples, 0.06%)</title><rect x="1049.2" y="277" width="0.7" height="15.0" fill="rgb(245,43,11)" rx="2" ry="2" />
<text  x="1052.21" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_no_esft&lt;query::read_command&gt;::dispose (57 samples, 0.12%)</title><rect x="38.6" y="469" width="1.4" height="15.0" fill="rgb(225,51,0)" rx="2" ry="2" />
<text  x="41.60" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;8ul&gt; (7 samples, 0.01%)</title><rect x="996.3" y="245" width="0.1" height="15.0" fill="rgb(210,55,45)" rx="2" ry="2" />
<text  x="999.25" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*&gt; (42 samples, 0.09%)</title><rect x="774.2" y="293" width="1.1" height="15.0" fill="rgb(251,88,22)" rx="2" ry="2" />
<text  x="777.23" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::~_Variant_storage (6 samples, 0.01%)</title><rect x="906.1" y="341" width="0.1" height="15.0" fill="rgb(213,60,21)" rx="2" ry="2" />
<text  x="909.07" y="351.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="449.6" y="325" width="0.6" height="15.0" fill="rgb(206,192,45)" rx="2" ry="2" />
<text  x="452.58" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::emplace_back&lt;mutation_reader_merger::reader_and_fragment&gt; (19 samples, 0.04%)</title><rect x="249.2" y="277" width="0.5" height="15.0" fill="rgb(222,35,13)" rx="2" ry="2" />
<text  x="252.20" y="287.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (105 samples, 0.22%)</title><rect x="230.1" y="197" width="2.6" height="15.0" fill="rgb(246,165,46)" rx="2" ry="2" />
<text  x="233.10" y="207.5" ></text>
</g>
<g >
<title>executor&lt;test_read (6,230 samples, 13.16%)</title><rect x="706.0" y="485" width="155.4" height="15.0" fill="rgb(240,218,38)" rx="2" ry="2" />
<text  x="709.04" y="495.5" >executor&lt;test_read</text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_wrapped_common&lt;false, seastar::future&lt;void&gt;, seastar::future&lt;void&gt;::handle_exception&lt;service::abstract_read_executor::execute (13 samples, 0.03%)</title><rect x="680.6" y="453" width="0.4" height="15.0" fill="rgb(209,89,53)" rx="2" ry="2" />
<text  x="683.63" y="463.5" ></text>
</g>
<g >
<title>validation::validate_column_family (376 samples, 0.79%)</title><rect x="817.6" y="389" width="9.4" height="15.0" fill="rgb(227,174,13)" rx="2" ry="2" />
<text  x="820.61" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.03%)</title><rect x="405.1" y="277" width="0.3" height="15.0" fill="rgb(253,153,33)" rx="2" ry="2" />
<text  x="408.05" y="287.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (38 samples, 0.08%)</title><rect x="230.5" y="181" width="0.9" height="15.0" fill="rgb(215,121,6)" rx="2" ry="2" />
<text  x="233.48" y="191.5" ></text>
</g>
<g >
<title>reader_permit::consume (27 samples, 0.06%)</title><rect x="386.3" y="229" width="0.7" height="15.0" fill="rgb(211,37,13)" rx="2" ry="2" />
<text  x="389.30" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_semaphore&lt;seastar::semaphore_default_exception_factory, std::chrono::_V2::steady_clock&gt;::signal (9 samples, 0.02%)</title><rect x="36.0" y="421" width="0.2" height="15.0" fill="rgb(229,195,46)" rx="2" ry="2" />
<text  x="38.98" y="431.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::get (5 samples, 0.01%)</title><rect x="18.8" y="245" width="0.1" height="15.0" fill="rgb(217,110,22)" rx="2" ry="2" />
<text  x="21.75" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="786.0" y="197" width="0.1" height="15.0" fill="rgb(233,174,17)" rx="2" ry="2" />
<text  x="789.02" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (15 samples, 0.03%)</title><rect x="1051.9" y="277" width="0.4" height="15.0" fill="rgb(207,108,46)" rx="2" ry="2" />
<text  x="1054.92" y="287.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="822.8" y="261" width="0.2" height="15.0" fill="rgb(237,10,36)" rx="2" ry="2" />
<text  x="825.80" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="799.7" y="69" width="0.3" height="15.0" fill="rgb(236,41,41)" rx="2" ry="2" />
<text  x="802.71" y="79.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE9then_implIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (28 samples, 0.06%)</title><rect x="705.3" y="485" width="0.7" height="15.0" fill="rgb(231,111,18)" rx="2" ry="2" />
<text  x="708.34" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (7 samples, 0.01%)</title><rect x="433.7" y="261" width="0.2" height="15.0" fill="rgb(235,58,11)" rx="2" ry="2" />
<text  x="436.68" y="271.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_form (18 samples, 0.04%)</title><rect x="920.8" y="373" width="0.4" height="15.0" fill="rgb(251,38,2)" rx="2" ry="2" />
<text  x="923.76" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="700.4" y="485" width="0.2" height="15.0" fill="rgb(251,161,10)" rx="2" ry="2" />
<text  x="703.38" y="495.5" ></text>
</g>
<g >
<title>[[vdso]] (225 samples, 0.48%)</title><rect x="1180.2" y="613" width="5.6" height="15.0" fill="rgb(207,149,43)" rx="2" ry="2" />
<text  x="1183.23" y="623.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::~_Variant_storage (33 samples, 0.07%)</title><rect x="575.3" y="421" width="0.9" height="15.0" fill="rgb(223,100,33)" rx="2" ry="2" />
<text  x="578.34" y="431.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (23 samples, 0.05%)</title><rect x="438.4" y="277" width="0.6" height="15.0" fill="rgb(253,140,47)" rx="2" ry="2" />
<text  x="441.41" y="287.5" ></text>
</g>
<g >
<title>mutation_querier::query_static_row (35 samples, 0.07%)</title><rect x="319.3" y="165" width="0.9" height="15.0" fill="rgb(240,160,7)" rx="2" ry="2" />
<text  x="322.34" y="175.5" ></text>
</g>
<g >
<title>boost::intrusive::bstree_impl&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (26 samples, 0.05%)</title><rect x="558.7" y="277" width="0.7" height="15.0" fill="rgb(217,222,4)" rx="2" ry="2" />
<text  x="561.71" y="287.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperation (79 samples, 0.17%)</title><rect x="18.1" y="357" width="2.0" height="15.0" fill="rgb(243,172,22)" rx="2" ry="2" />
<text  x="21.10" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;utils::small_vector&lt;service::storage_proxy::unique_response_handler, 1ul&gt; &gt;::then_impl&lt;service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1144.4" y="309" width="0.2" height="15.0" fill="rgb(230,19,22)" rx="2" ry="2" />
<text  x="1147.37" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_value&lt;service::storage_proxy_coordinator_query_result&gt; (42 samples, 0.09%)</title><rect x="1152.4" y="485" width="1.1" height="15.0" fill="rgb(232,44,36)" rx="2" ry="2" />
<text  x="1155.43" y="495.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (5,823 samples, 12.30%)</title><rect x="711.1" y="469" width="145.2" height="15.0" fill="rgb(240,31,2)" rx="2" ry="2" />
<text  x="714.07" y="479.5" >single_node_cql_en..</text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (9 samples, 0.02%)</title><rect x="480.4" y="325" width="0.2" height="15.0" fill="rgb(243,130,36)" rx="2" ry="2" />
<text  x="483.42" y="335.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::then_wrapped_nrvo&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (85 samples, 0.18%)</title><rect x="654.2" y="485" width="2.1" height="15.0" fill="rgb(219,168,9)" rx="2" ry="2" />
<text  x="657.20" y="495.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (7 samples, 0.01%)</title><rect x="1039.8" y="229" width="0.2" height="15.0" fill="rgb(244,191,11)" rx="2" ry="2" />
<text  x="1042.83" y="239.5" ></text>
</g>
<g >
<title>std::__equal&lt;false&gt;::equal&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;*, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const*&gt; (91 samples, 0.19%)</title><rect x="793.2" y="149" width="2.2" height="15.0" fill="rgb(235,191,16)" rx="2" ry="2" />
<text  x="796.18" y="159.5" ></text>
</g>
<g >
<title>utils::approx_exponential_histogram&lt;512ul, 33554432ul, 4ul&gt;::find_bucket_index (6 samples, 0.01%)</title><rect x="665.8" y="453" width="0.1" height="15.0" fill="rgb(208,98,46)" rx="2" ry="2" />
<text  x="668.80" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::set_urgent_state (29 samples, 0.06%)</title><rect x="630.4" y="485" width="0.7" height="15.0" fill="rgb(209,113,12)" rx="2" ry="2" />
<text  x="633.37" y="495.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::has_column_family_access (1,988 samples, 4.20%)</title><rect x="765.8" y="389" width="49.5" height="15.0" fill="rgb(216,108,22)" rx="2" ry="2" />
<text  x="768.78" y="399.5" >std::..</text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (10 samples, 0.02%)</title><rect x="592.7" y="421" width="0.3" height="15.0" fill="rgb(211,29,39)" rx="2" ry="2" />
<text  x="595.74" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;compact_for_query&lt; (5 samples, 0.01%)</title><rect x="414.2" y="389" width="0.2" height="15.0" fill="rgb(230,55,28)" rx="2" ry="2" />
<text  x="417.23" y="399.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (7 samples, 0.01%)</title><rect x="429.3" y="309" width="0.2" height="15.0" fill="rgb(247,219,9)" rx="2" ry="2" />
<text  x="432.31" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="75.3" y="453" width="0.1" height="15.0" fill="rgb(247,138,41)" rx="2" ry="2" />
<text  x="78.30" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::construct&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (7 samples, 0.01%)</title><rect x="211.5" y="133" width="0.2" height="15.0" fill="rgb(227,35,25)" rx="2" ry="2" />
<text  x="214.53" y="143.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.07%)</title><rect x="857.6" y="437" width="0.8" height="15.0" fill="rgb(211,81,44)" rx="2" ry="2" />
<text  x="860.58" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (65 samples, 0.14%)</title><rect x="718.0" y="341" width="1.6" height="15.0" fill="rgb(220,59,49)" rx="2" ry="2" />
<text  x="721.00" y="351.5" ></text>
</g>
<g >
<title>database::find_keyspace (37 samples, 0.08%)</title><rect x="971.1" y="357" width="0.9" height="15.0" fill="rgb(221,5,27)" rx="2" ry="2" />
<text  x="974.09" y="367.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (5 samples, 0.01%)</title><rect x="384.7" y="229" width="0.1" height="15.0" fill="rgb(243,12,48)" rx="2" ry="2" />
<text  x="387.68" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (131 samples, 0.28%)</title><rect x="1052.3" y="277" width="3.3" height="15.0" fill="rgb(233,184,33)" rx="2" ry="2" />
<text  x="1055.35" y="287.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt; &gt;::invoke&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (21 samples, 0.04%)</title><rect x="1007.5" y="293" width="0.6" height="15.0" fill="rgb(251,95,54)" rx="2" ry="2" />
<text  x="1010.54" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (33 samples, 0.07%)</title><rect x="1024.2" y="213" width="0.8" height="15.0" fill="rgb(247,151,28)" rx="2" ry="2" />
<text  x="1027.22" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="660.3" y="437" width="0.3" height="15.0" fill="rgb(223,82,45)" rx="2" ry="2" />
<text  x="663.31" y="447.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (12 samples, 0.03%)</title><rect x="362.1" y="197" width="0.3" height="15.0" fill="rgb(229,125,53)" rx="2" ry="2" />
<text  x="365.10" y="207.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (21 samples, 0.04%)</title><rect x="1144.4" y="325" width="0.5" height="15.0" fill="rgb(241,14,46)" rx="2" ry="2" />
<text  x="1147.37" y="335.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="268.6" y="293" width="0.2" height="15.0" fill="rgb(252,74,51)" rx="2" ry="2" />
<text  x="271.60" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (92 samples, 0.19%)</title><rect x="562.4" y="373" width="2.3" height="15.0" fill="rgb(240,56,52)" rx="2" ry="2" />
<text  x="565.40" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (15 samples, 0.03%)</title><rect x="1071.1" y="341" width="0.4" height="15.0" fill="rgb(218,92,23)" rx="2" ry="2" />
<text  x="1074.10" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (27 samples, 0.06%)</title><rect x="640.6" y="469" width="0.7" height="15.0" fill="rgb(245,82,33)" rx="2" ry="2" />
<text  x="643.59" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::get0 (9 samples, 0.02%)</title><rect x="1151.8" y="485" width="0.2" height="15.0" fill="rgb(224,106,28)" rx="2" ry="2" />
<text  x="1154.75" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="455.4" y="293" width="0.1" height="15.0" fill="rgb(208,221,23)" rx="2" ry="2" />
<text  x="458.37" y="303.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::invoke&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (430 samples, 0.91%)</title><rect x="263.3" y="341" width="10.7" height="15.0" fill="rgb(246,116,25)" rx="2" ry="2" />
<text  x="266.26" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (14 samples, 0.03%)</title><rect x="34.3" y="453" width="0.4" height="15.0" fill="rgb(249,152,34)" rx="2" ry="2" />
<text  x="37.33" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (12 samples, 0.03%)</title><rect x="1057.3" y="293" width="0.3" height="15.0" fill="rgb(213,2,26)" rx="2" ry="2" />
<text  x="1060.26" y="303.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::timer (29 samples, 0.06%)</title><rect x="1034.0" y="149" width="0.8" height="15.0" fill="rgb(254,45,22)" rx="2" ry="2" />
<text  x="1037.05" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (12 samples, 0.03%)</title><rect x="381.6" y="149" width="0.3" height="15.0" fill="rgb(233,37,20)" rx="2" ry="2" />
<text  x="384.64" y="159.5" ></text>
</g>
<g >
<title>cql3::selection::simple_selection::is_aggregate (7 samples, 0.01%)</title><rect x="873.8" y="437" width="0.2" height="15.0" fill="rgb(229,66,25)" rx="2" ry="2" />
<text  x="876.78" y="447.5" ></text>
</g>
<g >
<title>operator delete (37 samples, 0.08%)</title><rect x="579.6" y="389" width="0.9" height="15.0" fill="rgb(245,192,32)" rx="2" ry="2" />
<text  x="582.58" y="399.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (215 samples, 0.45%)</title><rect x="266.8" y="309" width="5.4" height="15.0" fill="rgb(212,135,34)" rx="2" ry="2" />
<text  x="269.80" y="319.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.05%)</title><rect x="815.9" y="373" width="0.6" height="15.0" fill="rgb(231,141,13)" rx="2" ry="2" />
<text  x="818.89" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_M_reset (6 samples, 0.01%)</title><rect x="1107.2" y="357" width="0.1" height="15.0" fill="rgb(233,197,28)" rx="2" ry="2" />
<text  x="1110.17" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (43 samples, 0.09%)</title><rect x="620.6" y="485" width="1.0" height="15.0" fill="rgb(223,106,41)" rx="2" ry="2" />
<text  x="623.57" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="486.3" y="309" width="0.1" height="15.0" fill="rgb(227,17,43)" rx="2" ry="2" />
<text  x="489.26" y="319.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::columnOperationDifferentiator (65 samples, 0.14%)</title><rect x="18.5" y="341" width="1.6" height="15.0" fill="rgb(237,211,23)" rx="2" ry="2" />
<text  x="21.45" y="351.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers_at_partition_boundary (25 samples, 0.05%)</title><rect x="116.8" y="309" width="0.6" height="15.0" fill="rgb(241,91,24)" rx="2" ry="2" />
<text  x="119.79" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_value&lt;&gt; (20 samples, 0.04%)</title><rect x="31.4" y="485" width="0.5" height="15.0" fill="rgb(206,178,19)" rx="2" ry="2" />
<text  x="34.44" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="870.6" y="469" width="0.2" height="15.0" fill="rgb(230,126,18)" rx="2" ry="2" />
<text  x="873.57" y="479.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.02%)</title><rect x="651.5" y="437" width="0.2" height="15.0" fill="rgb(210,176,39)" rx="2" ry="2" />
<text  x="654.51" y="447.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.05%)</title><rect x="528.2" y="325" width="0.6" height="15.0" fill="rgb(249,106,5)" rx="2" ry="2" />
<text  x="531.22" y="335.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (5 samples, 0.01%)</title><rect x="803.7" y="245" width="0.1" height="15.0" fill="rgb(209,155,11)" rx="2" ry="2" />
<text  x="806.72" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::_M_create_storage (34 samples, 0.07%)</title><rect x="93.6" y="405" width="0.9" height="15.0" fill="rgb(248,118,23)" rx="2" ry="2" />
<text  x="96.65" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (14 samples, 0.03%)</title><rect x="844.8" y="373" width="0.3" height="15.0" fill="rgb(227,25,19)" rx="2" ry="2" />
<text  x="847.79" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (41 samples, 0.09%)</title><rect x="1160.6" y="373" width="1.1" height="15.0" fill="rgb(209,72,17)" rx="2" ry="2" />
<text  x="1163.63" y="383.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_internal&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt; &gt; (10 samples, 0.02%)</title><rect x="1144.4" y="293" width="0.2" height="15.0" fill="rgb(251,201,26)" rx="2" ry="2" />
<text  x="1147.37" y="303.5" ></text>
</g>
<g >
<title>operator delete (48 samples, 0.10%)</title><rect x="907.5" y="357" width="1.2" height="15.0" fill="rgb(230,56,53)" rx="2" ry="2" />
<text  x="910.52" y="367.5" ></text>
</g>
<g >
<title>std::construct_at&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::entry&gt; (77 samples, 0.16%)</title><rect x="69.1" y="405" width="2.0" height="15.0" fill="rgb(205,8,31)" rx="2" ry="2" />
<text  x="72.14" y="415.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::make_singular (80 samples, 0.17%)</title><rect x="928.5" y="389" width="2.0" height="15.0" fill="rgb(250,140,54)" rx="2" ry="2" />
<text  x="931.53" y="399.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (6 samples, 0.01%)</title><rect x="316.3" y="181" width="0.2" height="15.0" fill="rgb(249,90,33)" rx="2" ry="2" />
<text  x="319.32" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="19.1" y="277" width="0.1" height="15.0" fill="rgb(230,78,19)" rx="2" ry="2" />
<text  x="22.05" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (9 samples, 0.02%)</title><rect x="647.6" y="485" width="0.3" height="15.0" fill="rgb(237,205,54)" rx="2" ry="2" />
<text  x="650.65" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (7 samples, 0.01%)</title><rect x="810.2" y="309" width="0.1" height="15.0" fill="rgb(207,206,44)" rx="2" ry="2" />
<text  x="813.16" y="319.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="69.5" y="389" width="0.2" height="15.0" fill="rgb(207,93,8)" rx="2" ry="2" />
<text  x="72.54" y="399.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (6 samples, 0.01%)</title><rect x="839.7" y="341" width="0.1" height="15.0" fill="rgb(245,34,5)" rx="2" ry="2" />
<text  x="842.70" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (10 samples, 0.02%)</title><rect x="1109.9" y="389" width="0.2" height="15.0" fill="rgb(247,34,5)" rx="2" ry="2" />
<text  x="1112.89" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="686.1" y="469" width="0.2" height="15.0" fill="rgb(237,72,19)" rx="2" ry="2" />
<text  x="689.12" y="479.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="138.2" y="229" width="0.1" height="15.0" fill="rgb(208,95,36)" rx="2" ry="2" />
<text  x="141.15" y="239.5" ></text>
</g>
<g >
<title>seastar::logger::log&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;&amp;&gt; (6 samples, 0.01%)</title><rect x="834.9" y="437" width="0.2" height="15.0" fill="rgb(241,94,7)" rx="2" ry="2" />
<text  x="837.91" y="447.5" ></text>
</g>
<g >
<title>operator delete (10 samples, 0.02%)</title><rect x="574.1" y="389" width="0.3" height="15.0" fill="rgb(250,128,11)" rx="2" ry="2" />
<text  x="577.15" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (6 samples, 0.01%)</title><rect x="23.6" y="517" width="0.2" height="15.0" fill="rgb(208,141,6)" rx="2" ry="2" />
<text  x="26.64" y="527.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::~timer (24 samples, 0.05%)</title><rect x="66.8" y="389" width="0.6" height="15.0" fill="rgb(247,122,41)" rx="2" ry="2" />
<text  x="69.77" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (76 samples, 0.16%)</title><rect x="434.6" y="261" width="1.9" height="15.0" fill="rgb(252,20,12)" rx="2" ry="2" />
<text  x="437.57" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;::do_with_state&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (68 samples, 0.14%)</title><rect x="761.0" y="373" width="1.7" height="15.0" fill="rgb(240,153,29)" rx="2" ry="2" />
<text  x="764.04" y="383.5" ></text>
</g>
<g >
<title>partition_version_ref::operator* (10 samples, 0.02%)</title><rect x="557.4" y="277" width="0.3" height="15.0" fill="rgb(239,128,5)" rx="2" ry="2" />
<text  x="560.42" y="287.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (6 samples, 0.01%)</title><rect x="800.1" y="197" width="0.2" height="15.0" fill="rgb(251,7,25)" rx="2" ry="2" />
<text  x="803.13" y="207.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;unsigned long&gt;::the_value (52 samples, 0.11%)</title><rect x="1137.1" y="389" width="1.3" height="15.0" fill="rgb(229,97,25)" rx="2" ry="2" />
<text  x="1140.12" y="399.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::make_data_requests (530 samples, 1.12%)</title><rect x="687.4" y="501" width="13.2" height="15.0" fill="rgb(240,145,8)" rx="2" ry="2" />
<text  x="690.36" y="511.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (14 samples, 0.03%)</title><rect x="222.1" y="229" width="0.3" height="15.0" fill="rgb(219,44,54)" rx="2" ry="2" />
<text  x="225.07" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (87 samples, 0.18%)</title><rect x="972.9" y="341" width="2.1" height="15.0" fill="rgb(227,57,14)" rx="2" ry="2" />
<text  x="975.86" y="351.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::add_raw_update (10 samples, 0.02%)</title><rect x="19.0" y="309" width="0.2" height="15.0" fill="rgb(208,201,28)" rx="2" ry="2" />
<text  x="22.00" y="319.5" ></text>
</g>
<g >
<title>operator new (71 samples, 0.15%)</title><rect x="991.3" y="325" width="1.7" height="15.0" fill="rgb(254,124,27)" rx="2" ry="2" />
<text  x="994.26" y="335.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::make_requests (2,450 samples, 5.18%)</title><rect x="997.6" y="341" width="61.1" height="15.0" fill="rgb(205,52,42)" rx="2" ry="2" />
<text  x="1000.62" y="351.5" >servic..</text>
</g>
<g >
<title>service::abstract_read_executor::make_data_requests (2,359 samples, 4.98%)</title><rect x="999.6" y="325" width="58.9" height="15.0" fill="rgb(221,199,47)" rx="2" ry="2" />
<text  x="1002.64" y="335.5" >servic..</text>
</g>
<g >
<title>std::hash&lt;seastar::net::inet_address&gt;::operator (5 samples, 0.01%)</title><rect x="699.2" y="421" width="0.1" height="15.0" fill="rgb(219,227,37)" rx="2" ry="2" />
<text  x="702.18" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (5 samples, 0.01%)</title><rect x="807.1" y="261" width="0.1" height="15.0" fill="rgb(217,126,30)" rx="2" ry="2" />
<text  x="810.11" y="271.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="418.1" y="373" width="0.1" height="15.0" fill="rgb(226,112,9)" rx="2" ry="2" />
<text  x="421.07" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::emplace_back&lt;flat_mutation_reader&gt; (24 samples, 0.05%)</title><rect x="527.3" y="341" width="0.6" height="15.0" fill="rgb(209,42,24)" rx="2" ry="2" />
<text  x="530.35" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="938.8" y="405" width="0.1" height="15.0" fill="rgb(226,95,35)" rx="2" ry="2" />
<text  x="941.76" y="415.5" ></text>
</g>
<g >
<title>seastar::gate::enter (8 samples, 0.02%)</title><rect x="73.3" y="453" width="0.2" height="15.0" fill="rgb(230,87,39)" rx="2" ry="2" />
<text  x="76.25" y="463.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (37 samples, 0.08%)</title><rect x="863.9" y="501" width="0.9" height="15.0" fill="rgb(250,11,48)" rx="2" ry="2" />
<text  x="866.86" y="511.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (1,269 samples, 2.68%)</title><rect x="542.9" y="405" width="31.6" height="15.0" fill="rgb(248,136,36)" rx="2" ry="2" />
<text  x="545.90" y="415.5" >fl..</text>
</g>
<g >
<title>std::__cxx11::_List_base&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_clear (18 samples, 0.04%)</title><rect x="573.2" y="373" width="0.4" height="15.0" fill="rgb(227,170,4)" rx="2" ry="2" />
<text  x="576.20" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::clear (19 samples, 0.04%)</title><rect x="274.4" y="357" width="0.4" height="15.0" fill="rgb(219,208,18)" rx="2" ry="2" />
<text  x="277.36" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (14 samples, 0.03%)</title><rect x="828.7" y="421" width="0.4" height="15.0" fill="rgb(232,228,14)" rx="2" ry="2" />
<text  x="831.70" y="431.5" ></text>
</g>
<g >
<title>reader_permit::impl::impl (23 samples, 0.05%)</title><rect x="1042.7" y="213" width="0.6" height="15.0" fill="rgb(222,141,49)" rx="2" ry="2" />
<text  x="1045.72" y="223.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (18 samples, 0.04%)</title><rect x="32.8" y="485" width="0.4" height="15.0" fill="rgb(253,125,3)" rx="2" ry="2" />
<text  x="35.76" y="495.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;, nonwrapping_interval&lt;managed_bytes&gt; &gt; (7 samples, 0.01%)</title><rect x="1139.8" y="421" width="0.2" height="15.0" fill="rgb(245,66,5)" rx="2" ry="2" />
<text  x="1142.81" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (87 samples, 0.18%)</title><rect x="642.7" y="469" width="2.2" height="15.0" fill="rgb(207,27,22)" rx="2" ry="2" />
<text  x="645.68" y="479.5" ></text>
</g>
<g >
<title>tracing::global_trace_state_ptr::get (12 samples, 0.03%)</title><rect x="1056.1" y="277" width="0.3" height="15.0" fill="rgb(218,92,54)" rx="2" ry="2" />
<text  x="1059.09" y="287.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_move_assign (6 samples, 0.01%)</title><rect x="1117.5" y="357" width="0.1" height="15.0" fill="rgb(220,190,52)" rx="2" ry="2" />
<text  x="1120.47" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="542.2" y="421" width="0.3" height="15.0" fill="rgb(243,121,29)" rx="2" ry="2" />
<text  x="545.23" y="431.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource&gt; (6 samples, 0.01%)</title><rect x="815.4" y="389" width="0.2" height="15.0" fill="rgb(235,68,42)" rx="2" ry="2" />
<text  x="818.42" y="399.5" ></text>
</g>
<g >
<title>compound_type&lt; (11 samples, 0.02%)</title><rect x="915.7" y="389" width="0.3" height="15.0" fill="rgb(248,202,38)" rx="2" ry="2" />
<text  x="918.69" y="399.5" ></text>
</g>
<g >
<title>range_tombstone_list::~range_tombstone_list (36 samples, 0.08%)</title><rect x="558.5" y="293" width="0.9" height="15.0" fill="rgb(246,197,30)" rx="2" ry="2" />
<text  x="561.46" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (55 samples, 0.12%)</title><rect x="995.1" y="277" width="1.3" height="15.0" fill="rgb(242,128,26)" rx="2" ry="2" />
<text  x="998.05" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_locally (10 samples, 0.02%)</title><rect x="1144.4" y="213" width="0.2" height="15.0" fill="rgb(214,214,50)" rx="2" ry="2" />
<text  x="1147.37" y="223.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="756.0" y="309" width="0.2" height="15.0" fill="rgb(209,137,43)" rx="2" ry="2" />
<text  x="759.03" y="319.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="39.8" y="437" width="0.2" height="15.0" fill="rgb(232,113,17)" rx="2" ry="2" />
<text  x="42.82" y="447.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (289 samples, 0.61%)</title><rect x="533.0" y="405" width="7.2" height="15.0" fill="rgb(229,54,13)" rx="2" ry="2" />
<text  x="536.03" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (32 samples, 0.07%)</title><rect x="1074.4" y="293" width="0.8" height="15.0" fill="rgb(243,135,23)" rx="2" ry="2" />
<text  x="1077.36" y="303.5" ></text>
</g>
<g >
<title>auth::data_resource_view::table (10 samples, 0.02%)</title><rect x="798.5" y="117" width="0.3" height="15.0" fill="rgb(224,180,15)" rx="2" ry="2" />
<text  x="801.54" y="127.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (112 samples, 0.24%)</title><rect x="738.2" y="293" width="2.8" height="15.0" fill="rgb(215,221,30)" rx="2" ry="2" />
<text  x="741.20" y="303.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::make_partition_slice (540 samples, 1.14%)</title><rect x="1114.0" y="421" width="13.4" height="15.0" fill="rgb(220,121,49)" rx="2" ry="2" />
<text  x="1116.96" y="431.5" ></text>
</g>
<g >
<title>allocation_strategy::alloc&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (21 samples, 0.04%)</title><rect x="190.1" y="101" width="0.5" height="15.0" fill="rgb(246,148,47)" rx="2" ry="2" />
<text  x="193.06" y="111.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="570.8" y="325" width="0.2" height="15.0" fill="rgb(246,56,47)" rx="2" ry="2" />
<text  x="573.75" y="335.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (8 samples, 0.02%)</title><rect x="283.8" y="293" width="0.2" height="15.0" fill="rgb(219,185,49)" rx="2" ry="2" />
<text  x="286.81" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_bucket_begin (5 samples, 0.01%)</title><rect x="1159.6" y="437" width="0.1" height="15.0" fill="rgb(232,58,29)" rx="2" ry="2" />
<text  x="1162.58" y="447.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_clustered_row&lt;bytes_ostream&gt;::skip_key (14 samples, 0.03%)</title><rect x="324.1" y="181" width="0.4" height="15.0" fill="rgb(224,133,23)" rx="2" ry="2" />
<text  x="327.15" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::forward_to (28 samples, 0.06%)</title><rect x="701.8" y="501" width="0.7" height="15.0" fill="rgb(210,117,11)" rx="2" ry="2" />
<text  x="704.85" y="511.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::signal (7 samples, 0.01%)</title><rect x="388.9" y="213" width="0.2" height="15.0" fill="rgb(236,109,9)" rx="2" ry="2" />
<text  x="391.90" y="223.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="865.1" y="325" width="0.3" height="15.0" fill="rgb(231,47,9)" rx="2" ry="2" />
<text  x="868.13" y="335.5" ></text>
</g>
<g >
<title>sstring_hash::operator (12 samples, 0.03%)</title><rect x="1068.7" y="309" width="0.3" height="15.0" fill="rgb(207,13,17)" rx="2" ry="2" />
<text  x="1071.73" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get_promise (11 samples, 0.02%)</title><rect x="1005.2" y="293" width="0.3" height="15.0" fill="rgb(254,107,30)" rx="2" ry="2" />
<text  x="1008.20" y="303.5" ></text>
</g>
<g >
<title>seastar::thread_context::thread_context (10 samples, 0.02%)</title><rect x="22.5" y="565" width="0.3" height="15.0" fill="rgb(247,27,19)" rx="2" ry="2" />
<text  x="25.54" y="575.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;schema const&amp;, reader_permit&amp;, partition_start&gt; (328 samples, 0.69%)</title><rect x="495.0" y="245" width="8.2" height="15.0" fill="rgb(212,112,35)" rx="2" ry="2" />
<text  x="498.01" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_row (9 samples, 0.02%)</title><rect x="865.1" y="357" width="0.3" height="15.0" fill="rgb(208,133,1)" rx="2" ry="2" />
<text  x="868.13" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::~small_vector (184 samples, 0.39%)</title><rect x="1171.9" y="485" width="4.6" height="15.0" fill="rgb(207,61,13)" rx="2" ry="2" />
<text  x="1174.90" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="1112.6" y="389" width="0.5" height="15.0" fill="rgb(235,33,37)" rx="2" ry="2" />
<text  x="1115.63" y="399.5" ></text>
</g>
<g >
<title>position_in_partition_view::for_range_end (39 samples, 0.08%)</title><rect x="220.2" y="229" width="1.0" height="15.0" fill="rgb(250,224,45)" rx="2" ry="2" />
<text  x="223.20" y="239.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (28 samples, 0.06%)</title><rect x="718.9" y="309" width="0.7" height="15.0" fill="rgb(238,43,15)" rx="2" ry="2" />
<text  x="721.85" y="319.5" ></text>
</g>
<g >
<title>memtable_entry::snapshot (89 samples, 0.19%)</title><rect x="508.3" y="325" width="2.2" height="15.0" fill="rgb(222,176,14)" rx="2" ry="2" />
<text  x="511.32" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (7 samples, 0.01%)</title><rect x="116.6" y="293" width="0.1" height="15.0" fill="rgb(219,1,30)" rx="2" ry="2" />
<text  x="119.56" y="303.5" ></text>
</g>
<g >
<title>mutation_querier::consume (8 samples, 0.02%)</title><rect x="675.1" y="277" width="0.2" height="15.0" fill="rgb(252,150,5)" rx="2" ry="2" />
<text  x="678.12" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (10 samples, 0.02%)</title><rect x="530.5" y="389" width="0.3" height="15.0" fill="rgb(222,28,0)" rx="2" ry="2" />
<text  x="533.54" y="399.5" ></text>
</g>
<g >
<title>std::__lower_bound&lt;__gnu_cxx::__normal_iterator&lt;dht::token const*, std::vector&lt;dht::token, std::allocator&lt;dht::token&gt; &gt; &gt;, dht::token, __gnu_cxx::__ops::_Iter_less_val&gt; (271 samples, 0.57%)</title><rect x="1085.5" y="245" width="6.7" height="15.0" fill="rgb(247,206,28)" rx="2" ry="2" />
<text  x="1088.46" y="255.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (767 samples, 1.62%)</title><rect x="543.2" y="389" width="19.1" height="15.0" fill="rgb(212,85,12)" rx="2" ry="2" />
<text  x="546.20" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::stats (32 samples, 0.07%)</title><rect x="137.5" y="245" width="0.8" height="15.0" fill="rgb(252,106,51)" rx="2" ry="2" />
<text  x="140.53" y="255.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (50 samples, 0.11%)</title><rect x="1162.0" y="421" width="1.2" height="15.0" fill="rgb(225,65,45)" rx="2" ry="2" />
<text  x="1164.98" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::value_ptr&gt;::future_state&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry_ptr&gt; (47 samples, 0.10%)</title><rect x="730.6" y="325" width="1.2" height="15.0" fill="rgb(213,123,47)" rx="2" ry="2" />
<text  x="733.65" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (11 samples, 0.02%)</title><rect x="87.6" y="437" width="0.3" height="15.0" fill="rgb(216,207,26)" rx="2" ry="2" />
<text  x="90.61" y="447.5" ></text>
</g>
<g >
<title>operator new (26 samples, 0.05%)</title><rect x="282.2" y="293" width="0.7" height="15.0" fill="rgb(215,39,37)" rx="2" ry="2" />
<text  x="285.24" y="303.5" ></text>
</g>
<g >
<title>mutation_fragment::operator= (30 samples, 0.06%)</title><rect x="155.3" y="229" width="0.7" height="15.0" fill="rgb(222,63,19)" rx="2" ry="2" />
<text  x="158.26" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (35 samples, 0.07%)</title><rect x="940.5" y="357" width="0.9" height="15.0" fill="rgb(219,156,52)" rx="2" ry="2" />
<text  x="943.50" y="367.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (13 samples, 0.03%)</title><rect x="720.0" y="309" width="0.3" height="15.0" fill="rgb(228,96,54)" rx="2" ry="2" />
<text  x="723.02" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (99 samples, 0.21%)</title><rect x="845.9" y="389" width="2.5" height="15.0" fill="rgb(225,62,37)" rx="2" ry="2" />
<text  x="848.91" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (22 samples, 0.05%)</title><rect x="552.7" y="293" width="0.6" height="15.0" fill="rgb(236,30,14)" rx="2" ry="2" />
<text  x="555.70" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::find (16 samples, 0.03%)</title><rect x="640.0" y="421" width="0.4" height="15.0" fill="rgb(232,224,12)" rx="2" ry="2" />
<text  x="642.97" y="431.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry, boost::intrusive::list_node_traits&lt;void*&gt;,  (15 samples, 0.03%)</title><rect x="722.7" y="389" width="0.4" height="15.0" fill="rgb(229,178,27)" rx="2" ry="2" />
<text  x="725.74" y="399.5" ></text>
</g>
<g >
<title>operator new (40 samples, 0.08%)</title><rect x="844.1" y="405" width="1.0" height="15.0" fill="rgb(249,55,51)" rx="2" ry="2" />
<text  x="847.14" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="938.9" y="405" width="0.1" height="15.0" fill="rgb(222,209,6)" rx="2" ry="2" />
<text  x="941.88" y="415.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater, 256ul&gt;::find&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt; &gt; (211 samples, 0.45%)</title><rect x="717.0" y="389" width="5.3" height="15.0" fill="rgb(230,161,34)" rx="2" ry="2" />
<text  x="720.03" y="399.5" ></text>
</g>
<g >
<title>abstract_type::validate&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="891.0" y="277" width="0.3" height="15.0" fill="rgb(229,66,24)" rx="2" ry="2" />
<text  x="894.01" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (14 samples, 0.03%)</title><rect x="655.8" y="469" width="0.4" height="15.0" fill="rgb(251,171,29)" rx="2" ry="2" />
<text  x="658.82" y="479.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (155 samples, 0.33%)</title><rect x="34.7" y="469" width="3.9" height="15.0" fill="rgb(209,195,50)" rx="2" ry="2" />
<text  x="37.73" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (7 samples, 0.01%)</title><rect x="1144.9" y="485" width="0.2" height="15.0" fill="rgb(223,124,4)" rx="2" ry="2" />
<text  x="1147.90" y="495.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (7 samples, 0.01%)</title><rect x="1179.1" y="629" width="0.1" height="15.0" fill="rgb(228,135,18)" rx="2" ry="2" />
<text  x="1182.05" y="639.5" ></text>
</g>
<g >
<title>std::_Optional_base_impl&lt;mutation_querier, std::_Optional_base&lt;mutation_querier, false, false&gt; &gt;::_M_construct&lt;mutation_querier&gt; (47 samples, 0.10%)</title><rect x="308.2" y="165" width="1.1" height="15.0" fill="rgb(206,31,18)" rx="2" ry="2" />
<text  x="311.17" y="175.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_equals_val&lt;gms::inet_address const&gt; &gt; (8 samples, 0.02%)</title><rect x="1102.7" y="325" width="0.2" height="15.0" fill="rgb(206,107,47)" rx="2" ry="2" />
<text  x="1105.66" y="335.5" ></text>
</g>
<g >
<title>std::default_delete&lt;mutation_fragment::data&gt;::operator (36 samples, 0.08%)</title><rect x="401.5" y="245" width="0.9" height="15.0" fill="rgb(221,65,46)" rx="2" ry="2" />
<text  x="404.46" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (14 samples, 0.03%)</title><rect x="1153.1" y="453" width="0.3" height="15.0" fill="rgb(205,98,19)" rx="2" ry="2" />
<text  x="1156.10" y="463.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (15 samples, 0.03%)</title><rect x="60.0" y="421" width="0.4" height="15.0" fill="rgb(215,0,28)" rx="2" ry="2" />
<text  x="62.99" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="149.9" y="181" width="0.7" height="15.0" fill="rgb(220,179,8)" rx="2" ry="2" />
<text  x="152.90" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (82 samples, 0.17%)</title><rect x="668.5" y="453" width="2.1" height="15.0" fill="rgb(253,72,48)" rx="2" ry="2" />
<text  x="671.51" y="463.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (34 samples, 0.07%)</title><rect x="519.2" y="277" width="0.9" height="15.0" fill="rgb(221,83,23)" rx="2" ry="2" />
<text  x="522.22" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::at (5 samples, 0.01%)</title><rect x="18.8" y="213" width="0.1" height="15.0" fill="rgb(229,197,30)" rx="2" ry="2" />
<text  x="21.75" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (24 samples, 0.05%)</title><rect x="204.3" y="149" width="0.6" height="15.0" fill="rgb(254,32,25)" rx="2" ry="2" />
<text  x="207.35" y="159.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::add_data (202 samples, 0.43%)</title><rect x="692.1" y="453" width="5.0" height="15.0" fill="rgb(240,107,15)" rx="2" ry="2" />
<text  x="695.08" y="463.5" ></text>
</g>
<g >
<title>schema::column_at (23 samples, 0.05%)</title><rect x="195.4" y="133" width="0.6" height="15.0" fill="rgb(206,195,15)" rx="2" ry="2" />
<text  x="198.42" y="143.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node::free (40 samples, 0.08%)</title><rect x="396.7" y="213" width="0.9" height="15.0" fill="rgb(248,199,41)" rx="2" ry="2" />
<text  x="399.65" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume_memory (16 samples, 0.03%)</title><rect x="204.9" y="165" width="0.4" height="15.0" fill="rgb(229,228,47)" rx="2" ry="2" />
<text  x="207.95" y="175.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (12 samples, 0.03%)</title><rect x="865.1" y="437" width="0.3" height="15.0" fill="rgb(208,191,2)" rx="2" ry="2" />
<text  x="868.08" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (21 samples, 0.04%)</title><rect x="162.0" y="149" width="0.5" height="15.0" fill="rgb(250,223,0)" rx="2" ry="2" />
<text  x="164.99" y="159.5" ></text>
</g>
<g >
<title>std::__apply_impl&lt;seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1144.2" y="469" width="0.7" height="15.0" fill="rgb(211,158,17)" rx="2" ry="2" />
<text  x="1147.20" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="551.7" y="261" width="0.1" height="15.0" fill="rgb(232,69,12)" rx="2" ry="2" />
<text  x="554.68" y="271.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="597.2" y="421" width="0.8" height="15.0" fill="rgb(245,143,42)" rx="2" ry="2" />
<text  x="600.21" y="431.5" ></text>
</g>
<g >
<title>service::abstract_read_resolver::abstract_read_resolver (126 samples, 0.27%)</title><rect x="994.4" y="293" width="3.1" height="15.0" fill="rgb(214,95,33)" rx="2" ry="2" />
<text  x="997.41" y="303.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="549.2" y="309" width="0.3" height="15.0" fill="rgb(245,10,14)" rx="2" ry="2" />
<text  x="552.24" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get0 (14 samples, 0.03%)</title><rect x="691.3" y="453" width="0.4" height="15.0" fill="rgb(249,123,42)" rx="2" ry="2" />
<text  x="694.33" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned char, std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;unsigned char const, std::optional&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned char&gt;, std::hash&lt;unsigned char&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::clear (33 samples, 0.07%)</title><rect x="660.8" y="437" width="0.9" height="15.0" fill="rgb(253,47,51)" rx="2" ry="2" />
<text  x="663.84" y="447.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::check_access (3,151 samples, 6.66%)</title><rect x="749.1" y="421" width="78.6" height="15.0" fill="rgb(252,187,10)" rx="2" ry="2" />
<text  x="752.10" y="431.5" >cql3::sta..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (25 samples, 0.05%)</title><rect x="442.4" y="293" width="0.6" height="15.0" fill="rgb(207,211,53)" rx="2" ry="2" />
<text  x="445.35" y="303.5" ></text>
</g>
<g >
<title>locator::token_metadata::is_any_node_being_replaced (5 samples, 0.01%)</title><rect x="1098.2" y="293" width="0.2" height="15.0" fill="rgb(234,163,19)" rx="2" ry="2" />
<text  x="1101.25" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::operator= (33 samples, 0.07%)</title><rect x="285.1" y="261" width="0.8" height="15.0" fill="rgb(232,48,12)" rx="2" ry="2" />
<text  x="288.08" y="271.5" ></text>
</g>
<g >
<title>utils::config_file::named_value&lt;bool&gt;::the_value (15 samples, 0.03%)</title><rect x="1103.6" y="341" width="0.3" height="15.0" fill="rgb(249,119,36)" rx="2" ry="2" />
<text  x="1106.56" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="507.6" y="309" width="0.3" height="15.0" fill="rgb(222,179,13)" rx="2" ry="2" />
<text  x="510.60" y="319.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%)</title><rect x="965.0" y="373" width="1.8" height="15.0" fill="rgb(247,39,19)" rx="2" ry="2" />
<text  x="967.99" y="383.5" ></text>
</g>
<g >
<title>service::client_state::set_keyspace (144 samples, 0.30%)</title><rect x="845.2" y="421" width="3.6" height="15.0" fill="rgb(224,211,23)" rx="2" ry="2" />
<text  x="848.16" y="431.5" ></text>
</g>
<g >
<title>locator::simple_snitch::sort_by_proximity (8 samples, 0.02%)</title><rect x="1082.3" y="325" width="0.2" height="15.0" fill="rgb(219,182,26)" rx="2" ry="2" />
<text  x="1085.29" y="335.5" ></text>
</g>
<g >
<title>operator new (58 samples, 0.12%)</title><rect x="887.0" y="309" width="1.4" height="15.0" fill="rgb(235,49,50)" rx="2" ry="2" />
<text  x="890.00" y="319.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (17 samples, 0.04%)</title><rect x="133.9" y="261" width="0.5" height="15.0" fill="rgb(217,78,17)" rx="2" ry="2" />
<text  x="136.94" y="271.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.06%)</title><rect x="663.7" y="485" width="0.8" height="15.0" fill="rgb(216,174,15)" rx="2" ry="2" />
<text  x="666.73" y="495.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (10 samples, 0.02%)</title><rect x="1176.9" y="405" width="0.2" height="15.0" fill="rgb(225,78,50)" rx="2" ry="2" />
<text  x="1179.86" y="415.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (564 samples, 1.19%)</title><rect x="1154.7" y="485" width="14.1" height="15.0" fill="rgb(216,216,19)" rx="2" ry="2" />
<text  x="1157.75" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;query::read_command&gt;::shared_ptr_no_esft&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (106 samples, 0.22%)</title><rect x="1132.5" y="405" width="2.6" height="15.0" fill="rgb(212,54,2)" rx="2" ry="2" />
<text  x="1135.51" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (10 samples, 0.02%)</title><rect x="1117.6" y="357" width="0.3" height="15.0" fill="rgb(221,1,1)" rx="2" ry="2" />
<text  x="1120.62" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (18 samples, 0.04%)</title><rect x="659.1" y="469" width="0.5" height="15.0" fill="rgb(230,222,23)" rx="2" ry="2" />
<text  x="662.11" y="479.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::merge_with (6 samples, 0.01%)</title><rect x="21.6" y="341" width="0.2" height="15.0" fill="rgb(210,75,25)" rx="2" ry="2" />
<text  x="24.64" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (31 samples, 0.07%)</title><rect x="1162.4" y="405" width="0.8" height="15.0" fill="rgb(241,215,4)" rx="2" ry="2" />
<text  x="1165.45" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (5 samples, 0.01%)</title><rect x="673.6" y="485" width="0.1" height="15.0" fill="rgb(239,73,1)" rx="2" ry="2" />
<text  x="676.58" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (36 samples, 0.08%)</title><rect x="1066.5" y="277" width="0.9" height="15.0" fill="rgb(238,85,34)" rx="2" ry="2" />
<text  x="1069.51" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="827.3" y="405" width="0.3" height="15.0" fill="rgb(237,183,17)" rx="2" ry="2" />
<text  x="830.33" y="415.5" ></text>
</g>
<g >
<title>seastar::reactor::add_task (11 samples, 0.02%)</title><rect x="44.8" y="485" width="0.2" height="15.0" fill="rgb(225,68,47)" rx="2" ry="2" />
<text  x="47.76" y="495.5" ></text>
</g>
<g >
<title>utils::array_search_gt_impl (29 samples, 0.06%)</title><rect x="519.3" y="261" width="0.8" height="15.0" fill="rgb(250,16,28)" rx="2" ry="2" />
<text  x="522.34" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;reader_permit::impl, true&gt;::make&lt;reader_concurrency_semaphore&amp;, schema const* const&amp;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, reader_resources&amp;, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (104 samples, 0.22%)</title><rect x="1040.8" y="229" width="2.5" height="15.0" fill="rgb(238,92,39)" rx="2" ry="2" />
<text  x="1043.75" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (32 samples, 0.07%)</title><rect x="598.4" y="437" width="0.8" height="15.0" fill="rgb(241,199,7)" rx="2" ry="2" />
<text  x="601.40" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (73 samples, 0.15%)</title><rect x="1025.2" y="229" width="1.8" height="15.0" fill="rgb(224,23,46)" rx="2" ry="2" />
<text  x="1028.22" y="239.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::~holder (13 samples, 0.03%)</title><rect x="549.6" y="309" width="0.3" height="15.0" fill="rgb(254,12,14)" rx="2" ry="2" />
<text  x="552.61" y="319.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (7 samples, 0.01%)</title><rect x="546.9" y="293" width="0.2" height="15.0" fill="rgb(230,164,17)" rx="2" ry="2" />
<text  x="549.94" y="303.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (22 samples, 0.05%)</title><rect x="999.1" y="325" width="0.5" height="15.0" fill="rgb(214,64,4)" rx="2" ry="2" />
<text  x="1002.09" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::clear (42 samples, 0.09%)</title><rect x="247.3" y="277" width="1.0" height="15.0" fill="rgb(212,171,3)" rx="2" ry="2" />
<text  x="250.28" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot::slide_to_oldest (13 samples, 0.03%)</title><rect x="556.6" y="277" width="0.3" height="15.0" fill="rgb(249,61,41)" rx="2" ry="2" />
<text  x="559.62" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (31 samples, 0.07%)</title><rect x="360.6" y="165" width="0.7" height="15.0" fill="rgb(232,171,31)" rx="2" ry="2" />
<text  x="363.57" y="175.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="628.6" y="485" width="0.5" height="15.0" fill="rgb(212,184,11)" rx="2" ry="2" />
<text  x="631.65" y="495.5" ></text>
</g>
<g >
<title>antlr3::BaseRecognizer&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt;, antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt;::match (7 samples, 0.01%)</title><rect x="18.5" y="309" width="0.2" height="15.0" fill="rgb(206,76,52)" rx="2" ry="2" />
<text  x="21.48" y="319.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql3::metadata, false&gt;::make&lt;cql3::metadata&amp;&gt; (32 samples, 0.07%)</title><rect x="641.9" y="469" width="0.8" height="15.0" fill="rgb(228,166,24)" rx="2" ry="2" />
<text  x="644.89" y="479.5" ></text>
</g>
<g >
<title>query::partition_slice::~partition_slice (17 samples, 0.04%)</title><rect x="1134.4" y="389" width="0.4" height="15.0" fill="rgb(242,52,49)" rx="2" ry="2" />
<text  x="1137.43" y="399.5" ></text>
</g>
<g >
<title>database::find_schema (326 samples, 0.69%)</title><rect x="749.8" y="405" width="8.2" height="15.0" fill="rgb(241,112,31)" rx="2" ry="2" />
<text  x="752.84" y="415.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_token (27 samples, 0.06%)</title><rect x="946.4" y="405" width="0.7" height="15.0" fill="rgb(240,176,2)" rx="2" ry="2" />
<text  x="949.41" y="415.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (44 samples, 0.09%)</title><rect x="265.7" y="309" width="1.1" height="15.0" fill="rgb(249,10,22)" rx="2" ry="2" />
<text  x="268.68" y="319.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.04%)</title><rect x="605.0" y="389" width="0.6" height="15.0" fill="rgb(225,7,10)" rx="2" ry="2" />
<text  x="608.04" y="399.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (16 samples, 0.03%)</title><rect x="935.4" y="405" width="0.4" height="15.0" fill="rgb(206,215,6)" rx="2" ry="2" />
<text  x="938.39" y="415.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;flat_mutation_reader  (5 samples, 0.01%)</title><rect x="417.7" y="389" width="0.2" height="15.0" fill="rgb(234,154,37)" rx="2" ry="2" />
<text  x="420.74" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="816.8" y="357" width="0.1" height="15.0" fill="rgb(240,136,25)" rx="2" ry="2" />
<text  x="819.76" y="367.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (12 samples, 0.03%)</title><rect x="638.3" y="421" width="0.3" height="15.0" fill="rgb(220,47,15)" rx="2" ry="2" />
<text  x="641.30" y="431.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (5 samples, 0.01%)</title><rect x="741.0" y="357" width="0.1" height="15.0" fill="rgb(240,97,44)" rx="2" ry="2" />
<text  x="744.02" y="367.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (31 samples, 0.07%)</title><rect x="774.5" y="277" width="0.8" height="15.0" fill="rgb(219,41,52)" rx="2" ry="2" />
<text  x="777.50" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (9 samples, 0.02%)</title><rect x="309.4" y="197" width="0.2" height="15.0" fill="rgb(248,123,47)" rx="2" ry="2" />
<text  x="312.39" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_need_rehash (28 samples, 0.06%)</title><rect x="1163.3" y="453" width="0.7" height="15.0" fill="rgb(232,41,53)" rx="2" ry="2" />
<text  x="1166.27" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1140.7" y="421" width="0.2" height="15.0" fill="rgb(221,76,33)" rx="2" ry="2" />
<text  x="1143.71" y="431.5" ></text>
</g>
<g >
<title>std::make_unique&lt;compact_for_query&lt; (67 samples, 0.14%)</title><rect x="409.6" y="357" width="1.7" height="15.0" fill="rgb(238,161,34)" rx="2" ry="2" />
<text  x="412.59" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::operator= (21 samples, 0.04%)</title><rect x="829.1" y="421" width="0.6" height="15.0" fill="rgb(250,139,13)" rx="2" ry="2" />
<text  x="832.13" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;nonwrapping_interval&lt;dht::ring_position&gt; const, std::default_delete&lt;nonwrapping_interval&lt;dht::ring_position&gt; const&gt; &gt;::~unique_ptr (44 samples, 0.09%)</title><rect x="577.3" y="421" width="1.1" height="15.0" fill="rgb(239,193,9)" rx="2" ry="2" />
<text  x="580.34" y="431.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (6 samples, 0.01%)</title><rect x="39.5" y="453" width="0.2" height="15.0" fill="rgb(208,137,18)" rx="2" ry="2" />
<text  x="42.52" y="463.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::digests_match (15 samples, 0.03%)</title><rect x="695.9" y="421" width="0.4" height="15.0" fill="rgb(237,65,33)" rx="2" ry="2" />
<text  x="698.89" y="431.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;::_Tuple_impl&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const&amp;, auth::resource, void&gt; (58 samples, 0.12%)</title><rect x="761.2" y="357" width="1.5" height="15.0" fill="rgb(220,60,7)" rx="2" ry="2" />
<text  x="764.24" y="367.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (11 samples, 0.02%)</title><rect x="540.8" y="421" width="0.3" height="15.0" fill="rgb(249,156,47)" rx="2" ry="2" />
<text  x="543.84" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::metadata&gt;::~shared_ptr (19 samples, 0.04%)</title><rect x="641.3" y="469" width="0.5" height="15.0" fill="rgb(240,208,12)" rx="2" ry="2" />
<text  x="644.29" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (8 samples, 0.02%)</title><rect x="647.4" y="453" width="0.2" height="15.0" fill="rgb(209,31,27)" rx="2" ry="2" />
<text  x="650.40" y="463.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (12 samples, 0.03%)</title><rect x="837.8" y="389" width="0.3" height="15.0" fill="rgb(235,116,33)" rx="2" ry="2" />
<text  x="840.76" y="399.5" ></text>
</g>
<g >
<title>query::result::builder::build (6 samples, 0.01%)</title><rect x="58.2" y="453" width="0.1" height="15.0" fill="rgb(237,84,6)" rx="2" ry="2" />
<text  x="61.17" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::vector (114 samples, 0.24%)</title><rect x="941.9" y="405" width="2.9" height="15.0" fill="rgb(235,5,50)" rx="2" ry="2" />
<text  x="944.95" y="415.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (20 samples, 0.04%)</title><rect x="350.5" y="149" width="0.5" height="15.0" fill="rgb(220,88,7)" rx="2" ry="2" />
<text  x="353.53" y="159.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="848.6" y="405" width="0.1" height="15.0" fill="rgb(234,5,49)" rx="2" ry="2" />
<text  x="851.55" y="415.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (5 samples, 0.01%)</title><rect x="1110.4" y="373" width="0.2" height="15.0" fill="rgb(209,161,14)" rx="2" ry="2" />
<text  x="1113.44" y="383.5" ></text>
</g>
<g >
<title>list_reader_selector::create_new_readers (49 samples, 0.10%)</title><rect x="432.6" y="277" width="1.3" height="15.0" fill="rgb(208,194,15)" rx="2" ry="2" />
<text  x="435.63" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="643.0" y="437" width="0.3" height="15.0" fill="rgb(216,224,28)" rx="2" ry="2" />
<text  x="645.98" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (20 samples, 0.04%)</title><rect x="673.0" y="453" width="0.5" height="15.0" fill="rgb(233,19,10)" rx="2" ry="2" />
<text  x="676.03" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;::_M_range_initialize&lt;cql3::raw_value const*&gt; (82 samples, 0.17%)</title><rect x="857.2" y="453" width="2.0" height="15.0" fill="rgb(226,15,10)" rx="2" ry="2" />
<text  x="860.18" y="463.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; const*, nonwrapping_interval&lt;clustering_key_prefix&gt;*&gt; (18 samples, 0.04%)</title><rect x="1123.3" y="357" width="0.5" height="15.0" fill="rgb(222,136,46)" rx="2" ry="2" />
<text  x="1126.33" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (11,098 samples, 23.45%)</title><rect x="866.6" y="485" width="276.7" height="15.0" fill="rgb(213,166,45)" rx="2" ry="2" />
<text  x="869.58" y="495.5" >seastar::concrete_execution_stage&lt;sea..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (12 samples, 0.03%)</title><rect x="989.3" y="293" width="0.3" height="15.0" fill="rgb(211,214,28)" rx="2" ry="2" />
<text  x="992.27" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (8 samples, 0.02%)</title><rect x="223.7" y="245" width="0.2" height="15.0" fill="rgb(217,199,46)" rx="2" ry="2" />
<text  x="226.72" y="255.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (9 samples, 0.02%)</title><rect x="994.2" y="293" width="0.2" height="15.0" fill="rgb(250,83,49)" rx="2" ry="2" />
<text  x="997.18" y="303.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::in_alloc_section&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::next_range_tombstone (182 samples, 0.38%)</title><rect x="214.2" y="213" width="4.6" height="15.0" fill="rgb(227,225,45)" rx="2" ry="2" />
<text  x="217.22" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::list_impl&lt;boost::intrusive::bhtraits&lt;utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="786.8" y="149" width="0.1" height="15.0" fill="rgb(248,217,10)" rx="2" ry="2" />
<text  x="789.79" y="159.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (31 samples, 0.07%)</title><rect x="597.2" y="405" width="0.8" height="15.0" fill="rgb(233,23,54)" rx="2" ry="2" />
<text  x="600.21" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (3,626 samples, 7.66%)</title><rect x="294.9" y="245" width="90.4" height="15.0" fill="rgb(226,28,42)" rx="2" ry="2" />
<text  x="297.93" y="255.5" >flat_mutat..</text>
</g>
<g >
<title>service::storage_proxy::new_read_repair_decision (9 samples, 0.02%)</title><rect x="1104.2" y="357" width="0.2" height="15.0" fill="rgb(229,124,6)" rx="2" ry="2" />
<text  x="1107.16" y="367.5" ></text>
</g>
<g >
<title>std::get&lt;1ul, fragmented_temporary_buffer::view, managed_bytes_basic_view&lt; (8 samples, 0.02%)</title><rect x="899.8" y="277" width="0.2" height="15.0" fill="rgb(205,201,26)" rx="2" ry="2" />
<text  x="902.81" y="287.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;cql3::authorized_prepared_statements_cache_key, seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;,  (69 samples, 0.15%)</title><rect x="730.3" y="341" width="1.7" height="15.0" fill="rgb(234,170,17)" rx="2" ry="2" />
<text  x="733.27" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::~impl (21 samples, 0.04%)</title><rect x="51.0" y="469" width="0.6" height="15.0" fill="rgb(235,112,6)" rx="2" ry="2" />
<text  x="54.04" y="479.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (26 samples, 0.05%)</title><rect x="340.6" y="149" width="0.7" height="15.0" fill="rgb(219,105,17)" rx="2" ry="2" />
<text  x="343.63" y="159.5" ></text>
</g>
<g >
<title>TLS init function for cql3::statements::select_statement::_default_parameters (8 samples, 0.02%)</title><rect x="745.5" y="389" width="0.2" height="15.0" fill="rgb(221,144,20)" rx="2" ry="2" />
<text  x="748.48" y="399.5" ></text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_partition_key_ranges (2,589 samples, 5.47%)</title><rect x="880.3" y="421" width="64.6" height="15.0" fill="rgb(234,67,10)" rx="2" ry="2" />
<text  x="883.31" y="431.5" >cql3::r..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::clear (19 samples, 0.04%)</title><rect x="572.3" y="341" width="0.5" height="15.0" fill="rgb(252,192,6)" rx="2" ry="2" />
<text  x="575.30" y="351.5" ></text>
</g>
<g >
<title>db::validate_for_read (7 samples, 0.01%)</title><rect x="1127.5" y="421" width="0.2" height="15.0" fill="rgb(236,114,18)" rx="2" ry="2" />
<text  x="1130.52" y="431.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="420.0" y="357" width="0.1" height="15.0" fill="rgb(251,216,27)" rx="2" ry="2" />
<text  x="422.96" y="367.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (12 samples, 0.03%)</title><rect x="813.6" y="309" width="0.3" height="15.0" fill="rgb(216,187,7)" rx="2" ry="2" />
<text  x="816.60" y="319.5" ></text>
</g>
<g >
<title>auth::get_permissions (6 samples, 0.01%)</title><rect x="22.2" y="373" width="0.2" height="15.0" fill="rgb(231,49,35)" rx="2" ry="2" />
<text  x="25.22" y="383.5" ></text>
</g>
<g >
<title>__strlen_avx2 (115 samples, 0.24%)</title><rect x="1021.2" y="245" width="2.8" height="15.0" fill="rgb(232,147,29)" rx="2" ry="2" />
<text  x="1024.16" y="255.5" ></text>
</g>
<g >
<title>ser::writer_of_qr_partition&lt;bytes_ostream&gt;::skip_key (17 samples, 0.04%)</title><rect x="303.9" y="165" width="0.4" height="15.0" fill="rgb(238,106,3)" rx="2" ry="2" />
<text  x="306.88" y="175.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (148 samples, 0.31%)</title><rect x="1065.0" y="309" width="3.7" height="15.0" fill="rgb(252,147,26)" rx="2" ry="2" />
<text  x="1067.96" y="319.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (17 samples, 0.04%)</title><rect x="1067.9" y="261" width="0.5" height="15.0" fill="rgb(212,196,30)" rx="2" ry="2" />
<text  x="1070.93" y="271.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (14 samples, 0.03%)</title><rect x="1125.1" y="373" width="0.4" height="15.0" fill="rgb(238,6,46)" rx="2" ry="2" />
<text  x="1128.13" y="383.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (7 samples, 0.01%)</title><rect x="848.4" y="389" width="0.2" height="15.0" fill="rgb(218,217,51)" rx="2" ry="2" />
<text  x="851.38" y="399.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (52 samples, 0.11%)</title><rect x="196.2" y="149" width="1.3" height="15.0" fill="rgb(224,160,31)" rx="2" ry="2" />
<text  x="199.20" y="159.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__timestamp&lt;bytes_ostream&gt;::skip_expiry (152 samples, 0.32%)</title><rect x="341.5" y="165" width="3.8" height="15.0" fill="rgb(238,223,5)" rx="2" ry="2" />
<text  x="344.50" y="175.5" ></text>
</g>
<g >
<title>operator new (43 samples, 0.09%)</title><rect x="777.7" y="277" width="1.1" height="15.0" fill="rgb(218,90,48)" rx="2" ry="2" />
<text  x="780.72" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;query::result_memory_accounter&gt;::get0 (22 samples, 0.05%)</title><rect x="71.7" y="453" width="0.6" height="15.0" fill="rgb(235,40,13)" rx="2" ry="2" />
<text  x="74.71" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;reader_concurrency_semaphore::entry&gt; &gt;::destroy&lt;reader_concurrency_semaphore::entry&gt; (34 samples, 0.07%)</title><rect x="616.6" y="485" width="0.8" height="15.0" fill="rgb(250,124,22)" rx="2" ry="2" />
<text  x="619.56" y="495.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (34 samples, 0.07%)</title><rect x="21.2" y="469" width="0.9" height="15.0" fill="rgb(245,86,52)" rx="2" ry="2" />
<text  x="24.24" y="479.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (19 samples, 0.04%)</title><rect x="1156.3" y="421" width="0.5" height="15.0" fill="rgb(214,58,50)" rx="2" ry="2" />
<text  x="1159.34" y="431.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::partition_tombstone (45 samples, 0.10%)</title><rect x="503.5" y="245" width="1.1" height="15.0" fill="rgb(220,123,11)" rx="2" ry="2" />
<text  x="506.46" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (152 samples, 0.32%)</title><rect x="536.2" y="373" width="3.8" height="15.0" fill="rgb(210,185,14)" rx="2" ry="2" />
<text  x="539.17" y="383.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (11 samples, 0.02%)</title><rect x="814.8" y="261" width="0.3" height="15.0" fill="rgb(234,215,50)" rx="2" ry="2" />
<text  x="817.79" y="271.5" ></text>
</g>
<g >
<title>service::client_state::has_column_family_access (2,745 samples, 5.80%)</title><rect x="758.6" y="405" width="68.4" height="15.0" fill="rgb(213,215,53)" rx="2" ry="2" />
<text  x="761.57" y="415.5" >service..</text>
</g>
<g >
<title>cql3::query_processor::parse_statement (221 samples, 0.47%)</title><rect x="15.7" y="469" width="5.5" height="15.0" fill="rgb(249,208,24)" rx="2" ry="2" />
<text  x="18.73" y="479.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (26 samples, 0.05%)</title><rect x="684.5" y="485" width="0.7" height="15.0" fill="rgb(213,49,3)" rx="2" ry="2" />
<text  x="687.52" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (10 samples, 0.02%)</title><rect x="1134.6" y="373" width="0.2" height="15.0" fill="rgb(220,221,50)" rx="2" ry="2" />
<text  x="1137.60" y="383.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (13 samples, 0.03%)</title><rect x="506.0" y="277" width="0.3" height="15.0" fill="rgb(229,201,8)" rx="2" ry="2" />
<text  x="509.00" y="287.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_4findERKNS5_10expressionENS5_6oper_tEEUlRS7_E_EES8_SE_T_EUlSG_E_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_8constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_11conjunctionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_12column_valueEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_5tokenEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13function_callEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4castEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_15field_selectionEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_4nullEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_13bind_variableEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_16untyped_constantEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_17tuple_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_22collection_constructorEE_ZNSB_ISH_EES8_SE_SI_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSO_S6_SS_SW_S10_S14_S18_S1C_S1G_S1K_S1O_S1S_SK_S1W_S20_S24_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES29_S2C_ (5 samples, 0.01%)</title><rect x="881.4" y="405" width="0.1" height="15.0" fill="rgb(252,50,46)" rx="2" ry="2" />
<text  x="884.41" y="415.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::do_merge_with (5 samples, 0.01%)</title><rect x="21.7" y="325" width="0.1" height="15.0" fill="rgb(235,161,9)" rx="2" ry="2" />
<text  x="24.67" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (5 samples, 0.01%)</title><rect x="861.9" y="469" width="0.2" height="15.0" fill="rgb(205,211,31)" rx="2" ry="2" />
<text  x="864.94" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (9 samples, 0.02%)</title><rect x="187.2" y="101" width="0.2" height="15.0" fill="rgb(226,24,48)" rx="2" ry="2" />
<text  x="190.17" y="111.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (11 samples, 0.02%)</title><rect x="674.1" y="485" width="0.3" height="15.0" fill="rgb(245,43,53)" rx="2" ry="2" />
<text  x="677.15" y="495.5" ></text>
</g>
<g >
<title>bytes_ostream::view (9 samples, 0.02%)</title><rect x="583.7" y="405" width="0.3" height="15.0" fill="rgb(232,229,16)" rx="2" ry="2" />
<text  x="586.74" y="415.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql_transport::messages::result_message&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="33.3" y="485" width="0.2" height="15.0" fill="rgb(211,192,3)" rx="2" ry="2" />
<text  x="36.29" y="495.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (5 samples, 0.01%)</title><rect x="626.5" y="485" width="0.2" height="15.0" fill="rgb(244,178,31)" rx="2" ry="2" />
<text  x="629.53" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (19 samples, 0.04%)</title><rect x="383.6" y="197" width="0.5" height="15.0" fill="rgb(248,27,15)" rx="2" ry="2" />
<text  x="386.59" y="207.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%)</title><rect x="664.6" y="485" width="0.4" height="15.0" fill="rgb(221,181,38)" rx="2" ry="2" />
<text  x="667.65" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;flat_mutation_reader  (4,477 samples, 9.46%)</title><rect x="417.9" y="389" width="111.6" height="15.0" fill="rgb(250,176,8)" rx="2" ry="2" />
<text  x="420.87" y="399.5" >std::function..</text>
</g>
<g >
<title>cql3::restrictions::statement_restrictions::get_clustering_bounds (286 samples, 0.60%)</title><rect x="1116.6" y="405" width="7.2" height="15.0" fill="rgb(220,227,44)" rx="2" ry="2" />
<text  x="1119.65" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (20 samples, 0.04%)</title><rect x="571.1" y="357" width="0.5" height="15.0" fill="rgb(210,57,51)" rx="2" ry="2" />
<text  x="574.08" y="367.5" ></text>
</g>
<g >
<title>compound_wrapper&lt;partition_key, partition_key_view&gt;::make_empty (84 samples, 0.18%)</title><rect x="533.8" y="389" width="2.0" height="15.0" fill="rgb(211,150,1)" rx="2" ry="2" />
<text  x="536.75" y="399.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;auth::role_or_anonymous, auth::get_permissions (6 samples, 0.01%)</title><rect x="807.6" y="309" width="0.1" height="15.0" fill="rgb(250,169,43)" rx="2" ry="2" />
<text  x="810.56" y="319.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (33 samples, 0.07%)</title><rect x="639.6" y="469" width="0.8" height="15.0" fill="rgb(222,114,54)" rx="2" ry="2" />
<text  x="642.57" y="479.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (37 samples, 0.08%)</title><rect x="304.8" y="181" width="0.9" height="15.0" fill="rgb(248,81,43)" rx="2" ry="2" />
<text  x="307.78" y="191.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (5 samples, 0.01%)</title><rect x="1067.6" y="293" width="0.1" height="15.0" fill="rgb(213,196,31)" rx="2" ry="2" />
<text  x="1070.56" y="303.5" ></text>
</g>
<g >
<title>_ZSt5applyIZN7seastar8internal12do_with_implISt8optionalIN4auth8resourceEEZNK7service12client_state20check_has_permissionENS4_12command_descEE3$_7JEEEDaOT_OT0_DpOT1_EUlDpOT_E_St5tupleIJOS6_EEEDcSC_SE_ (60 samples, 0.13%)</title><rect x="771.5" y="325" width="1.5" height="15.0" fill="rgb(221,53,1)" rx="2" ry="2" />
<text  x="774.53" y="335.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="626.0" y="485" width="0.5" height="15.0" fill="rgb(242,16,6)" rx="2" ry="2" />
<text  x="628.95" y="495.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (23 samples, 0.05%)</title><rect x="1030.5" y="181" width="0.5" height="15.0" fill="rgb(245,28,52)" rx="2" ry="2" />
<text  x="1033.46" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (5 samples, 0.01%)</title><rect x="1028.1" y="213" width="0.2" height="15.0" fill="rgb(206,202,48)" rx="2" ry="2" />
<text  x="1031.14" y="223.5" ></text>
</g>
<g >
<title>locator::abstract_replication_strategy::get_natural_endpoints (574 samples, 1.21%)</title><rect x="1083.9" y="293" width="14.3" height="15.0" fill="rgb(238,9,33)" rx="2" ry="2" />
<text  x="1086.91" y="303.5" ></text>
</g>
<g >
<title>operator new (45 samples, 0.10%)</title><rect x="747.4" y="405" width="1.1" height="15.0" fill="rgb(240,103,47)" rx="2" ry="2" />
<text  x="750.43" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (17 samples, 0.04%)</title><rect x="252.2" y="325" width="0.4" height="15.0" fill="rgb(251,150,49)" rx="2" ry="2" />
<text  x="255.19" y="335.5" ></text>
</g>
<g >
<title>empty_flat_reader::close (10 samples, 0.02%)</title><rect x="545.3" y="341" width="0.2" height="15.0" fill="rgb(208,103,28)" rx="2" ry="2" />
<text  x="548.27" y="351.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::entry::entry (128 samples, 0.27%)</title><rect x="1032.5" y="165" width="3.2" height="15.0" fill="rgb(216,13,30)" rx="2" ry="2" />
<text  x="1035.50" y="175.5" ></text>
</g>
<g >
<title>table::set_hit_rate (65 samples, 0.14%)</title><rect x="697.7" y="453" width="1.6" height="15.0" fill="rgb(222,199,0)" rx="2" ry="2" />
<text  x="700.71" y="463.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="437" width="0.9" height="15.0" fill="rgb(207,208,43)" rx="2" ry="2" />
<text  x="1146.30" y="447.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (425 samples, 0.90%)</title><rect x="298.8" y="197" width="10.6" height="15.0" fill="rgb(251,143,33)" rx="2" ry="2" />
<text  x="301.79" y="207.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::make_ready&lt; (11 samples, 0.02%)</title><rect x="863.4" y="501" width="0.2" height="15.0" fill="rgb(231,7,49)" rx="2" ry="2" />
<text  x="866.36" y="511.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (30 samples, 0.06%)</title><rect x="858.5" y="437" width="0.7" height="15.0" fill="rgb(223,112,22)" rx="2" ry="2" />
<text  x="861.47" y="447.5" ></text>
</g>
<g >
<title>antlr3::Parser&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::matchToken (7 samples, 0.01%)</title><rect x="18.5" y="325" width="0.2" height="15.0" fill="rgb(237,212,25)" rx="2" ry="2" />
<text  x="21.48" y="335.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (10 samples, 0.02%)</title><rect x="192.6" y="117" width="0.2" height="15.0" fill="rgb(237,181,24)" rx="2" ry="2" />
<text  x="195.55" y="127.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="448.8" y="277" width="0.3" height="15.0" fill="rgb(253,183,0)" rx="2" ry="2" />
<text  x="451.81" y="287.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (16 samples, 0.03%)</title><rect x="1175.7" y="421" width="0.4" height="15.0" fill="rgb(222,150,30)" rx="2" ry="2" />
<text  x="1178.66" y="431.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (363 samples, 0.77%)</title><rect x="369.6" y="165" width="9.1" height="15.0" fill="rgb(240,11,44)" rx="2" ry="2" />
<text  x="372.62" y="175.5" ></text>
</g>
<g >
<title>bytes_view_hasher::finalize (60 samples, 0.13%)</title><rect x="739.1" y="261" width="1.5" height="15.0" fill="rgb(249,214,36)" rx="2" ry="2" />
<text  x="742.15" y="271.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (44 samples, 0.09%)</title><rect x="379.6" y="165" width="1.1" height="15.0" fill="rgb(253,50,49)" rx="2" ry="2" />
<text  x="382.57" y="175.5" ></text>
</g>
<g >
<title>std::type_info::operator== (6 samples, 0.01%)</title><rect x="1008.5" y="277" width="0.2" height="15.0" fill="rgb(229,168,31)" rx="2" ry="2" />
<text  x="1011.52" y="287.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (859 samples, 1.81%)</title><rect x="913.9" y="405" width="21.4" height="15.0" fill="rgb(208,123,45)" rx="2" ry="2" />
<text  x="916.90" y="415.5" >c..</text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (10 samples, 0.02%)</title><rect x="163.5" y="133" width="0.2" height="15.0" fill="rgb(253,74,21)" rx="2" ry="2" />
<text  x="166.46" y="143.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (15 samples, 0.03%)</title><rect x="261.8" y="341" width="0.4" height="15.0" fill="rgb(236,61,40)" rx="2" ry="2" />
<text  x="264.84" y="351.5" ></text>
</g>
<g >
<title>clustering_row::clustering_row (6 samples, 0.01%)</title><rect x="865.1" y="293" width="0.2" height="15.0" fill="rgb(220,38,23)" rx="2" ry="2" />
<text  x="868.13" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (14 samples, 0.03%)</title><rect x="237.7" y="229" width="0.3" height="15.0" fill="rgb(234,88,19)" rx="2" ry="2" />
<text  x="240.68" y="239.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::abstract_read_executor (144 samples, 0.30%)</title><rect x="1076.3" y="309" width="3.5" height="15.0" fill="rgb(216,48,28)" rx="2" ry="2" />
<text  x="1079.26" y="319.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::~merging_reader (468 samples, 0.99%)</title><rect x="562.3" y="389" width="11.7" height="15.0" fill="rgb(228,96,37)" rx="2" ry="2" />
<text  x="565.33" y="399.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_destroy_data (14 samples, 0.03%)</title><rect x="606.8" y="389" width="0.3" height="15.0" fill="rgb(227,158,21)" rx="2" ry="2" />
<text  x="609.78" y="399.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::~abstract_read_executor (91 samples, 0.19%)</title><rect x="1174.1" y="437" width="2.2" height="15.0" fill="rgb(221,87,45)" rx="2" ry="2" />
<text  x="1177.07" y="447.5" ></text>
</g>
<g >
<title>seastar::repeat&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (6,702 samples, 14.16%)</title><rect x="108.5" y="373" width="167.1" height="15.0" fill="rgb(215,174,46)" rx="2" ry="2" />
<text  x="111.46" y="383.5" >seastar::repeat&lt;mergi..</text>
</g>
<g >
<title>compact_mutation_state&lt; (128 samples, 0.27%)</title><rect x="291.7" y="245" width="3.2" height="15.0" fill="rgb(219,33,21)" rx="2" ry="2" />
<text  x="294.74" y="255.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (173 samples, 0.37%)</title><rect x="795.8" y="165" width="4.3" height="15.0" fill="rgb(236,94,1)" rx="2" ry="2" />
<text  x="798.82" y="175.5" ></text>
</g>
<g >
<title>std::make_unique&lt;cql3::query_options, db::consistency_level&amp;, std::vector&lt;cql3::raw_value, std::allocator&lt;cql3::raw_value&gt; &gt;, cql3::query_options::specific_options&gt; (255 samples, 0.54%)</title><rect x="849.3" y="453" width="6.4" height="15.0" fill="rgb(223,92,40)" rx="2" ry="2" />
<text  x="852.30" y="463.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::~small_vector (42 samples, 0.09%)</title><rect x="571.7" y="357" width="1.1" height="15.0" fill="rgb(218,217,31)" rx="2" ry="2" />
<text  x="574.73" y="367.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.04%)</title><rect x="760.5" y="373" width="0.5" height="15.0" fill="rgb(246,214,13)" rx="2" ry="2" />
<text  x="763.51" y="383.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::check_access (8 samples, 0.02%)</title><rect x="22.2" y="485" width="0.2" height="15.0" fill="rgb(251,87,49)" rx="2" ry="2" />
<text  x="25.17" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (23 samples, 0.05%)</title><rect x="674.9" y="405" width="0.6" height="15.0" fill="rgb(252,206,8)" rx="2" ry="2" />
<text  x="677.95" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (460 samples, 0.97%)</title><rect x="675.9" y="501" width="11.5" height="15.0" fill="rgb(205,161,4)" rx="2" ry="2" />
<text  x="678.89" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;mutation_fragment*&gt;::take_value (7 samples, 0.01%)</title><rect x="414.6" y="405" width="0.1" height="15.0" fill="rgb(250,45,27)" rx="2" ry="2" />
<text  x="417.55" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;gms::inet_address, std::pair&lt;gms::inet_address const, utils::UUID&gt;, std::allocator&lt;std::pair&lt;gms::inet_address const, utils::UUID&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;gms::inet_address&gt;, std::hash&lt;gms::inet_address&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (53 samples, 0.11%)</title><rect x="1155.7" y="437" width="1.3" height="15.0" fill="rgb(206,22,5)" rx="2" ry="2" />
<text  x="1158.67" y="447.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::maybe_decay_reserve (5 samples, 0.01%)</title><rect x="238.8" y="229" width="0.1" height="15.0" fill="rgb(226,97,26)" rx="2" ry="2" />
<text  x="241.80" y="239.5" ></text>
</g>
<g >
<title>compound_type&lt; (171 samples, 0.36%)</title><rect x="474.6" y="213" width="4.3" height="15.0" fill="rgb(235,14,45)" rx="2" ry="2" />
<text  x="477.59" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (5 samples, 0.01%)</title><rect x="1171.6" y="453" width="0.1" height="15.0" fill="rgb(243,177,38)" rx="2" ry="2" />
<text  x="1174.60" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (26 samples, 0.05%)</title><rect x="236.6" y="165" width="0.7" height="15.0" fill="rgb(233,193,8)" rx="2" ry="2" />
<text  x="239.64" y="175.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (9 samples, 0.02%)</title><rect x="594.6" y="421" width="0.2" height="15.0" fill="rgb(246,190,0)" rx="2" ry="2" />
<text  x="597.59" y="431.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;dht::token, std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt;, std::allocator&lt;std::pair&lt;dht::token const, utils::small_vector&lt;gms::inet_address, 3ul&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;dht::token&gt;, std::hash&lt;dht::token&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (176 samples, 0.37%)</title><rect x="1093.7" y="261" width="4.3" height="15.0" fill="rgb(235,146,21)" rx="2" ry="2" />
<text  x="1096.66" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="581.6" y="373" width="0.1" height="15.0" fill="rgb(236,192,2)" rx="2" ry="2" />
<text  x="584.62" y="383.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (23 samples, 0.05%)</title><rect x="317.3" y="181" width="0.6" height="15.0" fill="rgb(215,45,35)" rx="2" ry="2" />
<text  x="320.29" y="191.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (9 samples, 0.02%)</title><rect x="74.1" y="453" width="0.2" height="15.0" fill="rgb(228,15,32)" rx="2" ry="2" />
<text  x="77.05" y="463.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~deque (95 samples, 0.20%)</title><rect x="604.8" y="405" width="2.4" height="15.0" fill="rgb(213,14,53)" rx="2" ry="2" />
<text  x="607.79" y="415.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::inet_address (9 samples, 0.02%)</title><rect x="983.0" y="357" width="0.3" height="15.0" fill="rgb(222,35,48)" rx="2" ry="2" />
<text  x="986.04" y="367.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (33 samples, 0.07%)</title><rect x="228.8" y="165" width="0.8" height="15.0" fill="rgb(225,99,51)" rx="2" ry="2" />
<text  x="231.81" y="175.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; const&amp;&gt; (17 samples, 0.04%)</title><rect x="764.3" y="357" width="0.4" height="15.0" fill="rgb(232,167,44)" rx="2" ry="2" />
<text  x="767.28" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::get0 (28 samples, 0.06%)</title><rect x="261.5" y="357" width="0.7" height="15.0" fill="rgb(246,85,54)" rx="2" ry="2" />
<text  x="264.52" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::splice (7 samples, 0.01%)</title><rect x="133.4" y="261" width="0.2" height="15.0" fill="rgb(225,132,53)" rx="2" ry="2" />
<text  x="136.39" y="271.5" ></text>
</g>
<g >
<title>reader_selector::has_new_readers (8 samples, 0.02%)</title><rect x="119.6" y="261" width="0.2" height="15.0" fill="rgb(211,205,18)" rx="2" ry="2" />
<text  x="122.55" y="271.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (86 samples, 0.18%)</title><rect x="345.3" y="165" width="2.1" height="15.0" fill="rgb(230,216,29)" rx="2" ry="2" />
<text  x="348.29" y="175.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (6 samples, 0.01%)</title><rect x="503.0" y="229" width="0.2" height="15.0" fill="rgb(249,77,9)" rx="2" ry="2" />
<text  x="506.04" y="239.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (13 samples, 0.03%)</title><rect x="163.8" y="133" width="0.4" height="15.0" fill="rgb(230,167,49)" rx="2" ry="2" />
<text  x="166.83" y="143.5" ></text>
</g>
<g >
<title>create_partitions (279 samples, 0.59%)</title><rect x="15.5" y="533" width="7.0" height="15.0" fill="rgb(241,105,27)" rx="2" ry="2" />
<text  x="18.51" y="543.5" ></text>
</g>
<g >
<title>std::_Optional_base&lt;mutation_querier, false, false&gt;::_Optional_base (5 samples, 0.01%)</title><rect x="409.3" y="357" width="0.2" height="15.0" fill="rgb(252,16,2)" rx="2" ry="2" />
<text  x="412.34" y="367.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::result_memory_accounter (11 samples, 0.02%)</title><rect x="587.4" y="405" width="0.2" height="15.0" fill="rgb(251,104,24)" rx="2" ry="2" />
<text  x="590.36" y="415.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (20 samples, 0.04%)</title><rect x="671.0" y="453" width="0.5" height="15.0" fill="rgb(223,160,5)" rx="2" ry="2" />
<text  x="674.03" y="463.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (33 samples, 0.07%)</title><rect x="649.8" y="485" width="0.9" height="15.0" fill="rgb(222,93,0)" rx="2" ry="2" />
<text  x="652.84" y="495.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::relation (13 samples, 0.03%)</title><rect x="20.1" y="341" width="0.4" height="15.0" fill="rgb(239,76,43)" rx="2" ry="2" />
<text  x="23.15" y="351.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt;::substr (5 samples, 0.01%)</title><rect x="478.7" y="197" width="0.2" height="15.0" fill="rgb(247,179,0)" rx="2" ry="2" />
<text  x="481.73" y="207.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (147 samples, 0.31%)</title><rect x="667.9" y="485" width="3.6" height="15.0" fill="rgb(243,18,34)" rx="2" ry="2" />
<text  x="670.87" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="541.4" y="421" width="0.6" height="15.0" fill="rgb(239,44,7)" rx="2" ry="2" />
<text  x="544.36" y="431.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (13 samples, 0.03%)</title><rect x="1049.9" y="277" width="0.4" height="15.0" fill="rgb(222,55,39)" rx="2" ry="2" />
<text  x="1052.93" y="287.5" ></text>
</g>
<g >
<title>service::get_local_priority_manager (12 samples, 0.03%)</title><rect x="599.2" y="437" width="0.3" height="15.0" fill="rgb(214,106,23)" rx="2" ry="2" />
<text  x="602.20" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (15 samples, 0.03%)</title><rect x="90.5" y="421" width="0.4" height="15.0" fill="rgb(228,4,5)" rx="2" ry="2" />
<text  x="93.48" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (9 samples, 0.02%)</title><rect x="761.5" y="341" width="0.2" height="15.0" fill="rgb(245,147,40)" rx="2" ry="2" />
<text  x="764.46" y="351.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.03%)</title><rect x="1149.7" y="485" width="0.3" height="15.0" fill="rgb(251,91,45)" rx="2" ry="2" />
<text  x="1152.66" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (5 samples, 0.01%)</title><rect x="39.0" y="437" width="0.1" height="15.0" fill="rgb(210,25,40)" rx="2" ry="2" />
<text  x="42.00" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (23 samples, 0.05%)</title><rect x="709.8" y="389" width="0.6" height="15.0" fill="rgb(235,192,49)" rx="2" ry="2" />
<text  x="712.83" y="399.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (7 samples, 0.01%)</title><rect x="822.6" y="261" width="0.2" height="15.0" fill="rgb(245,183,5)" rx="2" ry="2" />
<text  x="825.62" y="271.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (6 samples, 0.01%)</title><rect x="210.8" y="117" width="0.2" height="15.0" fill="rgb(211,130,42)" rx="2" ry="2" />
<text  x="213.81" y="127.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="71.4" y="453" width="0.2" height="15.0" fill="rgb(239,98,49)" rx="2" ry="2" />
<text  x="74.41" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (40 samples, 0.08%)</title><rect x="777.8" y="261" width="1.0" height="15.0" fill="rgb(219,41,40)" rx="2" ry="2" />
<text  x="780.79" y="271.5" ></text>
</g>
<g >
<title>auth::data_resource_view::data_resource_view (5 samples, 0.01%)</title><rect x="812.6" y="325" width="0.1" height="15.0" fill="rgb(235,36,53)" rx="2" ry="2" />
<text  x="815.60" y="335.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::storage_proxy&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="960.6" y="389" width="0.2" height="15.0" fill="rgb(246,92,41)" rx="2" ry="2" />
<text  x="963.65" y="399.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (36 samples, 0.08%)</title><rect x="484.5" y="277" width="0.9" height="15.0" fill="rgb(254,220,26)" rx="2" ry="2" />
<text  x="487.51" y="287.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="653.7" y="469" width="0.3" height="15.0" fill="rgb(206,140,41)" rx="2" ry="2" />
<text  x="656.70" y="479.5" ></text>
</g>
<g >
<title>seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::expand (6 samples, 0.01%)</title><rect x="273.6" y="325" width="0.1" height="15.0" fill="rgb(252,167,46)" rx="2" ry="2" />
<text  x="276.59" y="335.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (624 samples, 1.32%)</title><rect x="785.4" y="229" width="15.5" height="15.0" fill="rgb(253,95,25)" rx="2" ry="2" />
<text  x="788.37" y="239.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="1104.0" y="341" width="0.2" height="15.0" fill="rgb(236,209,38)" rx="2" ry="2" />
<text  x="1106.98" y="351.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.04%)</title><rect x="551.3" y="277" width="0.5" height="15.0" fill="rgb(215,218,11)" rx="2" ry="2" />
<text  x="554.33" y="287.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (9 samples, 0.02%)</title><rect x="1144.7" y="245" width="0.2" height="15.0" fill="rgb(209,178,15)" rx="2" ry="2" />
<text  x="1147.67" y="255.5" ></text>
</g>
<g >
<title>query::result::builder::build (88 samples, 0.19%)</title><rect x="581.9" y="437" width="2.2" height="15.0" fill="rgb(211,102,2)" rx="2" ry="2" />
<text  x="584.90" y="447.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (287 samples, 0.61%)</title><rect x="15.3" y="581" width="7.2" height="15.0" fill="rgb(222,8,16)" rx="2" ry="2" />
<text  x="18.31" y="591.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::empty_destroy (12 samples, 0.03%)</title><rect x="67.6" y="373" width="0.3" height="15.0" fill="rgb(215,90,38)" rx="2" ry="2" />
<text  x="70.64" y="383.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="654.0" y="485" width="0.2" height="15.0" fill="rgb(252,11,7)" rx="2" ry="2" />
<text  x="656.98" y="495.5" ></text>
</g>
<g >
<title>operator new (90 samples, 0.19%)</title><rect x="537.7" y="341" width="2.3" height="15.0" fill="rgb(226,56,25)" rx="2" ry="2" />
<text  x="540.72" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::with_permit (651 samples, 1.38%)</title><rect x="1027.1" y="245" width="16.2" height="15.0" fill="rgb(225,134,43)" rx="2" ry="2" />
<text  x="1030.12" y="255.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment (145 samples, 0.31%)</title><rect x="499.1" y="213" width="3.6" height="15.0" fill="rgb(228,110,35)" rx="2" ry="2" />
<text  x="502.07" y="223.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::never_speculating_read_executor, true&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, seastar::lw_shared_ptr&lt;table&gt;&amp;, seastar::shared_ptr&lt;service::storage_proxy&gt;&amp;, seastar::lw_shared_ptr&lt;query::read_command&gt;&amp;, nonwrapping_interval&lt;dht::ring_position&gt;, db::consistency_level&amp;, utils::small_vector&lt;gms::inet_address, 3ul&gt;, tracing::trace_state_ptr, service_permit&gt; (416 samples, 0.88%)</title><rect x="1071.5" y="341" width="10.3" height="15.0" fill="rgb(239,63,27)" rx="2" ry="2" />
<text  x="1074.47" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="805.4" y="261" width="0.1" height="15.0" fill="rgb(240,99,44)" rx="2" ry="2" />
<text  x="808.39" y="271.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="444.8" y="261" width="0.1" height="15.0" fill="rgb(213,41,2)" rx="2" ry="2" />
<text  x="447.77" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (22 samples, 0.05%)</title><rect x="631.5" y="485" width="0.5" height="15.0" fill="rgb(224,138,52)" rx="2" ry="2" />
<text  x="634.49" y="495.5" ></text>
</g>
<g >
<title>std::function&lt;seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (7 samples, 0.01%)</title><rect x="789.2" y="213" width="0.2" height="15.0" fill="rgb(239,135,16)" rx="2" ry="2" />
<text  x="792.21" y="223.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (12 samples, 0.03%)</title><rect x="667.6" y="485" width="0.3" height="15.0" fill="rgb(247,143,39)" rx="2" ry="2" />
<text  x="670.57" y="495.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (14 samples, 0.03%)</title><rect x="209.1" y="117" width="0.3" height="15.0" fill="rgb(248,84,53)" rx="2" ry="2" />
<text  x="212.09" y="127.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::size (6 samples, 0.01%)</title><rect x="636.3" y="469" width="0.2" height="15.0" fill="rgb(237,19,1)" rx="2" ry="2" />
<text  x="639.30" y="479.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;1ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (24 samples, 0.05%)</title><rect x="814.5" y="293" width="0.6" height="15.0" fill="rgb(245,187,46)" rx="2" ry="2" />
<text  x="817.54" y="303.5" ></text>
</g>
<g >
<title>frozen_mutation::frozen_mutation (7 samples, 0.01%)</title><rect x="1144.7" y="181" width="0.1" height="15.0" fill="rgb(234,217,54)" rx="2" ry="2" />
<text  x="1147.67" y="191.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_fragment, 4ul&gt;::small_vector (17 samples, 0.04%)</title><rect x="448.2" y="277" width="0.5" height="15.0" fill="rgb(210,87,19)" rx="2" ry="2" />
<text  x="451.24" y="287.5" ></text>
</g>
<g >
<title>operator delete (61 samples, 0.13%)</title><rect x="548.0" y="325" width="1.5" height="15.0" fill="rgb(213,44,5)" rx="2" ry="2" />
<text  x="551.02" y="335.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_pausable_in_thread&lt;std::reference_wrapper&lt;flat_mutation_reader::impl::consumer_adapter&lt;sstables::sstable_writer&gt; &gt;, flat_mutation_reader::no_filter&gt; (10 samples, 0.02%)</title><rect x="22.5" y="453" width="0.3" height="15.0" fill="rgb(246,27,29)" rx="2" ry="2" />
<text  x="25.54" y="463.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (11 samples, 0.02%)</title><rect x="848.0" y="341" width="0.2" height="15.0" fill="rgb(219,70,54)" rx="2" ry="2" />
<text  x="850.95" y="351.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (198 samples, 0.42%)</title><rect x="678.8" y="469" width="5.0" height="15.0" fill="rgb(241,97,8)" rx="2" ry="2" />
<text  x="681.84" y="479.5" ></text>
</g>
<g >
<title>std::deque&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::DefaultAllocPolicy::AllocatorType&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt; &gt; &gt;::operator[] (5 samples, 0.01%)</title><rect x="18.8" y="197" width="0.1" height="15.0" fill="rgb(218,42,31)" rx="2" ry="2" />
<text  x="21.75" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::query_state&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="713.5" y="453" width="0.1" height="15.0" fill="rgb(243,56,44)" rx="2" ry="2" />
<text  x="716.47" y="463.5" ></text>
</g>
<g >
<title>operator delete (40 samples, 0.08%)</title><rect x="437.4" y="277" width="1.0" height="15.0" fill="rgb(253,90,36)" rx="2" ry="2" />
<text  x="440.42" y="287.5" ></text>
</g>
<g >
<title>read_simple&lt;long, managed_bytes_basic_view&lt; (133 samples, 0.28%)</title><rect x="375.4" y="149" width="3.3" height="15.0" fill="rgb(210,61,41)" rx="2" ry="2" />
<text  x="378.36" y="159.5" ></text>
</g>
<g >
<title>cql3::statements::modification_statement::get_mutations (20 samples, 0.04%)</title><rect x="866.1" y="389" width="0.5" height="15.0" fill="rgb(243,64,44)" rx="2" ry="2" />
<text  x="869.05" y="399.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (31 samples, 0.07%)</title><rect x="473.7" y="197" width="0.8" height="15.0" fill="rgb(254,180,29)" rx="2" ry="2" />
<text  x="476.72" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (12 samples, 0.03%)</title><rect x="817.2" y="341" width="0.3" height="15.0" fill="rgb(235,165,38)" rx="2" ry="2" />
<text  x="820.19" y="351.5" ></text>
</g>
<g >
<title>std::chrono::_V2::steady_clock::now (13 samples, 0.03%)</title><rect x="591.6" y="405" width="0.4" height="15.0" fill="rgb(214,115,40)" rx="2" ry="2" />
<text  x="594.65" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (93 samples, 0.20%)</title><rect x="719.8" y="325" width="2.4" height="15.0" fill="rgb(222,121,34)" rx="2" ry="2" />
<text  x="722.85" y="335.5" ></text>
</g>
<g >
<title>query_result_builder::consume_new_partition (5 samples, 0.01%)</title><rect x="359.4" y="213" width="0.2" height="15.0" fill="rgb(243,42,35)" rx="2" ry="2" />
<text  x="362.43" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::find (165 samples, 0.35%)</title><rect x="811.1" y="357" width="4.1" height="15.0" fill="rgb(250,172,17)" rx="2" ry="2" />
<text  x="814.13" y="367.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (6 samples, 0.01%)</title><rect x="985.8" y="341" width="0.2" height="15.0" fill="rgb(231,172,12)" rx="2" ry="2" />
<text  x="988.83" y="351.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="657.7" y="469" width="0.6" height="15.0" fill="rgb(230,183,44)" rx="2" ry="2" />
<text  x="660.69" y="479.5" ></text>
</g>
<g >
<title>sstring_hash::operator (13 samples, 0.03%)</title><rect x="826.5" y="309" width="0.3" height="15.0" fill="rgb(233,135,33)" rx="2" ry="2" />
<text  x="829.49" y="319.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::arm (7 samples, 0.01%)</title><rect x="1033.9" y="149" width="0.1" height="15.0" fill="rgb(251,113,27)" rx="2" ry="2" />
<text  x="1036.87" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (65 samples, 0.14%)</title><rect x="939.8" y="405" width="1.6" height="15.0" fill="rgb(248,49,31)" rx="2" ry="2" />
<text  x="942.78" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (21 samples, 0.04%)</title><rect x="1157.3" y="421" width="0.5" height="15.0" fill="rgb(219,120,6)" rx="2" ry="2" />
<text  x="1160.31" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (23 samples, 0.05%)</title><rect x="526.4" y="341" width="0.6" height="15.0" fill="rgb(251,147,45)" rx="2" ry="2" />
<text  x="529.45" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::vector (125 samples, 0.26%)</title><rect x="1120.7" y="389" width="3.1" height="15.0" fill="rgb(222,34,40)" rx="2" ry="2" />
<text  x="1123.66" y="399.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::modification_statement const*, service::storage_proxy&amp;, service::query_state&amp;, cql3::query_options const&amp;&gt;::do_flush (37 samples, 0.08%)</title><rect x="865.7" y="485" width="0.9" height="15.0" fill="rgb(231,204,50)" rx="2" ry="2" />
<text  x="868.65" y="495.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (1,152 samples, 2.43%)</title><rect x="1147.8" y="501" width="28.7" height="15.0" fill="rgb(239,107,42)" rx="2" ry="2" />
<text  x="1150.76" y="511.5" >se..</text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (8 samples, 0.02%)</title><rect x="989.4" y="277" width="0.2" height="15.0" fill="rgb(246,57,12)" rx="2" ry="2" />
<text  x="992.37" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::finally_body&lt;seastar::smp::submit_to&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (277 samples, 0.59%)</title><rect x="618.5" y="501" width="6.9" height="15.0" fill="rgb(254,29,33)" rx="2" ry="2" />
<text  x="621.50" y="511.5" ></text>
</g>
<g >
<title>operator new (79 samples, 0.17%)</title><rect x="1121.3" y="357" width="2.0" height="15.0" fill="rgb(228,11,21)" rx="2" ry="2" />
<text  x="1124.31" y="367.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="43.2" y="469" width="0.1" height="15.0" fill="rgb(242,126,42)" rx="2" ry="2" />
<text  x="46.19" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::partition_snapshot_flat_reader&lt;memtable&amp;&gt; (422 samples, 0.89%)</title><rect x="494.4" y="261" width="10.6" height="15.0" fill="rgb(234,32,41)" rx="2" ry="2" />
<text  x="497.44" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (71 samples, 0.15%)</title><rect x="1124.3" y="405" width="1.7" height="15.0" fill="rgb(228,181,17)" rx="2" ry="2" />
<text  x="1127.25" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (9 samples, 0.02%)</title><rect x="1141.5" y="405" width="0.3" height="15.0" fill="rgb(241,29,30)" rx="2" ry="2" />
<text  x="1144.53" y="415.5" ></text>
</g>
<g >
<title>utils::timed_rate_moving_average_and_histogram::mark&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (64 samples, 0.14%)</title><rect x="665.9" y="469" width="1.6" height="15.0" fill="rgb(232,216,9)" rx="2" ry="2" />
<text  x="668.95" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (11 samples, 0.02%)</title><rect x="1113.7" y="421" width="0.3" height="15.0" fill="rgb(209,185,53)" rx="2" ry="2" />
<text  x="1116.68" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (14 samples, 0.03%)</title><rect x="644.4" y="437" width="0.3" height="15.0" fill="rgb(232,93,0)" rx="2" ry="2" />
<text  x="647.38" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (13 samples, 0.03%)</title><rect x="1035.4" y="117" width="0.3" height="15.0" fill="rgb(246,208,20)" rx="2" ry="2" />
<text  x="1038.37" y="127.5" ></text>
</g>
<g >
<title>single_node_cql_env::execute_prepared (20 samples, 0.04%)</title><rect x="862.2" y="485" width="0.5" height="15.0" fill="rgb(206,145,18)" rx="2" ry="2" />
<text  x="865.19" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (8 samples, 0.02%)</title><rect x="684.2" y="485" width="0.2" height="15.0" fill="rgb(226,147,45)" rx="2" ry="2" />
<text  x="687.17" y="495.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (7 samples, 0.01%)</title><rect x="490.9" y="261" width="0.2" height="15.0" fill="rgb(216,128,3)" rx="2" ry="2" />
<text  x="493.92" y="271.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (18 samples, 0.04%)</title><rect x="866.1" y="325" width="0.4" height="15.0" fill="rgb(235,106,42)" rx="2" ry="2" />
<text  x="869.05" y="335.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::visit_slot&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::memory_usage&lt;row::external_memory_usage (129 samples, 0.27%)</title><rect x="200.1" y="117" width="3.2" height="15.0" fill="rgb(242,121,36)" rx="2" ry="2" />
<text  x="203.11" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (50 samples, 0.11%)</title><rect x="818.7" y="325" width="1.2" height="15.0" fill="rgb(242,62,18)" rx="2" ry="2" />
<text  x="821.66" y="335.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (9 samples, 0.02%)</title><rect x="847.3" y="325" width="0.2" height="15.0" fill="rgb(253,153,38)" rx="2" ry="2" />
<text  x="850.28" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (279 samples, 0.59%)</title><rect x="15.5" y="565" width="7.0" height="15.0" fill="rgb(235,23,0)" rx="2" ry="2" />
<text  x="18.51" y="575.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (6 samples, 0.01%)</title><rect x="964.8" y="373" width="0.2" height="15.0" fill="rgb(219,148,1)" rx="2" ry="2" />
<text  x="967.84" y="383.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (10 samples, 0.02%)</title><rect x="734.0" y="341" width="0.3" height="15.0" fill="rgb(221,31,31)" rx="2" ry="2" />
<text  x="737.04" y="351.5" ></text>
</g>
<g >
<title>gms::gossiper::is_alive (5 samples, 0.01%)</title><rect x="1099.7" y="277" width="0.2" height="15.0" fill="rgb(250,93,11)" rx="2" ry="2" />
<text  x="1102.74" y="287.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (17 samples, 0.04%)</title><rect x="621.9" y="485" width="0.5" height="15.0" fill="rgb(213,4,32)" rx="2" ry="2" />
<text  x="624.94" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;nonwrapping_interval&lt;dht::token&gt;, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; (306 samples, 0.65%)</title><rect x="1157.8" y="469" width="7.7" height="15.0" fill="rgb(217,57,45)" rx="2" ry="2" />
<text  x="1160.84" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (6 samples, 0.01%)</title><rect x="859.1" y="421" width="0.1" height="15.0" fill="rgb(223,25,0)" rx="2" ry="2" />
<text  x="862.07" y="431.5" ></text>
</g>
<g >
<title>operator new (83 samples, 0.18%)</title><rect x="1002.2" y="261" width="2.1" height="15.0" fill="rgb(243,204,31)" rx="2" ry="2" />
<text  x="1005.21" y="271.5" ></text>
</g>
<g >
<title>db::commitlog::add_entry (5 samples, 0.01%)</title><rect x="1144.0" y="309" width="0.1" height="15.0" fill="rgb(230,169,33)" rx="2" ry="2" />
<text  x="1147.02" y="319.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::leaf_node&gt; (6 samples, 0.01%)</title><rect x="190.4" y="85" width="0.2" height="15.0" fill="rgb(208,59,28)" rx="2" ry="2" />
<text  x="193.44" y="95.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%)</title><rect x="790.3" y="165" width="0.3" height="15.0" fill="rgb(241,142,32)" rx="2" ry="2" />
<text  x="793.31" y="175.5" ></text>
</g>
<g >
<title>std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;::compare (7 samples, 0.01%)</title><rect x="823.2" y="277" width="0.2" height="15.0" fill="rgb(253,116,31)" rx="2" ry="2" />
<text  x="826.24" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take_value (7 samples, 0.01%)</title><rect x="250.0" y="293" width="0.2" height="15.0" fill="rgb(229,196,32)" rx="2" ry="2" />
<text  x="253.00" y="303.5" ></text>
</g>
<g >
<title>ser::writer_of_query_result&lt;bytes_ostream&gt;::writer_of_query_result (69 samples, 0.15%)</title><rect x="588.3" y="405" width="1.8" height="15.0" fill="rgb(219,20,21)" rx="2" ry="2" />
<text  x="591.33" y="415.5" ></text>
</g>
<g >
<title>basic_atomic_cell_view&lt; (18 samples, 0.04%)</title><rect x="364.5" y="181" width="0.4" height="15.0" fill="rgb(214,156,51)" rx="2" ry="2" />
<text  x="367.46" y="191.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;service::abstract_read_executor::execute (15 samples, 0.03%)</title><rect x="680.3" y="453" width="0.3" height="15.0" fill="rgb(213,51,20)" rx="2" ry="2" />
<text  x="683.26" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (24 samples, 0.05%)</title><rect x="36.9" y="421" width="0.6" height="15.0" fill="rgb(244,89,17)" rx="2" ry="2" />
<text  x="39.88" y="431.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.05%)</title><rect x="90.3" y="437" width="0.6" height="15.0" fill="rgb(239,96,26)" rx="2" ry="2" />
<text  x="93.28" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (6 samples, 0.01%)</title><rect x="524.5" y="245" width="0.2" height="15.0" fill="rgb(247,36,49)" rx="2" ry="2" />
<text  x="527.50" y="255.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (56 samples, 0.12%)</title><rect x="508.9" y="293" width="1.4" height="15.0" fill="rgb(252,219,53)" rx="2" ry="2" />
<text  x="511.92" y="303.5" ></text>
</g>
<g >
<title>list_reader_selector::~list_reader_selector (54 samples, 0.11%)</title><rect x="564.7" y="373" width="1.3" height="15.0" fill="rgb(238,192,15)" rx="2" ry="2" />
<text  x="567.70" y="383.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (10 samples, 0.02%)</title><rect x="996.2" y="261" width="0.2" height="15.0" fill="rgb(249,85,41)" rx="2" ry="2" />
<text  x="999.18" y="271.5" ></text>
</g>
<g >
<title>seastar::reactor::service_highres_timer (16 samples, 0.03%)</title><rect x="1178.5" y="453" width="0.4" height="15.0" fill="rgb(252,162,19)" rx="2" ry="2" />
<text  x="1181.51" y="463.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="474.2" y="181" width="0.3" height="15.0" fill="rgb(254,125,23)" rx="2" ry="2" />
<text  x="477.24" y="191.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_construct&lt;interval_bound&lt;dht::ring_position&gt; const&amp;&gt; (23 samples, 0.05%)</title><rect x="1055.0" y="229" width="0.6" height="15.0" fill="rgb(209,224,0)" rx="2" ry="2" />
<text  x="1058.04" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot::get_change_mark (41 samples, 0.09%)</title><rect x="216.8" y="149" width="1.0" height="15.0" fill="rgb(240,198,0)" rx="2" ry="2" />
<text  x="219.81" y="159.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (8 samples, 0.02%)</title><rect x="660.6" y="437" width="0.2" height="15.0" fill="rgb(238,218,26)" rx="2" ry="2" />
<text  x="663.64" y="447.5" ></text>
</g>
<g >
<title>seastar::do_until&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (11 samples, 0.02%)</title><rect x="865.1" y="421" width="0.3" height="15.0" fill="rgb(249,45,50)" rx="2" ry="2" />
<text  x="868.11" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (63 samples, 0.13%)</title><rect x="492.7" y="261" width="1.5" height="15.0" fill="rgb(218,116,24)" rx="2" ry="2" />
<text  x="495.67" y="271.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (12 samples, 0.03%)</title><rect x="404.5" y="293" width="0.3" height="15.0" fill="rgb(233,5,4)" rx="2" ry="2" />
<text  x="407.48" y="303.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;compact_mutation_state&lt; (327 samples, 0.69%)</title><rect x="532.7" y="421" width="8.1" height="15.0" fill="rgb(250,167,51)" rx="2" ry="2" />
<text  x="535.66" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="407.0" y="261" width="0.1" height="15.0" fill="rgb(242,122,32)" rx="2" ry="2" />
<text  x="409.97" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::row_ranges (5 samples, 0.01%)</title><rect x="303.3" y="165" width="0.1" height="15.0" fill="rgb(222,150,48)" rx="2" ry="2" />
<text  x="306.30" y="175.5" ></text>
</g>
<g >
<title>legacy_compound_view&lt;compound_type&lt; (12 samples, 0.03%)</title><rect x="927.4" y="389" width="0.3" height="15.0" fill="rgb(213,90,38)" rx="2" ry="2" />
<text  x="930.41" y="399.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::do_wait_admission (493 samples, 1.04%)</title><rect x="1027.5" y="229" width="12.3" height="15.0" fill="rgb(224,199,50)" rx="2" ry="2" />
<text  x="1030.54" y="239.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE14then_impl_nrvoIZNS6_14discard_resultEvEUlDpOT_E_NS0_IvEEEET0_OT_ (113 samples, 0.24%)</title><rect x="707.9" y="453" width="2.8" height="15.0" fill="rgb(232,17,0)" rx="2" ry="2" />
<text  x="710.88" y="463.5" ></text>
</g>
<g >
<title>schema_registry::get_entry (19 samples, 0.04%)</title><rect x="980.5" y="357" width="0.5" height="15.0" fill="rgb(245,196,48)" rx="2" ry="2" />
<text  x="983.52" y="367.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (37 samples, 0.08%)</title><rect x="981.0" y="357" width="1.0" height="15.0" fill="rgb(219,43,35)" rx="2" ry="2" />
<text  x="984.04" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (91 samples, 0.19%)</title><rect x="668.3" y="469" width="2.3" height="15.0" fill="rgb(220,150,51)" rx="2" ry="2" />
<text  x="671.29" y="479.5" ></text>
</g>
<g >
<title>partition_snapshot::static_row (5 samples, 0.01%)</title><rect x="242.0" y="229" width="0.2" height="15.0" fill="rgb(216,206,40)" rx="2" ry="2" />
<text  x="245.05" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor::run_some_tasks (46,227 samples, 97.67%)</title><rect x="25.3" y="517" width="1152.5" height="15.0" fill="rgb(249,105,45)" rx="2" ry="2" />
<text  x="28.26" y="527.5" >seastar::reactor::run_some_tasks</text>
</g>
<g >
<title>operator new (75 samples, 0.16%)</title><rect x="1025.2" y="245" width="1.8" height="15.0" fill="rgb(227,32,15)" rx="2" ry="2" />
<text  x="1028.17" y="255.5" ></text>
</g>
<g >
<title>utils::phased_barrier::operation::~operation (7 samples, 0.01%)</title><rect x="45.2" y="485" width="0.1" height="15.0" fill="rgb(222,110,23)" rx="2" ry="2" />
<text  x="48.15" y="495.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (17 samples, 0.04%)</title><rect x="814.6" y="277" width="0.5" height="15.0" fill="rgb(240,15,14)" rx="2" ry="2" />
<text  x="817.64" y="287.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="685.2" y="485" width="0.2" height="15.0" fill="rgb(218,20,9)" rx="2" ry="2" />
<text  x="688.22" y="495.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::impl::consume&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (73 samples, 0.15%)</title><rect x="284.2" y="293" width="1.8" height="15.0" fill="rgb(228,61,4)" rx="2" ry="2" />
<text  x="287.21" y="303.5" ></text>
</g>
<g >
<title>dht::ring_position::as_decorated_key (8 samples, 0.02%)</title><rect x="425.8" y="341" width="0.2" height="15.0" fill="rgb(228,225,20)" rx="2" ry="2" />
<text  x="428.85" y="351.5" ></text>
</g>
<g >
<title>std::default_delete&lt;query::partition_slice const&gt;::operator (5 samples, 0.01%)</title><rect x="1177.3" y="453" width="0.2" height="15.0" fill="rgb(216,132,25)" rx="2" ry="2" />
<text  x="1180.33" y="463.5" ></text>
</g>
<g >
<title>table::query (35 samples, 0.07%)</title><rect x="1176.8" y="501" width="0.9" height="15.0" fill="rgb(242,70,25)" rx="2" ry="2" />
<text  x="1179.79" y="511.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::get_promise (11 samples, 0.02%)</title><rect x="748.5" y="405" width="0.3" height="15.0" fill="rgb(228,188,36)" rx="2" ry="2" />
<text  x="751.55" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::get_at (31 samples, 0.07%)</title><rect x="316.5" y="181" width="0.8" height="15.0" fill="rgb(214,137,22)" rx="2" ry="2" />
<text  x="319.52" y="191.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (14 samples, 0.03%)</title><rect x="520.6" y="309" width="0.4" height="15.0" fill="rgb(216,54,3)" rx="2" ry="2" />
<text  x="523.62" y="319.5" ></text>
</g>
<g >
<title>write_cell&lt;ser::qr_clustered_row__cells__cells&lt;bytes_ostream&gt; &gt; (6 samples, 0.01%)</title><rect x="675.2" y="261" width="0.1" height="15.0" fill="rgb(218,61,37)" rx="2" ry="2" />
<text  x="678.17" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (13 samples, 0.03%)</title><rect x="131.5" y="229" width="0.3" height="15.0" fill="rgb(205,166,25)" rx="2" ry="2" />
<text  x="134.47" y="239.5" ></text>
</g>
<g >
<title>operator new (7 samples, 0.01%)</title><rect x="831.5" y="437" width="0.2" height="15.0" fill="rgb(215,222,41)" rx="2" ry="2" />
<text  x="834.52" y="447.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (27 samples, 0.06%)</title><rect x="933.3" y="325" width="0.7" height="15.0" fill="rgb(210,180,44)" rx="2" ry="2" />
<text  x="936.30" y="335.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::read_next (2,816 samples, 5.95%)</title><rect x="152.2" y="245" width="70.2" height="15.0" fill="rgb(241,178,53)" rx="2" ry="2" />
<text  x="155.21" y="255.5" >partiti..</text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, database::query (11 samples, 0.02%)</title><rect x="675.5" y="501" width="0.3" height="15.0" fill="rgb(246,61,25)" rx="2" ry="2" />
<text  x="678.55" y="511.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (8 samples, 0.02%)</title><rect x="938.3" y="405" width="0.2" height="15.0" fill="rgb(223,87,22)" rx="2" ry="2" />
<text  x="941.33" y="415.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="856.7" y="469" width="0.2" height="15.0" fill="rgb(230,36,23)" rx="2" ry="2" />
<text  x="859.68" y="479.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="407.6" y="245" width="0.1" height="15.0" fill="rgb(246,173,34)" rx="2" ry="2" />
<text  x="410.62" y="255.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (7 samples, 0.01%)</title><rect x="762.5" y="325" width="0.2" height="15.0" fill="rgb(242,88,24)" rx="2" ry="2" />
<text  x="765.51" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::emplace_back&lt;gms::inet_address const&amp;&gt; (19 samples, 0.04%)</title><rect x="699.4" y="453" width="0.4" height="15.0" fill="rgb(251,144,17)" rx="2" ry="2" />
<text  x="702.36" y="463.5" ></text>
</g>
<g >
<title>sstring_hash::operator (31 samples, 0.07%)</title><rect x="1067.7" y="293" width="0.8" height="15.0" fill="rgb(216,112,31)" rx="2" ry="2" />
<text  x="1070.68" y="303.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::impl (22 samples, 0.05%)</title><rect x="444.4" y="277" width="0.5" height="15.0" fill="rgb(231,220,18)" rx="2" ry="2" />
<text  x="447.40" y="287.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (5 samples, 0.01%)</title><rect x="697.4" y="437" width="0.1" height="15.0" fill="rgb(244,0,36)" rx="2" ry="2" />
<text  x="700.41" y="447.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (359 samples, 0.76%)</title><rect x="264.5" y="325" width="9.0" height="15.0" fill="rgb(237,113,39)" rx="2" ry="2" />
<text  x="267.53" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt;::~_Variant_storage (5 samples, 0.01%)</title><rect x="888.6" y="309" width="0.1" height="15.0" fill="rgb(215,90,15)" rx="2" ry="2" />
<text  x="891.62" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::set_urgent_state (30 samples, 0.06%)</title><rect x="627.5" y="485" width="0.7" height="15.0" fill="rgb(248,72,18)" rx="2" ry="2" />
<text  x="630.45" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;void&gt;::set_urgent_state (18 samples, 0.04%)</title><rect x="48.3" y="485" width="0.4" height="15.0" fill="rgb(220,202,28)" rx="2" ry="2" />
<text  x="51.27" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (15 samples, 0.03%)</title><rect x="1134.1" y="373" width="0.3" height="15.0" fill="rgb(218,204,19)" rx="2" ry="2" />
<text  x="1137.05" y="383.5" ></text>
</g>
<g >
<title>schema::column_at (69 samples, 0.15%)</title><rect x="201.5" y="101" width="1.7" height="15.0" fill="rgb(249,221,28)" rx="2" ry="2" />
<text  x="204.48" y="111.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::with_reserve&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,276 samples, 9.03%)</title><rect x="136.2" y="277" width="106.6" height="15.0" fill="rgb(233,77,5)" rx="2" ry="2" />
<text  x="139.23" y="287.5" >logalloc::all..</text>
</g>
<g >
<title>seastar::memory::allocate (66 samples, 0.14%)</title><rect x="270.0" y="261" width="1.7" height="15.0" fill="rgb(220,108,0)" rx="2" ry="2" />
<text  x="273.04" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;managed_bytes const*, managed_bytes*&gt; (21 samples, 0.04%)</title><rect x="910.5" y="325" width="0.6" height="15.0" fill="rgb(233,53,19)" rx="2" ry="2" />
<text  x="913.53" y="335.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="1070.6" y="341" width="0.1" height="15.0" fill="rgb(212,193,31)" rx="2" ry="2" />
<text  x="1073.60" y="351.5" ></text>
</g>
<g >
<title>operator new (5 samples, 0.01%)</title><rect x="610.6" y="405" width="0.1" height="15.0" fill="rgb(241,132,26)" rx="2" ry="2" />
<text  x="613.62" y="415.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (22,466 samples, 47.47%)</title><rect x="52.9" y="469" width="560.2" height="15.0" fill="rgb(218,228,42)" rx="2" ry="2" />
<text  x="55.93" y="479.5" >seastar::noncopyable_function&lt;seastar::future&lt;void&gt; </text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (11 samples, 0.02%)</title><rect x="848.8" y="437" width="0.2" height="15.0" fill="rgb(247,12,48)" rx="2" ry="2" />
<text  x="851.75" y="447.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (9 samples, 0.02%)</title><rect x="907.0" y="341" width="0.2" height="15.0" fill="rgb(251,208,50)" rx="2" ry="2" />
<text  x="910.02" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (17 samples, 0.04%)</title><rect x="642.2" y="437" width="0.4" height="15.0" fill="rgb(219,133,1)" rx="2" ry="2" />
<text  x="645.19" y="447.5" ></text>
</g>
<g >
<title>compound_type&lt; (68 samples, 0.14%)</title><rect x="534.0" y="357" width="1.6" height="15.0" fill="rgb(211,193,7)" rx="2" ry="2" />
<text  x="536.95" y="367.5" ></text>
</g>
<g >
<title>table::make_reader (4,371 samples, 9.24%)</title><rect x="420.4" y="357" width="109.0" height="15.0" fill="rgb(235,91,37)" rx="2" ry="2" />
<text  x="423.44" y="367.5" >table::make_r..</text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="443.0" y="293" width="0.2" height="15.0" fill="rgb(232,203,12)" rx="2" ry="2" />
<text  x="445.98" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%)</title><rect x="847.2" y="341" width="0.5" height="15.0" fill="rgb(212,97,20)" rx="2" ry="2" />
<text  x="850.20" y="351.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::read_command&gt;::make&lt;utils::UUID const&amp;, utils::UUID, query::partition_slice, query::max_result_size, query::row_limit, query::partition_limit, std::chrono::time_point&lt;gc_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1l&gt; &gt; &gt;&amp;, std::optional&lt;tracing::trace_info&gt;, utils::UUID, seastar::bool_class&lt;query::is_first_page_tag&gt; const&amp;, long&gt; (197 samples, 0.42%)</title><rect x="1130.3" y="421" width="4.9" height="15.0" fill="rgb(241,41,32)" rx="2" ry="2" />
<text  x="1133.26" y="431.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (28 samples, 0.06%)</title><rect x="1144.2" y="437" width="0.7" height="15.0" fill="rgb(251,165,38)" rx="2" ry="2" />
<text  x="1147.20" y="447.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::lru_entry::touch (32 samples, 0.07%)</title><rect x="722.3" y="405" width="0.8" height="15.0" fill="rgb(227,13,38)" rx="2" ry="2" />
<text  x="725.32" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (12 samples, 0.03%)</title><rect x="743.2" y="405" width="0.3" height="15.0" fill="rgb(251,142,22)" rx="2" ry="2" />
<text  x="746.19" y="415.5" ></text>
</g>
<g >
<title>std::__find_if&lt;gms::inet_address*, __gnu_cxx::__ops::_Iter_pred&lt;std::unary_negate&lt;std::binder1st&lt;std::_Mem_fn&lt;bool  (59 samples, 0.12%)</title><rect x="1099.3" y="293" width="1.5" height="15.0" fill="rgb(230,174,18)" rx="2" ry="2" />
<text  x="1102.30" y="303.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_move&lt;16ul&gt; (20 samples, 0.04%)</title><rect x="1034.3" y="133" width="0.5" height="15.0" fill="rgb(228,148,9)" rx="2" ry="2" />
<text  x="1037.27" y="143.5" ></text>
</g>
<g >
<title>cql3::constants::marker::to_expression (112 samples, 0.24%)</title><rect x="886.3" y="325" width="2.8" height="15.0" fill="rgb(212,48,22)" rx="2" ry="2" />
<text  x="889.27" y="335.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (12 samples, 0.03%)</title><rect x="594.9" y="437" width="0.3" height="15.0" fill="rgb(241,176,30)" rx="2" ry="2" />
<text  x="597.94" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (68 samples, 0.14%)</title><rect x="708.7" y="405" width="1.7" height="15.0" fill="rgb(242,109,29)" rx="2" ry="2" />
<text  x="711.71" y="415.5" ></text>
</g>
<g >
<title>ser::serializer&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::write_fragmented&lt;bytes_ostream, fragment_range&lt;managed_bytes_basic_view&lt; (182 samples, 0.38%)</title><rect x="347.6" y="165" width="4.6" height="15.0" fill="rgb(233,133,43)" rx="2" ry="2" />
<text  x="350.63" y="175.5" ></text>
</g>
<g >
<title>operator new (6 samples, 0.01%)</title><rect x="151.6" y="229" width="0.1" height="15.0" fill="rgb(226,21,51)" rx="2" ry="2" />
<text  x="154.57" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;service::digest_read_resolver, false&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, db::consistency_level&amp;, unsigned long&amp;, unsigned long, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;&amp;&gt; (262 samples, 0.55%)</title><rect x="991.0" y="341" width="6.6" height="15.0" fill="rgb(216,68,41)" rx="2" ry="2" />
<text  x="994.04" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;, service::storage_proxy::mutate_prepare&lt;boost::iterator_range&lt;__gnu_cxx::__normal_iterator&lt;mutation*, std::vector&lt;mutation, std::allocator&lt;mutation&gt; &gt; &gt; &gt;&amp;&gt; (10 samples, 0.02%)</title><rect x="1144.6" y="261" width="0.3" height="15.0" fill="rgb(239,110,17)" rx="2" ry="2" />
<text  x="1147.65" y="271.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry&gt;::operator= (6 samples, 0.01%)</title><rect x="732.2" y="373" width="0.2" height="15.0" fill="rgb(251,59,13)" rx="2" ry="2" />
<text  x="735.22" y="383.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::digest_read_resolver&gt;::~shared_ptr (8 samples, 0.02%)</title><rect x="1147.1" y="501" width="0.2" height="15.0" fill="rgb(225,205,12)" rx="2" ry="2" />
<text  x="1150.12" y="511.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (6 samples, 0.01%)</title><rect x="520.1" y="277" width="0.1" height="15.0" fill="rgb(241,183,9)" rx="2" ry="2" />
<text  x="523.07" y="287.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (10 samples, 0.02%)</title><rect x="320.5" y="165" width="0.3" height="15.0" fill="rgb(241,18,52)" rx="2" ry="2" />
<text  x="323.51" y="175.5" ></text>
</g>
<g >
<title>row::row (1,343 samples, 2.84%)</title><rect x="162.5" y="149" width="33.5" height="15.0" fill="rgb(208,187,48)" rx="2" ry="2" />
<text  x="165.51" y="159.5" >ro..</text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::_Move_ctor_base (9 samples, 0.02%)</title><rect x="301.0" y="165" width="0.3" height="15.0" fill="rgb(211,65,38)" rx="2" ry="2" />
<text  x="304.04" y="175.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::query_processor::process_authorized_statement (124 samples, 0.26%)</title><rect x="629.2" y="501" width="3.1" height="15.0" fill="rgb(220,80,16)" rx="2" ry="2" />
<text  x="632.17" y="511.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::close (6 samples, 0.01%)</title><rect x="574.5" y="405" width="0.2" height="15.0" fill="rgb(241,192,19)" rx="2" ry="2" />
<text  x="577.54" y="415.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::enqueue_waiter (404 samples, 0.85%)</title><rect x="1028.3" y="213" width="10.0" height="15.0" fill="rgb(251,165,26)" rx="2" ry="2" />
<text  x="1031.26" y="223.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (18 samples, 0.04%)</title><rect x="1117.9" y="357" width="0.4" height="15.0" fill="rgb(240,121,8)" rx="2" ry="2" />
<text  x="1120.87" y="367.5" ></text>
</g>
<g >
<title>std::push_heap&lt;mutation_reader_merger::reader_and_fragment*, mutation_reader_merger::reader_heap_compare&gt; (70 samples, 0.15%)</title><rect x="130.0" y="245" width="1.8" height="15.0" fill="rgb(231,181,1)" rx="2" ry="2" />
<text  x="133.05" y="255.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;service::abstract_read_executor&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="990.2" y="341" width="0.2" height="15.0" fill="rgb(253,133,28)" rx="2" ry="2" />
<text  x="993.17" y="351.5" ></text>
</g>
<g >
<title>cql3::query_processor::execute_prepared (4,322 samples, 9.13%)</title><rect x="723.4" y="437" width="107.8" height="15.0" fill="rgb(213,161,16)" rx="2" ry="2" />
<text  x="726.44" y="447.5" >cql3::query_p..</text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (19 samples, 0.04%)</title><rect x="624.9" y="469" width="0.5" height="15.0" fill="rgb(253,103,19)" rx="2" ry="2" />
<text  x="627.88" y="479.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::constant (10 samples, 0.02%)</title><rect x="19.6" y="277" width="0.2" height="15.0" fill="rgb(238,38,30)" rx="2" ry="2" />
<text  x="22.60" y="287.5" ></text>
</g>
<g >
<title>operator new (34 samples, 0.07%)</title><rect x="904.3" y="293" width="0.8" height="15.0" fill="rgb(215,83,51)" rx="2" ry="2" />
<text  x="907.30" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (19 samples, 0.04%)</title><rect x="755.3" y="309" width="0.4" height="15.0" fill="rgb(207,23,28)" rx="2" ry="2" />
<text  x="758.25" y="319.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::mark (5 samples, 0.01%)</title><rect x="592.0" y="405" width="0.1" height="15.0" fill="rgb(228,21,27)" rx="2" ry="2" />
<text  x="594.97" y="415.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="50.5" y="469" width="0.5" height="15.0" fill="rgb(246,6,37)" rx="2" ry="2" />
<text  x="53.47" y="479.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="803.9" y="245" width="0.2" height="15.0" fill="rgb(242,134,11)" rx="2" ry="2" />
<text  x="806.95" y="255.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, enum_set&lt;super_enum&lt;auth::permission,  (5 samples, 0.01%)</title><rect x="22.2" y="309" width="0.2" height="15.0" fill="rgb(231,148,46)" rx="2" ry="2" />
<text  x="25.24" y="319.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::getToken (5 samples, 0.01%)</title><rect x="18.8" y="229" width="0.1" height="15.0" fill="rgb(217,142,4)" rx="2" ry="2" />
<text  x="21.75" y="239.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="1128.6" y="405" width="0.3" height="15.0" fill="rgb(227,106,18)" rx="2" ry="2" />
<text  x="1131.57" y="415.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;cql3::expr::binary_operator const*, overloaded_functor&lt;cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%)</title><rect x="950.5" y="389" width="0.1" height="15.0" fill="rgb(241,137,33)" rx="2" ry="2" />
<text  x="953.50" y="399.5" ></text>
</g>
<g >
<title>visit&lt;(anonymous namespace)::validate_visitor&lt;managed_bytes_basic_view&lt; (11 samples, 0.02%)</title><rect x="891.0" y="261" width="0.3" height="15.0" fill="rgb(206,29,12)" rx="2" ry="2" />
<text  x="894.01" y="271.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (5 samples, 0.01%)</title><rect x="1092.2" y="277" width="0.2" height="15.0" fill="rgb(222,127,2)" rx="2" ry="2" />
<text  x="1095.24" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (8 samples, 0.02%)</title><rect x="289.9" y="245" width="0.2" height="15.0" fill="rgb(227,92,35)" rx="2" ry="2" />
<text  x="292.92" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (8 samples, 0.02%)</title><rect x="1062.6" y="325" width="0.2" height="15.0" fill="rgb(225,182,37)" rx="2" ry="2" />
<text  x="1065.65" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt;, true&gt;::at (8 samples, 0.02%)</title><rect x="1103.4" y="341" width="0.2" height="15.0" fill="rgb(234,54,39)" rx="2" ry="2" />
<text  x="1106.36" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (5 samples, 0.01%)</title><rect x="703.2" y="501" width="0.1" height="15.0" fill="rgb(214,12,41)" rx="2" ry="2" />
<text  x="706.20" y="511.5" ></text>
</g>
<g >
<title>ser::qr_partition__rows&lt;bytes_ostream&gt;::add (7 samples, 0.01%)</title><rect x="358.8" y="197" width="0.2" height="15.0" fill="rgb(242,78,26)" rx="2" ry="2" />
<text  x="361.78" y="207.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (387 samples, 0.82%)</title><rect x="61.8" y="437" width="9.6" height="15.0" fill="rgb(231,7,22)" rx="2" ry="2" />
<text  x="64.76" y="447.5" ></text>
</g>
<g >
<title>intrusive_b::tree&lt;rows_entry, &amp;rows_entry::_link, rows_entry::tri_compare, 12ul, 20ul,  (23 samples, 0.05%)</title><rect x="212.1" y="165" width="0.6" height="15.0" fill="rgb(219,215,35)" rx="2" ry="2" />
<text  x="215.13" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_insert_unique_node (102 samples, 0.22%)</title><rect x="1159.2" y="453" width="2.5" height="15.0" fill="rgb(239,87,45)" rx="2" ry="2" />
<text  x="1162.16" y="463.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Variant_storage&lt;false, query::noop_hasher, md5_hasher, xx_hasher, legacy_xx_hasher_without_null_digest&gt;::~_Variant_storage (17 samples, 0.04%)</title><rect x="306.8" y="181" width="0.4" height="15.0" fill="rgb(238,121,8)" rx="2" ry="2" />
<text  x="309.80" y="191.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (13 samples, 0.03%)</title><rect x="23.3" y="517" width="0.3" height="15.0" fill="rgb(218,40,15)" rx="2" ry="2" />
<text  x="26.31" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (10 samples, 0.02%)</title><rect x="1126.3" y="405" width="0.3" height="15.0" fill="rgb(227,229,11)" rx="2" ry="2" />
<text  x="1129.32" y="415.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (8 samples, 0.02%)</title><rect x="278.0" y="389" width="0.2" height="15.0" fill="rgb(216,70,26)" rx="2" ry="2" />
<text  x="281.02" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (25 samples, 0.05%)</title><rect x="1051.1" y="261" width="0.6" height="15.0" fill="rgb(236,228,54)" rx="2" ry="2" />
<text  x="1054.08" y="271.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (6 samples, 0.01%)</title><rect x="621.5" y="469" width="0.1" height="15.0" fill="rgb(254,163,10)" rx="2" ry="2" />
<text  x="624.49" y="479.5" ></text>
</g>
<g >
<title>boost::any::holder&lt;seastar::lw_shared_ptr&lt;memtable&gt; &gt;::clone (41 samples, 0.09%)</title><rect x="484.4" y="309" width="1.0" height="15.0" fill="rgb(240,165,19)" rx="2" ry="2" />
<text  x="487.39" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (5 samples, 0.01%)</title><rect x="1125.5" y="389" width="0.1" height="15.0" fill="rgb(221,150,21)" rx="2" ry="2" />
<text  x="1128.50" y="399.5" ></text>
</g>
<g >
<title>service::storage_proxy::query_singular (5,611 samples, 11.86%)</title><rect x="967.9" y="373" width="139.9" height="15.0" fill="rgb(251,65,49)" rx="2" ry="2" />
<text  x="970.93" y="383.5" >service::storage_..</text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (5 samples, 0.01%)</title><rect x="993.7" y="293" width="0.2" height="15.0" fill="rgb(243,153,30)" rx="2" ry="2" />
<text  x="996.73" y="303.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (51 samples, 0.11%)</title><rect x="272.2" y="309" width="1.3" height="15.0" fill="rgb(251,47,32)" rx="2" ry="2" />
<text  x="275.21" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (23 samples, 0.05%)</title><rect x="909.9" y="309" width="0.6" height="15.0" fill="rgb(251,103,2)" rx="2" ry="2" />
<text  x="912.93" y="319.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::~partition_snapshot_flat_reader (473 samples, 1.00%)</title><rect x="549.5" y="325" width="11.8" height="15.0" fill="rgb(250,127,8)" rx="2" ry="2" />
<text  x="552.54" y="335.5" ></text>
</g>
<g >
<title>antlr3::IntStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt;, antlr3::InputStream&lt;antlr3::TraitsBase&lt;antlr3::CustomTraitsBase&gt; &gt; &gt;::_LA (12 samples, 0.03%)</title><rect x="16.9" y="245" width="0.3" height="15.0" fill="rgb(230,106,21)" rx="2" ry="2" />
<text  x="19.91" y="255.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (57 samples, 0.12%)</title><rect x="216.4" y="165" width="1.4" height="15.0" fill="rgb(233,23,25)" rx="2" ry="2" />
<text  x="219.42" y="175.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (11 samples, 0.02%)</title><rect x="304.5" y="165" width="0.3" height="15.0" fill="rgb(253,159,43)" rx="2" ry="2" />
<text  x="307.50" y="175.5" ></text>
</g>
<g >
<title>list_reader_selector::list_reader_selector (14 samples, 0.03%)</title><rect x="428.2" y="325" width="0.3" height="15.0" fill="rgb(242,214,6)" rx="2" ry="2" />
<text  x="431.19" y="335.5" ></text>
</g>
<g >
<title>antlr3::TokenSource&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::nextTokenStr (52 samples, 0.11%)</title><rect x="16.4" y="277" width="1.3" height="15.0" fill="rgb(216,83,52)" rx="2" ry="2" />
<text  x="19.41" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, cql3::statements::select_statement::execute (829 samples, 1.75%)</title><rect x="632.3" y="501" width="20.6" height="15.0" fill="rgb(223,177,28)" rx="2" ry="2" />
<text  x="635.26" y="511.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;void  (37 samples, 0.08%)</title><rect x="307.2" y="181" width="0.9" height="15.0" fill="rgb(222,211,53)" rx="2" ry="2" />
<text  x="310.22" y="191.5" ></text>
</g>
<g >
<title>query::querier_base::close (1,285 samples, 2.72%)</title><rect x="542.7" y="437" width="32.0" height="15.0" fill="rgb(248,76,0)" rx="2" ry="2" />
<text  x="545.71" y="447.5" >qu..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (8 samples, 0.02%)</title><rect x="755.8" y="309" width="0.2" height="15.0" fill="rgb(216,34,26)" rx="2" ry="2" />
<text  x="758.83" y="319.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (6 samples, 0.01%)</title><rect x="547.1" y="309" width="0.2" height="15.0" fill="rgb(207,179,3)" rx="2" ry="2" />
<text  x="550.12" y="319.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (6 samples, 0.01%)</title><rect x="1151.6" y="469" width="0.2" height="15.0" fill="rgb(250,220,44)" rx="2" ry="2" />
<text  x="1154.60" y="479.5" ></text>
</g>
<g >
<title>seastar::internal::repeater&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (22 samples, 0.05%)</title><rect x="864.9" y="501" width="0.6" height="15.0" fill="rgb(234,179,49)" rx="2" ry="2" />
<text  x="867.91" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (9 samples, 0.02%)</title><rect x="908.5" y="341" width="0.2" height="15.0" fill="rgb(206,98,17)" rx="2" ry="2" />
<text  x="911.49" y="351.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (41 samples, 0.09%)</title><rect x="1150.7" y="485" width="1.1" height="15.0" fill="rgb(244,85,23)" rx="2" ry="2" />
<text  x="1153.73" y="495.5" ></text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (11 samples, 0.02%)</title><rect x="322.6" y="181" width="0.3" height="15.0" fill="rgb(225,191,19)" rx="2" ry="2" />
<text  x="325.58" y="191.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (18 samples, 0.04%)</title><rect x="799.0" y="85" width="0.4" height="15.0" fill="rgb(209,185,47)" rx="2" ry="2" />
<text  x="801.99" y="95.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="1051.6" y="229" width="0.1" height="15.0" fill="rgb(226,186,12)" rx="2" ry="2" />
<text  x="1054.55" y="239.5" ></text>
</g>
<g >
<title>operator new (51 samples, 0.11%)</title><rect x="1162.0" y="437" width="1.2" height="15.0" fill="rgb(214,193,13)" rx="2" ry="2" />
<text  x="1164.95" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::maybe_refresh_state (6 samples, 0.01%)</title><rect x="158.3" y="197" width="0.2" height="15.0" fill="rgb(205,84,35)" rx="2" ry="2" />
<text  x="161.35" y="207.5" ></text>
</g>
<g >
<title>posix_memalign (35 samples, 0.07%)</title><rect x="191.0" y="85" width="0.8" height="15.0" fill="rgb(253,174,15)" rx="2" ry="2" />
<text  x="193.96" y="95.5" ></text>
</g>
<g >
<title>utils::tuple_hash::hash_impl&lt;2ul, auth::resource_kind, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::optional&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;::operator (40 samples, 0.08%)</title><rect x="814.1" y="309" width="1.0" height="15.0" fill="rgb(236,65,7)" rx="2" ry="2" />
<text  x="817.14" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::clear (7 samples, 0.01%)</title><rect x="620.1" y="485" width="0.1" height="15.0" fill="rgb(214,197,54)" rx="2" ry="2" />
<text  x="623.07" y="495.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (7 samples, 0.01%)</title><rect x="561.0" y="309" width="0.2" height="15.0" fill="rgb(231,82,24)" rx="2" ry="2" />
<text  x="564.01" y="319.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::EqualElement&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt;&amp;&gt; (24 samples, 0.05%)</title><rect x="825.7" y="309" width="0.6" height="15.0" fill="rgb(249,105,34)" rx="2" ry="2" />
<text  x="828.74" y="319.5" ></text>
</g>
<g >
<title>mutation_fragment_merger&lt;mutation_reader_merger&gt;::fetch (7 samples, 0.01%)</title><rect x="110.4" y="357" width="0.2" height="15.0" fill="rgb(240,172,49)" rx="2" ry="2" />
<text  x="113.40" y="367.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (9 samples, 0.02%)</title><rect x="69.3" y="389" width="0.2" height="15.0" fill="rgb(214,115,25)" rx="2" ry="2" />
<text  x="72.31" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (6 samples, 0.01%)</title><rect x="1142.7" y="437" width="0.2" height="15.0" fill="rgb(252,18,36)" rx="2" ry="2" />
<text  x="1145.73" y="447.5" ></text>
</g>
<g >
<title>posix_memalign (151 samples, 0.32%)</title><rect x="183.3" y="53" width="3.7" height="15.0" fill="rgb(235,201,7)" rx="2" ry="2" />
<text  x="186.26" y="63.5" ></text>
</g>
<g >
<title>service::storage_proxy::send_to_live_endpoints (10 samples, 0.02%)</title><rect x="1144.4" y="261" width="0.2" height="15.0" fill="rgb(243,125,52)" rx="2" ry="2" />
<text  x="1147.37" y="271.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::get_promise (6 samples, 0.01%)</title><rect x="1017.9" y="277" width="0.2" height="15.0" fill="rgb(218,178,24)" rx="2" ry="2" />
<text  x="1020.94" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (9 samples, 0.02%)</title><rect x="814.3" y="277" width="0.2" height="15.0" fill="rgb(242,57,45)" rx="2" ry="2" />
<text  x="817.27" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_base::_M_hook (32 samples, 0.07%)</title><rect x="436.5" y="261" width="0.8" height="15.0" fill="rgb(245,144,7)" rx="2" ry="2" />
<text  x="439.47" y="271.5" ></text>
</g>
<g >
<title>compact_mutation_state&lt; (58 samples, 0.12%)</title><rect x="284.6" y="277" width="1.4" height="15.0" fill="rgb(222,192,11)" rx="2" ry="2" />
<text  x="287.56" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (6 samples, 0.01%)</title><rect x="792.7" y="117" width="0.2" height="15.0" fill="rgb(249,62,33)" rx="2" ry="2" />
<text  x="795.73" y="127.5" ></text>
</g>
<g >
<title>operator new (48 samples, 0.10%)</title><rect x="435.1" y="245" width="1.2" height="15.0" fill="rgb(231,141,36)" rx="2" ry="2" />
<text  x="438.15" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::take (6 samples, 0.01%)</title><rect x="691.5" y="437" width="0.2" height="15.0" fill="rgb(224,220,39)" rx="2" ry="2" />
<text  x="694.53" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::clear (25 samples, 0.05%)</title><rect x="647.0" y="485" width="0.6" height="15.0" fill="rgb(208,46,12)" rx="2" ry="2" />
<text  x="650.00" y="495.5" ></text>
</g>
<g >
<title>service::abstract_read_executor::execute (2,991 samples, 6.32%)</title><rect x="984.1" y="357" width="74.6" height="15.0" fill="rgb(230,28,17)" rx="2" ry="2" />
<text  x="987.13" y="367.5" >service:..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="541.2" y="421" width="0.2" height="15.0" fill="rgb(254,102,41)" rx="2" ry="2" />
<text  x="544.23" y="431.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (9 samples, 0.02%)</title><rect x="547.3" y="309" width="0.2" height="15.0" fill="rgb(224,24,0)" rx="2" ry="2" />
<text  x="550.27" y="319.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (13 samples, 0.03%)</title><rect x="765.4" y="357" width="0.3" height="15.0" fill="rgb(229,17,42)" rx="2" ry="2" />
<text  x="768.35" y="367.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="580.8" y="373" width="0.1" height="15.0" fill="rgb(208,50,30)" rx="2" ry="2" />
<text  x="583.75" y="383.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::~_Deque_base (8 samples, 0.02%)</title><rect x="604.4" y="405" width="0.2" height="15.0" fill="rgb(229,6,39)" rx="2" ry="2" />
<text  x="607.44" y="415.5" ></text>
</g>
<g >
<title>table::add_coordinator_read_latency (5 samples, 0.01%)</title><rect x="1165.8" y="469" width="0.1" height="15.0" fill="rgb(228,124,32)" rx="2" ry="2" />
<text  x="1168.77" y="479.5" ></text>
</g>
<g >
<title>row::external_memory_usage (11 samples, 0.02%)</title><rect x="205.9" y="165" width="0.3" height="15.0" fill="rgb(247,33,0)" rx="2" ry="2" />
<text  x="208.92" y="175.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position*, std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt; &gt;, __gnu_cxx::__ops::_Iter_comp_iter&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::heap_compare&gt; &gt; (7 samples, 0.01%)</title><rect x="211.2" y="149" width="0.1" height="15.0" fill="rgb(252,144,42)" rx="2" ry="2" />
<text  x="214.15" y="159.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (25 samples, 0.05%)</title><rect x="301.3" y="165" width="0.6" height="15.0" fill="rgb(210,134,28)" rx="2" ry="2" />
<text  x="304.26" y="175.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::schedule&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (105 samples, 0.22%)</title><rect x="987.0" y="309" width="2.6" height="15.0" fill="rgb(222,93,50)" rx="2" ry="2" />
<text  x="990.00" y="319.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::promise_base (7 samples, 0.01%)</title><rect x="833.7" y="357" width="0.1" height="15.0" fill="rgb(246,92,16)" rx="2" ry="2" />
<text  x="836.67" y="367.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (16 samples, 0.03%)</title><rect x="843.6" y="421" width="0.4" height="15.0" fill="rgb(249,208,22)" rx="2" ry="2" />
<text  x="846.56" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;::operator== (14 samples, 0.03%)</title><rect x="736.4" y="293" width="0.3" height="15.0" fill="rgb(213,216,16)" rx="2" ry="2" />
<text  x="739.38" y="303.5" ></text>
</g>
<g >
<title>database::query (993 samples, 2.10%)</title><rect x="1019.4" y="261" width="24.7" height="15.0" fill="rgb(246,39,7)" rx="2" ry="2" />
<text  x="1022.36" y="271.5" >d..</text>
</g>
<g >
<title>partition_snapshot::versions (7 samples, 0.01%)</title><rect x="227.2" y="213" width="0.2" height="15.0" fill="rgb(244,195,29)" rx="2" ry="2" />
<text  x="230.21" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::stats (29 samples, 0.06%)</title><rect x="521.9" y="293" width="0.8" height="15.0" fill="rgb(214,116,45)" rx="2" ry="2" />
<text  x="524.94" y="303.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (39 samples, 0.08%)</title><rect x="919.3" y="341" width="1.0" height="15.0" fill="rgb(214,12,50)" rx="2" ry="2" />
<text  x="922.31" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (8 samples, 0.02%)</title><rect x="560.4" y="293" width="0.2" height="15.0" fill="rgb(235,214,13)" rx="2" ry="2" />
<text  x="563.36" y="303.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_M_copy_assign (8 samples, 0.02%)</title><rect x="805.3" y="277" width="0.2" height="15.0" fill="rgb(251,51,1)" rx="2" ry="2" />
<text  x="808.32" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::future&lt;void&gt;  (27 samples, 0.06%)</title><rect x="1144.2" y="357" width="0.7" height="15.0" fill="rgb(239,95,39)" rx="2" ry="2" />
<text  x="1147.22" y="367.5" ></text>
</g>
<g >
<title>nonwrapping_interval&lt;dht::ring_position&gt;::nonwrapping_interval (5 samples, 0.01%)</title><rect x="930.5" y="389" width="0.2" height="15.0" fill="rgb(221,95,17)" rx="2" ry="2" />
<text  x="933.53" y="399.5" ></text>
</g>
<g >
<title>sstring_hash::operator (15 samples, 0.03%)</title><rect x="847.9" y="357" width="0.4" height="15.0" fill="rgb(215,204,50)" rx="2" ry="2" />
<text  x="850.90" y="367.5" ></text>
</g>
<g >
<title>freeze (8 samples, 0.02%)</title><rect x="1144.7" y="197" width="0.2" height="15.0" fill="rgb(209,81,1)" rx="2" ry="2" />
<text  x="1147.67" y="207.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;, seastar::future&lt;service::storage_proxy_coordinator_query_result&gt;::finally_body&lt;service::storage_proxy::do_query (466 samples, 0.98%)</title><rect x="663.2" y="501" width="11.6" height="15.0" fill="rgb(248,106,7)" rx="2" ry="2" />
<text  x="666.18" y="511.5" ></text>
</g>
<g >
<title>db::assure_sufficient_live_nodes&lt;utils::small_vector&lt;gms::inet_address, 3ul&gt;, std::array&lt;gms::inet_address, 0ul&gt; &gt; (5 samples, 0.01%)</title><rect x="972.0" y="357" width="0.1" height="15.0" fill="rgb(206,92,13)" rx="2" ry="2" />
<text  x="975.02" y="367.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::~vector (14 samples, 0.03%)</title><rect x="529.0" y="341" width="0.3" height="15.0" fill="rgb(248,126,52)" rx="2" ry="2" />
<text  x="531.99" y="351.5" ></text>
</g>
<g >
<title>seastar::internal::lw_shared_ptr_accessors_esft&lt;partition_snapshot&gt;::dispose (32 samples, 0.07%)</title><rect x="557.7" y="277" width="0.8" height="15.0" fill="rgb(222,174,42)" rx="2" ry="2" />
<text  x="560.66" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;nonwrapping_interval&lt;dht::ring_position&gt; const*, nonwrapping_interval&lt;dht::ring_position&gt;*&gt; (33 samples, 0.07%)</title><rect x="1054.8" y="245" width="0.8" height="15.0" fill="rgb(214,99,34)" rx="2" ry="2" />
<text  x="1057.79" y="255.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (7 samples, 0.01%)</title><rect x="482.7" y="325" width="0.2" height="15.0" fill="rgb(252,147,32)" rx="2" ry="2" />
<text  x="485.72" y="335.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::small_vector (39 samples, 0.08%)</title><rect x="761.7" y="341" width="1.0" height="15.0" fill="rgb(245,173,35)" rx="2" ry="2" />
<text  x="764.71" y="351.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;auth::resource, auth::resource, std::allocator&lt;auth::resource&gt;, std::__detail::_Identity, std::equal_to&lt;auth::resource&gt;, std::hash&lt;auth::resource&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, true, true&gt; &gt;::_M_find_before_node (7 samples, 0.01%)</title><rect x="812.3" y="341" width="0.2" height="15.0" fill="rgb(228,212,46)" rx="2" ry="2" />
<text  x="815.32" y="351.5" ></text>
</g>
<g >
<title>boost::intrusive::bstbase&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (16 samples, 0.03%)</title><rect x="549.9" y="309" width="0.4" height="15.0" fill="rgb(250,147,40)" rx="2" ry="2" />
<text  x="552.94" y="319.5" ></text>
</g>
<g >
<title>mutation_querier::prepare_writers (42 samples, 0.09%)</title><rect x="357.4" y="197" width="1.0" height="15.0" fill="rgb(251,221,22)" rx="2" ry="2" />
<text  x="360.38" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (10 samples, 0.02%)</title><rect x="613.1" y="469" width="0.2" height="15.0" fill="rgb(234,46,6)" rx="2" ry="2" />
<text  x="616.06" y="479.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::get_timeout (11 samples, 0.02%)</title><rect x="955.0" y="405" width="0.3" height="15.0" fill="rgb(208,86,36)" rx="2" ry="2" />
<text  x="958.01" y="415.5" ></text>
</g>
<g >
<title>service::client_state::ensure_has_permission (1,665 samples, 3.52%)</title><rect x="769.3" y="357" width="41.5" height="15.0" fill="rgb(227,148,34)" rx="2" ry="2" />
<text  x="772.32" y="367.5" >ser..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (13 samples, 0.03%)</title><rect x="580.9" y="373" width="0.3" height="15.0" fill="rgb(250,20,0)" rx="2" ry="2" />
<text  x="583.90" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (8 samples, 0.02%)</title><rect x="898.2" y="277" width="0.2" height="15.0" fill="rgb(217,220,26)" rx="2" ry="2" />
<text  x="901.19" y="287.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::clear (18 samples, 0.04%)</title><rect x="800.5" y="197" width="0.4" height="15.0" fill="rgb(209,12,39)" rx="2" ry="2" />
<text  x="803.48" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, true&gt; &gt; &gt;::_M_deallocate_nodes (6 samples, 0.01%)</title><rect x="1113.0" y="373" width="0.1" height="15.0" fill="rgb(226,98,43)" rx="2" ry="2" />
<text  x="1115.98" y="383.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (19 samples, 0.04%)</title><rect x="550.7" y="293" width="0.5" height="15.0" fill="rgb(230,199,20)" rx="2" ry="2" />
<text  x="553.68" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::vector (6 samples, 0.01%)</title><rect x="912.1" y="373" width="0.2" height="15.0" fill="rgb(211,126,46)" rx="2" ry="2" />
<text  x="915.13" y="383.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="395.8" y="181" width="0.1" height="15.0" fill="rgb(214,139,10)" rx="2" ry="2" />
<text  x="398.78" y="191.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (90 samples, 0.19%)</title><rect x="187.4" y="117" width="2.2" height="15.0" fill="rgb(210,100,0)" rx="2" ry="2" />
<text  x="190.39" y="127.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (42 samples, 0.09%)</title><rect x="1108.1" y="357" width="1.1" height="15.0" fill="rgb(224,165,30)" rx="2" ry="2" />
<text  x="1111.15" y="367.5" ></text>
</g>
<g >
<title>std::type_info::operator== (10 samples, 0.02%)</title><rect x="691.8" y="437" width="0.3" height="15.0" fill="rgb(225,0,14)" rx="2" ry="2" />
<text  x="694.83" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="1129.6" y="405" width="0.1" height="15.0" fill="rgb(227,46,53)" rx="2" ry="2" />
<text  x="1132.56" y="415.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (8 samples, 0.02%)</title><rect x="1068.5" y="293" width="0.2" height="15.0" fill="rgb(253,147,38)" rx="2" ry="2" />
<text  x="1071.45" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;column_definition, std::allocator&lt;column_definition&gt; &gt;::_M_range_check (5 samples, 0.01%)</title><rect x="203.2" y="101" width="0.1" height="15.0" fill="rgb(209,183,12)" rx="2" ry="2" />
<text  x="206.20" y="111.5" ></text>
</g>
<g >
<title>absl::container_internal::DecomposePair&lt;absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;, utils::UUID&gt;, utils::tuple_hash, string_pair_eq, std::allocator&lt;std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt; &gt; &gt;::EqualElement&lt;std::pair&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; &gt;, std::pair&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt; const, utils::UUID&gt;&amp;&gt; (75 samples, 0.16%)</title><rect x="754.3" y="341" width="1.9" height="15.0" fill="rgb(226,123,29)" rx="2" ry="2" />
<text  x="757.33" y="351.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (34 samples, 0.07%)</title><rect x="742.2" y="405" width="0.9" height="15.0" fill="rgb(225,24,47)" rx="2" ry="2" />
<text  x="745.21" y="415.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;partition_snapshot&gt;::make&lt;seastar::lw_shared_ptr&lt;schema const&gt;&amp;, logalloc::region&amp;, mutation_cleaner&amp;, partition_entry*, cache_tracker*&amp;, unsigned long&amp;&gt; (9 samples, 0.02%)</title><rect x="510.3" y="309" width="0.2" height="15.0" fill="rgb(248,206,41)" rx="2" ry="2" />
<text  x="513.32" y="319.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_read_executor (1,817 samples, 3.84%)</title><rect x="1058.9" y="357" width="45.3" height="15.0" fill="rgb(231,174,51)" rx="2" ry="2" />
<text  x="1061.86" y="367.5" >serv..</text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="581.7" y="389" width="0.2" height="15.0" fill="rgb(246,225,24)" rx="2" ry="2" />
<text  x="584.75" y="399.5" ></text>
</g>
<g >
<title>flat_mutation_reader::peek (5 samples, 0.01%)</title><rect x="106.3" y="389" width="0.2" height="15.0" fill="rgb(228,137,17)" rx="2" ry="2" />
<text  x="109.34" y="399.5" ></text>
</g>
<g >
<title>TLS init function for bound_view::_empty_prefix (9 samples, 0.02%)</title><rect x="232.5" y="165" width="0.2" height="15.0" fill="rgb(250,227,21)" rx="2" ry="2" />
<text  x="235.50" y="175.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (6 samples, 0.01%)</title><rect x="866.3" y="293" width="0.1" height="15.0" fill="rgb(209,92,19)" rx="2" ry="2" />
<text  x="869.25" y="303.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::bool_class&lt;seastar::stop_iteration_tag&gt; &gt;::take (6 samples, 0.01%)</title><rect x="403.3" y="277" width="0.1" height="15.0" fill="rgb(254,39,28)" rx="2" ry="2" />
<text  x="406.28" y="287.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (548 samples, 1.16%)</title><rect x="224.6" y="261" width="13.7" height="15.0" fill="rgb(231,13,16)" rx="2" ry="2" />
<text  x="227.62" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (5 samples, 0.01%)</title><rect x="152.1" y="229" width="0.1" height="15.0" fill="rgb(228,49,16)" rx="2" ry="2" />
<text  x="155.09" y="239.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_reader_merger::operator (44 samples, 0.09%)</title><rect x="254.4" y="325" width="1.1" height="15.0" fill="rgb(224,195,33)" rx="2" ry="2" />
<text  x="257.41" y="335.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::clear (82 samples, 0.17%)</title><rect x="359.6" y="213" width="2.0" height="15.0" fill="rgb(213,9,33)" rx="2" ry="2" />
<text  x="362.55" y="223.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::future (8 samples, 0.02%)</title><rect x="986.3" y="341" width="0.2" height="15.0" fill="rgb(237,19,27)" rx="2" ry="2" />
<text  x="989.33" y="351.5" ></text>
</g>
<g >
<title>service::storage_proxy::get_live_endpoints (9 samples, 0.02%)</title><rect x="1081.9" y="341" width="0.2" height="15.0" fill="rgb(250,205,0)" rx="2" ry="2" />
<text  x="1084.87" y="351.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::get (11 samples, 0.02%)</title><rect x="310.9" y="197" width="0.3" height="15.0" fill="rgb(230,172,33)" rx="2" ry="2" />
<text  x="313.93" y="207.5" ></text>
</g>
<g >
<title>std::hash&lt;std::basic_string_view&lt;signed char, std::char_traits&lt;signed char&gt; &gt; &gt;::operator (73 samples, 0.15%)</title><rect x="720.3" y="309" width="1.9" height="15.0" fill="rgb(230,154,0)" rx="2" ry="2" />
<text  x="723.35" y="319.5" ></text>
</g>
<g >
<title>mutation_partition::lower_bound (31 samples, 0.07%)</title><rect x="226.4" y="213" width="0.8" height="15.0" fill="rgb(223,206,9)" rx="2" ry="2" />
<text  x="229.44" y="223.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_destroyed (6 samples, 0.01%)</title><rect x="59.3" y="437" width="0.2" height="15.0" fill="rgb(235,208,0)" rx="2" ry="2" />
<text  x="62.34" y="447.5" ></text>
</g>
<g >
<title>make_stable_flattened_mutations_consumer&lt;compact_for_query&lt; (113 samples, 0.24%)</title><rect x="408.6" y="373" width="2.9" height="15.0" fill="rgb(217,53,49)" rx="2" ry="2" />
<text  x="411.64" y="383.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_Optional_payload_base (10 samples, 0.02%)</title><rect x="531.1" y="405" width="0.2" height="15.0" fill="rgb(252,91,24)" rx="2" ry="2" />
<text  x="534.09" y="415.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (5 samples, 0.01%)</title><rect x="95.1" y="389" width="0.2" height="15.0" fill="rgb(223,89,38)" rx="2" ry="2" />
<text  x="98.14" y="399.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (9 samples, 0.02%)</title><rect x="826.6" y="277" width="0.2" height="15.0" fill="rgb(231,137,4)" rx="2" ry="2" />
<text  x="829.56" y="287.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_impl&lt;flat_mutation_reader::impl::consumer_adapter&lt;stable_flattened_mutations_consumer&lt;compact_for_query&lt; (5,059 samples, 10.69%)</title><rect x="281.7" y="325" width="126.2" height="15.0" fill="rgb(209,165,3)" rx="2" ry="2" />
<text  x="284.74" y="335.5" >seastar::intern..</text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::trivial_direct_destroy (7 samples, 0.01%)</title><rect x="65.3" y="389" width="0.2" height="15.0" fill="rgb(215,76,46)" rx="2" ry="2" />
<text  x="68.32" y="399.5" ></text>
</g>
<g >
<title>std::__equal&lt;true&gt;::equal&lt;char&gt; (5 samples, 0.01%)</title><rect x="736.3" y="277" width="0.1" height="15.0" fill="rgb(212,6,52)" rx="2" ry="2" />
<text  x="739.26" y="287.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (7 samples, 0.01%)</title><rect x="590.2" y="437" width="0.2" height="15.0" fill="rgb(228,214,19)" rx="2" ry="2" />
<text  x="593.18" y="447.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (54 samples, 0.11%)</title><rect x="896.4" y="261" width="1.3" height="15.0" fill="rgb(205,51,12)" rx="2" ry="2" />
<text  x="899.37" y="271.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureIvE9then_implIZZN5query12consume_pageIL19emit_only_live_rows1E20query_result_builderEEDaR20flat_mutation_readerNS_13lw_shared_ptrI22compact_mutation_stateIXT_EL20compact_for_sstables0EEEERKNS3_15partition_sliceEOT0_mjNSt6chrono10time_pointI8gc_clockNSJ_8durationIlSt5ratioILl1ELl1EEEEEEENUlP17mutation_fragmentE_clESS_EUlDpOT_E_NS0_ISt5tupleIJSt8optionalI21clustering_key_prefixEEEEEEESH_OT_ (6 samples, 0.01%)</title><rect x="277.7" y="389" width="0.2" height="15.0" fill="rgb(245,80,52)" rx="2" ry="2" />
<text  x="280.75" y="399.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (20 samples, 0.04%)</title><rect x="792.6" y="149" width="0.5" height="15.0" fill="rgb(210,128,49)" rx="2" ry="2" />
<text  x="795.60" y="159.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::query_options, std::default_delete&lt;cql3::query_options&gt; &gt;::~unique_ptr (23 samples, 0.05%)</title><rect x="855.7" y="453" width="0.5" height="15.0" fill="rgb(238,227,26)" rx="2" ry="2" />
<text  x="858.66" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;service::client_state::check_has_permission (1,286 samples, 2.72%)</title><rect x="776.0" y="325" width="32.0" height="15.0" fill="rgb(218,10,13)" rx="2" ry="2" />
<text  x="778.97" y="335.5" >st..</text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (25 samples, 0.05%)</title><rect x="869.8" y="469" width="0.6" height="15.0" fill="rgb(221,97,41)" rx="2" ry="2" />
<text  x="872.79" y="479.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (5 samples, 0.01%)</title><rect x="638.5" y="405" width="0.1" height="15.0" fill="rgb(242,73,31)" rx="2" ry="2" />
<text  x="641.47" y="415.5" ></text>
</g>
<g >
<title>query::querier&lt; (11 samples, 0.02%)</title><rect x="57.7" y="453" width="0.2" height="15.0" fill="rgb(242,126,21)" rx="2" ry="2" />
<text  x="60.67" y="463.5" ></text>
</g>
<g >
<title>cql3::util::do_with_parser_impl (220 samples, 0.46%)</title><rect x="15.7" y="437" width="5.5" height="15.0" fill="rgb(243,87,26)" rx="2" ry="2" />
<text  x="18.73" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;reader_permit::impl&gt;::~shared_ptr (28 samples, 0.06%)</title><rect x="401.7" y="229" width="0.7" height="15.0" fill="rgb(222,21,24)" rx="2" ry="2" />
<text  x="404.66" y="239.5" ></text>
</g>
<g >
<title>utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (386 samples, 0.82%)</title><rect x="790.7" y="213" width="9.6" height="15.0" fill="rgb(243,124,10)" rx="2" ry="2" />
<text  x="793.66" y="223.5" ></text>
</g>
<g >
<title>mutation_reader_merger::maybe_add_readers (25 samples, 0.05%)</title><rect x="119.1" y="277" width="0.7" height="15.0" fill="rgb(245,225,39)" rx="2" ry="2" />
<text  x="122.13" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::future (6 samples, 0.01%)</title><rect x="986.2" y="341" width="0.1" height="15.0" fill="rgb(234,103,49)" rx="2" ry="2" />
<text  x="989.18" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::needs_post_query_ordering (47 samples, 0.10%)</title><rect x="955.3" y="405" width="1.2" height="15.0" fill="rgb(253,105,1)" rx="2" ry="2" />
<text  x="958.29" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::~small_vector (6 samples, 0.01%)</title><rect x="1142.2" y="421" width="0.2" height="15.0" fill="rgb(250,156,16)" rx="2" ry="2" />
<text  x="1145.23" y="431.5" ></text>
</g>
<g >
<title>range_tombstone_stream::get_next (11 samples, 0.02%)</title><rect x="217.8" y="165" width="0.3" height="15.0" fill="rgb(214,169,11)" rx="2" ry="2" />
<text  x="220.84" y="175.5" ></text>
</g>
<g >
<title>cql3::statements::raw::modification_statement::prepare (30 samples, 0.06%)</title><rect x="21.3" y="453" width="0.7" height="15.0" fill="rgb(253,84,22)" rx="2" ry="2" />
<text  x="24.29" y="463.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.06%)</title><rect x="236.5" y="181" width="0.8" height="15.0" fill="rgb(245,202,39)" rx="2" ry="2" />
<text  x="239.54" y="191.5" ></text>
</g>
<g >
<title>cql3::raw_value_view::raw_value_view (77 samples, 0.16%)</title><rect x="903.9" y="325" width="1.9" height="15.0" fill="rgb(242,186,18)" rx="2" ry="2" />
<text  x="906.90" y="335.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (42 samples, 0.09%)</title><rect x="933.1" y="341" width="1.0" height="15.0" fill="rgb(206,33,30)" rx="2" ry="2" />
<text  x="936.07" y="351.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;void&gt;, service::abstract_read_executor::execute (9 samples, 0.02%)</title><rect x="24.1" y="517" width="0.2" height="15.0" fill="rgb(248,50,37)" rx="2" ry="2" />
<text  x="27.09" y="527.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (64 samples, 0.14%)</title><rect x="909.5" y="341" width="1.6" height="15.0" fill="rgb(240,36,26)" rx="2" ry="2" />
<text  x="912.46" y="351.5" ></text>
</g>
<g >
<title>global_schema_ptr::global_schema_ptr (40 samples, 0.08%)</title><rect x="1012.8" y="277" width="1.0" height="15.0" fill="rgb(232,170,40)" rx="2" ry="2" />
<text  x="1015.78" y="287.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (13 samples, 0.03%)</title><rect x="221.3" y="229" width="0.4" height="15.0" fill="rgb(241,82,23)" rx="2" ry="2" />
<text  x="224.33" y="239.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (44 samples, 0.09%)</title><rect x="756.5" y="341" width="1.1" height="15.0" fill="rgb(250,217,50)" rx="2" ry="2" />
<text  x="759.50" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_range_initialize&lt;managed_bytes const*&gt; (6 samples, 0.01%)</title><rect x="909.2" y="357" width="0.1" height="15.0" fill="rgb(242,128,32)" rx="2" ry="2" />
<text  x="912.16" y="367.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (7 samples, 0.01%)</title><rect x="57.5" y="453" width="0.1" height="15.0" fill="rgb(250,197,22)" rx="2" ry="2" />
<text  x="60.47" y="463.5" ></text>
</g>
<g >
<title>database::has_keyspace (156 samples, 0.33%)</title><rect x="837.5" y="421" width="3.9" height="15.0" fill="rgb(222,30,21)" rx="2" ry="2" />
<text  x="840.48" y="431.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;::touch (5 samples, 0.01%)</title><rect x="731.9" y="325" width="0.1" height="15.0" fill="rgb(236,115,13)" rx="2" ry="2" />
<text  x="734.87" y="335.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (10 samples, 0.02%)</title><rect x="477.7" y="181" width="0.2" height="15.0" fill="rgb(207,64,47)" rx="2" ry="2" />
<text  x="480.66" y="191.5" ></text>
</g>
<g >
<title>__tls_init (14 samples, 0.03%)</title><rect x="137.2" y="245" width="0.3" height="15.0" fill="rgb(244,215,29)" rx="2" ry="2" />
<text  x="140.16" y="255.5" ></text>
</g>
<g >
<title>do_cql_test (279 samples, 0.59%)</title><rect x="15.5" y="549" width="7.0" height="15.0" fill="rgb(230,127,5)" rx="2" ry="2" />
<text  x="18.51" y="559.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base::clear (6 samples, 0.01%)</title><rect x="617.6" y="469" width="0.2" height="15.0" fill="rgb(228,76,29)" rx="2" ry="2" />
<text  x="620.63" y="479.5" ></text>
</g>
<g >
<title>partition_key_view::legacy_tri_compare (6 samples, 0.01%)</title><rect x="479.4" y="261" width="0.1" height="15.0" fill="rgb(254,50,20)" rx="2" ry="2" />
<text  x="482.38" y="271.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (6 samples, 0.01%)</title><rect x="685.7" y="469" width="0.2" height="15.0" fill="rgb(217,13,23)" rx="2" ry="2" />
<text  x="688.74" y="479.5" ></text>
</g>
<g >
<title>cql3::query_options::query_options (168 samples, 0.35%)</title><rect x="849.7" y="437" width="4.2" height="15.0" fill="rgb(245,183,4)" rx="2" ry="2" />
<text  x="852.72" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::noncopyable_function_base::indirect_move (5 samples, 0.01%)</title><rect x="69.2" y="389" width="0.1" height="15.0" fill="rgb(229,169,48)" rx="2" ry="2" />
<text  x="72.19" y="399.5" ></text>
</g>
<g >
<title>operator new (37 samples, 0.08%)</title><rect x="536.6" y="357" width="0.9" height="15.0" fill="rgb(222,120,35)" rx="2" ry="2" />
<text  x="539.62" y="367.5" ></text>
</g>
<g >
<title>query::result::builder::builder (139 samples, 0.29%)</title><rect x="586.6" y="421" width="3.5" height="15.0" fill="rgb(205,155,12)" rx="2" ry="2" />
<text  x="589.59" y="431.5" ></text>
</g>
<g >
<title>cql_transport::messages::result_message::rows::rows (13 samples, 0.03%)</title><rect x="644.0" y="437" width="0.3" height="15.0" fill="rgb(212,149,54)" rx="2" ry="2" />
<text  x="647.01" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::sharded&lt;database&gt;::invoke_on&lt;service::storage_proxy::query_result_local (119 samples, 0.25%)</title><rect x="622.4" y="485" width="3.0" height="15.0" fill="rgb(207,168,35)" rx="2" ry="2" />
<text  x="625.39" y="495.5" ></text>
</g>
<g >
<title>ser::query_result__partitions&lt;bytes_ostream&gt;::add (18 samples, 0.04%)</title><rect x="303.4" y="165" width="0.5" height="15.0" fill="rgb(237,213,23)" rx="2" ry="2" />
<text  x="306.43" y="175.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="703.6" y="501" width="0.2" height="15.0" fill="rgb(211,214,8)" rx="2" ry="2" />
<text  x="706.64" y="511.5" ></text>
</g>
<g >
<title>seastar::app_template::run (46,373 samples, 97.98%)</title><rect x="22.9" y="597" width="1156.2" height="15.0" fill="rgb(214,39,26)" rx="2" ry="2" />
<text  x="25.87" y="607.5" >seastar::app_template::run</text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::~small_vector (21 samples, 0.04%)</title><rect x="817.0" y="357" width="0.5" height="15.0" fill="rgb(208,181,2)" rx="2" ry="2" />
<text  x="819.96" y="367.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="950.0" y="341" width="0.1" height="15.0" fill="rgb(246,101,0)" rx="2" ry="2" />
<text  x="953.00" y="351.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (5 samples, 0.01%)</title><rect x="743.4" y="389" width="0.1" height="15.0" fill="rgb(233,51,1)" rx="2" ry="2" />
<text  x="746.36" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;clustering_key_prefix&gt;::_M_reset (5 samples, 0.01%)</title><rect x="223.4" y="245" width="0.2" height="15.0" fill="rgb(224,163,0)" rx="2" ry="2" />
<text  x="226.45" y="255.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt;, std::default_delete&lt;seastar::internal::do_with_state&lt;std::tuple&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, auth::resource&gt;, seastar::future&lt;void&gt; &gt; &gt; &gt;::~unique_ptr (75 samples, 0.16%)</title><rect x="815.6" y="389" width="1.9" height="15.0" fill="rgb(233,192,47)" rx="2" ry="2" />
<text  x="818.62" y="399.5" ></text>
</g>
<g >
<title>partition_snapshot::partition_tombstone (20 samples, 0.04%)</title><rect x="503.7" y="229" width="0.5" height="15.0" fill="rgb(219,77,53)" rx="2" ry="2" />
<text  x="506.71" y="239.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_make_helper&lt;cql_transport::messages::result_message::rows, false&gt;::make&lt;cql3::result&gt; (6 samples, 0.01%)</title><rect x="649.7" y="485" width="0.1" height="15.0" fill="rgb(235,76,22)" rx="2" ry="2" />
<text  x="652.69" y="495.5" ></text>
</g>
<g >
<title>std::__push_heap&lt;mutation_reader_merger::reader_and_fragment*, long, mutation_reader_merger::reader_and_fragment, __gnu_cxx::__ops::_Iter_comp_val&lt;mutation_reader_merger::reader_heap_compare&gt; &gt; (20 samples, 0.04%)</title><rect x="131.0" y="229" width="0.5" height="15.0" fill="rgb(211,35,3)" rx="2" ry="2" />
<text  x="133.97" y="239.5" ></text>
</g>
<g >
<title>seastar::reactor_backend_aio::reap_kernel_completions (25 samples, 0.05%)</title><rect x="1178.3" y="501" width="0.7" height="15.0" fill="rgb(213,122,22)" rx="2" ry="2" />
<text  x="1181.33" y="511.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="619.7" y="469" width="0.2" height="15.0" fill="rgb(245,65,41)" rx="2" ry="2" />
<text  x="622.75" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;query::querier&lt; (65 samples, 0.14%)</title><rect x="608.2" y="437" width="1.6" height="15.0" fill="rgb(251,9,26)" rx="2" ry="2" />
<text  x="611.18" y="447.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (9 samples, 0.02%)</title><rect x="885.0" y="357" width="0.2" height="15.0" fill="rgb(238,220,36)" rx="2" ry="2" />
<text  x="888.00" y="367.5" ></text>
</g>
<g >
<title>ser::qr_partition__static_row&lt;bytes_ostream&gt;::qr_partition__static_row (19 samples, 0.04%)</title><rect x="299.9" y="165" width="0.5" height="15.0" fill="rgb(210,208,14)" rx="2" ry="2" />
<text  x="302.94" y="175.5" ></text>
</g>
<g >
<title>operator new (74 samples, 0.16%)</title><rect x="1040.9" y="213" width="1.8" height="15.0" fill="rgb(211,26,38)" rx="2" ry="2" />
<text  x="1043.88" y="223.5" ></text>
</g>
<g >
<title>operator new (67 samples, 0.14%)</title><rect x="841.4" y="421" width="1.6" height="15.0" fill="rgb(247,27,19)" rx="2" ry="2" />
<text  x="844.37" y="431.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::then_impl&lt;merging_reader&lt;mutation_reader_merger&gt;::fill_buffer (473 samples, 1.00%)</title><rect x="262.2" y="357" width="11.8" height="15.0" fill="rgb(240,149,40)" rx="2" ry="2" />
<text  x="265.24" y="367.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;query::result&gt;::operator= (6 samples, 0.01%)</title><rect x="693.3" y="421" width="0.2" height="15.0" fill="rgb(213,23,3)" rx="2" ry="2" />
<text  x="696.32" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt;::set_value&lt;std::tuple&lt;seastar::lw_shared_ptr&lt;query::result&gt;, cache_temperature&gt; &gt; (18 samples, 0.04%)</title><rect x="43.9" y="485" width="0.4" height="15.0" fill="rgb(229,82,38)" rx="2" ry="2" />
<text  x="46.88" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (12 samples, 0.03%)</title><rect x="250.9" y="309" width="0.3" height="15.0" fill="rgb(205,206,48)" rx="2" ry="2" />
<text  x="253.92" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;service::storage_proxy_coordinator_query_result&gt;::move_it (7 samples, 0.01%)</title><rect x="982.5" y="357" width="0.1" height="15.0" fill="rgb(230,153,11)" rx="2" ry="2" />
<text  x="985.46" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_urgent_task (18 samples, 0.04%)</title><rect x="649.0" y="485" width="0.4" height="15.0" fill="rgb(221,43,27)" rx="2" ry="2" />
<text  x="651.97" y="495.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;bytes_ostream::chunk, std::default_delete&lt;bytes_ostream::chunk&gt; &gt;::~unique_ptr (88 samples, 0.19%)</title><rect x="36.3" y="437" width="2.1" height="15.0" fill="rgb(244,170,0)" rx="2" ry="2" />
<text  x="39.25" y="447.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.29] (5 samples, 0.01%)</title><rect x="591.1" y="405" width="0.1" height="15.0" fill="rgb(211,48,25)" rx="2" ry="2" />
<text  x="594.10" y="415.5" ></text>
</g>
<g >
<title>operator delete (26 samples, 0.05%)</title><rect x="56.7" y="453" width="0.7" height="15.0" fill="rgb(232,203,21)" rx="2" ry="2" />
<text  x="59.75" y="463.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (9 samples, 0.02%)</title><rect x="801.4" y="245" width="0.2" height="15.0" fill="rgb(227,97,44)" rx="2" ry="2" />
<text  x="804.35" y="255.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;cache_entry&gt;, dht::raw_token_less_comparator, 16ul,  (63 samples, 0.13%)</title><rect x="518.8" y="293" width="1.5" height="15.0" fill="rgb(243,96,18)" rx="2" ry="2" />
<text  x="521.77" y="303.5" ></text>
</g>
<g >
<title>std::make_unique&lt;merging_reader&lt;mutation_reader_merger&gt;, seastar::lw_shared_ptr&lt;schema const&gt;&amp;, reader_permit, seastar::bool_class&lt;streamed_mutation::forwarding_tag&gt;&amp;, mutation_reader_merger&gt; (224 samples, 0.47%)</title><rect x="443.6" y="309" width="5.6" height="15.0" fill="rgb(244,214,17)" rx="2" ry="2" />
<text  x="446.60" y="319.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (11 samples, 0.02%)</title><rect x="520.3" y="309" width="0.3" height="15.0" fill="rgb(238,153,37)" rx="2" ry="2" />
<text  x="523.34" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (29 samples, 0.06%)</title><rect x="992.3" y="293" width="0.7" height="15.0" fill="rgb(210,83,3)" rx="2" ry="2" />
<text  x="995.31" y="303.5" ></text>
</g>
<g >
<title>service::storage_proxy::do_query (5,979 samples, 12.63%)</title><rect x="960.8" y="389" width="149.1" height="15.0" fill="rgb(236,123,33)" rx="2" ry="2" />
<text  x="963.82" y="399.5" >service::storage_pr..</text>
</g>
<g >
<title>table::as_mutation_source (87 samples, 0.18%)</title><rect x="610.4" y="437" width="2.2" height="15.0" fill="rgb(210,135,42)" rx="2" ry="2" />
<text  x="613.40" y="447.5" ></text>
</g>
<g >
<title>seastar::shared_ptr&lt;cql3::cql_statement&gt;::~shared_ptr (13 samples, 0.03%)</title><rect x="830.0" y="421" width="0.3" height="15.0" fill="rgb(228,224,29)" rx="2" ry="2" />
<text  x="832.98" y="431.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::operator= (14 samples, 0.03%)</title><rect x="829.3" y="405" width="0.3" height="15.0" fill="rgb(212,26,31)" rx="2" ry="2" />
<text  x="832.25" y="415.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;, seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::finally_body&lt;single_node_cql_env::execute_prepared_with_qo (15 samples, 0.03%)</title><rect x="833.5" y="373" width="0.3" height="15.0" fill="rgb(250,39,44)" rx="2" ry="2" />
<text  x="836.47" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (13 samples, 0.03%)</title><rect x="581.4" y="389" width="0.3" height="15.0" fill="rgb(210,14,54)" rx="2" ry="2" />
<text  x="584.43" y="399.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (10 samples, 0.02%)</title><rect x="491.1" y="277" width="0.2" height="15.0" fill="rgb(212,80,40)" rx="2" ry="2" />
<text  x="494.10" y="287.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (6 samples, 0.01%)</title><rect x="130.8" y="213" width="0.2" height="15.0" fill="rgb(221,38,54)" rx="2" ry="2" />
<text  x="133.82" y="223.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt;, utils::timestamped_val&lt;enum_set&lt;super_enum&lt;auth::permission,  (146 samples, 0.31%)</title><rect x="792.0" y="165" width="3.6" height="15.0" fill="rgb(244,37,10)" rx="2" ry="2" />
<text  x="795.00" y="175.5" ></text>
</g>
<g >
<title>range_tombstone_list::slice (7 samples, 0.01%)</title><rect x="237.5" y="229" width="0.2" height="15.0" fill="rgb(252,179,21)" rx="2" ry="2" />
<text  x="240.51" y="239.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (10 samples, 0.02%)</title><rect x="927.9" y="373" width="0.2" height="15.0" fill="rgb(252,73,53)" rx="2" ry="2" />
<text  x="930.89" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_fragment, 4ul&gt;::~small_vector (7 samples, 0.01%)</title><rect x="442.0" y="293" width="0.2" height="15.0" fill="rgb(212,139,41)" rx="2" ry="2" />
<text  x="445.03" y="303.5" ></text>
</g>
<g >
<title>seastar::preempt_io_context::reset_preemption_monitor (10 samples, 0.02%)</title><rect x="1145.6" y="501" width="0.3" height="15.0" fill="rgb(248,209,11)" rx="2" ry="2" />
<text  x="1148.65" y="511.5" ></text>
</g>
<g >
<title>cql3::expr::evaluate (711 samples, 1.50%)</title><rect x="885.9" y="341" width="17.8" height="15.0" fill="rgb(235,163,50)" rx="2" ry="2" />
<text  x="888.92" y="351.5" ></text>
</g>
<g >
<title>reader_permit::impl::signal (19 samples, 0.04%)</title><rect x="60.4" y="421" width="0.5" height="15.0" fill="rgb(211,15,14)" rx="2" ry="2" />
<text  x="63.41" y="431.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::destroy (8 samples, 0.02%)</title><rect x="645.7" y="485" width="0.2" height="15.0" fill="rgb(232,92,36)" rx="2" ry="2" />
<text  x="648.68" y="495.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (108 samples, 0.23%)</title><rect x="147.9" y="197" width="2.7" height="15.0" fill="rgb(231,25,14)" rx="2" ry="2" />
<text  x="150.93" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::add_more_objects (17 samples, 0.04%)</title><rect x="1026.6" y="213" width="0.4" height="15.0" fill="rgb(229,193,41)" rx="2" ry="2" />
<text  x="1029.62" y="223.5" ></text>
</g>
<g >
<title>reader_permit::consume (8 samples, 0.02%)</title><rect x="501.4" y="165" width="0.2" height="15.0" fill="rgb(226,4,44)" rx="2" ry="2" />
<text  x="504.44" y="175.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::on_permit_created (13 samples, 0.03%)</title><rect x="1042.9" y="197" width="0.4" height="15.0" fill="rgb(205,212,12)" rx="2" ry="2" />
<text  x="1045.95" y="207.5" ></text>
</g>
<g >
<title>seastar::shared_ptr_no_esft&lt;std::function&lt;flat_mutation_reader  (11 samples, 0.02%)</title><rect x="611.4" y="389" width="0.2" height="15.0" fill="rgb(220,177,0)" rx="2" ry="2" />
<text  x="614.37" y="399.5" ></text>
</g>
<g >
<title>mutation_source::make_reader (4,524 samples, 9.56%)</title><rect x="416.7" y="405" width="112.8" height="15.0" fill="rgb(215,164,3)" rx="2" ry="2" />
<text  x="419.70" y="415.5" >mutation_sour..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;partition_key&gt;::_Optional_payload_base (20 samples, 0.04%)</title><rect x="944.3" y="341" width="0.5" height="15.0" fill="rgb(243,7,2)" rx="2" ry="2" />
<text  x="947.29" y="351.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (27 samples, 0.06%)</title><rect x="1170.6" y="469" width="0.7" height="15.0" fill="rgb(231,29,28)" rx="2" ry="2" />
<text  x="1173.63" y="479.5" ></text>
</g>
<g >
<title>bound_view::from_range&lt;nonwrapping_interval&gt; (5 samples, 0.01%)</title><rect x="226.3" y="213" width="0.1" height="15.0" fill="rgb(247,26,20)" rx="2" ry="2" />
<text  x="229.31" y="223.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (12 samples, 0.03%)</title><rect x="833.2" y="357" width="0.3" height="15.0" fill="rgb(247,81,41)" rx="2" ry="2" />
<text  x="836.17" y="367.5" ></text>
</g>
<g >
<title>seastar::reactor::add_timer (13 samples, 0.03%)</title><rect x="993.9" y="293" width="0.3" height="15.0" fill="rgb(227,165,3)" rx="2" ry="2" />
<text  x="996.86" y="303.5" ></text>
</g>
<g >
<title>antlr3::CommonTokenStream&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;::insertToken (10 samples, 0.02%)</title><rect x="16.1" y="293" width="0.2" height="15.0" fill="rgb(254,128,15)" rx="2" ry="2" />
<text  x="19.08" y="303.5" ></text>
</g>
<g >
<title>clustering_row::external_memory_usage (315 samples, 0.67%)</title><rect x="196.0" y="165" width="7.8" height="15.0" fill="rgb(236,198,24)" rx="2" ry="2" />
<text  x="199.00" y="175.5" ></text>
</g>
<g >
<title>service::storage_proxy_stats::split_stats::get_ep_stat (21 samples, 0.04%)</title><rect x="697.2" y="453" width="0.5" height="15.0" fill="rgb(207,121,9)" rx="2" ry="2" />
<text  x="700.16" y="463.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (6 samples, 0.01%)</title><rect x="22.2" y="357" width="0.2" height="15.0" fill="rgb(213,59,44)" rx="2" ry="2" />
<text  x="25.22" y="367.5" ></text>
</g>
<g >
<title>mutation_querier::consume_end_of_stream (7 samples, 0.01%)</title><rect x="292.9" y="229" width="0.2" height="15.0" fill="rgb(205,47,45)" rx="2" ry="2" />
<text  x="295.91" y="239.5" ></text>
</g>
<g >
<title>partition_snapshot_ptr::~partition_snapshot_ptr (13 samples, 0.03%)</title><rect x="485.9" y="309" width="0.3" height="15.0" fill="rgb(215,113,28)" rx="2" ry="2" />
<text  x="488.88" y="319.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_restrictions::empty (18 samples, 0.04%)</title><rect x="951.0" y="405" width="0.4" height="15.0" fill="rgb(210,67,15)" rx="2" ry="2" />
<text  x="954.00" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (13 samples, 0.03%)</title><rect x="700.1" y="485" width="0.3" height="15.0" fill="rgb(240,12,40)" rx="2" ry="2" />
<text  x="703.05" y="495.5" ></text>
</g>
<g >
<title>db::is_datacenter_local (5 samples, 0.01%)</title><rect x="972.1" y="357" width="0.2" height="15.0" fill="rgb(216,124,32)" rx="2" ry="2" />
<text  x="975.14" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="494.2" y="261" width="0.2" height="15.0" fill="rgb(238,47,29)" rx="2" ry="2" />
<text  x="497.24" y="271.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;position_in_partition&gt;::_M_reset (5 samples, 0.01%)</title><rect x="560.2" y="293" width="0.1" height="15.0" fill="rgb(236,105,28)" rx="2" ry="2" />
<text  x="563.16" y="303.5" ></text>
</g>
<g >
<title>utils::murmur_hash::hash3_x64_128&lt;legacy_compound_view&lt;compound_type&lt; (231 samples, 0.49%)</title><rect x="921.7" y="373" width="5.7" height="15.0" fill="rgb(223,154,48)" rx="2" ry="2" />
<text  x="924.65" y="383.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (7 samples, 0.01%)</title><rect x="1098.0" y="277" width="0.2" height="15.0" fill="rgb(216,4,15)" rx="2" ry="2" />
<text  x="1101.05" y="287.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (197 samples, 0.42%)</title><rect x="142.5" y="229" width="4.9" height="15.0" fill="rgb(241,201,40)" rx="2" ry="2" />
<text  x="145.52" y="239.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;reader_concurrency_semaphore::entry&gt;::_M_reset (23 samples, 0.05%)</title><rect x="68.5" y="405" width="0.6" height="15.0" fill="rgb(235,151,1)" rx="2" ry="2" />
<text  x="71.54" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (9 samples, 0.02%)</title><rect x="513.7" y="341" width="0.2" height="15.0" fill="rgb(246,138,32)" rx="2" ry="2" />
<text  x="516.71" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_map&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::at&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt; &gt; (19 samples, 0.04%)</title><rect x="1062.1" y="341" width="0.5" height="15.0" fill="rgb(227,25,17)" rx="2" ry="2" />
<text  x="1065.10" y="351.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, managed_bytes, cql3::null_value, cql3::unset_value&gt;::_Move_ctor_base (8 samples, 0.02%)</title><rect x="898.4" y="277" width="0.2" height="15.0" fill="rgb(213,186,8)" rx="2" ry="2" />
<text  x="901.42" y="287.5" ></text>
</g>
<g >
<title>operator new (31 samples, 0.07%)</title><rect x="529.5" y="405" width="0.8" height="15.0" fill="rgb(220,126,0)" rx="2" ry="2" />
<text  x="532.49" y="415.5" ></text>
</g>
<g >
<title>reader_permit::consume_resources (15 samples, 0.03%)</title><rect x="205.0" y="149" width="0.3" height="15.0" fill="rgb(209,121,7)" rx="2" ry="2" />
<text  x="207.97" y="159.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="373" width="0.9" height="15.0" fill="rgb(233,193,21)" rx="2" ry="2" />
<text  x="1146.30" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::list&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_M_insert&lt;flat_mutation_reader&gt; (14 samples, 0.03%)</title><rect x="439.0" y="277" width="0.4" height="15.0" fill="rgb(239,177,43)" rx="2" ry="2" />
<text  x="442.04" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position, std::allocator&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; &gt;::emplace_back&lt;partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::rows_position&gt; (74 samples, 0.16%)</title><rect x="235.6" y="213" width="1.8" height="15.0" fill="rgb(237,196,3)" rx="2" ry="2" />
<text  x="238.56" y="223.5" ></text>
</g>
<g >
<title>operator new (66 samples, 0.14%)</title><rect x="1044.3" y="261" width="1.6" height="15.0" fill="rgb(232,152,51)" rx="2" ry="2" />
<text  x="1047.27" y="271.5" ></text>
</g>
<g >
<title>query::partition_slice::partition_slice (203 samples, 0.43%)</title><rect x="91.0" y="437" width="5.0" height="15.0" fill="rgb(239,50,23)" rx="2" ry="2" />
<text  x="93.98" y="447.5" ></text>
</g>
<g >
<title>seastar::parallel_for_each&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_reader_merger::close (6 samples, 0.01%)</title><rect x="562.2" y="373" width="0.1" height="15.0" fill="rgb(214,0,38)" rx="2" ry="2" />
<text  x="565.18" y="383.5" ></text>
</g>
<g >
<title>std::vector&lt;flat_mutation_reader, std::allocator&lt;flat_mutation_reader&gt; &gt;::_S_do_relocate (5 samples, 0.01%)</title><rect x="528.9" y="325" width="0.1" height="15.0" fill="rgb(213,32,52)" rx="2" ry="2" />
<text  x="531.87" y="335.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (5 samples, 0.01%)</title><rect x="1143.3" y="197" width="0.2" height="15.0" fill="rgb(236,25,34)" rx="2" ry="2" />
<text  x="1146.33" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt;::_M_create_storage (8 samples, 0.02%)</title><rect x="939.1" y="405" width="0.2" height="15.0" fill="rgb(243,25,5)" rx="2" ry="2" />
<text  x="942.08" y="415.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (12 samples, 0.03%)</title><rect x="826.5" y="293" width="0.3" height="15.0" fill="rgb(227,177,4)" rx="2" ry="2" />
<text  x="829.49" y="303.5" ></text>
</g>
<g >
<title>operator delete (45 samples, 0.10%)</title><rect x="676.1" y="485" width="1.2" height="15.0" fill="rgb(244,130,35)" rx="2" ry="2" />
<text  x="679.14" y="495.5" ></text>
</g>
<g >
<title>seastar::internal::future_base::future_base (6 samples, 0.01%)</title><rect x="758.3" y="405" width="0.1" height="15.0" fill="rgb(205,18,1)" rx="2" ry="2" />
<text  x="761.27" y="415.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultISt7variantIJSt6vectorI13managed_bytesSaIS6_EE20nonwrapping_intervalIS6_EEEEER18overloaded_functorIJZN4cql34expr19possible_lhs_valuesEPK17column_definitionRKNSF_10expressionERKNSE_13query_optionsEE4$_44ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_45ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_43ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_46ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_47ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_48ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_49ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_50ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_51ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_52ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_53ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_54ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_55ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_56ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_57ZNSF_19possible_lhs_valuesESI_SL_SO_E4$_58EERS4_IJNSF_11conjunctionENSF_15binary_operatorENSF_12column_valueENSF_5tokenENSF_21unresolved_identifierENSF_25column_mutation_attributeENSF_13function_callENSF_4castENSF_15field_selectionENSF_4nullENSF_13bind_variableENSF_16untyped_constantENSF_8constantENSF_17tuple_constructorENSF_22collection_constructorENSF_20usertype_constructorEEEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES16_S1O_ (34 samples, 0.07%)</title><rect x="881.7" y="405" width="0.8" height="15.0" fill="rgb(253,122,1)" rx="2" ry="2" />
<text  x="884.66" y="415.5" ></text>
</g>
<g >
<title>seastar::make_shared&lt;cql3::column_identifier_raw, seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, bool&gt; (6 samples, 0.01%)</title><rect x="18.3" y="325" width="0.1" height="15.0" fill="rgb(240,107,45)" rx="2" ry="2" />
<text  x="21.28" y="335.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (11 samples, 0.02%)</title><rect x="66.3" y="389" width="0.3" height="15.0" fill="rgb(222,114,49)" rx="2" ry="2" />
<text  x="69.32" y="399.5" ></text>
</g>
<g >
<title>seastar::internal::uninitialized_wrapper_base&lt;service::storage_proxy_coordinator_query_result, false&gt;::uninitialized_set&lt;service::storage_proxy_coordinator_query_result&gt; (24 samples, 0.05%)</title><rect x="672.4" y="453" width="0.6" height="15.0" fill="rgb(248,62,0)" rx="2" ry="2" />
<text  x="675.40" y="463.5" ></text>
</g>
<g >
<title>cql3::constants::setter::execute (8 samples, 0.02%)</title><rect x="866.1" y="309" width="0.2" height="15.0" fill="rgb(216,170,43)" rx="2" ry="2" />
<text  x="869.05" y="319.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::update_and_check (20 samples, 0.04%)</title><rect x="320.3" y="181" width="0.5" height="15.0" fill="rgb(206,29,17)" rx="2" ry="2" />
<text  x="323.26" y="191.5" ></text>
</g>
<g >
<title>mutation_fragment::mutation_fragment&lt;schema const&amp;, rows_entry const&amp;&gt; (1,818 samples, 3.84%)</title><rect x="160.9" y="181" width="45.3" height="15.0" fill="rgb(212,137,36)" rx="2" ry="2" />
<text  x="163.92" y="191.5" >muta..</text>
</g>
<g >
<title>ser::qr_clustered_row__cells&lt;bytes_ostream&gt;::qr_clustered_row__cells (5 samples, 0.01%)</title><rect x="358.7" y="197" width="0.1" height="15.0" fill="rgb(215,52,42)" rx="2" ry="2" />
<text  x="361.65" y="207.5" ></text>
</g>
<g >
<title>__tls_init (10 samples, 0.02%)</title><rect x="521.6" y="293" width="0.3" height="15.0" fill="rgb(225,147,36)" rx="2" ry="2" />
<text  x="524.64" y="303.5" ></text>
</g>
<g >
<title>boost::circular_buffer&lt;long, std::allocator&lt;long&gt; &gt;::push_back_impl&lt;long const&amp;&gt; (6 samples, 0.01%)</title><rect x="667.4" y="437" width="0.1" height="15.0" fill="rgb(235,27,13)" rx="2" ry="2" />
<text  x="670.39" y="447.5" ></text>
</g>
<g >
<title>_ZNSt8__detail9__variant17__gen_vtable_implINS0_12_Multi_arrayIPFNS0_21__deduce_visit_resultIPKN4cql34expr15binary_operatorEEER18overloaded_functorIJZNS5_9find_atomIZNS5_9has_tokenERKNS5_10expressionEEUlRS7_E_EES8_SE_T_EUlSF_E_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_8constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_11conjunctionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_12column_valueEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_5tokenEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_21unresolved_identifierEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_25column_mutation_attributeEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13function_callEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4castEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_15field_selectionEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_4nullEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_13bind_variableEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_16untyped_constantEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_17tuple_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_22collection_constructorEE_ZNSB_ISG_EES8_SE_SH_EUlRKNS5_20usertype_constructorEE_EERSt7variantIJSN_S6_SR_SV_SZ_S13_S17_S1B_S1F_S1J_S1N_S1R_SJ_S1V_S1Z_S23_EEEJEEESt16integer_sequenceImJLm1EEEE14__visit_invokeES28_S2B_ (5 samples, 0.01%)</title><rect x="949.7" y="357" width="0.2" height="15.0" fill="rgb(251,56,33)" rx="2" ry="2" />
<text  x="952.73" y="367.5" ></text>
</g>
<g >
<title>database::find_schema (75 samples, 0.16%)</title><rect x="750.5" y="389" width="1.9" height="15.0" fill="rgb(213,154,16)" rx="2" ry="2" />
<text  x="753.52" y="399.5" ></text>
</g>
<g >
<title>reader_permit::impl::mark_unused (7 samples, 0.01%)</title><rect x="675.6" y="469" width="0.2" height="15.0" fill="rgb(223,127,31)" rx="2" ry="2" />
<text  x="678.62" y="479.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::emplace_back&lt;unsigned int const&amp;&gt; (28 samples, 0.06%)</title><rect x="1126.6" y="405" width="0.7" height="15.0" fill="rgb(240,193,29)" rx="2" ry="2" />
<text  x="1129.57" y="415.5" ></text>
</g>
<g >
<title>seastar::internal::do_with_state&lt;std::tuple&lt;std::pair&lt;auth::role_or_anonymous, auth::resource&gt; &gt;, seastar::future&lt;enum_set&lt;super_enum&lt;auth::permission,  (51 samples, 0.11%)</title><rect x="781.8" y="245" width="1.3" height="15.0" fill="rgb(244,132,47)" rx="2" ry="2" />
<text  x="784.78" y="255.5" ></text>
</g>
<g >
<title>bplus::searcher&lt;dht::ring_position, long, dht::raw_token_less_comparator, 16ul,  (46 samples, 0.10%)</title><rect x="457.4" y="293" width="1.1" height="15.0" fill="rgb(251,178,38)" rx="2" ry="2" />
<text  x="460.36" y="303.5" ></text>
</g>
<g >
<title>write_fragmented&lt;managed_bytes_basic_view&lt; (21 samples, 0.04%)</title><rect x="900.2" y="277" width="0.5" height="15.0" fill="rgb(224,198,47)" rx="2" ry="2" />
<text  x="903.16" y="287.5" ></text>
</g>
<g >
<title>seastar::continuation&lt;seastar::internal::promise_base_with_type&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;, service::storage_proxy::query_result_local (151 samples, 0.32%)</title><rect x="625.4" y="501" width="3.8" height="15.0" fill="rgb(209,46,3)" rx="2" ry="2" />
<text  x="628.41" y="511.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1152.0" y="485" width="0.1" height="15.0" fill="rgb(247,69,42)" rx="2" ry="2" />
<text  x="1154.98" y="495.5" ></text>
</g>
<g >
<title>absl::hash_internal::HashState::combine_contiguous (17 samples, 0.04%)</title><rect x="840.4" y="341" width="0.4" height="15.0" fill="rgb(232,103,28)" rx="2" ry="2" />
<text  x="843.37" y="351.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::check_queue_size (13 samples, 0.03%)</title><rect x="1029.6" y="197" width="0.4" height="15.0" fill="rgb(219,218,42)" rx="2" ry="2" />
<text  x="1032.63" y="207.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (7 samples, 0.01%)</title><rect x="1126.1" y="405" width="0.2" height="15.0" fill="rgb(225,17,43)" rx="2" ry="2" />
<text  x="1129.12" y="415.5" ></text>
</g>
<g >
<title>seastar::schedule_urgent (14 samples, 0.03%)</title><rect x="1146.6" y="501" width="0.3" height="15.0" fill="rgb(245,214,30)" rx="2" ry="2" />
<text  x="1149.57" y="511.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;dht::ring_position&gt;, std::allocator&lt;nonwrapping_interval&lt;dht::ring_position&gt; &gt; &gt;::~vector (32 samples, 0.07%)</title><rect x="1141.0" y="421" width="0.8" height="15.0" fill="rgb(209,11,13)" rx="2" ry="2" />
<text  x="1143.98" y="431.5" ></text>
</g>
<g >
<title>service::digest_read_resolver::got_response (118 samples, 0.25%)</title><rect x="693.6" y="437" width="3.0" height="15.0" fill="rgb(245,47,49)" rx="2" ry="2" />
<text  x="696.65" y="447.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;mutation_fragment::data, std::default_delete&lt;mutation_fragment::data&gt; &gt;::~unique_ptr (9 samples, 0.02%)</title><rect x="224.1" y="245" width="0.2" height="15.0" fill="rgb(217,151,8)" rx="2" ry="2" />
<text  x="227.12" y="255.5" ></text>
</g>
<g >
<title>locator::token_metadata::first_token (330 samples, 0.70%)</title><rect x="1084.0" y="277" width="8.2" height="15.0" fill="rgb(250,199,7)" rx="2" ry="2" />
<text  x="1087.01" y="287.5" ></text>
</g>
<g >
<title>managed_bytes_basic_view&lt; (7 samples, 0.01%)</title><rect x="917.8" y="341" width="0.1" height="15.0" fill="rgb(209,215,48)" rx="2" ry="2" />
<text  x="920.76" y="351.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::lower_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (27 samples, 0.06%)</title><rect x="208.8" y="149" width="0.6" height="15.0" fill="rgb(207,36,50)" rx="2" ry="2" />
<text  x="211.76" y="159.5" ></text>
</g>
<g >
<title>auth::permissions_cache::get (5 samples, 0.01%)</title><rect x="22.2" y="341" width="0.2" height="15.0" fill="rgb(236,48,11)" rx="2" ry="2" />
<text  x="25.24" y="351.5" ></text>
</g>
<g >
<title>mutation_fragment::visit&lt;mutation_fragment::calculate_memory_usage (14 samples, 0.03%)</title><rect x="204.0" y="165" width="0.3" height="15.0" fill="rgb(226,132,39)" rx="2" ry="2" />
<text  x="206.97" y="175.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::whereClause (18 samples, 0.04%)</title><rect x="20.1" y="357" width="0.4" height="15.0" fill="rgb(231,171,43)" rx="2" ry="2" />
<text  x="23.07" y="367.5" ></text>
</g>
<g >
<title>seastar::concrete_execution_stage&lt;seastar::future&lt;void&gt;, database*, seastar::lw_shared_ptr&lt;schema const&gt;, frozen_mutation const&amp;, tracing::trace_state_ptr, std::chrono::time_point&lt;seastar::lowres_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000l&gt; &gt; &gt;, seastar::bool_class&lt;db::force_sync_tag&gt; &gt;::do_flush (36 samples, 0.08%)</title><rect x="1143.3" y="485" width="0.9" height="15.0" fill="rgb(217,195,14)" rx="2" ry="2" />
<text  x="1146.28" y="495.5" ></text>
</g>
<g >
<title>std::operator==&lt;char, std::char_traits&lt;char&gt; &gt; (14 samples, 0.03%)</title><rect x="823.1" y="293" width="0.3" height="15.0" fill="rgb(254,0,39)" rx="2" ry="2" />
<text  x="826.07" y="303.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;void  (208 samples, 0.44%)</title><rect x="16.0" y="421" width="5.2" height="15.0" fill="rgb(241,228,12)" rx="2" ry="2" />
<text  x="19.03" y="431.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (99 samples, 0.21%)</title><rect x="354.9" y="165" width="2.5" height="15.0" fill="rgb(244,50,37)" rx="2" ry="2" />
<text  x="357.91" y="175.5" ></text>
</g>
<g >
<title>seastar::promise&lt;void&gt;::promise (24 samples, 0.05%)</title><rect x="613.3" y="485" width="0.6" height="15.0" fill="rgb(222,126,6)" rx="2" ry="2" />
<text  x="616.31" y="495.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::fill_buffer (4,334 samples, 9.16%)</title><rect x="135.1" y="309" width="108.0" height="15.0" fill="rgb(213,85,41)" rx="2" ry="2" />
<text  x="138.09" y="319.5" >partition_sna..</text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (5 samples, 0.01%)</title><rect x="1051.7" y="277" width="0.1" height="15.0" fill="rgb(248,212,40)" rx="2" ry="2" />
<text  x="1054.70" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_Hashtable (22 samples, 0.05%)</title><rect x="672.5" y="437" width="0.5" height="15.0" fill="rgb(214,89,4)" rx="2" ry="2" />
<text  x="675.45" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::take (9 samples, 0.02%)</title><rect x="742.0" y="405" width="0.2" height="15.0" fill="rgb(231,12,31)" rx="2" ry="2" />
<text  x="744.99" y="415.5" ></text>
</g>
<g >
<title>bplus::tree&lt;long, intrusive_array&lt;memtable_entry&gt;, dht::raw_token_less_comparator, 16ul,  (464 samples, 0.98%)</title><rect x="456.3" y="309" width="11.6" height="15.0" fill="rgb(232,118,31)" rx="2" ry="2" />
<text  x="459.34" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (29 samples, 0.06%)</title><rect x="91.4" y="421" width="0.7" height="15.0" fill="rgb(231,124,28)" rx="2" ry="2" />
<text  x="94.38" y="431.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::~guard (6 samples, 0.01%)</title><rect x="426.7" y="341" width="0.1" height="15.0" fill="rgb(228,188,0)" rx="2" ry="2" />
<text  x="429.69" y="351.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1123.8" y="405" width="0.1" height="15.0" fill="rgb(228,214,6)" rx="2" ry="2" />
<text  x="1126.78" y="415.5" ></text>
</g>
<g >
<title>__dynamic_cast (27 samples, 0.06%)</title><rect x="878.2" y="421" width="0.6" height="15.0" fill="rgb(228,180,48)" rx="2" ry="2" />
<text  x="881.17" y="431.5" ></text>
</g>
<g >
<title>utils::loading_cache&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;,  (217 samples, 0.46%)</title><rect x="716.9" y="405" width="5.4" height="15.0" fill="rgb(232,156,41)" rx="2" ry="2" />
<text  x="719.88" y="415.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::on_new_range (415 samples, 0.88%)</title><rect x="141.9" y="245" width="10.3" height="15.0" fill="rgb(240,102,35)" rx="2" ry="2" />
<text  x="144.87" y="255.5" ></text>
</g>
<g >
<title>ser::after_qr_cell__value&lt;bytes_ostream&gt;::skip_ttl (6 samples, 0.01%)</title><rect x="322.4" y="181" width="0.2" height="15.0" fill="rgb(227,45,26)" rx="2" ry="2" />
<text  x="325.43" y="191.5" ></text>
</g>
<g >
<title>locator::token_metadata_impl::first_token_index (321 samples, 0.68%)</title><rect x="1084.2" y="261" width="8.0" height="15.0" fill="rgb(216,166,50)" rx="2" ry="2" />
<text  x="1087.21" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;2ul, cql3::expr::conjunction, cql3::expr::binary_operator, cql3::expr::column_value, cql3::expr::token, cql3::expr::unresolved_identifier, cql3::expr::column_mutation_attribute, cql3::expr::function_call, cql3::expr::cast, cql3::expr::field_selection, cql3::expr::null, cql3::expr::bind_variable, cql3::expr::untyped_constant, cql3::expr::constant, cql3::expr::tuple_constructor, cql3::expr::collection_constructor, cql3::expr::usertype_constructor&gt; (7 samples, 0.01%)</title><rect x="939.6" y="405" width="0.2" height="15.0" fill="rgb(229,19,19)" rx="2" ry="2" />
<text  x="942.60" y="415.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::query (208 samples, 0.44%)</title><rect x="16.0" y="405" width="5.2" height="15.0" fill="rgb(231,56,6)" rx="2" ry="2" />
<text  x="19.03" y="415.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.06%)</title><rect x="93.8" y="389" width="0.7" height="15.0" fill="rgb(223,13,38)" rx="2" ry="2" />
<text  x="96.77" y="399.5" ></text>
</g>
<g >
<title>row::external_memory_usage (243 samples, 0.51%)</title><rect x="197.8" y="149" width="6.0" height="15.0" fill="rgb(220,161,49)" rx="2" ry="2" />
<text  x="200.79" y="159.5" ></text>
</g>
<g >
<title>service::storage_proxy::query (6,099 samples, 12.89%)</title><rect x="959.0" y="405" width="152.1" height="15.0" fill="rgb(234,141,30)" rx="2" ry="2" />
<text  x="962.00" y="415.5" >service::storage_pr..</text>
</g>
<g >
<title>compound_type&lt; (99 samples, 0.21%)</title><rect x="931.7" y="357" width="2.4" height="15.0" fill="rgb(239,191,30)" rx="2" ry="2" />
<text  x="934.65" y="367.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (8 samples, 0.02%)</title><rect x="229.6" y="213" width="0.2" height="15.0" fill="rgb(206,119,18)" rx="2" ry="2" />
<text  x="232.63" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_List_node_header::_List_node_header (8 samples, 0.02%)</title><rect x="445.7" y="261" width="0.2" height="15.0" fill="rgb(210,128,46)" rx="2" ry="2" />
<text  x="448.74" y="271.5" ></text>
</g>
<g >
<title>mutation_reader_merger::mutation_reader_merger (464 samples, 0.98%)</title><rect x="429.5" y="309" width="11.6" height="15.0" fill="rgb(210,78,7)" rx="2" ry="2" />
<text  x="432.49" y="319.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::set&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt; (8 samples, 0.02%)</title><rect x="596.8" y="421" width="0.2" height="15.0" fill="rgb(211,36,0)" rx="2" ry="2" />
<text  x="599.78" y="431.5" ></text>
</g>
<g >
<title>row_marker::compact_and_expire (9 samples, 0.02%)</title><rect x="382.5" y="213" width="0.2" height="15.0" fill="rgb(224,67,46)" rx="2" ry="2" />
<text  x="385.46" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52 samples, 0.11%)</title><rect x="893.9" y="261" width="1.3" height="15.0" fill="rgb(247,18,3)" rx="2" ry="2" />
<text  x="896.93" y="271.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;cql3::expr::expression::impl, std::default_delete&lt;cql3::expr::expression::impl&gt; &gt;::~unique_ptr (63 samples, 0.13%)</title><rect x="902.1" y="325" width="1.6" height="15.0" fill="rgb(234,21,1)" rx="2" ry="2" />
<text  x="905.08" y="335.5" ></text>
</g>
<g >
<title>__tls_init (12 samples, 0.03%)</title><rect x="493.0" y="245" width="0.3" height="15.0" fill="rgb(247,169,34)" rx="2" ry="2" />
<text  x="495.99" y="255.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="870.4" y="469" width="0.2" height="15.0" fill="rgb(214,7,49)" rx="2" ry="2" />
<text  x="873.42" y="479.5" ></text>
</g>
<g >
<title>std::optional&lt;clustering_key_prefix&gt;::operator=&lt;clustering_key_prefix const&amp;&gt; (32 samples, 0.07%)</title><rect x="219.4" y="213" width="0.8" height="15.0" fill="rgb(227,199,29)" rx="2" ry="2" />
<text  x="222.41" y="223.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::get_local_service (11 samples, 0.02%)</title><rect x="1050.3" y="277" width="0.2" height="15.0" fill="rgb(214,10,48)" rx="2" ry="2" />
<text  x="1053.25" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_erase_at_end (57 samples, 0.12%)</title><rect x="360.2" y="181" width="1.4" height="15.0" fill="rgb(248,173,53)" rx="2" ry="2" />
<text  x="363.18" y="191.5" ></text>
</g>
<g >
<title>utils::basic_ihistogram&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt; &gt;::set_latency (7 samples, 0.01%)</title><rect x="612.6" y="437" width="0.1" height="15.0" fill="rgb(209,167,42)" rx="2" ry="2" />
<text  x="615.57" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (25 samples, 0.05%)</title><rect x="488.4" y="277" width="0.6" height="15.0" fill="rgb(233,152,0)" rx="2" ry="2" />
<text  x="491.40" y="287.5" ></text>
</g>
<g >
<title>[unknown] (10 samples, 0.02%)</title><rect x="22.5" y="597" width="0.3" height="15.0" fill="rgb(240,122,23)" rx="2" ry="2" />
<text  x="25.54" y="607.5" ></text>
</g>
<g >
<title>flat_mutation_reader::close (630 samples, 1.33%)</title><rect x="545.9" y="341" width="15.7" height="15.0" fill="rgb(221,184,51)" rx="2" ry="2" />
<text  x="548.92" y="351.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (7 samples, 0.01%)</title><rect x="824.8" y="325" width="0.2" height="15.0" fill="rgb(229,35,15)" rx="2" ry="2" />
<text  x="827.82" y="335.5" ></text>
</g>
<g >
<title>__tls_init (7 samples, 0.01%)</title><rect x="518.2" y="309" width="0.2" height="15.0" fill="rgb(209,19,42)" rx="2" ry="2" />
<text  x="521.22" y="319.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::then_wrapped_common&lt;true, void, service::abstract_read_executor::execute (135 samples, 0.29%)</title><rect x="986.5" y="341" width="3.4" height="15.0" fill="rgb(242,223,45)" rx="2" ry="2" />
<text  x="989.53" y="351.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::~impl (19 samples, 0.04%)</title><rect x="547.5" y="325" width="0.5" height="15.0" fill="rgb(206,109,44)" rx="2" ry="2" />
<text  x="550.54" y="335.5" ></text>
</g>
<g >
<title>tombstone::apply (15 samples, 0.03%)</title><rect x="382.9" y="197" width="0.4" height="15.0" fill="rgb(250,12,25)" rx="2" ry="2" />
<text  x="385.89" y="207.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, 3ul&gt;::emplace_back&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;&amp;&gt; (38 samples, 0.08%)</title><rect x="764.7" y="373" width="1.0" height="15.0" fill="rgb(223,65,36)" rx="2" ry="2" />
<text  x="767.73" y="383.5" ></text>
</g>
<g >
<title>__libc_start_main (46,373 samples, 97.98%)</title><rect x="22.9" y="629" width="1156.2" height="15.0" fill="rgb(228,72,37)" rx="2" ry="2" />
<text  x="25.87" y="639.5" >__libc_start_main</text>
</g>
<g >
<title>query::result_memory_accounter::~result_memory_accounter (15 samples, 0.03%)</title><rect x="58.3" y="453" width="0.4" height="15.0" fill="rgb(241,88,7)" rx="2" ry="2" />
<text  x="61.32" y="463.5" ></text>
</g>
<g >
<title>bytes_ostream::chunk::~chunk (37 samples, 0.08%)</title><rect x="37.5" y="405" width="0.9" height="15.0" fill="rgb(218,173,44)" rx="2" ry="2" />
<text  x="40.53" y="415.5" ></text>
</g>
<g >
<title>reader_permit::~reader_permit (5 samples, 0.01%)</title><rect x="212.7" y="181" width="0.1" height="15.0" fill="rgb(228,57,50)" rx="2" ry="2" />
<text  x="215.73" y="191.5" ></text>
</g>
<g >
<title>query_state::query_state (227 samples, 0.48%)</title><rect x="584.5" y="437" width="5.7" height="15.0" fill="rgb(209,174,22)" rx="2" ry="2" />
<text  x="587.52" y="447.5" ></text>
</g>
<g >
<title>boost::intrusive::hashtable_impl&lt;boost::intrusive::bhtraits&lt;utils::loading_shared_values&lt;cql3::authorized_prepared_statements_cache_key, utils::timestamped_val&lt;seastar::checked_ptr&lt;seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;, seastar::default_null_deref_action&gt;, cql3::authorized_prepared_statements_cache_key, cql3::authorized_prepared_statements_cache_size, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater&gt;, std::hash&lt;cql3::authorized_prepared_statements_cache_key&gt;, std::equal_to&lt;cql3::authorized_prepared_statements_cache_key&gt;, cql3::authorized_prepared_statements_cache::authorized_prepared_statements_cache_stats_updater, 256ul&gt;::entry, boost::intrusive::unordered_node_traits&lt;void*, true, false&gt;,  (229 samples, 0.48%)</title><rect x="735.3" y="341" width="5.7" height="15.0" fill="rgb(218,96,34)" rx="2" ry="2" />
<text  x="738.31" y="351.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (29 samples, 0.06%)</title><rect x="648.2" y="485" width="0.8" height="15.0" fill="rgb(239,5,46)" rx="2" ry="2" />
<text  x="651.24" y="495.5" ></text>
</g>
<g >
<title>seastar::reactor::del_timer (6 samples, 0.01%)</title><rect x="695.3" y="421" width="0.1" height="15.0" fill="rgb(240,179,39)" rx="2" ry="2" />
<text  x="698.29" y="431.5" ></text>
</g>
<g >
<title>utils::tuple_hash::operator (5 samples, 0.01%)</title><rect x="722.2" y="357" width="0.1" height="15.0" fill="rgb(250,158,47)" rx="2" ry="2" />
<text  x="725.17" y="367.5" ></text>
</g>
<g >
<title>std::__detail::__variant::_Move_ctor_base&lt;false, flat_mutation_reader, reader_concurrency_semaphore::inactive_read_handle&gt;::_Move_ctor_base (12 samples, 0.03%)</title><rect x="609.2" y="389" width="0.3" height="15.0" fill="rgb(245,43,17)" rx="2" ry="2" />
<text  x="612.18" y="399.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;clustering_key_prefix&gt; &gt;::_Optional_payload_base (8 samples, 0.02%)</title><rect x="93.4" y="405" width="0.2" height="15.0" fill="rgb(246,114,48)" rx="2" ry="2" />
<text  x="96.45" y="415.5" ></text>
</g>
<g >
<title>boost::intrusive::circular_list_algorithms&lt;boost::intrusive::list_node_traits&lt;void*&gt; &gt;::swap_nodes (32 samples, 0.07%)</title><rect x="732.5" y="357" width="0.8" height="15.0" fill="rgb(236,137,48)" rx="2" ry="2" />
<text  x="735.47" y="367.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (11 samples, 0.02%)</title><rect x="1081.6" y="325" width="0.2" height="15.0" fill="rgb(221,181,1)" rx="2" ry="2" />
<text  x="1084.57" y="335.5" ></text>
</g>
<g >
<title>std::hash&lt;auth::resource&gt;::hash_data (92 samples, 0.19%)</title><rect x="812.8" y="325" width="2.3" height="15.0" fill="rgb(236,151,2)" rx="2" ry="2" />
<text  x="815.85" y="335.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::reserve (65 samples, 0.14%)</title><rect x="521.0" y="309" width="1.7" height="15.0" fill="rgb(241,110,14)" rx="2" ry="2" />
<text  x="524.04" y="319.5" ></text>
</g>
<g >
<title>standard_allocation_strategy::alloc (177 samples, 0.37%)</title><rect x="182.7" y="69" width="4.4" height="15.0" fill="rgb(209,214,54)" rx="2" ry="2" />
<text  x="185.68" y="79.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;flat_mutation_reader::peek (8 samples, 0.02%)</title><rect x="414.4" y="405" width="0.2" height="15.0" fill="rgb(205,39,14)" rx="2" ry="2" />
<text  x="417.35" y="415.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (1,245 samples, 2.63%)</title><rect x="164.2" y="133" width="31.0" height="15.0" fill="rgb(222,143,17)" rx="2" ry="2" />
<text  x="167.16" y="143.5" >co..</text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::do_fill_buffer (3,446 samples, 7.28%)</title><rect x="138.4" y="261" width="85.9" height="15.0" fill="rgb(222,158,36)" rx="2" ry="2" />
<text  x="141.43" y="271.5" >partition_..</text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (6 samples, 0.01%)</title><rect x="636.2" y="469" width="0.1" height="15.0" fill="rgb(223,44,0)" rx="2" ry="2" />
<text  x="639.15" y="479.5" ></text>
</g>
<g >
<title>seastar::future&lt;service::digest_read_result&gt;::get0 (6 samples, 0.01%)</title><rect x="680.1" y="453" width="0.2" height="15.0" fill="rgb(231,207,45)" rx="2" ry="2" />
<text  x="683.11" y="463.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (20 samples, 0.04%)</title><rect x="72.5" y="453" width="0.5" height="15.0" fill="rgb(232,139,8)" rx="2" ry="2" />
<text  x="75.51" y="463.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::allocate (10 samples, 0.02%)</title><rect x="93.0" y="405" width="0.3" height="15.0" fill="rgb(216,161,7)" rx="2" ry="2" />
<text  x="96.05" y="415.5" ></text>
</g>
<g >
<title>seastar::future&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::forward_to (5 samples, 0.01%)</title><rect x="646.8" y="485" width="0.1" height="15.0" fill="rgb(233,99,44)" rx="2" ry="2" />
<text  x="649.80" y="495.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (382 samples, 0.81%)</title><rect x="1179.3" y="629" width="9.6" height="15.0" fill="rgb(226,192,4)" rx="2" ry="2" />
<text  x="1182.33" y="639.5" ></text>
</g>
<g >
<title>auth::operator== (7 samples, 0.01%)</title><rect x="792.4" y="149" width="0.2" height="15.0" fill="rgb(225,74,38)" rx="2" ry="2" />
<text  x="795.43" y="159.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="929.1" y="357" width="0.1" height="15.0" fill="rgb(245,65,46)" rx="2" ry="2" />
<text  x="932.11" y="367.5" ></text>
</g>
<g >
<title>cql3_parser::CqlParser::updateStatement (113 samples, 0.24%)</title><rect x="17.9" y="373" width="2.8" height="15.0" fill="rgb(236,36,4)" rx="2" ry="2" />
<text  x="20.88" y="383.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::reset_state (532 samples, 1.12%)</title><rect x="225.0" y="245" width="13.3" height="15.0" fill="rgb(229,218,7)" rx="2" ry="2" />
<text  x="228.02" y="255.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;mutation_querier&gt;::_M_reset (5 samples, 0.01%)</title><rect x="407.5" y="245" width="0.1" height="15.0" fill="rgb(251,144,42)" rx="2" ry="2" />
<text  x="410.50" y="255.5" ></text>
</g>
<g >
<title>absl::hash_internal::AbslHashValue&lt;absl::hash_internal::HashState&gt; (27 samples, 0.06%)</title><rect x="1067.7" y="277" width="0.7" height="15.0" fill="rgb(207,23,16)" rx="2" ry="2" />
<text  x="1070.68" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::shared_ptr&lt;cql_transport::messages::result_message&gt; &gt;::clear (10 samples, 0.02%)</title><rect x="654.8" y="469" width="0.2" height="15.0" fill="rgb(248,160,18)" rx="2" ry="2" />
<text  x="657.75" y="479.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::find&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (14 samples, 0.03%)</title><rect x="841.0" y="405" width="0.4" height="15.0" fill="rgb(217,98,12)" rx="2" ry="2" />
<text  x="844.02" y="415.5" ></text>
</g>
<g >
<title>_ZN7seastar6futureINS_10shared_ptrIN13cql_transport8messages14result_messageEEEE8scheduleINS_8internal22promise_base_with_typeIvEEZNS6_14discard_resultEvEUlDpOT_E_ZNS6_14then_impl_nrvoISE_NS0_IvEEEET0_OT_EUlOSA_RSE_ONS_12future_stateIS5_EEE_EEvSJ_OSH_OT1_ (89 samples, 0.19%)</title><rect x="708.3" y="437" width="2.2" height="15.0" fill="rgb(243,156,19)" rx="2" ry="2" />
<text  x="711.31" y="447.5" ></text>
</g>
<g >
<title>std::optional&lt;position_in_partition&gt;::operator=&lt;position_in_partition&gt; (8 samples, 0.02%)</title><rect x="223.9" y="245" width="0.2" height="15.0" fill="rgb(224,49,52)" rx="2" ry="2" />
<text  x="226.92" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_find_before_node (8 samples, 0.02%)</title><rect x="1106.4" y="341" width="0.2" height="15.0" fill="rgb(236,38,14)" rx="2" ry="2" />
<text  x="1109.38" y="351.5" ></text>
</g>
<g >
<title>bytes_view_hasher::update (5 samples, 0.01%)</title><rect x="738.3" y="277" width="0.2" height="15.0" fill="rgb(208,161,11)" rx="2" ry="2" />
<text  x="741.35" y="287.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::then_impl&lt;mutation_fragment_merger&lt;mutation_reader_merger&gt;::operator (173 samples, 0.37%)</title><rect x="256.8" y="341" width="4.3" height="15.0" fill="rgb(244,129,6)" rx="2" ry="2" />
<text  x="259.81" y="351.5" ></text>
</g>
<g >
<title>bound_view::from_range_start&lt;nonwrapping_interval&gt; (24 samples, 0.05%)</title><rect x="232.1" y="181" width="0.6" height="15.0" fill="rgb(241,67,37)" rx="2" ry="2" />
<text  x="235.12" y="191.5" ></text>
</g>
<g >
<title>reader_concurrency_semaphore::maybe_admit_waiters (65 samples, 0.14%)</title><rect x="387.3" y="213" width="1.6" height="15.0" fill="rgb(232,2,49)" rx="2" ry="2" />
<text  x="390.28" y="223.5" ></text>
</g>
<g >
<title>range_tombstone_accumulator::drop_unneeded_tombstones (9 samples, 0.02%)</title><rect x="361.6" y="213" width="0.2" height="15.0" fill="rgb(223,166,42)" rx="2" ry="2" />
<text  x="364.60" y="223.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (12 samples, 0.03%)</title><rect x="219.1" y="213" width="0.3" height="15.0" fill="rgb(240,191,14)" rx="2" ry="2" />
<text  x="222.11" y="223.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.04%)</title><rect x="45.7" y="501" width="0.4" height="15.0" fill="rgb(227,169,30)" rx="2" ry="2" />
<text  x="48.68" y="511.5" ></text>
</g>
<g >
<title>seastar::weak_ptr&lt;cql3::statements::prepared_statement&gt;::swap (32 samples, 0.07%)</title><rect x="715.5" y="405" width="0.8" height="15.0" fill="rgb(253,202,50)" rx="2" ry="2" />
<text  x="718.51" y="415.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;query::result_memory_accounter&gt;::clear (14 samples, 0.03%)</title><rect x="594.1" y="437" width="0.4" height="15.0" fill="rgb(241,28,22)" rx="2" ry="2" />
<text  x="597.14" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (11 samples, 0.02%)</title><rect x="52.7" y="469" width="0.2" height="15.0" fill="rgb(205,72,22)" rx="2" ry="2" />
<text  x="55.66" y="479.5" ></text>
</g>
<g >
<title>partition_key::from_range&lt;std::vector&lt;managed_bytes, std::allocator&lt;managed_bytes&gt; &gt; const&amp;&gt; (150 samples, 0.32%)</title><rect x="930.7" y="389" width="3.7" height="15.0" fill="rgb(248,17,32)" rx="2" ry="2" />
<text  x="933.65" y="399.5" ></text>
</g>
<g >
<title>utils::timestamped_val&lt;std::unique_ptr&lt;cql3::statements::prepared_statement, std::default_delete&lt;cql3::statements::prepared_statement&gt; &gt;, std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt;, cql3::prepared_cache_entry_size, utils::tuple_hash, std::equal_to&lt;std::pair&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt;, long&gt; &gt;, cql3::prepared_statements_cache::prepared_cache_stats_updater&gt;::touch (6 samples, 0.01%)</title><rect x="723.1" y="405" width="0.2" height="15.0" fill="rgb(237,50,53)" rx="2" ry="2" />
<text  x="726.12" y="415.5" ></text>
</g>
<g >
<title>seastar::timer&lt;seastar::lowres_clock&gt;::cancel (17 samples, 0.04%)</title><rect x="695.5" y="421" width="0.4" height="15.0" fill="rgb(225,4,30)" rx="2" ry="2" />
<text  x="698.47" y="431.5" ></text>
</g>
<g >
<title>std::unique_ptr&lt;query::specific_ranges, std::default_delete&lt;query::specific_ranges&gt; &gt;::~unique_ptr (10 samples, 0.02%)</title><rect x="39.2" y="437" width="0.2" height="15.0" fill="rgb(250,85,52)" rx="2" ry="2" />
<text  x="42.20" y="447.5" ></text>
</g>
<g >
<title>seastar::internal::do_until_state&lt;executor&lt;test_read (8 samples, 0.02%)</title><rect x="24.9" y="517" width="0.2" height="15.0" fill="rgb(242,66,34)" rx="2" ry="2" />
<text  x="27.86" y="527.5" ></text>
</g>
<g >
<title>seastar::memory::stats (36 samples, 0.08%)</title><rect x="493.3" y="245" width="0.9" height="15.0" fill="rgb(251,17,52)" rx="2" ry="2" />
<text  x="496.34" y="255.5" ></text>
</g>
<g >
<title>seastar::scheduling_group_get_specific&lt;service::storage_proxy_stats::stats&gt; (17 samples, 0.04%)</title><rect x="1008.2" y="293" width="0.5" height="15.0" fill="rgb(213,131,54)" rx="2" ry="2" />
<text  x="1011.24" y="303.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::~basic_sstring (6 samples, 0.01%)</title><rect x="828.5" y="421" width="0.1" height="15.0" fill="rgb(247,127,32)" rx="2" ry="2" />
<text  x="831.48" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; &gt;::_Optional_payload_base (16 samples, 0.03%)</title><rect x="733.9" y="357" width="0.4" height="15.0" fill="rgb(236,207,28)" rx="2" ry="2" />
<text  x="736.89" y="367.5" ></text>
</g>
<g >
<title>absl::container_internal::operator== (13 samples, 0.03%)</title><rect x="820.4" y="325" width="0.3" height="15.0" fill="rgb(253,158,44)" rx="2" ry="2" />
<text  x="823.38" y="335.5" ></text>
</g>
<g >
<title>std::__detail::__variant::__gen_vtable_impl&lt;std::__detail::__variant::_Multi_array&lt;std::__detail::__variant::__variant_cookie  (10 samples, 0.02%)</title><rect x="609.5" y="389" width="0.2" height="15.0" fill="rgb(243,133,9)" rx="2" ry="2" />
<text  x="612.47" y="399.5" ></text>
</g>
<g >
<title>operator delete (8 samples, 0.02%)</title><rect x="35.5" y="453" width="0.2" height="15.0" fill="rgb(239,16,16)" rx="2" ry="2" />
<text  x="38.51" y="463.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (11 samples, 0.02%)</title><rect x="677.0" y="469" width="0.3" height="15.0" fill="rgb(222,17,15)" rx="2" ry="2" />
<text  x="679.99" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (6 samples, 0.01%)</title><rect x="383.9" y="181" width="0.2" height="15.0" fill="rgb(220,65,28)" rx="2" ry="2" />
<text  x="386.91" y="191.5" ></text>
</g>
<g >
<title>query::consume_page&lt; (5,432 samples, 11.48%)</title><rect x="278.3" y="389" width="135.4" height="15.0" fill="rgb(217,116,21)" rx="2" ry="2" />
<text  x="281.30" y="399.5" >query::consume_pa..</text>
</g>
<g >
<title>flat_mutation_reader::consume_in_thread&lt;sstables::sstable_writer&gt; (10 samples, 0.02%)</title><rect x="22.5" y="501" width="0.3" height="15.0" fill="rgb(224,115,32)" rx="2" ry="2" />
<text  x="25.54" y="511.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (71 samples, 0.15%)</title><rect x="991.3" y="309" width="1.7" height="15.0" fill="rgb(207,59,4)" rx="2" ry="2" />
<text  x="994.26" y="319.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::clear (9 samples, 0.02%)</title><rect x="240.6" y="197" width="0.2" height="15.0" fill="rgb(225,10,7)" rx="2" ry="2" />
<text  x="243.62" y="207.5" ></text>
</g>
<g >
<title>seastar::lw_shared_ptr&lt;std::function&lt;flat_mutation_reader  (36 samples, 0.08%)</title><rect x="610.7" y="405" width="0.9" height="15.0" fill="rgb(238,33,24)" rx="2" ry="2" />
<text  x="613.75" y="415.5" ></text>
</g>
<g >
<title>query_state::query_state (6 samples, 0.01%)</title><rect x="58.7" y="453" width="0.2" height="15.0" fill="rgb(222,35,44)" rx="2" ry="2" />
<text  x="61.72" y="463.5" ></text>
</g>
<g >
<title>seastar::net::inet_address::operator== (6 samples, 0.01%)</title><rect x="1100.5" y="261" width="0.2" height="15.0" fill="rgb(223,114,23)" rx="2" ry="2" />
<text  x="1103.52" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (12 samples, 0.03%)</title><rect x="623.8" y="453" width="0.3" height="15.0" fill="rgb(250,109,27)" rx="2" ry="2" />
<text  x="626.76" y="463.5" ></text>
</g>
<g >
<title>tracking_allocator&lt;mutation_fragment&gt;::deallocate (38 samples, 0.08%)</title><rect x="563.7" y="357" width="1.0" height="15.0" fill="rgb(212,108,48)" rx="2" ry="2" />
<text  x="566.75" y="367.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (7 samples, 0.01%)</title><rect x="310.5" y="197" width="0.2" height="15.0" fill="rgb(243,26,4)" rx="2" ry="2" />
<text  x="313.53" y="207.5" ></text>
</g>
<g >
<title>partition_snapshot::versions (5 samples, 0.01%)</title><rect x="207.7" y="133" width="0.1" height="15.0" fill="rgb(247,134,20)" rx="2" ry="2" />
<text  x="210.66" y="143.5" ></text>
</g>
<g >
<title>seastar::memory::small_pool::trim_free_list (30 samples, 0.06%)</title><rect x="32.0" y="485" width="0.8" height="15.0" fill="rgb(239,132,47)" rx="2" ry="2" />
<text  x="35.02" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state_base::any::operator= (8 samples, 0.02%)</title><rect x="829.4" y="389" width="0.2" height="15.0" fill="rgb(226,50,13)" rx="2" ry="2" />
<text  x="832.40" y="399.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;seastar::future&lt;void&gt;, seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (35 samples, 0.07%)</title><rect x="1143.3" y="453" width="0.9" height="15.0" fill="rgb(209,43,13)" rx="2" ry="2" />
<text  x="1146.30" y="463.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.05%)</title><rect x="652.2" y="421" width="0.6" height="15.0" fill="rgb(233,119,38)" rx="2" ry="2" />
<text  x="655.21" y="431.5" ></text>
</g>
<g >
<title>auth::resource::resource (113 samples, 0.24%)</title><rect x="762.9" y="389" width="2.8" height="15.0" fill="rgb(228,142,47)" rx="2" ry="2" />
<text  x="765.86" y="399.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;seastar::shared_ptr&lt;cql3::column_identifier_raw&gt;, std::unique_ptr&lt;cql3::operation::raw_update, std::default_delete&lt;cql3::operation::raw_update&gt; &gt; &gt; (9 samples, 0.02%)</title><rect x="19.0" y="293" width="0.2" height="15.0" fill="rgb(243,10,30)" rx="2" ry="2" />
<text  x="22.03" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;utils::UUID, std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt;, std::allocator&lt;std::pair&lt;utils::UUID const, seastar::lw_shared_ptr&lt;table&gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;utils::UUID&gt;, std::hash&lt;utils::UUID&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::find (49 samples, 0.10%)</title><rect x="1062.9" y="309" width="1.2" height="15.0" fill="rgb(220,76,28)" rx="2" ry="2" />
<text  x="1065.89" y="319.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;range_tombstone, std::allocator&lt;range_tombstone&gt; &gt;::_M_initialize_map (6 samples, 0.01%)</title><rect x="540.0" y="389" width="0.1" height="15.0" fill="rgb(244,62,47)" rx="2" ry="2" />
<text  x="542.96" y="399.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::done (5 samples, 0.01%)</title><rect x="584.0" y="421" width="0.1" height="15.0" fill="rgb(205,219,1)" rx="2" ry="2" />
<text  x="586.97" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;interval_bound&lt;dht::ring_position&gt; &gt;::_M_reset (11 samples, 0.02%)</title><rect x="625.1" y="453" width="0.2" height="15.0" fill="rgb(237,173,12)" rx="2" ry="2" />
<text  x="628.06" y="463.5" ></text>
</g>
<g >
<title>tests::random::get_int&lt;unsigned long&gt; (83 samples, 0.18%)</title><rect x="859.3" y="469" width="2.1" height="15.0" fill="rgb(254,53,19)" rx="2" ry="2" />
<text  x="862.30" y="479.5" ></text>
</g>
<g >
<title>logalloc::segment_pool::refill_emergency_reserve (7 samples, 0.01%)</title><rect x="481.3" y="309" width="0.2" height="15.0" fill="rgb(213,30,30)" rx="2" ry="2" />
<text  x="484.32" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::allocate_aligned (123 samples, 0.26%)</title><rect x="184.0" y="37" width="3.0" height="15.0" fill="rgb(230,115,23)" rx="2" ry="2" />
<text  x="186.95" y="47.5" ></text>
</g>
<g >
<title>mutation_reader_merger::operator (238 samples, 0.50%)</title><rect x="244.1" y="293" width="5.9" height="15.0" fill="rgb(205,10,2)" rx="2" ry="2" />
<text  x="247.07" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::clear (6 samples, 0.01%)</title><rect x="1170.0" y="485" width="0.2" height="15.0" fill="rgb(252,191,5)" rx="2" ry="2" />
<text  x="1173.00" y="495.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::rpc::tuple&lt;seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;, cache_temperature&gt; &gt;::move_it (8 samples, 0.02%)</title><rect x="628.0" y="469" width="0.2" height="15.0" fill="rgb(214,187,2)" rx="2" ry="2" />
<text  x="631.00" y="479.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (16 samples, 0.03%)</title><rect x="1138.4" y="405" width="0.4" height="15.0" fill="rgb(217,40,4)" rx="2" ry="2" />
<text  x="1141.41" y="415.5" ></text>
</g>
<g >
<title>query::result_memory_accounter::check_local_limit (9 samples, 0.02%)</title><rect x="294.7" y="197" width="0.2" height="15.0" fill="rgb(237,73,43)" rx="2" ry="2" />
<text  x="297.70" y="207.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_base&lt;cell_and_hash, compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::indirect_layout&lt;cell_and_hash,  (16 samples, 0.03%)</title><rect x="317.9" y="181" width="0.4" height="15.0" fill="rgb(229,0,40)" rx="2" ry="2" />
<text  x="320.87" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;nonwrapping_interval&lt;dht::token&gt;, std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;nonwrapping_interval&lt;dht::token&gt; const, std::vector&lt;utils::UUID, std::allocator&lt;utils::UUID&gt; &gt; &gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::hash&lt;nonwrapping_interval&lt;dht::token&gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::~_Hashtable (66 samples, 0.14%)</title><rect x="1170.2" y="485" width="1.6" height="15.0" fill="rgb(220,67,20)" rx="2" ry="2" />
<text  x="1173.15" y="495.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;gms::inet_address, 3ul&gt;::small_vector (57 samples, 0.12%)</title><rect x="1167.4" y="469" width="1.4" height="15.0" fill="rgb(239,78,53)" rx="2" ry="2" />
<text  x="1170.39" y="479.5" ></text>
</g>
<g >
<title>managed_bytes::~managed_bytes (5 samples, 0.01%)</title><rect x="1007.3" y="293" width="0.1" height="15.0" fill="rgb(247,24,38)" rx="2" ry="2" />
<text  x="1010.27" y="303.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;single_node_cql_env::core_local_state&gt;::local (6 samples, 0.01%)</title><rect x="835.4" y="437" width="0.1" height="15.0" fill="rgb(254,124,35)" rx="2" ry="2" />
<text  x="838.39" y="447.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::optimized_optional&lt;mutation_fragment&gt; &gt;::take_value (8 samples, 0.02%)</title><rect x="134.7" y="277" width="0.2" height="15.0" fill="rgb(208,58,50)" rx="2" ry="2" />
<text  x="137.69" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;nonwrapping_interval&lt;clustering_key_prefix&gt;, std::allocator&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt; &gt;::~vector (9 samples, 0.02%)</title><rect x="507.4" y="293" width="0.2" height="15.0" fill="rgb(224,86,15)" rx="2" ry="2" />
<text  x="510.38" y="303.5" ></text>
</g>
<g >
<title>compound_type&lt; (74 samples, 0.16%)</title><rect x="916.1" y="373" width="1.9" height="15.0" fill="rgb(228,31,21)" rx="2" ry="2" />
<text  x="919.14" y="383.5" ></text>
</g>
<g >
<title>database::apply_with_commitlog (34 samples, 0.07%)</title><rect x="1143.3" y="325" width="0.8" height="15.0" fill="rgb(229,141,25)" rx="2" ry="2" />
<text  x="1146.30" y="335.5" ></text>
</g>
<g >
<title>allocation_strategy::get_standard_migrator&lt;blob_storage&gt; (7 samples, 0.01%)</title><rect x="182.4" y="69" width="0.2" height="15.0" fill="rgb(238,197,43)" rx="2" ry="2" />
<text  x="185.41" y="79.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="564.5" y="325" width="0.1" height="15.0" fill="rgb(237,76,39)" rx="2" ry="2" />
<text  x="567.50" y="335.5" ></text>
</g>
<g >
<title>seastar::future&lt;void&gt;::get0 (6 samples, 0.01%)</title><rect x="43.3" y="485" width="0.2" height="15.0" fill="rgb(209,210,24)" rx="2" ry="2" />
<text  x="46.33" y="495.5" ></text>
</g>
<g >
<title>auth::data_resource_view::keyspace (7 samples, 0.01%)</title><rect x="798.4" y="117" width="0.1" height="15.0" fill="rgb(226,81,18)" rx="2" ry="2" />
<text  x="801.36" y="127.5" ></text>
</g>
<g >
<title>seastar::futurize&lt;seastar::future&lt;std::tuple&lt;std::optional&lt;clustering_key_prefix&gt; &gt; &gt; &gt;::satisfy_with_result_of&lt;seastar::future&lt;mutation_fragment*&gt;::then_impl_nrvo&lt;query::consume_page&lt; (26 samples, 0.05%)</title><rect x="674.9" y="485" width="0.6" height="15.0" fill="rgb(213,160,20)" rx="2" ry="2" />
<text  x="677.90" y="495.5" ></text>
</g>
<g >
<title>cql3::restrictions::(anonymous namespace)::range_from_bytes (13 samples, 0.03%)</title><rect x="879.0" y="421" width="0.3" height="15.0" fill="rgb(248,92,38)" rx="2" ry="2" />
<text  x="881.99" y="431.5" ></text>
</g>
<g >
<title>std::_Optional_payload_base&lt;nonwrapping_interval&lt;clustering_key_prefix&gt; &gt;::_M_reset (6 samples, 0.01%)</title><rect x="223.6" y="245" width="0.1" height="15.0" fill="rgb(251,197,39)" rx="2" ry="2" />
<text  x="226.57" y="255.5" ></text>
</g>
<g >
<title>free (32 samples, 0.07%)</title><rect x="396.9" y="197" width="0.7" height="15.0" fill="rgb(233,58,38)" rx="2" ry="2" />
<text  x="399.85" y="207.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (78 samples, 0.16%)</title><rect x="956.5" y="389" width="1.9" height="15.0" fill="rgb(217,114,51)" rx="2" ry="2" />
<text  x="959.48" y="399.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;tracking_allocator&lt;mutation_fragment&gt; &gt;::_S_destroy&lt;tracking_allocator&lt;mutation_fragment&gt;, mutation_fragment&gt; (6 samples, 0.01%)</title><rect x="125.6" y="245" width="0.2" height="15.0" fill="rgb(246,76,2)" rx="2" ry="2" />
<text  x="128.61" y="255.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::~small_vector (5 samples, 0.01%)</title><rect x="573.9" y="373" width="0.1" height="15.0" fill="rgb(217,226,6)" rx="2" ry="2" />
<text  x="576.87" y="383.5" ></text>
</g>
<g >
<title>managed_bytes::free_chain (140 samples, 0.30%)</title><rect x="392.5" y="197" width="3.5" height="15.0" fill="rgb(217,168,41)" rx="2" ry="2" />
<text  x="395.49" y="207.5" ></text>
</g>
<g >
<title>ser::writer_of_std__optional__qr_cell&lt;bytes_ostream&gt;::write (19 samples, 0.04%)</title><rect x="324.5" y="181" width="0.5" height="15.0" fill="rgb(248,14,31)" rx="2" ry="2" />
<text  x="327.50" y="191.5" ></text>
</g>
<g >
<title>schema::position (6 samples, 0.01%)</title><rect x="938.6" y="405" width="0.2" height="15.0" fill="rgb(240,141,17)" rx="2" ry="2" />
<text  x="941.61" y="415.5" ></text>
</g>
<g >
<title>std::hash&lt;seastar::basic_sstring&lt;signed char, unsigned int, 31u, false&gt; &gt;::operator (5 samples, 0.01%)</title><rect x="719.6" y="341" width="0.2" height="15.0" fill="rgb(239,161,1)" rx="2" ry="2" />
<text  x="722.63" y="351.5" ></text>
</g>
<g >
<title>operator new (39 samples, 0.08%)</title><rect x="942.7" y="373" width="1.0" height="15.0" fill="rgb(243,48,16)" rx="2" ry="2" />
<text  x="945.70" y="383.5" ></text>
</g>
<g >
<title>std::__optional_hash_call_base&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, true&gt;::operator (12 samples, 0.03%)</title><rect x="814.2" y="293" width="0.3" height="15.0" fill="rgb(210,228,34)" rx="2" ry="2" />
<text  x="817.24" y="303.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="897.8" y="277" width="0.4" height="15.0" fill="rgb(254,82,32)" rx="2" ry="2" />
<text  x="900.84" y="287.5" ></text>
</g>
<g >
<title>std::apply&lt;auth::get_permissions (1,072 samples, 2.27%)</title><rect x="779.1" y="293" width="26.8" height="15.0" fill="rgb(221,143,24)" rx="2" ry="2" />
<text  x="782.14" y="303.5" >s..</text>
</g>
<g >
<title>logalloc::allocating_section::reserve (57 samples, 0.12%)</title><rect x="136.9" y="261" width="1.4" height="15.0" fill="rgb(229,130,44)" rx="2" ry="2" />
<text  x="139.91" y="271.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::has_slice_or_needs_filtering (40 samples, 0.08%)</title><rect x="948.2" y="389" width="1.0" height="15.0" fill="rgb(205,219,9)" rx="2" ry="2" />
<text  x="951.18" y="399.5" ></text>
</g>
<g >
<title>auth::resource::parent (106 samples, 0.22%)</title><rect x="773.1" y="325" width="2.6" height="15.0" fill="rgb(228,138,44)" rx="2" ry="2" />
<text  x="776.06" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl&gt;::_S_destroy&lt;seastar::circular_buffer&lt;mutation_fragment, tracking_allocator&lt;mutation_fragment&gt; &gt;::impl, mutation_fragment&gt; (13 samples, 0.03%)</title><rect x="268.8" y="293" width="0.3" height="15.0" fill="rgb(210,182,37)" rx="2" ry="2" />
<text  x="271.82" y="303.5" ></text>
</g>
<g >
<title>std::__copy_n_a&lt;legacy_compound_view&lt;compound_type&lt; (181 samples, 0.38%)</title><rect x="922.9" y="357" width="4.5" height="15.0" fill="rgb(231,212,46)" rx="2" ry="2" />
<text  x="925.90" y="367.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (532 samples, 1.12%)</title><rect x="173.9" y="101" width="13.3" height="15.0" fill="rgb(228,182,35)" rx="2" ry="2" />
<text  x="176.91" y="111.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (12 samples, 0.03%)</title><rect x="650.8" y="469" width="0.3" height="15.0" fill="rgb(223,149,41)" rx="2" ry="2" />
<text  x="653.79" y="479.5" ></text>
</g>
<g >
<title>query::querier_base::~querier_base (287 samples, 0.61%)</title><rect x="574.7" y="437" width="7.2" height="15.0" fill="rgb(218,10,42)" rx="2" ry="2" />
<text  x="577.74" y="447.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;std::pair&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;, nonwrapping_interval&lt;dht::token&gt; &gt;, 1ul&gt;::emplace_back&lt;seastar::shared_ptr&lt;service::abstract_read_executor&gt;&amp;, nonwrapping_interval&lt;dht::token&gt; &gt; (10 samples, 0.02%)</title><rect x="1107.6" y="357" width="0.2" height="15.0" fill="rgb(221,57,9)" rx="2" ry="2" />
<text  x="1110.57" y="367.5" ></text>
</g>
<g >
<title>cql3::expr::find_atom&lt;cql3::expr::find (20 samples, 0.04%)</title><rect x="639.9" y="437" width="0.5" height="15.0" fill="rgb(205,27,54)" rx="2" ry="2" />
<text  x="642.87" y="447.5" ></text>
</g>
<g >
<title>partition_snapshot_flat_reader&lt;false, partition_snapshot_read_accounter&gt;::lsa_partition_reader::upper_bound&lt;mutation_partition, schema const&amp;, nonwrapping_interval&lt;clustering_key_prefix&gt; const&amp;&gt; (16 samples, 0.03%)</title><rect x="209.4" y="149" width="0.4" height="15.0" fill="rgb(233,17,20)" rx="2" ry="2" />
<text  x="212.43" y="159.5" ></text>
</g>
<g >
<title>cql3_parser::CqlLexer::mQUOTED_NAME (5 samples, 0.01%)</title><rect x="17.3" y="261" width="0.2" height="15.0" fill="rgb(233,33,3)" rx="2" ry="2" />
<text  x="20.33" y="271.5" ></text>
</g>
<g >
<title>seastar::memory::allocate (60 samples, 0.13%)</title><rect x="853.9" y="421" width="1.5" height="15.0" fill="rgb(252,87,44)" rx="2" ry="2" />
<text  x="856.91" y="431.5" ></text>
</g>
<g >
<title>seastar::internal::promise_base_with_type&lt;service::storage_proxy_coordinator_query_result&gt;::set_urgent_state (80 samples, 0.17%)</title><rect x="671.6" y="485" width="2.0" height="15.0" fill="rgb(207,107,19)" rx="2" ry="2" />
<text  x="674.58" y="495.5" ></text>
</g>
<g >
<title>seastar::deferred_action&lt;table::query (76 samples, 0.16%)</title><rect x="590.7" y="437" width="1.8" height="15.0" fill="rgb(221,108,21)" rx="2" ry="2" />
<text  x="593.65" y="447.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="556.5" y="261" width="0.1" height="15.0" fill="rgb(250,33,52)" rx="2" ry="2" />
<text  x="559.47" y="271.5" ></text>
</g>
<g >
<title>seastar::noncopyable_function&lt;seastar::future&lt;void&gt;  (5 samples, 0.01%)</title><rect x="67.9" y="373" width="0.2" height="15.0" fill="rgb(207,26,22)" rx="2" ry="2" />
<text  x="70.94" y="383.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;cql3::raw_value const*, cql3::raw_value*&gt; (5 samples, 0.01%)</title><rect x="857.1" y="453" width="0.1" height="15.0" fill="rgb(222,218,46)" rx="2" ry="2" />
<text  x="860.05" y="463.5" ></text>
</g>
<g >
<title>seastar::sharded&lt;database&gt;::local (17 samples, 0.04%)</title><rect x="843.1" y="421" width="0.5" height="15.0" fill="rgb(221,61,44)" rx="2" ry="2" />
<text  x="846.14" y="431.5" ></text>
</g>
<g >
<title>seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;::basic_sstring (7 samples, 0.01%)</title><rect x="764.5" y="341" width="0.2" height="15.0" fill="rgb(214,81,5)" rx="2" ry="2" />
<text  x="767.53" y="351.5" ></text>
</g>
<g >
<title>cql3::restrictions::single_column_primary_key_restrictions&lt;partition_key&gt;::size (8 samples, 0.02%)</title><rect x="950.8" y="405" width="0.2" height="15.0" fill="rgb(235,147,11)" rx="2" ry="2" />
<text  x="953.80" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::push_mutation_fragment&lt;mutation_fragment&gt; (19 samples, 0.04%)</title><rect x="139.3" y="245" width="0.4" height="15.0" fill="rgb(230,61,1)" rx="2" ry="2" />
<text  x="142.27" y="255.5" ></text>
</g>
<g >
<title>reader_permit::consume (6 samples, 0.01%)</title><rect x="498.4" y="197" width="0.2" height="15.0" fill="rgb(206,174,14)" rx="2" ry="2" />
<text  x="501.43" y="207.5" ></text>
</g>
<g >
<title>cql3::statements::select_statement::do_get_limit (5 samples, 0.01%)</title><rect x="1113.5" y="405" width="0.1" height="15.0" fill="rgb(225,72,51)" rx="2" ry="2" />
<text  x="1116.48" y="415.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;unsigned int, 8ul&gt;::small_vector (5 samples, 0.01%)</title><rect x="612.7" y="437" width="0.2" height="15.0" fill="rgb(231,101,8)" rx="2" ry="2" />
<text  x="615.74" y="447.5" ></text>
</g>
<g >
<title>seastar::expiring_fifo&lt;reader_concurrency_semaphore::entry, reader_concurrency_semaphore::expiry_handler, seastar::lowres_clock&gt;::pop_front (132 samples, 0.28%)</title><rect x="64.9" y="405" width="3.3" height="15.0" fill="rgb(230,42,41)" rx="2" ry="2" />
<text  x="67.90" y="415.5" ></text>
</g>
<g >
<title>flat_mutation_reader::impl::consume_in_thread&lt;sstables::sstable_writer, flat_mutation_reader::no_filter&gt; (10 samples, 0.02%)</title><rect x="22.5" y="469" width="0.3" height="15.0" fill="rgb(216,171,18)" rx="2" ry="2" />
<text  x="25.54" y="479.5" ></text>
</g>
<g >
<title>logalloc::allocating_section::guard::guard (5 samples, 0.01%)</title><rect x="492.2" y="261" width="0.1" height="15.0" fill="rgb(229,132,26)" rx="2" ry="2" />
<text  x="495.22" y="271.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;&amp;, antlr3::CommonToken&lt;antlr3::Traits&lt;cql3_parser::CqlLexer, cql3_parser::CqlParser, antlr3::CustomTraitsBase, antlr3::Empty&gt; &gt;*&gt;::operator[] (5 samples, 0.01%)</title><rect x="18.8" y="181" width="0.1" height="15.0" fill="rgb(230,123,30)" rx="2" ry="2" />
<text  x="21.75" y="191.5" ></text>
</g>
<g >
<title>seastar::foreign_ptr&lt;seastar::lw_shared_ptr&lt;query::result&gt; &gt;::~foreign_ptr (18 samples, 0.04%)</title><rect x="619.5" y="485" width="0.4" height="15.0" fill="rgb(248,223,54)" rx="2" ry="2" />
<text  x="622.50" y="495.5" ></text>
</g>
<g >
<title>managed_bytes::managed_bytes (14 samples, 0.03%)</title><rect x="936.2" y="389" width="0.3" height="15.0" fill="rgb(253,27,40)" rx="2" ry="2" />
<text  x="939.19" y="399.5" ></text>
</g>
<g >
<title>utils::small_vector&lt;mutation_reader_merger::reader_and_last_fragment_kind, 4ul&gt;::emplace_back&lt;std::_List_iterator&lt;flat_mutation_reader&gt;, mutation_fragment::kind&gt; (14 samples, 0.03%)</title><rect x="251.7" y="309" width="0.3" height="15.0" fill="rgb(251,216,36)" rx="2" ry="2" />
<text  x="254.67" y="319.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (6 samples, 0.01%)</title><rect x="580.4" y="373" width="0.1" height="15.0" fill="rgb(253,158,27)" rx="2" ry="2" />
<text  x="583.35" y="383.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.15%)</title><rect x="269.9" y="277" width="1.8" height="15.0" fill="rgb(225,32,32)" rx="2" ry="2" />
<text  x="272.87" y="287.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;boost::iterator_range&lt;mutation_fragment*&gt; &gt;::take_value (14 samples, 0.03%)</title><rect x="254.1" y="309" width="0.3" height="15.0" fill="rgb(214,110,11)" rx="2" ry="2" />
<text  x="257.06" y="319.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (121 samples, 0.26%)</title><rect x="1185.8" y="613" width="3.1" height="15.0" fill="rgb(211,147,0)" rx="2" ry="2" />
<text  x="1188.84" y="623.5" ></text>
</g>
<g >
<title>absl::container_internal::raw_hash_set&lt;absl::container_internal::FlatHashMapPolicy&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt;, keyspace&gt;, sstring_hash, sstring_eq, std::allocator&lt;std::pair&lt;seastar::basic_sstring&lt;char, unsigned int, 15u, true&gt; const, keyspace&gt; &gt; &gt;::contains&lt;std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt; &gt; (86 samples, 0.18%)</title><rect x="824.8" y="341" width="2.1" height="15.0" fill="rgb(220,100,11)" rx="2" ry="2" />
<text  x="827.77" y="351.5" ></text>
</g>
<g >
<title>seastar::future_state&lt;seastar::internal::monostate&gt;::move_it (10 samples, 0.02%)</title><rect x="758.0" y="405" width="0.3" height="15.0" fill="rgb(233,2,4)" rx="2" ry="2" />
<text  x="761.02" y="415.5" ></text>
</g>
<g >
<title>seastar::memory::cpu_pages::try_foreign_free (8 samples, 0.02%)</title><rect x="50.8" y="453" width="0.2" height="15.0" fill="rgb(209,142,30)" rx="2" ry="2" />
<text  x="53.84" y="463.5" ></text>
</g>
<g >
<title>merging_reader&lt;mutation_reader_merger&gt;::merging_reader (5 samples, 0.01%)</title><rect x="429.2" y="309" width="0.1" height="15.0" fill="rgb(220,200,54)" rx="2" ry="2" />
<text  x="432.19" y="319.5" ></text>
</g>
<g >
<title>std::__make_heap&lt;__gnu_cxx::__normal_iterator&lt;boost::iterator_range&lt;boost::intrusive::tree_iterator&lt;boost::intrusive::mhtraits&lt;range_tombstone_entry, boost::intrusive::set_member_hook&lt;boost::intrusive::link_mode&lt; (7 samples, 0.01%)</title><rect x="211.0" y="149" width="0.2" height="15.0" fill="rgb(205,90,0)" rx="2" ry="2" />
<text  x="213.98" y="159.5" ></text>
</g>
<g >
<title>operator new (9 samples, 0.02%)</title><rect x="102.1" y="421" width="0.2" height="15.0" fill="rgb(219,163,10)" rx="2" ry="2" />
<text  x="105.13" y="431.5" ></text>
</g>
<g >
<title>compact_radix_tree::tree&lt;cell_and_hash, unsigned int&gt;::node_head::clone&lt;row::row (5 samples, 0.01%)</title><rect x="865.2" y="261" width="0.1" height="15.0" fill="rgb(227,140,33)" rx="2" ry="2" />
<text  x="868.16" y="271.5" ></text>
</g>
</g>
</svg>
